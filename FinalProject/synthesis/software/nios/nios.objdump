
nios.elf:     file format elf32-littlenios2
nios.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000224

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00010104 memsz 0x00010104 flags r-x
    LOAD off    0x00011124 vaddr 0x00010124 paddr 0x00011d90 align 2**12
         filesz 0x00001c6c memsz 0x00001c6c flags rw-
    LOAD off    0x000139fc vaddr 0x000139fc paddr 0x000139fc align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000204  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f860  00000224  00000224  00001224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006a0  0000fa84  0000fa84  00010a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c6c  00010124  00011d90  00011124  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  000139fc  000139fc  000139fc  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00013b58  00013b58  00012d90  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  00012d90  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f98  00000000  00000000  00012dc0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00049f83  00000000  00000000  00013d58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000ee1c  00000000  00000000  0005dcdb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00018425  00000000  00000000  0006caf7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000021bc  00000000  00000000  00084f1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000404b  00000000  00000000  000870d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001cef9  00000000  00000000  0008b123  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000a801c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001ce8  00000000  00000000  000a8030  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000acf23  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000acf26  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000acf32  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000acf33  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  000acf34  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000acf3f  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000acf4a  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000c  00000000  00000000  000acf55  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000040  00000000  00000000  000acf61  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000224 l    d  .text	00000000 .text
0000fa84 l    d  .rodata	00000000 .rodata
00010124 l    d  .rwdata	00000000 .rwdata
000139fc l    d  .bss	00000000 .bss
00013b58 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/nothi/quartus/ECE541FinalProject/FinalProject/synthesis/software/nios_bsp//obj/HAL/src/crt0.o
0000025c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00010124 l     O .rwdata	00000040 flowers.3023
00010164 l     O .rwdata	00000040 strs.3030
000139fc l     O .bss	00000004 attributes.3031
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
00000610 l     F .text	00000008 __fp_lock
00000624 l     F .text	00000168 __sinit.part.0
0000078c l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
000101a4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
000016cc l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtol.c
00001ae4 l     F .text	0000023c _strtol_l.isra.0
00000000 l    df *ABS*	00000000 vfprintf.c
00003ef4 l     F .text	000000c0 __sbprintf
0000fbfa l     O .rodata	00000010 blanks.5226
0000fbea l     O .rodata	00000010 zeroes.5227
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 dtoa.c
000041d0 l     F .text	00000234 quorem
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0000fe9c l     O .rodata	0000000c p05.4024
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
00008138 l     F .text	000000f4 __sprint_r.part.0
00009598 l     F .text	000000c0 __sbprintf
0000ffd0 l     O .rodata	00000010 blanks.5203
0000ffc0 l     O .rodata	00000010 zeroes.5204
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d50c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d624 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d650 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d748 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d834 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d920 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000db00 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00011d80 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000dd64 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000dea4 l     F .text	00000034 alt_dev_reg
00010ce4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e17c l     F .text	00000204 altera_avalon_jtag_uart_irq
0000e380 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000eb08 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000ef5c l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000f0ac l     F .text	0000003c alt_get_errno
0000f0e8 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00013a2c g     O .bss	00000004 alt_instruction_exception_handler
00007954 g     F .text	00000074 _mprec_log10
00007a34 g     F .text	00000074 __any_on
00009974 g     F .text	00000058 _isatty_r
0000fea8 g     O .rodata	00000028 __mprec_tinytens
0000da3c g     F .text	0000007c alt_main
000015f0 g     F .text	000000cc _puts_r
00013a58 g     O .bss	00000100 alt_irq
00006790 g     F .text	00000064 _lseek_r
00011d90 g       *ABS*	00000000 __flash_rwdata_start
0000bed4 g     F .text	00000080 .hidden __eqdf2
00013b58 g       *ABS*	00000000 __alt_heap_start
000015b8 g     F .text	00000038 printf
00009ce0 g     F .text	0000006c _wcrtomb_r
000002ac g     F .text	000000a4 printClassificationResult
000019e8 g     F .text	0000005c __sseek
0000091c g     F .text	00000010 __sinit
00009b84 g     F .text	00000148 __swbuf_r
000099cc g     F .text	00000070 _setlocale_r
00000794 g     F .text	00000078 __sfmoreglue
0000dadc g     F .text	00000024 __malloc_unlock
000069c8 g     F .text	0000012c memmove
00000908 g     F .text	00000014 _cleanup
00006af4 g     F .text	000000a4 _Balloc
0000bf54 g     F .text	000000f0 .hidden __gtdf2
0000f4c8 g     F .text	00000024 altera_nios2_gen2_irq_init
00000350 g     F .text	000000c8 getAttributesFromUser
00000000 g     F .entry	0000000c __reset
00006770 g     F .text	00000008 __localeconv_l
00000020 g       *ABS*	00000000 __flash_exceptions_start
00009914 g     F .text	00000060 _fstat_r
00013a0c g     O .bss	00000004 errno
00001960 g     F .text	00000008 __seofread
00013a18 g     O .bss	00000004 alt_argv
00019d44 g       *ABS*	00000000 _gp
000005f8 g     F .text	00000018 fgets
00010b64 g     O .rwdata	00000180 alt_fd_list
00000260 g     F .text	0000004c resolveToFlower
0000f4ec g     F .text	00000090 alt_find_dev
00001398 g     F .text	00000100 memcpy
00000618 g     F .text	0000000c _cleanup_r
0000d354 g     F .text	000000c8 .hidden __floatsidf
0000f030 g     F .text	0000007c alt_io_redirect
0000c044 g     F .text	000000f0 .hidden __ltdf2
0000fa84 g       *ABS*	00000000 __DTOR_END__
000016bc g     F .text	00000010 puts
0000f73c g     F .text	00000098 alt_exception_cause_generated_bad_addr
000078b0 g     F .text	000000a4 __ratio
00009580 g     F .text	00000018 __vfiprintf_internal
0000e57c g     F .text	0000021c altera_avalon_jtag_uart_read
00001588 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000aae8 g     F .text	00000064 .hidden __udivsi3
0000d784 g     F .text	000000b0 isatty
0000fef8 g     O .rodata	000000c8 __mprec_tens
00013a08 g     O .bss	00000004 __malloc_top_pad
00006778 g     F .text	0000000c _localeconv_r
00006f1c g     F .text	00000034 __i2b
0000629c g     F .text	000004d4 __sfvwrite_r
000018b4 g     F .text	00000058 _sbrk_r
00007aa8 g     F .text	00000064 _read_r
00011d78 g     O .rwdata	00000004 alt_max_fd
00005acc g     F .text	000000f8 _fclose_r
00005e5c g     F .text	00000028 fflush
00013a04 g     O .bss	00000004 __malloc_max_sbrked_mem
0000abd0 g     F .text	000009a0 .hidden __adddf3
00007664 g     F .text	00000104 __b2d
0000a428 g     F .text	000005c8 .hidden __umoddi3
0000d95c g     F .text	000000e0 lseek
00011d58 g     O .rwdata	00000004 _global_impure_ptr
00007b0c g     F .text	0000062c _realloc_r
00013b58 g       *ABS*	00000000 __bss_end
0000ee78 g     F .text	000000e4 alt_iic_isr_register
00001d24 g     F .text	00000018 strtol_l
0000f3c0 g     F .text	00000108 alt_tick
00009e0c g     F .text	0000061c .hidden __udivdi3
00009874 g     F .text	00000024 _fputwc_r
0000fed0 g     O .rodata	00000028 __mprec_bigtens
00006cf8 g     F .text	00000110 __s2b
0000d41c g     F .text	0000009c .hidden __floatunsidf
000073f4 g     F .text	00000058 __mcmp
0000093c g     F .text	00000014 __fp_lock_all
0000ee2c g     F .text	0000004c alt_ic_irq_enabled
0000f324 g     F .text	0000009c alt_alarm_stop
00001d3c g     F .text	00000018 strtol
00013a20 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000c8 alt_irq_handler
00010b3c g     O .rwdata	00000028 alt_dev_null
0000eae8 g     F .text	00000020 alt_dcache_flush_all
00006e08 g     F .text	00000064 __hi0bits
0000d2d4 g     F .text	00000080 .hidden __fixdfsi
00011d90 g       *ABS*	00000000 __ram_rwdata_end
00011d70 g     O .rwdata	00000008 alt_dev_list
0000dda0 g     F .text	00000104 write
00010124 g       *ABS*	00000000 __ram_rodata_end
0000d68c g     F .text	000000bc fstat
0000c044 g     F .text	000000f0 .hidden __ledf2
00007190 g     F .text	00000128 __pow5mult
00008244 g     F .text	0000133c ___vfiprintf_internal_r
0000ab4c g     F .text	0000005c .hidden __umodsi3
00013b58 g       *ABS*	00000000 end
00011d44 g     O .rwdata	00000004 leds
0000047c g     F .text	0000000c _atoi_r
0000e0bc g     F .text	000000c0 altera_avalon_jtag_uart_init
000001c4 g     F .exceptions	00000060 alt_instruction_exception_entry
0000fa84 g       *ABS*	00000000 __CTOR_LIST__
0001f400 g       *ABS*	00000000 __alt_stack_pointer
0000d4b8 g     F .text	00000054 .hidden __clzsi2
0000e798 g     F .text	00000224 altera_avalon_jtag_uart_write
0000092c g     F .text	00000004 __sfp_lock_acquire
000012b0 g     F .text	000000e8 memchr
00001d54 g     F .text	00002188 ___vfprintf_internal_r
00005fa0 g     F .text	000002fc _free_r
0000fd0b g     O .rodata	00000180 _ctype_b
00009a3c g     F .text	0000000c __locale_mb_cur_max
0000f938 g     F .text	00000118 __call_exitprocs
00011d60 g     O .rwdata	00000004 __malloc_sbrk_base
00000224 g     F .text	0000003c _start
00013a24 g     O .bss	00000004 _alt_tick_rate
000072b8 g     F .text	0000013c __lshift
00013a28 g     O .bss	00000004 _alt_nticks
0000db3c g     F .text	00000108 read
0000df10 g     F .text	00000048 alt_sys_init
00011d4c g     O .rwdata	00000004 btns
0000f8a8 g     F .text	00000090 __register_exitproc
00006f50 g     F .text	00000240 __multiply
0000e420 g     F .text	00000068 altera_avalon_jtag_uart_close
0000aba8 g     F .text	00000028 .hidden __mulsi3
00010124 g       *ABS*	00000000 __ram_rwdata_start
0000fa84 g       *ABS*	00000000 __ram_rodata_start
00013a30 g     O .bss	00000028 __malloc_current_mallinfo
00007768 g     F .text	00000148 __d2b
0000df58 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f684 g     F .text	000000b8 alt_get_fd
00004178 g     F .text	00000058 _close_r
0000f81c g     F .text	0000008c memcmp
0000e018 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013b58 g       *ABS*	00000000 __alt_stack_base
0000e068 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00004018 g     F .text	00000160 __swsetup_r
0000b570 g     F .text	00000964 .hidden __divdf3
0000080c g     F .text	000000fc __sfp
000079c8 g     F .text	0000006c __copybits
000105c8 g     O .rwdata	00000408 __malloc_av_
00000938 g     F .text	00000004 __sinit_lock_release
0000c134 g     F .text	000007e0 .hidden __muldf3
0000190c g     F .text	00000054 __sread
00011d50 g     O .rwdata	00000004 nios_input
0000f57c g     F .text	00000108 alt_find_file
0000eb44 g     F .text	000000a4 alt_dev_llist_insert
0000dab8 g     F .text	00000024 __malloc_lock
0000dcb4 g     F .text	000000b0 sbrk
00005dfc g     F .text	00000060 _fflush_r
00009658 g     F .text	000000cc _calloc_r
000139fc g       *ABS*	00000000 __bss_start
00001498 g     F .text	000000f0 memset
00011d54 g     O .rwdata	00000004 nios_output
00000418 g     F .text	00000058 main
00013a1c g     O .bss	00000004 alt_envp
00013a00 g     O .bss	00000004 __malloc_max_total_mem
0000dfb8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009ccc g     F .text	00000014 __swbuf
00001a44 g     F .text	00000008 __sclose
0001f400 g       *ABS*	00000000 __alt_heap_limit
00005bc4 g     F .text	00000010 fclose
00001d20 g     F .text	00000004 _strtol_r
00004404 g     F .text	000016c8 _dtoa_r
00000abc g     F .text	000007f4 _malloc_r
00009ddc g     F .text	00000030 __ascii_wctomb
00011d7c g     O .rwdata	00000004 alt_errno
00000964 g     F .text	000000a4 _fwalk
00000488 g     F .text	00000170 _fgets_r
00009a5c g     F .text	0000000c _mbtowc_r
0000a9f0 g     F .text	00000080 .hidden __divsi3
00005e84 g     F .text	0000011c _malloc_trim_r
0000fa84 g       *ABS*	00000000 __CTOR_END__
00009aac g     F .text	000000d8 strcmp
0000fa84 g       *ABS*	00000000 __flash_rodata_start
0000fa84 g       *ABS*	00000000 __DTOR_LIST__
0000bed4 g     F .text	00000080 .hidden __nedf2
0000ded8 g     F .text	00000038 alt_irq_init
0000dc44 g     F .text	00000070 alt_release_fd
0000fff0 g     O .rodata	00000100 .hidden __clz_tab
00013a10 g     O .bss	00000004 _PathLocale
0000f7d4 g     F .text	00000014 atexit
00003fb4 g     F .text	00000064 _write_r
00009a48 g     F .text	00000014 setlocale
00011d5c g     O .rwdata	00000004 _impure_ptr
00013a14 g     O .bss	00000004 alt_argc
00005bd4 g     F .text	00000228 __sflush_r
0000ec48 g     F .text	00000060 _do_dtors
00011d48 g     O .rwdata	00000004 sw
000016e8 g     F .text	000001cc __srefill_r
00000020 g       .exceptions	00000000 alt_irq_entry
00009a68 g     F .text	00000044 __ascii_mbtowc
00007608 g     F .text	0000005c __ulp
00000950 g     F .text	00000014 __fp_unlock_all
00011d68 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00006784 g     F .text	0000000c localeconv
000067f4 g     F .text	00000098 __swhatbuf_r
0000ecc8 g     F .text	00000050 alt_ic_isr_register
00011d90 g       *ABS*	00000000 _edata
00013b58 g       *ABS*	00000000 _end
00009724 g     F .text	00000150 __fputwc
00000224 g       *ABS*	00000000 __ram_exceptions_end
0000e488 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0000eda0 g     F .text	0000008c alt_ic_irq_disable
00001968 g     F .text	00000080 __swrite
00011d64 g     O .rwdata	00000004 __malloc_trim_threshold
0000f7e8 g     F .text	00000034 exit
00000a08 g     F .text	000000b4 _fwalk_reent
0000744c g     F .text	000001bc __mdiff
0000aa70 g     F .text	00000078 .hidden __modsi3
0001f400 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00000930 g     F .text	00000004 __sfp_lock_release
00000470 g     F .text	0000000c atoi
0000fc0a g     O .rodata	00000101 _ctype_
0000d280 g     F .text	00000054 .hidden __unorddf2
0000fa50 g     F .text	00000034 _exit
0000e9bc g     F .text	0000012c alt_alarm_start
0000688c g     F .text	0000013c __smakebuf_r
00001a4c g     F .text	00000098 strlen
0000f1c4 g     F .text	00000160 open
0000bf54 g     F .text	000000f0 .hidden __gedf2
0000822c g     F .text	00000018 __sprint_r
0000eca8 g     F .text	00000020 alt_icache_flush_all
00011d84 g     O .rwdata	00000004 alt_priority_mask
0000ed18 g     F .text	00000088 alt_ic_irq_enable
00003edc g     F .text	00000018 __vfprintf_internal
00009dd0 g     F .text	0000000c _wctomb_r
0000c914 g     F .text	0000096c .hidden __subdf3
00006e6c g     F .text	000000b0 __lo0bits
00011d88 g     O .rwdata	00000008 alt_alarm_list
0000ebe8 g     F .text	00000060 _do_ctors
00009d4c g     F .text	00000084 wcrtomb
0000d548 g     F .text	000000dc close
000109d0 g     O .rwdata	0000016c __global_locale
0000d89c g     F .text	00000084 alt_load
00009898 g     F .text	0000007c fputwc
00000934 g     F .text	00000004 __sinit_lock_acquire
00006bbc g     F .text	0000013c __multadd
00006b98 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408914 	ori	at,at,548
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001c40 	call	1c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001126 	beq	r2,zero,180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	00800074 	movhi	r2,1
 148:	1885883a 	add	r2,r3,r2
 14c:	10ce9617 	ldw	r3,14936(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	00800074 	movhi	r2,1
 15c:	2085883a 	add	r2,r4,r2
 160:	108e9717 	ldw	r2,14940(r2)
 164:	1009883a 	mov	r4,r2
 168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 16c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 170:	0005313a 	rdctl	r2,ipending
 174:	e0bffb15 	stw	r2,-20(fp)
  return active;
 178:	e0bffb17 	ldw	r2,-20(fp)
 17c:	00000706 	br	19c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
 180:	e0bffe17 	ldw	r2,-8(fp)
 184:	1085883a 	add	r2,r2,r2
 188:	e0bffe15 	stw	r2,-8(fp)
      i++;
 18c:	e0bffd17 	ldw	r2,-12(fp)
 190:	10800044 	addi	r2,r2,1
 194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 198:	003fe406 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 19c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a0:	e0bfff17 	ldw	r2,-4(fp)
 1a4:	103fde1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a8:	0001883a 	nop
}
 1ac:	0001883a 	nop
 1b0:	e037883a 	mov	sp,fp
 1b4:	dfc00117 	ldw	ra,4(sp)
 1b8:	df000017 	ldw	fp,0(sp)
 1bc:	dec00204 	addi	sp,sp,8
 1c0:	f800283a 	ret

000001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c4:	defffb04 	addi	sp,sp,-20
 1c8:	dfc00415 	stw	ra,16(sp)
 1cc:	df000315 	stw	fp,12(sp)
 1d0:	df000304 	addi	fp,sp,12
 1d4:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1d8:	00bfffc4 	movi	r2,-1
 1dc:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e4:	d0a73a17 	ldw	r2,-25368(gp)
 1e8:	10000726 	beq	r2,zero,208 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1ec:	d0a73a17 	ldw	r2,-25368(gp)
 1f0:	e0ffff17 	ldw	r3,-4(fp)
 1f4:	e1bffe17 	ldw	r6,-8(fp)
 1f8:	e17ffd17 	ldw	r5,-12(fp)
 1fc:	1809883a 	mov	r4,r3
 200:	103ee83a 	callr	r2
 204:	00000206 	br	210 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 208:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 20c:	0005883a 	mov	r2,zero
}
 210:	e037883a 	mov	sp,fp
 214:	dfc00117 	ldw	ra,4(sp)
 218:	df000017 	ldw	fp,0(sp)
 21c:	dec00204 	addi	sp,sp,8
 220:	f800283a 	ret

Disassembly of section .text:

00000224 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     224:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     228:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
     22c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     230:	d6a75114 	ori	gp,gp,40260
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     234:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     238:	108e7f14 	ori	r2,r2,14844

    movhi r3, %hi(__bss_end)
     23c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     240:	18ced614 	ori	r3,r3,15192

    beq r2, r3, 1f
     244:	10c00326 	beq	r2,r3,254 <_start+0x30>

0:
    stw zero, (r2)
     248:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     24c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     250:	10fffd36 	bltu	r2,r3,248 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     254:	000d89c0 	call	d89c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     258:	000da3c0 	call	da3c <alt_main>

0000025c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     25c:	003fff06 	br	25c <alt_after_alt_main>

00000260 <resolveToFlower>:
//General 32 bit input @ 0x21010
uint *nios_input = (uint*)0x21010;
//General 32 bit output @ 0x21000
uint *nios_output = (uint*)0x21000;

char* resolveToFlower(uint flower) {
     260:	defffe04 	addi	sp,sp,-8
     264:	df000115 	stw	fp,4(sp)
     268:	df000104 	addi	fp,sp,4
     26c:	e13fff15 	stw	r4,-4(fp)
	static char flowers[][16] = { "Iris-setosa", "Iris-versicolor", "Iris-virginica", "uh oh" };
	return flower > 2 ? flowers[3] : flowers[flower];
     270:	e0bfff17 	ldw	r2,-4(fp)
     274:	108000e8 	cmpgeui	r2,r2,3
     278:	1000061e 	bne	r2,zero,294 <resolveToFlower+0x34>
     27c:	e0bfff17 	ldw	r2,-4(fp)
     280:	1006913a 	slli	r3,r2,4
     284:	00800074 	movhi	r2,1
     288:	10804904 	addi	r2,r2,292
     28c:	1885883a 	add	r2,r3,r2
     290:	00000206 	br	29c <resolveToFlower+0x3c>
     294:	00800074 	movhi	r2,1
     298:	10805504 	addi	r2,r2,340
}
     29c:	e037883a 	mov	sp,fp
     2a0:	df000017 	ldw	fp,0(sp)
     2a4:	dec00104 	addi	sp,sp,4
     2a8:	f800283a 	ret

000002ac <printClassificationResult>:

void printClassificationResult() {
     2ac:	defffb04 	addi	sp,sp,-20
     2b0:	dfc00415 	stw	ra,16(sp)
     2b4:	df000315 	stw	fp,12(sp)
     2b8:	dc000215 	stw	r16,8(sp)
     2bc:	df000304 	addi	fp,sp,12
	uint actual = 0xFF & *nios_input;
     2c0:	d0a00317 	ldw	r2,-32756(gp)
     2c4:	10800017 	ldw	r2,0(r2)
     2c8:	10803fcc 	andi	r2,r2,255
     2cc:	e0bffe15 	stw	r2,-8(fp)
    uint classified = 0xFF & (*nios_input >> 8);
     2d0:	d0a00317 	ldw	r2,-32756(gp)
     2d4:	10800017 	ldw	r2,0(r2)
     2d8:	1004d23a 	srli	r2,r2,8
     2dc:	10803fcc 	andi	r2,r2,255
     2e0:	e0bffd15 	stw	r2,-12(fp)

	if (actual == classified) {
     2e4:	e0fffe17 	ldw	r3,-8(fp)
     2e8:	e0bffd17 	ldw	r2,-12(fp)
     2ec:	1880041e 	bne	r3,r2,300 <printClassificationResult+0x54>
		printf("Classification correct!\n");
     2f0:	01000074 	movhi	r4,1
     2f4:	213ea104 	addi	r4,r4,-1404
     2f8:	00016bc0 	call	16bc <puts>
     2fc:	00000306 	br	30c <printClassificationResult+0x60>
	} else {
		printf("Classification wrong. :(\n");
     300:	01000074 	movhi	r4,1
     304:	213ea704 	addi	r4,r4,-1380
     308:	00016bc0 	call	16bc <puts>
	}

	printf("Actual: %s\nClassified as: %s\n\n", resolveToFlower(actual), resolveToFlower(classified));
     30c:	e13ffe17 	ldw	r4,-8(fp)
     310:	00002600 	call	260 <resolveToFlower>
     314:	1021883a 	mov	r16,r2
     318:	e13ffd17 	ldw	r4,-12(fp)
     31c:	00002600 	call	260 <resolveToFlower>
     320:	100d883a 	mov	r6,r2
     324:	800b883a 	mov	r5,r16
     328:	01000074 	movhi	r4,1
     32c:	213eae04 	addi	r4,r4,-1352
     330:	00015b80 	call	15b8 <printf>
}
     334:	0001883a 	nop
     338:	e6ffff04 	addi	sp,fp,-4
     33c:	dfc00217 	ldw	ra,8(sp)
     340:	df000117 	ldw	fp,4(sp)
     344:	dc000017 	ldw	r16,0(sp)
     348:	dec00304 	addi	sp,sp,12
     34c:	f800283a 	ret

00000350 <getAttributesFromUser>:

char* getAttributesFromUser() {
     350:	defffc04 	addi	sp,sp,-16
     354:	dfc00315 	stw	ra,12(sp)
     358:	df000215 	stw	fp,8(sp)
     35c:	df000204 	addi	fp,sp,8
    static char strs[][16] = { "Sepal length", "Sepal width", "Petal length", "Petal width" };
    static char attributes[4];

    printf("An Iris flower can be described using 4 attributes: sepal length and width, and petal length and width.\nPlease enter the 4 attributes in millimeters between 0 and 255.\n\n");
     360:	01000074 	movhi	r4,1
     364:	213eb604 	addi	r4,r4,-1320
     368:	00016bc0 	call	16bc <puts>

    for (int i = 0; i < 4; i++) {
     36c:	e03fff15 	stw	zero,-4(fp)
     370:	00002006 	br	3f4 <getAttributesFromUser+0xa4>
        printf("%s: ", strs[i]);
     374:	e0bfff17 	ldw	r2,-4(fp)
     378:	1006913a 	slli	r3,r2,4
     37c:	00800074 	movhi	r2,1
     380:	10805904 	addi	r2,r2,356
     384:	1885883a 	add	r2,r3,r2
     388:	100b883a 	mov	r5,r2
     38c:	01000074 	movhi	r4,1
     390:	213ee104 	addi	r4,r4,-1148
     394:	00015b80 	call	15b8 <printf>

        char buf[4];
        fgets(buf, 4, stdin);
     398:	d0a00617 	ldw	r2,-32744(gp)
     39c:	10c00117 	ldw	r3,4(r2)
     3a0:	e0bffe04 	addi	r2,fp,-8
     3a4:	180d883a 	mov	r6,r3
     3a8:	01400104 	movi	r5,4
     3ac:	1009883a 	mov	r4,r2
     3b0:	00005f80 	call	5f8 <fgets>
        printf("You entered: %s\n", buf);
     3b4:	e0bffe04 	addi	r2,fp,-8
     3b8:	100b883a 	mov	r5,r2
     3bc:	01000074 	movhi	r4,1
     3c0:	213ee304 	addi	r4,r4,-1140
     3c4:	00015b80 	call	15b8 <printf>
        attributes[i] = (char)atoi(buf);
     3c8:	e0bffe04 	addi	r2,fp,-8
     3cc:	1009883a 	mov	r4,r2
     3d0:	00004700 	call	470 <atoi>
     3d4:	1009883a 	mov	r4,r2
     3d8:	e0ffff17 	ldw	r3,-4(fp)
     3dc:	d0a72e04 	addi	r2,gp,-25416
     3e0:	1885883a 	add	r2,r3,r2
     3e4:	11000005 	stb	r4,0(r2)
    for (int i = 0; i < 4; i++) {
     3e8:	e0bfff17 	ldw	r2,-4(fp)
     3ec:	10800044 	addi	r2,r2,1
     3f0:	e0bfff15 	stw	r2,-4(fp)
     3f4:	e0bfff17 	ldw	r2,-4(fp)
     3f8:	10800110 	cmplti	r2,r2,4
     3fc:	103fdd1e 	bne	r2,zero,374 <getAttributesFromUser+0x24>
    }

    return attributes;
     400:	d0a72e04 	addi	r2,gp,-25416
}
     404:	e037883a 	mov	sp,fp
     408:	dfc00117 	ldw	ra,4(sp)
     40c:	df000017 	ldw	fp,0(sp)
     410:	dec00204 	addi	sp,sp,8
     414:	f800283a 	ret

00000418 <main>:

int main()
{
     418:	defffd04 	addi	sp,sp,-12
     41c:	dfc00215 	stw	ra,8(sp)
     420:	df000115 	stw	fp,4(sp)
     424:	df000104 	addi	fp,sp,4
    //unsigned char *mem = mmap((void *)0x21000, 0x10, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
    //unsigned int *nios_output = (unsigned int*)mem;

    char *a = getAttributesFromUser();
     428:	00003500 	call	350 <getAttributesFromUser>
     42c:	e0bfff15 	stw	r2,-4(fp)

    *nios_output = *((int*)a);
     430:	e0bfff17 	ldw	r2,-4(fp)
     434:	10c00017 	ldw	r3,0(r2)
     438:	d0a00417 	ldw	r2,-32752(gp)
     43c:	10c00015 	stw	r3,0(r2)
    printf("%d", *nios_output);
     440:	d0a00417 	ldw	r2,-32752(gp)
     444:	10800017 	ldw	r2,0(r2)
     448:	100b883a 	mov	r5,r2
     44c:	01000074 	movhi	r4,1
     450:	213ee804 	addi	r4,r4,-1120
     454:	00015b80 	call	15b8 <printf>

    return 0;
     458:	0005883a 	mov	r2,zero
}
     45c:	e037883a 	mov	sp,fp
     460:	dfc00117 	ldw	ra,4(sp)
     464:	df000017 	ldw	fp,0(sp)
     468:	dec00204 	addi	sp,sp,8
     46c:	f800283a 	ret

00000470 <atoi>:
     470:	01800284 	movi	r6,10
     474:	000b883a 	mov	r5,zero
     478:	0001d3c1 	jmpi	1d3c <strtol>

0000047c <_atoi_r>:
     47c:	01c00284 	movi	r7,10
     480:	000d883a 	mov	r6,zero
     484:	0001d201 	jmpi	1d20 <_strtol_r>

00000488 <_fgets_r>:
     488:	30c00088 	cmpgei	r3,r6,2
     48c:	18005826 	beq	r3,zero,5f0 <_fgets_r+0x168>
     490:	defff804 	addi	sp,sp,-32
     494:	dd800615 	stw	r22,24(sp)
     498:	dd400515 	stw	r21,20(sp)
     49c:	dc800215 	stw	r18,8(sp)
     4a0:	dc400115 	stw	r17,4(sp)
     4a4:	dfc00715 	stw	ra,28(sp)
     4a8:	dd000415 	stw	r20,16(sp)
     4ac:	dcc00315 	stw	r19,12(sp)
     4b0:	dc000015 	stw	r16,0(sp)
     4b4:	202d883a 	mov	r22,r4
     4b8:	3825883a 	mov	r18,r7
     4bc:	282b883a 	mov	r21,r5
     4c0:	3023883a 	mov	r17,r6
     4c4:	20000226 	beq	r4,zero,4d0 <_fgets_r+0x48>
     4c8:	20800e17 	ldw	r2,56(r4)
     4cc:	10003726 	beq	r2,zero,5ac <_fgets_r+0x124>
     4d0:	94000117 	ldw	r16,4(r18)
     4d4:	8c7fffc4 	addi	r17,r17,-1
     4d8:	a829883a 	mov	r20,r21
     4dc:	80001126 	beq	r16,zero,524 <_fgets_r+0x9c>
     4e0:	94c00017 	ldw	r19,0(r18)
     4e4:	8c001636 	bltu	r17,r16,540 <_fgets_r+0xb8>
     4e8:	800d883a 	mov	r6,r16
     4ec:	01400284 	movi	r5,10
     4f0:	9809883a 	mov	r4,r19
     4f4:	00012b00 	call	12b0 <memchr>
     4f8:	1000161e 	bne	r2,zero,554 <_fgets_r+0xcc>
     4fc:	9c05883a 	add	r2,r19,r16
     500:	a009883a 	mov	r4,r20
     504:	90000115 	stw	zero,4(r18)
     508:	90800015 	stw	r2,0(r18)
     50c:	800d883a 	mov	r6,r16
     510:	980b883a 	mov	r5,r19
     514:	8c23c83a 	sub	r17,r17,r16
     518:	00013980 	call	1398 <memcpy>
     51c:	a429883a 	add	r20,r20,r16
     520:	88002d26 	beq	r17,zero,5d8 <_fgets_r+0x150>
     524:	900b883a 	mov	r5,r18
     528:	b009883a 	mov	r4,r22
     52c:	00016e80 	call	16e8 <__srefill_r>
     530:	10002c1e 	bne	r2,zero,5e4 <_fgets_r+0x15c>
     534:	94000117 	ldw	r16,4(r18)
     538:	94c00017 	ldw	r19,0(r18)
     53c:	8c3fea2e 	bgeu	r17,r16,4e8 <_fgets_r+0x60>
     540:	880d883a 	mov	r6,r17
     544:	01400284 	movi	r5,10
     548:	9809883a 	mov	r4,r19
     54c:	00012b00 	call	12b0 <memchr>
     550:	10001826 	beq	r2,zero,5b4 <_fgets_r+0x12c>
     554:	10800044 	addi	r2,r2,1
     558:	14e3c83a 	sub	r17,r2,r19
     55c:	8461c83a 	sub	r16,r16,r17
     560:	a009883a 	mov	r4,r20
     564:	94000115 	stw	r16,4(r18)
     568:	90800015 	stw	r2,0(r18)
     56c:	880d883a 	mov	r6,r17
     570:	980b883a 	mov	r5,r19
     574:	00013980 	call	1398 <memcpy>
     578:	a469883a 	add	r20,r20,r17
     57c:	a0000005 	stb	zero,0(r20)
     580:	a805883a 	mov	r2,r21
     584:	dfc00717 	ldw	ra,28(sp)
     588:	dd800617 	ldw	r22,24(sp)
     58c:	dd400517 	ldw	r21,20(sp)
     590:	dd000417 	ldw	r20,16(sp)
     594:	dcc00317 	ldw	r19,12(sp)
     598:	dc800217 	ldw	r18,8(sp)
     59c:	dc400117 	ldw	r17,4(sp)
     5a0:	dc000017 	ldw	r16,0(sp)
     5a4:	dec00804 	addi	sp,sp,32
     5a8:	f800283a 	ret
     5ac:	000091c0 	call	91c <__sinit>
     5b0:	003fc706 	br	4d0 <_fgets_r+0x48>
     5b4:	9c45883a 	add	r2,r19,r17
     5b8:	8461c83a 	sub	r16,r16,r17
     5bc:	a009883a 	mov	r4,r20
     5c0:	94000115 	stw	r16,4(r18)
     5c4:	90800015 	stw	r2,0(r18)
     5c8:	880d883a 	mov	r6,r17
     5cc:	980b883a 	mov	r5,r19
     5d0:	00013980 	call	1398 <memcpy>
     5d4:	a469883a 	add	r20,r20,r17
     5d8:	a0000005 	stb	zero,0(r20)
     5dc:	a805883a 	mov	r2,r21
     5e0:	003fe806 	br	584 <_fgets_r+0xfc>
     5e4:	a57ffc1e 	bne	r20,r21,5d8 <_fgets_r+0x150>
     5e8:	0005883a 	mov	r2,zero
     5ec:	003fe506 	br	584 <_fgets_r+0xfc>
     5f0:	0005883a 	mov	r2,zero
     5f4:	f800283a 	ret

000005f8 <fgets>:
     5f8:	00800074 	movhi	r2,1
     5fc:	300f883a 	mov	r7,r6
     600:	280d883a 	mov	r6,r5
     604:	200b883a 	mov	r5,r4
     608:	11075717 	ldw	r4,7516(r2)
     60c:	00004881 	jmpi	488 <_fgets_r>

00000610 <__fp_lock>:
     610:	0005883a 	mov	r2,zero
     614:	f800283a 	ret

00000618 <_cleanup_r>:
     618:	01400034 	movhi	r5,0
     61c:	2956b304 	addi	r5,r5,23244
     620:	0000a081 	jmpi	a08 <_fwalk_reent>

00000624 <__sinit.part.0>:
     624:	00c00034 	movhi	r3,0
     628:	20800117 	ldw	r2,4(r4)
     62c:	18c18604 	addi	r3,r3,1560
     630:	20c00f15 	stw	r3,60(r4)
     634:	2140bb04 	addi	r5,r4,748
     638:	00c000c4 	movi	r3,3
     63c:	20c0b915 	stw	r3,740(r4)
     640:	2140ba15 	stw	r5,744(r4)
     644:	2000b815 	stw	zero,736(r4)
     648:	10001705 	stb	zero,92(r2)
     64c:	10001745 	stb	zero,93(r2)
     650:	10001785 	stb	zero,94(r2)
     654:	100017c5 	stb	zero,95(r2)
     658:	10001805 	stb	zero,96(r2)
     65c:	10001845 	stb	zero,97(r2)
     660:	10001885 	stb	zero,98(r2)
     664:	100018c5 	stb	zero,99(r2)
     668:	00c00104 	movi	r3,4
     66c:	10c00315 	stw	r3,12(r2)
     670:	02000034 	movhi	r8,0
     674:	20c00217 	ldw	r3,8(r4)
     678:	01c00034 	movhi	r7,0
     67c:	01800034 	movhi	r6,0
     680:	01400034 	movhi	r5,0
     684:	42064304 	addi	r8,r8,6412
     688:	39c65a04 	addi	r7,r7,6504
     68c:	31867a04 	addi	r6,r6,6632
     690:	29469104 	addi	r5,r5,6724
     694:	02400074 	movhi	r9,1
     698:	10001915 	stw	zero,100(r2)
     69c:	10000015 	stw	zero,0(r2)
     6a0:	10000115 	stw	zero,4(r2)
     6a4:	10000215 	stw	zero,8(r2)
     6a8:	10000415 	stw	zero,16(r2)
     6ac:	10000515 	stw	zero,20(r2)
     6b0:	10000615 	stw	zero,24(r2)
     6b4:	10800715 	stw	r2,28(r2)
     6b8:	12000815 	stw	r8,32(r2)
     6bc:	11c00915 	stw	r7,36(r2)
     6c0:	11800a15 	stw	r6,40(r2)
     6c4:	11400b15 	stw	r5,44(r2)
     6c8:	4a400284 	addi	r9,r9,10
     6cc:	1a400315 	stw	r9,12(r3)
     6d0:	18001915 	stw	zero,100(r3)
     6d4:	18000015 	stw	zero,0(r3)
     6d8:	18000115 	stw	zero,4(r3)
     6dc:	18000215 	stw	zero,8(r3)
     6e0:	18000415 	stw	zero,16(r3)
     6e4:	18001705 	stb	zero,92(r3)
     6e8:	18001745 	stb	zero,93(r3)
     6ec:	18001785 	stb	zero,94(r3)
     6f0:	180017c5 	stb	zero,95(r3)
     6f4:	18001805 	stb	zero,96(r3)
     6f8:	18001845 	stb	zero,97(r3)
     6fc:	18001885 	stb	zero,98(r3)
     700:	180018c5 	stb	zero,99(r3)
     704:	20800317 	ldw	r2,12(r4)
     708:	024000b4 	movhi	r9,2
     70c:	18000515 	stw	zero,20(r3)
     710:	18000615 	stw	zero,24(r3)
     714:	18c00715 	stw	r3,28(r3)
     718:	1a000815 	stw	r8,32(r3)
     71c:	19c00915 	stw	r7,36(r3)
     720:	19800a15 	stw	r6,40(r3)
     724:	19400b15 	stw	r5,44(r3)
     728:	4a400484 	addi	r9,r9,18
     72c:	10001915 	stw	zero,100(r2)
     730:	10000015 	stw	zero,0(r2)
     734:	10000115 	stw	zero,4(r2)
     738:	10000215 	stw	zero,8(r2)
     73c:	12400315 	stw	r9,12(r2)
     740:	10000415 	stw	zero,16(r2)
     744:	10000515 	stw	zero,20(r2)
     748:	10000615 	stw	zero,24(r2)
     74c:	10001705 	stb	zero,92(r2)
     750:	10001745 	stb	zero,93(r2)
     754:	10001785 	stb	zero,94(r2)
     758:	100017c5 	stb	zero,95(r2)
     75c:	10001805 	stb	zero,96(r2)
     760:	10001845 	stb	zero,97(r2)
     764:	10001885 	stb	zero,98(r2)
     768:	100018c5 	stb	zero,99(r2)
     76c:	10800715 	stw	r2,28(r2)
     770:	12000815 	stw	r8,32(r2)
     774:	11c00915 	stw	r7,36(r2)
     778:	11800a15 	stw	r6,40(r2)
     77c:	11400b15 	stw	r5,44(r2)
     780:	00800044 	movi	r2,1
     784:	20800e15 	stw	r2,56(r4)
     788:	f800283a 	ret

0000078c <__fp_unlock>:
     78c:	0005883a 	mov	r2,zero
     790:	f800283a 	ret

00000794 <__sfmoreglue>:
     794:	defffc04 	addi	sp,sp,-16
     798:	dc800215 	stw	r18,8(sp)
     79c:	2825883a 	mov	r18,r5
     7a0:	dc000015 	stw	r16,0(sp)
     7a4:	01401a04 	movi	r5,104
     7a8:	2021883a 	mov	r16,r4
     7ac:	913fffc4 	addi	r4,r18,-1
     7b0:	dfc00315 	stw	ra,12(sp)
     7b4:	dc400115 	stw	r17,4(sp)
     7b8:	000aba80 	call	aba8 <__mulsi3>
     7bc:	8009883a 	mov	r4,r16
     7c0:	11401d04 	addi	r5,r2,116
     7c4:	1023883a 	mov	r17,r2
     7c8:	0000abc0 	call	abc <_malloc_r>
     7cc:	1021883a 	mov	r16,r2
     7d0:	10000726 	beq	r2,zero,7f0 <__sfmoreglue+0x5c>
     7d4:	11000304 	addi	r4,r2,12
     7d8:	10000015 	stw	zero,0(r2)
     7dc:	14800115 	stw	r18,4(r2)
     7e0:	11000215 	stw	r4,8(r2)
     7e4:	89801a04 	addi	r6,r17,104
     7e8:	000b883a 	mov	r5,zero
     7ec:	00014980 	call	1498 <memset>
     7f0:	8005883a 	mov	r2,r16
     7f4:	dfc00317 	ldw	ra,12(sp)
     7f8:	dc800217 	ldw	r18,8(sp)
     7fc:	dc400117 	ldw	r17,4(sp)
     800:	dc000017 	ldw	r16,0(sp)
     804:	dec00404 	addi	sp,sp,16
     808:	f800283a 	ret

0000080c <__sfp>:
     80c:	defffd04 	addi	sp,sp,-12
     810:	00800074 	movhi	r2,1
     814:	dc000015 	stw	r16,0(sp)
     818:	14075617 	ldw	r16,7512(r2)
     81c:	dc400115 	stw	r17,4(sp)
     820:	dfc00215 	stw	ra,8(sp)
     824:	80800e17 	ldw	r2,56(r16)
     828:	2023883a 	mov	r17,r4
     82c:	10002b26 	beq	r2,zero,8dc <__sfp+0xd0>
     830:	8400b804 	addi	r16,r16,736
     834:	80c00117 	ldw	r3,4(r16)
     838:	80800217 	ldw	r2,8(r16)
     83c:	18ffffc4 	addi	r3,r3,-1
     840:	1800050e 	bge	r3,zero,858 <__sfp+0x4c>
     844:	00002106 	br	8cc <__sfp+0xc0>
     848:	18ffffc4 	addi	r3,r3,-1
     84c:	193fffd8 	cmpnei	r4,r3,-1
     850:	10801a04 	addi	r2,r2,104
     854:	20001d26 	beq	r4,zero,8cc <__sfp+0xc0>
     858:	1100030f 	ldh	r4,12(r2)
     85c:	203ffa1e 	bne	r4,zero,848 <__sfp+0x3c>
     860:	00fffff4 	movhi	r3,65535
     864:	18c00044 	addi	r3,r3,1
     868:	10001915 	stw	zero,100(r2)
     86c:	10000015 	stw	zero,0(r2)
     870:	10000115 	stw	zero,4(r2)
     874:	10000215 	stw	zero,8(r2)
     878:	10c00315 	stw	r3,12(r2)
     87c:	10000415 	stw	zero,16(r2)
     880:	10000515 	stw	zero,20(r2)
     884:	10000615 	stw	zero,24(r2)
     888:	10001705 	stb	zero,92(r2)
     88c:	10001745 	stb	zero,93(r2)
     890:	10001785 	stb	zero,94(r2)
     894:	100017c5 	stb	zero,95(r2)
     898:	10001805 	stb	zero,96(r2)
     89c:	10001845 	stb	zero,97(r2)
     8a0:	10001885 	stb	zero,98(r2)
     8a4:	100018c5 	stb	zero,99(r2)
     8a8:	10000c15 	stw	zero,48(r2)
     8ac:	10000d15 	stw	zero,52(r2)
     8b0:	10001115 	stw	zero,68(r2)
     8b4:	10001215 	stw	zero,72(r2)
     8b8:	dfc00217 	ldw	ra,8(sp)
     8bc:	dc400117 	ldw	r17,4(sp)
     8c0:	dc000017 	ldw	r16,0(sp)
     8c4:	dec00304 	addi	sp,sp,12
     8c8:	f800283a 	ret
     8cc:	80800017 	ldw	r2,0(r16)
     8d0:	10000526 	beq	r2,zero,8e8 <__sfp+0xdc>
     8d4:	1021883a 	mov	r16,r2
     8d8:	003fd606 	br	834 <__sfp+0x28>
     8dc:	8009883a 	mov	r4,r16
     8e0:	00006240 	call	624 <__sinit.part.0>
     8e4:	003fd206 	br	830 <__sfp+0x24>
     8e8:	01400104 	movi	r5,4
     8ec:	8809883a 	mov	r4,r17
     8f0:	00007940 	call	794 <__sfmoreglue>
     8f4:	80800015 	stw	r2,0(r16)
     8f8:	103ff61e 	bne	r2,zero,8d4 <__sfp+0xc8>
     8fc:	00c00304 	movi	r3,12
     900:	88c00015 	stw	r3,0(r17)
     904:	003fec06 	br	8b8 <__sfp+0xac>

00000908 <_cleanup>:
     908:	00800074 	movhi	r2,1
     90c:	11075617 	ldw	r4,7512(r2)
     910:	01400034 	movhi	r5,0
     914:	2956b304 	addi	r5,r5,23244
     918:	0000a081 	jmpi	a08 <_fwalk_reent>

0000091c <__sinit>:
     91c:	20800e17 	ldw	r2,56(r4)
     920:	10000126 	beq	r2,zero,928 <__sinit+0xc>
     924:	f800283a 	ret
     928:	00006241 	jmpi	624 <__sinit.part.0>

0000092c <__sfp_lock_acquire>:
     92c:	f800283a 	ret

00000930 <__sfp_lock_release>:
     930:	f800283a 	ret

00000934 <__sinit_lock_acquire>:
     934:	f800283a 	ret

00000938 <__sinit_lock_release>:
     938:	f800283a 	ret

0000093c <__fp_lock_all>:
     93c:	00800074 	movhi	r2,1
     940:	11075717 	ldw	r4,7516(r2)
     944:	01400034 	movhi	r5,0
     948:	29418404 	addi	r5,r5,1552
     94c:	00009641 	jmpi	964 <_fwalk>

00000950 <__fp_unlock_all>:
     950:	00800074 	movhi	r2,1
     954:	11075717 	ldw	r4,7516(r2)
     958:	01400034 	movhi	r5,0
     95c:	2941e304 	addi	r5,r5,1932
     960:	00009641 	jmpi	964 <_fwalk>

00000964 <_fwalk>:
     964:	defffa04 	addi	sp,sp,-24
     968:	dc800215 	stw	r18,8(sp)
     96c:	dfc00515 	stw	ra,20(sp)
     970:	dd000415 	stw	r20,16(sp)
     974:	dcc00315 	stw	r19,12(sp)
     978:	dc400115 	stw	r17,4(sp)
     97c:	dc000015 	stw	r16,0(sp)
     980:	2480b804 	addi	r18,r4,736
     984:	90001e26 	beq	r18,zero,a00 <_fwalk+0x9c>
     988:	2827883a 	mov	r19,r5
     98c:	0029883a 	mov	r20,zero
     990:	94400117 	ldw	r17,4(r18)
     994:	94000217 	ldw	r16,8(r18)
     998:	8c7fffc4 	addi	r17,r17,-1
     99c:	88000d16 	blt	r17,zero,9d4 <_fwalk+0x70>
     9a0:	8080030b 	ldhu	r2,12(r16)
     9a4:	8c7fffc4 	addi	r17,r17,-1
     9a8:	108000b0 	cmpltui	r2,r2,2
     9ac:	1000061e 	bne	r2,zero,9c8 <_fwalk+0x64>
     9b0:	8080038f 	ldh	r2,14(r16)
     9b4:	8009883a 	mov	r4,r16
     9b8:	10bfffe0 	cmpeqi	r2,r2,-1
     9bc:	1000021e 	bne	r2,zero,9c8 <_fwalk+0x64>
     9c0:	983ee83a 	callr	r19
     9c4:	a0a8b03a 	or	r20,r20,r2
     9c8:	88bfffd8 	cmpnei	r2,r17,-1
     9cc:	84001a04 	addi	r16,r16,104
     9d0:	103ff31e 	bne	r2,zero,9a0 <_fwalk+0x3c>
     9d4:	94800017 	ldw	r18,0(r18)
     9d8:	903fed1e 	bne	r18,zero,990 <_fwalk+0x2c>
     9dc:	a005883a 	mov	r2,r20
     9e0:	dfc00517 	ldw	ra,20(sp)
     9e4:	dd000417 	ldw	r20,16(sp)
     9e8:	dcc00317 	ldw	r19,12(sp)
     9ec:	dc800217 	ldw	r18,8(sp)
     9f0:	dc400117 	ldw	r17,4(sp)
     9f4:	dc000017 	ldw	r16,0(sp)
     9f8:	dec00604 	addi	sp,sp,24
     9fc:	f800283a 	ret
     a00:	0029883a 	mov	r20,zero
     a04:	003ff506 	br	9dc <_fwalk+0x78>

00000a08 <_fwalk_reent>:
     a08:	defff904 	addi	sp,sp,-28
     a0c:	dc800215 	stw	r18,8(sp)
     a10:	dfc00615 	stw	ra,24(sp)
     a14:	dd400515 	stw	r21,20(sp)
     a18:	dd000415 	stw	r20,16(sp)
     a1c:	dcc00315 	stw	r19,12(sp)
     a20:	dc400115 	stw	r17,4(sp)
     a24:	dc000015 	stw	r16,0(sp)
     a28:	2480b804 	addi	r18,r4,736
     a2c:	90002126 	beq	r18,zero,ab4 <_fwalk_reent+0xac>
     a30:	2829883a 	mov	r20,r5
     a34:	2027883a 	mov	r19,r4
     a38:	002b883a 	mov	r21,zero
     a3c:	94400117 	ldw	r17,4(r18)
     a40:	94000217 	ldw	r16,8(r18)
     a44:	8c7fffc4 	addi	r17,r17,-1
     a48:	88000e16 	blt	r17,zero,a84 <_fwalk_reent+0x7c>
     a4c:	8080030b 	ldhu	r2,12(r16)
     a50:	8c7fffc4 	addi	r17,r17,-1
     a54:	108000b0 	cmpltui	r2,r2,2
     a58:	1000071e 	bne	r2,zero,a78 <_fwalk_reent+0x70>
     a5c:	8080038f 	ldh	r2,14(r16)
     a60:	800b883a 	mov	r5,r16
     a64:	9809883a 	mov	r4,r19
     a68:	10bfffe0 	cmpeqi	r2,r2,-1
     a6c:	1000021e 	bne	r2,zero,a78 <_fwalk_reent+0x70>
     a70:	a03ee83a 	callr	r20
     a74:	a8aab03a 	or	r21,r21,r2
     a78:	88bfffd8 	cmpnei	r2,r17,-1
     a7c:	84001a04 	addi	r16,r16,104
     a80:	103ff21e 	bne	r2,zero,a4c <_fwalk_reent+0x44>
     a84:	94800017 	ldw	r18,0(r18)
     a88:	903fec1e 	bne	r18,zero,a3c <_fwalk_reent+0x34>
     a8c:	a805883a 	mov	r2,r21
     a90:	dfc00617 	ldw	ra,24(sp)
     a94:	dd400517 	ldw	r21,20(sp)
     a98:	dd000417 	ldw	r20,16(sp)
     a9c:	dcc00317 	ldw	r19,12(sp)
     aa0:	dc800217 	ldw	r18,8(sp)
     aa4:	dc400117 	ldw	r17,4(sp)
     aa8:	dc000017 	ldw	r16,0(sp)
     aac:	dec00704 	addi	sp,sp,28
     ab0:	f800283a 	ret
     ab4:	002b883a 	mov	r21,zero
     ab8:	003ff406 	br	a8c <_fwalk_reent+0x84>

00000abc <_malloc_r>:
     abc:	defff604 	addi	sp,sp,-40
     ac0:	dc400115 	stw	r17,4(sp)
     ac4:	2c4002c4 	addi	r17,r5,11
     ac8:	dc800215 	stw	r18,8(sp)
     acc:	dfc00915 	stw	ra,36(sp)
     ad0:	df000815 	stw	fp,32(sp)
     ad4:	ddc00715 	stw	r23,28(sp)
     ad8:	dd800615 	stw	r22,24(sp)
     adc:	dd400515 	stw	r21,20(sp)
     ae0:	dd000415 	stw	r20,16(sp)
     ae4:	dcc00315 	stw	r19,12(sp)
     ae8:	dc000015 	stw	r16,0(sp)
     aec:	888005e8 	cmpgeui	r2,r17,23
     af0:	2025883a 	mov	r18,r4
     af4:	10001b1e 	bne	r2,zero,b64 <_malloc_r+0xa8>
     af8:	29400468 	cmpgeui	r5,r5,17
     afc:	2800951e 	bne	r5,zero,d54 <_malloc_r+0x298>
     b00:	000dab80 	call	dab8 <__malloc_lock>
     b04:	04400404 	movi	r17,16
     b08:	00800604 	movi	r2,24
     b0c:	01800084 	movi	r6,2
     b10:	04c00074 	movhi	r19,1
     b14:	9cc17204 	addi	r19,r19,1480
     b18:	9885883a 	add	r2,r19,r2
     b1c:	14000117 	ldw	r16,4(r2)
     b20:	10fffe04 	addi	r3,r2,-8
     b24:	80c09e26 	beq	r16,r3,da0 <_malloc_r+0x2e4>
     b28:	80800117 	ldw	r2,4(r16)
     b2c:	81000317 	ldw	r4,12(r16)
     b30:	00ffff04 	movi	r3,-4
     b34:	10c4703a 	and	r2,r2,r3
     b38:	81400217 	ldw	r5,8(r16)
     b3c:	8085883a 	add	r2,r16,r2
     b40:	10c00117 	ldw	r3,4(r2)
     b44:	29000315 	stw	r4,12(r5)
     b48:	21400215 	stw	r5,8(r4)
     b4c:	18c00054 	ori	r3,r3,1
     b50:	10c00115 	stw	r3,4(r2)
     b54:	9009883a 	mov	r4,r18
     b58:	000dadc0 	call	dadc <__malloc_unlock>
     b5c:	80800204 	addi	r2,r16,8
     b60:	00007f06 	br	d60 <_malloc_r+0x2a4>
     b64:	00bffe04 	movi	r2,-8
     b68:	88a2703a 	and	r17,r17,r2
     b6c:	88007916 	blt	r17,zero,d54 <_malloc_r+0x298>
     b70:	89407836 	bltu	r17,r5,d54 <_malloc_r+0x298>
     b74:	000dab80 	call	dab8 <__malloc_lock>
     b78:	88807e28 	cmpgeui	r2,r17,504
     b7c:	10013326 	beq	r2,zero,104c <_malloc_r+0x590>
     b80:	8804d27a 	srli	r2,r17,9
     b84:	10008226 	beq	r2,zero,d90 <_malloc_r+0x2d4>
     b88:	10c00168 	cmpgeui	r3,r2,5
     b8c:	1801151e 	bne	r3,zero,fe4 <_malloc_r+0x528>
     b90:	8804d1ba 	srli	r2,r17,6
     b94:	11800e44 	addi	r6,r2,57
     b98:	300a90fa 	slli	r5,r6,3
     b9c:	12000e04 	addi	r8,r2,56
     ba0:	04c00074 	movhi	r19,1
     ba4:	9cc17204 	addi	r19,r19,1480
     ba8:	994b883a 	add	r5,r19,r5
     bac:	2c000117 	ldw	r16,4(r5)
     bb0:	297ffe04 	addi	r5,r5,-8
     bb4:	2c001126 	beq	r5,r16,bfc <_malloc_r+0x140>
     bb8:	80800117 	ldw	r2,4(r16)
     bbc:	00ffff04 	movi	r3,-4
     bc0:	10c4703a 	and	r2,r2,r3
     bc4:	1447c83a 	sub	r3,r2,r17
     bc8:	19000408 	cmpgei	r4,r3,16
     bcc:	2000e81e 	bne	r4,zero,f70 <_malloc_r+0x4b4>
     bd0:	1800e90e 	bge	r3,zero,f78 <_malloc_r+0x4bc>
     bd4:	01ffff04 	movi	r7,-4
     bd8:	00000606 	br	bf4 <_malloc_r+0x138>
     bdc:	80800117 	ldw	r2,4(r16)
     be0:	11c4703a 	and	r2,r2,r7
     be4:	1447c83a 	sub	r3,r2,r17
     be8:	19000408 	cmpgei	r4,r3,16
     bec:	2000e01e 	bne	r4,zero,f70 <_malloc_r+0x4b4>
     bf0:	1800e10e 	bge	r3,zero,f78 <_malloc_r+0x4bc>
     bf4:	84000317 	ldw	r16,12(r16)
     bf8:	2c3ff81e 	bne	r5,r16,bdc <_malloc_r+0x120>
     bfc:	9c000417 	ldw	r16,16(r19)
     c00:	02000074 	movhi	r8,1
     c04:	42017404 	addi	r8,r8,1488
     c08:	82006c26 	beq	r16,r8,dbc <_malloc_r+0x300>
     c0c:	80c00117 	ldw	r3,4(r16)
     c10:	00bfff04 	movi	r2,-4
     c14:	1884703a 	and	r2,r3,r2
     c18:	1447c83a 	sub	r3,r2,r17
     c1c:	19000410 	cmplti	r4,r3,16
     c20:	20011526 	beq	r4,zero,1078 <_malloc_r+0x5bc>
     c24:	9a000515 	stw	r8,20(r19)
     c28:	9a000415 	stw	r8,16(r19)
     c2c:	18010a0e 	bge	r3,zero,1058 <_malloc_r+0x59c>
     c30:	10c08028 	cmpgeui	r3,r2,512
     c34:	1800d21e 	bne	r3,zero,f80 <_malloc_r+0x4c4>
     c38:	1004d0fa 	srli	r2,r2,3
     c3c:	99400117 	ldw	r5,4(r19)
     c40:	10c00044 	addi	r3,r2,1
     c44:	1009d0ba 	srai	r4,r2,2
     c48:	180690fa 	slli	r3,r3,3
     c4c:	00800044 	movi	r2,1
     c50:	1104983a 	sll	r2,r2,r4
     c54:	98c7883a 	add	r3,r19,r3
     c58:	19000017 	ldw	r4,0(r3)
     c5c:	1144b03a 	or	r2,r2,r5
     c60:	197ffe04 	addi	r5,r3,-8
     c64:	81400315 	stw	r5,12(r16)
     c68:	81000215 	stw	r4,8(r16)
     c6c:	98800115 	stw	r2,4(r19)
     c70:	1c000015 	stw	r16,0(r3)
     c74:	24000315 	stw	r16,12(r4)
     c78:	3007d0ba 	srai	r3,r6,2
     c7c:	01000044 	movi	r4,1
     c80:	20c8983a 	sll	r4,r4,r3
     c84:	11005236 	bltu	r2,r4,dd0 <_malloc_r+0x314>
     c88:	2086703a 	and	r3,r4,r2
     c8c:	18000a1e 	bne	r3,zero,cb8 <_malloc_r+0x1fc>
     c90:	00ffff04 	movi	r3,-4
     c94:	2109883a 	add	r4,r4,r4
     c98:	30cc703a 	and	r6,r6,r3
     c9c:	2086703a 	and	r3,r4,r2
     ca0:	31800104 	addi	r6,r6,4
     ca4:	1800041e 	bne	r3,zero,cb8 <_malloc_r+0x1fc>
     ca8:	2109883a 	add	r4,r4,r4
     cac:	2086703a 	and	r3,r4,r2
     cb0:	31800104 	addi	r6,r6,4
     cb4:	183ffc26 	beq	r3,zero,ca8 <_malloc_r+0x1ec>
     cb8:	027fff04 	movi	r9,-4
     cbc:	301490fa 	slli	r10,r6,3
     cc0:	3017883a 	mov	r11,r6
     cc4:	9a95883a 	add	r10,r19,r10
     cc8:	500f883a 	mov	r7,r10
     ccc:	3c000317 	ldw	r16,12(r7)
     cd0:	3c00cd26 	beq	r7,r16,1008 <_malloc_r+0x54c>
     cd4:	80800117 	ldw	r2,4(r16)
     cd8:	1244703a 	and	r2,r2,r9
     cdc:	1447c83a 	sub	r3,r2,r17
     ce0:	19400408 	cmpgei	r5,r3,16
     ce4:	2800081e 	bne	r5,zero,d08 <_malloc_r+0x24c>
     ce8:	1800cc0e 	bge	r3,zero,101c <_malloc_r+0x560>
     cec:	84000317 	ldw	r16,12(r16)
     cf0:	3c00c526 	beq	r7,r16,1008 <_malloc_r+0x54c>
     cf4:	80800117 	ldw	r2,4(r16)
     cf8:	1244703a 	and	r2,r2,r9
     cfc:	1447c83a 	sub	r3,r2,r17
     d00:	19400410 	cmplti	r5,r3,16
     d04:	283ff81e 	bne	r5,zero,ce8 <_malloc_r+0x22c>
     d08:	81000317 	ldw	r4,12(r16)
     d0c:	81400217 	ldw	r5,8(r16)
     d10:	89800054 	ori	r6,r17,1
     d14:	81800115 	stw	r6,4(r16)
     d18:	29000315 	stw	r4,12(r5)
     d1c:	21400215 	stw	r5,8(r4)
     d20:	8463883a 	add	r17,r16,r17
     d24:	9c400515 	stw	r17,20(r19)
     d28:	9c400415 	stw	r17,16(r19)
     d2c:	19000054 	ori	r4,r3,1
     d30:	89000115 	stw	r4,4(r17)
     d34:	8085883a 	add	r2,r16,r2
     d38:	8a000315 	stw	r8,12(r17)
     d3c:	8a000215 	stw	r8,8(r17)
     d40:	10c00015 	stw	r3,0(r2)
     d44:	9009883a 	mov	r4,r18
     d48:	000dadc0 	call	dadc <__malloc_unlock>
     d4c:	80800204 	addi	r2,r16,8
     d50:	00000306 	br	d60 <_malloc_r+0x2a4>
     d54:	00800304 	movi	r2,12
     d58:	90800015 	stw	r2,0(r18)
     d5c:	0005883a 	mov	r2,zero
     d60:	dfc00917 	ldw	ra,36(sp)
     d64:	df000817 	ldw	fp,32(sp)
     d68:	ddc00717 	ldw	r23,28(sp)
     d6c:	dd800617 	ldw	r22,24(sp)
     d70:	dd400517 	ldw	r21,20(sp)
     d74:	dd000417 	ldw	r20,16(sp)
     d78:	dcc00317 	ldw	r19,12(sp)
     d7c:	dc800217 	ldw	r18,8(sp)
     d80:	dc400117 	ldw	r17,4(sp)
     d84:	dc000017 	ldw	r16,0(sp)
     d88:	dec00a04 	addi	sp,sp,40
     d8c:	f800283a 	ret
     d90:	01408004 	movi	r5,512
     d94:	01801004 	movi	r6,64
     d98:	02000fc4 	movi	r8,63
     d9c:	003f8006 	br	ba0 <_malloc_r+0xe4>
     da0:	14000317 	ldw	r16,12(r2)
     da4:	31800084 	addi	r6,r6,2
     da8:	143f5f1e 	bne	r2,r16,b28 <_malloc_r+0x6c>
     dac:	9c000417 	ldw	r16,16(r19)
     db0:	02000074 	movhi	r8,1
     db4:	42017404 	addi	r8,r8,1488
     db8:	823f941e 	bne	r16,r8,c0c <_malloc_r+0x150>
     dbc:	3007d0ba 	srai	r3,r6,2
     dc0:	01000044 	movi	r4,1
     dc4:	98800117 	ldw	r2,4(r19)
     dc8:	20c8983a 	sll	r4,r4,r3
     dcc:	113fae2e 	bgeu	r2,r4,c88 <_malloc_r+0x1cc>
     dd0:	9c000217 	ldw	r16,8(r19)
     dd4:	00bfff04 	movi	r2,-4
     dd8:	85000117 	ldw	r20,4(r16)
     ddc:	a0ac703a 	and	r22,r20,r2
     de0:	b4400336 	bltu	r22,r17,df0 <_malloc_r+0x334>
     de4:	b445c83a 	sub	r2,r22,r17
     de8:	10c00408 	cmpgei	r3,r2,16
     dec:	1800561e 	bne	r3,zero,f48 <_malloc_r+0x48c>
     df0:	00800074 	movhi	r2,1
     df4:	10875817 	ldw	r2,7520(r2)
     df8:	00c00074 	movhi	r3,1
     dfc:	1d0e8217 	ldw	r20,14856(r3)
     e00:	10bfffd8 	cmpnei	r2,r2,-1
     e04:	85ab883a 	add	r21,r16,r22
     e08:	8d29883a 	add	r20,r17,r20
     e0c:	1000c826 	beq	r2,zero,1130 <_malloc_r+0x674>
     e10:	a50403c4 	addi	r20,r20,4111
     e14:	00bc0004 	movi	r2,-4096
     e18:	a0a8703a 	and	r20,r20,r2
     e1c:	a00b883a 	mov	r5,r20
     e20:	9009883a 	mov	r4,r18
     e24:	00018b40 	call	18b4 <_sbrk_r>
     e28:	102f883a 	mov	r23,r2
     e2c:	10bfffd8 	cmpnei	r2,r2,-1
     e30:	10009a26 	beq	r2,zero,109c <_malloc_r+0x5e0>
     e34:	bd409836 	bltu	r23,r21,1098 <_malloc_r+0x5dc>
     e38:	00800074 	movhi	r2,1
     e3c:	108e8c17 	ldw	r2,14896(r2)
     e40:	00c00074 	movhi	r3,1
     e44:	a085883a 	add	r2,r20,r2
     e48:	188e8c15 	stw	r2,14896(r3)
     e4c:	1007883a 	mov	r3,r2
     e50:	adc0dd26 	beq	r21,r23,11c8 <_malloc_r+0x70c>
     e54:	00800074 	movhi	r2,1
     e58:	10875817 	ldw	r2,7520(r2)
     e5c:	10bfffd8 	cmpnei	r2,r2,-1
     e60:	1000e026 	beq	r2,zero,11e4 <_malloc_r+0x728>
     e64:	bd6bc83a 	sub	r21,r23,r21
     e68:	a8c7883a 	add	r3,r21,r3
     e6c:	00800074 	movhi	r2,1
     e70:	10ce8c15 	stw	r3,14896(r2)
     e74:	bf0001cc 	andi	fp,r23,7
     e78:	e000b626 	beq	fp,zero,1154 <_malloc_r+0x698>
     e7c:	bf2fc83a 	sub	r23,r23,fp
     e80:	bdc00204 	addi	r23,r23,8
     e84:	00840204 	movi	r2,4104
     e88:	1705c83a 	sub	r2,r2,fp
     e8c:	bd29883a 	add	r20,r23,r20
     e90:	1505c83a 	sub	r2,r2,r20
     e94:	1543ffcc 	andi	r21,r2,4095
     e98:	a80b883a 	mov	r5,r21
     e9c:	9009883a 	mov	r4,r18
     ea0:	00018b40 	call	18b4 <_sbrk_r>
     ea4:	10ffffe0 	cmpeqi	r3,r2,-1
     ea8:	1800e41e 	bne	r3,zero,123c <_malloc_r+0x780>
     eac:	15c5c83a 	sub	r2,r2,r23
     eb0:	1569883a 	add	r20,r2,r21
     eb4:	00800074 	movhi	r2,1
     eb8:	108e8c17 	ldw	r2,14896(r2)
     ebc:	9dc00215 	stw	r23,8(r19)
     ec0:	a5000054 	ori	r20,r20,1
     ec4:	a885883a 	add	r2,r21,r2
     ec8:	00c00074 	movhi	r3,1
     ecc:	188e8c15 	stw	r2,14896(r3)
     ed0:	bd000115 	stw	r20,4(r23)
     ed4:	84c0c626 	beq	r16,r19,11f0 <_malloc_r+0x734>
     ed8:	b0c00428 	cmpgeui	r3,r22,16
     edc:	1800c626 	beq	r3,zero,11f8 <_malloc_r+0x73c>
     ee0:	81000117 	ldw	r4,4(r16)
     ee4:	017ffe04 	movi	r5,-8
     ee8:	b0fffd04 	addi	r3,r22,-12
     eec:	1946703a 	and	r3,r3,r5
     ef0:	2100004c 	andi	r4,r4,1
     ef4:	20c8b03a 	or	r4,r4,r3
     ef8:	81000115 	stw	r4,4(r16)
     efc:	01400144 	movi	r5,5
     f00:	80c9883a 	add	r4,r16,r3
     f04:	21400115 	stw	r5,4(r4)
     f08:	21400215 	stw	r5,8(r4)
     f0c:	18c00428 	cmpgeui	r3,r3,16
     f10:	1800cf1e 	bne	r3,zero,1250 <_malloc_r+0x794>
     f14:	bd000117 	ldw	r20,4(r23)
     f18:	b821883a 	mov	r16,r23
     f1c:	00c00074 	movhi	r3,1
     f20:	18ce8117 	ldw	r3,14852(r3)
     f24:	1880022e 	bgeu	r3,r2,f30 <_malloc_r+0x474>
     f28:	00c00074 	movhi	r3,1
     f2c:	188e8115 	stw	r2,14852(r3)
     f30:	00c00074 	movhi	r3,1
     f34:	18ce8017 	ldw	r3,14848(r3)
     f38:	18805a2e 	bgeu	r3,r2,10a4 <_malloc_r+0x5e8>
     f3c:	00c00074 	movhi	r3,1
     f40:	188e8015 	stw	r2,14848(r3)
     f44:	00005706 	br	10a4 <_malloc_r+0x5e8>
     f48:	88c00054 	ori	r3,r17,1
     f4c:	80c00115 	stw	r3,4(r16)
     f50:	8463883a 	add	r17,r16,r17
     f54:	10800054 	ori	r2,r2,1
     f58:	9c400215 	stw	r17,8(r19)
     f5c:	88800115 	stw	r2,4(r17)
     f60:	9009883a 	mov	r4,r18
     f64:	000dadc0 	call	dadc <__malloc_unlock>
     f68:	80800204 	addi	r2,r16,8
     f6c:	003f7c06 	br	d60 <_malloc_r+0x2a4>
     f70:	400d883a 	mov	r6,r8
     f74:	003f2106 	br	bfc <_malloc_r+0x140>
     f78:	81000317 	ldw	r4,12(r16)
     f7c:	003eee06 	br	b38 <_malloc_r+0x7c>
     f80:	1006d27a 	srli	r3,r2,9
     f84:	19000168 	cmpgeui	r4,r3,5
     f88:	20003e26 	beq	r4,zero,1084 <_malloc_r+0x5c8>
     f8c:	19000568 	cmpgeui	r4,r3,21
     f90:	20007a1e 	bne	r4,zero,117c <_malloc_r+0x6c0>
     f94:	19401704 	addi	r5,r3,92
     f98:	280a90fa 	slli	r5,r5,3
     f9c:	190016c4 	addi	r4,r3,91
     fa0:	994b883a 	add	r5,r19,r5
     fa4:	28c00017 	ldw	r3,0(r5)
     fa8:	297ffe04 	addi	r5,r5,-8
     fac:	28c06226 	beq	r5,r3,1138 <_malloc_r+0x67c>
     fb0:	01ffff04 	movi	r7,-4
     fb4:	19000117 	ldw	r4,4(r3)
     fb8:	21c8703a 	and	r4,r4,r7
     fbc:	1100022e 	bgeu	r2,r4,fc8 <_malloc_r+0x50c>
     fc0:	18c00217 	ldw	r3,8(r3)
     fc4:	28fffb1e 	bne	r5,r3,fb4 <_malloc_r+0x4f8>
     fc8:	19400317 	ldw	r5,12(r3)
     fcc:	98800117 	ldw	r2,4(r19)
     fd0:	81400315 	stw	r5,12(r16)
     fd4:	80c00215 	stw	r3,8(r16)
     fd8:	2c000215 	stw	r16,8(r5)
     fdc:	1c000315 	stw	r16,12(r3)
     fe0:	003f2506 	br	c78 <_malloc_r+0x1bc>
     fe4:	10c00568 	cmpgeui	r3,r2,21
     fe8:	18003826 	beq	r3,zero,10cc <_malloc_r+0x610>
     fec:	10c01568 	cmpgeui	r3,r2,85
     ff0:	1800691e 	bne	r3,zero,1198 <_malloc_r+0x6dc>
     ff4:	8804d33a 	srli	r2,r17,12
     ff8:	11801bc4 	addi	r6,r2,111
     ffc:	12001b84 	addi	r8,r2,110
    1000:	300a90fa 	slli	r5,r6,3
    1004:	003ee606 	br	ba0 <_malloc_r+0xe4>
    1008:	5ac00044 	addi	r11,r11,1
    100c:	588000cc 	andi	r2,r11,3
    1010:	39c00204 	addi	r7,r7,8
    1014:	103f2d1e 	bne	r2,zero,ccc <_malloc_r+0x210>
    1018:	00003306 	br	10e8 <_malloc_r+0x62c>
    101c:	8085883a 	add	r2,r16,r2
    1020:	10c00117 	ldw	r3,4(r2)
    1024:	81000317 	ldw	r4,12(r16)
    1028:	81400217 	ldw	r5,8(r16)
    102c:	18c00054 	ori	r3,r3,1
    1030:	10c00115 	stw	r3,4(r2)
    1034:	29000315 	stw	r4,12(r5)
    1038:	21400215 	stw	r5,8(r4)
    103c:	9009883a 	mov	r4,r18
    1040:	000dadc0 	call	dadc <__malloc_unlock>
    1044:	80800204 	addi	r2,r16,8
    1048:	003f4506 	br	d60 <_malloc_r+0x2a4>
    104c:	880cd0fa 	srli	r6,r17,3
    1050:	88800204 	addi	r2,r17,8
    1054:	003eae06 	br	b10 <_malloc_r+0x54>
    1058:	8085883a 	add	r2,r16,r2
    105c:	10c00117 	ldw	r3,4(r2)
    1060:	9009883a 	mov	r4,r18
    1064:	18c00054 	ori	r3,r3,1
    1068:	10c00115 	stw	r3,4(r2)
    106c:	000dadc0 	call	dadc <__malloc_unlock>
    1070:	80800204 	addi	r2,r16,8
    1074:	003f3a06 	br	d60 <_malloc_r+0x2a4>
    1078:	89000054 	ori	r4,r17,1
    107c:	81000115 	stw	r4,4(r16)
    1080:	003f2706 	br	d20 <_malloc_r+0x264>
    1084:	1006d1ba 	srli	r3,r2,6
    1088:	19400e44 	addi	r5,r3,57
    108c:	19000e04 	addi	r4,r3,56
    1090:	280a90fa 	slli	r5,r5,3
    1094:	003fc206 	br	fa0 <_malloc_r+0x4e4>
    1098:	84c04626 	beq	r16,r19,11b4 <_malloc_r+0x6f8>
    109c:	9c000217 	ldw	r16,8(r19)
    10a0:	85000117 	ldw	r20,4(r16)
    10a4:	00bfff04 	movi	r2,-4
    10a8:	a0a8703a 	and	r20,r20,r2
    10ac:	a445c83a 	sub	r2,r20,r17
    10b0:	a4400236 	bltu	r20,r17,10bc <_malloc_r+0x600>
    10b4:	10c00408 	cmpgei	r3,r2,16
    10b8:	183fa31e 	bne	r3,zero,f48 <_malloc_r+0x48c>
    10bc:	9009883a 	mov	r4,r18
    10c0:	000dadc0 	call	dadc <__malloc_unlock>
    10c4:	0005883a 	mov	r2,zero
    10c8:	003f2506 	br	d60 <_malloc_r+0x2a4>
    10cc:	11801704 	addi	r6,r2,92
    10d0:	120016c4 	addi	r8,r2,91
    10d4:	300a90fa 	slli	r5,r6,3
    10d8:	003eb106 	br	ba0 <_malloc_r+0xe4>
    10dc:	50800217 	ldw	r2,8(r10)
    10e0:	31bfffc4 	addi	r6,r6,-1
    10e4:	1280701e 	bne	r2,r10,12a8 <_malloc_r+0x7ec>
    10e8:	308000cc 	andi	r2,r6,3
    10ec:	52bffe04 	addi	r10,r10,-8
    10f0:	103ffa1e 	bne	r2,zero,10dc <_malloc_r+0x620>
    10f4:	98c00117 	ldw	r3,4(r19)
    10f8:	0104303a 	nor	r2,zero,r4
    10fc:	10c4703a 	and	r2,r2,r3
    1100:	98800115 	stw	r2,4(r19)
    1104:	2109883a 	add	r4,r4,r4
    1108:	113f3136 	bltu	r2,r4,dd0 <_malloc_r+0x314>
    110c:	203f3026 	beq	r4,zero,dd0 <_malloc_r+0x314>
    1110:	2086703a 	and	r3,r4,r2
    1114:	1800041e 	bne	r3,zero,1128 <_malloc_r+0x66c>
    1118:	2109883a 	add	r4,r4,r4
    111c:	2086703a 	and	r3,r4,r2
    1120:	5ac00104 	addi	r11,r11,4
    1124:	183ffc26 	beq	r3,zero,1118 <_malloc_r+0x65c>
    1128:	580d883a 	mov	r6,r11
    112c:	003ee306 	br	cbc <_malloc_r+0x200>
    1130:	a5000404 	addi	r20,r20,16
    1134:	003f3906 	br	e1c <_malloc_r+0x360>
    1138:	2009d0ba 	srai	r4,r4,2
    113c:	00800044 	movi	r2,1
    1140:	99c00117 	ldw	r7,4(r19)
    1144:	1104983a 	sll	r2,r2,r4
    1148:	11c4b03a 	or	r2,r2,r7
    114c:	98800115 	stw	r2,4(r19)
    1150:	003f9f06 	br	fd0 <_malloc_r+0x514>
    1154:	bd05883a 	add	r2,r23,r20
    1158:	0085c83a 	sub	r2,zero,r2
    115c:	1543ffcc 	andi	r21,r2,4095
    1160:	a80b883a 	mov	r5,r21
    1164:	9009883a 	mov	r4,r18
    1168:	00018b40 	call	18b4 <_sbrk_r>
    116c:	10ffffe0 	cmpeqi	r3,r2,-1
    1170:	183f4e26 	beq	r3,zero,eac <_malloc_r+0x3f0>
    1174:	002b883a 	mov	r21,zero
    1178:	003f4e06 	br	eb4 <_malloc_r+0x3f8>
    117c:	19001568 	cmpgeui	r4,r3,85
    1180:	2000201e 	bne	r4,zero,1204 <_malloc_r+0x748>
    1184:	1006d33a 	srli	r3,r2,12
    1188:	19401bc4 	addi	r5,r3,111
    118c:	19001b84 	addi	r4,r3,110
    1190:	280a90fa 	slli	r5,r5,3
    1194:	003f8206 	br	fa0 <_malloc_r+0x4e4>
    1198:	10c05568 	cmpgeui	r3,r2,341
    119c:	1800201e 	bne	r3,zero,1220 <_malloc_r+0x764>
    11a0:	8804d3fa 	srli	r2,r17,15
    11a4:	11801e04 	addi	r6,r2,120
    11a8:	12001dc4 	addi	r8,r2,119
    11ac:	300a90fa 	slli	r5,r6,3
    11b0:	003e7b06 	br	ba0 <_malloc_r+0xe4>
    11b4:	00800074 	movhi	r2,1
    11b8:	10ce8c17 	ldw	r3,14896(r2)
    11bc:	a0c7883a 	add	r3,r20,r3
    11c0:	10ce8c15 	stw	r3,14896(r2)
    11c4:	003f2306 	br	e54 <_malloc_r+0x398>
    11c8:	a903ffcc 	andi	r4,r21,4095
    11cc:	203f211e 	bne	r4,zero,e54 <_malloc_r+0x398>
    11d0:	9c000217 	ldw	r16,8(r19)
    11d4:	b529883a 	add	r20,r22,r20
    11d8:	a5000054 	ori	r20,r20,1
    11dc:	85000115 	stw	r20,4(r16)
    11e0:	003f4e06 	br	f1c <_malloc_r+0x460>
    11e4:	00800074 	movhi	r2,1
    11e8:	15c75815 	stw	r23,7520(r2)
    11ec:	003f2106 	br	e74 <_malloc_r+0x3b8>
    11f0:	b821883a 	mov	r16,r23
    11f4:	003f4906 	br	f1c <_malloc_r+0x460>
    11f8:	00800044 	movi	r2,1
    11fc:	b8800115 	stw	r2,4(r23)
    1200:	003fae06 	br	10bc <_malloc_r+0x600>
    1204:	19005568 	cmpgeui	r4,r3,341
    1208:	2000191e 	bne	r4,zero,1270 <_malloc_r+0x7b4>
    120c:	1006d3fa 	srli	r3,r2,15
    1210:	19401e04 	addi	r5,r3,120
    1214:	19001dc4 	addi	r4,r3,119
    1218:	280a90fa 	slli	r5,r5,3
    121c:	003f6006 	br	fa0 <_malloc_r+0x4e4>
    1220:	10815568 	cmpgeui	r2,r2,1365
    1224:	1000191e 	bne	r2,zero,128c <_malloc_r+0x7d0>
    1228:	8804d4ba 	srli	r2,r17,18
    122c:	11801f44 	addi	r6,r2,125
    1230:	12001f04 	addi	r8,r2,124
    1234:	300a90fa 	slli	r5,r6,3
    1238:	003e5906 	br	ba0 <_malloc_r+0xe4>
    123c:	e73ffe04 	addi	fp,fp,-8
    1240:	a729883a 	add	r20,r20,fp
    1244:	a5e9c83a 	sub	r20,r20,r23
    1248:	002b883a 	mov	r21,zero
    124c:	003f1906 	br	eb4 <_malloc_r+0x3f8>
    1250:	81400204 	addi	r5,r16,8
    1254:	9009883a 	mov	r4,r18
    1258:	0005fa00 	call	5fa0 <_free_r>
    125c:	9c000217 	ldw	r16,8(r19)
    1260:	00800074 	movhi	r2,1
    1264:	108e8c17 	ldw	r2,14896(r2)
    1268:	85000117 	ldw	r20,4(r16)
    126c:	003f2b06 	br	f1c <_malloc_r+0x460>
    1270:	18c15568 	cmpgeui	r3,r3,1365
    1274:	1800091e 	bne	r3,zero,129c <_malloc_r+0x7e0>
    1278:	1006d4ba 	srli	r3,r2,18
    127c:	19401f44 	addi	r5,r3,125
    1280:	19001f04 	addi	r4,r3,124
    1284:	280a90fa 	slli	r5,r5,3
    1288:	003f4506 	br	fa0 <_malloc_r+0x4e4>
    128c:	0140fe04 	movi	r5,1016
    1290:	01801fc4 	movi	r6,127
    1294:	02001f84 	movi	r8,126
    1298:	003e4106 	br	ba0 <_malloc_r+0xe4>
    129c:	0140fe04 	movi	r5,1016
    12a0:	01001f84 	movi	r4,126
    12a4:	003f3e06 	br	fa0 <_malloc_r+0x4e4>
    12a8:	98800117 	ldw	r2,4(r19)
    12ac:	003f9506 	br	1104 <_malloc_r+0x648>

000012b0 <memchr>:
    12b0:	208000cc 	andi	r2,r4,3
    12b4:	280f883a 	mov	r7,r5
    12b8:	10003526 	beq	r2,zero,1390 <memchr+0xe0>
    12bc:	30bfffc4 	addi	r2,r6,-1
    12c0:	30001926 	beq	r6,zero,1328 <memchr+0x78>
    12c4:	20c00003 	ldbu	r3,0(r4)
    12c8:	29803fcc 	andi	r6,r5,255
    12cc:	30c0061e 	bne	r6,r3,12e8 <memchr+0x38>
    12d0:	00001706 	br	1330 <memchr+0x80>
    12d4:	10bfffc4 	addi	r2,r2,-1
    12d8:	10ffffe0 	cmpeqi	r3,r2,-1
    12dc:	1800121e 	bne	r3,zero,1328 <memchr+0x78>
    12e0:	20c00003 	ldbu	r3,0(r4)
    12e4:	19801226 	beq	r3,r6,1330 <memchr+0x80>
    12e8:	21000044 	addi	r4,r4,1
    12ec:	20c000cc 	andi	r3,r4,3
    12f0:	183ff81e 	bne	r3,zero,12d4 <memchr+0x24>
    12f4:	10c00128 	cmpgeui	r3,r2,4
    12f8:	18000f1e 	bne	r3,zero,1338 <memchr+0x88>
    12fc:	10000a26 	beq	r2,zero,1328 <memchr+0x78>
    1300:	20c00003 	ldbu	r3,0(r4)
    1304:	29403fcc 	andi	r5,r5,255
    1308:	19400926 	beq	r3,r5,1330 <memchr+0x80>
    130c:	2085883a 	add	r2,r4,r2
    1310:	39403fcc 	andi	r5,r7,255
    1314:	00000206 	br	1320 <memchr+0x70>
    1318:	20c00003 	ldbu	r3,0(r4)
    131c:	19400426 	beq	r3,r5,1330 <memchr+0x80>
    1320:	21000044 	addi	r4,r4,1
    1324:	113ffc1e 	bne	r2,r4,1318 <memchr+0x68>
    1328:	0005883a 	mov	r2,zero
    132c:	f800283a 	ret
    1330:	2005883a 	mov	r2,r4
    1334:	f800283a 	ret
    1338:	280c923a 	slli	r6,r5,8
    133c:	2a403fcc 	andi	r9,r5,255
    1340:	02bfbff4 	movhi	r10,65279
    1344:	31bfffcc 	andi	r6,r6,65535
    1348:	3246b03a 	or	r3,r6,r9
    134c:	1812943a 	slli	r9,r3,16
    1350:	02202074 	movhi	r8,32897
    1354:	52bfbfc4 	addi	r10,r10,-257
    1358:	48d2b03a 	or	r9,r9,r3
    135c:	42202004 	addi	r8,r8,-32640
    1360:	20c00017 	ldw	r3,0(r4)
    1364:	48c6f03a 	xor	r3,r9,r3
    1368:	1a8d883a 	add	r6,r3,r10
    136c:	00c6303a 	nor	r3,zero,r3
    1370:	30c6703a 	and	r3,r6,r3
    1374:	1a06703a 	and	r3,r3,r8
    1378:	183fe11e 	bne	r3,zero,1300 <memchr+0x50>
    137c:	10bfff04 	addi	r2,r2,-4
    1380:	10c00128 	cmpgeui	r3,r2,4
    1384:	21000104 	addi	r4,r4,4
    1388:	183ff51e 	bne	r3,zero,1360 <memchr+0xb0>
    138c:	003fdb06 	br	12fc <memchr+0x4c>
    1390:	3005883a 	mov	r2,r6
    1394:	003fd706 	br	12f4 <memchr+0x44>

00001398 <memcpy>:
    1398:	30c00430 	cmpltui	r3,r6,16
    139c:	2005883a 	mov	r2,r4
    13a0:	18002d1e 	bne	r3,zero,1458 <memcpy+0xc0>
    13a4:	2906b03a 	or	r3,r5,r4
    13a8:	18c000cc 	andi	r3,r3,3
    13ac:	1800351e 	bne	r3,zero,1484 <memcpy+0xec>
    13b0:	32fffc04 	addi	r11,r6,-16
    13b4:	5816d13a 	srli	r11,r11,4
    13b8:	2007883a 	mov	r3,r4
    13bc:	280f883a 	mov	r7,r5
    13c0:	5ac00044 	addi	r11,r11,1
    13c4:	5816913a 	slli	r11,r11,4
    13c8:	22c9883a 	add	r4,r4,r11
    13cc:	3a000017 	ldw	r8,0(r7)
    13d0:	3a800117 	ldw	r10,4(r7)
    13d4:	3a400217 	ldw	r9,8(r7)
    13d8:	39c00404 	addi	r7,r7,16
    13dc:	1a000015 	stw	r8,0(r3)
    13e0:	3a3fff17 	ldw	r8,-4(r7)
    13e4:	1a800115 	stw	r10,4(r3)
    13e8:	1a400215 	stw	r9,8(r3)
    13ec:	18c00404 	addi	r3,r3,16
    13f0:	1a3fff15 	stw	r8,-4(r3)
    13f4:	20fff51e 	bne	r4,r3,13cc <memcpy+0x34>
    13f8:	3100030c 	andi	r4,r6,12
    13fc:	2acb883a 	add	r5,r5,r11
    1400:	320003cc 	andi	r8,r6,15
    1404:	20002226 	beq	r4,zero,1490 <memcpy+0xf8>
    1408:	2809883a 	mov	r4,r5
    140c:	1813883a 	mov	r9,r3
    1410:	21000104 	addi	r4,r4,4
    1414:	22bfff17 	ldw	r10,-4(r4)
    1418:	410fc83a 	sub	r7,r8,r4
    141c:	4a400104 	addi	r9,r9,4
    1420:	29cf883a 	add	r7,r5,r7
    1424:	4abfff15 	stw	r10,-4(r9)
    1428:	39c00128 	cmpgeui	r7,r7,4
    142c:	383ff81e 	bne	r7,zero,1410 <memcpy+0x78>
    1430:	413fff04 	addi	r4,r8,-4
    1434:	2008d0ba 	srli	r4,r4,2
    1438:	318000cc 	andi	r6,r6,3
    143c:	31ffffc4 	addi	r7,r6,-1
    1440:	21000044 	addi	r4,r4,1
    1444:	200890ba 	slli	r4,r4,2
    1448:	1907883a 	add	r3,r3,r4
    144c:	290b883a 	add	r5,r5,r4
    1450:	3000041e 	bne	r6,zero,1464 <memcpy+0xcc>
    1454:	f800283a 	ret
    1458:	2007883a 	mov	r3,r4
    145c:	31ffffc4 	addi	r7,r6,-1
    1460:	303ffc26 	beq	r6,zero,1454 <memcpy+0xbc>
    1464:	39c00044 	addi	r7,r7,1
    1468:	19cf883a 	add	r7,r3,r7
    146c:	29400044 	addi	r5,r5,1
    1470:	29bfffc3 	ldbu	r6,-1(r5)
    1474:	18c00044 	addi	r3,r3,1
    1478:	19bfffc5 	stb	r6,-1(r3)
    147c:	19fffb1e 	bne	r3,r7,146c <memcpy+0xd4>
    1480:	f800283a 	ret
    1484:	31ffffc4 	addi	r7,r6,-1
    1488:	2007883a 	mov	r3,r4
    148c:	003ff506 	br	1464 <memcpy+0xcc>
    1490:	400d883a 	mov	r6,r8
    1494:	003ff106 	br	145c <memcpy+0xc4>

00001498 <memset>:
    1498:	20c000cc 	andi	r3,r4,3
    149c:	2005883a 	mov	r2,r4
    14a0:	18003626 	beq	r3,zero,157c <memset+0xe4>
    14a4:	31ffffc4 	addi	r7,r6,-1
    14a8:	30003326 	beq	r6,zero,1578 <memset+0xe0>
    14ac:	2811883a 	mov	r8,r5
    14b0:	2007883a 	mov	r3,r4
    14b4:	00000306 	br	14c4 <memset+0x2c>
    14b8:	39ffffc4 	addi	r7,r7,-1
    14bc:	39bfffe0 	cmpeqi	r6,r7,-1
    14c0:	30002d1e 	bne	r6,zero,1578 <memset+0xe0>
    14c4:	18c00044 	addi	r3,r3,1
    14c8:	1a3fffc5 	stb	r8,-1(r3)
    14cc:	198000cc 	andi	r6,r3,3
    14d0:	303ff91e 	bne	r6,zero,14b8 <memset+0x20>
    14d4:	39000130 	cmpltui	r4,r7,4
    14d8:	2000221e 	bne	r4,zero,1564 <memset+0xcc>
    14dc:	29003fcc 	andi	r4,r5,255
    14e0:	200c923a 	slli	r6,r4,8
    14e4:	3a000430 	cmpltui	r8,r7,16
    14e8:	3108b03a 	or	r4,r6,r4
    14ec:	200c943a 	slli	r6,r4,16
    14f0:	310cb03a 	or	r6,r6,r4
    14f4:	40000e1e 	bne	r8,zero,1530 <memset+0x98>
    14f8:	3a3ffc04 	addi	r8,r7,-16
    14fc:	4010d13a 	srli	r8,r8,4
    1500:	42000044 	addi	r8,r8,1
    1504:	4010913a 	slli	r8,r8,4
    1508:	1a11883a 	add	r8,r3,r8
    150c:	19800015 	stw	r6,0(r3)
    1510:	19800115 	stw	r6,4(r3)
    1514:	19800215 	stw	r6,8(r3)
    1518:	18c00404 	addi	r3,r3,16
    151c:	19bfff15 	stw	r6,-4(r3)
    1520:	40fffa1e 	bne	r8,r3,150c <memset+0x74>
    1524:	3900030c 	andi	r4,r7,12
    1528:	39c003cc 	andi	r7,r7,15
    152c:	20000d26 	beq	r4,zero,1564 <memset+0xcc>
    1530:	1809883a 	mov	r4,r3
    1534:	21000104 	addi	r4,r4,4
    1538:	3911c83a 	sub	r8,r7,r4
    153c:	1a11883a 	add	r8,r3,r8
    1540:	21bfff15 	stw	r6,-4(r4)
    1544:	42000128 	cmpgeui	r8,r8,4
    1548:	403ffa1e 	bne	r8,zero,1534 <memset+0x9c>
    154c:	393fff04 	addi	r4,r7,-4
    1550:	2008d0ba 	srli	r4,r4,2
    1554:	39c000cc 	andi	r7,r7,3
    1558:	21000044 	addi	r4,r4,1
    155c:	200890ba 	slli	r4,r4,2
    1560:	1907883a 	add	r3,r3,r4
    1564:	38000426 	beq	r7,zero,1578 <memset+0xe0>
    1568:	19cf883a 	add	r7,r3,r7
    156c:	18c00044 	addi	r3,r3,1
    1570:	197fffc5 	stb	r5,-1(r3)
    1574:	38fffd1e 	bne	r7,r3,156c <memset+0xd4>
    1578:	f800283a 	ret
    157c:	2007883a 	mov	r3,r4
    1580:	300f883a 	mov	r7,r6
    1584:	003fd306 	br	14d4 <memset+0x3c>

00001588 <_printf_r>:
    1588:	defffd04 	addi	sp,sp,-12
    158c:	2805883a 	mov	r2,r5
    1590:	dfc00015 	stw	ra,0(sp)
    1594:	d9800115 	stw	r6,4(sp)
    1598:	d9c00215 	stw	r7,8(sp)
    159c:	21400217 	ldw	r5,8(r4)
    15a0:	d9c00104 	addi	r7,sp,4
    15a4:	100d883a 	mov	r6,r2
    15a8:	0001d540 	call	1d54 <___vfprintf_internal_r>
    15ac:	dfc00017 	ldw	ra,0(sp)
    15b0:	dec00304 	addi	sp,sp,12
    15b4:	f800283a 	ret

000015b8 <printf>:
    15b8:	defffc04 	addi	sp,sp,-16
    15bc:	dfc00015 	stw	ra,0(sp)
    15c0:	d9400115 	stw	r5,4(sp)
    15c4:	d9800215 	stw	r6,8(sp)
    15c8:	d9c00315 	stw	r7,12(sp)
    15cc:	00800074 	movhi	r2,1
    15d0:	10875717 	ldw	r2,7516(r2)
    15d4:	200b883a 	mov	r5,r4
    15d8:	d9800104 	addi	r6,sp,4
    15dc:	11000217 	ldw	r4,8(r2)
    15e0:	0003edc0 	call	3edc <__vfprintf_internal>
    15e4:	dfc00017 	ldw	ra,0(sp)
    15e8:	dec00404 	addi	sp,sp,16
    15ec:	f800283a 	ret

000015f0 <_puts_r>:
    15f0:	defff504 	addi	sp,sp,-44
    15f4:	dc000815 	stw	r16,32(sp)
    15f8:	2021883a 	mov	r16,r4
    15fc:	2809883a 	mov	r4,r5
    1600:	dc400915 	stw	r17,36(sp)
    1604:	dfc00a15 	stw	ra,40(sp)
    1608:	2823883a 	mov	r17,r5
    160c:	0001a4c0 	call	1a4c <strlen>
    1610:	11000044 	addi	r4,r2,1
    1614:	d8800515 	stw	r2,20(sp)
    1618:	00800044 	movi	r2,1
    161c:	00c00074 	movhi	r3,1
    1620:	d8800715 	stw	r2,28(sp)
    1624:	d8800404 	addi	r2,sp,16
    1628:	18fee904 	addi	r3,r3,-1116
    162c:	d8800115 	stw	r2,4(sp)
    1630:	00800084 	movi	r2,2
    1634:	dc400415 	stw	r17,16(sp)
    1638:	d8c00615 	stw	r3,24(sp)
    163c:	d9000315 	stw	r4,12(sp)
    1640:	d8800215 	stw	r2,8(sp)
    1644:	81400217 	ldw	r5,8(r16)
    1648:	80000226 	beq	r16,zero,1654 <_puts_r+0x64>
    164c:	80800e17 	ldw	r2,56(r16)
    1650:	10001326 	beq	r2,zero,16a0 <_puts_r+0xb0>
    1654:	2880030b 	ldhu	r2,12(r5)
    1658:	10c8000c 	andi	r3,r2,8192
    165c:	1800061e 	bne	r3,zero,1678 <_puts_r+0x88>
    1660:	28c01917 	ldw	r3,100(r5)
    1664:	0137ffc4 	movi	r4,-8193
    1668:	10880014 	ori	r2,r2,8192
    166c:	1906703a 	and	r3,r3,r4
    1670:	2880030d 	sth	r2,12(r5)
    1674:	28c01915 	stw	r3,100(r5)
    1678:	d9800104 	addi	r6,sp,4
    167c:	8009883a 	mov	r4,r16
    1680:	000629c0 	call	629c <__sfvwrite_r>
    1684:	10000b1e 	bne	r2,zero,16b4 <_puts_r+0xc4>
    1688:	00800284 	movi	r2,10
    168c:	dfc00a17 	ldw	ra,40(sp)
    1690:	dc400917 	ldw	r17,36(sp)
    1694:	dc000817 	ldw	r16,32(sp)
    1698:	dec00b04 	addi	sp,sp,44
    169c:	f800283a 	ret
    16a0:	8009883a 	mov	r4,r16
    16a4:	d9400015 	stw	r5,0(sp)
    16a8:	000091c0 	call	91c <__sinit>
    16ac:	d9400017 	ldw	r5,0(sp)
    16b0:	003fe806 	br	1654 <_puts_r+0x64>
    16b4:	00bfffc4 	movi	r2,-1
    16b8:	003ff406 	br	168c <_puts_r+0x9c>

000016bc <puts>:
    16bc:	00800074 	movhi	r2,1
    16c0:	200b883a 	mov	r5,r4
    16c4:	11075717 	ldw	r4,7516(r2)
    16c8:	00015f01 	jmpi	15f0 <_puts_r>

000016cc <lflush>:
    16cc:	2080030b 	ldhu	r2,12(r4)
    16d0:	1080024c 	andi	r2,r2,9
    16d4:	10800258 	cmpnei	r2,r2,9
    16d8:	10000226 	beq	r2,zero,16e4 <lflush+0x18>
    16dc:	0005883a 	mov	r2,zero
    16e0:	f800283a 	ret
    16e4:	0005e5c1 	jmpi	5e5c <fflush>

000016e8 <__srefill_r>:
    16e8:	defffc04 	addi	sp,sp,-16
    16ec:	dc400115 	stw	r17,4(sp)
    16f0:	dc000015 	stw	r16,0(sp)
    16f4:	dfc00315 	stw	ra,12(sp)
    16f8:	dc800215 	stw	r18,8(sp)
    16fc:	2023883a 	mov	r17,r4
    1700:	2821883a 	mov	r16,r5
    1704:	20000226 	beq	r4,zero,1710 <__srefill_r+0x28>
    1708:	20800e17 	ldw	r2,56(r4)
    170c:	10003a26 	beq	r2,zero,17f8 <__srefill_r+0x110>
    1710:	80c0030b 	ldhu	r3,12(r16)
    1714:	1908000c 	andi	r4,r3,8192
    1718:	1805883a 	mov	r2,r3
    171c:	2000071e 	bne	r4,zero,173c <__srefill_r+0x54>
    1720:	81001917 	ldw	r4,100(r16)
    1724:	18880014 	ori	r2,r3,8192
    1728:	00f7ffc4 	movi	r3,-8193
    172c:	20c8703a 	and	r4,r4,r3
    1730:	8080030d 	sth	r2,12(r16)
    1734:	1007883a 	mov	r3,r2
    1738:	81001915 	stw	r4,100(r16)
    173c:	80000115 	stw	zero,4(r16)
    1740:	1100080c 	andi	r4,r2,32
    1744:	20004d1e 	bne	r4,zero,187c <__srefill_r+0x194>
    1748:	1100010c 	andi	r4,r2,4
    174c:	20001c1e 	bne	r4,zero,17c0 <__srefill_r+0xd8>
    1750:	1100040c 	andi	r4,r2,16
    1754:	20005126 	beq	r4,zero,189c <__srefill_r+0x1b4>
    1758:	1080020c 	andi	r2,r2,8
    175c:	1000371e 	bne	r2,zero,183c <__srefill_r+0x154>
    1760:	18c00114 	ori	r3,r3,4
    1764:	80c0030d 	sth	r3,12(r16)
    1768:	80800417 	ldw	r2,16(r16)
    176c:	10003c26 	beq	r2,zero,1860 <__srefill_r+0x178>
    1770:	8480030b 	ldhu	r18,12(r16)
    1774:	908000cc 	andi	r2,r18,3
    1778:	1000211e 	bne	r2,zero,1800 <__srefill_r+0x118>
    177c:	81800417 	ldw	r6,16(r16)
    1780:	80800817 	ldw	r2,32(r16)
    1784:	81c00517 	ldw	r7,20(r16)
    1788:	81400717 	ldw	r5,28(r16)
    178c:	81800015 	stw	r6,0(r16)
    1790:	8809883a 	mov	r4,r17
    1794:	103ee83a 	callr	r2
    1798:	1007883a 	mov	r3,r2
    179c:	80800115 	stw	r2,4(r16)
    17a0:	0005883a 	mov	r2,zero
    17a4:	00c0370e 	bge	zero,r3,1884 <__srefill_r+0x19c>
    17a8:	dfc00317 	ldw	ra,12(sp)
    17ac:	dc800217 	ldw	r18,8(sp)
    17b0:	dc400117 	ldw	r17,4(sp)
    17b4:	dc000017 	ldw	r16,0(sp)
    17b8:	dec00404 	addi	sp,sp,16
    17bc:	f800283a 	ret
    17c0:	81400c17 	ldw	r5,48(r16)
    17c4:	283fe826 	beq	r5,zero,1768 <__srefill_r+0x80>
    17c8:	80801004 	addi	r2,r16,64
    17cc:	28800226 	beq	r5,r2,17d8 <__srefill_r+0xf0>
    17d0:	8809883a 	mov	r4,r17
    17d4:	0005fa00 	call	5fa0 <_free_r>
    17d8:	80800f17 	ldw	r2,60(r16)
    17dc:	80000c15 	stw	zero,48(r16)
    17e0:	80800115 	stw	r2,4(r16)
    17e4:	103fe026 	beq	r2,zero,1768 <__srefill_r+0x80>
    17e8:	80c00e17 	ldw	r3,56(r16)
    17ec:	0005883a 	mov	r2,zero
    17f0:	80c00015 	stw	r3,0(r16)
    17f4:	003fec06 	br	17a8 <__srefill_r+0xc0>
    17f8:	000091c0 	call	91c <__sinit>
    17fc:	003fc406 	br	1710 <__srefill_r+0x28>
    1800:	00800074 	movhi	r2,1
    1804:	11075617 	ldw	r4,7512(r2)
    1808:	01400034 	movhi	r5,0
    180c:	00800044 	movi	r2,1
    1810:	8080030d 	sth	r2,12(r16)
    1814:	2945b304 	addi	r5,r5,5836
    1818:	00009640 	call	964 <_fwalk>
    181c:	9080024c 	andi	r2,r18,9
    1820:	8480030d 	sth	r18,12(r16)
    1824:	10800258 	cmpnei	r2,r2,9
    1828:	103fd41e 	bne	r2,zero,177c <__srefill_r+0x94>
    182c:	800b883a 	mov	r5,r16
    1830:	8809883a 	mov	r4,r17
    1834:	0005bd40 	call	5bd4 <__sflush_r>
    1838:	003fd006 	br	177c <__srefill_r+0x94>
    183c:	800b883a 	mov	r5,r16
    1840:	8809883a 	mov	r4,r17
    1844:	0005dfc0 	call	5dfc <_fflush_r>
    1848:	10000c1e 	bne	r2,zero,187c <__srefill_r+0x194>
    184c:	80c0030b 	ldhu	r3,12(r16)
    1850:	80000215 	stw	zero,8(r16)
    1854:	80000615 	stw	zero,24(r16)
    1858:	18fffdcc 	andi	r3,r3,65527
    185c:	003fc006 	br	1760 <__srefill_r+0x78>
    1860:	800b883a 	mov	r5,r16
    1864:	8809883a 	mov	r4,r17
    1868:	000688c0 	call	688c <__smakebuf_r>
    186c:	003fc006 	br	1770 <__srefill_r+0x88>
    1870:	10801014 	ori	r2,r2,64
    1874:	80000115 	stw	zero,4(r16)
    1878:	8080030d 	sth	r2,12(r16)
    187c:	00bfffc4 	movi	r2,-1
    1880:	003fc906 	br	17a8 <__srefill_r+0xc0>
    1884:	8080030b 	ldhu	r2,12(r16)
    1888:	183ff91e 	bne	r3,zero,1870 <__srefill_r+0x188>
    188c:	10800814 	ori	r2,r2,32
    1890:	8080030d 	sth	r2,12(r16)
    1894:	00bfffc4 	movi	r2,-1
    1898:	003fc306 	br	17a8 <__srefill_r+0xc0>
    189c:	00800244 	movi	r2,9
    18a0:	88800015 	stw	r2,0(r17)
    18a4:	18c01014 	ori	r3,r3,64
    18a8:	80c0030d 	sth	r3,12(r16)
    18ac:	00bfffc4 	movi	r2,-1
    18b0:	003fbd06 	br	17a8 <__srefill_r+0xc0>

000018b4 <_sbrk_r>:
    18b4:	defffe04 	addi	sp,sp,-8
    18b8:	dc000015 	stw	r16,0(sp)
    18bc:	00800074 	movhi	r2,1
    18c0:	2021883a 	mov	r16,r4
    18c4:	2809883a 	mov	r4,r5
    18c8:	dfc00115 	stw	ra,4(sp)
    18cc:	100e8315 	stw	zero,14860(r2)
    18d0:	000dcb40 	call	dcb4 <sbrk>
    18d4:	10ffffd8 	cmpnei	r3,r2,-1
    18d8:	18000426 	beq	r3,zero,18ec <_sbrk_r+0x38>
    18dc:	dfc00117 	ldw	ra,4(sp)
    18e0:	dc000017 	ldw	r16,0(sp)
    18e4:	dec00204 	addi	sp,sp,8
    18e8:	f800283a 	ret
    18ec:	00c00074 	movhi	r3,1
    18f0:	18ce8317 	ldw	r3,14860(r3)
    18f4:	183ff926 	beq	r3,zero,18dc <_sbrk_r+0x28>
    18f8:	80c00015 	stw	r3,0(r16)
    18fc:	dfc00117 	ldw	ra,4(sp)
    1900:	dc000017 	ldw	r16,0(sp)
    1904:	dec00204 	addi	sp,sp,8
    1908:	f800283a 	ret

0000190c <__sread>:
    190c:	defffe04 	addi	sp,sp,-8
    1910:	dc000015 	stw	r16,0(sp)
    1914:	2821883a 	mov	r16,r5
    1918:	2940038f 	ldh	r5,14(r5)
    191c:	dfc00115 	stw	ra,4(sp)
    1920:	0007aa80 	call	7aa8 <_read_r>
    1924:	10000716 	blt	r2,zero,1944 <__sread+0x38>
    1928:	80c01417 	ldw	r3,80(r16)
    192c:	1887883a 	add	r3,r3,r2
    1930:	80c01415 	stw	r3,80(r16)
    1934:	dfc00117 	ldw	ra,4(sp)
    1938:	dc000017 	ldw	r16,0(sp)
    193c:	dec00204 	addi	sp,sp,8
    1940:	f800283a 	ret
    1944:	80c0030b 	ldhu	r3,12(r16)
    1948:	18fbffcc 	andi	r3,r3,61439
    194c:	80c0030d 	sth	r3,12(r16)
    1950:	dfc00117 	ldw	ra,4(sp)
    1954:	dc000017 	ldw	r16,0(sp)
    1958:	dec00204 	addi	sp,sp,8
    195c:	f800283a 	ret

00001960 <__seofread>:
    1960:	0005883a 	mov	r2,zero
    1964:	f800283a 	ret

00001968 <__swrite>:
    1968:	2880030b 	ldhu	r2,12(r5)
    196c:	defffb04 	addi	sp,sp,-20
    1970:	dcc00315 	stw	r19,12(sp)
    1974:	dc800215 	stw	r18,8(sp)
    1978:	dc400115 	stw	r17,4(sp)
    197c:	dc000015 	stw	r16,0(sp)
    1980:	dfc00415 	stw	ra,16(sp)
    1984:	10c0400c 	andi	r3,r2,256
    1988:	2821883a 	mov	r16,r5
    198c:	2023883a 	mov	r17,r4
    1990:	3025883a 	mov	r18,r6
    1994:	3827883a 	mov	r19,r7
    1998:	2940038f 	ldh	r5,14(r5)
    199c:	18000c1e 	bne	r3,zero,19d0 <__swrite+0x68>
    19a0:	10bbffcc 	andi	r2,r2,61439
    19a4:	980f883a 	mov	r7,r19
    19a8:	900d883a 	mov	r6,r18
    19ac:	8809883a 	mov	r4,r17
    19b0:	8080030d 	sth	r2,12(r16)
    19b4:	dfc00417 	ldw	ra,16(sp)
    19b8:	dcc00317 	ldw	r19,12(sp)
    19bc:	dc800217 	ldw	r18,8(sp)
    19c0:	dc400117 	ldw	r17,4(sp)
    19c4:	dc000017 	ldw	r16,0(sp)
    19c8:	dec00504 	addi	sp,sp,20
    19cc:	0003fb41 	jmpi	3fb4 <_write_r>
    19d0:	01c00084 	movi	r7,2
    19d4:	000d883a 	mov	r6,zero
    19d8:	00067900 	call	6790 <_lseek_r>
    19dc:	8080030b 	ldhu	r2,12(r16)
    19e0:	8140038f 	ldh	r5,14(r16)
    19e4:	003fee06 	br	19a0 <__swrite+0x38>

000019e8 <__sseek>:
    19e8:	defffe04 	addi	sp,sp,-8
    19ec:	dc000015 	stw	r16,0(sp)
    19f0:	2821883a 	mov	r16,r5
    19f4:	2940038f 	ldh	r5,14(r5)
    19f8:	dfc00115 	stw	ra,4(sp)
    19fc:	00067900 	call	6790 <_lseek_r>
    1a00:	10ffffd8 	cmpnei	r3,r2,-1
    1a04:	18000826 	beq	r3,zero,1a28 <__sseek+0x40>
    1a08:	80c0030b 	ldhu	r3,12(r16)
    1a0c:	80801415 	stw	r2,80(r16)
    1a10:	18c40014 	ori	r3,r3,4096
    1a14:	80c0030d 	sth	r3,12(r16)
    1a18:	dfc00117 	ldw	ra,4(sp)
    1a1c:	dc000017 	ldw	r16,0(sp)
    1a20:	dec00204 	addi	sp,sp,8
    1a24:	f800283a 	ret
    1a28:	80c0030b 	ldhu	r3,12(r16)
    1a2c:	18fbffcc 	andi	r3,r3,61439
    1a30:	80c0030d 	sth	r3,12(r16)
    1a34:	dfc00117 	ldw	ra,4(sp)
    1a38:	dc000017 	ldw	r16,0(sp)
    1a3c:	dec00204 	addi	sp,sp,8
    1a40:	f800283a 	ret

00001a44 <__sclose>:
    1a44:	2940038f 	ldh	r5,14(r5)
    1a48:	00041781 	jmpi	4178 <_close_r>

00001a4c <strlen>:
    1a4c:	208000cc 	andi	r2,r4,3
    1a50:	10002026 	beq	r2,zero,1ad4 <strlen+0x88>
    1a54:	20800007 	ldb	r2,0(r4)
    1a58:	10002026 	beq	r2,zero,1adc <strlen+0x90>
    1a5c:	2005883a 	mov	r2,r4
    1a60:	00000206 	br	1a6c <strlen+0x20>
    1a64:	10c00007 	ldb	r3,0(r2)
    1a68:	18001826 	beq	r3,zero,1acc <strlen+0x80>
    1a6c:	10800044 	addi	r2,r2,1
    1a70:	10c000cc 	andi	r3,r2,3
    1a74:	183ffb1e 	bne	r3,zero,1a64 <strlen+0x18>
    1a78:	11400017 	ldw	r5,0(r2)
    1a7c:	01ffbff4 	movhi	r7,65279
    1a80:	39ffbfc4 	addi	r7,r7,-257
    1a84:	29c7883a 	add	r3,r5,r7
    1a88:	01a02074 	movhi	r6,32897
    1a8c:	014a303a 	nor	r5,zero,r5
    1a90:	1946703a 	and	r3,r3,r5
    1a94:	31a02004 	addi	r6,r6,-32640
    1a98:	1986703a 	and	r3,r3,r6
    1a9c:	1800091e 	bne	r3,zero,1ac4 <strlen+0x78>
    1aa0:	10800104 	addi	r2,r2,4
    1aa4:	11400017 	ldw	r5,0(r2)
    1aa8:	29c7883a 	add	r3,r5,r7
    1aac:	014a303a 	nor	r5,zero,r5
    1ab0:	1946703a 	and	r3,r3,r5
    1ab4:	1986703a 	and	r3,r3,r6
    1ab8:	183ff926 	beq	r3,zero,1aa0 <strlen+0x54>
    1abc:	00000106 	br	1ac4 <strlen+0x78>
    1ac0:	10800044 	addi	r2,r2,1
    1ac4:	10c00007 	ldb	r3,0(r2)
    1ac8:	183ffd1e 	bne	r3,zero,1ac0 <strlen+0x74>
    1acc:	1105c83a 	sub	r2,r2,r4
    1ad0:	f800283a 	ret
    1ad4:	2005883a 	mov	r2,r4
    1ad8:	003fe706 	br	1a78 <strlen+0x2c>
    1adc:	0005883a 	mov	r2,zero
    1ae0:	f800283a 	ret

00001ae4 <_strtol_l.isra.0>:
    1ae4:	defff404 	addi	sp,sp,-48
    1ae8:	ddc00915 	stw	r23,36(sp)
    1aec:	dd000615 	stw	r20,24(sp)
    1af0:	dcc00515 	stw	r19,20(sp)
    1af4:	dfc00b15 	stw	ra,44(sp)
    1af8:	df000a15 	stw	fp,40(sp)
    1afc:	dd800815 	stw	r22,32(sp)
    1b00:	dd400715 	stw	r21,28(sp)
    1b04:	dc800415 	stw	r18,16(sp)
    1b08:	dc400315 	stw	r17,12(sp)
    1b0c:	dc000215 	stw	r16,8(sp)
    1b10:	2827883a 	mov	r19,r5
    1b14:	d9000115 	stw	r4,4(sp)
    1b18:	3029883a 	mov	r20,r6
    1b1c:	382f883a 	mov	r23,r7
    1b20:	2807883a 	mov	r3,r5
    1b24:	00000106 	br	1b2c <_strtol_l.isra.0+0x48>
    1b28:	e007883a 	mov	r3,fp
    1b2c:	1f000044 	addi	fp,r3,1
    1b30:	e43fffc3 	ldbu	r16,-1(fp)
    1b34:	00800074 	movhi	r2,1
    1b38:	8085883a 	add	r2,r16,r2
    1b3c:	10bf02c3 	ldbu	r2,-1013(r2)
    1b40:	1080020c 	andi	r2,r2,8
    1b44:	103ff81e 	bne	r2,zero,1b28 <_strtol_l.isra.0+0x44>
    1b48:	80800b58 	cmpnei	r2,r16,45
    1b4c:	10005826 	beq	r2,zero,1cb0 <_strtol_l.isra.0+0x1cc>
    1b50:	80800ae0 	cmpeqi	r2,r16,43
    1b54:	10003d1e 	bne	r2,zero,1c4c <_strtol_l.isra.0+0x168>
    1b58:	002b883a 	mov	r21,zero
    1b5c:	b8003f26 	beq	r23,zero,1c5c <_strtol_l.isra.0+0x178>
    1b60:	b8800420 	cmpeqi	r2,r23,16
    1b64:	1000561e 	bne	r2,zero,1cc0 <_strtol_l.isra.0+0x1dc>
    1b68:	b823883a 	mov	r17,r23
    1b6c:	04a00034 	movhi	r18,32768
    1b70:	a800011e 	bne	r21,zero,1b78 <_strtol_l.isra.0+0x94>
    1b74:	94bfffc4 	addi	r18,r18,-1
    1b78:	880b883a 	mov	r5,r17
    1b7c:	9009883a 	mov	r4,r18
    1b80:	000ab4c0 	call	ab4c <__umodsi3>
    1b84:	880b883a 	mov	r5,r17
    1b88:	9009883a 	mov	r4,r18
    1b8c:	d8800015 	stw	r2,0(sp)
    1b90:	000aae80 	call	aae8 <__udivsi3>
    1b94:	80fff404 	addi	r3,r16,-48
    1b98:	190002a8 	cmpgeui	r4,r3,10
    1b9c:	102d883a 	mov	r22,r2
    1ba0:	000d883a 	mov	r6,zero
    1ba4:	000b883a 	mov	r5,zero
    1ba8:	20000f1e 	bne	r4,zero,1be8 <_strtol_l.isra.0+0x104>
    1bac:	1821883a 	mov	r16,r3
    1bb0:	85c0120e 	bge	r16,r23,1bfc <_strtol_l.isra.0+0x118>
    1bb4:	30ffffe0 	cmpeqi	r3,r6,-1
    1bb8:	1800061e 	bne	r3,zero,1bd4 <_strtol_l.isra.0+0xf0>
    1bbc:	b1402e36 	bltu	r22,r5,1c78 <_strtol_l.isra.0+0x194>
    1bc0:	b1402b26 	beq	r22,r5,1c70 <_strtol_l.isra.0+0x18c>
    1bc4:	8809883a 	mov	r4,r17
    1bc8:	000aba80 	call	aba8 <__mulsi3>
    1bcc:	808b883a 	add	r5,r16,r2
    1bd0:	01800044 	movi	r6,1
    1bd4:	e7000044 	addi	fp,fp,1
    1bd8:	e43fffc3 	ldbu	r16,-1(fp)
    1bdc:	80fff404 	addi	r3,r16,-48
    1be0:	190002a8 	cmpgeui	r4,r3,10
    1be4:	203ff126 	beq	r4,zero,1bac <_strtol_l.isra.0+0xc8>
    1be8:	80ffefc4 	addi	r3,r16,-65
    1bec:	18c006a8 	cmpgeui	r3,r3,26
    1bf0:	1800231e 	bne	r3,zero,1c80 <_strtol_l.isra.0+0x19c>
    1bf4:	843ff244 	addi	r16,r16,-55
    1bf8:	85ffee16 	blt	r16,r23,1bb4 <_strtol_l.isra.0+0xd0>
    1bfc:	30bfffd8 	cmpnei	r2,r6,-1
    1c00:	10002426 	beq	r2,zero,1c94 <_strtol_l.isra.0+0x1b0>
    1c04:	a8000126 	beq	r21,zero,1c0c <_strtol_l.isra.0+0x128>
    1c08:	014bc83a 	sub	r5,zero,r5
    1c0c:	a0000226 	beq	r20,zero,1c18 <_strtol_l.isra.0+0x134>
    1c10:	3000411e 	bne	r6,zero,1d18 <_strtol_l.isra.0+0x234>
    1c14:	a4c00015 	stw	r19,0(r20)
    1c18:	2805883a 	mov	r2,r5
    1c1c:	dfc00b17 	ldw	ra,44(sp)
    1c20:	df000a17 	ldw	fp,40(sp)
    1c24:	ddc00917 	ldw	r23,36(sp)
    1c28:	dd800817 	ldw	r22,32(sp)
    1c2c:	dd400717 	ldw	r21,28(sp)
    1c30:	dd000617 	ldw	r20,24(sp)
    1c34:	dcc00517 	ldw	r19,20(sp)
    1c38:	dc800417 	ldw	r18,16(sp)
    1c3c:	dc400317 	ldw	r17,12(sp)
    1c40:	dc000217 	ldw	r16,8(sp)
    1c44:	dec00c04 	addi	sp,sp,48
    1c48:	f800283a 	ret
    1c4c:	e4000003 	ldbu	r16,0(fp)
    1c50:	002b883a 	mov	r21,zero
    1c54:	1f000084 	addi	fp,r3,2
    1c58:	b83fc11e 	bne	r23,zero,1b60 <_strtol_l.isra.0+0x7c>
    1c5c:	80800c20 	cmpeqi	r2,r16,48
    1c60:	1000241e 	bne	r2,zero,1cf4 <_strtol_l.isra.0+0x210>
    1c64:	04400284 	movi	r17,10
    1c68:	05c00284 	movi	r23,10
    1c6c:	003fbf06 	br	1b6c <_strtol_l.isra.0+0x88>
    1c70:	d8800017 	ldw	r2,0(sp)
    1c74:	143fd30e 	bge	r2,r16,1bc4 <_strtol_l.isra.0+0xe0>
    1c78:	01bfffc4 	movi	r6,-1
    1c7c:	003fd506 	br	1bd4 <_strtol_l.isra.0+0xf0>
    1c80:	80bfe7c4 	addi	r2,r16,-97
    1c84:	108006a8 	cmpgeui	r2,r2,26
    1c88:	103fdc1e 	bne	r2,zero,1bfc <_strtol_l.isra.0+0x118>
    1c8c:	843fea44 	addi	r16,r16,-87
    1c90:	003fc706 	br	1bb0 <_strtol_l.isra.0+0xcc>
    1c94:	d8c00117 	ldw	r3,4(sp)
    1c98:	00800884 	movi	r2,34
    1c9c:	18800015 	stw	r2,0(r3)
    1ca0:	a0001b26 	beq	r20,zero,1d10 <_strtol_l.isra.0+0x22c>
    1ca4:	e4ffffc4 	addi	r19,fp,-1
    1ca8:	900b883a 	mov	r5,r18
    1cac:	003fd906 	br	1c14 <_strtol_l.isra.0+0x130>
    1cb0:	e4000003 	ldbu	r16,0(fp)
    1cb4:	05400044 	movi	r21,1
    1cb8:	1f000084 	addi	fp,r3,2
    1cbc:	003fa706 	br	1b5c <_strtol_l.isra.0+0x78>
    1cc0:	80800c18 	cmpnei	r2,r16,48
    1cc4:	1000041e 	bne	r2,zero,1cd8 <_strtol_l.isra.0+0x1f4>
    1cc8:	e0800003 	ldbu	r2,0(fp)
    1ccc:	108037cc 	andi	r2,r2,223
    1cd0:	10801620 	cmpeqi	r2,r2,88
    1cd4:	1000021e 	bne	r2,zero,1ce0 <_strtol_l.isra.0+0x1fc>
    1cd8:	04400404 	movi	r17,16
    1cdc:	003fa306 	br	1b6c <_strtol_l.isra.0+0x88>
    1ce0:	e4000043 	ldbu	r16,1(fp)
    1ce4:	04400404 	movi	r17,16
    1ce8:	e7000084 	addi	fp,fp,2
    1cec:	05c00404 	movi	r23,16
    1cf0:	003f9e06 	br	1b6c <_strtol_l.isra.0+0x88>
    1cf4:	e0800003 	ldbu	r2,0(fp)
    1cf8:	108037cc 	andi	r2,r2,223
    1cfc:	10801620 	cmpeqi	r2,r2,88
    1d00:	103ff71e 	bne	r2,zero,1ce0 <_strtol_l.isra.0+0x1fc>
    1d04:	04400204 	movi	r17,8
    1d08:	05c00204 	movi	r23,8
    1d0c:	003f9706 	br	1b6c <_strtol_l.isra.0+0x88>
    1d10:	900b883a 	mov	r5,r18
    1d14:	003fc006 	br	1c18 <_strtol_l.isra.0+0x134>
    1d18:	2825883a 	mov	r18,r5
    1d1c:	003fe106 	br	1ca4 <_strtol_l.isra.0+0x1c0>

00001d20 <_strtol_r>:
    1d20:	0001ae41 	jmpi	1ae4 <_strtol_l.isra.0>

00001d24 <strtol_l>:
    1d24:	00800074 	movhi	r2,1
    1d28:	300f883a 	mov	r7,r6
    1d2c:	280d883a 	mov	r6,r5
    1d30:	200b883a 	mov	r5,r4
    1d34:	11075717 	ldw	r4,7516(r2)
    1d38:	0001ae41 	jmpi	1ae4 <_strtol_l.isra.0>

00001d3c <strtol>:
    1d3c:	00800074 	movhi	r2,1
    1d40:	300f883a 	mov	r7,r6
    1d44:	280d883a 	mov	r6,r5
    1d48:	200b883a 	mov	r5,r4
    1d4c:	11075717 	ldw	r4,7516(r2)
    1d50:	0001ae41 	jmpi	1ae4 <_strtol_l.isra.0>

00001d54 <___vfprintf_internal_r>:
    1d54:	deffbd04 	addi	sp,sp,-268
    1d58:	dfc04215 	stw	ra,264(sp)
    1d5c:	dd003d15 	stw	r20,244(sp)
    1d60:	dcc03c15 	stw	r19,240(sp)
    1d64:	dc003915 	stw	r16,228(sp)
    1d68:	d9000515 	stw	r4,20(sp)
    1d6c:	2021883a 	mov	r16,r4
    1d70:	2827883a 	mov	r19,r5
    1d74:	3029883a 	mov	r20,r6
    1d78:	d9c00615 	stw	r7,24(sp)
    1d7c:	df004115 	stw	fp,260(sp)
    1d80:	ddc04015 	stw	r23,256(sp)
    1d84:	dd803f15 	stw	r22,252(sp)
    1d88:	dd403e15 	stw	r21,248(sp)
    1d8c:	dc803b15 	stw	r18,236(sp)
    1d90:	dc403a15 	stw	r17,232(sp)
    1d94:	00067780 	call	6778 <_localeconv_r>
    1d98:	10800017 	ldw	r2,0(r2)
    1d9c:	1009883a 	mov	r4,r2
    1da0:	d8800d15 	stw	r2,52(sp)
    1da4:	0001a4c0 	call	1a4c <strlen>
    1da8:	d8800b15 	stw	r2,44(sp)
    1dac:	80000226 	beq	r16,zero,1db8 <___vfprintf_internal_r+0x64>
    1db0:	80800e17 	ldw	r2,56(r16)
    1db4:	1002de26 	beq	r2,zero,2930 <___vfprintf_internal_r+0xbdc>
    1db8:	9880030b 	ldhu	r2,12(r19)
    1dbc:	10c8000c 	andi	r3,r2,8192
    1dc0:	1800061e 	bne	r3,zero,1ddc <___vfprintf_internal_r+0x88>
    1dc4:	98c01917 	ldw	r3,100(r19)
    1dc8:	0137ffc4 	movi	r4,-8193
    1dcc:	10880014 	ori	r2,r2,8192
    1dd0:	1906703a 	and	r3,r3,r4
    1dd4:	9880030d 	sth	r2,12(r19)
    1dd8:	98c01915 	stw	r3,100(r19)
    1ddc:	10c0020c 	andi	r3,r2,8
    1de0:	18009a26 	beq	r3,zero,204c <___vfprintf_internal_r+0x2f8>
    1de4:	98c00417 	ldw	r3,16(r19)
    1de8:	18009826 	beq	r3,zero,204c <___vfprintf_internal_r+0x2f8>
    1dec:	1080068c 	andi	r2,r2,26
    1df0:	10800298 	cmpnei	r2,r2,10
    1df4:	10009d26 	beq	r2,zero,206c <___vfprintf_internal_r+0x318>
    1df8:	ddc02904 	addi	r23,sp,164
    1dfc:	ddc01c15 	stw	r23,112(sp)
    1e00:	d8001e15 	stw	zero,120(sp)
    1e04:	d8001d15 	stw	zero,116(sp)
    1e08:	d8000815 	stw	zero,32(sp)
    1e0c:	d8000915 	stw	zero,36(sp)
    1e10:	d8000a15 	stw	zero,40(sp)
    1e14:	b811883a 	mov	r8,r23
    1e18:	d8000c15 	stw	zero,48(sp)
    1e1c:	d8001115 	stw	zero,68(sp)
    1e20:	d8000415 	stw	zero,16(sp)
    1e24:	a02d883a 	mov	r22,r20
    1e28:	b0800007 	ldb	r2,0(r22)
    1e2c:	1000a226 	beq	r2,zero,20b8 <___vfprintf_internal_r+0x364>
    1e30:	10800960 	cmpeqi	r2,r2,37
    1e34:	1005351e 	bne	r2,zero,330c <___vfprintf_internal_r+0x15b8>
    1e38:	b021883a 	mov	r16,r22
    1e3c:	00000206 	br	1e48 <___vfprintf_internal_r+0xf4>
    1e40:	18009326 	beq	r3,zero,2090 <___vfprintf_internal_r+0x33c>
    1e44:	8821883a 	mov	r16,r17
    1e48:	80800047 	ldb	r2,1(r16)
    1e4c:	84400044 	addi	r17,r16,1
    1e50:	10c00958 	cmpnei	r3,r2,37
    1e54:	103ffa1e 	bne	r2,zero,1e40 <___vfprintf_internal_r+0xec>
    1e58:	8da5c83a 	sub	r18,r17,r22
    1e5c:	90009626 	beq	r18,zero,20b8 <___vfprintf_internal_r+0x364>
    1e60:	d8c01e17 	ldw	r3,120(sp)
    1e64:	d8801d17 	ldw	r2,116(sp)
    1e68:	45800015 	stw	r22,0(r8)
    1e6c:	1c87883a 	add	r3,r3,r18
    1e70:	10800044 	addi	r2,r2,1
    1e74:	d8801d15 	stw	r2,116(sp)
    1e78:	44800115 	stw	r18,4(r8)
    1e7c:	d8c01e15 	stw	r3,120(sp)
    1e80:	10800208 	cmpgei	r2,r2,8
    1e84:	1000851e 	bne	r2,zero,209c <___vfprintf_internal_r+0x348>
    1e88:	42000204 	addi	r8,r8,8
    1e8c:	d8c00417 	ldw	r3,16(sp)
    1e90:	80800047 	ldb	r2,1(r16)
    1e94:	1c87883a 	add	r3,r3,r18
    1e98:	d8c00415 	stw	r3,16(sp)
    1e9c:	10008626 	beq	r2,zero,20b8 <___vfprintf_internal_r+0x364>
    1ea0:	8a800047 	ldb	r10,1(r17)
    1ea4:	8d800044 	addi	r22,r17,1
    1ea8:	d8001545 	stb	zero,85(sp)
    1eac:	0009883a 	mov	r4,zero
    1eb0:	000b883a 	mov	r5,zero
    1eb4:	02ffffc4 	movi	r11,-1
    1eb8:	0021883a 	mov	r16,zero
    1ebc:	0019883a 	mov	r12,zero
    1ec0:	b5800044 	addi	r22,r22,1
    1ec4:	5039883a 	mov	fp,r10
    1ec8:	e0bff804 	addi	r2,fp,-32
    1ecc:	10c01668 	cmpgeui	r3,r2,89
    1ed0:	18009d1e 	bne	r3,zero,2148 <___vfprintf_internal_r+0x3f4>
    1ed4:	100490ba 	slli	r2,r2,2
    1ed8:	00c00034 	movhi	r3,0
    1edc:	10c7883a 	add	r3,r2,r3
    1ee0:	1887ba17 	ldw	r2,7912(r3)
    1ee4:	1000683a 	jmp	r2
    1ee8:	00002220 	cmpeqi	zero,zero,136
    1eec:	00002148 	cmpgei	zero,zero,133
    1ef0:	00002148 	cmpgei	zero,zero,133
    1ef4:	00002214 	movui	zero,136
    1ef8:	00002148 	cmpgei	zero,zero,133
    1efc:	00002148 	cmpgei	zero,zero,133
    1f00:	00002148 	cmpgei	zero,zero,133
    1f04:	00002148 	cmpgei	zero,zero,133
    1f08:	00002148 	cmpgei	zero,zero,133
    1f0c:	00002148 	cmpgei	zero,zero,133
    1f10:	000021ec 	andhi	zero,zero,135
    1f14:	000021dc 	xori	zero,zero,135
    1f18:	00002148 	cmpgei	zero,zero,133
    1f1c:	000021c4 	movi	zero,135
    1f20:	00002178 	rdprs	zero,zero,133
    1f24:	00002148 	cmpgei	zero,zero,133
    1f28:	0000216c 	andhi	zero,zero,133
    1f2c:	00002110 	cmplti	zero,zero,132
    1f30:	00002110 	cmplti	zero,zero,132
    1f34:	00002110 	cmplti	zero,zero,132
    1f38:	00002110 	cmplti	zero,zero,132
    1f3c:	00002110 	cmplti	zero,zero,132
    1f40:	00002110 	cmplti	zero,zero,132
    1f44:	00002110 	cmplti	zero,zero,132
    1f48:	00002110 	cmplti	zero,zero,132
    1f4c:	00002110 	cmplti	zero,zero,132
    1f50:	00002148 	cmpgei	zero,zero,133
    1f54:	00002148 	cmpgei	zero,zero,133
    1f58:	00002148 	cmpgei	zero,zero,133
    1f5c:	00002148 	cmpgei	zero,zero,133
    1f60:	00002148 	cmpgei	zero,zero,133
    1f64:	00002148 	cmpgei	zero,zero,133
    1f68:	00002148 	cmpgei	zero,zero,133
    1f6c:	00002148 	cmpgei	zero,zero,133
    1f70:	00002148 	cmpgei	zero,zero,133
    1f74:	00002148 	cmpgei	zero,zero,133
    1f78:	00002734 	movhi	zero,156
    1f7c:	00002654 	movui	zero,153
    1f80:	00002148 	cmpgei	zero,zero,133
    1f84:	00002654 	movui	zero,153
    1f88:	00002148 	cmpgei	zero,zero,133
    1f8c:	00002148 	cmpgei	zero,zero,133
    1f90:	00002148 	cmpgei	zero,zero,133
    1f94:	00002148 	cmpgei	zero,zero,133
    1f98:	00002648 	cmpgei	zero,zero,153
    1f9c:	00002148 	cmpgei	zero,zero,133
    1fa0:	00002148 	cmpgei	zero,zero,133
    1fa4:	00002614 	movui	zero,152
    1fa8:	00002148 	cmpgei	zero,zero,133
    1fac:	00002148 	cmpgei	zero,zero,133
    1fb0:	00002148 	cmpgei	zero,zero,133
    1fb4:	00002148 	cmpgei	zero,zero,133
    1fb8:	00002148 	cmpgei	zero,zero,133
    1fbc:	00002854 	movui	zero,161
    1fc0:	00002148 	cmpgei	zero,zero,133
    1fc4:	00002148 	cmpgei	zero,zero,133
    1fc8:	0000280c 	andi	zero,zero,160
    1fcc:	00002148 	cmpgei	zero,zero,133
    1fd0:	00002148 	cmpgei	zero,zero,133
    1fd4:	00002148 	cmpgei	zero,zero,133
    1fd8:	00002148 	cmpgei	zero,zero,133
    1fdc:	00002148 	cmpgei	zero,zero,133
    1fe0:	00002148 	cmpgei	zero,zero,133
    1fe4:	00002148 	cmpgei	zero,zero,133
    1fe8:	00002148 	cmpgei	zero,zero,133
    1fec:	00002148 	cmpgei	zero,zero,133
    1ff0:	00002148 	cmpgei	zero,zero,133
    1ff4:	000023a4 	muli	zero,zero,142
    1ff8:	00002330 	cmpltui	zero,zero,140
    1ffc:	00002654 	movui	zero,153
    2000:	00002654 	movui	zero,153
    2004:	00002654 	movui	zero,153
    2008:	00002924 	muli	zero,zero,164
    200c:	00002330 	cmpltui	zero,zero,140
    2010:	00002148 	cmpgei	zero,zero,133
    2014:	00002148 	cmpgei	zero,zero,133
    2018:	00002910 	cmplti	zero,zero,164
    201c:	00002148 	cmpgei	zero,zero,133
    2020:	000025d4 	movui	zero,151
    2024:	00002594 	movui	zero,150
    2028:	00002894 	movui	zero,162
    202c:	00002888 	cmpgei	zero,zero,162
    2030:	00002148 	cmpgei	zero,zero,133
    2034:	000022d4 	movui	zero,139
    2038:	00002148 	cmpgei	zero,zero,133
    203c:	00002294 	movui	zero,138
    2040:	00002148 	cmpgei	zero,zero,133
    2044:	00002148 	cmpgei	zero,zero,133
    2048:	0000224c 	andi	zero,zero,137
    204c:	d9000517 	ldw	r4,20(sp)
    2050:	980b883a 	mov	r5,r19
    2054:	00040180 	call	4018 <__swsetup_r>
    2058:	1007561e 	bne	r2,zero,3db4 <___vfprintf_internal_r+0x2060>
    205c:	9880030b 	ldhu	r2,12(r19)
    2060:	1080068c 	andi	r2,r2,26
    2064:	10800298 	cmpnei	r2,r2,10
    2068:	103f631e 	bne	r2,zero,1df8 <___vfprintf_internal_r+0xa4>
    206c:	9880038f 	ldh	r2,14(r19)
    2070:	103f6116 	blt	r2,zero,1df8 <___vfprintf_internal_r+0xa4>
    2074:	d9c00617 	ldw	r7,24(sp)
    2078:	d9000517 	ldw	r4,20(sp)
    207c:	a00d883a 	mov	r6,r20
    2080:	980b883a 	mov	r5,r19
    2084:	0003ef40 	call	3ef4 <__sbprintf>
    2088:	d8800415 	stw	r2,16(sp)
    208c:	00001306 	br	20dc <___vfprintf_internal_r+0x388>
    2090:	8da5c83a 	sub	r18,r17,r22
    2094:	903f8226 	beq	r18,zero,1ea0 <___vfprintf_internal_r+0x14c>
    2098:	003f7106 	br	1e60 <___vfprintf_internal_r+0x10c>
    209c:	d9000517 	ldw	r4,20(sp)
    20a0:	d9801c04 	addi	r6,sp,112
    20a4:	980b883a 	mov	r5,r19
    20a8:	000822c0 	call	822c <__sprint_r>
    20ac:	1000081e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    20b0:	b811883a 	mov	r8,r23
    20b4:	003f7506 	br	1e8c <___vfprintf_internal_r+0x138>
    20b8:	d8801e17 	ldw	r2,120(sp)
    20bc:	10000426 	beq	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    20c0:	d9000517 	ldw	r4,20(sp)
    20c4:	d9801c04 	addi	r6,sp,112
    20c8:	980b883a 	mov	r5,r19
    20cc:	000822c0 	call	822c <__sprint_r>
    20d0:	9880030b 	ldhu	r2,12(r19)
    20d4:	1080100c 	andi	r2,r2,64
    20d8:	1007361e 	bne	r2,zero,3db4 <___vfprintf_internal_r+0x2060>
    20dc:	d8800417 	ldw	r2,16(sp)
    20e0:	dfc04217 	ldw	ra,264(sp)
    20e4:	df004117 	ldw	fp,260(sp)
    20e8:	ddc04017 	ldw	r23,256(sp)
    20ec:	dd803f17 	ldw	r22,252(sp)
    20f0:	dd403e17 	ldw	r21,248(sp)
    20f4:	dd003d17 	ldw	r20,244(sp)
    20f8:	dcc03c17 	ldw	r19,240(sp)
    20fc:	dc803b17 	ldw	r18,236(sp)
    2100:	dc403a17 	ldw	r17,232(sp)
    2104:	dc003917 	ldw	r16,228(sp)
    2108:	dec04304 	addi	sp,sp,268
    210c:	f800283a 	ret
    2110:	0021883a 	mov	r16,zero
    2114:	e0fff404 	addi	r3,fp,-48
    2118:	800490ba 	slli	r2,r16,2
    211c:	b5800044 	addi	r22,r22,1
    2120:	b73fffc7 	ldb	fp,-1(r22)
    2124:	1421883a 	add	r16,r2,r16
    2128:	8421883a 	add	r16,r16,r16
    212c:	1c21883a 	add	r16,r3,r16
    2130:	e0fff404 	addi	r3,fp,-48
    2134:	188002b0 	cmpltui	r2,r3,10
    2138:	103ff71e 	bne	r2,zero,2118 <___vfprintf_internal_r+0x3c4>
    213c:	e0bff804 	addi	r2,fp,-32
    2140:	10c01668 	cmpgeui	r3,r2,89
    2144:	183f6326 	beq	r3,zero,1ed4 <___vfprintf_internal_r+0x180>
    2148:	21003fcc 	andi	r4,r4,255
    214c:	2006741e 	bne	r4,zero,3b20 <___vfprintf_internal_r+0x1dcc>
    2150:	e03fd926 	beq	fp,zero,20b8 <___vfprintf_internal_r+0x364>
    2154:	df001f05 	stb	fp,124(sp)
    2158:	d8001545 	stb	zero,85(sp)
    215c:	05400044 	movi	r21,1
    2160:	05000044 	movi	r20,1
    2164:	dc401f04 	addi	r17,sp,124
    2168:	00009706 	br	23c8 <___vfprintf_internal_r+0x674>
    216c:	63002014 	ori	r12,r12,128
    2170:	b2800007 	ldb	r10,0(r22)
    2174:	003f5206 	br	1ec0 <___vfprintf_internal_r+0x16c>
    2178:	b7000007 	ldb	fp,0(r22)
    217c:	b0800044 	addi	r2,r22,1
    2180:	e0c00aa0 	cmpeqi	r3,fp,42
    2184:	1807491e 	bne	r3,zero,3eac <___vfprintf_internal_r+0x2158>
    2188:	e0fff404 	addi	r3,fp,-48
    218c:	198002b0 	cmpltui	r6,r3,10
    2190:	102d883a 	mov	r22,r2
    2194:	0017883a 	mov	r11,zero
    2198:	303f4b26 	beq	r6,zero,1ec8 <___vfprintf_internal_r+0x174>
    219c:	580490ba 	slli	r2,r11,2
    21a0:	b5800044 	addi	r22,r22,1
    21a4:	b73fffc7 	ldb	fp,-1(r22)
    21a8:	12d7883a 	add	r11,r2,r11
    21ac:	5ad7883a 	add	r11,r11,r11
    21b0:	58d7883a 	add	r11,r11,r3
    21b4:	e0fff404 	addi	r3,fp,-48
    21b8:	188002b0 	cmpltui	r2,r3,10
    21bc:	103ff71e 	bne	r2,zero,219c <___vfprintf_internal_r+0x448>
    21c0:	003f4106 	br	1ec8 <___vfprintf_internal_r+0x174>
    21c4:	b7000003 	ldbu	fp,0(r22)
    21c8:	e2803fcc 	andi	r10,fp,255
    21cc:	5280201c 	xori	r10,r10,128
    21d0:	63000114 	ori	r12,r12,4
    21d4:	52bfe004 	addi	r10,r10,-128
    21d8:	003f3906 	br	1ec0 <___vfprintf_internal_r+0x16c>
    21dc:	01000044 	movi	r4,1
    21e0:	01400ac4 	movi	r5,43
    21e4:	b2800007 	ldb	r10,0(r22)
    21e8:	003f3506 	br	1ec0 <___vfprintf_internal_r+0x16c>
    21ec:	d8800617 	ldw	r2,24(sp)
    21f0:	b7000003 	ldbu	fp,0(r22)
    21f4:	14000017 	ldw	r16,0(r2)
    21f8:	10800104 	addi	r2,r2,4
    21fc:	8004da16 	blt	r16,zero,3568 <___vfprintf_internal_r+0x1814>
    2200:	d8800615 	stw	r2,24(sp)
    2204:	e2803fcc 	andi	r10,fp,255
    2208:	5280201c 	xori	r10,r10,128
    220c:	52bfe004 	addi	r10,r10,-128
    2210:	003f2b06 	br	1ec0 <___vfprintf_internal_r+0x16c>
    2214:	63000054 	ori	r12,r12,1
    2218:	b2800007 	ldb	r10,0(r22)
    221c:	003f2806 	br	1ec0 <___vfprintf_internal_r+0x16c>
    2220:	28803fcc 	andi	r2,r5,255
    2224:	1080201c 	xori	r2,r2,128
    2228:	10bfe004 	addi	r2,r2,-128
    222c:	b7000003 	ldbu	fp,0(r22)
    2230:	103ff41e 	bne	r2,zero,2204 <___vfprintf_internal_r+0x4b0>
    2234:	e2803fcc 	andi	r10,fp,255
    2238:	5280201c 	xori	r10,r10,128
    223c:	01000044 	movi	r4,1
    2240:	01400804 	movi	r5,32
    2244:	52bfe004 	addi	r10,r10,-128
    2248:	003f1d06 	br	1ec0 <___vfprintf_internal_r+0x16c>
    224c:	21003fcc 	andi	r4,r4,255
    2250:	2006b81e 	bne	r4,zero,3d34 <___vfprintf_internal_r+0x1fe0>
    2254:	00800074 	movhi	r2,1
    2258:	10bef304 	addi	r2,r2,-1076
    225c:	d8800c15 	stw	r2,48(sp)
    2260:	6080080c 	andi	r2,r12,32
    2264:	10017026 	beq	r2,zero,2828 <___vfprintf_internal_r+0xad4>
    2268:	d8800617 	ldw	r2,24(sp)
    226c:	15400017 	ldw	r21,0(r2)
    2270:	15000117 	ldw	r20,4(r2)
    2274:	10800204 	addi	r2,r2,8
    2278:	d8800615 	stw	r2,24(sp)
    227c:	6080004c 	andi	r2,r12,1
    2280:	10000226 	beq	r2,zero,228c <___vfprintf_internal_r+0x538>
    2284:	ad04b03a 	or	r2,r21,r20
    2288:	1004aa1e 	bne	r2,zero,3534 <___vfprintf_internal_r+0x17e0>
    228c:	00800084 	movi	r2,2
    2290:	00018f06 	br	28d0 <___vfprintf_internal_r+0xb7c>
    2294:	21003fcc 	andi	r4,r4,255
    2298:	2006a41e 	bne	r4,zero,3d2c <___vfprintf_internal_r+0x1fd8>
    229c:	6080080c 	andi	r2,r12,32
    22a0:	1001b41e 	bne	r2,zero,2974 <___vfprintf_internal_r+0xc20>
    22a4:	d8800617 	ldw	r2,24(sp)
    22a8:	60c0040c 	andi	r3,r12,16
    22ac:	15400017 	ldw	r21,0(r2)
    22b0:	10800104 	addi	r2,r2,4
    22b4:	18016e1e 	bne	r3,zero,2870 <___vfprintf_internal_r+0xb1c>
    22b8:	60c0100c 	andi	r3,r12,64
    22bc:	1805a526 	beq	r3,zero,3954 <___vfprintf_internal_r+0x1c00>
    22c0:	d8800615 	stw	r2,24(sp)
    22c4:	ad7fffcc 	andi	r21,r21,65535
    22c8:	0029883a 	mov	r20,zero
    22cc:	00800044 	movi	r2,1
    22d0:	00017f06 	br	28d0 <___vfprintf_internal_r+0xb7c>
    22d4:	d8800617 	ldw	r2,24(sp)
    22d8:	d8001545 	stb	zero,85(sp)
    22dc:	14400017 	ldw	r17,0(r2)
    22e0:	14800104 	addi	r18,r2,4
    22e4:	8804ca26 	beq	r17,zero,3610 <___vfprintf_internal_r+0x18bc>
    22e8:	da000e15 	stw	r8,56(sp)
    22ec:	db000715 	stw	r12,28(sp)
    22f0:	58bfffe0 	cmpeqi	r2,r11,-1
    22f4:	10056c1e 	bne	r2,zero,38a8 <___vfprintf_internal_r+0x1b54>
    22f8:	580d883a 	mov	r6,r11
    22fc:	000b883a 	mov	r5,zero
    2300:	8809883a 	mov	r4,r17
    2304:	dac00615 	stw	r11,24(sp)
    2308:	00012b00 	call	12b0 <memchr>
    230c:	dac00617 	ldw	r11,24(sp)
    2310:	db000717 	ldw	r12,28(sp)
    2314:	da000e17 	ldw	r8,56(sp)
    2318:	10066c26 	beq	r2,zero,3ccc <___vfprintf_internal_r+0x1f78>
    231c:	1469c83a 	sub	r20,r2,r17
    2320:	a02b883a 	mov	r21,r20
    2324:	a005fc16 	blt	r20,zero,3b18 <___vfprintf_internal_r+0x1dc4>
    2328:	dc800615 	stw	r18,24(sp)
    232c:	00002606 	br	23c8 <___vfprintf_internal_r+0x674>
    2330:	21003fcc 	andi	r4,r4,255
    2334:	20067b1e 	bne	r4,zero,3d24 <___vfprintf_internal_r+0x1fd0>
    2338:	6080080c 	andi	r2,r12,32
    233c:	10017f1e 	bne	r2,zero,293c <___vfprintf_internal_r+0xbe8>
    2340:	d8800617 	ldw	r2,24(sp)
    2344:	60c0040c 	andi	r3,r12,16
    2348:	10800104 	addi	r2,r2,4
    234c:	1801001e 	bne	r3,zero,2750 <___vfprintf_internal_r+0x9fc>
    2350:	60c0100c 	andi	r3,r12,64
    2354:	1800fe26 	beq	r3,zero,2750 <___vfprintf_internal_r+0x9fc>
    2358:	d8c00617 	ldw	r3,24(sp)
    235c:	d8800615 	stw	r2,24(sp)
    2360:	1d40000f 	ldh	r21,0(r3)
    2364:	a829d7fa 	srai	r20,r21,31
    2368:	a005883a 	mov	r2,r20
    236c:	1000fe16 	blt	r2,zero,2768 <___vfprintf_internal_r+0xa14>
    2370:	58bfffd8 	cmpnei	r2,r11,-1
    2374:	db401543 	ldbu	r13,85(sp)
    2378:	10018526 	beq	r2,zero,2990 <___vfprintf_internal_r+0xc3c>
    237c:	00ffdfc4 	movi	r3,-129
    2380:	ad04b03a 	or	r2,r21,r20
    2384:	60d8703a 	and	r12,r12,r3
    2388:	1001811e 	bne	r2,zero,2990 <___vfprintf_internal_r+0xc3c>
    238c:	5801831e 	bne	r11,zero,299c <___vfprintf_internal_r+0xc48>
    2390:	6025883a 	mov	r18,r12
    2394:	0017883a 	mov	r11,zero
    2398:	0029883a 	mov	r20,zero
    239c:	b823883a 	mov	r17,r23
    23a0:	00018306 	br	29b0 <___vfprintf_internal_r+0xc5c>
    23a4:	d8c00617 	ldw	r3,24(sp)
    23a8:	d8001545 	stb	zero,85(sp)
    23ac:	05400044 	movi	r21,1
    23b0:	18800017 	ldw	r2,0(r3)
    23b4:	18c00104 	addi	r3,r3,4
    23b8:	d8c00615 	stw	r3,24(sp)
    23bc:	d8801f05 	stb	r2,124(sp)
    23c0:	05000044 	movi	r20,1
    23c4:	dc401f04 	addi	r17,sp,124
    23c8:	6025883a 	mov	r18,r12
    23cc:	0017883a 	mov	r11,zero
    23d0:	d8000715 	stw	zero,28(sp)
    23d4:	9380008c 	andi	r14,r18,2
    23d8:	70000126 	beq	r14,zero,23e0 <___vfprintf_internal_r+0x68c>
    23dc:	ad400084 	addi	r21,r21,2
    23e0:	9340210c 	andi	r13,r18,132
    23e4:	d8c01e17 	ldw	r3,120(sp)
    23e8:	6800021e 	bne	r13,zero,23f4 <___vfprintf_internal_r+0x6a0>
    23ec:	854fc83a 	sub	r7,r16,r21
    23f0:	01c2ce16 	blt	zero,r7,2f2c <___vfprintf_internal_r+0x11d8>
    23f4:	d8801547 	ldb	r2,85(sp)
    23f8:	10000c26 	beq	r2,zero,242c <___vfprintf_internal_r+0x6d8>
    23fc:	d8801d17 	ldw	r2,116(sp)
    2400:	d9001544 	addi	r4,sp,85
    2404:	18c00044 	addi	r3,r3,1
    2408:	10800044 	addi	r2,r2,1
    240c:	41000015 	stw	r4,0(r8)
    2410:	01000044 	movi	r4,1
    2414:	d8801d15 	stw	r2,116(sp)
    2418:	41000115 	stw	r4,4(r8)
    241c:	d8c01e15 	stw	r3,120(sp)
    2420:	10800208 	cmpgei	r2,r2,8
    2424:	1002fb1e 	bne	r2,zero,3014 <___vfprintf_internal_r+0x12c0>
    2428:	42000204 	addi	r8,r8,8
    242c:	70000c26 	beq	r14,zero,2460 <___vfprintf_internal_r+0x70c>
    2430:	d8801d17 	ldw	r2,116(sp)
    2434:	d9001584 	addi	r4,sp,86
    2438:	18c00084 	addi	r3,r3,2
    243c:	10800044 	addi	r2,r2,1
    2440:	41000015 	stw	r4,0(r8)
    2444:	01000084 	movi	r4,2
    2448:	d8801d15 	stw	r2,116(sp)
    244c:	41000115 	stw	r4,4(r8)
    2450:	d8c01e15 	stw	r3,120(sp)
    2454:	10800208 	cmpgei	r2,r2,8
    2458:	1002fc1e 	bne	r2,zero,304c <___vfprintf_internal_r+0x12f8>
    245c:	42000204 	addi	r8,r8,8
    2460:	6b402018 	cmpnei	r13,r13,128
    2464:	6801cf26 	beq	r13,zero,2ba4 <___vfprintf_internal_r+0xe50>
    2468:	5d0fc83a 	sub	r7,r11,r20
    246c:	01c20616 	blt	zero,r7,2c88 <___vfprintf_internal_r+0xf34>
    2470:	9080400c 	andi	r2,r18,256
    2474:	10017c1e 	bne	r2,zero,2a68 <___vfprintf_internal_r+0xd14>
    2478:	d8801d17 	ldw	r2,116(sp)
    247c:	1d07883a 	add	r3,r3,r20
    2480:	44400015 	stw	r17,0(r8)
    2484:	10800044 	addi	r2,r2,1
    2488:	d8801d15 	stw	r2,116(sp)
    248c:	45000115 	stw	r20,4(r8)
    2490:	d8c01e15 	stw	r3,120(sp)
    2494:	10800208 	cmpgei	r2,r2,8
    2498:	1002571e 	bne	r2,zero,2df8 <___vfprintf_internal_r+0x10a4>
    249c:	42000204 	addi	r8,r8,8
    24a0:	9480010c 	andi	r18,r18,4
    24a4:	90000226 	beq	r18,zero,24b0 <___vfprintf_internal_r+0x75c>
    24a8:	8563c83a 	sub	r17,r16,r21
    24ac:	04400916 	blt	zero,r17,24d4 <___vfprintf_internal_r+0x780>
    24b0:	8540010e 	bge	r16,r21,24b8 <___vfprintf_internal_r+0x764>
    24b4:	a821883a 	mov	r16,r21
    24b8:	d8800417 	ldw	r2,16(sp)
    24bc:	1405883a 	add	r2,r2,r16
    24c0:	d8800415 	stw	r2,16(sp)
    24c4:	1802241e 	bne	r3,zero,2d58 <___vfprintf_internal_r+0x1004>
    24c8:	d8001d15 	stw	zero,116(sp)
    24cc:	b811883a 	mov	r8,r23
    24d0:	003e5506 	br	1e28 <___vfprintf_internal_r+0xd4>
    24d4:	03000074 	movhi	r12,1
    24d8:	89000450 	cmplti	r4,r17,17
    24dc:	633efe84 	addi	r12,r12,-1030
    24e0:	d8801d17 	ldw	r2,116(sp)
    24e4:	20001c1e 	bne	r4,zero,2558 <___vfprintf_internal_r+0x804>
    24e8:	04800404 	movi	r18,16
    24ec:	dd000517 	ldw	r20,20(sp)
    24f0:	6039883a 	mov	fp,r12
    24f4:	00000406 	br	2508 <___vfprintf_internal_r+0x7b4>
    24f8:	8c7ffc04 	addi	r17,r17,-16
    24fc:	89000448 	cmpgei	r4,r17,17
    2500:	42000204 	addi	r8,r8,8
    2504:	20001326 	beq	r4,zero,2554 <___vfprintf_internal_r+0x800>
    2508:	10800044 	addi	r2,r2,1
    250c:	18c00404 	addi	r3,r3,16
    2510:	47000015 	stw	fp,0(r8)
    2514:	44800115 	stw	r18,4(r8)
    2518:	d8c01e15 	stw	r3,120(sp)
    251c:	d8801d15 	stw	r2,116(sp)
    2520:	11000208 	cmpgei	r4,r2,8
    2524:	203ff426 	beq	r4,zero,24f8 <___vfprintf_internal_r+0x7a4>
    2528:	d9801c04 	addi	r6,sp,112
    252c:	980b883a 	mov	r5,r19
    2530:	a009883a 	mov	r4,r20
    2534:	000822c0 	call	822c <__sprint_r>
    2538:	103ee51e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    253c:	8c7ffc04 	addi	r17,r17,-16
    2540:	89000448 	cmpgei	r4,r17,17
    2544:	d8c01e17 	ldw	r3,120(sp)
    2548:	d8801d17 	ldw	r2,116(sp)
    254c:	b811883a 	mov	r8,r23
    2550:	203fed1e 	bne	r4,zero,2508 <___vfprintf_internal_r+0x7b4>
    2554:	e019883a 	mov	r12,fp
    2558:	10800044 	addi	r2,r2,1
    255c:	1c47883a 	add	r3,r3,r17
    2560:	d8801d15 	stw	r2,116(sp)
    2564:	43000015 	stw	r12,0(r8)
    2568:	44400115 	stw	r17,4(r8)
    256c:	d8c01e15 	stw	r3,120(sp)
    2570:	10800210 	cmplti	r2,r2,8
    2574:	103fce1e 	bne	r2,zero,24b0 <___vfprintf_internal_r+0x75c>
    2578:	d9000517 	ldw	r4,20(sp)
    257c:	d9801c04 	addi	r6,sp,112
    2580:	980b883a 	mov	r5,r19
    2584:	000822c0 	call	822c <__sprint_r>
    2588:	103ed11e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    258c:	d8c01e17 	ldw	r3,120(sp)
    2590:	003fc706 	br	24b0 <___vfprintf_internal_r+0x75c>
    2594:	21003fcc 	andi	r4,r4,255
    2598:	2005de1e 	bne	r4,zero,3d14 <___vfprintf_internal_r+0x1fc0>
    259c:	6080080c 	andi	r2,r12,32
    25a0:	1000ed1e 	bne	r2,zero,2958 <___vfprintf_internal_r+0xc04>
    25a4:	d8800617 	ldw	r2,24(sp)
    25a8:	60c0040c 	andi	r3,r12,16
    25ac:	15400017 	ldw	r21,0(r2)
    25b0:	10800104 	addi	r2,r2,4
    25b4:	18001e1e 	bne	r3,zero,2630 <___vfprintf_internal_r+0x8dc>
    25b8:	60c0100c 	andi	r3,r12,64
    25bc:	1804e126 	beq	r3,zero,3944 <___vfprintf_internal_r+0x1bf0>
    25c0:	d8800615 	stw	r2,24(sp)
    25c4:	ad7fffcc 	andi	r21,r21,65535
    25c8:	0029883a 	mov	r20,zero
    25cc:	0005883a 	mov	r2,zero
    25d0:	0000bf06 	br	28d0 <___vfprintf_internal_r+0xb7c>
    25d4:	21003fcc 	andi	r4,r4,255
    25d8:	2005d01e 	bne	r4,zero,3d1c <___vfprintf_internal_r+0x1fc8>
    25dc:	d9000617 	ldw	r4,24(sp)
    25e0:	6080080c 	andi	r2,r12,32
    25e4:	20c00104 	addi	r3,r4,4
    25e8:	1003d81e 	bne	r2,zero,354c <___vfprintf_internal_r+0x17f8>
    25ec:	6080040c 	andi	r2,r12,16
    25f0:	1004321e 	bne	r2,zero,36bc <___vfprintf_internal_r+0x1968>
    25f4:	6300100c 	andi	r12,r12,64
    25f8:	60043026 	beq	r12,zero,36bc <___vfprintf_internal_r+0x1968>
    25fc:	d8800617 	ldw	r2,24(sp)
    2600:	d8c00615 	stw	r3,24(sp)
    2604:	d8c00417 	ldw	r3,16(sp)
    2608:	10800017 	ldw	r2,0(r2)
    260c:	10c0000d 	sth	r3,0(r2)
    2610:	003e0506 	br	1e28 <___vfprintf_internal_r+0xd4>
    2614:	21003fcc 	andi	r4,r4,255
    2618:	2005c81e 	bne	r4,zero,3d3c <___vfprintf_internal_r+0x1fe8>
    261c:	6080080c 	andi	r2,r12,32
    2620:	63000414 	ori	r12,r12,16
    2624:	1000cc1e 	bne	r2,zero,2958 <___vfprintf_internal_r+0xc04>
    2628:	d8800617 	ldw	r2,24(sp)
    262c:	10800104 	addi	r2,r2,4
    2630:	d8c00617 	ldw	r3,24(sp)
    2634:	0029883a 	mov	r20,zero
    2638:	d8800615 	stw	r2,24(sp)
    263c:	1d400017 	ldw	r21,0(r3)
    2640:	0005883a 	mov	r2,zero
    2644:	0000a206 	br	28d0 <___vfprintf_internal_r+0xb7c>
    2648:	63000214 	ori	r12,r12,8
    264c:	b2800007 	ldb	r10,0(r22)
    2650:	003e1b06 	br	1ec0 <___vfprintf_internal_r+0x16c>
    2654:	21003fcc 	andi	r4,r4,255
    2658:	2005bc1e 	bne	r4,zero,3d4c <___vfprintf_internal_r+0x1ff8>
    265c:	d8c00617 	ldw	r3,24(sp)
    2660:	00a00034 	movhi	r2,32768
    2664:	10bfffc4 	addi	r2,r2,-1
    2668:	1d000117 	ldw	r20,4(r3)
    266c:	1c800017 	ldw	r18,0(r3)
    2670:	01dffc34 	movhi	r7,32752
    2674:	a0a2703a 	and	r17,r20,r2
    2678:	01bfffc4 	movi	r6,-1
    267c:	18800204 	addi	r2,r3,8
    2680:	39ffffc4 	addi	r7,r7,-1
    2684:	9009883a 	mov	r4,r18
    2688:	880b883a 	mov	r5,r17
    268c:	da000f15 	stw	r8,60(sp)
    2690:	dac00e15 	stw	r11,56(sp)
    2694:	db000715 	stw	r12,28(sp)
    2698:	dd000a15 	stw	r20,40(sp)
    269c:	dc800915 	stw	r18,36(sp)
    26a0:	d8800615 	stw	r2,24(sp)
    26a4:	000d2800 	call	d280 <__unorddf2>
    26a8:	db000717 	ldw	r12,28(sp)
    26ac:	dac00e17 	ldw	r11,56(sp)
    26b0:	da000f17 	ldw	r8,60(sp)
    26b4:	1003191e 	bne	r2,zero,331c <___vfprintf_internal_r+0x15c8>
    26b8:	01dffc34 	movhi	r7,32752
    26bc:	01bfffc4 	movi	r6,-1
    26c0:	39ffffc4 	addi	r7,r7,-1
    26c4:	9009883a 	mov	r4,r18
    26c8:	880b883a 	mov	r5,r17
    26cc:	000c0440 	call	c044 <__ledf2>
    26d0:	db000717 	ldw	r12,28(sp)
    26d4:	dac00e17 	ldw	r11,56(sp)
    26d8:	da000f17 	ldw	r8,60(sp)
    26dc:	00830f0e 	bge	zero,r2,331c <___vfprintf_internal_r+0x15c8>
    26e0:	000d883a 	mov	r6,zero
    26e4:	000f883a 	mov	r7,zero
    26e8:	9009883a 	mov	r4,r18
    26ec:	a00b883a 	mov	r5,r20
    26f0:	da000e15 	stw	r8,56(sp)
    26f4:	000c0440 	call	c044 <__ledf2>
    26f8:	db000717 	ldw	r12,28(sp)
    26fc:	da000e17 	ldw	r8,56(sp)
    2700:	1004e716 	blt	r2,zero,3aa0 <___vfprintf_internal_r+0x1d4c>
    2704:	db401543 	ldbu	r13,85(sp)
    2708:	e0801210 	cmplti	r2,fp,72
    270c:	1004d11e 	bne	r2,zero,3a54 <___vfprintf_internal_r+0x1d00>
    2710:	04400074 	movhi	r17,1
    2714:	8c7eeb04 	addi	r17,r17,-1108
    2718:	04bfdfc4 	movi	r18,-129
    271c:	64a4703a 	and	r18,r12,r18
    2720:	054000c4 	movi	r21,3
    2724:	050000c4 	movi	r20,3
    2728:	0017883a 	mov	r11,zero
    272c:	d8000715 	stw	zero,28(sp)
    2730:	0000a306 	br	29c0 <___vfprintf_internal_r+0xc6c>
    2734:	21003fcc 	andi	r4,r4,255
    2738:	2005821e 	bne	r4,zero,3d44 <___vfprintf_internal_r+0x1ff0>
    273c:	6080080c 	andi	r2,r12,32
    2740:	63000414 	ori	r12,r12,16
    2744:	10007d1e 	bne	r2,zero,293c <___vfprintf_internal_r+0xbe8>
    2748:	d8800617 	ldw	r2,24(sp)
    274c:	10800104 	addi	r2,r2,4
    2750:	d8c00617 	ldw	r3,24(sp)
    2754:	1d400017 	ldw	r21,0(r3)
    2758:	d8800615 	stw	r2,24(sp)
    275c:	a829d7fa 	srai	r20,r21,31
    2760:	a005883a 	mov	r2,r20
    2764:	103f020e 	bge	r2,zero,2370 <___vfprintf_internal_r+0x61c>
    2768:	056bc83a 	sub	r21,zero,r21
    276c:	a804c03a 	cmpne	r2,r21,zero
    2770:	0529c83a 	sub	r20,zero,r20
    2774:	a0a9c83a 	sub	r20,r20,r2
    2778:	00800b44 	movi	r2,45
    277c:	d8801545 	stb	r2,85(sp)
    2780:	58ffffe0 	cmpeqi	r3,r11,-1
    2784:	03400b44 	movi	r13,45
    2788:	00800044 	movi	r2,1
    278c:	18005426 	beq	r3,zero,28e0 <___vfprintf_internal_r+0xb8c>
    2790:	10c00060 	cmpeqi	r3,r2,1
    2794:	18007e1e 	bne	r3,zero,2990 <___vfprintf_internal_r+0xc3c>
    2798:	108000a0 	cmpeqi	r2,r2,2
    279c:	1002371e 	bne	r2,zero,307c <___vfprintf_internal_r+0x1328>
    27a0:	b807883a 	mov	r3,r23
    27a4:	00000106 	br	27ac <___vfprintf_internal_r+0xa58>
    27a8:	8807883a 	mov	r3,r17
    27ac:	a808d0fa 	srli	r4,r21,3
    27b0:	a00a977a 	slli	r5,r20,29
    27b4:	a028d0fa 	srli	r20,r20,3
    27b8:	ad4001cc 	andi	r21,r21,7
    27bc:	a8800c04 	addi	r2,r21,48
    27c0:	292ab03a 	or	r21,r5,r4
    27c4:	18bfffc5 	stb	r2,-1(r3)
    27c8:	ad08b03a 	or	r4,r21,r20
    27cc:	1c7fffc4 	addi	r17,r3,-1
    27d0:	203ff51e 	bne	r4,zero,27a8 <___vfprintf_internal_r+0xa54>
    27d4:	6100004c 	andi	r4,r12,1
    27d8:	2000a026 	beq	r4,zero,2a5c <___vfprintf_internal_r+0xd08>
    27dc:	10803fcc 	andi	r2,r2,255
    27e0:	1080201c 	xori	r2,r2,128
    27e4:	10bfe004 	addi	r2,r2,-128
    27e8:	10800c18 	cmpnei	r2,r2,48
    27ec:	10009b26 	beq	r2,zero,2a5c <___vfprintf_internal_r+0xd08>
    27f0:	18ffff84 	addi	r3,r3,-2
    27f4:	00800c04 	movi	r2,48
    27f8:	88bfffc5 	stb	r2,-1(r17)
    27fc:	b8e9c83a 	sub	r20,r23,r3
    2800:	6025883a 	mov	r18,r12
    2804:	1823883a 	mov	r17,r3
    2808:	00006906 	br	29b0 <___vfprintf_internal_r+0xc5c>
    280c:	21003fcc 	andi	r4,r4,255
    2810:	20053e1e 	bne	r4,zero,3d0c <___vfprintf_internal_r+0x1fb8>
    2814:	00800074 	movhi	r2,1
    2818:	10beee04 	addi	r2,r2,-1096
    281c:	d8800c15 	stw	r2,48(sp)
    2820:	6080080c 	andi	r2,r12,32
    2824:	103e901e 	bne	r2,zero,2268 <___vfprintf_internal_r+0x514>
    2828:	d8c00617 	ldw	r3,24(sp)
    282c:	6080040c 	andi	r2,r12,16
    2830:	1d400017 	ldw	r21,0(r3)
    2834:	18c00104 	addi	r3,r3,4
    2838:	d8c00615 	stw	r3,24(sp)
    283c:	1002b11e 	bne	r2,zero,3304 <___vfprintf_internal_r+0x15b0>
    2840:	6080100c 	andi	r2,r12,64
    2844:	1002af26 	beq	r2,zero,3304 <___vfprintf_internal_r+0x15b0>
    2848:	ad7fffcc 	andi	r21,r21,65535
    284c:	0029883a 	mov	r20,zero
    2850:	003e8a06 	br	227c <___vfprintf_internal_r+0x528>
    2854:	21003fcc 	andi	r4,r4,255
    2858:	20053e1e 	bne	r4,zero,3d54 <___vfprintf_internal_r+0x2000>
    285c:	6080080c 	andi	r2,r12,32
    2860:	63000414 	ori	r12,r12,16
    2864:	1000431e 	bne	r2,zero,2974 <___vfprintf_internal_r+0xc20>
    2868:	d8800617 	ldw	r2,24(sp)
    286c:	10800104 	addi	r2,r2,4
    2870:	d8c00617 	ldw	r3,24(sp)
    2874:	0029883a 	mov	r20,zero
    2878:	d8800615 	stw	r2,24(sp)
    287c:	1d400017 	ldw	r21,0(r3)
    2880:	00800044 	movi	r2,1
    2884:	00001206 	br	28d0 <___vfprintf_internal_r+0xb7c>
    2888:	63000814 	ori	r12,r12,32
    288c:	b2800007 	ldb	r10,0(r22)
    2890:	003d8b06 	br	1ec0 <___vfprintf_internal_r+0x16c>
    2894:	d8c00617 	ldw	r3,24(sp)
    2898:	00800c04 	movi	r2,48
    289c:	d8801585 	stb	r2,86(sp)
    28a0:	00801e04 	movi	r2,120
    28a4:	01000074 	movhi	r4,1
    28a8:	d88015c5 	stb	r2,87(sp)
    28ac:	1d400017 	ldw	r21,0(r3)
    28b0:	18800104 	addi	r2,r3,4
    28b4:	d8800615 	stw	r2,24(sp)
    28b8:	20bef304 	addi	r2,r4,-1076
    28bc:	d8800c15 	stw	r2,48(sp)
    28c0:	0029883a 	mov	r20,zero
    28c4:	63000094 	ori	r12,r12,2
    28c8:	00800084 	movi	r2,2
    28cc:	07001e04 	movi	fp,120
    28d0:	d8001545 	stb	zero,85(sp)
    28d4:	58ffffe0 	cmpeqi	r3,r11,-1
    28d8:	001b883a 	mov	r13,zero
    28dc:	183fac1e 	bne	r3,zero,2790 <___vfprintf_internal_r+0xa3c>
    28e0:	04bfdfc4 	movi	r18,-129
    28e4:	ad06b03a 	or	r3,r21,r20
    28e8:	64a4703a 	and	r18,r12,r18
    28ec:	18018d1e 	bne	r3,zero,2f24 <___vfprintf_internal_r+0x11d0>
    28f0:	5803bb1e 	bne	r11,zero,37e0 <___vfprintf_internal_r+0x1a8c>
    28f4:	103ea71e 	bne	r2,zero,2394 <___vfprintf_internal_r+0x640>
    28f8:	6500004c 	andi	r20,r12,1
    28fc:	a0028526 	beq	r20,zero,3314 <___vfprintf_internal_r+0x15c0>
    2900:	00800c04 	movi	r2,48
    2904:	d88028c5 	stb	r2,163(sp)
    2908:	dc4028c4 	addi	r17,sp,163
    290c:	00002806 	br	29b0 <___vfprintf_internal_r+0xc5c>
    2910:	b2800007 	ldb	r10,0(r22)
    2914:	50801b18 	cmpnei	r2,r10,108
    2918:	10032c26 	beq	r2,zero,35cc <___vfprintf_internal_r+0x1878>
    291c:	63000414 	ori	r12,r12,16
    2920:	003d6706 	br	1ec0 <___vfprintf_internal_r+0x16c>
    2924:	63001014 	ori	r12,r12,64
    2928:	b2800007 	ldb	r10,0(r22)
    292c:	003d6406 	br	1ec0 <___vfprintf_internal_r+0x16c>
    2930:	d9000517 	ldw	r4,20(sp)
    2934:	000091c0 	call	91c <__sinit>
    2938:	003d1f06 	br	1db8 <___vfprintf_internal_r+0x64>
    293c:	d8c00617 	ldw	r3,24(sp)
    2940:	18800117 	ldw	r2,4(r3)
    2944:	1d400017 	ldw	r21,0(r3)
    2948:	18c00204 	addi	r3,r3,8
    294c:	d8c00615 	stw	r3,24(sp)
    2950:	1029883a 	mov	r20,r2
    2954:	003e8506 	br	236c <___vfprintf_internal_r+0x618>
    2958:	d8c00617 	ldw	r3,24(sp)
    295c:	0005883a 	mov	r2,zero
    2960:	1d400017 	ldw	r21,0(r3)
    2964:	1d000117 	ldw	r20,4(r3)
    2968:	18c00204 	addi	r3,r3,8
    296c:	d8c00615 	stw	r3,24(sp)
    2970:	003fd706 	br	28d0 <___vfprintf_internal_r+0xb7c>
    2974:	d8c00617 	ldw	r3,24(sp)
    2978:	00800044 	movi	r2,1
    297c:	1d400017 	ldw	r21,0(r3)
    2980:	1d000117 	ldw	r20,4(r3)
    2984:	18c00204 	addi	r3,r3,8
    2988:	d8c00615 	stw	r3,24(sp)
    298c:	003fd006 	br	28d0 <___vfprintf_internal_r+0xb7c>
    2990:	a000111e 	bne	r20,zero,29d8 <___vfprintf_internal_r+0xc84>
    2994:	a88002a8 	cmpgeui	r2,r21,10
    2998:	10000f1e 	bne	r2,zero,29d8 <___vfprintf_internal_r+0xc84>
    299c:	ad400c04 	addi	r21,r21,48
    29a0:	dd4028c5 	stb	r21,163(sp)
    29a4:	6025883a 	mov	r18,r12
    29a8:	05000044 	movi	r20,1
    29ac:	dc4028c4 	addi	r17,sp,163
    29b0:	582b883a 	mov	r21,r11
    29b4:	5d00010e 	bge	r11,r20,29bc <___vfprintf_internal_r+0xc68>
    29b8:	a02b883a 	mov	r21,r20
    29bc:	d8000715 	stw	zero,28(sp)
    29c0:	6b403fcc 	andi	r13,r13,255
    29c4:	6b40201c 	xori	r13,r13,128
    29c8:	6b7fe004 	addi	r13,r13,-128
    29cc:	683e8126 	beq	r13,zero,23d4 <___vfprintf_internal_r+0x680>
    29d0:	ad400044 	addi	r21,r21,1
    29d4:	003e7f06 	br	23d4 <___vfprintf_internal_r+0x680>
    29d8:	dc000e15 	stw	r16,56(sp)
    29dc:	b823883a 	mov	r17,r23
    29e0:	a021883a 	mov	r16,r20
    29e4:	db000715 	stw	r12,28(sp)
    29e8:	9829883a 	mov	r20,r19
    29ec:	dac00f15 	stw	r11,60(sp)
    29f0:	4025883a 	mov	r18,r8
    29f4:	6827883a 	mov	r19,r13
    29f8:	00000206 	br	2a04 <___vfprintf_internal_r+0xcb0>
    29fc:	102b883a 	mov	r21,r2
    2a00:	1821883a 	mov	r16,r3
    2a04:	a809883a 	mov	r4,r21
    2a08:	800b883a 	mov	r5,r16
    2a0c:	01800284 	movi	r6,10
    2a10:	000f883a 	mov	r7,zero
    2a14:	000a4280 	call	a428 <__umoddi3>
    2a18:	10800c04 	addi	r2,r2,48
    2a1c:	8c7fffc4 	addi	r17,r17,-1
    2a20:	a809883a 	mov	r4,r21
    2a24:	800b883a 	mov	r5,r16
    2a28:	88800005 	stb	r2,0(r17)
    2a2c:	01800284 	movi	r6,10
    2a30:	000f883a 	mov	r7,zero
    2a34:	0009e0c0 	call	9e0c <__udivdi3>
    2a38:	803ff01e 	bne	r16,zero,29fc <___vfprintf_internal_r+0xca8>
    2a3c:	ad4002a8 	cmpgeui	r21,r21,10
    2a40:	a83fee1e 	bne	r21,zero,29fc <___vfprintf_internal_r+0xca8>
    2a44:	db000717 	ldw	r12,28(sp)
    2a48:	dc000e17 	ldw	r16,56(sp)
    2a4c:	dac00f17 	ldw	r11,60(sp)
    2a50:	981b883a 	mov	r13,r19
    2a54:	9011883a 	mov	r8,r18
    2a58:	a027883a 	mov	r19,r20
    2a5c:	bc69c83a 	sub	r20,r23,r17
    2a60:	6025883a 	mov	r18,r12
    2a64:	003fd206 	br	29b0 <___vfprintf_internal_r+0xc5c>
    2a68:	e2801990 	cmplti	r10,fp,102
    2a6c:	5000ea1e 	bne	r10,zero,2e18 <___vfprintf_internal_r+0x10c4>
    2a70:	d9000917 	ldw	r4,36(sp)
    2a74:	d9400a17 	ldw	r5,40(sp)
    2a78:	000d883a 	mov	r6,zero
    2a7c:	000f883a 	mov	r7,zero
    2a80:	da000f15 	stw	r8,60(sp)
    2a84:	d8c00e15 	stw	r3,56(sp)
    2a88:	000bed40 	call	bed4 <__eqdf2>
    2a8c:	d8c00e17 	ldw	r3,56(sp)
    2a90:	da000f17 	ldw	r8,60(sp)
    2a94:	1001891e 	bne	r2,zero,30bc <___vfprintf_internal_r+0x1368>
    2a98:	d8801d17 	ldw	r2,116(sp)
    2a9c:	01000074 	movhi	r4,1
    2aa0:	213efa04 	addi	r4,r4,-1048
    2aa4:	10800044 	addi	r2,r2,1
    2aa8:	18c00044 	addi	r3,r3,1
    2aac:	41000015 	stw	r4,0(r8)
    2ab0:	01000044 	movi	r4,1
    2ab4:	d8801d15 	stw	r2,116(sp)
    2ab8:	41000115 	stw	r4,4(r8)
    2abc:	d8c01e15 	stw	r3,120(sp)
    2ac0:	10800208 	cmpgei	r2,r2,8
    2ac4:	1003351e 	bne	r2,zero,379c <___vfprintf_internal_r+0x1a48>
    2ac8:	42000204 	addi	r8,r8,8
    2acc:	d8801617 	ldw	r2,88(sp)
    2ad0:	d8c00817 	ldw	r3,32(sp)
    2ad4:	10c00416 	blt	r2,r3,2ae8 <___vfprintf_internal_r+0xd94>
    2ad8:	9080004c 	andi	r2,r18,1
    2adc:	1000021e 	bne	r2,zero,2ae8 <___vfprintf_internal_r+0xd94>
    2ae0:	d8c01e17 	ldw	r3,120(sp)
    2ae4:	003e6e06 	br	24a0 <___vfprintf_internal_r+0x74c>
    2ae8:	d8800d17 	ldw	r2,52(sp)
    2aec:	d8c01e17 	ldw	r3,120(sp)
    2af0:	d9000b17 	ldw	r4,44(sp)
    2af4:	40800015 	stw	r2,0(r8)
    2af8:	d8801d17 	ldw	r2,116(sp)
    2afc:	20c7883a 	add	r3,r4,r3
    2b00:	41000115 	stw	r4,4(r8)
    2b04:	10800044 	addi	r2,r2,1
    2b08:	d8801d15 	stw	r2,116(sp)
    2b0c:	d8c01e15 	stw	r3,120(sp)
    2b10:	10800208 	cmpgei	r2,r2,8
    2b14:	1002b41e 	bne	r2,zero,35e8 <___vfprintf_internal_r+0x1894>
    2b18:	42000204 	addi	r8,r8,8
    2b1c:	d8800817 	ldw	r2,32(sp)
    2b20:	147fffc4 	addi	r17,r2,-1
    2b24:	047e5e0e 	bge	zero,r17,24a0 <___vfprintf_internal_r+0x74c>
    2b28:	03000074 	movhi	r12,1
    2b2c:	89000450 	cmplti	r4,r17,17
    2b30:	633efa84 	addi	r12,r12,-1046
    2b34:	d8801d17 	ldw	r2,116(sp)
    2b38:	2003791e 	bne	r4,zero,3920 <___vfprintf_internal_r+0x1bcc>
    2b3c:	dc000715 	stw	r16,28(sp)
    2b40:	05000404 	movi	r20,16
    2b44:	df000517 	ldw	fp,20(sp)
    2b48:	6021883a 	mov	r16,r12
    2b4c:	00000406 	br	2b60 <___vfprintf_internal_r+0xe0c>
    2b50:	42000204 	addi	r8,r8,8
    2b54:	8c7ffc04 	addi	r17,r17,-16
    2b58:	89000448 	cmpgei	r4,r17,17
    2b5c:	20036e26 	beq	r4,zero,3918 <___vfprintf_internal_r+0x1bc4>
    2b60:	10800044 	addi	r2,r2,1
    2b64:	18c00404 	addi	r3,r3,16
    2b68:	44000015 	stw	r16,0(r8)
    2b6c:	45000115 	stw	r20,4(r8)
    2b70:	d8c01e15 	stw	r3,120(sp)
    2b74:	d8801d15 	stw	r2,116(sp)
    2b78:	11000208 	cmpgei	r4,r2,8
    2b7c:	203ff426 	beq	r4,zero,2b50 <___vfprintf_internal_r+0xdfc>
    2b80:	d9801c04 	addi	r6,sp,112
    2b84:	980b883a 	mov	r5,r19
    2b88:	e009883a 	mov	r4,fp
    2b8c:	000822c0 	call	822c <__sprint_r>
    2b90:	103d4f1e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    2b94:	d8c01e17 	ldw	r3,120(sp)
    2b98:	d8801d17 	ldw	r2,116(sp)
    2b9c:	b811883a 	mov	r8,r23
    2ba0:	003fec06 	br	2b54 <___vfprintf_internal_r+0xe00>
    2ba4:	854fc83a 	sub	r7,r16,r21
    2ba8:	01fe2f0e 	bge	zero,r7,2468 <___vfprintf_internal_r+0x714>
    2bac:	03000074 	movhi	r12,1
    2bb0:	39000450 	cmplti	r4,r7,17
    2bb4:	633efa84 	addi	r12,r12,-1046
    2bb8:	d8801d17 	ldw	r2,116(sp)
    2bbc:	2000271e 	bne	r4,zero,2c5c <___vfprintf_internal_r+0xf08>
    2bc0:	dc400e15 	stw	r17,56(sp)
    2bc4:	dc800f15 	stw	r18,60(sp)
    2bc8:	dc001015 	stw	r16,64(sp)
    2bcc:	03400404 	movi	r13,16
    2bd0:	3821883a 	mov	r16,r7
    2bd4:	dac01215 	stw	r11,72(sp)
    2bd8:	dc400517 	ldw	r17,20(sp)
    2bdc:	6025883a 	mov	r18,r12
    2be0:	00000406 	br	2bf4 <___vfprintf_internal_r+0xea0>
    2be4:	843ffc04 	addi	r16,r16,-16
    2be8:	81000448 	cmpgei	r4,r16,17
    2bec:	42000204 	addi	r8,r8,8
    2bf0:	20001426 	beq	r4,zero,2c44 <___vfprintf_internal_r+0xef0>
    2bf4:	10800044 	addi	r2,r2,1
    2bf8:	18c00404 	addi	r3,r3,16
    2bfc:	44800015 	stw	r18,0(r8)
    2c00:	43400115 	stw	r13,4(r8)
    2c04:	d8c01e15 	stw	r3,120(sp)
    2c08:	d8801d15 	stw	r2,116(sp)
    2c0c:	11000208 	cmpgei	r4,r2,8
    2c10:	203ff426 	beq	r4,zero,2be4 <___vfprintf_internal_r+0xe90>
    2c14:	d9801c04 	addi	r6,sp,112
    2c18:	980b883a 	mov	r5,r19
    2c1c:	8809883a 	mov	r4,r17
    2c20:	000822c0 	call	822c <__sprint_r>
    2c24:	103d2a1e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    2c28:	843ffc04 	addi	r16,r16,-16
    2c2c:	81000448 	cmpgei	r4,r16,17
    2c30:	d8c01e17 	ldw	r3,120(sp)
    2c34:	d8801d17 	ldw	r2,116(sp)
    2c38:	b811883a 	mov	r8,r23
    2c3c:	03400404 	movi	r13,16
    2c40:	203fec1e 	bne	r4,zero,2bf4 <___vfprintf_internal_r+0xea0>
    2c44:	800f883a 	mov	r7,r16
    2c48:	9019883a 	mov	r12,r18
    2c4c:	dc400e17 	ldw	r17,56(sp)
    2c50:	dc001017 	ldw	r16,64(sp)
    2c54:	dac01217 	ldw	r11,72(sp)
    2c58:	dc800f17 	ldw	r18,60(sp)
    2c5c:	10800044 	addi	r2,r2,1
    2c60:	19c7883a 	add	r3,r3,r7
    2c64:	d8801d15 	stw	r2,116(sp)
    2c68:	43000015 	stw	r12,0(r8)
    2c6c:	41c00115 	stw	r7,4(r8)
    2c70:	d8c01e15 	stw	r3,120(sp)
    2c74:	10800208 	cmpgei	r2,r2,8
    2c78:	1002cf1e 	bne	r2,zero,37b8 <___vfprintf_internal_r+0x1a64>
    2c7c:	5d0fc83a 	sub	r7,r11,r20
    2c80:	42000204 	addi	r8,r8,8
    2c84:	01fdfa0e 	bge	zero,r7,2470 <___vfprintf_internal_r+0x71c>
    2c88:	03000074 	movhi	r12,1
    2c8c:	39000450 	cmplti	r4,r7,17
    2c90:	633efa84 	addi	r12,r12,-1046
    2c94:	d8801d17 	ldw	r2,116(sp)
    2c98:	2000251e 	bne	r4,zero,2d30 <___vfprintf_internal_r+0xfdc>
    2c9c:	dc400e15 	stw	r17,56(sp)
    2ca0:	dc800f15 	stw	r18,60(sp)
    2ca4:	dc001015 	stw	r16,64(sp)
    2ca8:	02c00404 	movi	r11,16
    2cac:	3821883a 	mov	r16,r7
    2cb0:	dc400517 	ldw	r17,20(sp)
    2cb4:	6025883a 	mov	r18,r12
    2cb8:	00000406 	br	2ccc <___vfprintf_internal_r+0xf78>
    2cbc:	843ffc04 	addi	r16,r16,-16
    2cc0:	81000448 	cmpgei	r4,r16,17
    2cc4:	42000204 	addi	r8,r8,8
    2cc8:	20001426 	beq	r4,zero,2d1c <___vfprintf_internal_r+0xfc8>
    2ccc:	10800044 	addi	r2,r2,1
    2cd0:	18c00404 	addi	r3,r3,16
    2cd4:	44800015 	stw	r18,0(r8)
    2cd8:	42c00115 	stw	r11,4(r8)
    2cdc:	d8c01e15 	stw	r3,120(sp)
    2ce0:	d8801d15 	stw	r2,116(sp)
    2ce4:	11000208 	cmpgei	r4,r2,8
    2ce8:	203ff426 	beq	r4,zero,2cbc <___vfprintf_internal_r+0xf68>
    2cec:	d9801c04 	addi	r6,sp,112
    2cf0:	980b883a 	mov	r5,r19
    2cf4:	8809883a 	mov	r4,r17
    2cf8:	000822c0 	call	822c <__sprint_r>
    2cfc:	103cf41e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    2d00:	843ffc04 	addi	r16,r16,-16
    2d04:	81000448 	cmpgei	r4,r16,17
    2d08:	d8c01e17 	ldw	r3,120(sp)
    2d0c:	d8801d17 	ldw	r2,116(sp)
    2d10:	b811883a 	mov	r8,r23
    2d14:	02c00404 	movi	r11,16
    2d18:	203fec1e 	bne	r4,zero,2ccc <___vfprintf_internal_r+0xf78>
    2d1c:	800f883a 	mov	r7,r16
    2d20:	9019883a 	mov	r12,r18
    2d24:	dc400e17 	ldw	r17,56(sp)
    2d28:	dc001017 	ldw	r16,64(sp)
    2d2c:	dc800f17 	ldw	r18,60(sp)
    2d30:	10800044 	addi	r2,r2,1
    2d34:	19c7883a 	add	r3,r3,r7
    2d38:	d8801d15 	stw	r2,116(sp)
    2d3c:	43000015 	stw	r12,0(r8)
    2d40:	41c00115 	stw	r7,4(r8)
    2d44:	d8c01e15 	stw	r3,120(sp)
    2d48:	10800208 	cmpgei	r2,r2,8
    2d4c:	1001651e 	bne	r2,zero,32e4 <___vfprintf_internal_r+0x1590>
    2d50:	42000204 	addi	r8,r8,8
    2d54:	003dc606 	br	2470 <___vfprintf_internal_r+0x71c>
    2d58:	d9000517 	ldw	r4,20(sp)
    2d5c:	d9801c04 	addi	r6,sp,112
    2d60:	980b883a 	mov	r5,r19
    2d64:	000822c0 	call	822c <__sprint_r>
    2d68:	103dd726 	beq	r2,zero,24c8 <___vfprintf_internal_r+0x774>
    2d6c:	003cd806 	br	20d0 <___vfprintf_internal_r+0x37c>
    2d70:	d9000517 	ldw	r4,20(sp)
    2d74:	d9801c04 	addi	r6,sp,112
    2d78:	980b883a 	mov	r5,r19
    2d7c:	000822c0 	call	822c <__sprint_r>
    2d80:	103cd31e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    2d84:	d9001617 	ldw	r4,88(sp)
    2d88:	d8c01e17 	ldw	r3,120(sp)
    2d8c:	b811883a 	mov	r8,r23
    2d90:	2002971e 	bne	r4,zero,37f0 <___vfprintf_internal_r+0x1a9c>
    2d94:	d9000817 	ldw	r4,32(sp)
    2d98:	9080004c 	andi	r2,r18,1
    2d9c:	1104b03a 	or	r2,r2,r4
    2da0:	103dbf26 	beq	r2,zero,24a0 <___vfprintf_internal_r+0x74c>
    2da4:	d8800d17 	ldw	r2,52(sp)
    2da8:	d9000b17 	ldw	r4,44(sp)
    2dac:	40800015 	stw	r2,0(r8)
    2db0:	d8801d17 	ldw	r2,116(sp)
    2db4:	20c7883a 	add	r3,r4,r3
    2db8:	41000115 	stw	r4,4(r8)
    2dbc:	10800044 	addi	r2,r2,1
    2dc0:	d8c01e15 	stw	r3,120(sp)
    2dc4:	d8801d15 	stw	r2,116(sp)
    2dc8:	11000208 	cmpgei	r4,r2,8
    2dcc:	2003691e 	bne	r4,zero,3b74 <___vfprintf_internal_r+0x1e20>
    2dd0:	42000204 	addi	r8,r8,8
    2dd4:	d9000817 	ldw	r4,32(sp)
    2dd8:	10800044 	addi	r2,r2,1
    2ddc:	d8801d15 	stw	r2,116(sp)
    2de0:	20c7883a 	add	r3,r4,r3
    2de4:	44400015 	stw	r17,0(r8)
    2de8:	41000115 	stw	r4,4(r8)
    2dec:	d8c01e15 	stw	r3,120(sp)
    2df0:	10800208 	cmpgei	r2,r2,8
    2df4:	103da926 	beq	r2,zero,249c <___vfprintf_internal_r+0x748>
    2df8:	d9000517 	ldw	r4,20(sp)
    2dfc:	d9801c04 	addi	r6,sp,112
    2e00:	980b883a 	mov	r5,r19
    2e04:	000822c0 	call	822c <__sprint_r>
    2e08:	103cb11e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    2e0c:	d8c01e17 	ldw	r3,120(sp)
    2e10:	b811883a 	mov	r8,r23
    2e14:	003da206 	br	24a0 <___vfprintf_internal_r+0x74c>
    2e18:	d8800817 	ldw	r2,32(sp)
    2e1c:	da801d17 	ldw	r10,116(sp)
    2e20:	18c00044 	addi	r3,r3,1
    2e24:	10800088 	cmpgei	r2,r2,2
    2e28:	55000044 	addi	r20,r10,1
    2e2c:	47000204 	addi	fp,r8,8
    2e30:	1000fb26 	beq	r2,zero,3220 <___vfprintf_internal_r+0x14cc>
    2e34:	00800044 	movi	r2,1
    2e38:	40800115 	stw	r2,4(r8)
    2e3c:	44400015 	stw	r17,0(r8)
    2e40:	d8c01e15 	stw	r3,120(sp)
    2e44:	dd001d15 	stw	r20,116(sp)
    2e48:	a0800210 	cmplti	r2,r20,8
    2e4c:	10022e26 	beq	r2,zero,3708 <___vfprintf_internal_r+0x19b4>
    2e50:	d8800b17 	ldw	r2,44(sp)
    2e54:	d9000d17 	ldw	r4,52(sp)
    2e58:	a5000044 	addi	r20,r20,1
    2e5c:	1887883a 	add	r3,r3,r2
    2e60:	e0800115 	stw	r2,4(fp)
    2e64:	e1000015 	stw	r4,0(fp)
    2e68:	d8c01e15 	stw	r3,120(sp)
    2e6c:	dd001d15 	stw	r20,116(sp)
    2e70:	a0800208 	cmpgei	r2,r20,8
    2e74:	10021b1e 	bne	r2,zero,36e4 <___vfprintf_internal_r+0x1990>
    2e78:	e7000204 	addi	fp,fp,8
    2e7c:	d8800817 	ldw	r2,32(sp)
    2e80:	d9000917 	ldw	r4,36(sp)
    2e84:	d9400a17 	ldw	r5,40(sp)
    2e88:	a2800044 	addi	r10,r20,1
    2e8c:	e2000204 	addi	r8,fp,8
    2e90:	12ffffc4 	addi	r11,r2,-1
    2e94:	000d883a 	mov	r6,zero
    2e98:	000f883a 	mov	r7,zero
    2e9c:	d8c01215 	stw	r3,72(sp)
    2ea0:	da801015 	stw	r10,64(sp)
    2ea4:	da800f15 	stw	r10,60(sp)
    2ea8:	da000e15 	stw	r8,56(sp)
    2eac:	dac00715 	stw	r11,28(sp)
    2eb0:	000bed40 	call	bed4 <__eqdf2>
    2eb4:	dac00717 	ldw	r11,28(sp)
    2eb8:	da000e17 	ldw	r8,56(sp)
    2ebc:	db400f17 	ldw	r13,60(sp)
    2ec0:	da801017 	ldw	r10,64(sp)
    2ec4:	d8c01217 	ldw	r3,72(sp)
    2ec8:	1000e126 	beq	r2,zero,3250 <___vfprintf_internal_r+0x14fc>
    2ecc:	8c400044 	addi	r17,r17,1
    2ed0:	1ac7883a 	add	r3,r3,r11
    2ed4:	da801d15 	stw	r10,116(sp)
    2ed8:	e4400015 	stw	r17,0(fp)
    2edc:	e2c00115 	stw	r11,4(fp)
    2ee0:	d8c01e15 	stw	r3,120(sp)
    2ee4:	52800208 	cmpgei	r10,r10,8
    2ee8:	5001ad1e 	bne	r10,zero,35a0 <___vfprintf_internal_r+0x184c>
    2eec:	e0800404 	addi	r2,fp,16
    2ef0:	a2800084 	addi	r10,r20,2
    2ef4:	4039883a 	mov	fp,r8
    2ef8:	1011883a 	mov	r8,r2
    2efc:	d9001117 	ldw	r4,68(sp)
    2f00:	d8801844 	addi	r2,sp,97
    2f04:	da801d15 	stw	r10,116(sp)
    2f08:	20c7883a 	add	r3,r4,r3
    2f0c:	e0800015 	stw	r2,0(fp)
    2f10:	e1000115 	stw	r4,4(fp)
    2f14:	d8c01e15 	stw	r3,120(sp)
    2f18:	52800210 	cmplti	r10,r10,8
    2f1c:	503d601e 	bne	r10,zero,24a0 <___vfprintf_internal_r+0x74c>
    2f20:	003fb506 	br	2df8 <___vfprintf_internal_r+0x10a4>
    2f24:	9019883a 	mov	r12,r18
    2f28:	003e1906 	br	2790 <___vfprintf_internal_r+0xa3c>
    2f2c:	03000074 	movhi	r12,1
    2f30:	39000450 	cmplti	r4,r7,17
    2f34:	633efe84 	addi	r12,r12,-1030
    2f38:	d8801d17 	ldw	r2,116(sp)
    2f3c:	20002b1e 	bne	r4,zero,2fec <___vfprintf_internal_r+0x1298>
    2f40:	dc401015 	stw	r17,64(sp)
    2f44:	dc801215 	stw	r18,72(sp)
    2f48:	dc001315 	stw	r16,76(sp)
    2f4c:	03c00404 	movi	r15,16
    2f50:	db800e15 	stw	r14,56(sp)
    2f54:	db400f15 	stw	r13,60(sp)
    2f58:	dac01415 	stw	r11,80(sp)
    2f5c:	3821883a 	mov	r16,r7
    2f60:	dc400517 	ldw	r17,20(sp)
    2f64:	6025883a 	mov	r18,r12
    2f68:	00000406 	br	2f7c <___vfprintf_internal_r+0x1228>
    2f6c:	843ffc04 	addi	r16,r16,-16
    2f70:	81000448 	cmpgei	r4,r16,17
    2f74:	42000204 	addi	r8,r8,8
    2f78:	20001426 	beq	r4,zero,2fcc <___vfprintf_internal_r+0x1278>
    2f7c:	10800044 	addi	r2,r2,1
    2f80:	18c00404 	addi	r3,r3,16
    2f84:	44800015 	stw	r18,0(r8)
    2f88:	43c00115 	stw	r15,4(r8)
    2f8c:	d8c01e15 	stw	r3,120(sp)
    2f90:	d8801d15 	stw	r2,116(sp)
    2f94:	11000208 	cmpgei	r4,r2,8
    2f98:	203ff426 	beq	r4,zero,2f6c <___vfprintf_internal_r+0x1218>
    2f9c:	d9801c04 	addi	r6,sp,112
    2fa0:	980b883a 	mov	r5,r19
    2fa4:	8809883a 	mov	r4,r17
    2fa8:	000822c0 	call	822c <__sprint_r>
    2fac:	103c481e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    2fb0:	843ffc04 	addi	r16,r16,-16
    2fb4:	81000448 	cmpgei	r4,r16,17
    2fb8:	d8c01e17 	ldw	r3,120(sp)
    2fbc:	d8801d17 	ldw	r2,116(sp)
    2fc0:	b811883a 	mov	r8,r23
    2fc4:	03c00404 	movi	r15,16
    2fc8:	203fec1e 	bne	r4,zero,2f7c <___vfprintf_internal_r+0x1228>
    2fcc:	800f883a 	mov	r7,r16
    2fd0:	9019883a 	mov	r12,r18
    2fd4:	db800e17 	ldw	r14,56(sp)
    2fd8:	db400f17 	ldw	r13,60(sp)
    2fdc:	dc401017 	ldw	r17,64(sp)
    2fe0:	dac01417 	ldw	r11,80(sp)
    2fe4:	dc001317 	ldw	r16,76(sp)
    2fe8:	dc801217 	ldw	r18,72(sp)
    2fec:	10800044 	addi	r2,r2,1
    2ff0:	19c7883a 	add	r3,r3,r7
    2ff4:	d8801d15 	stw	r2,116(sp)
    2ff8:	43000015 	stw	r12,0(r8)
    2ffc:	41c00115 	stw	r7,4(r8)
    3000:	d8c01e15 	stw	r3,120(sp)
    3004:	10800208 	cmpgei	r2,r2,8
    3008:	1001d61e 	bne	r2,zero,3764 <___vfprintf_internal_r+0x1a10>
    300c:	42000204 	addi	r8,r8,8
    3010:	003cf806 	br	23f4 <___vfprintf_internal_r+0x6a0>
    3014:	d9000517 	ldw	r4,20(sp)
    3018:	d9801c04 	addi	r6,sp,112
    301c:	980b883a 	mov	r5,r19
    3020:	dac01015 	stw	r11,64(sp)
    3024:	db400f15 	stw	r13,60(sp)
    3028:	db800e15 	stw	r14,56(sp)
    302c:	000822c0 	call	822c <__sprint_r>
    3030:	103c271e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3034:	d8c01e17 	ldw	r3,120(sp)
    3038:	b811883a 	mov	r8,r23
    303c:	dac01017 	ldw	r11,64(sp)
    3040:	db400f17 	ldw	r13,60(sp)
    3044:	db800e17 	ldw	r14,56(sp)
    3048:	003cf806 	br	242c <___vfprintf_internal_r+0x6d8>
    304c:	d9000517 	ldw	r4,20(sp)
    3050:	d9801c04 	addi	r6,sp,112
    3054:	980b883a 	mov	r5,r19
    3058:	dac00f15 	stw	r11,60(sp)
    305c:	db400e15 	stw	r13,56(sp)
    3060:	000822c0 	call	822c <__sprint_r>
    3064:	103c1a1e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3068:	d8c01e17 	ldw	r3,120(sp)
    306c:	b811883a 	mov	r8,r23
    3070:	dac00f17 	ldw	r11,60(sp)
    3074:	db400e17 	ldw	r13,56(sp)
    3078:	003cf906 	br	2460 <___vfprintf_internal_r+0x70c>
    307c:	d9000c17 	ldw	r4,48(sp)
    3080:	b823883a 	mov	r17,r23
    3084:	a88003cc 	andi	r2,r21,15
    3088:	a006973a 	slli	r3,r20,28
    308c:	2085883a 	add	r2,r4,r2
    3090:	a82ad13a 	srli	r21,r21,4
    3094:	10800003 	ldbu	r2,0(r2)
    3098:	a028d13a 	srli	r20,r20,4
    309c:	8c7fffc4 	addi	r17,r17,-1
    30a0:	1d6ab03a 	or	r21,r3,r21
    30a4:	88800005 	stb	r2,0(r17)
    30a8:	ad04b03a 	or	r2,r21,r20
    30ac:	103ff51e 	bne	r2,zero,3084 <___vfprintf_internal_r+0x1330>
    30b0:	bc69c83a 	sub	r20,r23,r17
    30b4:	6025883a 	mov	r18,r12
    30b8:	003e3d06 	br	29b0 <___vfprintf_internal_r+0xc5c>
    30bc:	d9001617 	ldw	r4,88(sp)
    30c0:	01019a0e 	bge	zero,r4,372c <___vfprintf_internal_r+0x19d8>
    30c4:	d8800717 	ldw	r2,28(sp)
    30c8:	d9000817 	ldw	r4,32(sp)
    30cc:	1039883a 	mov	fp,r2
    30d0:	20812816 	blt	r4,r2,3574 <___vfprintf_internal_r+0x1820>
    30d4:	07000a0e 	bge	zero,fp,3100 <___vfprintf_internal_r+0x13ac>
    30d8:	d8801d17 	ldw	r2,116(sp)
    30dc:	1f07883a 	add	r3,r3,fp
    30e0:	44400015 	stw	r17,0(r8)
    30e4:	10800044 	addi	r2,r2,1
    30e8:	d8801d15 	stw	r2,116(sp)
    30ec:	47000115 	stw	fp,4(r8)
    30f0:	d8c01e15 	stw	r3,120(sp)
    30f4:	10800208 	cmpgei	r2,r2,8
    30f8:	1002de1e 	bne	r2,zero,3c74 <___vfprintf_internal_r+0x1f20>
    30fc:	42000204 	addi	r8,r8,8
    3100:	e0014116 	blt	fp,zero,3608 <___vfprintf_internal_r+0x18b4>
    3104:	d8800717 	ldw	r2,28(sp)
    3108:	1739c83a 	sub	fp,r2,fp
    310c:	07014816 	blt	zero,fp,3630 <___vfprintf_internal_r+0x18dc>
    3110:	d9001617 	ldw	r4,88(sp)
    3114:	d8800817 	ldw	r2,32(sp)
    3118:	2081190e 	bge	r4,r2,3580 <___vfprintf_internal_r+0x182c>
    311c:	d8800d17 	ldw	r2,52(sp)
    3120:	d9400b17 	ldw	r5,44(sp)
    3124:	40800015 	stw	r2,0(r8)
    3128:	d8801d17 	ldw	r2,116(sp)
    312c:	1947883a 	add	r3,r3,r5
    3130:	41400115 	stw	r5,4(r8)
    3134:	10800044 	addi	r2,r2,1
    3138:	d8801d15 	stw	r2,116(sp)
    313c:	d8c01e15 	stw	r3,120(sp)
    3140:	10800208 	cmpgei	r2,r2,8
    3144:	1002651e 	bne	r2,zero,3adc <___vfprintf_internal_r+0x1d88>
    3148:	42000204 	addi	r8,r8,8
    314c:	d8800817 	ldw	r2,32(sp)
    3150:	d9400717 	ldw	r5,28(sp)
    3154:	1105c83a 	sub	r2,r2,r4
    3158:	29015e0e 	bge	r5,r4,36d4 <___vfprintf_internal_r+0x1980>
    315c:	1039883a 	mov	fp,r2
    3160:	07000c0e 	bge	zero,fp,3194 <___vfprintf_internal_r+0x1440>
    3164:	d9000717 	ldw	r4,28(sp)
    3168:	1f07883a 	add	r3,r3,fp
    316c:	47000115 	stw	fp,4(r8)
    3170:	8923883a 	add	r17,r17,r4
    3174:	d9001d17 	ldw	r4,116(sp)
    3178:	44400015 	stw	r17,0(r8)
    317c:	d8c01e15 	stw	r3,120(sp)
    3180:	21000044 	addi	r4,r4,1
    3184:	d9001d15 	stw	r4,116(sp)
    3188:	21000208 	cmpgei	r4,r4,8
    318c:	2002c41e 	bne	r4,zero,3ca0 <___vfprintf_internal_r+0x1f4c>
    3190:	42000204 	addi	r8,r8,8
    3194:	e000010e 	bge	fp,zero,319c <___vfprintf_internal_r+0x1448>
    3198:	0039883a 	mov	fp,zero
    319c:	1739c83a 	sub	fp,r2,fp
    31a0:	073cbf0e 	bge	zero,fp,24a0 <___vfprintf_internal_r+0x74c>
    31a4:	03000074 	movhi	r12,1
    31a8:	e1000450 	cmplti	r4,fp,17
    31ac:	633efa84 	addi	r12,r12,-1046
    31b0:	d8801d17 	ldw	r2,116(sp)
    31b4:	2002401e 	bne	r4,zero,3ab8 <___vfprintf_internal_r+0x1d64>
    31b8:	dc000715 	stw	r16,28(sp)
    31bc:	05000404 	movi	r20,16
    31c0:	dc400517 	ldw	r17,20(sp)
    31c4:	6021883a 	mov	r16,r12
    31c8:	00000406 	br	31dc <___vfprintf_internal_r+0x1488>
    31cc:	42000204 	addi	r8,r8,8
    31d0:	e73ffc04 	addi	fp,fp,-16
    31d4:	e1000448 	cmpgei	r4,fp,17
    31d8:	20023526 	beq	r4,zero,3ab0 <___vfprintf_internal_r+0x1d5c>
    31dc:	10800044 	addi	r2,r2,1
    31e0:	18c00404 	addi	r3,r3,16
    31e4:	44000015 	stw	r16,0(r8)
    31e8:	45000115 	stw	r20,4(r8)
    31ec:	d8c01e15 	stw	r3,120(sp)
    31f0:	d8801d15 	stw	r2,116(sp)
    31f4:	11000208 	cmpgei	r4,r2,8
    31f8:	203ff426 	beq	r4,zero,31cc <___vfprintf_internal_r+0x1478>
    31fc:	d9801c04 	addi	r6,sp,112
    3200:	980b883a 	mov	r5,r19
    3204:	8809883a 	mov	r4,r17
    3208:	000822c0 	call	822c <__sprint_r>
    320c:	103bb01e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3210:	d8c01e17 	ldw	r3,120(sp)
    3214:	d8801d17 	ldw	r2,116(sp)
    3218:	b811883a 	mov	r8,r23
    321c:	003fec06 	br	31d0 <___vfprintf_internal_r+0x147c>
    3220:	9080004c 	andi	r2,r18,1
    3224:	103f031e 	bne	r2,zero,2e34 <___vfprintf_internal_r+0x10e0>
    3228:	00800044 	movi	r2,1
    322c:	dd001d15 	stw	r20,116(sp)
    3230:	44400015 	stw	r17,0(r8)
    3234:	40800115 	stw	r2,4(r8)
    3238:	d8c01e15 	stw	r3,120(sp)
    323c:	a5000208 	cmpgei	r20,r20,8
    3240:	a000d71e 	bne	r20,zero,35a0 <___vfprintf_internal_r+0x184c>
    3244:	52800084 	addi	r10,r10,2
    3248:	42000404 	addi	r8,r8,16
    324c:	003f2b06 	br	2efc <___vfprintf_internal_r+0x11a8>
    3250:	02ff2a0e 	bge	zero,r11,2efc <___vfprintf_internal_r+0x11a8>
    3254:	58800450 	cmplti	r2,r11,17
    3258:	03000074 	movhi	r12,1
    325c:	1002fe1e 	bne	r2,zero,3e58 <___vfprintf_internal_r+0x2104>
    3260:	633efa84 	addi	r12,r12,-1046
    3264:	dd400715 	stw	r21,28(sp)
    3268:	dc800e15 	stw	r18,56(sp)
    326c:	e005883a 	mov	r2,fp
    3270:	04400404 	movi	r17,16
    3274:	b039883a 	mov	fp,r22
    3278:	5825883a 	mov	r18,r11
    327c:	802d883a 	mov	r22,r16
    3280:	602b883a 	mov	r21,r12
    3284:	dc000517 	ldw	r16,20(sp)
    3288:	6829883a 	mov	r20,r13
    328c:	00000506 	br	32a4 <___vfprintf_internal_r+0x1550>
    3290:	10800204 	addi	r2,r2,8
    3294:	94bffc04 	addi	r18,r18,-16
    3298:	91000448 	cmpgei	r4,r18,17
    329c:	20018a26 	beq	r4,zero,38c8 <___vfprintf_internal_r+0x1b74>
    32a0:	a5000044 	addi	r20,r20,1
    32a4:	18c00404 	addi	r3,r3,16
    32a8:	15400015 	stw	r21,0(r2)
    32ac:	14400115 	stw	r17,4(r2)
    32b0:	d8c01e15 	stw	r3,120(sp)
    32b4:	dd001d15 	stw	r20,116(sp)
    32b8:	a1000208 	cmpgei	r4,r20,8
    32bc:	203ff426 	beq	r4,zero,3290 <___vfprintf_internal_r+0x153c>
    32c0:	d9801c04 	addi	r6,sp,112
    32c4:	980b883a 	mov	r5,r19
    32c8:	8009883a 	mov	r4,r16
    32cc:	000822c0 	call	822c <__sprint_r>
    32d0:	103b7f1e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    32d4:	dd001d17 	ldw	r20,116(sp)
    32d8:	d8c01e17 	ldw	r3,120(sp)
    32dc:	b805883a 	mov	r2,r23
    32e0:	003fec06 	br	3294 <___vfprintf_internal_r+0x1540>
    32e4:	d9000517 	ldw	r4,20(sp)
    32e8:	d9801c04 	addi	r6,sp,112
    32ec:	980b883a 	mov	r5,r19
    32f0:	000822c0 	call	822c <__sprint_r>
    32f4:	103b761e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    32f8:	d8c01e17 	ldw	r3,120(sp)
    32fc:	b811883a 	mov	r8,r23
    3300:	003c5b06 	br	2470 <___vfprintf_internal_r+0x71c>
    3304:	0029883a 	mov	r20,zero
    3308:	003bdc06 	br	227c <___vfprintf_internal_r+0x528>
    330c:	b023883a 	mov	r17,r22
    3310:	003ae306 	br	1ea0 <___vfprintf_internal_r+0x14c>
    3314:	b823883a 	mov	r17,r23
    3318:	003da506 	br	29b0 <___vfprintf_internal_r+0xc5c>
    331c:	d9000917 	ldw	r4,36(sp)
    3320:	d9400a17 	ldw	r5,40(sp)
    3324:	da000f15 	stw	r8,60(sp)
    3328:	200d883a 	mov	r6,r4
    332c:	280f883a 	mov	r7,r5
    3330:	dac00e15 	stw	r11,56(sp)
    3334:	db000715 	stw	r12,28(sp)
    3338:	000d2800 	call	d280 <__unorddf2>
    333c:	db000717 	ldw	r12,28(sp)
    3340:	dac00e17 	ldw	r11,56(sp)
    3344:	da000f17 	ldw	r8,60(sp)
    3348:	1002b21e 	bne	r2,zero,3e14 <___vfprintf_internal_r+0x20c0>
    334c:	00fff7c4 	movi	r3,-33
    3350:	e0c6703a 	and	r3,fp,r3
    3354:	58bfffe0 	cmpeqi	r2,r11,-1
    3358:	d8c00715 	stw	r3,28(sp)
    335c:	10024e1e 	bne	r2,zero,3c98 <___vfprintf_internal_r+0x1f44>
    3360:	188011d8 	cmpnei	r2,r3,71
    3364:	10020026 	beq	r2,zero,3b68 <___vfprintf_internal_r+0x1e14>
    3368:	d8800a17 	ldw	r2,40(sp)
    336c:	64804014 	ori	r18,r12,256
    3370:	1001e316 	blt	r2,zero,3b00 <___vfprintf_internal_r+0x1dac>
    3374:	dd400a17 	ldw	r21,40(sp)
    3378:	d8000e05 	stb	zero,56(sp)
    337c:	e08019a0 	cmpeqi	r2,fp,102
    3380:	d8800f15 	stw	r2,60(sp)
    3384:	1001771e 	bne	r2,zero,3964 <___vfprintf_internal_r+0x1c10>
    3388:	e08011a0 	cmpeqi	r2,fp,70
    338c:	1001751e 	bne	r2,zero,3964 <___vfprintf_internal_r+0x1c10>
    3390:	d8800717 	ldw	r2,28(sp)
    3394:	da001215 	stw	r8,72(sp)
    3398:	db001015 	stw	r12,64(sp)
    339c:	10801158 	cmpnei	r2,r2,69
    33a0:	10020726 	beq	r2,zero,3bc0 <___vfprintf_internal_r+0x1e6c>
    33a4:	d8801a04 	addi	r2,sp,104
    33a8:	d8800315 	stw	r2,12(sp)
    33ac:	d9400917 	ldw	r5,36(sp)
    33b0:	d8801704 	addi	r2,sp,92
    33b4:	d9000517 	ldw	r4,20(sp)
    33b8:	d8800215 	stw	r2,8(sp)
    33bc:	d8801604 	addi	r2,sp,88
    33c0:	dac00015 	stw	r11,0(sp)
    33c4:	d8800115 	stw	r2,4(sp)
    33c8:	01c00084 	movi	r7,2
    33cc:	a80d883a 	mov	r6,r21
    33d0:	dac00815 	stw	r11,32(sp)
    33d4:	00044040 	call	4404 <_dtoa_r>
    33d8:	dac00817 	ldw	r11,32(sp)
    33dc:	1023883a 	mov	r17,r2
    33e0:	e08019d8 	cmpnei	r2,fp,103
    33e4:	db001017 	ldw	r12,64(sp)
    33e8:	da001217 	ldw	r8,72(sp)
    33ec:	5829883a 	mov	r20,r11
    33f0:	1002051e 	bne	r2,zero,3c08 <___vfprintf_internal_r+0x1eb4>
    33f4:	6080004c 	andi	r2,r12,1
    33f8:	1002051e 	bne	r2,zero,3c10 <___vfprintf_internal_r+0x1ebc>
    33fc:	d8c01617 	ldw	r3,88(sp)
    3400:	d8800717 	ldw	r2,28(sp)
    3404:	d8c00715 	stw	r3,28(sp)
    3408:	d8c01a17 	ldw	r3,104(sp)
    340c:	108011e0 	cmpeqi	r2,r2,71
    3410:	1c47c83a 	sub	r3,r3,r17
    3414:	d8c00815 	stw	r3,32(sp)
    3418:	10000526 	beq	r2,zero,3430 <___vfprintf_internal_r+0x16dc>
    341c:	d8c00717 	ldw	r3,28(sp)
    3420:	18bfff50 	cmplti	r2,r3,-3
    3424:	1000011e 	bne	r2,zero,342c <___vfprintf_internal_r+0x16d8>
    3428:	58c2070e 	bge	r11,r3,3c48 <___vfprintf_internal_r+0x1ef4>
    342c:	e73fff84 	addi	fp,fp,-2
    3430:	d8800717 	ldw	r2,28(sp)
    3434:	df001845 	stb	fp,97(sp)
    3438:	153fffc4 	addi	r20,r2,-1
    343c:	dd001615 	stw	r20,88(sp)
    3440:	a0027c16 	blt	r20,zero,3e34 <___vfprintf_internal_r+0x20e0>
    3444:	00800ac4 	movi	r2,43
    3448:	d8801885 	stb	r2,98(sp)
    344c:	a0800290 	cmplti	r2,r20,10
    3450:	10025b1e 	bne	r2,zero,3dc0 <___vfprintf_internal_r+0x206c>
    3454:	dc000f15 	stw	r16,60(sp)
    3458:	dd401bc4 	addi	r21,sp,111
    345c:	a021883a 	mov	r16,r20
    3460:	db000715 	stw	r12,28(sp)
    3464:	9829883a 	mov	r20,r19
    3468:	4027883a 	mov	r19,r8
    346c:	00000206 	br	3478 <___vfprintf_internal_r+0x1724>
    3470:	202b883a 	mov	r21,r4
    3474:	1021883a 	mov	r16,r2
    3478:	8009883a 	mov	r4,r16
    347c:	01400284 	movi	r5,10
    3480:	000aa700 	call	aa70 <__modsi3>
    3484:	10800c04 	addi	r2,r2,48
    3488:	8009883a 	mov	r4,r16
    348c:	a8bfffc5 	stb	r2,-1(r21)
    3490:	01400284 	movi	r5,10
    3494:	000a9f00 	call	a9f0 <__divsi3>
    3498:	80c01908 	cmpgei	r3,r16,100
    349c:	a93fffc4 	addi	r4,r21,-1
    34a0:	183ff31e 	bne	r3,zero,3470 <___vfprintf_internal_r+0x171c>
    34a4:	10800c04 	addi	r2,r2,48
    34a8:	20bfffc5 	stb	r2,-1(r4)
    34ac:	a8ffff84 	addi	r3,r21,-2
    34b0:	d9001bc4 	addi	r4,sp,111
    34b4:	9811883a 	mov	r8,r19
    34b8:	db000717 	ldw	r12,28(sp)
    34bc:	dc000f17 	ldw	r16,60(sp)
    34c0:	a027883a 	mov	r19,r20
    34c4:	1902762e 	bgeu	r3,r4,3ea0 <___vfprintf_internal_r+0x214c>
    34c8:	d90018c4 	addi	r4,sp,99
    34cc:	00000106 	br	34d4 <___vfprintf_internal_r+0x1780>
    34d0:	18800003 	ldbu	r2,0(r3)
    34d4:	21000044 	addi	r4,r4,1
    34d8:	20bfffc5 	stb	r2,-1(r4)
    34dc:	18c00044 	addi	r3,r3,1
    34e0:	d8801bc4 	addi	r2,sp,111
    34e4:	18bffa1e 	bne	r3,r2,34d0 <___vfprintf_internal_r+0x177c>
    34e8:	d8801c44 	addi	r2,sp,113
    34ec:	d8c018c4 	addi	r3,sp,99
    34f0:	1545c83a 	sub	r2,r2,r21
    34f4:	1885883a 	add	r2,r3,r2
    34f8:	d8c01844 	addi	r3,sp,97
    34fc:	10c5c83a 	sub	r2,r2,r3
    3500:	d8801115 	stw	r2,68(sp)
    3504:	d8c00817 	ldw	r3,32(sp)
    3508:	d9001117 	ldw	r4,68(sp)
    350c:	18800088 	cmpgei	r2,r3,2
    3510:	1929883a 	add	r20,r3,r4
    3514:	10024c26 	beq	r2,zero,3e48 <___vfprintf_internal_r+0x20f4>
    3518:	d8800b17 	ldw	r2,44(sp)
    351c:	a0a9883a 	add	r20,r20,r2
    3520:	a02b883a 	mov	r21,r20
    3524:	a000010e 	bge	r20,zero,352c <___vfprintf_internal_r+0x17d8>
    3528:	002b883a 	mov	r21,zero
    352c:	d8000715 	stw	zero,28(sp)
    3530:	00014206 	br	3a3c <___vfprintf_internal_r+0x1ce8>
    3534:	00800c04 	movi	r2,48
    3538:	d8801585 	stb	r2,86(sp)
    353c:	df0015c5 	stb	fp,87(sp)
    3540:	63000094 	ori	r12,r12,2
    3544:	00800084 	movi	r2,2
    3548:	003ce106 	br	28d0 <___vfprintf_internal_r+0xb7c>
    354c:	d9400417 	ldw	r5,16(sp)
    3550:	20800017 	ldw	r2,0(r4)
    3554:	d8c00615 	stw	r3,24(sp)
    3558:	2809d7fa 	srai	r4,r5,31
    355c:	11400015 	stw	r5,0(r2)
    3560:	11000115 	stw	r4,4(r2)
    3564:	003a3006 	br	1e28 <___vfprintf_internal_r+0xd4>
    3568:	0421c83a 	sub	r16,zero,r16
    356c:	d8800615 	stw	r2,24(sp)
    3570:	003b1506 	br	21c8 <___vfprintf_internal_r+0x474>
    3574:	2039883a 	mov	fp,r4
    3578:	073ed716 	blt	zero,fp,30d8 <___vfprintf_internal_r+0x1384>
    357c:	003ee006 	br	3100 <___vfprintf_internal_r+0x13ac>
    3580:	9080004c 	andi	r2,r18,1
    3584:	103ee51e 	bne	r2,zero,311c <___vfprintf_internal_r+0x13c8>
    3588:	d8800817 	ldw	r2,32(sp)
    358c:	d9400717 	ldw	r5,28(sp)
    3590:	1105c83a 	sub	r2,r2,r4
    3594:	29004f0e 	bge	r5,r4,36d4 <___vfprintf_internal_r+0x1980>
    3598:	1039883a 	mov	fp,r2
    359c:	003efd06 	br	3194 <___vfprintf_internal_r+0x1440>
    35a0:	d9000517 	ldw	r4,20(sp)
    35a4:	d9801c04 	addi	r6,sp,112
    35a8:	980b883a 	mov	r5,r19
    35ac:	000822c0 	call	822c <__sprint_r>
    35b0:	103ac71e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    35b4:	da801d17 	ldw	r10,116(sp)
    35b8:	d8c01e17 	ldw	r3,120(sp)
    35bc:	da002b04 	addi	r8,sp,172
    35c0:	52800044 	addi	r10,r10,1
    35c4:	b839883a 	mov	fp,r23
    35c8:	003e4c06 	br	2efc <___vfprintf_internal_r+0x11a8>
    35cc:	b7000043 	ldbu	fp,1(r22)
    35d0:	63000814 	ori	r12,r12,32
    35d4:	b5800044 	addi	r22,r22,1
    35d8:	e2803fcc 	andi	r10,fp,255
    35dc:	5280201c 	xori	r10,r10,128
    35e0:	52bfe004 	addi	r10,r10,-128
    35e4:	003a3606 	br	1ec0 <___vfprintf_internal_r+0x16c>
    35e8:	d9000517 	ldw	r4,20(sp)
    35ec:	d9801c04 	addi	r6,sp,112
    35f0:	980b883a 	mov	r5,r19
    35f4:	000822c0 	call	822c <__sprint_r>
    35f8:	103ab51e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    35fc:	d8c01e17 	ldw	r3,120(sp)
    3600:	b811883a 	mov	r8,r23
    3604:	003d4506 	br	2b1c <___vfprintf_internal_r+0xdc8>
    3608:	0039883a 	mov	fp,zero
    360c:	003ebd06 	br	3104 <___vfprintf_internal_r+0x13b0>
    3610:	588001f0 	cmpltui	r2,r11,7
    3614:	5829883a 	mov	r20,r11
    3618:	10013d26 	beq	r2,zero,3b10 <___vfprintf_internal_r+0x1dbc>
    361c:	04400074 	movhi	r17,1
    3620:	a02b883a 	mov	r21,r20
    3624:	dc800615 	stw	r18,24(sp)
    3628:	8c7ef804 	addi	r17,r17,-1056
    362c:	003b6606 	br	23c8 <___vfprintf_internal_r+0x674>
    3630:	03000074 	movhi	r12,1
    3634:	e1000450 	cmplti	r4,fp,17
    3638:	633efa84 	addi	r12,r12,-1046
    363c:	d8801d17 	ldw	r2,116(sp)
    3640:	20010d1e 	bne	r4,zero,3a78 <___vfprintf_internal_r+0x1d24>
    3644:	dc400e15 	stw	r17,56(sp)
    3648:	dc800f15 	stw	r18,60(sp)
    364c:	e023883a 	mov	r17,fp
    3650:	05000404 	movi	r20,16
    3654:	b039883a 	mov	fp,r22
    3658:	6025883a 	mov	r18,r12
    365c:	802d883a 	mov	r22,r16
    3660:	dc000517 	ldw	r16,20(sp)
    3664:	00000406 	br	3678 <___vfprintf_internal_r+0x1924>
    3668:	42000204 	addi	r8,r8,8
    366c:	8c7ffc04 	addi	r17,r17,-16
    3670:	89000448 	cmpgei	r4,r17,17
    3674:	2000fa26 	beq	r4,zero,3a60 <___vfprintf_internal_r+0x1d0c>
    3678:	10800044 	addi	r2,r2,1
    367c:	18c00404 	addi	r3,r3,16
    3680:	44800015 	stw	r18,0(r8)
    3684:	45000115 	stw	r20,4(r8)
    3688:	d8c01e15 	stw	r3,120(sp)
    368c:	d8801d15 	stw	r2,116(sp)
    3690:	11000208 	cmpgei	r4,r2,8
    3694:	203ff426 	beq	r4,zero,3668 <___vfprintf_internal_r+0x1914>
    3698:	d9801c04 	addi	r6,sp,112
    369c:	980b883a 	mov	r5,r19
    36a0:	8009883a 	mov	r4,r16
    36a4:	000822c0 	call	822c <__sprint_r>
    36a8:	103a891e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    36ac:	d8c01e17 	ldw	r3,120(sp)
    36b0:	d8801d17 	ldw	r2,116(sp)
    36b4:	b811883a 	mov	r8,r23
    36b8:	003fec06 	br	366c <___vfprintf_internal_r+0x1918>
    36bc:	d8800617 	ldw	r2,24(sp)
    36c0:	10800017 	ldw	r2,0(r2)
    36c4:	d8c00615 	stw	r3,24(sp)
    36c8:	d8c00417 	ldw	r3,16(sp)
    36cc:	10c00015 	stw	r3,0(r2)
    36d0:	0039d506 	br	1e28 <___vfprintf_internal_r+0xd4>
    36d4:	d9000817 	ldw	r4,32(sp)
    36d8:	d9400717 	ldw	r5,28(sp)
    36dc:	2179c83a 	sub	fp,r4,r5
    36e0:	003e9f06 	br	3160 <___vfprintf_internal_r+0x140c>
    36e4:	d9000517 	ldw	r4,20(sp)
    36e8:	d9801c04 	addi	r6,sp,112
    36ec:	980b883a 	mov	r5,r19
    36f0:	000822c0 	call	822c <__sprint_r>
    36f4:	103a761e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    36f8:	d8c01e17 	ldw	r3,120(sp)
    36fc:	dd001d17 	ldw	r20,116(sp)
    3700:	b839883a 	mov	fp,r23
    3704:	003ddd06 	br	2e7c <___vfprintf_internal_r+0x1128>
    3708:	d9000517 	ldw	r4,20(sp)
    370c:	d9801c04 	addi	r6,sp,112
    3710:	980b883a 	mov	r5,r19
    3714:	000822c0 	call	822c <__sprint_r>
    3718:	103a6d1e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    371c:	d8c01e17 	ldw	r3,120(sp)
    3720:	dd001d17 	ldw	r20,116(sp)
    3724:	b839883a 	mov	fp,r23
    3728:	003dc906 	br	2e50 <___vfprintf_internal_r+0x10fc>
    372c:	d8801d17 	ldw	r2,116(sp)
    3730:	01400074 	movhi	r5,1
    3734:	297efa04 	addi	r5,r5,-1048
    3738:	10800044 	addi	r2,r2,1
    373c:	18c00044 	addi	r3,r3,1
    3740:	41400015 	stw	r5,0(r8)
    3744:	01400044 	movi	r5,1
    3748:	d8801d15 	stw	r2,116(sp)
    374c:	41400115 	stw	r5,4(r8)
    3750:	d8c01e15 	stw	r3,120(sp)
    3754:	10800208 	cmpgei	r2,r2,8
    3758:	103d851e 	bne	r2,zero,2d70 <___vfprintf_internal_r+0x101c>
    375c:	42000204 	addi	r8,r8,8
    3760:	003d8b06 	br	2d90 <___vfprintf_internal_r+0x103c>
    3764:	d9000517 	ldw	r4,20(sp)
    3768:	d9801c04 	addi	r6,sp,112
    376c:	980b883a 	mov	r5,r19
    3770:	dac01015 	stw	r11,64(sp)
    3774:	db400f15 	stw	r13,60(sp)
    3778:	db800e15 	stw	r14,56(sp)
    377c:	000822c0 	call	822c <__sprint_r>
    3780:	103a531e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3784:	d8c01e17 	ldw	r3,120(sp)
    3788:	b811883a 	mov	r8,r23
    378c:	dac01017 	ldw	r11,64(sp)
    3790:	db400f17 	ldw	r13,60(sp)
    3794:	db800e17 	ldw	r14,56(sp)
    3798:	003b1606 	br	23f4 <___vfprintf_internal_r+0x6a0>
    379c:	d9000517 	ldw	r4,20(sp)
    37a0:	d9801c04 	addi	r6,sp,112
    37a4:	980b883a 	mov	r5,r19
    37a8:	000822c0 	call	822c <__sprint_r>
    37ac:	103a481e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    37b0:	b811883a 	mov	r8,r23
    37b4:	003cc506 	br	2acc <___vfprintf_internal_r+0xd78>
    37b8:	d9000517 	ldw	r4,20(sp)
    37bc:	d9801c04 	addi	r6,sp,112
    37c0:	980b883a 	mov	r5,r19
    37c4:	dac00e15 	stw	r11,56(sp)
    37c8:	000822c0 	call	822c <__sprint_r>
    37cc:	103a401e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    37d0:	d8c01e17 	ldw	r3,120(sp)
    37d4:	b811883a 	mov	r8,r23
    37d8:	dac00e17 	ldw	r11,56(sp)
    37dc:	003b2206 	br	2468 <___vfprintf_internal_r+0x714>
    37e0:	10c00060 	cmpeqi	r3,r2,1
    37e4:	9019883a 	mov	r12,r18
    37e8:	183beb26 	beq	r3,zero,2798 <___vfprintf_internal_r+0xa44>
    37ec:	003c6b06 	br	299c <___vfprintf_internal_r+0xc48>
    37f0:	d8800d17 	ldw	r2,52(sp)
    37f4:	d9400b17 	ldw	r5,44(sp)
    37f8:	40800015 	stw	r2,0(r8)
    37fc:	d8801d17 	ldw	r2,116(sp)
    3800:	28c7883a 	add	r3,r5,r3
    3804:	41400115 	stw	r5,4(r8)
    3808:	10800044 	addi	r2,r2,1
    380c:	d8c01e15 	stw	r3,120(sp)
    3810:	d8801d15 	stw	r2,116(sp)
    3814:	11400208 	cmpgei	r5,r2,8
    3818:	2800d61e 	bne	r5,zero,3b74 <___vfprintf_internal_r+0x1e20>
    381c:	42000204 	addi	r8,r8,8
    3820:	203d6c0e 	bge	r4,zero,2dd4 <___vfprintf_internal_r+0x1080>
    3824:	03000074 	movhi	r12,1
    3828:	217ffc08 	cmpgei	r5,r4,-16
    382c:	633efa84 	addi	r12,r12,-1046
    3830:	0129c83a 	sub	r20,zero,r4
    3834:	28014e1e 	bne	r5,zero,3d70 <___vfprintf_internal_r+0x201c>
    3838:	8009883a 	mov	r4,r16
    383c:	dc400715 	stw	r17,28(sp)
    3840:	a021883a 	mov	r16,r20
    3844:	07000404 	movi	fp,16
    3848:	6023883a 	mov	r17,r12
    384c:	2029883a 	mov	r20,r4
    3850:	00000406 	br	3864 <___vfprintf_internal_r+0x1b10>
    3854:	42000204 	addi	r8,r8,8
    3858:	843ffc04 	addi	r16,r16,-16
    385c:	81000448 	cmpgei	r4,r16,17
    3860:	20013e26 	beq	r4,zero,3d5c <___vfprintf_internal_r+0x2008>
    3864:	10800044 	addi	r2,r2,1
    3868:	18c00404 	addi	r3,r3,16
    386c:	44400015 	stw	r17,0(r8)
    3870:	47000115 	stw	fp,4(r8)
    3874:	d8c01e15 	stw	r3,120(sp)
    3878:	d8801d15 	stw	r2,116(sp)
    387c:	11000208 	cmpgei	r4,r2,8
    3880:	203ff426 	beq	r4,zero,3854 <___vfprintf_internal_r+0x1b00>
    3884:	d9000517 	ldw	r4,20(sp)
    3888:	d9801c04 	addi	r6,sp,112
    388c:	980b883a 	mov	r5,r19
    3890:	000822c0 	call	822c <__sprint_r>
    3894:	103a0e1e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3898:	d8c01e17 	ldw	r3,120(sp)
    389c:	d8801d17 	ldw	r2,116(sp)
    38a0:	b811883a 	mov	r8,r23
    38a4:	003fec06 	br	3858 <___vfprintf_internal_r+0x1b04>
    38a8:	8809883a 	mov	r4,r17
    38ac:	0001a4c0 	call	1a4c <strlen>
    38b0:	1029883a 	mov	r20,r2
    38b4:	102b883a 	mov	r21,r2
    38b8:	dc800615 	stw	r18,24(sp)
    38bc:	db000717 	ldw	r12,28(sp)
    38c0:	da000e17 	ldw	r8,56(sp)
    38c4:	003ac006 	br	23c8 <___vfprintf_internal_r+0x674>
    38c8:	9017883a 	mov	r11,r18
    38cc:	a819883a 	mov	r12,r21
    38d0:	dc800e17 	ldw	r18,56(sp)
    38d4:	dd400717 	ldw	r21,28(sp)
    38d8:	b021883a 	mov	r16,r22
    38dc:	a2800044 	addi	r10,r20,1
    38e0:	e02d883a 	mov	r22,fp
    38e4:	1039883a 	mov	fp,r2
    38e8:	10800204 	addi	r2,r2,8
    38ec:	1ac7883a 	add	r3,r3,r11
    38f0:	e3000015 	stw	r12,0(fp)
    38f4:	e2c00115 	stw	r11,4(fp)
    38f8:	d8c01e15 	stw	r3,120(sp)
    38fc:	da801d15 	stw	r10,116(sp)
    3900:	51000208 	cmpgei	r4,r10,8
    3904:	203f261e 	bne	r4,zero,35a0 <___vfprintf_internal_r+0x184c>
    3908:	52800044 	addi	r10,r10,1
    390c:	12000204 	addi	r8,r2,8
    3910:	1039883a 	mov	fp,r2
    3914:	003d7906 	br	2efc <___vfprintf_internal_r+0x11a8>
    3918:	8019883a 	mov	r12,r16
    391c:	dc000717 	ldw	r16,28(sp)
    3920:	10800044 	addi	r2,r2,1
    3924:	1c47883a 	add	r3,r3,r17
    3928:	d8801d15 	stw	r2,116(sp)
    392c:	43000015 	stw	r12,0(r8)
    3930:	44400115 	stw	r17,4(r8)
    3934:	d8c01e15 	stw	r3,120(sp)
    3938:	10800208 	cmpgei	r2,r2,8
    393c:	103ad726 	beq	r2,zero,249c <___vfprintf_internal_r+0x748>
    3940:	003d2d06 	br	2df8 <___vfprintf_internal_r+0x10a4>
    3944:	d8800615 	stw	r2,24(sp)
    3948:	0029883a 	mov	r20,zero
    394c:	0005883a 	mov	r2,zero
    3950:	003bdf06 	br	28d0 <___vfprintf_internal_r+0xb7c>
    3954:	d8800615 	stw	r2,24(sp)
    3958:	0029883a 	mov	r20,zero
    395c:	00800044 	movi	r2,1
    3960:	003bdb06 	br	28d0 <___vfprintf_internal_r+0xb7c>
    3964:	d8801a04 	addi	r2,sp,104
    3968:	d8800315 	stw	r2,12(sp)
    396c:	d9400917 	ldw	r5,36(sp)
    3970:	d8801704 	addi	r2,sp,92
    3974:	d9000517 	ldw	r4,20(sp)
    3978:	d8800215 	stw	r2,8(sp)
    397c:	d8801604 	addi	r2,sp,88
    3980:	dac00015 	stw	r11,0(sp)
    3984:	d8800115 	stw	r2,4(sp)
    3988:	01c000c4 	movi	r7,3
    398c:	a80d883a 	mov	r6,r21
    3990:	da001215 	stw	r8,72(sp)
    3994:	db001015 	stw	r12,64(sp)
    3998:	dac00815 	stw	r11,32(sp)
    399c:	00044040 	call	4404 <_dtoa_r>
    39a0:	dac00817 	ldw	r11,32(sp)
    39a4:	1023883a 	mov	r17,r2
    39a8:	db001017 	ldw	r12,64(sp)
    39ac:	12e9883a 	add	r20,r2,r11
    39b0:	88800007 	ldb	r2,0(r17)
    39b4:	da001217 	ldw	r8,72(sp)
    39b8:	10800c20 	cmpeqi	r2,r2,48
    39bc:	10005a1e 	bne	r2,zero,3b28 <___vfprintf_internal_r+0x1dd4>
    39c0:	d8801617 	ldw	r2,88(sp)
    39c4:	a0a9883a 	add	r20,r20,r2
    39c8:	d9000917 	ldw	r4,36(sp)
    39cc:	000d883a 	mov	r6,zero
    39d0:	000f883a 	mov	r7,zero
    39d4:	a80b883a 	mov	r5,r21
    39d8:	da001215 	stw	r8,72(sp)
    39dc:	dac01015 	stw	r11,64(sp)
    39e0:	db000815 	stw	r12,32(sp)
    39e4:	000bed40 	call	bed4 <__eqdf2>
    39e8:	db000817 	ldw	r12,32(sp)
    39ec:	dac01017 	ldw	r11,64(sp)
    39f0:	da001217 	ldw	r8,72(sp)
    39f4:	1000881e 	bne	r2,zero,3c18 <___vfprintf_internal_r+0x1ec4>
    39f8:	a005883a 	mov	r2,r20
    39fc:	1445c83a 	sub	r2,r2,r17
    3a00:	d8c00717 	ldw	r3,28(sp)
    3a04:	d8800815 	stw	r2,32(sp)
    3a08:	d8801617 	ldw	r2,88(sp)
    3a0c:	18c011d8 	cmpnei	r3,r3,71
    3a10:	d8800715 	stw	r2,28(sp)
    3a14:	183e8126 	beq	r3,zero,341c <___vfprintf_internal_r+0x16c8>
    3a18:	d8800f17 	ldw	r2,60(sp)
    3a1c:	103e8426 	beq	r2,zero,3430 <___vfprintf_internal_r+0x16dc>
    3a20:	d8c00717 	ldw	r3,28(sp)
    3a24:	6080004c 	andi	r2,r12,1
    3a28:	12c4b03a 	or	r2,r2,r11
    3a2c:	00c10d0e 	bge	zero,r3,3e64 <___vfprintf_internal_r+0x2110>
    3a30:	1000f11e 	bne	r2,zero,3df8 <___vfprintf_internal_r+0x20a4>
    3a34:	dd000717 	ldw	r20,28(sp)
    3a38:	a02b883a 	mov	r21,r20
    3a3c:	d8800e07 	ldb	r2,56(sp)
    3a40:	10007e26 	beq	r2,zero,3c3c <___vfprintf_internal_r+0x1ee8>
    3a44:	00800b44 	movi	r2,45
    3a48:	d8801545 	stb	r2,85(sp)
    3a4c:	0017883a 	mov	r11,zero
    3a50:	003bdf06 	br	29d0 <___vfprintf_internal_r+0xc7c>
    3a54:	04400074 	movhi	r17,1
    3a58:	8c7eea04 	addi	r17,r17,-1112
    3a5c:	003b2e06 	br	2718 <___vfprintf_internal_r+0x9c4>
    3a60:	b021883a 	mov	r16,r22
    3a64:	9019883a 	mov	r12,r18
    3a68:	e02d883a 	mov	r22,fp
    3a6c:	dc800f17 	ldw	r18,60(sp)
    3a70:	8839883a 	mov	fp,r17
    3a74:	dc400e17 	ldw	r17,56(sp)
    3a78:	10800044 	addi	r2,r2,1
    3a7c:	1f07883a 	add	r3,r3,fp
    3a80:	d8801d15 	stw	r2,116(sp)
    3a84:	43000015 	stw	r12,0(r8)
    3a88:	47000115 	stw	fp,4(r8)
    3a8c:	d8c01e15 	stw	r3,120(sp)
    3a90:	10800208 	cmpgei	r2,r2,8
    3a94:	1000421e 	bne	r2,zero,3ba0 <___vfprintf_internal_r+0x1e4c>
    3a98:	42000204 	addi	r8,r8,8
    3a9c:	003d9c06 	br	3110 <___vfprintf_internal_r+0x13bc>
    3aa0:	00800b44 	movi	r2,45
    3aa4:	d8801545 	stb	r2,85(sp)
    3aa8:	03400b44 	movi	r13,45
    3aac:	003b1606 	br	2708 <___vfprintf_internal_r+0x9b4>
    3ab0:	8019883a 	mov	r12,r16
    3ab4:	dc000717 	ldw	r16,28(sp)
    3ab8:	10800044 	addi	r2,r2,1
    3abc:	1f07883a 	add	r3,r3,fp
    3ac0:	d8801d15 	stw	r2,116(sp)
    3ac4:	43000015 	stw	r12,0(r8)
    3ac8:	47000115 	stw	fp,4(r8)
    3acc:	d8c01e15 	stw	r3,120(sp)
    3ad0:	10800208 	cmpgei	r2,r2,8
    3ad4:	103a7126 	beq	r2,zero,249c <___vfprintf_internal_r+0x748>
    3ad8:	003cc706 	br	2df8 <___vfprintf_internal_r+0x10a4>
    3adc:	d9000517 	ldw	r4,20(sp)
    3ae0:	d9801c04 	addi	r6,sp,112
    3ae4:	980b883a 	mov	r5,r19
    3ae8:	000822c0 	call	822c <__sprint_r>
    3aec:	1039781e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3af0:	d9001617 	ldw	r4,88(sp)
    3af4:	d8c01e17 	ldw	r3,120(sp)
    3af8:	b811883a 	mov	r8,r23
    3afc:	003d9306 	br	314c <___vfprintf_internal_r+0x13f8>
    3b00:	1560003c 	xorhi	r21,r2,32768
    3b04:	00800b44 	movi	r2,45
    3b08:	d8800e05 	stb	r2,56(sp)
    3b0c:	003e1b06 	br	337c <___vfprintf_internal_r+0x1628>
    3b10:	05000184 	movi	r20,6
    3b14:	003ec106 	br	361c <___vfprintf_internal_r+0x18c8>
    3b18:	002b883a 	mov	r21,zero
    3b1c:	003a0206 	br	2328 <___vfprintf_internal_r+0x5d4>
    3b20:	d9401545 	stb	r5,85(sp)
    3b24:	00398a06 	br	2150 <___vfprintf_internal_r+0x3fc>
    3b28:	d9000917 	ldw	r4,36(sp)
    3b2c:	000d883a 	mov	r6,zero
    3b30:	000f883a 	mov	r7,zero
    3b34:	a80b883a 	mov	r5,r21
    3b38:	da001215 	stw	r8,72(sp)
    3b3c:	dac01015 	stw	r11,64(sp)
    3b40:	db000815 	stw	r12,32(sp)
    3b44:	000bed40 	call	bed4 <__eqdf2>
    3b48:	db000817 	ldw	r12,32(sp)
    3b4c:	dac01017 	ldw	r11,64(sp)
    3b50:	da001217 	ldw	r8,72(sp)
    3b54:	103f9a26 	beq	r2,zero,39c0 <___vfprintf_internal_r+0x1c6c>
    3b58:	00800044 	movi	r2,1
    3b5c:	12c5c83a 	sub	r2,r2,r11
    3b60:	d8801615 	stw	r2,88(sp)
    3b64:	003f9706 	br	39c4 <___vfprintf_internal_r+0x1c70>
    3b68:	583dff1e 	bne	r11,zero,3368 <___vfprintf_internal_r+0x1614>
    3b6c:	02c00044 	movi	r11,1
    3b70:	003dfd06 	br	3368 <___vfprintf_internal_r+0x1614>
    3b74:	d9000517 	ldw	r4,20(sp)
    3b78:	d9801c04 	addi	r6,sp,112
    3b7c:	980b883a 	mov	r5,r19
    3b80:	000822c0 	call	822c <__sprint_r>
    3b84:	1039521e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3b88:	d9001617 	ldw	r4,88(sp)
    3b8c:	d8c01e17 	ldw	r3,120(sp)
    3b90:	d8801d17 	ldw	r2,116(sp)
    3b94:	b811883a 	mov	r8,r23
    3b98:	203c8e0e 	bge	r4,zero,2dd4 <___vfprintf_internal_r+0x1080>
    3b9c:	003f2106 	br	3824 <___vfprintf_internal_r+0x1ad0>
    3ba0:	d9000517 	ldw	r4,20(sp)
    3ba4:	d9801c04 	addi	r6,sp,112
    3ba8:	980b883a 	mov	r5,r19
    3bac:	000822c0 	call	822c <__sprint_r>
    3bb0:	1039471e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3bb4:	d8c01e17 	ldw	r3,120(sp)
    3bb8:	b811883a 	mov	r8,r23
    3bbc:	003d5406 	br	3110 <___vfprintf_internal_r+0x13bc>
    3bc0:	d8801a04 	addi	r2,sp,104
    3bc4:	d8800315 	stw	r2,12(sp)
    3bc8:	d9400917 	ldw	r5,36(sp)
    3bcc:	d8801704 	addi	r2,sp,92
    3bd0:	d9000517 	ldw	r4,20(sp)
    3bd4:	5d000044 	addi	r20,r11,1
    3bd8:	d8800215 	stw	r2,8(sp)
    3bdc:	d8801604 	addi	r2,sp,88
    3be0:	d8800115 	stw	r2,4(sp)
    3be4:	dd000015 	stw	r20,0(sp)
    3be8:	01c00084 	movi	r7,2
    3bec:	a80d883a 	mov	r6,r21
    3bf0:	dac00815 	stw	r11,32(sp)
    3bf4:	00044040 	call	4404 <_dtoa_r>
    3bf8:	dac00817 	ldw	r11,32(sp)
    3bfc:	db001017 	ldw	r12,64(sp)
    3c00:	da001217 	ldw	r8,72(sp)
    3c04:	1023883a 	mov	r17,r2
    3c08:	e08011d8 	cmpnei	r2,fp,71
    3c0c:	103df926 	beq	r2,zero,33f4 <___vfprintf_internal_r+0x16a0>
    3c10:	8d29883a 	add	r20,r17,r20
    3c14:	003f6c06 	br	39c8 <___vfprintf_internal_r+0x1c74>
    3c18:	d8801a17 	ldw	r2,104(sp)
    3c1c:	01000c04 	movi	r4,48
    3c20:	153f762e 	bgeu	r2,r20,39fc <___vfprintf_internal_r+0x1ca8>
    3c24:	10c00044 	addi	r3,r2,1
    3c28:	d8c01a15 	stw	r3,104(sp)
    3c2c:	11000005 	stb	r4,0(r2)
    3c30:	d8801a17 	ldw	r2,104(sp)
    3c34:	153ffb36 	bltu	r2,r20,3c24 <___vfprintf_internal_r+0x1ed0>
    3c38:	003f7006 	br	39fc <___vfprintf_internal_r+0x1ca8>
    3c3c:	db401543 	ldbu	r13,85(sp)
    3c40:	0017883a 	mov	r11,zero
    3c44:	003b5e06 	br	29c0 <___vfprintf_internal_r+0xc6c>
    3c48:	d8800717 	ldw	r2,28(sp)
    3c4c:	d8c00817 	ldw	r3,32(sp)
    3c50:	10c02216 	blt	r2,r3,3cdc <___vfprintf_internal_r+0x1f88>
    3c54:	6300004c 	andi	r12,r12,1
    3c58:	6000601e 	bne	r12,zero,3ddc <___vfprintf_internal_r+0x2088>
    3c5c:	102b883a 	mov	r21,r2
    3c60:	1000010e 	bge	r2,zero,3c68 <___vfprintf_internal_r+0x1f14>
    3c64:	002b883a 	mov	r21,zero
    3c68:	dd000717 	ldw	r20,28(sp)
    3c6c:	070019c4 	movi	fp,103
    3c70:	003f7206 	br	3a3c <___vfprintf_internal_r+0x1ce8>
    3c74:	d9000517 	ldw	r4,20(sp)
    3c78:	d9801c04 	addi	r6,sp,112
    3c7c:	980b883a 	mov	r5,r19
    3c80:	000822c0 	call	822c <__sprint_r>
    3c84:	1039121e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3c88:	d8c01e17 	ldw	r3,120(sp)
    3c8c:	b811883a 	mov	r8,r23
    3c90:	e03d1c0e 	bge	fp,zero,3104 <___vfprintf_internal_r+0x13b0>
    3c94:	003e5c06 	br	3608 <___vfprintf_internal_r+0x18b4>
    3c98:	02c00184 	movi	r11,6
    3c9c:	003db206 	br	3368 <___vfprintf_internal_r+0x1614>
    3ca0:	d9000517 	ldw	r4,20(sp)
    3ca4:	d9801c04 	addi	r6,sp,112
    3ca8:	980b883a 	mov	r5,r19
    3cac:	000822c0 	call	822c <__sprint_r>
    3cb0:	1039071e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3cb4:	d8801617 	ldw	r2,88(sp)
    3cb8:	d9000817 	ldw	r4,32(sp)
    3cbc:	d8c01e17 	ldw	r3,120(sp)
    3cc0:	b811883a 	mov	r8,r23
    3cc4:	2085c83a 	sub	r2,r4,r2
    3cc8:	003d3206 	br	3194 <___vfprintf_internal_r+0x1440>
    3ccc:	582b883a 	mov	r21,r11
    3cd0:	dc800615 	stw	r18,24(sp)
    3cd4:	5829883a 	mov	r20,r11
    3cd8:	0039bb06 	br	23c8 <___vfprintf_internal_r+0x674>
    3cdc:	d8800817 	ldw	r2,32(sp)
    3ce0:	d8c00b17 	ldw	r3,44(sp)
    3ce4:	10e9883a 	add	r20,r2,r3
    3ce8:	d8800717 	ldw	r2,28(sp)
    3cec:	00800316 	blt	zero,r2,3cfc <___vfprintf_internal_r+0x1fa8>
    3cf0:	d8800717 	ldw	r2,28(sp)
    3cf4:	a0b9c83a 	sub	fp,r20,r2
    3cf8:	e5000044 	addi	r20,fp,1
    3cfc:	a02b883a 	mov	r21,r20
    3d00:	a0003b16 	blt	r20,zero,3df0 <___vfprintf_internal_r+0x209c>
    3d04:	070019c4 	movi	fp,103
    3d08:	003f4c06 	br	3a3c <___vfprintf_internal_r+0x1ce8>
    3d0c:	d9401545 	stb	r5,85(sp)
    3d10:	003ac006 	br	2814 <___vfprintf_internal_r+0xac0>
    3d14:	d9401545 	stb	r5,85(sp)
    3d18:	003a2006 	br	259c <___vfprintf_internal_r+0x848>
    3d1c:	d9401545 	stb	r5,85(sp)
    3d20:	003a2e06 	br	25dc <___vfprintf_internal_r+0x888>
    3d24:	d9401545 	stb	r5,85(sp)
    3d28:	00398306 	br	2338 <___vfprintf_internal_r+0x5e4>
    3d2c:	d9401545 	stb	r5,85(sp)
    3d30:	00395a06 	br	229c <___vfprintf_internal_r+0x548>
    3d34:	d9401545 	stb	r5,85(sp)
    3d38:	00394606 	br	2254 <___vfprintf_internal_r+0x500>
    3d3c:	d9401545 	stb	r5,85(sp)
    3d40:	003a3606 	br	261c <___vfprintf_internal_r+0x8c8>
    3d44:	d9401545 	stb	r5,85(sp)
    3d48:	003a7c06 	br	273c <___vfprintf_internal_r+0x9e8>
    3d4c:	d9401545 	stb	r5,85(sp)
    3d50:	003a4206 	br	265c <___vfprintf_internal_r+0x908>
    3d54:	d9401545 	stb	r5,85(sp)
    3d58:	003ac006 	br	285c <___vfprintf_internal_r+0xb08>
    3d5c:	8819883a 	mov	r12,r17
    3d60:	dc400717 	ldw	r17,28(sp)
    3d64:	a009883a 	mov	r4,r20
    3d68:	8029883a 	mov	r20,r16
    3d6c:	2021883a 	mov	r16,r4
    3d70:	10800044 	addi	r2,r2,1
    3d74:	1d07883a 	add	r3,r3,r20
    3d78:	43000015 	stw	r12,0(r8)
    3d7c:	45000115 	stw	r20,4(r8)
    3d80:	d8c01e15 	stw	r3,120(sp)
    3d84:	d8801d15 	stw	r2,116(sp)
    3d88:	11000208 	cmpgei	r4,r2,8
    3d8c:	203c1026 	beq	r4,zero,2dd0 <___vfprintf_internal_r+0x107c>
    3d90:	d9000517 	ldw	r4,20(sp)
    3d94:	d9801c04 	addi	r6,sp,112
    3d98:	980b883a 	mov	r5,r19
    3d9c:	000822c0 	call	822c <__sprint_r>
    3da0:	1038cb1e 	bne	r2,zero,20d0 <___vfprintf_internal_r+0x37c>
    3da4:	d8c01e17 	ldw	r3,120(sp)
    3da8:	d8801d17 	ldw	r2,116(sp)
    3dac:	b811883a 	mov	r8,r23
    3db0:	003c0806 	br	2dd4 <___vfprintf_internal_r+0x1080>
    3db4:	00bfffc4 	movi	r2,-1
    3db8:	d8800415 	stw	r2,16(sp)
    3dbc:	0038c706 	br	20dc <___vfprintf_internal_r+0x388>
    3dc0:	00800c04 	movi	r2,48
    3dc4:	a0c00c04 	addi	r3,r20,48
    3dc8:	d88018c5 	stb	r2,99(sp)
    3dcc:	00800104 	movi	r2,4
    3dd0:	d8c01905 	stb	r3,100(sp)
    3dd4:	d8801115 	stw	r2,68(sp)
    3dd8:	003dca06 	br	3504 <___vfprintf_internal_r+0x17b0>
    3ddc:	d8800717 	ldw	r2,28(sp)
    3de0:	d8c00b17 	ldw	r3,44(sp)
    3de4:	10e9883a 	add	r20,r2,r3
    3de8:	a02b883a 	mov	r21,r20
    3dec:	a03fc50e 	bge	r20,zero,3d04 <___vfprintf_internal_r+0x1fb0>
    3df0:	002b883a 	mov	r21,zero
    3df4:	003fc306 	br	3d04 <___vfprintf_internal_r+0x1fb0>
    3df8:	d8800b17 	ldw	r2,44(sp)
    3dfc:	1885883a 	add	r2,r3,r2
    3e00:	12e9883a 	add	r20,r2,r11
    3e04:	a02b883a 	mov	r21,r20
    3e08:	a03f0c0e 	bge	r20,zero,3a3c <___vfprintf_internal_r+0x1ce8>
    3e0c:	002b883a 	mov	r21,zero
    3e10:	003f0a06 	br	3a3c <___vfprintf_internal_r+0x1ce8>
    3e14:	d8800a17 	ldw	r2,40(sp)
    3e18:	10001d16 	blt	r2,zero,3e90 <___vfprintf_internal_r+0x213c>
    3e1c:	db401543 	ldbu	r13,85(sp)
    3e20:	e0801210 	cmplti	r2,fp,72
    3e24:	1000171e 	bne	r2,zero,3e84 <___vfprintf_internal_r+0x2130>
    3e28:	04400074 	movhi	r17,1
    3e2c:	8c7eed04 	addi	r17,r17,-1100
    3e30:	003a3906 	br	2718 <___vfprintf_internal_r+0x9c4>
    3e34:	00c00044 	movi	r3,1
    3e38:	18a9c83a 	sub	r20,r3,r2
    3e3c:	00800b44 	movi	r2,45
    3e40:	d8801885 	stb	r2,98(sp)
    3e44:	003d8106 	br	344c <___vfprintf_internal_r+0x16f8>
    3e48:	6080004c 	andi	r2,r12,1
    3e4c:	d8800715 	stw	r2,28(sp)
    3e50:	103db11e 	bne	r2,zero,3518 <___vfprintf_internal_r+0x17c4>
    3e54:	003feb06 	br	3e04 <___vfprintf_internal_r+0x20b0>
    3e58:	4005883a 	mov	r2,r8
    3e5c:	633efa84 	addi	r12,r12,-1046
    3e60:	003ea206 	br	38ec <___vfprintf_internal_r+0x1b98>
    3e64:	1000031e 	bne	r2,zero,3e74 <___vfprintf_internal_r+0x2120>
    3e68:	05400044 	movi	r21,1
    3e6c:	05000044 	movi	r20,1
    3e70:	003ef206 	br	3a3c <___vfprintf_internal_r+0x1ce8>
    3e74:	d8800b17 	ldw	r2,44(sp)
    3e78:	10800044 	addi	r2,r2,1
    3e7c:	12e9883a 	add	r20,r2,r11
    3e80:	003fe006 	br	3e04 <___vfprintf_internal_r+0x20b0>
    3e84:	04400074 	movhi	r17,1
    3e88:	8c7eec04 	addi	r17,r17,-1104
    3e8c:	003a2206 	br	2718 <___vfprintf_internal_r+0x9c4>
    3e90:	00800b44 	movi	r2,45
    3e94:	d8801545 	stb	r2,85(sp)
    3e98:	03400b44 	movi	r13,45
    3e9c:	003fe006 	br	3e20 <___vfprintf_internal_r+0x20cc>
    3ea0:	00800084 	movi	r2,2
    3ea4:	d8801115 	stw	r2,68(sp)
    3ea8:	003d9606 	br	3504 <___vfprintf_internal_r+0x17b0>
    3eac:	d8c00617 	ldw	r3,24(sp)
    3eb0:	1ac00017 	ldw	r11,0(r3)
    3eb4:	18c00104 	addi	r3,r3,4
    3eb8:	5800010e 	bge	r11,zero,3ec0 <___vfprintf_internal_r+0x216c>
    3ebc:	02ffffc4 	movi	r11,-1
    3ec0:	b7000043 	ldbu	fp,1(r22)
    3ec4:	d8c00615 	stw	r3,24(sp)
    3ec8:	102d883a 	mov	r22,r2
    3ecc:	e2803fcc 	andi	r10,fp,255
    3ed0:	5280201c 	xori	r10,r10,128
    3ed4:	52bfe004 	addi	r10,r10,-128
    3ed8:	0037f906 	br	1ec0 <___vfprintf_internal_r+0x16c>

00003edc <__vfprintf_internal>:
    3edc:	00800074 	movhi	r2,1
    3ee0:	300f883a 	mov	r7,r6
    3ee4:	280d883a 	mov	r6,r5
    3ee8:	200b883a 	mov	r5,r4
    3eec:	11075717 	ldw	r4,7516(r2)
    3ef0:	0001d541 	jmpi	1d54 <___vfprintf_internal_r>

00003ef4 <__sbprintf>:
    3ef4:	2880030b 	ldhu	r2,12(r5)
    3ef8:	2b001917 	ldw	r12,100(r5)
    3efc:	2ac0038b 	ldhu	r11,14(r5)
    3f00:	2a800717 	ldw	r10,28(r5)
    3f04:	2a400917 	ldw	r9,36(r5)
    3f08:	defee204 	addi	sp,sp,-1144
    3f0c:	da001a04 	addi	r8,sp,104
    3f10:	00c10004 	movi	r3,1024
    3f14:	dc011a15 	stw	r16,1128(sp)
    3f18:	10bfff4c 	andi	r2,r2,65533
    3f1c:	2821883a 	mov	r16,r5
    3f20:	d80b883a 	mov	r5,sp
    3f24:	dc811c15 	stw	r18,1136(sp)
    3f28:	dc411b15 	stw	r17,1132(sp)
    3f2c:	dfc11d15 	stw	ra,1140(sp)
    3f30:	2025883a 	mov	r18,r4
    3f34:	d880030d 	sth	r2,12(sp)
    3f38:	db001915 	stw	r12,100(sp)
    3f3c:	dac0038d 	sth	r11,14(sp)
    3f40:	da800715 	stw	r10,28(sp)
    3f44:	da400915 	stw	r9,36(sp)
    3f48:	da000015 	stw	r8,0(sp)
    3f4c:	da000415 	stw	r8,16(sp)
    3f50:	d8c00215 	stw	r3,8(sp)
    3f54:	d8c00515 	stw	r3,20(sp)
    3f58:	d8000615 	stw	zero,24(sp)
    3f5c:	0001d540 	call	1d54 <___vfprintf_internal_r>
    3f60:	1023883a 	mov	r17,r2
    3f64:	10000d0e 	bge	r2,zero,3f9c <__sbprintf+0xa8>
    3f68:	d880030b 	ldhu	r2,12(sp)
    3f6c:	1080100c 	andi	r2,r2,64
    3f70:	10000326 	beq	r2,zero,3f80 <__sbprintf+0x8c>
    3f74:	8080030b 	ldhu	r2,12(r16)
    3f78:	10801014 	ori	r2,r2,64
    3f7c:	8080030d 	sth	r2,12(r16)
    3f80:	8805883a 	mov	r2,r17
    3f84:	dfc11d17 	ldw	ra,1140(sp)
    3f88:	dc811c17 	ldw	r18,1136(sp)
    3f8c:	dc411b17 	ldw	r17,1132(sp)
    3f90:	dc011a17 	ldw	r16,1128(sp)
    3f94:	dec11e04 	addi	sp,sp,1144
    3f98:	f800283a 	ret
    3f9c:	d80b883a 	mov	r5,sp
    3fa0:	9009883a 	mov	r4,r18
    3fa4:	0005dfc0 	call	5dfc <_fflush_r>
    3fa8:	103fef26 	beq	r2,zero,3f68 <__sbprintf+0x74>
    3fac:	047fffc4 	movi	r17,-1
    3fb0:	003fed06 	br	3f68 <__sbprintf+0x74>

00003fb4 <_write_r>:
    3fb4:	defffe04 	addi	sp,sp,-8
    3fb8:	2805883a 	mov	r2,r5
    3fbc:	dc000015 	stw	r16,0(sp)
    3fc0:	300b883a 	mov	r5,r6
    3fc4:	2021883a 	mov	r16,r4
    3fc8:	380d883a 	mov	r6,r7
    3fcc:	1009883a 	mov	r4,r2
    3fd0:	00800074 	movhi	r2,1
    3fd4:	dfc00115 	stw	ra,4(sp)
    3fd8:	100e8315 	stw	zero,14860(r2)
    3fdc:	000dda00 	call	dda0 <write>
    3fe0:	10ffffd8 	cmpnei	r3,r2,-1
    3fe4:	18000426 	beq	r3,zero,3ff8 <_write_r+0x44>
    3fe8:	dfc00117 	ldw	ra,4(sp)
    3fec:	dc000017 	ldw	r16,0(sp)
    3ff0:	dec00204 	addi	sp,sp,8
    3ff4:	f800283a 	ret
    3ff8:	00c00074 	movhi	r3,1
    3ffc:	18ce8317 	ldw	r3,14860(r3)
    4000:	183ff926 	beq	r3,zero,3fe8 <_write_r+0x34>
    4004:	80c00015 	stw	r3,0(r16)
    4008:	dfc00117 	ldw	ra,4(sp)
    400c:	dc000017 	ldw	r16,0(sp)
    4010:	dec00204 	addi	sp,sp,8
    4014:	f800283a 	ret

00004018 <__swsetup_r>:
    4018:	00800074 	movhi	r2,1
    401c:	10875717 	ldw	r2,7516(r2)
    4020:	defffd04 	addi	sp,sp,-12
    4024:	dc400115 	stw	r17,4(sp)
    4028:	dc000015 	stw	r16,0(sp)
    402c:	dfc00215 	stw	ra,8(sp)
    4030:	2023883a 	mov	r17,r4
    4034:	2821883a 	mov	r16,r5
    4038:	10000226 	beq	r2,zero,4044 <__swsetup_r+0x2c>
    403c:	10c00e17 	ldw	r3,56(r2)
    4040:	18002026 	beq	r3,zero,40c4 <__swsetup_r+0xac>
    4044:	8080030b 	ldhu	r2,12(r16)
    4048:	10c0020c 	andi	r3,r2,8
    404c:	1009883a 	mov	r4,r2
    4050:	18002226 	beq	r3,zero,40dc <__swsetup_r+0xc4>
    4054:	80c00417 	ldw	r3,16(r16)
    4058:	18002826 	beq	r3,zero,40fc <__swsetup_r+0xe4>
    405c:	1100004c 	andi	r4,r2,1
    4060:	20000b1e 	bne	r4,zero,4090 <__swsetup_r+0x78>
    4064:	1080008c 	andi	r2,r2,2
    4068:	10002d1e 	bne	r2,zero,4120 <__swsetup_r+0x108>
    406c:	80800517 	ldw	r2,20(r16)
    4070:	80800215 	stw	r2,8(r16)
    4074:	18000b26 	beq	r3,zero,40a4 <__swsetup_r+0x8c>
    4078:	0005883a 	mov	r2,zero
    407c:	dfc00217 	ldw	ra,8(sp)
    4080:	dc400117 	ldw	r17,4(sp)
    4084:	dc000017 	ldw	r16,0(sp)
    4088:	dec00304 	addi	sp,sp,12
    408c:	f800283a 	ret
    4090:	80800517 	ldw	r2,20(r16)
    4094:	80000215 	stw	zero,8(r16)
    4098:	0085c83a 	sub	r2,zero,r2
    409c:	80800615 	stw	r2,24(r16)
    40a0:	183ff51e 	bne	r3,zero,4078 <__swsetup_r+0x60>
    40a4:	80c0030b 	ldhu	r3,12(r16)
    40a8:	0005883a 	mov	r2,zero
    40ac:	1900200c 	andi	r4,r3,128
    40b0:	203ff226 	beq	r4,zero,407c <__swsetup_r+0x64>
    40b4:	18c01014 	ori	r3,r3,64
    40b8:	80c0030d 	sth	r3,12(r16)
    40bc:	00bfffc4 	movi	r2,-1
    40c0:	003fee06 	br	407c <__swsetup_r+0x64>
    40c4:	1009883a 	mov	r4,r2
    40c8:	000091c0 	call	91c <__sinit>
    40cc:	8080030b 	ldhu	r2,12(r16)
    40d0:	10c0020c 	andi	r3,r2,8
    40d4:	1009883a 	mov	r4,r2
    40d8:	183fde1e 	bne	r3,zero,4054 <__swsetup_r+0x3c>
    40dc:	2080040c 	andi	r2,r4,16
    40e0:	10001f26 	beq	r2,zero,4160 <__swsetup_r+0x148>
    40e4:	2080010c 	andi	r2,r4,4
    40e8:	10000f1e 	bne	r2,zero,4128 <__swsetup_r+0x110>
    40ec:	80c00417 	ldw	r3,16(r16)
    40f0:	20800214 	ori	r2,r4,8
    40f4:	8080030d 	sth	r2,12(r16)
    40f8:	183fd81e 	bne	r3,zero,405c <__swsetup_r+0x44>
    40fc:	1100a00c 	andi	r4,r2,640
    4100:	21008020 	cmpeqi	r4,r4,512
    4104:	203fd51e 	bne	r4,zero,405c <__swsetup_r+0x44>
    4108:	800b883a 	mov	r5,r16
    410c:	8809883a 	mov	r4,r17
    4110:	000688c0 	call	688c <__smakebuf_r>
    4114:	8080030b 	ldhu	r2,12(r16)
    4118:	80c00417 	ldw	r3,16(r16)
    411c:	003fcf06 	br	405c <__swsetup_r+0x44>
    4120:	0005883a 	mov	r2,zero
    4124:	003fd206 	br	4070 <__swsetup_r+0x58>
    4128:	81400c17 	ldw	r5,48(r16)
    412c:	28000626 	beq	r5,zero,4148 <__swsetup_r+0x130>
    4130:	80801004 	addi	r2,r16,64
    4134:	28800326 	beq	r5,r2,4144 <__swsetup_r+0x12c>
    4138:	8809883a 	mov	r4,r17
    413c:	0005fa00 	call	5fa0 <_free_r>
    4140:	8100030b 	ldhu	r4,12(r16)
    4144:	80000c15 	stw	zero,48(r16)
    4148:	80c00417 	ldw	r3,16(r16)
    414c:	00bff6c4 	movi	r2,-37
    4150:	1108703a 	and	r4,r2,r4
    4154:	80000115 	stw	zero,4(r16)
    4158:	80c00015 	stw	r3,0(r16)
    415c:	003fe406 	br	40f0 <__swsetup_r+0xd8>
    4160:	00800244 	movi	r2,9
    4164:	88800015 	stw	r2,0(r17)
    4168:	20801014 	ori	r2,r4,64
    416c:	8080030d 	sth	r2,12(r16)
    4170:	00bfffc4 	movi	r2,-1
    4174:	003fc106 	br	407c <__swsetup_r+0x64>

00004178 <_close_r>:
    4178:	defffe04 	addi	sp,sp,-8
    417c:	dc000015 	stw	r16,0(sp)
    4180:	00800074 	movhi	r2,1
    4184:	2021883a 	mov	r16,r4
    4188:	2809883a 	mov	r4,r5
    418c:	dfc00115 	stw	ra,4(sp)
    4190:	100e8315 	stw	zero,14860(r2)
    4194:	000d5480 	call	d548 <close>
    4198:	10ffffd8 	cmpnei	r3,r2,-1
    419c:	18000426 	beq	r3,zero,41b0 <_close_r+0x38>
    41a0:	dfc00117 	ldw	ra,4(sp)
    41a4:	dc000017 	ldw	r16,0(sp)
    41a8:	dec00204 	addi	sp,sp,8
    41ac:	f800283a 	ret
    41b0:	00c00074 	movhi	r3,1
    41b4:	18ce8317 	ldw	r3,14860(r3)
    41b8:	183ff926 	beq	r3,zero,41a0 <_close_r+0x28>
    41bc:	80c00015 	stw	r3,0(r16)
    41c0:	dfc00117 	ldw	ra,4(sp)
    41c4:	dc000017 	ldw	r16,0(sp)
    41c8:	dec00204 	addi	sp,sp,8
    41cc:	f800283a 	ret

000041d0 <quorem>:
    41d0:	defff204 	addi	sp,sp,-56
    41d4:	dc000415 	stw	r16,16(sp)
    41d8:	20800417 	ldw	r2,16(r4)
    41dc:	2c000417 	ldw	r16,16(r5)
    41e0:	dfc00d15 	stw	ra,52(sp)
    41e4:	df000c15 	stw	fp,48(sp)
    41e8:	ddc00b15 	stw	r23,44(sp)
    41ec:	dd800a15 	stw	r22,40(sp)
    41f0:	dd400915 	stw	r21,36(sp)
    41f4:	dd000815 	stw	r20,32(sp)
    41f8:	dcc00715 	stw	r19,28(sp)
    41fc:	dc800615 	stw	r18,24(sp)
    4200:	dc400515 	stw	r17,20(sp)
    4204:	14007d16 	blt	r2,r16,43fc <quorem+0x22c>
    4208:	843fffc4 	addi	r16,r16,-1
    420c:	802c90ba 	slli	r22,r16,2
    4210:	2f000504 	addi	fp,r5,20
    4214:	24c00504 	addi	r19,r4,20
    4218:	e5a5883a 	add	r18,fp,r22
    421c:	9d85883a 	add	r2,r19,r22
    4220:	95c00017 	ldw	r23,0(r18)
    4224:	15000017 	ldw	r20,0(r2)
    4228:	d9400215 	stw	r5,8(sp)
    422c:	bdc00044 	addi	r23,r23,1
    4230:	d9000115 	stw	r4,4(sp)
    4234:	b80b883a 	mov	r5,r23
    4238:	a009883a 	mov	r4,r20
    423c:	dcc00015 	stw	r19,0(sp)
    4240:	d8800315 	stw	r2,12(sp)
    4244:	000aae80 	call	aae8 <__udivsi3>
    4248:	1023883a 	mov	r17,r2
    424c:	a5c03236 	bltu	r20,r23,4318 <quorem+0x148>
    4250:	e02d883a 	mov	r22,fp
    4254:	9829883a 	mov	r20,r19
    4258:	002b883a 	mov	r21,zero
    425c:	002f883a 	mov	r23,zero
    4260:	b5800104 	addi	r22,r22,4
    4264:	b4ffff17 	ldw	r19,-4(r22)
    4268:	880b883a 	mov	r5,r17
    426c:	a5000104 	addi	r20,r20,4
    4270:	993fffcc 	andi	r4,r19,65535
    4274:	000aba80 	call	aba8 <__mulsi3>
    4278:	9808d43a 	srli	r4,r19,16
    427c:	880b883a 	mov	r5,r17
    4280:	156b883a 	add	r21,r2,r21
    4284:	000aba80 	call	aba8 <__mulsi3>
    4288:	a0ffff17 	ldw	r3,-4(r20)
    428c:	a80ad43a 	srli	r5,r21,16
    4290:	a93fffcc 	andi	r4,r21,65535
    4294:	b909c83a 	sub	r4,r23,r4
    4298:	19bfffcc 	andi	r6,r3,65535
    429c:	2189883a 	add	r4,r4,r6
    42a0:	1806d43a 	srli	r3,r3,16
    42a4:	116b883a 	add	r21,r2,r5
    42a8:	2005d43a 	srai	r2,r4,16
    42ac:	a97fffcc 	andi	r5,r21,65535
    42b0:	1947c83a 	sub	r3,r3,r5
    42b4:	1887883a 	add	r3,r3,r2
    42b8:	1804943a 	slli	r2,r3,16
    42bc:	213fffcc 	andi	r4,r4,65535
    42c0:	a82ad43a 	srli	r21,r21,16
    42c4:	1108b03a 	or	r4,r2,r4
    42c8:	a13fff15 	stw	r4,-4(r20)
    42cc:	182fd43a 	srai	r23,r3,16
    42d0:	95bfe32e 	bgeu	r18,r22,4260 <quorem+0x90>
    42d4:	d8c00317 	ldw	r3,12(sp)
    42d8:	18800017 	ldw	r2,0(r3)
    42dc:	10000e1e 	bne	r2,zero,4318 <quorem+0x148>
    42e0:	d9000017 	ldw	r4,0(sp)
    42e4:	18bfff04 	addi	r2,r3,-4
    42e8:	2080092e 	bgeu	r4,r2,4310 <quorem+0x140>
    42ec:	18ffff17 	ldw	r3,-4(r3)
    42f0:	18000326 	beq	r3,zero,4300 <quorem+0x130>
    42f4:	00000606 	br	4310 <quorem+0x140>
    42f8:	10c00017 	ldw	r3,0(r2)
    42fc:	1800041e 	bne	r3,zero,4310 <quorem+0x140>
    4300:	d8c00017 	ldw	r3,0(sp)
    4304:	10bfff04 	addi	r2,r2,-4
    4308:	843fffc4 	addi	r16,r16,-1
    430c:	18bffa36 	bltu	r3,r2,42f8 <quorem+0x128>
    4310:	d8800117 	ldw	r2,4(sp)
    4314:	14000415 	stw	r16,16(r2)
    4318:	d9400217 	ldw	r5,8(sp)
    431c:	d9000117 	ldw	r4,4(sp)
    4320:	00073f40 	call	73f4 <__mcmp>
    4324:	10002816 	blt	r2,zero,43c8 <quorem+0x1f8>
    4328:	d9800017 	ldw	r6,0(sp)
    432c:	8c400044 	addi	r17,r17,1
    4330:	0007883a 	mov	r3,zero
    4334:	e7000104 	addi	fp,fp,4
    4338:	e13fff17 	ldw	r4,-4(fp)
    433c:	31400017 	ldw	r5,0(r6)
    4340:	31800104 	addi	r6,r6,4
    4344:	20bfffcc 	andi	r2,r4,65535
    4348:	1887c83a 	sub	r3,r3,r2
    434c:	28bfffcc 	andi	r2,r5,65535
    4350:	1885883a 	add	r2,r3,r2
    4354:	2008d43a 	srli	r4,r4,16
    4358:	2806d43a 	srli	r3,r5,16
    435c:	100fd43a 	srai	r7,r2,16
    4360:	117fffcc 	andi	r5,r2,65535
    4364:	1907c83a 	sub	r3,r3,r4
    4368:	19c7883a 	add	r3,r3,r7
    436c:	1804943a 	slli	r2,r3,16
    4370:	1807d43a 	srai	r3,r3,16
    4374:	1144b03a 	or	r2,r2,r5
    4378:	30bfff15 	stw	r2,-4(r6)
    437c:	973fed2e 	bgeu	r18,fp,4334 <quorem+0x164>
    4380:	800690ba 	slli	r3,r16,2
    4384:	d9000017 	ldw	r4,0(sp)
    4388:	20c7883a 	add	r3,r4,r3
    438c:	18800017 	ldw	r2,0(r3)
    4390:	10000d1e 	bne	r2,zero,43c8 <quorem+0x1f8>
    4394:	18bfff04 	addi	r2,r3,-4
    4398:	2080092e 	bgeu	r4,r2,43c0 <quorem+0x1f0>
    439c:	18ffff17 	ldw	r3,-4(r3)
    43a0:	18000326 	beq	r3,zero,43b0 <quorem+0x1e0>
    43a4:	00000606 	br	43c0 <quorem+0x1f0>
    43a8:	10c00017 	ldw	r3,0(r2)
    43ac:	1800041e 	bne	r3,zero,43c0 <quorem+0x1f0>
    43b0:	d8c00017 	ldw	r3,0(sp)
    43b4:	10bfff04 	addi	r2,r2,-4
    43b8:	843fffc4 	addi	r16,r16,-1
    43bc:	18bffa36 	bltu	r3,r2,43a8 <quorem+0x1d8>
    43c0:	d8800117 	ldw	r2,4(sp)
    43c4:	14000415 	stw	r16,16(r2)
    43c8:	8805883a 	mov	r2,r17
    43cc:	dfc00d17 	ldw	ra,52(sp)
    43d0:	df000c17 	ldw	fp,48(sp)
    43d4:	ddc00b17 	ldw	r23,44(sp)
    43d8:	dd800a17 	ldw	r22,40(sp)
    43dc:	dd400917 	ldw	r21,36(sp)
    43e0:	dd000817 	ldw	r20,32(sp)
    43e4:	dcc00717 	ldw	r19,28(sp)
    43e8:	dc800617 	ldw	r18,24(sp)
    43ec:	dc400517 	ldw	r17,20(sp)
    43f0:	dc000417 	ldw	r16,16(sp)
    43f4:	dec00e04 	addi	sp,sp,56
    43f8:	f800283a 	ret
    43fc:	0005883a 	mov	r2,zero
    4400:	003ff206 	br	43cc <quorem+0x1fc>

00004404 <_dtoa_r>:
    4404:	20801017 	ldw	r2,64(r4)
    4408:	deffe204 	addi	sp,sp,-120
    440c:	df001c15 	stw	fp,112(sp)
    4410:	dcc01715 	stw	r19,92(sp)
    4414:	dc401515 	stw	r17,84(sp)
    4418:	dc001415 	stw	r16,80(sp)
    441c:	dfc01d15 	stw	ra,116(sp)
    4420:	ddc01b15 	stw	r23,108(sp)
    4424:	dd801a15 	stw	r22,104(sp)
    4428:	dd401915 	stw	r21,100(sp)
    442c:	dd001815 	stw	r20,96(sp)
    4430:	dc801615 	stw	r18,88(sp)
    4434:	d9400115 	stw	r5,4(sp)
    4438:	d9c00215 	stw	r7,8(sp)
    443c:	2039883a 	mov	fp,r4
    4440:	3027883a 	mov	r19,r6
    4444:	dc002017 	ldw	r16,128(sp)
    4448:	3023883a 	mov	r17,r6
    444c:	10000826 	beq	r2,zero,4470 <_dtoa_r+0x6c>
    4450:	21801117 	ldw	r6,68(r4)
    4454:	00c00044 	movi	r3,1
    4458:	100b883a 	mov	r5,r2
    445c:	1986983a 	sll	r3,r3,r6
    4460:	11800115 	stw	r6,4(r2)
    4464:	10c00215 	stw	r3,8(r2)
    4468:	0006b980 	call	6b98 <_Bfree>
    446c:	e0001015 	stw	zero,64(fp)
    4470:	98018116 	blt	r19,zero,4a78 <_dtoa_r+0x674>
    4474:	80000015 	stw	zero,0(r16)
    4478:	989ffc2c 	andhi	r2,r19,32752
    447c:	00dffc34 	movhi	r3,32752
    4480:	10c18626 	beq	r2,r3,4a9c <_dtoa_r+0x698>
    4484:	d9000117 	ldw	r4,4(sp)
    4488:	000d883a 	mov	r6,zero
    448c:	000f883a 	mov	r7,zero
    4490:	880b883a 	mov	r5,r17
    4494:	000bed40 	call	bed4 <__eqdf2>
    4498:	1000191e 	bne	r2,zero,4500 <_dtoa_r+0xfc>
    449c:	d8c01f17 	ldw	r3,124(sp)
    44a0:	00800044 	movi	r2,1
    44a4:	18800015 	stw	r2,0(r3)
    44a8:	d8802117 	ldw	r2,132(sp)
    44ac:	10032426 	beq	r2,zero,5140 <_dtoa_r+0xd3c>
    44b0:	d9002117 	ldw	r4,132(sp)
    44b4:	00800074 	movhi	r2,1
    44b8:	10befa44 	addi	r2,r2,-1047
    44bc:	00c00074 	movhi	r3,1
    44c0:	20800015 	stw	r2,0(r4)
    44c4:	18befa04 	addi	r2,r3,-1048
    44c8:	d8800315 	stw	r2,12(sp)
    44cc:	d8800317 	ldw	r2,12(sp)
    44d0:	dfc01d17 	ldw	ra,116(sp)
    44d4:	df001c17 	ldw	fp,112(sp)
    44d8:	ddc01b17 	ldw	r23,108(sp)
    44dc:	dd801a17 	ldw	r22,104(sp)
    44e0:	dd401917 	ldw	r21,100(sp)
    44e4:	dd001817 	ldw	r20,96(sp)
    44e8:	dcc01717 	ldw	r19,92(sp)
    44ec:	dc801617 	ldw	r18,88(sp)
    44f0:	dc401517 	ldw	r17,84(sp)
    44f4:	dc001417 	ldw	r16,80(sp)
    44f8:	dec01e04 	addi	sp,sp,120
    44fc:	f800283a 	ret
    4500:	dc800117 	ldw	r18,4(sp)
    4504:	d8801204 	addi	r2,sp,72
    4508:	9820d53a 	srli	r16,r19,20
    450c:	d8800015 	stw	r2,0(sp)
    4510:	d9c01304 	addi	r7,sp,76
    4514:	900b883a 	mov	r5,r18
    4518:	880d883a 	mov	r6,r17
    451c:	e009883a 	mov	r4,fp
    4520:	00077680 	call	7768 <__d2b>
    4524:	102b883a 	mov	r21,r2
    4528:	8001701e 	bne	r16,zero,4aec <_dtoa_r+0x6e8>
    452c:	dc801217 	ldw	r18,72(sp)
    4530:	dc001317 	ldw	r16,76(sp)
    4534:	9421883a 	add	r16,r18,r16
    4538:	80810c84 	addi	r2,r16,1074
    453c:	10c00850 	cmplti	r3,r2,33
    4540:	18030f1e 	bne	r3,zero,5180 <_dtoa_r+0xd7c>
    4544:	01001004 	movi	r4,64
    4548:	2085c83a 	sub	r2,r4,r2
    454c:	98a6983a 	sll	r19,r19,r2
    4550:	d8800117 	ldw	r2,4(sp)
    4554:	81010484 	addi	r4,r16,1042
    4558:	1108d83a 	srl	r4,r2,r4
    455c:	9908b03a 	or	r4,r19,r4
    4560:	000d41c0 	call	d41c <__floatunsidf>
    4564:	1009883a 	mov	r4,r2
    4568:	017f8434 	movhi	r5,65040
    456c:	00800044 	movi	r2,1
    4570:	194b883a 	add	r5,r3,r5
    4574:	843fffc4 	addi	r16,r16,-1
    4578:	d8800a15 	stw	r2,40(sp)
    457c:	000d883a 	mov	r6,zero
    4580:	01cffe34 	movhi	r7,16376
    4584:	000c9140 	call	c914 <__subdf3>
    4588:	0198dbf4 	movhi	r6,25455
    458c:	01cff4f4 	movhi	r7,16339
    4590:	3190d844 	addi	r6,r6,17249
    4594:	39e1e9c4 	addi	r7,r7,-30809
    4598:	1009883a 	mov	r4,r2
    459c:	180b883a 	mov	r5,r3
    45a0:	000c1340 	call	c134 <__muldf3>
    45a4:	01a2d874 	movhi	r6,35681
    45a8:	01cff1f4 	movhi	r7,16327
    45ac:	31b22cc4 	addi	r6,r6,-14157
    45b0:	39e28a04 	addi	r7,r7,-30168
    45b4:	180b883a 	mov	r5,r3
    45b8:	1009883a 	mov	r4,r2
    45bc:	000abd00 	call	abd0 <__adddf3>
    45c0:	8009883a 	mov	r4,r16
    45c4:	1029883a 	mov	r20,r2
    45c8:	1827883a 	mov	r19,r3
    45cc:	000d3540 	call	d354 <__floatsidf>
    45d0:	019427f4 	movhi	r6,20639
    45d4:	01cff4f4 	movhi	r7,16339
    45d8:	319e7ec4 	addi	r6,r6,31227
    45dc:	39d104c4 	addi	r7,r7,17427
    45e0:	1009883a 	mov	r4,r2
    45e4:	180b883a 	mov	r5,r3
    45e8:	000c1340 	call	c134 <__muldf3>
    45ec:	100d883a 	mov	r6,r2
    45f0:	180f883a 	mov	r7,r3
    45f4:	a009883a 	mov	r4,r20
    45f8:	980b883a 	mov	r5,r19
    45fc:	000abd00 	call	abd0 <__adddf3>
    4600:	1009883a 	mov	r4,r2
    4604:	180b883a 	mov	r5,r3
    4608:	1029883a 	mov	r20,r2
    460c:	1827883a 	mov	r19,r3
    4610:	000d2d40 	call	d2d4 <__fixdfsi>
    4614:	000d883a 	mov	r6,zero
    4618:	000f883a 	mov	r7,zero
    461c:	a009883a 	mov	r4,r20
    4620:	980b883a 	mov	r5,r19
    4624:	102d883a 	mov	r22,r2
    4628:	000c0440 	call	c044 <__ledf2>
    462c:	1002ba16 	blt	r2,zero,5118 <_dtoa_r+0xd14>
    4630:	9421c83a 	sub	r16,r18,r16
    4634:	b08005e8 	cmpgeui	r2,r22,23
    4638:	853fffc4 	addi	r20,r16,-1
    463c:	1002ae1e 	bne	r2,zero,50f8 <_dtoa_r+0xcf4>
    4640:	b00690fa 	slli	r3,r22,3
    4644:	00800074 	movhi	r2,1
    4648:	10bfbe04 	addi	r2,r2,-264
    464c:	10c5883a 	add	r2,r2,r3
    4650:	11800017 	ldw	r6,0(r2)
    4654:	11c00117 	ldw	r7,4(r2)
    4658:	d9000117 	ldw	r4,4(sp)
    465c:	880b883a 	mov	r5,r17
    4660:	000c0440 	call	c044 <__ledf2>
    4664:	10026f0e 	bge	r2,zero,5024 <_dtoa_r+0xc20>
    4668:	d8000915 	stw	zero,36(sp)
    466c:	b5bfffc4 	addi	r22,r22,-1
    4670:	a002a416 	blt	r20,zero,5104 <_dtoa_r+0xd00>
    4674:	d8000515 	stw	zero,20(sp)
    4678:	b0026d0e 	bge	r22,zero,5030 <_dtoa_r+0xc2c>
    467c:	d8800517 	ldw	r2,20(sp)
    4680:	d8c00217 	ldw	r3,8(sp)
    4684:	dd800415 	stw	r22,16(sp)
    4688:	1585c83a 	sub	r2,r2,r22
    468c:	d8800515 	stw	r2,20(sp)
    4690:	0585c83a 	sub	r2,zero,r22
    4694:	d8800815 	stw	r2,32(sp)
    4698:	188002a8 	cmpgeui	r2,r3,10
    469c:	002d883a 	mov	r22,zero
    46a0:	1002691e 	bne	r2,zero,5048 <_dtoa_r+0xc44>
    46a4:	18800190 	cmplti	r2,r3,6
    46a8:	1002ba1e 	bne	r2,zero,5194 <_dtoa_r+0xd90>
    46ac:	18bfff04 	addi	r2,r3,-4
    46b0:	d8800215 	stw	r2,8(sp)
    46b4:	0021883a 	mov	r16,zero
    46b8:	d8c00217 	ldw	r3,8(sp)
    46bc:	188000e0 	cmpeqi	r2,r3,3
    46c0:	10039d1e 	bne	r2,zero,5538 <_dtoa_r+0x1134>
    46c4:	18800108 	cmpgei	r2,r3,4
    46c8:	10027a26 	beq	r2,zero,50b4 <_dtoa_r+0xcb0>
    46cc:	d8c00217 	ldw	r3,8(sp)
    46d0:	18800120 	cmpeqi	r2,r3,4
    46d4:	10026926 	beq	r2,zero,507c <_dtoa_r+0xc78>
    46d8:	00800044 	movi	r2,1
    46dc:	d8800715 	stw	r2,28(sp)
    46e0:	d8801e17 	ldw	r2,120(sp)
    46e4:	0083670e 	bge	zero,r2,5484 <_dtoa_r+0x1080>
    46e8:	d8800b15 	stw	r2,44(sp)
    46ec:	d8800615 	stw	r2,24(sp)
    46f0:	100d883a 	mov	r6,r2
    46f4:	e0001115 	stw	zero,68(fp)
    46f8:	30800610 	cmplti	r2,r6,24
    46fc:	dc800617 	ldw	r18,24(sp)
    4700:	1004eb1e 	bne	r2,zero,5ab0 <_dtoa_r+0x16ac>
    4704:	00c00044 	movi	r3,1
    4708:	00800104 	movi	r2,4
    470c:	1085883a 	add	r2,r2,r2
    4710:	11000504 	addi	r4,r2,20
    4714:	180b883a 	mov	r5,r3
    4718:	18c00044 	addi	r3,r3,1
    471c:	313ffb2e 	bgeu	r6,r4,470c <_dtoa_r+0x308>
    4720:	e1401115 	stw	r5,68(fp)
    4724:	e009883a 	mov	r4,fp
    4728:	0006af40 	call	6af4 <_Balloc>
    472c:	d8800315 	stw	r2,12(sp)
    4730:	e0801015 	stw	r2,64(fp)
    4734:	948003e8 	cmpgeui	r18,r18,15
    4738:	9000fe1e 	bne	r18,zero,4b34 <_dtoa_r+0x730>
    473c:	8000fd26 	beq	r16,zero,4b34 <_dtoa_r+0x730>
    4740:	d9000417 	ldw	r4,16(sp)
    4744:	0103c60e 	bge	zero,r4,5660 <_dtoa_r+0x125c>
    4748:	208003cc 	andi	r2,r4,15
    474c:	100690fa 	slli	r3,r2,3
    4750:	202fd13a 	srai	r23,r4,4
    4754:	00800074 	movhi	r2,1
    4758:	10bfbe04 	addi	r2,r2,-264
    475c:	10c5883a 	add	r2,r2,r3
    4760:	b8c0040c 	andi	r3,r23,16
    4764:	12800017 	ldw	r10,0(r2)
    4768:	12400117 	ldw	r9,4(r2)
    476c:	1803621e 	bne	r3,zero,54f8 <_dtoa_r+0x10f4>
    4770:	d8800117 	ldw	r2,4(sp)
    4774:	8827883a 	mov	r19,r17
    4778:	04000084 	movi	r16,2
    477c:	d8800c15 	stw	r2,48(sp)
    4780:	04800074 	movhi	r18,1
    4784:	94bfb404 	addi	r18,r18,-304
    4788:	b8000f26 	beq	r23,zero,47c8 <_dtoa_r+0x3c4>
    478c:	5005883a 	mov	r2,r10
    4790:	4807883a 	mov	r3,r9
    4794:	b980004c 	andi	r6,r23,1
    4798:	1009883a 	mov	r4,r2
    479c:	b82fd07a 	srai	r23,r23,1
    47a0:	180b883a 	mov	r5,r3
    47a4:	30000426 	beq	r6,zero,47b8 <_dtoa_r+0x3b4>
    47a8:	91800017 	ldw	r6,0(r18)
    47ac:	91c00117 	ldw	r7,4(r18)
    47b0:	84000044 	addi	r16,r16,1
    47b4:	000c1340 	call	c134 <__muldf3>
    47b8:	94800204 	addi	r18,r18,8
    47bc:	b83ff51e 	bne	r23,zero,4794 <_dtoa_r+0x390>
    47c0:	1015883a 	mov	r10,r2
    47c4:	1813883a 	mov	r9,r3
    47c8:	d9000c17 	ldw	r4,48(sp)
    47cc:	980b883a 	mov	r5,r19
    47d0:	500d883a 	mov	r6,r10
    47d4:	480f883a 	mov	r7,r9
    47d8:	000b5700 	call	b570 <__divdf3>
    47dc:	1025883a 	mov	r18,r2
    47e0:	1827883a 	mov	r19,r3
    47e4:	d8800917 	ldw	r2,36(sp)
    47e8:	10000626 	beq	r2,zero,4804 <_dtoa_r+0x400>
    47ec:	000d883a 	mov	r6,zero
    47f0:	01cffc34 	movhi	r7,16368
    47f4:	9009883a 	mov	r4,r18
    47f8:	980b883a 	mov	r5,r19
    47fc:	000c0440 	call	c044 <__ledf2>
    4800:	10042616 	blt	r2,zero,589c <_dtoa_r+0x1498>
    4804:	8009883a 	mov	r4,r16
    4808:	000d3540 	call	d354 <__floatsidf>
    480c:	900d883a 	mov	r6,r18
    4810:	980f883a 	mov	r7,r19
    4814:	1009883a 	mov	r4,r2
    4818:	180b883a 	mov	r5,r3
    481c:	000c1340 	call	c134 <__muldf3>
    4820:	000d883a 	mov	r6,zero
    4824:	01d00734 	movhi	r7,16412
    4828:	1009883a 	mov	r4,r2
    482c:	180b883a 	mov	r5,r3
    4830:	000abd00 	call	abd0 <__adddf3>
    4834:	d8800c15 	stw	r2,48(sp)
    4838:	00bf3034 	movhi	r2,64704
    483c:	1885883a 	add	r2,r3,r2
    4840:	d8800d15 	stw	r2,52(sp)
    4844:	d8800617 	ldw	r2,24(sp)
    4848:	10036d26 	beq	r2,zero,5600 <_dtoa_r+0x11fc>
    484c:	d8800417 	ldw	r2,16(sp)
    4850:	d8800f15 	stw	r2,60(sp)
    4854:	d8800617 	ldw	r2,24(sp)
    4858:	d8800e15 	stw	r2,56(sp)
    485c:	980b883a 	mov	r5,r19
    4860:	9009883a 	mov	r4,r18
    4864:	000d2d40 	call	d2d4 <__fixdfsi>
    4868:	1009883a 	mov	r4,r2
    486c:	102f883a 	mov	r23,r2
    4870:	000d3540 	call	d354 <__floatsidf>
    4874:	100d883a 	mov	r6,r2
    4878:	180f883a 	mov	r7,r3
    487c:	9009883a 	mov	r4,r18
    4880:	980b883a 	mov	r5,r19
    4884:	000c9140 	call	c914 <__subdf3>
    4888:	1025883a 	mov	r18,r2
    488c:	d8800e17 	ldw	r2,56(sp)
    4890:	1821883a 	mov	r16,r3
    4894:	ba400c04 	addi	r9,r23,48
    4898:	10bfffc4 	addi	r2,r2,-1
    489c:	100690fa 	slli	r3,r2,3
    48a0:	00800074 	movhi	r2,1
    48a4:	10bfbe04 	addi	r2,r2,-264
    48a8:	10c5883a 	add	r2,r2,r3
    48ac:	11800017 	ldw	r6,0(r2)
    48b0:	d8c00317 	ldw	r3,12(sp)
    48b4:	11c00117 	ldw	r7,4(r2)
    48b8:	d8800717 	ldw	r2,28(sp)
    48bc:	4811883a 	mov	r8,r9
    48c0:	da001015 	stw	r8,64(sp)
    48c4:	1dc00044 	addi	r23,r3,1
    48c8:	1003a226 	beq	r2,zero,5754 <_dtoa_r+0x1350>
    48cc:	0009883a 	mov	r4,zero
    48d0:	014ff834 	movhi	r5,16352
    48d4:	da401115 	stw	r9,68(sp)
    48d8:	000b5700 	call	b570 <__divdf3>
    48dc:	d9800c17 	ldw	r6,48(sp)
    48e0:	d9c00d17 	ldw	r7,52(sp)
    48e4:	1009883a 	mov	r4,r2
    48e8:	180b883a 	mov	r5,r3
    48ec:	000c9140 	call	c914 <__subdf3>
    48f0:	1827883a 	mov	r19,r3
    48f4:	da401117 	ldw	r9,68(sp)
    48f8:	d8c00317 	ldw	r3,12(sp)
    48fc:	900d883a 	mov	r6,r18
    4900:	800f883a 	mov	r7,r16
    4904:	1a400005 	stb	r9,0(r3)
    4908:	1009883a 	mov	r4,r2
    490c:	980b883a 	mov	r5,r19
    4910:	d8800c15 	stw	r2,48(sp)
    4914:	000bf540 	call	bf54 <__gedf2>
    4918:	da001017 	ldw	r8,64(sp)
    491c:	00804816 	blt	zero,r2,4a40 <_dtoa_r+0x63c>
    4920:	900d883a 	mov	r6,r18
    4924:	800f883a 	mov	r7,r16
    4928:	0009883a 	mov	r4,zero
    492c:	014ffc34 	movhi	r5,16368
    4930:	da000d15 	stw	r8,52(sp)
    4934:	000c9140 	call	c914 <__subdf3>
    4938:	d9000c17 	ldw	r4,48(sp)
    493c:	100d883a 	mov	r6,r2
    4940:	180f883a 	mov	r7,r3
    4944:	980b883a 	mov	r5,r19
    4948:	000bf540 	call	bf54 <__gedf2>
    494c:	da000d17 	ldw	r8,52(sp)
    4950:	00844e16 	blt	zero,r2,5a8c <_dtoa_r+0x1688>
    4954:	d8c00e17 	ldw	r3,56(sp)
    4958:	18800060 	cmpeqi	r2,r3,1
    495c:	1000751e 	bne	r2,zero,4b34 <_dtoa_r+0x730>
    4960:	d8800317 	ldw	r2,12(sp)
    4964:	dd800d15 	stw	r22,52(sp)
    4968:	dd000e15 	stw	r20,56(sp)
    496c:	10c5883a 	add	r2,r2,r3
    4970:	dd000c17 	ldw	r20,48(sp)
    4974:	102d883a 	mov	r22,r2
    4978:	dc400c15 	stw	r17,48(sp)
    497c:	00000806 	br	49a0 <_dtoa_r+0x59c>
    4980:	000c9140 	call	c914 <__subdf3>
    4984:	a00d883a 	mov	r6,r20
    4988:	980f883a 	mov	r7,r19
    498c:	1009883a 	mov	r4,r2
    4990:	180b883a 	mov	r5,r3
    4994:	000c0440 	call	c044 <__ledf2>
    4998:	10042316 	blt	r2,zero,5a28 <_dtoa_r+0x1624>
    499c:	bd806226 	beq	r23,r22,4b28 <_dtoa_r+0x724>
    49a0:	a009883a 	mov	r4,r20
    49a4:	980b883a 	mov	r5,r19
    49a8:	000d883a 	mov	r6,zero
    49ac:	01d00934 	movhi	r7,16420
    49b0:	000c1340 	call	c134 <__muldf3>
    49b4:	000d883a 	mov	r6,zero
    49b8:	01d00934 	movhi	r7,16420
    49bc:	9009883a 	mov	r4,r18
    49c0:	800b883a 	mov	r5,r16
    49c4:	1029883a 	mov	r20,r2
    49c8:	1827883a 	mov	r19,r3
    49cc:	000c1340 	call	c134 <__muldf3>
    49d0:	180b883a 	mov	r5,r3
    49d4:	1009883a 	mov	r4,r2
    49d8:	1821883a 	mov	r16,r3
    49dc:	1025883a 	mov	r18,r2
    49e0:	000d2d40 	call	d2d4 <__fixdfsi>
    49e4:	1009883a 	mov	r4,r2
    49e8:	1023883a 	mov	r17,r2
    49ec:	000d3540 	call	d354 <__floatsidf>
    49f0:	9009883a 	mov	r4,r18
    49f4:	800b883a 	mov	r5,r16
    49f8:	100d883a 	mov	r6,r2
    49fc:	180f883a 	mov	r7,r3
    4a00:	000c9140 	call	c914 <__subdf3>
    4a04:	bdc00044 	addi	r23,r23,1
    4a08:	8c400c04 	addi	r17,r17,48
    4a0c:	a00d883a 	mov	r6,r20
    4a10:	980f883a 	mov	r7,r19
    4a14:	1009883a 	mov	r4,r2
    4a18:	180b883a 	mov	r5,r3
    4a1c:	bc7fffc5 	stb	r17,-1(r23)
    4a20:	1025883a 	mov	r18,r2
    4a24:	1821883a 	mov	r16,r3
    4a28:	000c0440 	call	c044 <__ledf2>
    4a2c:	900d883a 	mov	r6,r18
    4a30:	800f883a 	mov	r7,r16
    4a34:	0009883a 	mov	r4,zero
    4a38:	014ffc34 	movhi	r5,16368
    4a3c:	103fd00e 	bge	r2,zero,4980 <_dtoa_r+0x57c>
    4a40:	d8800f17 	ldw	r2,60(sp)
    4a44:	10800044 	addi	r2,r2,1
    4a48:	d8800415 	stw	r2,16(sp)
    4a4c:	a80b883a 	mov	r5,r21
    4a50:	e009883a 	mov	r4,fp
    4a54:	0006b980 	call	6b98 <_Bfree>
    4a58:	d8801f17 	ldw	r2,124(sp)
    4a5c:	d8c00417 	ldw	r3,16(sp)
    4a60:	b8000005 	stb	zero,0(r23)
    4a64:	10c00015 	stw	r3,0(r2)
    4a68:	d8802117 	ldw	r2,132(sp)
    4a6c:	103e9726 	beq	r2,zero,44cc <_dtoa_r+0xc8>
    4a70:	15c00015 	stw	r23,0(r2)
    4a74:	003e9506 	br	44cc <_dtoa_r+0xc8>
    4a78:	04600034 	movhi	r17,32768
    4a7c:	8c7fffc4 	addi	r17,r17,-1
    4a80:	9c62703a 	and	r17,r19,r17
    4a84:	00800044 	movi	r2,1
    4a88:	8827883a 	mov	r19,r17
    4a8c:	80800015 	stw	r2,0(r16)
    4a90:	00dffc34 	movhi	r3,32752
    4a94:	989ffc2c 	andhi	r2,r19,32752
    4a98:	10fe7a1e 	bne	r2,r3,4484 <_dtoa_r+0x80>
    4a9c:	00800434 	movhi	r2,16
    4aa0:	d8c01f17 	ldw	r3,124(sp)
    4aa4:	10bfffc4 	addi	r2,r2,-1
    4aa8:	98a6703a 	and	r19,r19,r2
    4aac:	0089c3c4 	movi	r2,9999
    4ab0:	18800015 	stw	r2,0(r3)
    4ab4:	d8800117 	ldw	r2,4(sp)
    4ab8:	98aab03a 	or	r21,r19,r2
    4abc:	a800141e 	bne	r21,zero,4b10 <_dtoa_r+0x70c>
    4ac0:	d8802117 	ldw	r2,132(sp)
    4ac4:	1003f626 	beq	r2,zero,5aa0 <_dtoa_r+0x169c>
    4ac8:	00800074 	movhi	r2,1
    4acc:	1007883a 	mov	r3,r2
    4ad0:	18ffa404 	addi	r3,r3,-368
    4ad4:	00800074 	movhi	r2,1
    4ad8:	d8c00315 	stw	r3,12(sp)
    4adc:	10bfa604 	addi	r2,r2,-360
    4ae0:	d8c02117 	ldw	r3,132(sp)
    4ae4:	18800015 	stw	r2,0(r3)
    4ae8:	003e7806 	br	44cc <_dtoa_r+0xc8>
    4aec:	01400434 	movhi	r5,16
    4af0:	297fffc4 	addi	r5,r5,-1
    4af4:	894a703a 	and	r5,r17,r5
    4af8:	9009883a 	mov	r4,r18
    4afc:	294ffc34 	orhi	r5,r5,16368
    4b00:	843f0044 	addi	r16,r16,-1023
    4b04:	dc801217 	ldw	r18,72(sp)
    4b08:	d8000a15 	stw	zero,40(sp)
    4b0c:	003e9b06 	br	457c <_dtoa_r+0x178>
    4b10:	d8802117 	ldw	r2,132(sp)
    4b14:	1002461e 	bne	r2,zero,5430 <_dtoa_r+0x102c>
    4b18:	00800074 	movhi	r2,1
    4b1c:	10bfa304 	addi	r2,r2,-372
    4b20:	d8800315 	stw	r2,12(sp)
    4b24:	003e6906 	br	44cc <_dtoa_r+0xc8>
    4b28:	dd800d17 	ldw	r22,52(sp)
    4b2c:	dd000e17 	ldw	r20,56(sp)
    4b30:	dc400c17 	ldw	r17,48(sp)
    4b34:	d8801317 	ldw	r2,76(sp)
    4b38:	10009f16 	blt	r2,zero,4db8 <_dtoa_r+0x9b4>
    4b3c:	d9000417 	ldw	r4,16(sp)
    4b40:	20c003c8 	cmpgei	r3,r4,15
    4b44:	18009c1e 	bne	r3,zero,4db8 <_dtoa_r+0x9b4>
    4b48:	200690fa 	slli	r3,r4,3
    4b4c:	00800074 	movhi	r2,1
    4b50:	10bfbe04 	addi	r2,r2,-264
    4b54:	10c5883a 	add	r2,r2,r3
    4b58:	14000017 	ldw	r16,0(r2)
    4b5c:	14800117 	ldw	r18,4(r2)
    4b60:	d8801e17 	ldw	r2,120(sp)
    4b64:	1000140e 	bge	r2,zero,4bb8 <_dtoa_r+0x7b4>
    4b68:	d8800617 	ldw	r2,24(sp)
    4b6c:	00801216 	blt	zero,r2,4bb8 <_dtoa_r+0x7b4>
    4b70:	1002b81e 	bne	r2,zero,5654 <_dtoa_r+0x1250>
    4b74:	8009883a 	mov	r4,r16
    4b78:	900b883a 	mov	r5,r18
    4b7c:	000d883a 	mov	r6,zero
    4b80:	01d00534 	movhi	r7,16404
    4b84:	000c1340 	call	c134 <__muldf3>
    4b88:	d9800117 	ldw	r6,4(sp)
    4b8c:	880f883a 	mov	r7,r17
    4b90:	1009883a 	mov	r4,r2
    4b94:	180b883a 	mov	r5,r3
    4b98:	000bf540 	call	bf54 <__gedf2>
    4b9c:	0025883a 	mov	r18,zero
    4ba0:	0021883a 	mov	r16,zero
    4ba4:	1001fd16 	blt	r2,zero,539c <_dtoa_r+0xf98>
    4ba8:	d8801e17 	ldw	r2,120(sp)
    4bac:	ddc00317 	ldw	r23,12(sp)
    4bb0:	00a2303a 	nor	r17,zero,r2
    4bb4:	0001ff06 	br	53b4 <_dtoa_r+0xfb0>
    4bb8:	dcc00117 	ldw	r19,4(sp)
    4bbc:	800d883a 	mov	r6,r16
    4bc0:	900f883a 	mov	r7,r18
    4bc4:	880b883a 	mov	r5,r17
    4bc8:	9809883a 	mov	r4,r19
    4bcc:	000b5700 	call	b570 <__divdf3>
    4bd0:	180b883a 	mov	r5,r3
    4bd4:	1009883a 	mov	r4,r2
    4bd8:	000d2d40 	call	d2d4 <__fixdfsi>
    4bdc:	1009883a 	mov	r4,r2
    4be0:	102d883a 	mov	r22,r2
    4be4:	000d3540 	call	d354 <__floatsidf>
    4be8:	800d883a 	mov	r6,r16
    4bec:	900f883a 	mov	r7,r18
    4bf0:	1009883a 	mov	r4,r2
    4bf4:	180b883a 	mov	r5,r3
    4bf8:	000c1340 	call	c134 <__muldf3>
    4bfc:	880b883a 	mov	r5,r17
    4c00:	100d883a 	mov	r6,r2
    4c04:	180f883a 	mov	r7,r3
    4c08:	9809883a 	mov	r4,r19
    4c0c:	000c9140 	call	c914 <__subdf3>
    4c10:	dc400317 	ldw	r17,12(sp)
    4c14:	1009883a 	mov	r4,r2
    4c18:	d9c00417 	ldw	r7,16(sp)
    4c1c:	b0800c04 	addi	r2,r22,48
    4c20:	88800005 	stb	r2,0(r17)
    4c24:	d8800617 	ldw	r2,24(sp)
    4c28:	39c00044 	addi	r7,r7,1
    4c2c:	d9c00415 	stw	r7,16(sp)
    4c30:	11800060 	cmpeqi	r6,r2,1
    4c34:	180b883a 	mov	r5,r3
    4c38:	2005883a 	mov	r2,r4
    4c3c:	8dc00044 	addi	r23,r17,1
    4c40:	3000391e 	bne	r6,zero,4d28 <_dtoa_r+0x924>
    4c44:	01d00934 	movhi	r7,16420
    4c48:	000c1340 	call	c134 <__muldf3>
    4c4c:	000d883a 	mov	r6,zero
    4c50:	000f883a 	mov	r7,zero
    4c54:	1009883a 	mov	r4,r2
    4c58:	180b883a 	mov	r5,r3
    4c5c:	1027883a 	mov	r19,r2
    4c60:	1829883a 	mov	r20,r3
    4c64:	000bed40 	call	bed4 <__eqdf2>
    4c68:	103f7826 	beq	r2,zero,4a4c <_dtoa_r+0x648>
    4c6c:	d8c00617 	ldw	r3,24(sp)
    4c70:	8805883a 	mov	r2,r17
    4c74:	dd400115 	stw	r21,4(sp)
    4c78:	8c400084 	addi	r17,r17,2
    4c7c:	10ed883a 	add	r22,r2,r3
    4c80:	00000a06 	br	4cac <_dtoa_r+0x8a8>
    4c84:	000c1340 	call	c134 <__muldf3>
    4c88:	000d883a 	mov	r6,zero
    4c8c:	000f883a 	mov	r7,zero
    4c90:	1009883a 	mov	r4,r2
    4c94:	180b883a 	mov	r5,r3
    4c98:	1027883a 	mov	r19,r2
    4c9c:	1829883a 	mov	r20,r3
    4ca0:	8c400044 	addi	r17,r17,1
    4ca4:	000bed40 	call	bed4 <__eqdf2>
    4ca8:	10029d26 	beq	r2,zero,5720 <_dtoa_r+0x131c>
    4cac:	800d883a 	mov	r6,r16
    4cb0:	900f883a 	mov	r7,r18
    4cb4:	9809883a 	mov	r4,r19
    4cb8:	a00b883a 	mov	r5,r20
    4cbc:	000b5700 	call	b570 <__divdf3>
    4cc0:	180b883a 	mov	r5,r3
    4cc4:	1009883a 	mov	r4,r2
    4cc8:	000d2d40 	call	d2d4 <__fixdfsi>
    4ccc:	1009883a 	mov	r4,r2
    4cd0:	102b883a 	mov	r21,r2
    4cd4:	000d3540 	call	d354 <__floatsidf>
    4cd8:	800d883a 	mov	r6,r16
    4cdc:	900f883a 	mov	r7,r18
    4ce0:	1009883a 	mov	r4,r2
    4ce4:	180b883a 	mov	r5,r3
    4ce8:	000c1340 	call	c134 <__muldf3>
    4cec:	100d883a 	mov	r6,r2
    4cf0:	180f883a 	mov	r7,r3
    4cf4:	9809883a 	mov	r4,r19
    4cf8:	a00b883a 	mov	r5,r20
    4cfc:	000c9140 	call	c914 <__subdf3>
    4d00:	aa400c04 	addi	r9,r21,48
    4d04:	8a7fffc5 	stb	r9,-1(r17)
    4d08:	000d883a 	mov	r6,zero
    4d0c:	01d00934 	movhi	r7,16420
    4d10:	1009883a 	mov	r4,r2
    4d14:	180b883a 	mov	r5,r3
    4d18:	882f883a 	mov	r23,r17
    4d1c:	b47fd91e 	bne	r22,r17,4c84 <_dtoa_r+0x880>
    4d20:	a82d883a 	mov	r22,r21
    4d24:	dd400117 	ldw	r21,4(sp)
    4d28:	100d883a 	mov	r6,r2
    4d2c:	180f883a 	mov	r7,r3
    4d30:	1009883a 	mov	r4,r2
    4d34:	180b883a 	mov	r5,r3
    4d38:	000abd00 	call	abd0 <__adddf3>
    4d3c:	800d883a 	mov	r6,r16
    4d40:	900f883a 	mov	r7,r18
    4d44:	1009883a 	mov	r4,r2
    4d48:	180b883a 	mov	r5,r3
    4d4c:	1027883a 	mov	r19,r2
    4d50:	1823883a 	mov	r17,r3
    4d54:	000bf540 	call	bf54 <__gedf2>
    4d58:	00800816 	blt	zero,r2,4d7c <_dtoa_r+0x978>
    4d5c:	800d883a 	mov	r6,r16
    4d60:	900f883a 	mov	r7,r18
    4d64:	9809883a 	mov	r4,r19
    4d68:	880b883a 	mov	r5,r17
    4d6c:	000bed40 	call	bed4 <__eqdf2>
    4d70:	103f361e 	bne	r2,zero,4a4c <_dtoa_r+0x648>
    4d74:	b580004c 	andi	r22,r22,1
    4d78:	b03f3426 	beq	r22,zero,4a4c <_dtoa_r+0x648>
    4d7c:	ba3fffc3 	ldbu	r8,-1(r23)
    4d80:	d9000317 	ldw	r4,12(sp)
    4d84:	00000306 	br	4d94 <_dtoa_r+0x990>
    4d88:	20c30e26 	beq	r4,r3,59c4 <_dtoa_r+0x15c0>
    4d8c:	1a3fffc3 	ldbu	r8,-1(r3)
    4d90:	182f883a 	mov	r23,r3
    4d94:	40803fcc 	andi	r2,r8,255
    4d98:	1080201c 	xori	r2,r2,128
    4d9c:	10bfe004 	addi	r2,r2,-128
    4da0:	10800e60 	cmpeqi	r2,r2,57
    4da4:	b8ffffc4 	addi	r3,r23,-1
    4da8:	103ff71e 	bne	r2,zero,4d88 <_dtoa_r+0x984>
    4dac:	42000044 	addi	r8,r8,1
    4db0:	1a000005 	stb	r8,0(r3)
    4db4:	003f2506 	br	4a4c <_dtoa_r+0x648>
    4db8:	d8c00717 	ldw	r3,28(sp)
    4dbc:	1800e426 	beq	r3,zero,5150 <_dtoa_r+0xd4c>
    4dc0:	d8c00217 	ldw	r3,8(sp)
    4dc4:	18c00088 	cmpgei	r3,r3,2
    4dc8:	1801ec26 	beq	r3,zero,557c <_dtoa_r+0x1178>
    4dcc:	d8800617 	ldw	r2,24(sp)
    4dd0:	14bfffc4 	addi	r18,r2,-1
    4dd4:	d8800817 	ldw	r2,32(sp)
    4dd8:	1481c50e 	bge	r2,r18,54f0 <_dtoa_r+0x10ec>
    4ddc:	d8800817 	ldw	r2,32(sp)
    4de0:	dc800815 	stw	r18,32(sp)
    4de4:	9085c83a 	sub	r2,r18,r2
    4de8:	b0ad883a 	add	r22,r22,r2
    4dec:	0025883a 	mov	r18,zero
    4df0:	d8800617 	ldw	r2,24(sp)
    4df4:	10024c16 	blt	r2,zero,5728 <_dtoa_r+0x1324>
    4df8:	d8c00517 	ldw	r3,20(sp)
    4dfc:	a0a9883a 	add	r20,r20,r2
    4e00:	1885883a 	add	r2,r3,r2
    4e04:	1827883a 	mov	r19,r3
    4e08:	d8800515 	stw	r2,20(sp)
    4e0c:	01400044 	movi	r5,1
    4e10:	e009883a 	mov	r4,fp
    4e14:	0006f1c0 	call	6f1c <__i2b>
    4e18:	1021883a 	mov	r16,r2
    4e1c:	04c0080e 	bge	zero,r19,4e40 <_dtoa_r+0xa3c>
    4e20:	0500070e 	bge	zero,r20,4e40 <_dtoa_r+0xa3c>
    4e24:	9805883a 	mov	r2,r19
    4e28:	a4c1a916 	blt	r20,r19,54d0 <_dtoa_r+0x10cc>
    4e2c:	d8c00517 	ldw	r3,20(sp)
    4e30:	98a7c83a 	sub	r19,r19,r2
    4e34:	a0a9c83a 	sub	r20,r20,r2
    4e38:	1887c83a 	sub	r3,r3,r2
    4e3c:	d8c00515 	stw	r3,20(sp)
    4e40:	d8800817 	ldw	r2,32(sp)
    4e44:	10001426 	beq	r2,zero,4e98 <_dtoa_r+0xa94>
    4e48:	d8800717 	ldw	r2,28(sp)
    4e4c:	10017226 	beq	r2,zero,5418 <_dtoa_r+0x1014>
    4e50:	04800e0e 	bge	zero,r18,4e8c <_dtoa_r+0xa88>
    4e54:	800b883a 	mov	r5,r16
    4e58:	900d883a 	mov	r6,r18
    4e5c:	e009883a 	mov	r4,fp
    4e60:	00071900 	call	7190 <__pow5mult>
    4e64:	a80d883a 	mov	r6,r21
    4e68:	100b883a 	mov	r5,r2
    4e6c:	e009883a 	mov	r4,fp
    4e70:	1021883a 	mov	r16,r2
    4e74:	0006f500 	call	6f50 <__multiply>
    4e78:	102f883a 	mov	r23,r2
    4e7c:	a80b883a 	mov	r5,r21
    4e80:	e009883a 	mov	r4,fp
    4e84:	0006b980 	call	6b98 <_Bfree>
    4e88:	b82b883a 	mov	r21,r23
    4e8c:	d8800817 	ldw	r2,32(sp)
    4e90:	148dc83a 	sub	r6,r2,r18
    4e94:	3001611e 	bne	r6,zero,541c <_dtoa_r+0x1018>
    4e98:	01400044 	movi	r5,1
    4e9c:	e009883a 	mov	r4,fp
    4ea0:	0006f1c0 	call	6f1c <__i2b>
    4ea4:	1025883a 	mov	r18,r2
    4ea8:	0580bc16 	blt	zero,r22,519c <_dtoa_r+0xd98>
    4eac:	d8800217 	ldw	r2,8(sp)
    4eb0:	10800088 	cmpgei	r2,r2,2
    4eb4:	10016526 	beq	r2,zero,544c <_dtoa_r+0x1048>
    4eb8:	0023883a 	mov	r17,zero
    4ebc:	00800044 	movi	r2,1
    4ec0:	b000bf1e 	bne	r22,zero,51c0 <_dtoa_r+0xdbc>
    4ec4:	1505883a 	add	r2,r2,r20
    4ec8:	108007cc 	andi	r2,r2,31
    4ecc:	1000aa26 	beq	r2,zero,5178 <_dtoa_r+0xd74>
    4ed0:	00c00804 	movi	r3,32
    4ed4:	1887c83a 	sub	r3,r3,r2
    4ed8:	19000150 	cmplti	r4,r3,5
    4edc:	2002f61e 	bne	r4,zero,5ab8 <_dtoa_r+0x16b4>
    4ee0:	00c00704 	movi	r3,28
    4ee4:	1885c83a 	sub	r2,r3,r2
    4ee8:	d8c00517 	ldw	r3,20(sp)
    4eec:	98a7883a 	add	r19,r19,r2
    4ef0:	a0a9883a 	add	r20,r20,r2
    4ef4:	1887883a 	add	r3,r3,r2
    4ef8:	d8c00515 	stw	r3,20(sp)
    4efc:	d8800517 	ldw	r2,20(sp)
    4f00:	00809716 	blt	zero,r2,5160 <_dtoa_r+0xd5c>
    4f04:	0500050e 	bge	zero,r20,4f1c <_dtoa_r+0xb18>
    4f08:	900b883a 	mov	r5,r18
    4f0c:	a00d883a 	mov	r6,r20
    4f10:	e009883a 	mov	r4,fp
    4f14:	00072b80 	call	72b8 <__lshift>
    4f18:	1025883a 	mov	r18,r2
    4f1c:	d8800917 	ldw	r2,36(sp)
    4f20:	10012b1e 	bne	r2,zero,53d0 <_dtoa_r+0xfcc>
    4f24:	d8800617 	ldw	r2,24(sp)
    4f28:	00810d0e 	bge	zero,r2,5360 <_dtoa_r+0xf5c>
    4f2c:	d8800417 	ldw	r2,16(sp)
    4f30:	10800044 	addi	r2,r2,1
    4f34:	d8800415 	stw	r2,16(sp)
    4f38:	d8800717 	ldw	r2,28(sp)
    4f3c:	1000b21e 	bne	r2,zero,5208 <_dtoa_r+0xe04>
    4f40:	ddc00317 	ldw	r23,12(sp)
    4f44:	04400044 	movi	r17,1
    4f48:	dcc00617 	ldw	r19,24(sp)
    4f4c:	00000306 	br	4f5c <_dtoa_r+0xb58>
    4f50:	0006bbc0 	call	6bbc <__multadd>
    4f54:	102b883a 	mov	r21,r2
    4f58:	8c400044 	addi	r17,r17,1
    4f5c:	900b883a 	mov	r5,r18
    4f60:	a809883a 	mov	r4,r21
    4f64:	00041d00 	call	41d0 <quorem>
    4f68:	10800c04 	addi	r2,r2,48
    4f6c:	bdc00044 	addi	r23,r23,1
    4f70:	b8bfffc5 	stb	r2,-1(r23)
    4f74:	000f883a 	mov	r7,zero
    4f78:	01800284 	movi	r6,10
    4f7c:	a80b883a 	mov	r5,r21
    4f80:	e009883a 	mov	r4,fp
    4f84:	8cfff216 	blt	r17,r19,4f50 <_dtoa_r+0xb4c>
    4f88:	1011883a 	mov	r8,r2
    4f8c:	0029883a 	mov	r20,zero
    4f90:	a80b883a 	mov	r5,r21
    4f94:	01800044 	movi	r6,1
    4f98:	e009883a 	mov	r4,fp
    4f9c:	da000115 	stw	r8,4(sp)
    4fa0:	00072b80 	call	72b8 <__lshift>
    4fa4:	900b883a 	mov	r5,r18
    4fa8:	1009883a 	mov	r4,r2
    4fac:	102b883a 	mov	r21,r2
    4fb0:	00073f40 	call	73f4 <__mcmp>
    4fb4:	b8ffffc3 	ldbu	r3,-1(r23)
    4fb8:	0081610e 	bge	zero,r2,5540 <_dtoa_r+0x113c>
    4fbc:	d9400317 	ldw	r5,12(sp)
    4fc0:	00000306 	br	4fd0 <_dtoa_r+0xbcc>
    4fc4:	29017726 	beq	r5,r4,55a4 <_dtoa_r+0x11a0>
    4fc8:	20ffffc3 	ldbu	r3,-1(r4)
    4fcc:	202f883a 	mov	r23,r4
    4fd0:	18803fcc 	andi	r2,r3,255
    4fd4:	1080201c 	xori	r2,r2,128
    4fd8:	10bfe004 	addi	r2,r2,-128
    4fdc:	10800e60 	cmpeqi	r2,r2,57
    4fe0:	b93fffc4 	addi	r4,r23,-1
    4fe4:	103ff71e 	bne	r2,zero,4fc4 <_dtoa_r+0xbc0>
    4fe8:	18c00044 	addi	r3,r3,1
    4fec:	20c00005 	stb	r3,0(r4)
    4ff0:	900b883a 	mov	r5,r18
    4ff4:	e009883a 	mov	r4,fp
    4ff8:	0006b980 	call	6b98 <_Bfree>
    4ffc:	803e9326 	beq	r16,zero,4a4c <_dtoa_r+0x648>
    5000:	a0000426 	beq	r20,zero,5014 <_dtoa_r+0xc10>
    5004:	a4000326 	beq	r20,r16,5014 <_dtoa_r+0xc10>
    5008:	a00b883a 	mov	r5,r20
    500c:	e009883a 	mov	r4,fp
    5010:	0006b980 	call	6b98 <_Bfree>
    5014:	800b883a 	mov	r5,r16
    5018:	e009883a 	mov	r4,fp
    501c:	0006b980 	call	6b98 <_Bfree>
    5020:	003e8a06 	br	4a4c <_dtoa_r+0x648>
    5024:	d8000915 	stw	zero,36(sp)
    5028:	a0003616 	blt	r20,zero,5104 <_dtoa_r+0xd00>
    502c:	d8000515 	stw	zero,20(sp)
    5030:	d8c00217 	ldw	r3,8(sp)
    5034:	dd800415 	stw	r22,16(sp)
    5038:	d8000815 	stw	zero,32(sp)
    503c:	188002a8 	cmpgeui	r2,r3,10
    5040:	a5a9883a 	add	r20,r20,r22
    5044:	103d9726 	beq	r2,zero,46a4 <_dtoa_r+0x2a0>
    5048:	00800044 	movi	r2,1
    504c:	d8800715 	stw	r2,28(sp)
    5050:	00bfffc4 	movi	r2,-1
    5054:	04bfffc4 	movi	r18,-1
    5058:	04000044 	movi	r16,1
    505c:	d8000215 	stw	zero,8(sp)
    5060:	d8800615 	stw	r2,24(sp)
    5064:	d8001e15 	stw	zero,120(sp)
    5068:	d8800617 	ldw	r2,24(sp)
    506c:	e0001115 	stw	zero,68(fp)
    5070:	000b883a 	mov	r5,zero
    5074:	d8800b15 	stw	r2,44(sp)
    5078:	003daa06 	br	4724 <_dtoa_r+0x320>
    507c:	18800160 	cmpeqi	r2,r3,5
    5080:	00c00044 	movi	r3,1
    5084:	d8c00715 	stw	r3,28(sp)
    5088:	10000d26 	beq	r2,zero,50c0 <_dtoa_r+0xcbc>
    508c:	d8801e17 	ldw	r2,120(sp)
    5090:	d8c00417 	ldw	r3,16(sp)
    5094:	10c5883a 	add	r2,r2,r3
    5098:	d8800b15 	stw	r2,44(sp)
    509c:	10800044 	addi	r2,r2,1
    50a0:	d8800615 	stw	r2,24(sp)
    50a4:	100d883a 	mov	r6,r2
    50a8:	00bd9216 	blt	zero,r2,46f4 <_dtoa_r+0x2f0>
    50ac:	01800044 	movi	r6,1
    50b0:	003d9006 	br	46f4 <_dtoa_r+0x2f0>
    50b4:	188000a0 	cmpeqi	r2,r3,2
    50b8:	d8000715 	stw	zero,28(sp)
    50bc:	103d881e 	bne	r2,zero,46e0 <_dtoa_r+0x2dc>
    50c0:	e0001115 	stw	zero,68(fp)
    50c4:	000b883a 	mov	r5,zero
    50c8:	e009883a 	mov	r4,fp
    50cc:	0006af40 	call	6af4 <_Balloc>
    50d0:	d8800315 	stw	r2,12(sp)
    50d4:	e0801015 	stw	r2,64(fp)
    50d8:	00bfffc4 	movi	r2,-1
    50dc:	d8800b15 	stw	r2,44(sp)
    50e0:	00800044 	movi	r2,1
    50e4:	d8800715 	stw	r2,28(sp)
    50e8:	00bfffc4 	movi	r2,-1
    50ec:	d8001e15 	stw	zero,120(sp)
    50f0:	d8800615 	stw	r2,24(sp)
    50f4:	003e8f06 	br	4b34 <_dtoa_r+0x730>
    50f8:	00800044 	movi	r2,1
    50fc:	d8800915 	stw	r2,36(sp)
    5100:	a03d5c0e 	bge	r20,zero,4674 <_dtoa_r+0x270>
    5104:	04800044 	movi	r18,1
    5108:	9405c83a 	sub	r2,r18,r16
    510c:	d8800515 	stw	r2,20(sp)
    5110:	0029883a 	mov	r20,zero
    5114:	003d5806 	br	4678 <_dtoa_r+0x274>
    5118:	b009883a 	mov	r4,r22
    511c:	000d3540 	call	d354 <__floatsidf>
    5120:	a00d883a 	mov	r6,r20
    5124:	980f883a 	mov	r7,r19
    5128:	1009883a 	mov	r4,r2
    512c:	180b883a 	mov	r5,r3
    5130:	000bed40 	call	bed4 <__eqdf2>
    5134:	103d3e26 	beq	r2,zero,4630 <_dtoa_r+0x22c>
    5138:	b5bfffc4 	addi	r22,r22,-1
    513c:	003d3c06 	br	4630 <_dtoa_r+0x22c>
    5140:	00800074 	movhi	r2,1
    5144:	10befa04 	addi	r2,r2,-1048
    5148:	d8800315 	stw	r2,12(sp)
    514c:	003cdf06 	br	44cc <_dtoa_r+0xc8>
    5150:	dc800817 	ldw	r18,32(sp)
    5154:	dcc00517 	ldw	r19,20(sp)
    5158:	0021883a 	mov	r16,zero
    515c:	003f2f06 	br	4e1c <_dtoa_r+0xa18>
    5160:	a80b883a 	mov	r5,r21
    5164:	100d883a 	mov	r6,r2
    5168:	e009883a 	mov	r4,fp
    516c:	00072b80 	call	72b8 <__lshift>
    5170:	102b883a 	mov	r21,r2
    5174:	003f6306 	br	4f04 <_dtoa_r+0xb00>
    5178:	00800704 	movi	r2,28
    517c:	003f5a06 	br	4ee8 <_dtoa_r+0xae4>
    5180:	01000804 	movi	r4,32
    5184:	2089c83a 	sub	r4,r4,r2
    5188:	d8800117 	ldw	r2,4(sp)
    518c:	1108983a 	sll	r4,r2,r4
    5190:	003cf306 	br	4560 <_dtoa_r+0x15c>
    5194:	04000044 	movi	r16,1
    5198:	003d4706 	br	46b8 <_dtoa_r+0x2b4>
    519c:	b00d883a 	mov	r6,r22
    51a0:	100b883a 	mov	r5,r2
    51a4:	e009883a 	mov	r4,fp
    51a8:	00071900 	call	7190 <__pow5mult>
    51ac:	1025883a 	mov	r18,r2
    51b0:	d8800217 	ldw	r2,8(sp)
    51b4:	10800090 	cmplti	r2,r2,2
    51b8:	10012f1e 	bne	r2,zero,5678 <_dtoa_r+0x1274>
    51bc:	0023883a 	mov	r17,zero
    51c0:	90800417 	ldw	r2,16(r18)
    51c4:	10800104 	addi	r2,r2,4
    51c8:	100490ba 	slli	r2,r2,2
    51cc:	9085883a 	add	r2,r18,r2
    51d0:	11000017 	ldw	r4,0(r2)
    51d4:	0006e080 	call	6e08 <__hi0bits>
    51d8:	00c00804 	movi	r3,32
    51dc:	1885c83a 	sub	r2,r3,r2
    51e0:	003f3806 	br	4ec4 <_dtoa_r+0xac0>
    51e4:	800b883a 	mov	r5,r16
    51e8:	000f883a 	mov	r7,zero
    51ec:	01800284 	movi	r6,10
    51f0:	e009883a 	mov	r4,fp
    51f4:	0006bbc0 	call	6bbc <__multadd>
    51f8:	1021883a 	mov	r16,r2
    51fc:	d8800b17 	ldw	r2,44(sp)
    5200:	00821b0e 	bge	zero,r2,5a70 <_dtoa_r+0x166c>
    5204:	d8800615 	stw	r2,24(sp)
    5208:	04c0b316 	blt	zero,r19,54d8 <_dtoa_r+0x10d4>
    520c:	8801341e 	bne	r17,zero,56e0 <_dtoa_r+0x12dc>
    5210:	8027883a 	mov	r19,r16
    5214:	dc400317 	ldw	r17,12(sp)
    5218:	d8c00617 	ldw	r3,24(sp)
    521c:	d8800117 	ldw	r2,4(sp)
    5220:	8dffffc4 	addi	r23,r17,-1
    5224:	b8c7883a 	add	r3,r23,r3
    5228:	d8c00615 	stw	r3,24(sp)
    522c:	d8c00217 	ldw	r3,8(sp)
    5230:	1080004c 	andi	r2,r2,1
    5234:	d8800815 	stw	r2,32(sp)
    5238:	10c4b03a 	or	r2,r2,r3
    523c:	d8800715 	stw	r2,28(sp)
    5240:	00002c06 	br	52f4 <_dtoa_r+0xef0>
    5244:	b80b883a 	mov	r5,r23
    5248:	a809883a 	mov	r4,r21
    524c:	da000515 	stw	r8,20(sp)
    5250:	00073f40 	call	73f4 <__mcmp>
    5254:	b80b883a 	mov	r5,r23
    5258:	e009883a 	mov	r4,fp
    525c:	d8800115 	stw	r2,4(sp)
    5260:	0006b980 	call	6b98 <_Bfree>
    5264:	d8800117 	ldw	r2,4(sp)
    5268:	da000517 	ldw	r8,20(sp)
    526c:	1000021e 	bne	r2,zero,5278 <_dtoa_r+0xe74>
    5270:	d8c00717 	ldw	r3,28(sp)
    5274:	1801f226 	beq	r3,zero,5a40 <_dtoa_r+0x163c>
    5278:	8dc00044 	addi	r23,r17,1
    527c:	a0010516 	blt	r20,zero,5694 <_dtoa_r+0x1290>
    5280:	d8c00217 	ldw	r3,8(sp)
    5284:	a0e8b03a 	or	r20,r20,r3
    5288:	d8c00817 	ldw	r3,32(sp)
    528c:	1d28b03a 	or	r20,r3,r20
    5290:	a0010026 	beq	r20,zero,5694 <_dtoa_r+0x1290>
    5294:	00812816 	blt	zero,r2,5738 <_dtoa_r+0x1334>
    5298:	d8800617 	ldw	r2,24(sp)
    529c:	8a000005 	stb	r8,0(r17)
    52a0:	14412926 	beq	r2,r17,5748 <_dtoa_r+0x1344>
    52a4:	a80b883a 	mov	r5,r21
    52a8:	000f883a 	mov	r7,zero
    52ac:	01800284 	movi	r6,10
    52b0:	e009883a 	mov	r4,fp
    52b4:	0006bbc0 	call	6bbc <__multadd>
    52b8:	102b883a 	mov	r21,r2
    52bc:	000f883a 	mov	r7,zero
    52c0:	01800284 	movi	r6,10
    52c4:	800b883a 	mov	r5,r16
    52c8:	e009883a 	mov	r4,fp
    52cc:	84c02026 	beq	r16,r19,5350 <_dtoa_r+0xf4c>
    52d0:	0006bbc0 	call	6bbc <__multadd>
    52d4:	980b883a 	mov	r5,r19
    52d8:	000f883a 	mov	r7,zero
    52dc:	01800284 	movi	r6,10
    52e0:	e009883a 	mov	r4,fp
    52e4:	1021883a 	mov	r16,r2
    52e8:	0006bbc0 	call	6bbc <__multadd>
    52ec:	1027883a 	mov	r19,r2
    52f0:	b823883a 	mov	r17,r23
    52f4:	900b883a 	mov	r5,r18
    52f8:	a809883a 	mov	r4,r21
    52fc:	00041d00 	call	41d0 <quorem>
    5300:	800b883a 	mov	r5,r16
    5304:	a809883a 	mov	r4,r21
    5308:	102d883a 	mov	r22,r2
    530c:	00073f40 	call	73f4 <__mcmp>
    5310:	980d883a 	mov	r6,r19
    5314:	900b883a 	mov	r5,r18
    5318:	e009883a 	mov	r4,fp
    531c:	1029883a 	mov	r20,r2
    5320:	000744c0 	call	744c <__mdiff>
    5324:	102f883a 	mov	r23,r2
    5328:	10800317 	ldw	r2,12(r2)
    532c:	b2000c04 	addi	r8,r22,48
    5330:	103fc426 	beq	r2,zero,5244 <_dtoa_r+0xe40>
    5334:	b80b883a 	mov	r5,r23
    5338:	e009883a 	mov	r4,fp
    533c:	da000115 	stw	r8,4(sp)
    5340:	0006b980 	call	6b98 <_Bfree>
    5344:	00800044 	movi	r2,1
    5348:	da000117 	ldw	r8,4(sp)
    534c:	003fca06 	br	5278 <_dtoa_r+0xe74>
    5350:	0006bbc0 	call	6bbc <__multadd>
    5354:	1021883a 	mov	r16,r2
    5358:	1027883a 	mov	r19,r2
    535c:	003fe406 	br	52f0 <_dtoa_r+0xeec>
    5360:	d8800217 	ldw	r2,8(sp)
    5364:	108000d0 	cmplti	r2,r2,3
    5368:	10004b1e 	bne	r2,zero,5498 <_dtoa_r+0x1094>
    536c:	d8800617 	ldw	r2,24(sp)
    5370:	103e0d1e 	bne	r2,zero,4ba8 <_dtoa_r+0x7a4>
    5374:	900b883a 	mov	r5,r18
    5378:	e009883a 	mov	r4,fp
    537c:	000f883a 	mov	r7,zero
    5380:	01800144 	movi	r6,5
    5384:	0006bbc0 	call	6bbc <__multadd>
    5388:	100b883a 	mov	r5,r2
    538c:	a809883a 	mov	r4,r21
    5390:	1025883a 	mov	r18,r2
    5394:	00073f40 	call	73f4 <__mcmp>
    5398:	00be030e 	bge	zero,r2,4ba8 <_dtoa_r+0x7a4>
    539c:	d8c00317 	ldw	r3,12(sp)
    53a0:	00800c44 	movi	r2,49
    53a4:	18800005 	stb	r2,0(r3)
    53a8:	d8800417 	ldw	r2,16(sp)
    53ac:	1dc00044 	addi	r23,r3,1
    53b0:	14400044 	addi	r17,r2,1
    53b4:	900b883a 	mov	r5,r18
    53b8:	e009883a 	mov	r4,fp
    53bc:	0006b980 	call	6b98 <_Bfree>
    53c0:	88800044 	addi	r2,r17,1
    53c4:	d8800415 	stw	r2,16(sp)
    53c8:	803f121e 	bne	r16,zero,5014 <_dtoa_r+0xc10>
    53cc:	003d9f06 	br	4a4c <_dtoa_r+0x648>
    53d0:	900b883a 	mov	r5,r18
    53d4:	a809883a 	mov	r4,r21
    53d8:	00073f40 	call	73f4 <__mcmp>
    53dc:	103ed10e 	bge	r2,zero,4f24 <_dtoa_r+0xb20>
    53e0:	a80b883a 	mov	r5,r21
    53e4:	000f883a 	mov	r7,zero
    53e8:	01800284 	movi	r6,10
    53ec:	e009883a 	mov	r4,fp
    53f0:	0006bbc0 	call	6bbc <__multadd>
    53f4:	102b883a 	mov	r21,r2
    53f8:	d8800417 	ldw	r2,16(sp)
    53fc:	153fffc4 	addi	r20,r2,-1
    5400:	d8800717 	ldw	r2,28(sp)
    5404:	103f771e 	bne	r2,zero,51e4 <_dtoa_r+0xde0>
    5408:	d8800b17 	ldw	r2,44(sp)
    540c:	0081910e 	bge	zero,r2,5a54 <_dtoa_r+0x1650>
    5410:	d8800615 	stw	r2,24(sp)
    5414:	003eca06 	br	4f40 <_dtoa_r+0xb3c>
    5418:	d9800817 	ldw	r6,32(sp)
    541c:	a80b883a 	mov	r5,r21
    5420:	e009883a 	mov	r4,fp
    5424:	00071900 	call	7190 <__pow5mult>
    5428:	102b883a 	mov	r21,r2
    542c:	003e9a06 	br	4e98 <_dtoa_r+0xa94>
    5430:	00800074 	movhi	r2,1
    5434:	1007883a 	mov	r3,r2
    5438:	18ffa304 	addi	r3,r3,-372
    543c:	00800074 	movhi	r2,1
    5440:	d8c00315 	stw	r3,12(sp)
    5444:	10bfa3c4 	addi	r2,r2,-369
    5448:	003da506 	br	4ae0 <_dtoa_r+0x6dc>
    544c:	d8800117 	ldw	r2,4(sp)
    5450:	103e991e 	bne	r2,zero,4eb8 <_dtoa_r+0xab4>
    5454:	00800434 	movhi	r2,16
    5458:	10bfffc4 	addi	r2,r2,-1
    545c:	8884703a 	and	r2,r17,r2
    5460:	103e951e 	bne	r2,zero,4eb8 <_dtoa_r+0xab4>
    5464:	8c5ffc2c 	andhi	r17,r17,32752
    5468:	883e9326 	beq	r17,zero,4eb8 <_dtoa_r+0xab4>
    546c:	d8800517 	ldw	r2,20(sp)
    5470:	a5000044 	addi	r20,r20,1
    5474:	04400044 	movi	r17,1
    5478:	10800044 	addi	r2,r2,1
    547c:	d8800515 	stw	r2,20(sp)
    5480:	003e8e06 	br	4ebc <_dtoa_r+0xab8>
    5484:	00800044 	movi	r2,1
    5488:	04800044 	movi	r18,1
    548c:	d8800615 	stw	r2,24(sp)
    5490:	d8801e15 	stw	r2,120(sp)
    5494:	003ef406 	br	5068 <_dtoa_r+0xc64>
    5498:	d8800417 	ldw	r2,16(sp)
    549c:	10800044 	addi	r2,r2,1
    54a0:	d8800415 	stw	r2,16(sp)
    54a4:	d8800717 	ldw	r2,28(sp)
    54a8:	103f571e 	bne	r2,zero,5208 <_dtoa_r+0xe04>
    54ac:	900b883a 	mov	r5,r18
    54b0:	a809883a 	mov	r4,r21
    54b4:	00041d00 	call	41d0 <quorem>
    54b8:	12000c04 	addi	r8,r2,48
    54bc:	d8800317 	ldw	r2,12(sp)
    54c0:	0029883a 	mov	r20,zero
    54c4:	15c00044 	addi	r23,r2,1
    54c8:	12000005 	stb	r8,0(r2)
    54cc:	003eb006 	br	4f90 <_dtoa_r+0xb8c>
    54d0:	a005883a 	mov	r2,r20
    54d4:	003e5506 	br	4e2c <_dtoa_r+0xa28>
    54d8:	800b883a 	mov	r5,r16
    54dc:	980d883a 	mov	r6,r19
    54e0:	e009883a 	mov	r4,fp
    54e4:	00072b80 	call	72b8 <__lshift>
    54e8:	1021883a 	mov	r16,r2
    54ec:	003f4706 	br	520c <_dtoa_r+0xe08>
    54f0:	14a5c83a 	sub	r18,r2,r18
    54f4:	003e3e06 	br	4df0 <_dtoa_r+0x9ec>
    54f8:	00800074 	movhi	r2,1
    54fc:	10bfb404 	addi	r2,r2,-304
    5500:	11800817 	ldw	r6,32(r2)
    5504:	11c00917 	ldw	r7,36(r2)
    5508:	d9000117 	ldw	r4,4(sp)
    550c:	880b883a 	mov	r5,r17
    5510:	da400e15 	stw	r9,56(sp)
    5514:	da800d15 	stw	r10,52(sp)
    5518:	000b5700 	call	b570 <__divdf3>
    551c:	d8800c15 	stw	r2,48(sp)
    5520:	1827883a 	mov	r19,r3
    5524:	bdc003cc 	andi	r23,r23,15
    5528:	040000c4 	movi	r16,3
    552c:	da800d17 	ldw	r10,52(sp)
    5530:	da400e17 	ldw	r9,56(sp)
    5534:	003c9206 	br	4780 <_dtoa_r+0x37c>
    5538:	d8000715 	stw	zero,28(sp)
    553c:	003ed306 	br	508c <_dtoa_r+0xc88>
    5540:	1000031e 	bne	r2,zero,5550 <_dtoa_r+0x114c>
    5544:	da000117 	ldw	r8,4(sp)
    5548:	4200004c 	andi	r8,r8,1
    554c:	403e9b1e 	bne	r8,zero,4fbc <_dtoa_r+0xbb8>
    5550:	1805883a 	mov	r2,r3
    5554:	00000206 	br	5560 <_dtoa_r+0x115c>
    5558:	b8bfff83 	ldbu	r2,-2(r23)
    555c:	182f883a 	mov	r23,r3
    5560:	10803fcc 	andi	r2,r2,255
    5564:	1080201c 	xori	r2,r2,128
    5568:	10bfe004 	addi	r2,r2,-128
    556c:	10800c18 	cmpnei	r2,r2,48
    5570:	b8ffffc4 	addi	r3,r23,-1
    5574:	103ff826 	beq	r2,zero,5558 <_dtoa_r+0x1154>
    5578:	003e9d06 	br	4ff0 <_dtoa_r+0xbec>
    557c:	d8c00a17 	ldw	r3,40(sp)
    5580:	1800bc26 	beq	r3,zero,5874 <_dtoa_r+0x1470>
    5584:	d8c00517 	ldw	r3,20(sp)
    5588:	10810cc4 	addi	r2,r2,1075
    558c:	a0a9883a 	add	r20,r20,r2
    5590:	1885883a 	add	r2,r3,r2
    5594:	1827883a 	mov	r19,r3
    5598:	dc800817 	ldw	r18,32(sp)
    559c:	d8800515 	stw	r2,20(sp)
    55a0:	003e1a06 	br	4e0c <_dtoa_r+0xa08>
    55a4:	d8c00317 	ldw	r3,12(sp)
    55a8:	00800c44 	movi	r2,49
    55ac:	18800005 	stb	r2,0(r3)
    55b0:	d8800417 	ldw	r2,16(sp)
    55b4:	10800044 	addi	r2,r2,1
    55b8:	d8800415 	stw	r2,16(sp)
    55bc:	003e8c06 	br	4ff0 <_dtoa_r+0xbec>
    55c0:	8009883a 	mov	r4,r16
    55c4:	000d3540 	call	d354 <__floatsidf>
    55c8:	900d883a 	mov	r6,r18
    55cc:	980f883a 	mov	r7,r19
    55d0:	1009883a 	mov	r4,r2
    55d4:	180b883a 	mov	r5,r3
    55d8:	000c1340 	call	c134 <__muldf3>
    55dc:	000d883a 	mov	r6,zero
    55e0:	01d00734 	movhi	r7,16412
    55e4:	1009883a 	mov	r4,r2
    55e8:	180b883a 	mov	r5,r3
    55ec:	000abd00 	call	abd0 <__adddf3>
    55f0:	d8800c15 	stw	r2,48(sp)
    55f4:	00bf3034 	movhi	r2,64704
    55f8:	1885883a 	add	r2,r3,r2
    55fc:	d8800d15 	stw	r2,52(sp)
    5600:	9009883a 	mov	r4,r18
    5604:	980b883a 	mov	r5,r19
    5608:	000d883a 	mov	r6,zero
    560c:	01d00534 	movhi	r7,16404
    5610:	000c9140 	call	c914 <__subdf3>
    5614:	ddc00c17 	ldw	r23,48(sp)
    5618:	dcc00d17 	ldw	r19,52(sp)
    561c:	1009883a 	mov	r4,r2
    5620:	b80d883a 	mov	r6,r23
    5624:	980f883a 	mov	r7,r19
    5628:	180b883a 	mov	r5,r3
    562c:	1025883a 	mov	r18,r2
    5630:	1821883a 	mov	r16,r3
    5634:	000bf540 	call	bf54 <__gedf2>
    5638:	0080ee16 	blt	zero,r2,59f4 <_dtoa_r+0x15f0>
    563c:	99e0003c 	xorhi	r7,r19,32768
    5640:	b80d883a 	mov	r6,r23
    5644:	9009883a 	mov	r4,r18
    5648:	800b883a 	mov	r5,r16
    564c:	000c0440 	call	c044 <__ledf2>
    5650:	103d380e 	bge	r2,zero,4b34 <_dtoa_r+0x730>
    5654:	0025883a 	mov	r18,zero
    5658:	0021883a 	mov	r16,zero
    565c:	003d5206 	br	4ba8 <_dtoa_r+0x7a4>
    5660:	d8800417 	ldw	r2,16(sp)
    5664:	1000ad1e 	bne	r2,zero,591c <_dtoa_r+0x1518>
    5668:	dc800117 	ldw	r18,4(sp)
    566c:	8827883a 	mov	r19,r17
    5670:	04000084 	movi	r16,2
    5674:	003c5b06 	br	47e4 <_dtoa_r+0x3e0>
    5678:	d8800117 	ldw	r2,4(sp)
    567c:	103ecf1e 	bne	r2,zero,51bc <_dtoa_r+0xdb8>
    5680:	00800434 	movhi	r2,16
    5684:	10bfffc4 	addi	r2,r2,-1
    5688:	8884703a 	and	r2,r17,r2
    568c:	103f7526 	beq	r2,zero,5464 <_dtoa_r+0x1060>
    5690:	003eca06 	br	51bc <_dtoa_r+0xdb8>
    5694:	00800e0e 	bge	zero,r2,56d0 <_dtoa_r+0x12cc>
    5698:	a80b883a 	mov	r5,r21
    569c:	01800044 	movi	r6,1
    56a0:	e009883a 	mov	r4,fp
    56a4:	da000115 	stw	r8,4(sp)
    56a8:	00072b80 	call	72b8 <__lshift>
    56ac:	900b883a 	mov	r5,r18
    56b0:	1009883a 	mov	r4,r2
    56b4:	102b883a 	mov	r21,r2
    56b8:	00073f40 	call	73f4 <__mcmp>
    56bc:	da000117 	ldw	r8,4(sp)
    56c0:	0080d50e 	bge	zero,r2,5a18 <_dtoa_r+0x1614>
    56c4:	42000e60 	cmpeqi	r8,r8,57
    56c8:	4000c31e 	bne	r8,zero,59d8 <_dtoa_r+0x15d4>
    56cc:	b2000c44 	addi	r8,r22,49
    56d0:	8029883a 	mov	r20,r16
    56d4:	8a000005 	stb	r8,0(r17)
    56d8:	9821883a 	mov	r16,r19
    56dc:	003e4406 	br	4ff0 <_dtoa_r+0xbec>
    56e0:	81400117 	ldw	r5,4(r16)
    56e4:	e009883a 	mov	r4,fp
    56e8:	0006af40 	call	6af4 <_Balloc>
    56ec:	81800417 	ldw	r6,16(r16)
    56f0:	81400304 	addi	r5,r16,12
    56f4:	11000304 	addi	r4,r2,12
    56f8:	31800084 	addi	r6,r6,2
    56fc:	300c90ba 	slli	r6,r6,2
    5700:	1023883a 	mov	r17,r2
    5704:	00013980 	call	1398 <memcpy>
    5708:	01800044 	movi	r6,1
    570c:	880b883a 	mov	r5,r17
    5710:	e009883a 	mov	r4,fp
    5714:	00072b80 	call	72b8 <__lshift>
    5718:	1027883a 	mov	r19,r2
    571c:	003ebd06 	br	5214 <_dtoa_r+0xe10>
    5720:	dd400117 	ldw	r21,4(sp)
    5724:	003cc906 	br	4a4c <_dtoa_r+0x648>
    5728:	d8800517 	ldw	r2,20(sp)
    572c:	d8c00617 	ldw	r3,24(sp)
    5730:	10e7c83a 	sub	r19,r2,r3
    5734:	003db506 	br	4e0c <_dtoa_r+0xa08>
    5738:	40800e58 	cmpnei	r2,r8,57
    573c:	1000a626 	beq	r2,zero,59d8 <_dtoa_r+0x15d4>
    5740:	42000044 	addi	r8,r8,1
    5744:	003fe206 	br	56d0 <_dtoa_r+0x12cc>
    5748:	8029883a 	mov	r20,r16
    574c:	9821883a 	mov	r16,r19
    5750:	003e0f06 	br	4f90 <_dtoa_r+0xb8c>
    5754:	d9000c17 	ldw	r4,48(sp)
    5758:	d9400d17 	ldw	r5,52(sp)
    575c:	da401015 	stw	r9,64(sp)
    5760:	000c1340 	call	c134 <__muldf3>
    5764:	d9000e17 	ldw	r4,56(sp)
    5768:	d8c00d15 	stw	r3,52(sp)
    576c:	da401017 	ldw	r9,64(sp)
    5770:	d8c00317 	ldw	r3,12(sp)
    5774:	d8800c15 	stw	r2,48(sp)
    5778:	20800058 	cmpnei	r2,r4,1
    577c:	1a400005 	stb	r9,0(r3)
    5780:	1907883a 	add	r3,r3,r4
    5784:	1809883a 	mov	r4,r3
    5788:	10001d26 	beq	r2,zero,5800 <_dtoa_r+0x13fc>
    578c:	8007883a 	mov	r3,r16
    5790:	9005883a 	mov	r2,r18
    5794:	dc400e15 	stw	r17,56(sp)
    5798:	2021883a 	mov	r16,r4
    579c:	000d883a 	mov	r6,zero
    57a0:	01d00934 	movhi	r7,16420
    57a4:	1009883a 	mov	r4,r2
    57a8:	180b883a 	mov	r5,r3
    57ac:	000c1340 	call	c134 <__muldf3>
    57b0:	180b883a 	mov	r5,r3
    57b4:	1009883a 	mov	r4,r2
    57b8:	1825883a 	mov	r18,r3
    57bc:	1023883a 	mov	r17,r2
    57c0:	000d2d40 	call	d2d4 <__fixdfsi>
    57c4:	1009883a 	mov	r4,r2
    57c8:	1027883a 	mov	r19,r2
    57cc:	000d3540 	call	d354 <__floatsidf>
    57d0:	100d883a 	mov	r6,r2
    57d4:	180f883a 	mov	r7,r3
    57d8:	8809883a 	mov	r4,r17
    57dc:	900b883a 	mov	r5,r18
    57e0:	bdc00044 	addi	r23,r23,1
    57e4:	9cc00c04 	addi	r19,r19,48
    57e8:	000c9140 	call	c914 <__subdf3>
    57ec:	bcffffc5 	stb	r19,-1(r23)
    57f0:	bc3fea1e 	bne	r23,r16,579c <_dtoa_r+0x1398>
    57f4:	dc400e17 	ldw	r17,56(sp)
    57f8:	1025883a 	mov	r18,r2
    57fc:	1821883a 	mov	r16,r3
    5800:	d9000c17 	ldw	r4,48(sp)
    5804:	d9400d17 	ldw	r5,52(sp)
    5808:	000d883a 	mov	r6,zero
    580c:	01cff834 	movhi	r7,16352
    5810:	000abd00 	call	abd0 <__adddf3>
    5814:	100d883a 	mov	r6,r2
    5818:	180f883a 	mov	r7,r3
    581c:	9009883a 	mov	r4,r18
    5820:	800b883a 	mov	r5,r16
    5824:	000bf540 	call	bf54 <__gedf2>
    5828:	00807516 	blt	zero,r2,5a00 <_dtoa_r+0x15fc>
    582c:	d9800c17 	ldw	r6,48(sp)
    5830:	d9c00d17 	ldw	r7,52(sp)
    5834:	0009883a 	mov	r4,zero
    5838:	014ff834 	movhi	r5,16352
    583c:	000c9140 	call	c914 <__subdf3>
    5840:	100d883a 	mov	r6,r2
    5844:	180f883a 	mov	r7,r3
    5848:	9009883a 	mov	r4,r18
    584c:	800b883a 	mov	r5,r16
    5850:	000c0440 	call	c044 <__ledf2>
    5854:	103cb70e 	bge	r2,zero,4b34 <_dtoa_r+0x730>
    5858:	00000106 	br	5860 <_dtoa_r+0x145c>
    585c:	182f883a 	mov	r23,r3
    5860:	b8bfffc7 	ldb	r2,-1(r23)
    5864:	b8ffffc4 	addi	r3,r23,-1
    5868:	10800c20 	cmpeqi	r2,r2,48
    586c:	103ffb1e 	bne	r2,zero,585c <_dtoa_r+0x1458>
    5870:	003c7306 	br	4a40 <_dtoa_r+0x63c>
    5874:	d8c01217 	ldw	r3,72(sp)
    5878:	d9000517 	ldw	r4,20(sp)
    587c:	00800d84 	movi	r2,54
    5880:	10c5c83a 	sub	r2,r2,r3
    5884:	a0a9883a 	add	r20,r20,r2
    5888:	2085883a 	add	r2,r4,r2
    588c:	2027883a 	mov	r19,r4
    5890:	dc800817 	ldw	r18,32(sp)
    5894:	d8800515 	stw	r2,20(sp)
    5898:	003d5c06 	br	4e0c <_dtoa_r+0xa08>
    589c:	d8800617 	ldw	r2,24(sp)
    58a0:	103f4726 	beq	r2,zero,55c0 <_dtoa_r+0x11bc>
    58a4:	ddc00b17 	ldw	r23,44(sp)
    58a8:	05fca20e 	bge	zero,r23,4b34 <_dtoa_r+0x730>
    58ac:	980b883a 	mov	r5,r19
    58b0:	000d883a 	mov	r6,zero
    58b4:	01d00934 	movhi	r7,16420
    58b8:	9009883a 	mov	r4,r18
    58bc:	000c1340 	call	c134 <__muldf3>
    58c0:	81000044 	addi	r4,r16,1
    58c4:	1025883a 	mov	r18,r2
    58c8:	1827883a 	mov	r19,r3
    58cc:	000d3540 	call	d354 <__floatsidf>
    58d0:	900d883a 	mov	r6,r18
    58d4:	980f883a 	mov	r7,r19
    58d8:	1009883a 	mov	r4,r2
    58dc:	180b883a 	mov	r5,r3
    58e0:	000c1340 	call	c134 <__muldf3>
    58e4:	000d883a 	mov	r6,zero
    58e8:	01d00734 	movhi	r7,16412
    58ec:	1009883a 	mov	r4,r2
    58f0:	180b883a 	mov	r5,r3
    58f4:	000abd00 	call	abd0 <__adddf3>
    58f8:	d8800c15 	stw	r2,48(sp)
    58fc:	d8800417 	ldw	r2,16(sp)
    5900:	ddc00e15 	stw	r23,56(sp)
    5904:	10bfffc4 	addi	r2,r2,-1
    5908:	d8800f15 	stw	r2,60(sp)
    590c:	00bf3034 	movhi	r2,64704
    5910:	1885883a 	add	r2,r3,r2
    5914:	d8800d15 	stw	r2,52(sp)
    5918:	003bd006 	br	485c <_dtoa_r+0x458>
    591c:	d8800417 	ldw	r2,16(sp)
    5920:	d9000117 	ldw	r4,4(sp)
    5924:	880b883a 	mov	r5,r17
    5928:	00afc83a 	sub	r23,zero,r2
    592c:	b88003cc 	andi	r2,r23,15
    5930:	100690fa 	slli	r3,r2,3
    5934:	00800074 	movhi	r2,1
    5938:	10bfbe04 	addi	r2,r2,-264
    593c:	10c5883a 	add	r2,r2,r3
    5940:	11800017 	ldw	r6,0(r2)
    5944:	11c00117 	ldw	r7,4(r2)
    5948:	b82fd13a 	srai	r23,r23,4
    594c:	000c1340 	call	c134 <__muldf3>
    5950:	1025883a 	mov	r18,r2
    5954:	1827883a 	mov	r19,r3
    5958:	b8004a26 	beq	r23,zero,5a84 <_dtoa_r+0x1680>
    595c:	02000074 	movhi	r8,1
    5960:	04000084 	movi	r16,2
    5964:	423fb404 	addi	r8,r8,-304
    5968:	dc400c15 	stw	r17,48(sp)
    596c:	000f883a 	mov	r7,zero
    5970:	8023883a 	mov	r17,r16
    5974:	4021883a 	mov	r16,r8
    5978:	b980004c 	andi	r6,r23,1
    597c:	1009883a 	mov	r4,r2
    5980:	b82fd07a 	srai	r23,r23,1
    5984:	180b883a 	mov	r5,r3
    5988:	30000526 	beq	r6,zero,59a0 <_dtoa_r+0x159c>
    598c:	81c00117 	ldw	r7,4(r16)
    5990:	81800017 	ldw	r6,0(r16)
    5994:	8c400044 	addi	r17,r17,1
    5998:	000c1340 	call	c134 <__muldf3>
    599c:	01c00044 	movi	r7,1
    59a0:	84000204 	addi	r16,r16,8
    59a4:	b83ff41e 	bne	r23,zero,5978 <_dtoa_r+0x1574>
    59a8:	39c03fcc 	andi	r7,r7,255
    59ac:	8821883a 	mov	r16,r17
    59b0:	dc400c17 	ldw	r17,48(sp)
    59b4:	383b8b26 	beq	r7,zero,47e4 <_dtoa_r+0x3e0>
    59b8:	1025883a 	mov	r18,r2
    59bc:	1827883a 	mov	r19,r3
    59c0:	003b8806 	br	47e4 <_dtoa_r+0x3e0>
    59c4:	d8800417 	ldw	r2,16(sp)
    59c8:	02000c44 	movi	r8,49
    59cc:	10800044 	addi	r2,r2,1
    59d0:	d8800415 	stw	r2,16(sp)
    59d4:	003cf606 	br	4db0 <_dtoa_r+0x9ac>
    59d8:	00800e44 	movi	r2,57
    59dc:	8029883a 	mov	r20,r16
    59e0:	88800005 	stb	r2,0(r17)
    59e4:	9821883a 	mov	r16,r19
    59e8:	00c00e44 	movi	r3,57
    59ec:	d9400317 	ldw	r5,12(sp)
    59f0:	003d7706 	br	4fd0 <_dtoa_r+0xbcc>
    59f4:	0025883a 	mov	r18,zero
    59f8:	0021883a 	mov	r16,zero
    59fc:	003e6706 	br	539c <_dtoa_r+0xf98>
    5a00:	d8800f17 	ldw	r2,60(sp)
    5a04:	ba3fffc3 	ldbu	r8,-1(r23)
    5a08:	d9000317 	ldw	r4,12(sp)
    5a0c:	10800044 	addi	r2,r2,1
    5a10:	d8800415 	stw	r2,16(sp)
    5a14:	003cdf06 	br	4d94 <_dtoa_r+0x990>
    5a18:	103f2d1e 	bne	r2,zero,56d0 <_dtoa_r+0x12cc>
    5a1c:	4080004c 	andi	r2,r8,1
    5a20:	103f281e 	bne	r2,zero,56c4 <_dtoa_r+0x12c0>
    5a24:	003f2a06 	br	56d0 <_dtoa_r+0x12cc>
    5a28:	d8800f17 	ldw	r2,60(sp)
    5a2c:	8811883a 	mov	r8,r17
    5a30:	d9000317 	ldw	r4,12(sp)
    5a34:	10800044 	addi	r2,r2,1
    5a38:	d8800415 	stw	r2,16(sp)
    5a3c:	003cd506 	br	4d94 <_dtoa_r+0x990>
    5a40:	40800e60 	cmpeqi	r2,r8,57
    5a44:	8dc00044 	addi	r23,r17,1
    5a48:	103fe31e 	bne	r2,zero,59d8 <_dtoa_r+0x15d4>
    5a4c:	053f1f16 	blt	zero,r20,56cc <_dtoa_r+0x12c8>
    5a50:	003f1f06 	br	56d0 <_dtoa_r+0x12cc>
    5a54:	d8800217 	ldw	r2,8(sp)
    5a58:	108000c8 	cmpgei	r2,r2,3
    5a5c:	103e9326 	beq	r2,zero,54ac <_dtoa_r+0x10a8>
    5a60:	d8800b17 	ldw	r2,44(sp)
    5a64:	dd000415 	stw	r20,16(sp)
    5a68:	d8800615 	stw	r2,24(sp)
    5a6c:	003e3f06 	br	536c <_dtoa_r+0xf68>
    5a70:	d8800217 	ldw	r2,8(sp)
    5a74:	108000c8 	cmpgei	r2,r2,3
    5a78:	103ff91e 	bne	r2,zero,5a60 <_dtoa_r+0x165c>
    5a7c:	d8800b17 	ldw	r2,44(sp)
    5a80:	003de006 	br	5204 <_dtoa_r+0xe00>
    5a84:	04000084 	movi	r16,2
    5a88:	003b5606 	br	47e4 <_dtoa_r+0x3e0>
    5a8c:	d8800f17 	ldw	r2,60(sp)
    5a90:	d9000317 	ldw	r4,12(sp)
    5a94:	10800044 	addi	r2,r2,1
    5a98:	d8800415 	stw	r2,16(sp)
    5a9c:	003cbd06 	br	4d94 <_dtoa_r+0x990>
    5aa0:	00800074 	movhi	r2,1
    5aa4:	10bfa404 	addi	r2,r2,-368
    5aa8:	d8800315 	stw	r2,12(sp)
    5aac:	003a8706 	br	44cc <_dtoa_r+0xc8>
    5ab0:	000b883a 	mov	r5,zero
    5ab4:	003b1b06 	br	4724 <_dtoa_r+0x320>
    5ab8:	18c00120 	cmpeqi	r3,r3,4
    5abc:	183d0f1e 	bne	r3,zero,4efc <_dtoa_r+0xaf8>
    5ac0:	00c00f04 	movi	r3,60
    5ac4:	1885c83a 	sub	r2,r3,r2
    5ac8:	003d0706 	br	4ee8 <_dtoa_r+0xae4>

00005acc <_fclose_r>:
    5acc:	defffc04 	addi	sp,sp,-16
    5ad0:	dfc00315 	stw	ra,12(sp)
    5ad4:	dc800215 	stw	r18,8(sp)
    5ad8:	dc400115 	stw	r17,4(sp)
    5adc:	dc000015 	stw	r16,0(sp)
    5ae0:	28000726 	beq	r5,zero,5b00 <_fclose_r+0x34>
    5ae4:	2023883a 	mov	r17,r4
    5ae8:	2821883a 	mov	r16,r5
    5aec:	20000226 	beq	r4,zero,5af8 <_fclose_r+0x2c>
    5af0:	20800e17 	ldw	r2,56(r4)
    5af4:	10002726 	beq	r2,zero,5b94 <_fclose_r+0xc8>
    5af8:	8080030f 	ldh	r2,12(r16)
    5afc:	1000081e 	bne	r2,zero,5b20 <_fclose_r+0x54>
    5b00:	0025883a 	mov	r18,zero
    5b04:	9005883a 	mov	r2,r18
    5b08:	dfc00317 	ldw	ra,12(sp)
    5b0c:	dc800217 	ldw	r18,8(sp)
    5b10:	dc400117 	ldw	r17,4(sp)
    5b14:	dc000017 	ldw	r16,0(sp)
    5b18:	dec00404 	addi	sp,sp,16
    5b1c:	f800283a 	ret
    5b20:	800b883a 	mov	r5,r16
    5b24:	8809883a 	mov	r4,r17
    5b28:	0005bd40 	call	5bd4 <__sflush_r>
    5b2c:	1025883a 	mov	r18,r2
    5b30:	80800b17 	ldw	r2,44(r16)
    5b34:	10000426 	beq	r2,zero,5b48 <_fclose_r+0x7c>
    5b38:	81400717 	ldw	r5,28(r16)
    5b3c:	8809883a 	mov	r4,r17
    5b40:	103ee83a 	callr	r2
    5b44:	10001716 	blt	r2,zero,5ba4 <_fclose_r+0xd8>
    5b48:	8080030b 	ldhu	r2,12(r16)
    5b4c:	1080200c 	andi	r2,r2,128
    5b50:	1000181e 	bne	r2,zero,5bb4 <_fclose_r+0xe8>
    5b54:	81400c17 	ldw	r5,48(r16)
    5b58:	28000526 	beq	r5,zero,5b70 <_fclose_r+0xa4>
    5b5c:	80801004 	addi	r2,r16,64
    5b60:	28800226 	beq	r5,r2,5b6c <_fclose_r+0xa0>
    5b64:	8809883a 	mov	r4,r17
    5b68:	0005fa00 	call	5fa0 <_free_r>
    5b6c:	80000c15 	stw	zero,48(r16)
    5b70:	81401117 	ldw	r5,68(r16)
    5b74:	28000326 	beq	r5,zero,5b84 <_fclose_r+0xb8>
    5b78:	8809883a 	mov	r4,r17
    5b7c:	0005fa00 	call	5fa0 <_free_r>
    5b80:	80001115 	stw	zero,68(r16)
    5b84:	000092c0 	call	92c <__sfp_lock_acquire>
    5b88:	8000030d 	sth	zero,12(r16)
    5b8c:	00009300 	call	930 <__sfp_lock_release>
    5b90:	003fdc06 	br	5b04 <_fclose_r+0x38>
    5b94:	000091c0 	call	91c <__sinit>
    5b98:	8080030f 	ldh	r2,12(r16)
    5b9c:	103fd826 	beq	r2,zero,5b00 <_fclose_r+0x34>
    5ba0:	003fdf06 	br	5b20 <_fclose_r+0x54>
    5ba4:	8080030b 	ldhu	r2,12(r16)
    5ba8:	04bfffc4 	movi	r18,-1
    5bac:	1080200c 	andi	r2,r2,128
    5bb0:	103fe826 	beq	r2,zero,5b54 <_fclose_r+0x88>
    5bb4:	81400417 	ldw	r5,16(r16)
    5bb8:	8809883a 	mov	r4,r17
    5bbc:	0005fa00 	call	5fa0 <_free_r>
    5bc0:	003fe406 	br	5b54 <_fclose_r+0x88>

00005bc4 <fclose>:
    5bc4:	00800074 	movhi	r2,1
    5bc8:	200b883a 	mov	r5,r4
    5bcc:	11075717 	ldw	r4,7516(r2)
    5bd0:	0005acc1 	jmpi	5acc <_fclose_r>

00005bd4 <__sflush_r>:
    5bd4:	2880030b 	ldhu	r2,12(r5)
    5bd8:	defffb04 	addi	sp,sp,-20
    5bdc:	dcc00315 	stw	r19,12(sp)
    5be0:	dc000015 	stw	r16,0(sp)
    5be4:	dfc00415 	stw	ra,16(sp)
    5be8:	dc800215 	stw	r18,8(sp)
    5bec:	dc400115 	stw	r17,4(sp)
    5bf0:	10c0020c 	andi	r3,r2,8
    5bf4:	2821883a 	mov	r16,r5
    5bf8:	2027883a 	mov	r19,r4
    5bfc:	18003f1e 	bne	r3,zero,5cfc <__sflush_r+0x128>
    5c00:	28c00117 	ldw	r3,4(r5)
    5c04:	10820014 	ori	r2,r2,2048
    5c08:	2880030d 	sth	r2,12(r5)
    5c0c:	00c0550e 	bge	zero,r3,5d64 <__sflush_r+0x190>
    5c10:	82000a17 	ldw	r8,40(r16)
    5c14:	40003126 	beq	r8,zero,5cdc <__sflush_r+0x108>
    5c18:	9c400017 	ldw	r17,0(r19)
    5c1c:	1104000c 	andi	r4,r2,4096
    5c20:	98000015 	stw	zero,0(r19)
    5c24:	1007883a 	mov	r3,r2
    5c28:	81400717 	ldw	r5,28(r16)
    5c2c:	2000521e 	bne	r4,zero,5d78 <__sflush_r+0x1a4>
    5c30:	01c00044 	movi	r7,1
    5c34:	000d883a 	mov	r6,zero
    5c38:	9809883a 	mov	r4,r19
    5c3c:	403ee83a 	callr	r8
    5c40:	10ffffd8 	cmpnei	r3,r2,-1
    5c44:	18005826 	beq	r3,zero,5da8 <__sflush_r+0x1d4>
    5c48:	80c0030b 	ldhu	r3,12(r16)
    5c4c:	82000a17 	ldw	r8,40(r16)
    5c50:	81400717 	ldw	r5,28(r16)
    5c54:	18c0010c 	andi	r3,r3,4
    5c58:	18000626 	beq	r3,zero,5c74 <__sflush_r+0xa0>
    5c5c:	81000117 	ldw	r4,4(r16)
    5c60:	80c00c17 	ldw	r3,48(r16)
    5c64:	1105c83a 	sub	r2,r2,r4
    5c68:	18000226 	beq	r3,zero,5c74 <__sflush_r+0xa0>
    5c6c:	80c00f17 	ldw	r3,60(r16)
    5c70:	10c5c83a 	sub	r2,r2,r3
    5c74:	000f883a 	mov	r7,zero
    5c78:	100d883a 	mov	r6,r2
    5c7c:	9809883a 	mov	r4,r19
    5c80:	403ee83a 	callr	r8
    5c84:	10ffffd8 	cmpnei	r3,r2,-1
    5c88:	18003d1e 	bne	r3,zero,5d80 <__sflush_r+0x1ac>
    5c8c:	99000017 	ldw	r4,0(r19)
    5c90:	80c0030b 	ldhu	r3,12(r16)
    5c94:	20004e26 	beq	r4,zero,5dd0 <__sflush_r+0x1fc>
    5c98:	21400760 	cmpeqi	r5,r4,29
    5c9c:	2800021e 	bne	r5,zero,5ca8 <__sflush_r+0xd4>
    5ca0:	210005a0 	cmpeqi	r4,r4,22
    5ca4:	20002c26 	beq	r4,zero,5d58 <__sflush_r+0x184>
    5ca8:	80800417 	ldw	r2,16(r16)
    5cac:	18fdffcc 	andi	r3,r3,63487
    5cb0:	80c0030d 	sth	r3,12(r16)
    5cb4:	80000115 	stw	zero,4(r16)
    5cb8:	80800015 	stw	r2,0(r16)
    5cbc:	81400c17 	ldw	r5,48(r16)
    5cc0:	9c400015 	stw	r17,0(r19)
    5cc4:	28000526 	beq	r5,zero,5cdc <__sflush_r+0x108>
    5cc8:	80801004 	addi	r2,r16,64
    5ccc:	28800226 	beq	r5,r2,5cd8 <__sflush_r+0x104>
    5cd0:	9809883a 	mov	r4,r19
    5cd4:	0005fa00 	call	5fa0 <_free_r>
    5cd8:	80000c15 	stw	zero,48(r16)
    5cdc:	0005883a 	mov	r2,zero
    5ce0:	dfc00417 	ldw	ra,16(sp)
    5ce4:	dcc00317 	ldw	r19,12(sp)
    5ce8:	dc800217 	ldw	r18,8(sp)
    5cec:	dc400117 	ldw	r17,4(sp)
    5cf0:	dc000017 	ldw	r16,0(sp)
    5cf4:	dec00504 	addi	sp,sp,20
    5cf8:	f800283a 	ret
    5cfc:	2c800417 	ldw	r18,16(r5)
    5d00:	903ff626 	beq	r18,zero,5cdc <__sflush_r+0x108>
    5d04:	2c400017 	ldw	r17,0(r5)
    5d08:	108000cc 	andi	r2,r2,3
    5d0c:	2c800015 	stw	r18,0(r5)
    5d10:	8ca3c83a 	sub	r17,r17,r18
    5d14:	1000161e 	bne	r2,zero,5d70 <__sflush_r+0x19c>
    5d18:	28800517 	ldw	r2,20(r5)
    5d1c:	80800215 	stw	r2,8(r16)
    5d20:	04400316 	blt	zero,r17,5d30 <__sflush_r+0x15c>
    5d24:	003fed06 	br	5cdc <__sflush_r+0x108>
    5d28:	90a5883a 	add	r18,r18,r2
    5d2c:	047feb0e 	bge	zero,r17,5cdc <__sflush_r+0x108>
    5d30:	80800917 	ldw	r2,36(r16)
    5d34:	81400717 	ldw	r5,28(r16)
    5d38:	880f883a 	mov	r7,r17
    5d3c:	900d883a 	mov	r6,r18
    5d40:	9809883a 	mov	r4,r19
    5d44:	103ee83a 	callr	r2
    5d48:	88a3c83a 	sub	r17,r17,r2
    5d4c:	00bff616 	blt	zero,r2,5d28 <__sflush_r+0x154>
    5d50:	80c0030b 	ldhu	r3,12(r16)
    5d54:	00bfffc4 	movi	r2,-1
    5d58:	18c01014 	ori	r3,r3,64
    5d5c:	80c0030d 	sth	r3,12(r16)
    5d60:	003fdf06 	br	5ce0 <__sflush_r+0x10c>
    5d64:	28c00f17 	ldw	r3,60(r5)
    5d68:	00ffa916 	blt	zero,r3,5c10 <__sflush_r+0x3c>
    5d6c:	003fdb06 	br	5cdc <__sflush_r+0x108>
    5d70:	0005883a 	mov	r2,zero
    5d74:	003fe906 	br	5d1c <__sflush_r+0x148>
    5d78:	80801417 	ldw	r2,80(r16)
    5d7c:	003fb506 	br	5c54 <__sflush_r+0x80>
    5d80:	80c0030b 	ldhu	r3,12(r16)
    5d84:	81000417 	ldw	r4,16(r16)
    5d88:	80000115 	stw	zero,4(r16)
    5d8c:	197dffcc 	andi	r5,r3,63487
    5d90:	8140030d 	sth	r5,12(r16)
    5d94:	81000015 	stw	r4,0(r16)
    5d98:	18c4000c 	andi	r3,r3,4096
    5d9c:	183fc726 	beq	r3,zero,5cbc <__sflush_r+0xe8>
    5da0:	80801415 	stw	r2,80(r16)
    5da4:	003fc506 	br	5cbc <__sflush_r+0xe8>
    5da8:	98c00017 	ldw	r3,0(r19)
    5dac:	183fa626 	beq	r3,zero,5c48 <__sflush_r+0x74>
    5db0:	19000760 	cmpeqi	r4,r3,29
    5db4:	20000e1e 	bne	r4,zero,5df0 <__sflush_r+0x21c>
    5db8:	18c00598 	cmpnei	r3,r3,22
    5dbc:	18000c26 	beq	r3,zero,5df0 <__sflush_r+0x21c>
    5dc0:	80c0030b 	ldhu	r3,12(r16)
    5dc4:	18c01014 	ori	r3,r3,64
    5dc8:	80c0030d 	sth	r3,12(r16)
    5dcc:	003fc406 	br	5ce0 <__sflush_r+0x10c>
    5dd0:	81000417 	ldw	r4,16(r16)
    5dd4:	197dffcc 	andi	r5,r3,63487
    5dd8:	8140030d 	sth	r5,12(r16)
    5ddc:	80000115 	stw	zero,4(r16)
    5de0:	81000015 	stw	r4,0(r16)
    5de4:	18c4000c 	andi	r3,r3,4096
    5de8:	183fb426 	beq	r3,zero,5cbc <__sflush_r+0xe8>
    5dec:	003fec06 	br	5da0 <__sflush_r+0x1cc>
    5df0:	9c400015 	stw	r17,0(r19)
    5df4:	0005883a 	mov	r2,zero
    5df8:	003fb906 	br	5ce0 <__sflush_r+0x10c>

00005dfc <_fflush_r>:
    5dfc:	defffd04 	addi	sp,sp,-12
    5e00:	dc000115 	stw	r16,4(sp)
    5e04:	dfc00215 	stw	ra,8(sp)
    5e08:	2021883a 	mov	r16,r4
    5e0c:	20000226 	beq	r4,zero,5e18 <_fflush_r+0x1c>
    5e10:	20800e17 	ldw	r2,56(r4)
    5e14:	10000726 	beq	r2,zero,5e34 <_fflush_r+0x38>
    5e18:	2880030f 	ldh	r2,12(r5)
    5e1c:	10000a1e 	bne	r2,zero,5e48 <_fflush_r+0x4c>
    5e20:	0005883a 	mov	r2,zero
    5e24:	dfc00217 	ldw	ra,8(sp)
    5e28:	dc000117 	ldw	r16,4(sp)
    5e2c:	dec00304 	addi	sp,sp,12
    5e30:	f800283a 	ret
    5e34:	d9400015 	stw	r5,0(sp)
    5e38:	000091c0 	call	91c <__sinit>
    5e3c:	d9400017 	ldw	r5,0(sp)
    5e40:	2880030f 	ldh	r2,12(r5)
    5e44:	103ff626 	beq	r2,zero,5e20 <_fflush_r+0x24>
    5e48:	8009883a 	mov	r4,r16
    5e4c:	dfc00217 	ldw	ra,8(sp)
    5e50:	dc000117 	ldw	r16,4(sp)
    5e54:	dec00304 	addi	sp,sp,12
    5e58:	0005bd41 	jmpi	5bd4 <__sflush_r>

00005e5c <fflush>:
    5e5c:	200b883a 	mov	r5,r4
    5e60:	20000326 	beq	r4,zero,5e70 <fflush+0x14>
    5e64:	00800074 	movhi	r2,1
    5e68:	11075717 	ldw	r4,7516(r2)
    5e6c:	0005dfc1 	jmpi	5dfc <_fflush_r>
    5e70:	00800074 	movhi	r2,1
    5e74:	11075617 	ldw	r4,7512(r2)
    5e78:	01400034 	movhi	r5,0
    5e7c:	29577f04 	addi	r5,r5,24060
    5e80:	0000a081 	jmpi	a08 <_fwalk_reent>

00005e84 <_malloc_trim_r>:
    5e84:	defffb04 	addi	sp,sp,-20
    5e88:	dcc00315 	stw	r19,12(sp)
    5e8c:	04c00074 	movhi	r19,1
    5e90:	dc800215 	stw	r18,8(sp)
    5e94:	dc400115 	stw	r17,4(sp)
    5e98:	dc000015 	stw	r16,0(sp)
    5e9c:	dfc00415 	stw	ra,16(sp)
    5ea0:	2821883a 	mov	r16,r5
    5ea4:	9cc17204 	addi	r19,r19,1480
    5ea8:	2025883a 	mov	r18,r4
    5eac:	000dab80 	call	dab8 <__malloc_lock>
    5eb0:	98800217 	ldw	r2,8(r19)
    5eb4:	14400117 	ldw	r17,4(r2)
    5eb8:	00bfff04 	movi	r2,-4
    5ebc:	88a2703a 	and	r17,r17,r2
    5ec0:	8c21c83a 	sub	r16,r17,r16
    5ec4:	8403fbc4 	addi	r16,r16,4079
    5ec8:	8020d33a 	srli	r16,r16,12
    5ecc:	843fffc4 	addi	r16,r16,-1
    5ed0:	8020933a 	slli	r16,r16,12
    5ed4:	80840008 	cmpgei	r2,r16,4096
    5ed8:	10000626 	beq	r2,zero,5ef4 <_malloc_trim_r+0x70>
    5edc:	000b883a 	mov	r5,zero
    5ee0:	9009883a 	mov	r4,r18
    5ee4:	00018b40 	call	18b4 <_sbrk_r>
    5ee8:	98c00217 	ldw	r3,8(r19)
    5eec:	1c47883a 	add	r3,r3,r17
    5ef0:	10c00a26 	beq	r2,r3,5f1c <_malloc_trim_r+0x98>
    5ef4:	9009883a 	mov	r4,r18
    5ef8:	000dadc0 	call	dadc <__malloc_unlock>
    5efc:	0005883a 	mov	r2,zero
    5f00:	dfc00417 	ldw	ra,16(sp)
    5f04:	dcc00317 	ldw	r19,12(sp)
    5f08:	dc800217 	ldw	r18,8(sp)
    5f0c:	dc400117 	ldw	r17,4(sp)
    5f10:	dc000017 	ldw	r16,0(sp)
    5f14:	dec00504 	addi	sp,sp,20
    5f18:	f800283a 	ret
    5f1c:	040bc83a 	sub	r5,zero,r16
    5f20:	9009883a 	mov	r4,r18
    5f24:	00018b40 	call	18b4 <_sbrk_r>
    5f28:	10bfffd8 	cmpnei	r2,r2,-1
    5f2c:	10000d26 	beq	r2,zero,5f64 <_malloc_trim_r+0xe0>
    5f30:	00800074 	movhi	r2,1
    5f34:	108e8c17 	ldw	r2,14896(r2)
    5f38:	98c00217 	ldw	r3,8(r19)
    5f3c:	8c23c83a 	sub	r17,r17,r16
    5f40:	8c400054 	ori	r17,r17,1
    5f44:	1421c83a 	sub	r16,r2,r16
    5f48:	1c400115 	stw	r17,4(r3)
    5f4c:	00800074 	movhi	r2,1
    5f50:	9009883a 	mov	r4,r18
    5f54:	140e8c15 	stw	r16,14896(r2)
    5f58:	000dadc0 	call	dadc <__malloc_unlock>
    5f5c:	00800044 	movi	r2,1
    5f60:	003fe706 	br	5f00 <_malloc_trim_r+0x7c>
    5f64:	000b883a 	mov	r5,zero
    5f68:	9009883a 	mov	r4,r18
    5f6c:	00018b40 	call	18b4 <_sbrk_r>
    5f70:	99000217 	ldw	r4,8(r19)
    5f74:	1107c83a 	sub	r3,r2,r4
    5f78:	19400410 	cmplti	r5,r3,16
    5f7c:	283fdd1e 	bne	r5,zero,5ef4 <_malloc_trim_r+0x70>
    5f80:	01400074 	movhi	r5,1
    5f84:	29475817 	ldw	r5,7520(r5)
    5f88:	18c00054 	ori	r3,r3,1
    5f8c:	20c00115 	stw	r3,4(r4)
    5f90:	1145c83a 	sub	r2,r2,r5
    5f94:	01400074 	movhi	r5,1
    5f98:	288e8c15 	stw	r2,14896(r5)
    5f9c:	003fd506 	br	5ef4 <_malloc_trim_r+0x70>

00005fa0 <_free_r>:
    5fa0:	28004f26 	beq	r5,zero,60e0 <_free_r+0x140>
    5fa4:	defffd04 	addi	sp,sp,-12
    5fa8:	dc400115 	stw	r17,4(sp)
    5fac:	dc000015 	stw	r16,0(sp)
    5fb0:	2023883a 	mov	r17,r4
    5fb4:	2821883a 	mov	r16,r5
    5fb8:	dfc00215 	stw	ra,8(sp)
    5fbc:	000dab80 	call	dab8 <__malloc_lock>
    5fc0:	81ffff17 	ldw	r7,-4(r16)
    5fc4:	00bfff84 	movi	r2,-2
    5fc8:	80fffe04 	addi	r3,r16,-8
    5fcc:	3884703a 	and	r2,r7,r2
    5fd0:	01800074 	movhi	r6,1
    5fd4:	1889883a 	add	r4,r3,r2
    5fd8:	31817204 	addi	r6,r6,1480
    5fdc:	21400117 	ldw	r5,4(r4)
    5fe0:	32000217 	ldw	r8,8(r6)
    5fe4:	027fff04 	movi	r9,-4
    5fe8:	2a4a703a 	and	r5,r5,r9
    5fec:	41006426 	beq	r8,r4,6180 <_free_r+0x1e0>
    5ff0:	21400115 	stw	r5,4(r4)
    5ff4:	39c0004c 	andi	r7,r7,1
    5ff8:	2151883a 	add	r8,r4,r5
    5ffc:	3800281e 	bne	r7,zero,60a0 <_free_r+0x100>
    6000:	82bffe17 	ldw	r10,-8(r16)
    6004:	42000117 	ldw	r8,4(r8)
    6008:	01c00074 	movhi	r7,1
    600c:	1a87c83a 	sub	r3,r3,r10
    6010:	1a400217 	ldw	r9,8(r3)
    6014:	39c17404 	addi	r7,r7,1488
    6018:	1285883a 	add	r2,r2,r10
    601c:	4200004c 	andi	r8,r8,1
    6020:	49c04c26 	beq	r9,r7,6154 <_free_r+0x1b4>
    6024:	1a800317 	ldw	r10,12(r3)
    6028:	4a800315 	stw	r10,12(r9)
    602c:	52400215 	stw	r9,8(r10)
    6030:	40007126 	beq	r8,zero,61f8 <_free_r+0x258>
    6034:	11400054 	ori	r5,r2,1
    6038:	19400115 	stw	r5,4(r3)
    603c:	20800015 	stw	r2,0(r4)
    6040:	11008028 	cmpgeui	r4,r2,512
    6044:	20002c1e 	bne	r4,zero,60f8 <_free_r+0x158>
    6048:	1008d0fa 	srli	r4,r2,3
    604c:	31c00117 	ldw	r7,4(r6)
    6050:	20800044 	addi	r2,r4,1
    6054:	200bd0ba 	srai	r5,r4,2
    6058:	100490fa 	slli	r2,r2,3
    605c:	01000044 	movi	r4,1
    6060:	2148983a 	sll	r4,r4,r5
    6064:	3085883a 	add	r2,r6,r2
    6068:	11400017 	ldw	r5,0(r2)
    606c:	21c8b03a 	or	r4,r4,r7
    6070:	11fffe04 	addi	r7,r2,-8
    6074:	19c00315 	stw	r7,12(r3)
    6078:	19400215 	stw	r5,8(r3)
    607c:	31000115 	stw	r4,4(r6)
    6080:	10c00015 	stw	r3,0(r2)
    6084:	28c00315 	stw	r3,12(r5)
    6088:	8809883a 	mov	r4,r17
    608c:	dfc00217 	ldw	ra,8(sp)
    6090:	dc400117 	ldw	r17,4(sp)
    6094:	dc000017 	ldw	r16,0(sp)
    6098:	dec00304 	addi	sp,sp,12
    609c:	000dadc1 	jmpi	dadc <__malloc_unlock>
    60a0:	41c00117 	ldw	r7,4(r8)
    60a4:	39c0004c 	andi	r7,r7,1
    60a8:	38000e1e 	bne	r7,zero,60e4 <_free_r+0x144>
    60ac:	01c00074 	movhi	r7,1
    60b0:	1145883a 	add	r2,r2,r5
    60b4:	39c17404 	addi	r7,r7,1488
    60b8:	21400217 	ldw	r5,8(r4)
    60bc:	12400054 	ori	r9,r2,1
    60c0:	1891883a 	add	r8,r3,r2
    60c4:	29c05226 	beq	r5,r7,6210 <_free_r+0x270>
    60c8:	21000317 	ldw	r4,12(r4)
    60cc:	29000315 	stw	r4,12(r5)
    60d0:	21400215 	stw	r5,8(r4)
    60d4:	1a400115 	stw	r9,4(r3)
    60d8:	40800015 	stw	r2,0(r8)
    60dc:	003fd806 	br	6040 <_free_r+0xa0>
    60e0:	f800283a 	ret
    60e4:	11400054 	ori	r5,r2,1
    60e8:	817fff15 	stw	r5,-4(r16)
    60ec:	20800015 	stw	r2,0(r4)
    60f0:	11008028 	cmpgeui	r4,r2,512
    60f4:	203fd426 	beq	r4,zero,6048 <_free_r+0xa8>
    60f8:	1008d27a 	srli	r4,r2,9
    60fc:	21400168 	cmpgeui	r5,r4,5
    6100:	2800341e 	bne	r5,zero,61d4 <_free_r+0x234>
    6104:	1008d1ba 	srli	r4,r2,6
    6108:	21c00e44 	addi	r7,r4,57
    610c:	380e90fa 	slli	r7,r7,3
    6110:	21400e04 	addi	r5,r4,56
    6114:	31cf883a 	add	r7,r6,r7
    6118:	39000017 	ldw	r4,0(r7)
    611c:	39fffe04 	addi	r7,r7,-8
    6120:	39004226 	beq	r7,r4,622c <_free_r+0x28c>
    6124:	01bfff04 	movi	r6,-4
    6128:	21400117 	ldw	r5,4(r4)
    612c:	298a703a 	and	r5,r5,r6
    6130:	1140022e 	bgeu	r2,r5,613c <_free_r+0x19c>
    6134:	21000217 	ldw	r4,8(r4)
    6138:	393ffb1e 	bne	r7,r4,6128 <_free_r+0x188>
    613c:	21c00317 	ldw	r7,12(r4)
    6140:	19c00315 	stw	r7,12(r3)
    6144:	19000215 	stw	r4,8(r3)
    6148:	38c00215 	stw	r3,8(r7)
    614c:	20c00315 	stw	r3,12(r4)
    6150:	003fcd06 	br	6088 <_free_r+0xe8>
    6154:	40004d1e 	bne	r8,zero,628c <_free_r+0x2ec>
    6158:	21800317 	ldw	r6,12(r4)
    615c:	21000217 	ldw	r4,8(r4)
    6160:	2885883a 	add	r2,r5,r2
    6164:	11400054 	ori	r5,r2,1
    6168:	21800315 	stw	r6,12(r4)
    616c:	31000215 	stw	r4,8(r6)
    6170:	19400115 	stw	r5,4(r3)
    6174:	1887883a 	add	r3,r3,r2
    6178:	18800015 	stw	r2,0(r3)
    617c:	003fc206 	br	6088 <_free_r+0xe8>
    6180:	39c0004c 	andi	r7,r7,1
    6184:	1145883a 	add	r2,r2,r5
    6188:	3800071e 	bne	r7,zero,61a8 <_free_r+0x208>
    618c:	81fffe17 	ldw	r7,-8(r16)
    6190:	19c7c83a 	sub	r3,r3,r7
    6194:	19000317 	ldw	r4,12(r3)
    6198:	19400217 	ldw	r5,8(r3)
    619c:	11c5883a 	add	r2,r2,r7
    61a0:	29000315 	stw	r4,12(r5)
    61a4:	21400215 	stw	r5,8(r4)
    61a8:	01000074 	movhi	r4,1
    61ac:	11400054 	ori	r5,r2,1
    61b0:	21075917 	ldw	r4,7524(r4)
    61b4:	19400115 	stw	r5,4(r3)
    61b8:	30c00215 	stw	r3,8(r6)
    61bc:	113fb236 	bltu	r2,r4,6088 <_free_r+0xe8>
    61c0:	00800074 	movhi	r2,1
    61c4:	114e8217 	ldw	r5,14856(r2)
    61c8:	8809883a 	mov	r4,r17
    61cc:	0005e840 	call	5e84 <_malloc_trim_r>
    61d0:	003fad06 	br	6088 <_free_r+0xe8>
    61d4:	21400568 	cmpgeui	r5,r4,21
    61d8:	28000926 	beq	r5,zero,6200 <_free_r+0x260>
    61dc:	21401568 	cmpgeui	r5,r4,85
    61e0:	2800191e 	bne	r5,zero,6248 <_free_r+0x2a8>
    61e4:	1008d33a 	srli	r4,r2,12
    61e8:	21c01bc4 	addi	r7,r4,111
    61ec:	21401b84 	addi	r5,r4,110
    61f0:	380e90fa 	slli	r7,r7,3
    61f4:	003fc706 	br	6114 <_free_r+0x174>
    61f8:	1145883a 	add	r2,r2,r5
    61fc:	003fae06 	br	60b8 <_free_r+0x118>
    6200:	21c01704 	addi	r7,r4,92
    6204:	214016c4 	addi	r5,r4,91
    6208:	380e90fa 	slli	r7,r7,3
    620c:	003fc106 	br	6114 <_free_r+0x174>
    6210:	30c00515 	stw	r3,20(r6)
    6214:	30c00415 	stw	r3,16(r6)
    6218:	19c00315 	stw	r7,12(r3)
    621c:	19c00215 	stw	r7,8(r3)
    6220:	1a400115 	stw	r9,4(r3)
    6224:	40800015 	stw	r2,0(r8)
    6228:	003f9706 	br	6088 <_free_r+0xe8>
    622c:	280bd0ba 	srai	r5,r5,2
    6230:	00800044 	movi	r2,1
    6234:	32000117 	ldw	r8,4(r6)
    6238:	114a983a 	sll	r5,r2,r5
    623c:	2a0ab03a 	or	r5,r5,r8
    6240:	31400115 	stw	r5,4(r6)
    6244:	003fbe06 	br	6140 <_free_r+0x1a0>
    6248:	21405568 	cmpgeui	r5,r4,341
    624c:	2800051e 	bne	r5,zero,6264 <_free_r+0x2c4>
    6250:	1008d3fa 	srli	r4,r2,15
    6254:	21c01e04 	addi	r7,r4,120
    6258:	21401dc4 	addi	r5,r4,119
    625c:	380e90fa 	slli	r7,r7,3
    6260:	003fac06 	br	6114 <_free_r+0x174>
    6264:	21015568 	cmpgeui	r4,r4,1365
    6268:	2000051e 	bne	r4,zero,6280 <_free_r+0x2e0>
    626c:	1008d4ba 	srli	r4,r2,18
    6270:	21c01f44 	addi	r7,r4,125
    6274:	21401f04 	addi	r5,r4,124
    6278:	380e90fa 	slli	r7,r7,3
    627c:	003fa506 	br	6114 <_free_r+0x174>
    6280:	01c0fe04 	movi	r7,1016
    6284:	01401f84 	movi	r5,126
    6288:	003fa206 	br	6114 <_free_r+0x174>
    628c:	11400054 	ori	r5,r2,1
    6290:	19400115 	stw	r5,4(r3)
    6294:	20800015 	stw	r2,0(r4)
    6298:	003f7b06 	br	6088 <_free_r+0xe8>

0000629c <__sfvwrite_r>:
    629c:	30800217 	ldw	r2,8(r6)
    62a0:	1000ca26 	beq	r2,zero,65cc <__sfvwrite_r+0x330>
    62a4:	2880030b 	ldhu	r2,12(r5)
    62a8:	defff304 	addi	sp,sp,-52
    62ac:	dd000715 	stw	r20,28(sp)
    62b0:	dc000315 	stw	r16,12(sp)
    62b4:	dfc00c15 	stw	ra,48(sp)
    62b8:	df000b15 	stw	fp,44(sp)
    62bc:	ddc00a15 	stw	r23,40(sp)
    62c0:	dd800915 	stw	r22,36(sp)
    62c4:	dd400815 	stw	r21,32(sp)
    62c8:	dcc00615 	stw	r19,24(sp)
    62cc:	dc800515 	stw	r18,20(sp)
    62d0:	dc400415 	stw	r17,16(sp)
    62d4:	d9000015 	stw	r4,0(sp)
    62d8:	10c0020c 	andi	r3,r2,8
    62dc:	2821883a 	mov	r16,r5
    62e0:	3029883a 	mov	r20,r6
    62e4:	18002426 	beq	r3,zero,6378 <__sfvwrite_r+0xdc>
    62e8:	28c00417 	ldw	r3,16(r5)
    62ec:	18002226 	beq	r3,zero,6378 <__sfvwrite_r+0xdc>
    62f0:	10c0008c 	andi	r3,r2,2
    62f4:	a4400017 	ldw	r17,0(r20)
    62f8:	18002726 	beq	r3,zero,6398 <__sfvwrite_r+0xfc>
    62fc:	80c00917 	ldw	r3,36(r16)
    6300:	80800717 	ldw	r2,28(r16)
    6304:	05600034 	movhi	r21,32768
    6308:	0027883a 	mov	r19,zero
    630c:	0025883a 	mov	r18,zero
    6310:	ad7f0004 	addi	r21,r21,-1024
    6314:	980d883a 	mov	r6,r19
    6318:	100b883a 	mov	r5,r2
    631c:	d9000017 	ldw	r4,0(sp)
    6320:	90001126 	beq	r18,zero,6368 <__sfvwrite_r+0xcc>
    6324:	900f883a 	mov	r7,r18
    6328:	ac80012e 	bgeu	r21,r18,6330 <__sfvwrite_r+0x94>
    632c:	a80f883a 	mov	r7,r21
    6330:	183ee83a 	callr	r3
    6334:	0080a00e 	bge	zero,r2,65b8 <__sfvwrite_r+0x31c>
    6338:	a0c00217 	ldw	r3,8(r20)
    633c:	98a7883a 	add	r19,r19,r2
    6340:	90a5c83a 	sub	r18,r18,r2
    6344:	1885c83a 	sub	r2,r3,r2
    6348:	a0800215 	stw	r2,8(r20)
    634c:	10006426 	beq	r2,zero,64e0 <__sfvwrite_r+0x244>
    6350:	80800717 	ldw	r2,28(r16)
    6354:	80c00917 	ldw	r3,36(r16)
    6358:	980d883a 	mov	r6,r19
    635c:	100b883a 	mov	r5,r2
    6360:	d9000017 	ldw	r4,0(sp)
    6364:	903fef1e 	bne	r18,zero,6324 <__sfvwrite_r+0x88>
    6368:	8cc00017 	ldw	r19,0(r17)
    636c:	8c800117 	ldw	r18,4(r17)
    6370:	8c400204 	addi	r17,r17,8
    6374:	003fe706 	br	6314 <__sfvwrite_r+0x78>
    6378:	d9000017 	ldw	r4,0(sp)
    637c:	800b883a 	mov	r5,r16
    6380:	00040180 	call	4018 <__swsetup_r>
    6384:	1000f81e 	bne	r2,zero,6768 <__sfvwrite_r+0x4cc>
    6388:	8080030b 	ldhu	r2,12(r16)
    638c:	a4400017 	ldw	r17,0(r20)
    6390:	10c0008c 	andi	r3,r2,2
    6394:	183fd91e 	bne	r3,zero,62fc <__sfvwrite_r+0x60>
    6398:	10c0004c 	andi	r3,r2,1
    639c:	84800217 	ldw	r18,8(r16)
    63a0:	87000017 	ldw	fp,0(r16)
    63a4:	18008b1e 	bne	r3,zero,65d4 <__sfvwrite_r+0x338>
    63a8:	00e00034 	movhi	r3,32768
    63ac:	18ffff84 	addi	r3,r3,-2
    63b0:	01200034 	movhi	r4,32768
    63b4:	d8c00115 	stw	r3,4(sp)
    63b8:	20ffffc4 	addi	r3,r4,-1
    63bc:	002d883a 	mov	r22,zero
    63c0:	002f883a 	mov	r23,zero
    63c4:	d8c00215 	stw	r3,8(sp)
    63c8:	b8004126 	beq	r23,zero,64d0 <__sfvwrite_r+0x234>
    63cc:	1100800c 	andi	r4,r2,512
    63d0:	20009126 	beq	r4,zero,6618 <__sfvwrite_r+0x37c>
    63d4:	902b883a 	mov	r21,r18
    63d8:	bc80b836 	bltu	r23,r18,66bc <__sfvwrite_r+0x420>
    63dc:	1101200c 	andi	r4,r2,1152
    63e0:	20002626 	beq	r4,zero,647c <__sfvwrite_r+0x1e0>
    63e4:	84800517 	ldw	r18,20(r16)
    63e8:	81400417 	ldw	r5,16(r16)
    63ec:	b9000044 	addi	r4,r23,1
    63f0:	948d883a 	add	r6,r18,r18
    63f4:	348d883a 	add	r6,r6,r18
    63f8:	3024d7fa 	srli	r18,r6,31
    63fc:	e167c83a 	sub	r19,fp,r5
    6400:	24c9883a 	add	r4,r4,r19
    6404:	91a5883a 	add	r18,r18,r6
    6408:	9025d07a 	srai	r18,r18,1
    640c:	900d883a 	mov	r6,r18
    6410:	9100022e 	bgeu	r18,r4,641c <__sfvwrite_r+0x180>
    6414:	2025883a 	mov	r18,r4
    6418:	200d883a 	mov	r6,r4
    641c:	1081000c 	andi	r2,r2,1024
    6420:	1000bf26 	beq	r2,zero,6720 <__sfvwrite_r+0x484>
    6424:	d9000017 	ldw	r4,0(sp)
    6428:	300b883a 	mov	r5,r6
    642c:	0000abc0 	call	abc <_malloc_r>
    6430:	1000c826 	beq	r2,zero,6754 <__sfvwrite_r+0x4b8>
    6434:	81400417 	ldw	r5,16(r16)
    6438:	980d883a 	mov	r6,r19
    643c:	1009883a 	mov	r4,r2
    6440:	00013980 	call	1398 <memcpy>
    6444:	100f883a 	mov	r7,r2
    6448:	8080030b 	ldhu	r2,12(r16)
    644c:	00fedfc4 	movi	r3,-1153
    6450:	10c4703a 	and	r2,r2,r3
    6454:	10802014 	ori	r2,r2,128
    6458:	8080030d 	sth	r2,12(r16)
    645c:	94c5c83a 	sub	r2,r18,r19
    6460:	3cf9883a 	add	fp,r7,r19
    6464:	84800515 	stw	r18,20(r16)
    6468:	81c00415 	stw	r7,16(r16)
    646c:	87000015 	stw	fp,0(r16)
    6470:	b825883a 	mov	r18,r23
    6474:	80800215 	stw	r2,8(r16)
    6478:	b82b883a 	mov	r21,r23
    647c:	a80d883a 	mov	r6,r21
    6480:	b00b883a 	mov	r5,r22
    6484:	e009883a 	mov	r4,fp
    6488:	00069c80 	call	69c8 <memmove>
    648c:	80800217 	ldw	r2,8(r16)
    6490:	81800017 	ldw	r6,0(r16)
    6494:	b827883a 	mov	r19,r23
    6498:	14a5c83a 	sub	r18,r2,r18
    649c:	354d883a 	add	r6,r6,r21
    64a0:	84800215 	stw	r18,8(r16)
    64a4:	81800015 	stw	r6,0(r16)
    64a8:	002f883a 	mov	r23,zero
    64ac:	a0800217 	ldw	r2,8(r20)
    64b0:	b4ed883a 	add	r22,r22,r19
    64b4:	14e7c83a 	sub	r19,r2,r19
    64b8:	a4c00215 	stw	r19,8(r20)
    64bc:	98000826 	beq	r19,zero,64e0 <__sfvwrite_r+0x244>
    64c0:	8080030b 	ldhu	r2,12(r16)
    64c4:	84800217 	ldw	r18,8(r16)
    64c8:	87000017 	ldw	fp,0(r16)
    64cc:	b83fbf1e 	bne	r23,zero,63cc <__sfvwrite_r+0x130>
    64d0:	8d800017 	ldw	r22,0(r17)
    64d4:	8dc00117 	ldw	r23,4(r17)
    64d8:	8c400204 	addi	r17,r17,8
    64dc:	003fba06 	br	63c8 <__sfvwrite_r+0x12c>
    64e0:	0005883a 	mov	r2,zero
    64e4:	dfc00c17 	ldw	ra,48(sp)
    64e8:	df000b17 	ldw	fp,44(sp)
    64ec:	ddc00a17 	ldw	r23,40(sp)
    64f0:	dd800917 	ldw	r22,36(sp)
    64f4:	dd400817 	ldw	r21,32(sp)
    64f8:	dd000717 	ldw	r20,28(sp)
    64fc:	dcc00617 	ldw	r19,24(sp)
    6500:	dc800517 	ldw	r18,20(sp)
    6504:	dc400417 	ldw	r17,16(sp)
    6508:	dc000317 	ldw	r16,12(sp)
    650c:	dec00d04 	addi	sp,sp,52
    6510:	f800283a 	ret
    6514:	b1c07116 	blt	r22,r7,66dc <__sfvwrite_r+0x440>
    6518:	80800917 	ldw	r2,36(r16)
    651c:	81400717 	ldw	r5,28(r16)
    6520:	d9000017 	ldw	r4,0(sp)
    6524:	b80d883a 	mov	r6,r23
    6528:	103ee83a 	callr	r2
    652c:	1025883a 	mov	r18,r2
    6530:	0080210e 	bge	zero,r2,65b8 <__sfvwrite_r+0x31c>
    6534:	acabc83a 	sub	r21,r21,r18
    6538:	a8006326 	beq	r21,zero,66c8 <__sfvwrite_r+0x42c>
    653c:	00800044 	movi	r2,1
    6540:	a0c00217 	ldw	r3,8(r20)
    6544:	bcaf883a 	add	r23,r23,r18
    6548:	9ca7c83a 	sub	r19,r19,r18
    654c:	1ca5c83a 	sub	r18,r3,r18
    6550:	a4800215 	stw	r18,8(r20)
    6554:	903fe226 	beq	r18,zero,64e0 <__sfvwrite_r+0x244>
    6558:	84800217 	ldw	r18,8(r16)
    655c:	87000017 	ldw	fp,0(r16)
    6560:	98002126 	beq	r19,zero,65e8 <__sfvwrite_r+0x34c>
    6564:	10002426 	beq	r2,zero,65f8 <__sfvwrite_r+0x35c>
    6568:	a805883a 	mov	r2,r21
    656c:	982d883a 	mov	r22,r19
    6570:	14c0012e 	bgeu	r2,r19,6578 <__sfvwrite_r+0x2dc>
    6574:	102d883a 	mov	r22,r2
    6578:	80800417 	ldw	r2,16(r16)
    657c:	81c00517 	ldw	r7,20(r16)
    6580:	173fe42e 	bgeu	r2,fp,6514 <__sfvwrite_r+0x278>
    6584:	3ca5883a 	add	r18,r7,r18
    6588:	95bfe20e 	bge	r18,r22,6514 <__sfvwrite_r+0x278>
    658c:	b80b883a 	mov	r5,r23
    6590:	e009883a 	mov	r4,fp
    6594:	900d883a 	mov	r6,r18
    6598:	00069c80 	call	69c8 <memmove>
    659c:	80800017 	ldw	r2,0(r16)
    65a0:	d9000017 	ldw	r4,0(sp)
    65a4:	800b883a 	mov	r5,r16
    65a8:	1485883a 	add	r2,r2,r18
    65ac:	80800015 	stw	r2,0(r16)
    65b0:	0005dfc0 	call	5dfc <_fflush_r>
    65b4:	103fdf26 	beq	r2,zero,6534 <__sfvwrite_r+0x298>
    65b8:	8080030b 	ldhu	r2,12(r16)
    65bc:	10801014 	ori	r2,r2,64
    65c0:	8080030d 	sth	r2,12(r16)
    65c4:	00bfffc4 	movi	r2,-1
    65c8:	003fc606 	br	64e4 <__sfvwrite_r+0x248>
    65cc:	0005883a 	mov	r2,zero
    65d0:	f800283a 	ret
    65d4:	0027883a 	mov	r19,zero
    65d8:	002b883a 	mov	r21,zero
    65dc:	0005883a 	mov	r2,zero
    65e0:	002f883a 	mov	r23,zero
    65e4:	983fdf1e 	bne	r19,zero,6564 <__sfvwrite_r+0x2c8>
    65e8:	8cc00117 	ldw	r19,4(r17)
    65ec:	8dc00017 	ldw	r23,0(r17)
    65f0:	8c400204 	addi	r17,r17,8
    65f4:	983ffc26 	beq	r19,zero,65e8 <__sfvwrite_r+0x34c>
    65f8:	980d883a 	mov	r6,r19
    65fc:	01400284 	movi	r5,10
    6600:	b809883a 	mov	r4,r23
    6604:	00012b00 	call	12b0 <memchr>
    6608:	10004226 	beq	r2,zero,6714 <__sfvwrite_r+0x478>
    660c:	10800044 	addi	r2,r2,1
    6610:	15ebc83a 	sub	r21,r2,r23
    6614:	003fd406 	br	6568 <__sfvwrite_r+0x2cc>
    6618:	80800417 	ldw	r2,16(r16)
    661c:	17001436 	bltu	r2,fp,6670 <__sfvwrite_r+0x3d4>
    6620:	84c00517 	ldw	r19,20(r16)
    6624:	bcc01236 	bltu	r23,r19,6670 <__sfvwrite_r+0x3d4>
    6628:	d8800117 	ldw	r2,4(sp)
    662c:	15c0372e 	bgeu	r2,r23,670c <__sfvwrite_r+0x470>
    6630:	d9000217 	ldw	r4,8(sp)
    6634:	980b883a 	mov	r5,r19
    6638:	000a9f00 	call	a9f0 <__divsi3>
    663c:	980b883a 	mov	r5,r19
    6640:	1009883a 	mov	r4,r2
    6644:	000aba80 	call	aba8 <__mulsi3>
    6648:	81400717 	ldw	r5,28(r16)
    664c:	82800917 	ldw	r10,36(r16)
    6650:	d9000017 	ldw	r4,0(sp)
    6654:	100f883a 	mov	r7,r2
    6658:	b00d883a 	mov	r6,r22
    665c:	503ee83a 	callr	r10
    6660:	00bfd50e 	bge	zero,r2,65b8 <__sfvwrite_r+0x31c>
    6664:	1027883a 	mov	r19,r2
    6668:	bcefc83a 	sub	r23,r23,r19
    666c:	003f8f06 	br	64ac <__sfvwrite_r+0x210>
    6670:	9027883a 	mov	r19,r18
    6674:	bc80012e 	bgeu	r23,r18,667c <__sfvwrite_r+0x3e0>
    6678:	b827883a 	mov	r19,r23
    667c:	e009883a 	mov	r4,fp
    6680:	980d883a 	mov	r6,r19
    6684:	b00b883a 	mov	r5,r22
    6688:	00069c80 	call	69c8 <memmove>
    668c:	80800217 	ldw	r2,8(r16)
    6690:	81000017 	ldw	r4,0(r16)
    6694:	14c5c83a 	sub	r2,r2,r19
    6698:	24c9883a 	add	r4,r4,r19
    669c:	80800215 	stw	r2,8(r16)
    66a0:	81000015 	stw	r4,0(r16)
    66a4:	103ff01e 	bne	r2,zero,6668 <__sfvwrite_r+0x3cc>
    66a8:	d9000017 	ldw	r4,0(sp)
    66ac:	800b883a 	mov	r5,r16
    66b0:	0005dfc0 	call	5dfc <_fflush_r>
    66b4:	103fec26 	beq	r2,zero,6668 <__sfvwrite_r+0x3cc>
    66b8:	003fbf06 	br	65b8 <__sfvwrite_r+0x31c>
    66bc:	b825883a 	mov	r18,r23
    66c0:	b82b883a 	mov	r21,r23
    66c4:	003f6d06 	br	647c <__sfvwrite_r+0x1e0>
    66c8:	d9000017 	ldw	r4,0(sp)
    66cc:	800b883a 	mov	r5,r16
    66d0:	0005dfc0 	call	5dfc <_fflush_r>
    66d4:	103f9a26 	beq	r2,zero,6540 <__sfvwrite_r+0x2a4>
    66d8:	003fb706 	br	65b8 <__sfvwrite_r+0x31c>
    66dc:	b00d883a 	mov	r6,r22
    66e0:	b80b883a 	mov	r5,r23
    66e4:	e009883a 	mov	r4,fp
    66e8:	00069c80 	call	69c8 <memmove>
    66ec:	80c00217 	ldw	r3,8(r16)
    66f0:	80800017 	ldw	r2,0(r16)
    66f4:	b025883a 	mov	r18,r22
    66f8:	1d87c83a 	sub	r3,r3,r22
    66fc:	15ad883a 	add	r22,r2,r22
    6700:	80c00215 	stw	r3,8(r16)
    6704:	85800015 	stw	r22,0(r16)
    6708:	003f8a06 	br	6534 <__sfvwrite_r+0x298>
    670c:	b809883a 	mov	r4,r23
    6710:	003fc806 	br	6634 <__sfvwrite_r+0x398>
    6714:	98800044 	addi	r2,r19,1
    6718:	102b883a 	mov	r21,r2
    671c:	003f9306 	br	656c <__sfvwrite_r+0x2d0>
    6720:	d9000017 	ldw	r4,0(sp)
    6724:	0007b0c0 	call	7b0c <_realloc_r>
    6728:	100f883a 	mov	r7,r2
    672c:	103f4b1e 	bne	r2,zero,645c <__sfvwrite_r+0x1c0>
    6730:	dc400017 	ldw	r17,0(sp)
    6734:	81400417 	ldw	r5,16(r16)
    6738:	8809883a 	mov	r4,r17
    673c:	0005fa00 	call	5fa0 <_free_r>
    6740:	8080030b 	ldhu	r2,12(r16)
    6744:	00c00304 	movi	r3,12
    6748:	88c00015 	stw	r3,0(r17)
    674c:	10bfdfcc 	andi	r2,r2,65407
    6750:	003f9a06 	br	65bc <__sfvwrite_r+0x320>
    6754:	d8c00017 	ldw	r3,0(sp)
    6758:	00800304 	movi	r2,12
    675c:	18800015 	stw	r2,0(r3)
    6760:	8080030b 	ldhu	r2,12(r16)
    6764:	003f9506 	br	65bc <__sfvwrite_r+0x320>
    6768:	00bfffc4 	movi	r2,-1
    676c:	003f5d06 	br	64e4 <__sfvwrite_r+0x248>

00006770 <__localeconv_l>:
    6770:	20803c04 	addi	r2,r4,240
    6774:	f800283a 	ret

00006778 <_localeconv_r>:
    6778:	00800074 	movhi	r2,1
    677c:	1082b004 	addi	r2,r2,2752
    6780:	f800283a 	ret

00006784 <localeconv>:
    6784:	00800074 	movhi	r2,1
    6788:	1082b004 	addi	r2,r2,2752
    678c:	f800283a 	ret

00006790 <_lseek_r>:
    6790:	defffe04 	addi	sp,sp,-8
    6794:	2805883a 	mov	r2,r5
    6798:	dc000015 	stw	r16,0(sp)
    679c:	300b883a 	mov	r5,r6
    67a0:	2021883a 	mov	r16,r4
    67a4:	380d883a 	mov	r6,r7
    67a8:	1009883a 	mov	r4,r2
    67ac:	00800074 	movhi	r2,1
    67b0:	dfc00115 	stw	ra,4(sp)
    67b4:	100e8315 	stw	zero,14860(r2)
    67b8:	000d95c0 	call	d95c <lseek>
    67bc:	10ffffd8 	cmpnei	r3,r2,-1
    67c0:	18000426 	beq	r3,zero,67d4 <_lseek_r+0x44>
    67c4:	dfc00117 	ldw	ra,4(sp)
    67c8:	dc000017 	ldw	r16,0(sp)
    67cc:	dec00204 	addi	sp,sp,8
    67d0:	f800283a 	ret
    67d4:	00c00074 	movhi	r3,1
    67d8:	18ce8317 	ldw	r3,14860(r3)
    67dc:	183ff926 	beq	r3,zero,67c4 <_lseek_r+0x34>
    67e0:	80c00015 	stw	r3,0(r16)
    67e4:	dfc00117 	ldw	ra,4(sp)
    67e8:	dc000017 	ldw	r16,0(sp)
    67ec:	dec00204 	addi	sp,sp,8
    67f0:	f800283a 	ret

000067f4 <__swhatbuf_r>:
    67f4:	deffea04 	addi	sp,sp,-88
    67f8:	dc001215 	stw	r16,72(sp)
    67fc:	2821883a 	mov	r16,r5
    6800:	2940038f 	ldh	r5,14(r5)
    6804:	dc801415 	stw	r18,80(sp)
    6808:	dc401315 	stw	r17,76(sp)
    680c:	dfc01515 	stw	ra,84(sp)
    6810:	3023883a 	mov	r17,r6
    6814:	3825883a 	mov	r18,r7
    6818:	28001016 	blt	r5,zero,685c <__swhatbuf_r+0x68>
    681c:	d80d883a 	mov	r6,sp
    6820:	00099140 	call	9914 <_fstat_r>
    6824:	10000d16 	blt	r2,zero,685c <__swhatbuf_r+0x68>
    6828:	d8c00117 	ldw	r3,4(sp)
    682c:	00820004 	movi	r2,2048
    6830:	18fc000c 	andi	r3,r3,61440
    6834:	18c80020 	cmpeqi	r3,r3,8192
    6838:	90c00015 	stw	r3,0(r18)
    683c:	00c10004 	movi	r3,1024
    6840:	88c00015 	stw	r3,0(r17)
    6844:	dfc01517 	ldw	ra,84(sp)
    6848:	dc801417 	ldw	r18,80(sp)
    684c:	dc401317 	ldw	r17,76(sp)
    6850:	dc001217 	ldw	r16,72(sp)
    6854:	dec01604 	addi	sp,sp,88
    6858:	f800283a 	ret
    685c:	8080030b 	ldhu	r2,12(r16)
    6860:	90000015 	stw	zero,0(r18)
    6864:	1080200c 	andi	r2,r2,128
    6868:	10000426 	beq	r2,zero,687c <__swhatbuf_r+0x88>
    686c:	00801004 	movi	r2,64
    6870:	88800015 	stw	r2,0(r17)
    6874:	0005883a 	mov	r2,zero
    6878:	003ff206 	br	6844 <__swhatbuf_r+0x50>
    687c:	00810004 	movi	r2,1024
    6880:	88800015 	stw	r2,0(r17)
    6884:	0005883a 	mov	r2,zero
    6888:	003fee06 	br	6844 <__swhatbuf_r+0x50>

0000688c <__smakebuf_r>:
    688c:	28c0030b 	ldhu	r3,12(r5)
    6890:	defffa04 	addi	sp,sp,-24
    6894:	dc000215 	stw	r16,8(sp)
    6898:	dfc00515 	stw	ra,20(sp)
    689c:	dc800415 	stw	r18,16(sp)
    68a0:	dc400315 	stw	r17,12(sp)
    68a4:	18c0008c 	andi	r3,r3,2
    68a8:	2821883a 	mov	r16,r5
    68ac:	18000b26 	beq	r3,zero,68dc <__smakebuf_r+0x50>
    68b0:	28c010c4 	addi	r3,r5,67
    68b4:	28c00015 	stw	r3,0(r5)
    68b8:	28c00415 	stw	r3,16(r5)
    68bc:	00c00044 	movi	r3,1
    68c0:	28c00515 	stw	r3,20(r5)
    68c4:	dfc00517 	ldw	ra,20(sp)
    68c8:	dc800417 	ldw	r18,16(sp)
    68cc:	dc400317 	ldw	r17,12(sp)
    68d0:	dc000217 	ldw	r16,8(sp)
    68d4:	dec00604 	addi	sp,sp,24
    68d8:	f800283a 	ret
    68dc:	d9c00104 	addi	r7,sp,4
    68e0:	d80d883a 	mov	r6,sp
    68e4:	2023883a 	mov	r17,r4
    68e8:	00067f40 	call	67f4 <__swhatbuf_r>
    68ec:	1025883a 	mov	r18,r2
    68f0:	d8800117 	ldw	r2,4(sp)
    68f4:	1000131e 	bne	r2,zero,6944 <__smakebuf_r+0xb8>
    68f8:	d9400017 	ldw	r5,0(sp)
    68fc:	8809883a 	mov	r4,r17
    6900:	0000abc0 	call	abc <_malloc_r>
    6904:	10001c26 	beq	r2,zero,6978 <__smakebuf_r+0xec>
    6908:	01000034 	movhi	r4,0
    690c:	21018604 	addi	r4,r4,1560
    6910:	80c0030b 	ldhu	r3,12(r16)
    6914:	89000f15 	stw	r4,60(r17)
    6918:	80800015 	stw	r2,0(r16)
    691c:	80800415 	stw	r2,16(r16)
    6920:	d8800017 	ldw	r2,0(sp)
    6924:	d9400117 	ldw	r5,4(sp)
    6928:	18c02014 	ori	r3,r3,128
    692c:	80c0030d 	sth	r3,12(r16)
    6930:	80800515 	stw	r2,20(r16)
    6934:	28001c1e 	bne	r5,zero,69a8 <__smakebuf_r+0x11c>
    6938:	90c6b03a 	or	r3,r18,r3
    693c:	80c0030d 	sth	r3,12(r16)
    6940:	003fe006 	br	68c4 <__smakebuf_r+0x38>
    6944:	8140038f 	ldh	r5,14(r16)
    6948:	8809883a 	mov	r4,r17
    694c:	00099740 	call	9974 <_isatty_r>
    6950:	103fe926 	beq	r2,zero,68f8 <__smakebuf_r+0x6c>
    6954:	8080030b 	ldhu	r2,12(r16)
    6958:	80c010c4 	addi	r3,r16,67
    695c:	80c00015 	stw	r3,0(r16)
    6960:	10800054 	ori	r2,r2,1
    6964:	8080030d 	sth	r2,12(r16)
    6968:	00800044 	movi	r2,1
    696c:	80c00415 	stw	r3,16(r16)
    6970:	80800515 	stw	r2,20(r16)
    6974:	003fe006 	br	68f8 <__smakebuf_r+0x6c>
    6978:	8080030b 	ldhu	r2,12(r16)
    697c:	10c0800c 	andi	r3,r2,512
    6980:	183fd01e 	bne	r3,zero,68c4 <__smakebuf_r+0x38>
    6984:	10bfff0c 	andi	r2,r2,65532
    6988:	10800094 	ori	r2,r2,2
    698c:	80c010c4 	addi	r3,r16,67
    6990:	8080030d 	sth	r2,12(r16)
    6994:	00800044 	movi	r2,1
    6998:	80c00015 	stw	r3,0(r16)
    699c:	80c00415 	stw	r3,16(r16)
    69a0:	80800515 	stw	r2,20(r16)
    69a4:	003fc706 	br	68c4 <__smakebuf_r+0x38>
    69a8:	8140038f 	ldh	r5,14(r16)
    69ac:	8809883a 	mov	r4,r17
    69b0:	00099740 	call	9974 <_isatty_r>
    69b4:	80c0030b 	ldhu	r3,12(r16)
    69b8:	103fdf26 	beq	r2,zero,6938 <__smakebuf_r+0xac>
    69bc:	18ffff0c 	andi	r3,r3,65532
    69c0:	18c00054 	ori	r3,r3,1
    69c4:	003fdc06 	br	6938 <__smakebuf_r+0xac>

000069c8 <memmove>:
    69c8:	2005883a 	mov	r2,r4
    69cc:	29000a2e 	bgeu	r5,r4,69f8 <memmove+0x30>
    69d0:	2989883a 	add	r4,r5,r6
    69d4:	1100082e 	bgeu	r2,r4,69f8 <memmove+0x30>
    69d8:	1187883a 	add	r3,r2,r6
    69dc:	30003e26 	beq	r6,zero,6ad8 <memmove+0x110>
    69e0:	213fffc4 	addi	r4,r4,-1
    69e4:	21400003 	ldbu	r5,0(r4)
    69e8:	18ffffc4 	addi	r3,r3,-1
    69ec:	19400005 	stb	r5,0(r3)
    69f0:	10fffb1e 	bne	r2,r3,69e0 <memmove+0x18>
    69f4:	f800283a 	ret
    69f8:	30c00430 	cmpltui	r3,r6,16
    69fc:	18000b26 	beq	r3,zero,6a2c <memmove+0x64>
    6a00:	1007883a 	mov	r3,r2
    6a04:	31ffffc4 	addi	r7,r6,-1
    6a08:	30003726 	beq	r6,zero,6ae8 <memmove+0x120>
    6a0c:	39c00044 	addi	r7,r7,1
    6a10:	29cf883a 	add	r7,r5,r7
    6a14:	29400044 	addi	r5,r5,1
    6a18:	29bfffc3 	ldbu	r6,-1(r5)
    6a1c:	18c00044 	addi	r3,r3,1
    6a20:	19bfffc5 	stb	r6,-1(r3)
    6a24:	29fffb1e 	bne	r5,r7,6a14 <memmove+0x4c>
    6a28:	f800283a 	ret
    6a2c:	2886b03a 	or	r3,r5,r2
    6a30:	18c000cc 	andi	r3,r3,3
    6a34:	1800291e 	bne	r3,zero,6adc <memmove+0x114>
    6a38:	327ffc04 	addi	r9,r6,-16
    6a3c:	4812d13a 	srli	r9,r9,4
    6a40:	280f883a 	mov	r7,r5
    6a44:	1007883a 	mov	r3,r2
    6a48:	4a400044 	addi	r9,r9,1
    6a4c:	4812913a 	slli	r9,r9,4
    6a50:	1251883a 	add	r8,r2,r9
    6a54:	39000017 	ldw	r4,0(r7)
    6a58:	18c00404 	addi	r3,r3,16
    6a5c:	39c00404 	addi	r7,r7,16
    6a60:	193ffc15 	stw	r4,-16(r3)
    6a64:	393ffd17 	ldw	r4,-12(r7)
    6a68:	193ffd15 	stw	r4,-12(r3)
    6a6c:	393ffe17 	ldw	r4,-8(r7)
    6a70:	193ffe15 	stw	r4,-8(r3)
    6a74:	393fff17 	ldw	r4,-4(r7)
    6a78:	193fff15 	stw	r4,-4(r3)
    6a7c:	40fff51e 	bne	r8,r3,6a54 <memmove+0x8c>
    6a80:	3100030c 	andi	r4,r6,12
    6a84:	2a4b883a 	add	r5,r5,r9
    6a88:	320003cc 	andi	r8,r6,15
    6a8c:	20001726 	beq	r4,zero,6aec <memmove+0x124>
    6a90:	2813883a 	mov	r9,r5
    6a94:	180f883a 	mov	r7,r3
    6a98:	4a400104 	addi	r9,r9,4
    6a9c:	39c00104 	addi	r7,r7,4
    6aa0:	4abfff17 	ldw	r10,-4(r9)
    6aa4:	41c9c83a 	sub	r4,r8,r7
    6aa8:	1909883a 	add	r4,r3,r4
    6aac:	3abfff15 	stw	r10,-4(r7)
    6ab0:	21000128 	cmpgeui	r4,r4,4
    6ab4:	203ff81e 	bne	r4,zero,6a98 <memmove+0xd0>
    6ab8:	413fff04 	addi	r4,r8,-4
    6abc:	2008d0ba 	srli	r4,r4,2
    6ac0:	318000cc 	andi	r6,r6,3
    6ac4:	21000044 	addi	r4,r4,1
    6ac8:	200890ba 	slli	r4,r4,2
    6acc:	1907883a 	add	r3,r3,r4
    6ad0:	290b883a 	add	r5,r5,r4
    6ad4:	003fcb06 	br	6a04 <memmove+0x3c>
    6ad8:	f800283a 	ret
    6adc:	31ffffc4 	addi	r7,r6,-1
    6ae0:	1007883a 	mov	r3,r2
    6ae4:	003fc906 	br	6a0c <memmove+0x44>
    6ae8:	f800283a 	ret
    6aec:	400d883a 	mov	r6,r8
    6af0:	003fc406 	br	6a04 <memmove+0x3c>

00006af4 <_Balloc>:
    6af4:	20801317 	ldw	r2,76(r4)
    6af8:	defffc04 	addi	sp,sp,-16
    6afc:	dc400115 	stw	r17,4(sp)
    6b00:	dc000015 	stw	r16,0(sp)
    6b04:	dfc00315 	stw	ra,12(sp)
    6b08:	dc800215 	stw	r18,8(sp)
    6b0c:	2021883a 	mov	r16,r4
    6b10:	2823883a 	mov	r17,r5
    6b14:	10000e26 	beq	r2,zero,6b50 <_Balloc+0x5c>
    6b18:	880690ba 	slli	r3,r17,2
    6b1c:	10c7883a 	add	r3,r2,r3
    6b20:	18800017 	ldw	r2,0(r3)
    6b24:	10001126 	beq	r2,zero,6b6c <_Balloc+0x78>
    6b28:	11000017 	ldw	r4,0(r2)
    6b2c:	19000015 	stw	r4,0(r3)
    6b30:	10000415 	stw	zero,16(r2)
    6b34:	10000315 	stw	zero,12(r2)
    6b38:	dfc00317 	ldw	ra,12(sp)
    6b3c:	dc800217 	ldw	r18,8(sp)
    6b40:	dc400117 	ldw	r17,4(sp)
    6b44:	dc000017 	ldw	r16,0(sp)
    6b48:	dec00404 	addi	sp,sp,16
    6b4c:	f800283a 	ret
    6b50:	01800844 	movi	r6,33
    6b54:	01400104 	movi	r5,4
    6b58:	00096580 	call	9658 <_calloc_r>
    6b5c:	80801315 	stw	r2,76(r16)
    6b60:	103fed1e 	bne	r2,zero,6b18 <_Balloc+0x24>
    6b64:	0005883a 	mov	r2,zero
    6b68:	003ff306 	br	6b38 <_Balloc+0x44>
    6b6c:	04800044 	movi	r18,1
    6b70:	9464983a 	sll	r18,r18,r17
    6b74:	01400044 	movi	r5,1
    6b78:	8009883a 	mov	r4,r16
    6b7c:	91800144 	addi	r6,r18,5
    6b80:	300c90ba 	slli	r6,r6,2
    6b84:	00096580 	call	9658 <_calloc_r>
    6b88:	103ff626 	beq	r2,zero,6b64 <_Balloc+0x70>
    6b8c:	14400115 	stw	r17,4(r2)
    6b90:	14800215 	stw	r18,8(r2)
    6b94:	003fe606 	br	6b30 <_Balloc+0x3c>

00006b98 <_Bfree>:
    6b98:	28000726 	beq	r5,zero,6bb8 <_Bfree+0x20>
    6b9c:	28c00117 	ldw	r3,4(r5)
    6ba0:	20801317 	ldw	r2,76(r4)
    6ba4:	180690ba 	slli	r3,r3,2
    6ba8:	10c5883a 	add	r2,r2,r3
    6bac:	10c00017 	ldw	r3,0(r2)
    6bb0:	28c00015 	stw	r3,0(r5)
    6bb4:	11400015 	stw	r5,0(r2)
    6bb8:	f800283a 	ret

00006bbc <__multadd>:
    6bbc:	defff704 	addi	sp,sp,-36
    6bc0:	dcc00315 	stw	r19,12(sp)
    6bc4:	2cc00417 	ldw	r19,16(r5)
    6bc8:	ddc00715 	stw	r23,28(sp)
    6bcc:	dd800615 	stw	r22,24(sp)
    6bd0:	dd400515 	stw	r21,20(sp)
    6bd4:	dd000415 	stw	r20,16(sp)
    6bd8:	dc800215 	stw	r18,8(sp)
    6bdc:	dc400115 	stw	r17,4(sp)
    6be0:	dfc00815 	stw	ra,32(sp)
    6be4:	dc000015 	stw	r16,0(sp)
    6be8:	2829883a 	mov	r20,r5
    6bec:	202b883a 	mov	r21,r4
    6bf0:	3025883a 	mov	r18,r6
    6bf4:	3823883a 	mov	r17,r7
    6bf8:	2d800504 	addi	r22,r5,20
    6bfc:	002f883a 	mov	r23,zero
    6c00:	b4000017 	ldw	r16,0(r22)
    6c04:	900b883a 	mov	r5,r18
    6c08:	b5800104 	addi	r22,r22,4
    6c0c:	813fffcc 	andi	r4,r16,65535
    6c10:	000aba80 	call	aba8 <__mulsi3>
    6c14:	8008d43a 	srli	r4,r16,16
    6c18:	900b883a 	mov	r5,r18
    6c1c:	1461883a 	add	r16,r2,r17
    6c20:	000aba80 	call	aba8 <__mulsi3>
    6c24:	800ed43a 	srli	r7,r16,16
    6c28:	843fffcc 	andi	r16,r16,65535
    6c2c:	bdc00044 	addi	r23,r23,1
    6c30:	11c5883a 	add	r2,r2,r7
    6c34:	1006943a 	slli	r3,r2,16
    6c38:	1022d43a 	srli	r17,r2,16
    6c3c:	1c21883a 	add	r16,r3,r16
    6c40:	b43fff15 	stw	r16,-4(r22)
    6c44:	bcffee16 	blt	r23,r19,6c00 <__multadd+0x44>
    6c48:	88000826 	beq	r17,zero,6c6c <__multadd+0xb0>
    6c4c:	a0800217 	ldw	r2,8(r20)
    6c50:	9880120e 	bge	r19,r2,6c9c <__multadd+0xe0>
    6c54:	98800144 	addi	r2,r19,5
    6c58:	100490ba 	slli	r2,r2,2
    6c5c:	9cc00044 	addi	r19,r19,1
    6c60:	a085883a 	add	r2,r20,r2
    6c64:	14400015 	stw	r17,0(r2)
    6c68:	a4c00415 	stw	r19,16(r20)
    6c6c:	a005883a 	mov	r2,r20
    6c70:	dfc00817 	ldw	ra,32(sp)
    6c74:	ddc00717 	ldw	r23,28(sp)
    6c78:	dd800617 	ldw	r22,24(sp)
    6c7c:	dd400517 	ldw	r21,20(sp)
    6c80:	dd000417 	ldw	r20,16(sp)
    6c84:	dcc00317 	ldw	r19,12(sp)
    6c88:	dc800217 	ldw	r18,8(sp)
    6c8c:	dc400117 	ldw	r17,4(sp)
    6c90:	dc000017 	ldw	r16,0(sp)
    6c94:	dec00904 	addi	sp,sp,36
    6c98:	f800283a 	ret
    6c9c:	a1400117 	ldw	r5,4(r20)
    6ca0:	a809883a 	mov	r4,r21
    6ca4:	29400044 	addi	r5,r5,1
    6ca8:	0006af40 	call	6af4 <_Balloc>
    6cac:	a1800417 	ldw	r6,16(r20)
    6cb0:	a1400304 	addi	r5,r20,12
    6cb4:	11000304 	addi	r4,r2,12
    6cb8:	31800084 	addi	r6,r6,2
    6cbc:	300c90ba 	slli	r6,r6,2
    6cc0:	1021883a 	mov	r16,r2
    6cc4:	00013980 	call	1398 <memcpy>
    6cc8:	a0000926 	beq	r20,zero,6cf0 <__multadd+0x134>
    6ccc:	a0c00117 	ldw	r3,4(r20)
    6cd0:	a8801317 	ldw	r2,76(r21)
    6cd4:	180690ba 	slli	r3,r3,2
    6cd8:	10c5883a 	add	r2,r2,r3
    6cdc:	10c00017 	ldw	r3,0(r2)
    6ce0:	a0c00015 	stw	r3,0(r20)
    6ce4:	15000015 	stw	r20,0(r2)
    6ce8:	8029883a 	mov	r20,r16
    6cec:	003fd906 	br	6c54 <__multadd+0x98>
    6cf0:	8029883a 	mov	r20,r16
    6cf4:	003fd706 	br	6c54 <__multadd+0x98>

00006cf8 <__s2b>:
    6cf8:	defff904 	addi	sp,sp,-28
    6cfc:	dc800215 	stw	r18,8(sp)
    6d00:	dc000015 	stw	r16,0(sp)
    6d04:	2025883a 	mov	r18,r4
    6d08:	2821883a 	mov	r16,r5
    6d0c:	39000204 	addi	r4,r7,8
    6d10:	01400244 	movi	r5,9
    6d14:	dcc00315 	stw	r19,12(sp)
    6d18:	dc400115 	stw	r17,4(sp)
    6d1c:	dfc00615 	stw	ra,24(sp)
    6d20:	3823883a 	mov	r17,r7
    6d24:	dd400515 	stw	r21,20(sp)
    6d28:	dd000415 	stw	r20,16(sp)
    6d2c:	3027883a 	mov	r19,r6
    6d30:	000a9f00 	call	a9f0 <__divsi3>
    6d34:	88c00290 	cmplti	r3,r17,10
    6d38:	1800311e 	bne	r3,zero,6e00 <__s2b+0x108>
    6d3c:	00c00044 	movi	r3,1
    6d40:	000b883a 	mov	r5,zero
    6d44:	18c7883a 	add	r3,r3,r3
    6d48:	29400044 	addi	r5,r5,1
    6d4c:	18bffd16 	blt	r3,r2,6d44 <__s2b+0x4c>
    6d50:	9009883a 	mov	r4,r18
    6d54:	0006af40 	call	6af4 <_Balloc>
    6d58:	d8c00717 	ldw	r3,28(sp)
    6d5c:	10c00515 	stw	r3,20(r2)
    6d60:	00c00044 	movi	r3,1
    6d64:	10c00415 	stw	r3,16(r2)
    6d68:	98c00290 	cmplti	r3,r19,10
    6d6c:	1800211e 	bne	r3,zero,6df4 <__s2b+0xfc>
    6d70:	85400244 	addi	r21,r16,9
    6d74:	84e9883a 	add	r20,r16,r19
    6d78:	a821883a 	mov	r16,r21
    6d7c:	84000044 	addi	r16,r16,1
    6d80:	81ffffc7 	ldb	r7,-1(r16)
    6d84:	01800284 	movi	r6,10
    6d88:	100b883a 	mov	r5,r2
    6d8c:	39fff404 	addi	r7,r7,-48
    6d90:	9009883a 	mov	r4,r18
    6d94:	0006bbc0 	call	6bbc <__multadd>
    6d98:	a43ff81e 	bne	r20,r16,6d7c <__s2b+0x84>
    6d9c:	9c3ffe04 	addi	r16,r19,-8
    6da0:	ac21883a 	add	r16,r21,r16
    6da4:	9c400a0e 	bge	r19,r17,6dd0 <__s2b+0xd8>
    6da8:	8ce3c83a 	sub	r17,r17,r19
    6dac:	8463883a 	add	r17,r16,r17
    6db0:	84000044 	addi	r16,r16,1
    6db4:	81ffffc7 	ldb	r7,-1(r16)
    6db8:	01800284 	movi	r6,10
    6dbc:	100b883a 	mov	r5,r2
    6dc0:	39fff404 	addi	r7,r7,-48
    6dc4:	9009883a 	mov	r4,r18
    6dc8:	0006bbc0 	call	6bbc <__multadd>
    6dcc:	8c3ff81e 	bne	r17,r16,6db0 <__s2b+0xb8>
    6dd0:	dfc00617 	ldw	ra,24(sp)
    6dd4:	dd400517 	ldw	r21,20(sp)
    6dd8:	dd000417 	ldw	r20,16(sp)
    6ddc:	dcc00317 	ldw	r19,12(sp)
    6de0:	dc800217 	ldw	r18,8(sp)
    6de4:	dc400117 	ldw	r17,4(sp)
    6de8:	dc000017 	ldw	r16,0(sp)
    6dec:	dec00704 	addi	sp,sp,28
    6df0:	f800283a 	ret
    6df4:	84000284 	addi	r16,r16,10
    6df8:	04c00244 	movi	r19,9
    6dfc:	003fe906 	br	6da4 <__s2b+0xac>
    6e00:	000b883a 	mov	r5,zero
    6e04:	003fd206 	br	6d50 <__s2b+0x58>

00006e08 <__hi0bits>:
    6e08:	20bfffec 	andhi	r2,r4,65535
    6e0c:	1000131e 	bne	r2,zero,6e5c <__hi0bits+0x54>
    6e10:	2008943a 	slli	r4,r4,16
    6e14:	00800404 	movi	r2,16
    6e18:	20ffc02c 	andhi	r3,r4,65280
    6e1c:	1800021e 	bne	r3,zero,6e28 <__hi0bits+0x20>
    6e20:	2008923a 	slli	r4,r4,8
    6e24:	10800204 	addi	r2,r2,8
    6e28:	20fc002c 	andhi	r3,r4,61440
    6e2c:	1800021e 	bne	r3,zero,6e38 <__hi0bits+0x30>
    6e30:	2008913a 	slli	r4,r4,4
    6e34:	10800104 	addi	r2,r2,4
    6e38:	20f0002c 	andhi	r3,r4,49152
    6e3c:	1800021e 	bne	r3,zero,6e48 <__hi0bits+0x40>
    6e40:	200890ba 	slli	r4,r4,2
    6e44:	10800084 	addi	r2,r2,2
    6e48:	20000316 	blt	r4,zero,6e58 <__hi0bits+0x50>
    6e4c:	2110002c 	andhi	r4,r4,16384
    6e50:	10800044 	addi	r2,r2,1
    6e54:	20000326 	beq	r4,zero,6e64 <__hi0bits+0x5c>
    6e58:	f800283a 	ret
    6e5c:	0005883a 	mov	r2,zero
    6e60:	003fed06 	br	6e18 <__hi0bits+0x10>
    6e64:	00800804 	movi	r2,32
    6e68:	f800283a 	ret

00006e6c <__lo0bits>:
    6e6c:	20c00017 	ldw	r3,0(r4)
    6e70:	188001cc 	andi	r2,r3,7
    6e74:	10000826 	beq	r2,zero,6e98 <__lo0bits+0x2c>
    6e78:	1880004c 	andi	r2,r3,1
    6e7c:	10001f1e 	bne	r2,zero,6efc <__lo0bits+0x90>
    6e80:	1880008c 	andi	r2,r3,2
    6e84:	10002126 	beq	r2,zero,6f0c <__lo0bits+0xa0>
    6e88:	1806d07a 	srli	r3,r3,1
    6e8c:	00800044 	movi	r2,1
    6e90:	20c00015 	stw	r3,0(r4)
    6e94:	f800283a 	ret
    6e98:	18bfffcc 	andi	r2,r3,65535
    6e9c:	1000151e 	bne	r2,zero,6ef4 <__lo0bits+0x88>
    6ea0:	1806d43a 	srli	r3,r3,16
    6ea4:	00800404 	movi	r2,16
    6ea8:	19403fcc 	andi	r5,r3,255
    6eac:	2800021e 	bne	r5,zero,6eb8 <__lo0bits+0x4c>
    6eb0:	1806d23a 	srli	r3,r3,8
    6eb4:	10800204 	addi	r2,r2,8
    6eb8:	194003cc 	andi	r5,r3,15
    6ebc:	2800021e 	bne	r5,zero,6ec8 <__lo0bits+0x5c>
    6ec0:	1806d13a 	srli	r3,r3,4
    6ec4:	10800104 	addi	r2,r2,4
    6ec8:	194000cc 	andi	r5,r3,3
    6ecc:	2800021e 	bne	r5,zero,6ed8 <__lo0bits+0x6c>
    6ed0:	1806d0ba 	srli	r3,r3,2
    6ed4:	10800084 	addi	r2,r2,2
    6ed8:	1940004c 	andi	r5,r3,1
    6edc:	2800031e 	bne	r5,zero,6eec <__lo0bits+0x80>
    6ee0:	1806d07a 	srli	r3,r3,1
    6ee4:	10800044 	addi	r2,r2,1
    6ee8:	18000626 	beq	r3,zero,6f04 <__lo0bits+0x98>
    6eec:	20c00015 	stw	r3,0(r4)
    6ef0:	f800283a 	ret
    6ef4:	0005883a 	mov	r2,zero
    6ef8:	003feb06 	br	6ea8 <__lo0bits+0x3c>
    6efc:	0005883a 	mov	r2,zero
    6f00:	f800283a 	ret
    6f04:	00800804 	movi	r2,32
    6f08:	f800283a 	ret
    6f0c:	1806d0ba 	srli	r3,r3,2
    6f10:	00800084 	movi	r2,2
    6f14:	20c00015 	stw	r3,0(r4)
    6f18:	f800283a 	ret

00006f1c <__i2b>:
    6f1c:	defffe04 	addi	sp,sp,-8
    6f20:	dc000015 	stw	r16,0(sp)
    6f24:	2821883a 	mov	r16,r5
    6f28:	01400044 	movi	r5,1
    6f2c:	dfc00115 	stw	ra,4(sp)
    6f30:	0006af40 	call	6af4 <_Balloc>
    6f34:	01000044 	movi	r4,1
    6f38:	14000515 	stw	r16,20(r2)
    6f3c:	11000415 	stw	r4,16(r2)
    6f40:	dfc00117 	ldw	ra,4(sp)
    6f44:	dc000017 	ldw	r16,0(sp)
    6f48:	dec00204 	addi	sp,sp,8
    6f4c:	f800283a 	ret

00006f50 <__multiply>:
    6f50:	defff104 	addi	sp,sp,-60
    6f54:	dd800b15 	stw	r22,44(sp)
    6f58:	dc400615 	stw	r17,24(sp)
    6f5c:	2d800417 	ldw	r22,16(r5)
    6f60:	34400417 	ldw	r17,16(r6)
    6f64:	ddc00c15 	stw	r23,48(sp)
    6f68:	dc800715 	stw	r18,28(sp)
    6f6c:	dfc00e15 	stw	ra,56(sp)
    6f70:	df000d15 	stw	fp,52(sp)
    6f74:	dd400a15 	stw	r21,40(sp)
    6f78:	dd000915 	stw	r20,36(sp)
    6f7c:	dcc00815 	stw	r19,32(sp)
    6f80:	dc000515 	stw	r16,20(sp)
    6f84:	2825883a 	mov	r18,r5
    6f88:	302f883a 	mov	r23,r6
    6f8c:	b4400516 	blt	r22,r17,6fa4 <__multiply+0x54>
    6f90:	8807883a 	mov	r3,r17
    6f94:	282f883a 	mov	r23,r5
    6f98:	b023883a 	mov	r17,r22
    6f9c:	3025883a 	mov	r18,r6
    6fa0:	182d883a 	mov	r22,r3
    6fa4:	b8800217 	ldw	r2,8(r23)
    6fa8:	8da9883a 	add	r20,r17,r22
    6fac:	b9400117 	ldw	r5,4(r23)
    6fb0:	1500010e 	bge	r2,r20,6fb8 <__multiply+0x68>
    6fb4:	29400044 	addi	r5,r5,1
    6fb8:	a02690ba 	slli	r19,r20,2
    6fbc:	0006af40 	call	6af4 <_Balloc>
    6fc0:	10c00504 	addi	r3,r2,20
    6fc4:	1cc9883a 	add	r4,r3,r19
    6fc8:	d8800415 	stw	r2,16(sp)
    6fcc:	d8c00015 	stw	r3,0(sp)
    6fd0:	d9000115 	stw	r4,4(sp)
    6fd4:	1805883a 	mov	r2,r3
    6fd8:	1900042e 	bgeu	r3,r4,6fec <__multiply+0x9c>
    6fdc:	d8c00117 	ldw	r3,4(sp)
    6fe0:	10000015 	stw	zero,0(r2)
    6fe4:	10800104 	addi	r2,r2,4
    6fe8:	10fffc36 	bltu	r2,r3,6fdc <__multiply+0x8c>
    6fec:	b02c90ba 	slli	r22,r22,2
    6ff0:	882290ba 	slli	r17,r17,2
    6ff4:	94800504 	addi	r18,r18,20
    6ff8:	b8800504 	addi	r2,r23,20
    6ffc:	9587883a 	add	r3,r18,r22
    7000:	d8800315 	stw	r2,12(sp)
    7004:	d8c00215 	stw	r3,8(sp)
    7008:	1463883a 	add	r17,r2,r17
    700c:	90c00936 	bltu	r18,r3,7034 <__multiply+0xe4>
    7010:	00004606 	br	712c <__multiply+0x1dc>
    7014:	8020d43a 	srli	r16,r16,16
    7018:	8000271e 	bne	r16,zero,70b8 <__multiply+0x168>
    701c:	d8800017 	ldw	r2,0(sp)
    7020:	94800104 	addi	r18,r18,4
    7024:	10800104 	addi	r2,r2,4
    7028:	d8800015 	stw	r2,0(sp)
    702c:	d8800217 	ldw	r2,8(sp)
    7030:	90803e2e 	bgeu	r18,r2,712c <__multiply+0x1dc>
    7034:	94000017 	ldw	r16,0(r18)
    7038:	873fffcc 	andi	fp,r16,65535
    703c:	e03ff526 	beq	fp,zero,7014 <__multiply+0xc4>
    7040:	dcc00017 	ldw	r19,0(sp)
    7044:	dd800317 	ldw	r22,12(sp)
    7048:	002b883a 	mov	r21,zero
    704c:	b5c00017 	ldw	r23,0(r22)
    7050:	9c000017 	ldw	r16,0(r19)
    7054:	e00b883a 	mov	r5,fp
    7058:	b93fffcc 	andi	r4,r23,65535
    705c:	000aba80 	call	aba8 <__mulsi3>
    7060:	b808d43a 	srli	r4,r23,16
    7064:	80ffffcc 	andi	r3,r16,65535
    7068:	10c5883a 	add	r2,r2,r3
    706c:	e00b883a 	mov	r5,fp
    7070:	156b883a 	add	r21,r2,r21
    7074:	8020d43a 	srli	r16,r16,16
    7078:	000aba80 	call	aba8 <__mulsi3>
    707c:	a808d43a 	srli	r4,r21,16
    7080:	1405883a 	add	r2,r2,r16
    7084:	a8ffffcc 	andi	r3,r21,65535
    7088:	1105883a 	add	r2,r2,r4
    708c:	1008943a 	slli	r4,r2,16
    7090:	9cc00104 	addi	r19,r19,4
    7094:	b5800104 	addi	r22,r22,4
    7098:	20c6b03a 	or	r3,r4,r3
    709c:	98ffff15 	stw	r3,-4(r19)
    70a0:	102ad43a 	srli	r21,r2,16
    70a4:	b47fe936 	bltu	r22,r17,704c <__multiply+0xfc>
    70a8:	9d400015 	stw	r21,0(r19)
    70ac:	94000017 	ldw	r16,0(r18)
    70b0:	8020d43a 	srli	r16,r16,16
    70b4:	803fd926 	beq	r16,zero,701c <__multiply+0xcc>
    70b8:	ddc00017 	ldw	r23,0(sp)
    70bc:	dd400317 	ldw	r21,12(sp)
    70c0:	0027883a 	mov	r19,zero
    70c4:	bd800017 	ldw	r22,0(r23)
    70c8:	b039883a 	mov	fp,r22
    70cc:	a900000b 	ldhu	r4,0(r21)
    70d0:	e038d43a 	srli	fp,fp,16
    70d4:	800b883a 	mov	r5,r16
    70d8:	000aba80 	call	aba8 <__mulsi3>
    70dc:	1739883a 	add	fp,r2,fp
    70e0:	e4e7883a 	add	r19,fp,r19
    70e4:	9804943a 	slli	r2,r19,16
    70e8:	b0ffffcc 	andi	r3,r22,65535
    70ec:	bdc00104 	addi	r23,r23,4
    70f0:	10c6b03a 	or	r3,r2,r3
    70f4:	b8ffff15 	stw	r3,-4(r23)
    70f8:	ad400104 	addi	r21,r21,4
    70fc:	a93fff8b 	ldhu	r4,-2(r21)
    7100:	bf000017 	ldw	fp,0(r23)
    7104:	800b883a 	mov	r5,r16
    7108:	000aba80 	call	aba8 <__mulsi3>
    710c:	980cd43a 	srli	r6,r19,16
    7110:	e0ffffcc 	andi	r3,fp,65535
    7114:	10c7883a 	add	r3,r2,r3
    7118:	19ad883a 	add	r22,r3,r6
    711c:	b026d43a 	srli	r19,r22,16
    7120:	ac7fea36 	bltu	r21,r17,70cc <__multiply+0x17c>
    7124:	bd800015 	stw	r22,0(r23)
    7128:	003fbc06 	br	701c <__multiply+0xcc>
    712c:	05000a0e 	bge	zero,r20,7158 <__multiply+0x208>
    7130:	d8c00117 	ldw	r3,4(sp)
    7134:	18bfff17 	ldw	r2,-4(r3)
    7138:	1cffff04 	addi	r19,r3,-4
    713c:	10000326 	beq	r2,zero,714c <__multiply+0x1fc>
    7140:	00000506 	br	7158 <__multiply+0x208>
    7144:	98800017 	ldw	r2,0(r19)
    7148:	1000031e 	bne	r2,zero,7158 <__multiply+0x208>
    714c:	a53fffc4 	addi	r20,r20,-1
    7150:	9cffff04 	addi	r19,r19,-4
    7154:	a03ffb1e 	bne	r20,zero,7144 <__multiply+0x1f4>
    7158:	d8800417 	ldw	r2,16(sp)
    715c:	15000415 	stw	r20,16(r2)
    7160:	dfc00e17 	ldw	ra,56(sp)
    7164:	df000d17 	ldw	fp,52(sp)
    7168:	ddc00c17 	ldw	r23,48(sp)
    716c:	dd800b17 	ldw	r22,44(sp)
    7170:	dd400a17 	ldw	r21,40(sp)
    7174:	dd000917 	ldw	r20,36(sp)
    7178:	dcc00817 	ldw	r19,32(sp)
    717c:	dc800717 	ldw	r18,28(sp)
    7180:	dc400617 	ldw	r17,24(sp)
    7184:	dc000517 	ldw	r16,20(sp)
    7188:	dec00f04 	addi	sp,sp,60
    718c:	f800283a 	ret

00007190 <__pow5mult>:
    7190:	defffb04 	addi	sp,sp,-20
    7194:	dcc00315 	stw	r19,12(sp)
    7198:	dc000015 	stw	r16,0(sp)
    719c:	dfc00415 	stw	ra,16(sp)
    71a0:	dc800215 	stw	r18,8(sp)
    71a4:	dc400115 	stw	r17,4(sp)
    71a8:	308000cc 	andi	r2,r6,3
    71ac:	3021883a 	mov	r16,r6
    71b0:	2027883a 	mov	r19,r4
    71b4:	10002d1e 	bne	r2,zero,726c <__pow5mult+0xdc>
    71b8:	2825883a 	mov	r18,r5
    71bc:	8021d0ba 	srai	r16,r16,2
    71c0:	80001926 	beq	r16,zero,7228 <__pow5mult+0x98>
    71c4:	9c401217 	ldw	r17,72(r19)
    71c8:	8800061e 	bne	r17,zero,71e4 <__pow5mult+0x54>
    71cc:	00002f06 	br	728c <__pow5mult+0xfc>
    71d0:	8021d07a 	srai	r16,r16,1
    71d4:	80001426 	beq	r16,zero,7228 <__pow5mult+0x98>
    71d8:	88800017 	ldw	r2,0(r17)
    71dc:	10001a26 	beq	r2,zero,7248 <__pow5mult+0xb8>
    71e0:	1023883a 	mov	r17,r2
    71e4:	8080004c 	andi	r2,r16,1
    71e8:	103ff926 	beq	r2,zero,71d0 <__pow5mult+0x40>
    71ec:	880d883a 	mov	r6,r17
    71f0:	900b883a 	mov	r5,r18
    71f4:	9809883a 	mov	r4,r19
    71f8:	0006f500 	call	6f50 <__multiply>
    71fc:	90001926 	beq	r18,zero,7264 <__pow5mult+0xd4>
    7200:	91000117 	ldw	r4,4(r18)
    7204:	98c01317 	ldw	r3,76(r19)
    7208:	8021d07a 	srai	r16,r16,1
    720c:	200890ba 	slli	r4,r4,2
    7210:	1907883a 	add	r3,r3,r4
    7214:	19000017 	ldw	r4,0(r3)
    7218:	91000015 	stw	r4,0(r18)
    721c:	1c800015 	stw	r18,0(r3)
    7220:	1025883a 	mov	r18,r2
    7224:	803fec1e 	bne	r16,zero,71d8 <__pow5mult+0x48>
    7228:	9005883a 	mov	r2,r18
    722c:	dfc00417 	ldw	ra,16(sp)
    7230:	dcc00317 	ldw	r19,12(sp)
    7234:	dc800217 	ldw	r18,8(sp)
    7238:	dc400117 	ldw	r17,4(sp)
    723c:	dc000017 	ldw	r16,0(sp)
    7240:	dec00504 	addi	sp,sp,20
    7244:	f800283a 	ret
    7248:	880d883a 	mov	r6,r17
    724c:	880b883a 	mov	r5,r17
    7250:	9809883a 	mov	r4,r19
    7254:	0006f500 	call	6f50 <__multiply>
    7258:	88800015 	stw	r2,0(r17)
    725c:	10000015 	stw	zero,0(r2)
    7260:	003fdf06 	br	71e0 <__pow5mult+0x50>
    7264:	1025883a 	mov	r18,r2
    7268:	003fd906 	br	71d0 <__pow5mult+0x40>
    726c:	100490ba 	slli	r2,r2,2
    7270:	00c00074 	movhi	r3,1
    7274:	000f883a 	mov	r7,zero
    7278:	10c7883a 	add	r3,r2,r3
    727c:	19bfa617 	ldw	r6,-360(r3)
    7280:	0006bbc0 	call	6bbc <__multadd>
    7284:	1025883a 	mov	r18,r2
    7288:	003fcc06 	br	71bc <__pow5mult+0x2c>
    728c:	01400044 	movi	r5,1
    7290:	9809883a 	mov	r4,r19
    7294:	0006af40 	call	6af4 <_Balloc>
    7298:	1023883a 	mov	r17,r2
    729c:	00809c44 	movi	r2,625
    72a0:	88800515 	stw	r2,20(r17)
    72a4:	00800044 	movi	r2,1
    72a8:	88800415 	stw	r2,16(r17)
    72ac:	9c401215 	stw	r17,72(r19)
    72b0:	88000015 	stw	zero,0(r17)
    72b4:	003fcb06 	br	71e4 <__pow5mult+0x54>

000072b8 <__lshift>:
    72b8:	defff904 	addi	sp,sp,-28
    72bc:	dcc00315 	stw	r19,12(sp)
    72c0:	dc400115 	stw	r17,4(sp)
    72c4:	2cc00417 	ldw	r19,16(r5)
    72c8:	3023d17a 	srai	r17,r6,5
    72cc:	28800217 	ldw	r2,8(r5)
    72d0:	dd400515 	stw	r21,20(sp)
    72d4:	8ce7883a 	add	r19,r17,r19
    72d8:	dd000415 	stw	r20,16(sp)
    72dc:	dc800215 	stw	r18,8(sp)
    72e0:	dc000015 	stw	r16,0(sp)
    72e4:	dfc00615 	stw	ra,24(sp)
    72e8:	9c000044 	addi	r16,r19,1
    72ec:	2825883a 	mov	r18,r5
    72f0:	302b883a 	mov	r21,r6
    72f4:	2029883a 	mov	r20,r4
    72f8:	29400117 	ldw	r5,4(r5)
    72fc:	1400030e 	bge	r2,r16,730c <__lshift+0x54>
    7300:	1085883a 	add	r2,r2,r2
    7304:	29400044 	addi	r5,r5,1
    7308:	143ffd16 	blt	r2,r16,7300 <__lshift+0x48>
    730c:	a009883a 	mov	r4,r20
    7310:	0006af40 	call	6af4 <_Balloc>
    7314:	11000504 	addi	r4,r2,20
    7318:	0440090e 	bge	zero,r17,7340 <__lshift+0x88>
    731c:	8c400144 	addi	r17,r17,5
    7320:	882290ba 	slli	r17,r17,2
    7324:	2007883a 	mov	r3,r4
    7328:	144b883a 	add	r5,r2,r17
    732c:	18c00104 	addi	r3,r3,4
    7330:	183fff15 	stw	zero,-4(r3)
    7334:	28fffd1e 	bne	r5,r3,732c <__lshift+0x74>
    7338:	8c7ffb04 	addi	r17,r17,-20
    733c:	2449883a 	add	r4,r4,r17
    7340:	92000417 	ldw	r8,16(r18)
    7344:	90c00504 	addi	r3,r18,20
    7348:	a98007cc 	andi	r6,r21,31
    734c:	401090ba 	slli	r8,r8,2
    7350:	1a11883a 	add	r8,r3,r8
    7354:	30002126 	beq	r6,zero,73dc <__lshift+0x124>
    7358:	02400804 	movi	r9,32
    735c:	4993c83a 	sub	r9,r9,r6
    7360:	000f883a 	mov	r7,zero
    7364:	19400017 	ldw	r5,0(r3)
    7368:	21000104 	addi	r4,r4,4
    736c:	18c00104 	addi	r3,r3,4
    7370:	298a983a 	sll	r5,r5,r6
    7374:	29cab03a 	or	r5,r5,r7
    7378:	217fff15 	stw	r5,-4(r4)
    737c:	197fff17 	ldw	r5,-4(r3)
    7380:	2a4ed83a 	srl	r7,r5,r9
    7384:	1a3ff736 	bltu	r3,r8,7364 <__lshift+0xac>
    7388:	21c00015 	stw	r7,0(r4)
    738c:	38000126 	beq	r7,zero,7394 <__lshift+0xdc>
    7390:	8027883a 	mov	r19,r16
    7394:	14c00415 	stw	r19,16(r2)
    7398:	90000726 	beq	r18,zero,73b8 <__lshift+0x100>
    739c:	91000117 	ldw	r4,4(r18)
    73a0:	a0c01317 	ldw	r3,76(r20)
    73a4:	200890ba 	slli	r4,r4,2
    73a8:	1907883a 	add	r3,r3,r4
    73ac:	19000017 	ldw	r4,0(r3)
    73b0:	91000015 	stw	r4,0(r18)
    73b4:	1c800015 	stw	r18,0(r3)
    73b8:	dfc00617 	ldw	ra,24(sp)
    73bc:	dd400517 	ldw	r21,20(sp)
    73c0:	dd000417 	ldw	r20,16(sp)
    73c4:	dcc00317 	ldw	r19,12(sp)
    73c8:	dc800217 	ldw	r18,8(sp)
    73cc:	dc400117 	ldw	r17,4(sp)
    73d0:	dc000017 	ldw	r16,0(sp)
    73d4:	dec00704 	addi	sp,sp,28
    73d8:	f800283a 	ret
    73dc:	18c00104 	addi	r3,r3,4
    73e0:	197fff17 	ldw	r5,-4(r3)
    73e4:	21000104 	addi	r4,r4,4
    73e8:	217fff15 	stw	r5,-4(r4)
    73ec:	1a3ffb36 	bltu	r3,r8,73dc <__lshift+0x124>
    73f0:	003fe806 	br	7394 <__lshift+0xdc>

000073f4 <__mcmp>:
    73f4:	20800417 	ldw	r2,16(r4)
    73f8:	28c00417 	ldw	r3,16(r5)
    73fc:	10c5c83a 	sub	r2,r2,r3
    7400:	10000e1e 	bne	r2,zero,743c <__mcmp+0x48>
    7404:	180c90ba 	slli	r6,r3,2
    7408:	21000504 	addi	r4,r4,20
    740c:	29400504 	addi	r5,r5,20
    7410:	2187883a 	add	r3,r4,r6
    7414:	298b883a 	add	r5,r5,r6
    7418:	00000106 	br	7420 <__mcmp+0x2c>
    741c:	20c0082e 	bgeu	r4,r3,7440 <__mcmp+0x4c>
    7420:	18ffff04 	addi	r3,r3,-4
    7424:	297fff04 	addi	r5,r5,-4
    7428:	19c00017 	ldw	r7,0(r3)
    742c:	29800017 	ldw	r6,0(r5)
    7430:	39bffa26 	beq	r7,r6,741c <__mcmp+0x28>
    7434:	3980032e 	bgeu	r7,r6,7444 <__mcmp+0x50>
    7438:	00bfffc4 	movi	r2,-1
    743c:	f800283a 	ret
    7440:	f800283a 	ret
    7444:	00800044 	movi	r2,1
    7448:	f800283a 	ret

0000744c <__mdiff>:
    744c:	defffa04 	addi	sp,sp,-24
    7450:	dc800215 	stw	r18,8(sp)
    7454:	30c00417 	ldw	r3,16(r6)
    7458:	2c800417 	ldw	r18,16(r5)
    745c:	dd000415 	stw	r20,16(sp)
    7460:	dcc00315 	stw	r19,12(sp)
    7464:	dc400115 	stw	r17,4(sp)
    7468:	dc000015 	stw	r16,0(sp)
    746c:	dfc00515 	stw	ra,20(sp)
    7470:	90e5c83a 	sub	r18,r18,r3
    7474:	2827883a 	mov	r19,r5
    7478:	3029883a 	mov	r20,r6
    747c:	2c000504 	addi	r16,r5,20
    7480:	34400504 	addi	r17,r6,20
    7484:	9000131e 	bne	r18,zero,74d4 <__mdiff+0x88>
    7488:	180690ba 	slli	r3,r3,2
    748c:	80c5883a 	add	r2,r16,r3
    7490:	88c7883a 	add	r3,r17,r3
    7494:	00000106 	br	749c <__mdiff+0x50>
    7498:	8080552e 	bgeu	r16,r2,75f0 <__mdiff+0x1a4>
    749c:	10bfff04 	addi	r2,r2,-4
    74a0:	18ffff04 	addi	r3,r3,-4
    74a4:	11c00017 	ldw	r7,0(r2)
    74a8:	19400017 	ldw	r5,0(r3)
    74ac:	397ffa26 	beq	r7,r5,7498 <__mdiff+0x4c>
    74b0:	39400a2e 	bgeu	r7,r5,74dc <__mdiff+0x90>
    74b4:	8007883a 	mov	r3,r16
    74b8:	9805883a 	mov	r2,r19
    74bc:	8821883a 	mov	r16,r17
    74c0:	a027883a 	mov	r19,r20
    74c4:	1823883a 	mov	r17,r3
    74c8:	1029883a 	mov	r20,r2
    74cc:	04800044 	movi	r18,1
    74d0:	00000206 	br	74dc <__mdiff+0x90>
    74d4:	903ff716 	blt	r18,zero,74b4 <__mdiff+0x68>
    74d8:	0025883a 	mov	r18,zero
    74dc:	99400117 	ldw	r5,4(r19)
    74e0:	0006af40 	call	6af4 <_Balloc>
    74e4:	9a400417 	ldw	r9,16(r19)
    74e8:	a2c00417 	ldw	r11,16(r20)
    74ec:	12800504 	addi	r10,r2,20
    74f0:	481090ba 	slli	r8,r9,2
    74f4:	581690ba 	slli	r11,r11,2
    74f8:	14800315 	stw	r18,12(r2)
    74fc:	8211883a 	add	r8,r16,r8
    7500:	8ad7883a 	add	r11,r17,r11
    7504:	0007883a 	mov	r3,zero
    7508:	00000106 	br	7510 <__mdiff+0xc4>
    750c:	3815883a 	mov	r10,r7
    7510:	81000017 	ldw	r4,0(r16)
    7514:	89800017 	ldw	r6,0(r17)
    7518:	51c00104 	addi	r7,r10,4
    751c:	217fffcc 	andi	r5,r4,65535
    7520:	28cb883a 	add	r5,r5,r3
    7524:	30ffffcc 	andi	r3,r6,65535
    7528:	28cbc83a 	sub	r5,r5,r3
    752c:	300cd43a 	srli	r6,r6,16
    7530:	2006d43a 	srli	r3,r4,16
    7534:	2809d43a 	srai	r4,r5,16
    7538:	297fffcc 	andi	r5,r5,65535
    753c:	1987c83a 	sub	r3,r3,r6
    7540:	1907883a 	add	r3,r3,r4
    7544:	1808943a 	slli	r4,r3,16
    7548:	8c400104 	addi	r17,r17,4
    754c:	84000104 	addi	r16,r16,4
    7550:	214ab03a 	or	r5,r4,r5
    7554:	397fff15 	stw	r5,-4(r7)
    7558:	1807d43a 	srai	r3,r3,16
    755c:	8affeb36 	bltu	r17,r11,750c <__mdiff+0xc0>
    7560:	8200152e 	bgeu	r16,r8,75b8 <__mdiff+0x16c>
    7564:	3815883a 	mov	r10,r7
    7568:	800d883a 	mov	r6,r16
    756c:	31000017 	ldw	r4,0(r6)
    7570:	52800104 	addi	r10,r10,4
    7574:	31800104 	addi	r6,r6,4
    7578:	217fffcc 	andi	r5,r4,65535
    757c:	28cb883a 	add	r5,r5,r3
    7580:	2817d43a 	srai	r11,r5,16
    7584:	2006d43a 	srli	r3,r4,16
    7588:	293fffcc 	andi	r4,r5,65535
    758c:	1ac7883a 	add	r3,r3,r11
    7590:	180a943a 	slli	r5,r3,16
    7594:	1807d43a 	srai	r3,r3,16
    7598:	290ab03a 	or	r5,r5,r4
    759c:	517fff15 	stw	r5,-4(r10)
    75a0:	323ff236 	bltu	r6,r8,756c <__mdiff+0x120>
    75a4:	42bfffc4 	addi	r10,r8,-1
    75a8:	5415c83a 	sub	r10,r10,r16
    75ac:	5014d0ba 	srli	r10,r10,2
    75b0:	501490ba 	slli	r10,r10,2
    75b4:	3a95883a 	add	r10,r7,r10
    75b8:	2800041e 	bne	r5,zero,75cc <__mdiff+0x180>
    75bc:	52bfff04 	addi	r10,r10,-4
    75c0:	50c00017 	ldw	r3,0(r10)
    75c4:	4a7fffc4 	addi	r9,r9,-1
    75c8:	183ffc26 	beq	r3,zero,75bc <__mdiff+0x170>
    75cc:	12400415 	stw	r9,16(r2)
    75d0:	dfc00517 	ldw	ra,20(sp)
    75d4:	dd000417 	ldw	r20,16(sp)
    75d8:	dcc00317 	ldw	r19,12(sp)
    75dc:	dc800217 	ldw	r18,8(sp)
    75e0:	dc400117 	ldw	r17,4(sp)
    75e4:	dc000017 	ldw	r16,0(sp)
    75e8:	dec00604 	addi	sp,sp,24
    75ec:	f800283a 	ret
    75f0:	000b883a 	mov	r5,zero
    75f4:	0006af40 	call	6af4 <_Balloc>
    75f8:	00c00044 	movi	r3,1
    75fc:	10c00415 	stw	r3,16(r2)
    7600:	10000515 	stw	zero,20(r2)
    7604:	003ff206 	br	75d0 <__mdiff+0x184>

00007608 <__ulp>:
    7608:	295ffc2c 	andhi	r5,r5,32752
    760c:	00ff3034 	movhi	r3,64704
    7610:	28c7883a 	add	r3,r5,r3
    7614:	00c0020e 	bge	zero,r3,7620 <__ulp+0x18>
    7618:	0005883a 	mov	r2,zero
    761c:	f800283a 	ret
    7620:	00c7c83a 	sub	r3,zero,r3
    7624:	1807d53a 	srai	r3,r3,20
    7628:	18800508 	cmpgei	r2,r3,20
    762c:	1000041e 	bne	r2,zero,7640 <__ulp+0x38>
    7630:	01400234 	movhi	r5,8
    7634:	28c7d83a 	sra	r3,r5,r3
    7638:	0005883a 	mov	r2,zero
    763c:	f800283a 	ret
    7640:	193ffb04 	addi	r4,r3,-20
    7644:	208007c8 	cmpgei	r2,r4,31
    7648:	0007883a 	mov	r3,zero
    764c:	1000031e 	bne	r2,zero,765c <__ulp+0x54>
    7650:	00a00034 	movhi	r2,32768
    7654:	1104d83a 	srl	r2,r2,r4
    7658:	f800283a 	ret
    765c:	00800044 	movi	r2,1
    7660:	f800283a 	ret

00007664 <__b2d>:
    7664:	defffa04 	addi	sp,sp,-24
    7668:	dc000015 	stw	r16,0(sp)
    766c:	24000417 	ldw	r16,16(r4)
    7670:	dc800215 	stw	r18,8(sp)
    7674:	24800504 	addi	r18,r4,20
    7678:	802090ba 	slli	r16,r16,2
    767c:	dc400115 	stw	r17,4(sp)
    7680:	dd000415 	stw	r20,16(sp)
    7684:	9421883a 	add	r16,r18,r16
    7688:	847fff17 	ldw	r17,-4(r16)
    768c:	dcc00315 	stw	r19,12(sp)
    7690:	2829883a 	mov	r20,r5
    7694:	8809883a 	mov	r4,r17
    7698:	dfc00515 	stw	ra,20(sp)
    769c:	0006e080 	call	6e08 <__hi0bits>
    76a0:	01000804 	movi	r4,32
    76a4:	2087c83a 	sub	r3,r4,r2
    76a8:	a0c00015 	stw	r3,0(r20)
    76ac:	10c002c8 	cmpgei	r3,r2,11
    76b0:	84ffff04 	addi	r19,r16,-4
    76b4:	18001f26 	beq	r3,zero,7734 <__b2d+0xd0>
    76b8:	10fffd44 	addi	r3,r2,-11
    76bc:	94c00e2e 	bgeu	r18,r19,76f8 <__b2d+0x94>
    76c0:	80bffe17 	ldw	r2,-8(r16)
    76c4:	18001226 	beq	r3,zero,7710 <__b2d+0xac>
    76c8:	20c9c83a 	sub	r4,r4,r3
    76cc:	110cd83a 	srl	r6,r2,r4
    76d0:	88e2983a 	sll	r17,r17,r3
    76d4:	10c4983a 	sll	r2,r2,r3
    76d8:	817ffe04 	addi	r5,r16,-8
    76dc:	8986b03a 	or	r3,r17,r6
    76e0:	18cffc34 	orhi	r3,r3,16368
    76e4:	91400b2e 	bgeu	r18,r5,7714 <__b2d+0xb0>
    76e8:	817ffd17 	ldw	r5,-12(r16)
    76ec:	2908d83a 	srl	r4,r5,r4
    76f0:	1104b03a 	or	r2,r2,r4
    76f4:	00000706 	br	7714 <__b2d+0xb0>
    76f8:	18000426 	beq	r3,zero,770c <__b2d+0xa8>
    76fc:	88c6983a 	sll	r3,r17,r3
    7700:	0005883a 	mov	r2,zero
    7704:	18cffc34 	orhi	r3,r3,16368
    7708:	00000206 	br	7714 <__b2d+0xb0>
    770c:	0005883a 	mov	r2,zero
    7710:	88cffc34 	orhi	r3,r17,16368
    7714:	dfc00517 	ldw	ra,20(sp)
    7718:	dd000417 	ldw	r20,16(sp)
    771c:	dcc00317 	ldw	r19,12(sp)
    7720:	dc800217 	ldw	r18,8(sp)
    7724:	dc400117 	ldw	r17,4(sp)
    7728:	dc000017 	ldw	r16,0(sp)
    772c:	dec00604 	addi	sp,sp,24
    7730:	f800283a 	ret
    7734:	014002c4 	movi	r5,11
    7738:	2889c83a 	sub	r4,r5,r2
    773c:	8906d83a 	srl	r3,r17,r4
    7740:	18cffc34 	orhi	r3,r3,16368
    7744:	94c00536 	bltu	r18,r19,775c <__b2d+0xf8>
    7748:	000b883a 	mov	r5,zero
    774c:	10800544 	addi	r2,r2,21
    7750:	8884983a 	sll	r2,r17,r2
    7754:	1144b03a 	or	r2,r2,r5
    7758:	003fee06 	br	7714 <__b2d+0xb0>
    775c:	817ffe17 	ldw	r5,-8(r16)
    7760:	290ad83a 	srl	r5,r5,r4
    7764:	003ff906 	br	774c <__b2d+0xe8>

00007768 <__d2b>:
    7768:	defff804 	addi	sp,sp,-32
    776c:	dc400315 	stw	r17,12(sp)
    7770:	3023883a 	mov	r17,r6
    7774:	dd000615 	stw	r20,24(sp)
    7778:	dc000215 	stw	r16,8(sp)
    777c:	2829883a 	mov	r20,r5
    7780:	8820d53a 	srli	r16,r17,20
    7784:	01400044 	movi	r5,1
    7788:	dcc00515 	stw	r19,20(sp)
    778c:	dc800415 	stw	r18,16(sp)
    7790:	dfc00715 	stw	ra,28(sp)
    7794:	3825883a 	mov	r18,r7
    7798:	0006af40 	call	6af4 <_Balloc>
    779c:	01800434 	movhi	r6,16
    77a0:	31bfffc4 	addi	r6,r6,-1
    77a4:	8401ffcc 	andi	r16,r16,2047
    77a8:	1027883a 	mov	r19,r2
    77ac:	89a2703a 	and	r17,r17,r6
    77b0:	80000126 	beq	r16,zero,77b8 <__d2b+0x50>
    77b4:	8c400434 	orhi	r17,r17,16
    77b8:	dc400115 	stw	r17,4(sp)
    77bc:	a0002826 	beq	r20,zero,7860 <__d2b+0xf8>
    77c0:	d809883a 	mov	r4,sp
    77c4:	dd000015 	stw	r20,0(sp)
    77c8:	0006e6c0 	call	6e6c <__lo0bits>
    77cc:	d8c00117 	ldw	r3,4(sp)
    77d0:	1000171e 	bne	r2,zero,7830 <__d2b+0xc8>
    77d4:	d9000017 	ldw	r4,0(sp)
    77d8:	98c00615 	stw	r3,24(r19)
    77dc:	99000515 	stw	r4,20(r19)
    77e0:	18001d1e 	bne	r3,zero,7858 <__d2b+0xf0>
    77e4:	04400044 	movi	r17,1
    77e8:	9c400415 	stw	r17,16(r19)
    77ec:	80002526 	beq	r16,zero,7884 <__d2b+0x11c>
    77f0:	00c00d44 	movi	r3,53
    77f4:	843ef344 	addi	r16,r16,-1075
    77f8:	80a1883a 	add	r16,r16,r2
    77fc:	1885c83a 	sub	r2,r3,r2
    7800:	d8c00817 	ldw	r3,32(sp)
    7804:	94000015 	stw	r16,0(r18)
    7808:	18800015 	stw	r2,0(r3)
    780c:	9805883a 	mov	r2,r19
    7810:	dfc00717 	ldw	ra,28(sp)
    7814:	dd000617 	ldw	r20,24(sp)
    7818:	dcc00517 	ldw	r19,20(sp)
    781c:	dc800417 	ldw	r18,16(sp)
    7820:	dc400317 	ldw	r17,12(sp)
    7824:	dc000217 	ldw	r16,8(sp)
    7828:	dec00804 	addi	sp,sp,32
    782c:	f800283a 	ret
    7830:	01000804 	movi	r4,32
    7834:	2089c83a 	sub	r4,r4,r2
    7838:	1908983a 	sll	r4,r3,r4
    783c:	d9400017 	ldw	r5,0(sp)
    7840:	1886d83a 	srl	r3,r3,r2
    7844:	2148b03a 	or	r4,r4,r5
    7848:	99000515 	stw	r4,20(r19)
    784c:	d8c00115 	stw	r3,4(sp)
    7850:	98c00615 	stw	r3,24(r19)
    7854:	183fe326 	beq	r3,zero,77e4 <__d2b+0x7c>
    7858:	04400084 	movi	r17,2
    785c:	003fe206 	br	77e8 <__d2b+0x80>
    7860:	d9000104 	addi	r4,sp,4
    7864:	0006e6c0 	call	6e6c <__lo0bits>
    7868:	00c00044 	movi	r3,1
    786c:	98c00415 	stw	r3,16(r19)
    7870:	d8c00117 	ldw	r3,4(sp)
    7874:	10800804 	addi	r2,r2,32
    7878:	04400044 	movi	r17,1
    787c:	98c00515 	stw	r3,20(r19)
    7880:	803fdb1e 	bne	r16,zero,77f0 <__d2b+0x88>
    7884:	880690ba 	slli	r3,r17,2
    7888:	10bef384 	addi	r2,r2,-1074
    788c:	8822917a 	slli	r17,r17,5
    7890:	98c7883a 	add	r3,r19,r3
    7894:	19000417 	ldw	r4,16(r3)
    7898:	90800015 	stw	r2,0(r18)
    789c:	0006e080 	call	6e08 <__hi0bits>
    78a0:	88a3c83a 	sub	r17,r17,r2
    78a4:	d8800817 	ldw	r2,32(sp)
    78a8:	14400015 	stw	r17,0(r2)
    78ac:	003fd706 	br	780c <__d2b+0xa4>

000078b0 <__ratio>:
    78b0:	defff904 	addi	sp,sp,-28
    78b4:	dc400315 	stw	r17,12(sp)
    78b8:	2823883a 	mov	r17,r5
    78bc:	d80b883a 	mov	r5,sp
    78c0:	dfc00615 	stw	ra,24(sp)
    78c4:	dcc00515 	stw	r19,20(sp)
    78c8:	dc800415 	stw	r18,16(sp)
    78cc:	2027883a 	mov	r19,r4
    78d0:	dc000215 	stw	r16,8(sp)
    78d4:	00076640 	call	7664 <__b2d>
    78d8:	d9400104 	addi	r5,sp,4
    78dc:	8809883a 	mov	r4,r17
    78e0:	1025883a 	mov	r18,r2
    78e4:	1821883a 	mov	r16,r3
    78e8:	00076640 	call	7664 <__b2d>
    78ec:	89400417 	ldw	r5,16(r17)
    78f0:	99000417 	ldw	r4,16(r19)
    78f4:	d9800117 	ldw	r6,4(sp)
    78f8:	2149c83a 	sub	r4,r4,r5
    78fc:	d9400017 	ldw	r5,0(sp)
    7900:	2008917a 	slli	r4,r4,5
    7904:	298bc83a 	sub	r5,r5,r6
    7908:	2149883a 	add	r4,r4,r5
    790c:	01000e0e 	bge	zero,r4,7948 <__ratio+0x98>
    7910:	2008953a 	slli	r4,r4,20
    7914:	2421883a 	add	r16,r4,r16
    7918:	100d883a 	mov	r6,r2
    791c:	180f883a 	mov	r7,r3
    7920:	9009883a 	mov	r4,r18
    7924:	800b883a 	mov	r5,r16
    7928:	000b5700 	call	b570 <__divdf3>
    792c:	dfc00617 	ldw	ra,24(sp)
    7930:	dcc00517 	ldw	r19,20(sp)
    7934:	dc800417 	ldw	r18,16(sp)
    7938:	dc400317 	ldw	r17,12(sp)
    793c:	dc000217 	ldw	r16,8(sp)
    7940:	dec00704 	addi	sp,sp,28
    7944:	f800283a 	ret
    7948:	2008953a 	slli	r4,r4,20
    794c:	1907c83a 	sub	r3,r3,r4
    7950:	003ff106 	br	7918 <__ratio+0x68>

00007954 <_mprec_log10>:
    7954:	defffe04 	addi	sp,sp,-8
    7958:	dc000015 	stw	r16,0(sp)
    795c:	dfc00115 	stw	ra,4(sp)
    7960:	20800608 	cmpgei	r2,r4,24
    7964:	2021883a 	mov	r16,r4
    7968:	10000d26 	beq	r2,zero,79a0 <_mprec_log10+0x4c>
    796c:	0005883a 	mov	r2,zero
    7970:	00cffc34 	movhi	r3,16368
    7974:	843fffc4 	addi	r16,r16,-1
    7978:	000d883a 	mov	r6,zero
    797c:	01d00934 	movhi	r7,16420
    7980:	1009883a 	mov	r4,r2
    7984:	180b883a 	mov	r5,r3
    7988:	000c1340 	call	c134 <__muldf3>
    798c:	803ff91e 	bne	r16,zero,7974 <_mprec_log10+0x20>
    7990:	dfc00117 	ldw	ra,4(sp)
    7994:	dc000017 	ldw	r16,0(sp)
    7998:	dec00204 	addi	sp,sp,8
    799c:	f800283a 	ret
    79a0:	202090fa 	slli	r16,r4,3
    79a4:	00800074 	movhi	r2,1
    79a8:	10bfbe04 	addi	r2,r2,-264
    79ac:	1421883a 	add	r16,r2,r16
    79b0:	80800017 	ldw	r2,0(r16)
    79b4:	80c00117 	ldw	r3,4(r16)
    79b8:	dfc00117 	ldw	ra,4(sp)
    79bc:	dc000017 	ldw	r16,0(sp)
    79c0:	dec00204 	addi	sp,sp,8
    79c4:	f800283a 	ret

000079c8 <__copybits>:
    79c8:	29ffffc4 	addi	r7,r5,-1
    79cc:	380fd17a 	srai	r7,r7,5
    79d0:	31400417 	ldw	r5,16(r6)
    79d4:	30800504 	addi	r2,r6,20
    79d8:	39c00044 	addi	r7,r7,1
    79dc:	280a90ba 	slli	r5,r5,2
    79e0:	380e90ba 	slli	r7,r7,2
    79e4:	114b883a 	add	r5,r2,r5
    79e8:	21cf883a 	add	r7,r4,r7
    79ec:	11400c2e 	bgeu	r2,r5,7a20 <__copybits+0x58>
    79f0:	2007883a 	mov	r3,r4
    79f4:	10800104 	addi	r2,r2,4
    79f8:	123fff17 	ldw	r8,-4(r2)
    79fc:	18c00104 	addi	r3,r3,4
    7a00:	1a3fff15 	stw	r8,-4(r3)
    7a04:	117ffb36 	bltu	r2,r5,79f4 <__copybits+0x2c>
    7a08:	2985c83a 	sub	r2,r5,r6
    7a0c:	10bffac4 	addi	r2,r2,-21
    7a10:	1004d0ba 	srli	r2,r2,2
    7a14:	10800044 	addi	r2,r2,1
    7a18:	100490ba 	slli	r2,r2,2
    7a1c:	2089883a 	add	r4,r4,r2
    7a20:	21c0032e 	bgeu	r4,r7,7a30 <__copybits+0x68>
    7a24:	21000104 	addi	r4,r4,4
    7a28:	203fff15 	stw	zero,-4(r4)
    7a2c:	21fffd36 	bltu	r4,r7,7a24 <__copybits+0x5c>
    7a30:	f800283a 	ret

00007a34 <__any_on>:
    7a34:	20800417 	ldw	r2,16(r4)
    7a38:	280dd17a 	srai	r6,r5,5
    7a3c:	21000504 	addi	r4,r4,20
    7a40:	11800c0e 	bge	r2,r6,7a74 <__any_on+0x40>
    7a44:	100690ba 	slli	r3,r2,2
    7a48:	20c7883a 	add	r3,r4,r3
    7a4c:	20c0142e 	bgeu	r4,r3,7aa0 <__any_on+0x6c>
    7a50:	18bfff17 	ldw	r2,-4(r3)
    7a54:	18ffff04 	addi	r3,r3,-4
    7a58:	1000041e 	bne	r2,zero,7a6c <__any_on+0x38>
    7a5c:	20c00f2e 	bgeu	r4,r3,7a9c <__any_on+0x68>
    7a60:	18ffff04 	addi	r3,r3,-4
    7a64:	19400017 	ldw	r5,0(r3)
    7a68:	283ffc26 	beq	r5,zero,7a5c <__any_on+0x28>
    7a6c:	00800044 	movi	r2,1
    7a70:	f800283a 	ret
    7a74:	300690ba 	slli	r3,r6,2
    7a78:	20c7883a 	add	r3,r4,r3
    7a7c:	30bff30e 	bge	r6,r2,7a4c <__any_on+0x18>
    7a80:	294007cc 	andi	r5,r5,31
    7a84:	283ff126 	beq	r5,zero,7a4c <__any_on+0x18>
    7a88:	19800017 	ldw	r6,0(r3)
    7a8c:	3144d83a 	srl	r2,r6,r5
    7a90:	114a983a 	sll	r5,r2,r5
    7a94:	317ff51e 	bne	r6,r5,7a6c <__any_on+0x38>
    7a98:	003fec06 	br	7a4c <__any_on+0x18>
    7a9c:	f800283a 	ret
    7aa0:	0005883a 	mov	r2,zero
    7aa4:	f800283a 	ret

00007aa8 <_read_r>:
    7aa8:	defffe04 	addi	sp,sp,-8
    7aac:	2805883a 	mov	r2,r5
    7ab0:	dc000015 	stw	r16,0(sp)
    7ab4:	300b883a 	mov	r5,r6
    7ab8:	2021883a 	mov	r16,r4
    7abc:	380d883a 	mov	r6,r7
    7ac0:	1009883a 	mov	r4,r2
    7ac4:	00800074 	movhi	r2,1
    7ac8:	dfc00115 	stw	ra,4(sp)
    7acc:	100e8315 	stw	zero,14860(r2)
    7ad0:	000db3c0 	call	db3c <read>
    7ad4:	10ffffd8 	cmpnei	r3,r2,-1
    7ad8:	18000426 	beq	r3,zero,7aec <_read_r+0x44>
    7adc:	dfc00117 	ldw	ra,4(sp)
    7ae0:	dc000017 	ldw	r16,0(sp)
    7ae4:	dec00204 	addi	sp,sp,8
    7ae8:	f800283a 	ret
    7aec:	00c00074 	movhi	r3,1
    7af0:	18ce8317 	ldw	r3,14860(r3)
    7af4:	183ff926 	beq	r3,zero,7adc <_read_r+0x34>
    7af8:	80c00015 	stw	r3,0(r16)
    7afc:	dfc00117 	ldw	ra,4(sp)
    7b00:	dc000017 	ldw	r16,0(sp)
    7b04:	dec00204 	addi	sp,sp,8
    7b08:	f800283a 	ret

00007b0c <_realloc_r>:
    7b0c:	defff504 	addi	sp,sp,-44
    7b10:	dcc00415 	stw	r19,16(sp)
    7b14:	dfc00a15 	stw	ra,40(sp)
    7b18:	df000915 	stw	fp,36(sp)
    7b1c:	ddc00815 	stw	r23,32(sp)
    7b20:	dd800715 	stw	r22,28(sp)
    7b24:	dd400615 	stw	r21,24(sp)
    7b28:	dd000515 	stw	r20,20(sp)
    7b2c:	dc800315 	stw	r18,12(sp)
    7b30:	dc400215 	stw	r17,8(sp)
    7b34:	dc000115 	stw	r16,4(sp)
    7b38:	3027883a 	mov	r19,r6
    7b3c:	28008b26 	beq	r5,zero,7d6c <_realloc_r+0x260>
    7b40:	282d883a 	mov	r22,r5
    7b44:	202b883a 	mov	r21,r4
    7b48:	9c0002c4 	addi	r16,r19,11
    7b4c:	000dab80 	call	dab8 <__malloc_lock>
    7b50:	808005f0 	cmpltui	r2,r16,23
    7b54:	1000521e 	bne	r2,zero,7ca0 <_realloc_r+0x194>
    7b58:	017ffe04 	movi	r5,-8
    7b5c:	8160703a 	and	r16,r16,r5
    7b60:	8007883a 	mov	r3,r16
    7b64:	80005116 	blt	r16,zero,7cac <_realloc_r+0x1a0>
    7b68:	84c05036 	bltu	r16,r19,7cac <_realloc_r+0x1a0>
    7b6c:	b0bfff17 	ldw	r2,-4(r22)
    7b70:	017fff04 	movi	r5,-4
    7b74:	b4bffe04 	addi	r18,r22,-8
    7b78:	1162703a 	and	r17,r2,r5
    7b7c:	9469883a 	add	r20,r18,r17
    7b80:	88c0390e 	bge	r17,r3,7c68 <_realloc_r+0x15c>
    7b84:	07000074 	movhi	fp,1
    7b88:	e7017204 	addi	fp,fp,1480
    7b8c:	e2000217 	ldw	r8,8(fp)
    7b90:	a1000117 	ldw	r4,4(r20)
    7b94:	45008e26 	beq	r8,r20,7dd0 <_realloc_r+0x2c4>
    7b98:	01bfff84 	movi	r6,-2
    7b9c:	218c703a 	and	r6,r4,r6
    7ba0:	a18d883a 	add	r6,r20,r6
    7ba4:	31800117 	ldw	r6,4(r6)
    7ba8:	3180004c 	andi	r6,r6,1
    7bac:	30004f1e 	bne	r6,zero,7cec <_realloc_r+0x1e0>
    7bb0:	2148703a 	and	r4,r4,r5
    7bb4:	890b883a 	add	r5,r17,r4
    7bb8:	28c0cb0e 	bge	r5,r3,7ee8 <_realloc_r+0x3dc>
    7bbc:	1080004c 	andi	r2,r2,1
    7bc0:	10004c1e 	bne	r2,zero,7cf4 <_realloc_r+0x1e8>
    7bc4:	b1fffe17 	ldw	r7,-8(r22)
    7bc8:	00bfff04 	movi	r2,-4
    7bcc:	91cfc83a 	sub	r7,r18,r7
    7bd0:	39400117 	ldw	r5,4(r7)
    7bd4:	288a703a 	and	r5,r5,r2
    7bd8:	a0000426 	beq	r20,zero,7bec <_realloc_r+0xe0>
    7bdc:	896f883a 	add	r23,r17,r5
    7be0:	b92f883a 	add	r23,r23,r4
    7be4:	4500cb26 	beq	r8,r20,7f14 <_realloc_r+0x408>
    7be8:	b8c0930e 	bge	r23,r3,7e38 <_realloc_r+0x32c>
    7bec:	38004126 	beq	r7,zero,7cf4 <_realloc_r+0x1e8>
    7bf0:	896f883a 	add	r23,r17,r5
    7bf4:	b8c03f16 	blt	r23,r3,7cf4 <_realloc_r+0x1e8>
    7bf8:	38c00217 	ldw	r3,8(r7)
    7bfc:	38800317 	ldw	r2,12(r7)
    7c00:	89bfff04 	addi	r6,r17,-4
    7c04:	31000968 	cmpgeui	r4,r6,37
    7c08:	18800315 	stw	r2,12(r3)
    7c0c:	10c00215 	stw	r3,8(r2)
    7c10:	3de9883a 	add	r20,r7,r23
    7c14:	38c00204 	addi	r3,r7,8
    7c18:	2000f81e 	bne	r4,zero,7ffc <_realloc_r+0x4f0>
    7c1c:	30800530 	cmpltui	r2,r6,20
    7c20:	b1000017 	ldw	r4,0(r22)
    7c24:	1000eb1e 	bne	r2,zero,7fd4 <_realloc_r+0x4c8>
    7c28:	39000215 	stw	r4,8(r7)
    7c2c:	b1000117 	ldw	r4,4(r22)
    7c30:	30800728 	cmpgeui	r2,r6,28
    7c34:	39000315 	stw	r4,12(r7)
    7c38:	1001041e 	bne	r2,zero,804c <_realloc_r+0x540>
    7c3c:	b1000217 	ldw	r4,8(r22)
    7c40:	38800404 	addi	r2,r7,16
    7c44:	b5800204 	addi	r22,r22,8
    7c48:	11000015 	stw	r4,0(r2)
    7c4c:	b1000117 	ldw	r4,4(r22)
    7c50:	b823883a 	mov	r17,r23
    7c54:	3825883a 	mov	r18,r7
    7c58:	11000115 	stw	r4,4(r2)
    7c5c:	b1000217 	ldw	r4,8(r22)
    7c60:	182d883a 	mov	r22,r3
    7c64:	11000215 	stw	r4,8(r2)
    7c68:	91800117 	ldw	r6,4(r18)
    7c6c:	8c05c83a 	sub	r2,r17,r16
    7c70:	10c00430 	cmpltui	r3,r2,16
    7c74:	3180004c 	andi	r6,r6,1
    7c78:	18004926 	beq	r3,zero,7da0 <_realloc_r+0x294>
    7c7c:	898cb03a 	or	r6,r17,r6
    7c80:	91800115 	stw	r6,4(r18)
    7c84:	a0800117 	ldw	r2,4(r20)
    7c88:	10800054 	ori	r2,r2,1
    7c8c:	a0800115 	stw	r2,4(r20)
    7c90:	a809883a 	mov	r4,r21
    7c94:	000dadc0 	call	dadc <__malloc_unlock>
    7c98:	b027883a 	mov	r19,r22
    7c9c:	00000606 	br	7cb8 <_realloc_r+0x1ac>
    7ca0:	04000404 	movi	r16,16
    7ca4:	00c00404 	movi	r3,16
    7ca8:	84ffb02e 	bgeu	r16,r19,7b6c <_realloc_r+0x60>
    7cac:	00800304 	movi	r2,12
    7cb0:	a8800015 	stw	r2,0(r21)
    7cb4:	0027883a 	mov	r19,zero
    7cb8:	9805883a 	mov	r2,r19
    7cbc:	dfc00a17 	ldw	ra,40(sp)
    7cc0:	df000917 	ldw	fp,36(sp)
    7cc4:	ddc00817 	ldw	r23,32(sp)
    7cc8:	dd800717 	ldw	r22,28(sp)
    7ccc:	dd400617 	ldw	r21,24(sp)
    7cd0:	dd000517 	ldw	r20,20(sp)
    7cd4:	dcc00417 	ldw	r19,16(sp)
    7cd8:	dc800317 	ldw	r18,12(sp)
    7cdc:	dc400217 	ldw	r17,8(sp)
    7ce0:	dc000117 	ldw	r16,4(sp)
    7ce4:	dec00b04 	addi	sp,sp,44
    7ce8:	f800283a 	ret
    7cec:	1080004c 	andi	r2,r2,1
    7cf0:	10007826 	beq	r2,zero,7ed4 <_realloc_r+0x3c8>
    7cf4:	980b883a 	mov	r5,r19
    7cf8:	a809883a 	mov	r4,r21
    7cfc:	0000abc0 	call	abc <_malloc_r>
    7d00:	1027883a 	mov	r19,r2
    7d04:	10001626 	beq	r2,zero,7d60 <_realloc_r+0x254>
    7d08:	b0bfff17 	ldw	r2,-4(r22)
    7d0c:	013fff84 	movi	r4,-2
    7d10:	98fffe04 	addi	r3,r19,-8
    7d14:	1104703a 	and	r2,r2,r4
    7d18:	9085883a 	add	r2,r18,r2
    7d1c:	10c06726 	beq	r2,r3,7ebc <_realloc_r+0x3b0>
    7d20:	89bfff04 	addi	r6,r17,-4
    7d24:	30800968 	cmpgeui	r2,r6,37
    7d28:	1000761e 	bne	r2,zero,7f04 <_realloc_r+0x3f8>
    7d2c:	30800530 	cmpltui	r2,r6,20
    7d30:	b1000017 	ldw	r4,0(r22)
    7d34:	10003726 	beq	r2,zero,7e14 <_realloc_r+0x308>
    7d38:	9805883a 	mov	r2,r19
    7d3c:	b007883a 	mov	r3,r22
    7d40:	11000015 	stw	r4,0(r2)
    7d44:	19000117 	ldw	r4,4(r3)
    7d48:	11000115 	stw	r4,4(r2)
    7d4c:	18c00217 	ldw	r3,8(r3)
    7d50:	10c00215 	stw	r3,8(r2)
    7d54:	b00b883a 	mov	r5,r22
    7d58:	a809883a 	mov	r4,r21
    7d5c:	0005fa00 	call	5fa0 <_free_r>
    7d60:	a809883a 	mov	r4,r21
    7d64:	000dadc0 	call	dadc <__malloc_unlock>
    7d68:	003fd306 	br	7cb8 <_realloc_r+0x1ac>
    7d6c:	300b883a 	mov	r5,r6
    7d70:	dfc00a17 	ldw	ra,40(sp)
    7d74:	df000917 	ldw	fp,36(sp)
    7d78:	ddc00817 	ldw	r23,32(sp)
    7d7c:	dd800717 	ldw	r22,28(sp)
    7d80:	dd400617 	ldw	r21,24(sp)
    7d84:	dd000517 	ldw	r20,20(sp)
    7d88:	dcc00417 	ldw	r19,16(sp)
    7d8c:	dc800317 	ldw	r18,12(sp)
    7d90:	dc400217 	ldw	r17,8(sp)
    7d94:	dc000117 	ldw	r16,4(sp)
    7d98:	dec00b04 	addi	sp,sp,44
    7d9c:	0000abc1 	jmpi	abc <_malloc_r>
    7da0:	340cb03a 	or	r6,r6,r16
    7da4:	91800115 	stw	r6,4(r18)
    7da8:	940b883a 	add	r5,r18,r16
    7dac:	10800054 	ori	r2,r2,1
    7db0:	28800115 	stw	r2,4(r5)
    7db4:	a0800117 	ldw	r2,4(r20)
    7db8:	29400204 	addi	r5,r5,8
    7dbc:	a809883a 	mov	r4,r21
    7dc0:	10800054 	ori	r2,r2,1
    7dc4:	a0800115 	stw	r2,4(r20)
    7dc8:	0005fa00 	call	5fa0 <_free_r>
    7dcc:	003fb006 	br	7c90 <_realloc_r+0x184>
    7dd0:	2148703a 	and	r4,r4,r5
    7dd4:	890b883a 	add	r5,r17,r4
    7dd8:	81800404 	addi	r6,r16,16
    7ddc:	29bf7716 	blt	r5,r6,7bbc <_realloc_r+0xb0>
    7de0:	9425883a 	add	r18,r18,r16
    7de4:	2c05c83a 	sub	r2,r5,r16
    7de8:	e4800215 	stw	r18,8(fp)
    7dec:	10800054 	ori	r2,r2,1
    7df0:	90800115 	stw	r2,4(r18)
    7df4:	b0bfff17 	ldw	r2,-4(r22)
    7df8:	a809883a 	mov	r4,r21
    7dfc:	b027883a 	mov	r19,r22
    7e00:	1080004c 	andi	r2,r2,1
    7e04:	1420b03a 	or	r16,r2,r16
    7e08:	b43fff15 	stw	r16,-4(r22)
    7e0c:	000dadc0 	call	dadc <__malloc_unlock>
    7e10:	003fa906 	br	7cb8 <_realloc_r+0x1ac>
    7e14:	99000015 	stw	r4,0(r19)
    7e18:	b0c00117 	ldw	r3,4(r22)
    7e1c:	30800728 	cmpgeui	r2,r6,28
    7e20:	98c00115 	stw	r3,4(r19)
    7e24:	1000611e 	bne	r2,zero,7fac <_realloc_r+0x4a0>
    7e28:	b0c00204 	addi	r3,r22,8
    7e2c:	98800204 	addi	r2,r19,8
    7e30:	b1000217 	ldw	r4,8(r22)
    7e34:	003fc206 	br	7d40 <_realloc_r+0x234>
    7e38:	a0800317 	ldw	r2,12(r20)
    7e3c:	a0c00217 	ldw	r3,8(r20)
    7e40:	89bfff04 	addi	r6,r17,-4
    7e44:	31000968 	cmpgeui	r4,r6,37
    7e48:	18800315 	stw	r2,12(r3)
    7e4c:	10c00215 	stw	r3,8(r2)
    7e50:	38c00217 	ldw	r3,8(r7)
    7e54:	38800317 	ldw	r2,12(r7)
    7e58:	3a000204 	addi	r8,r7,8
    7e5c:	3de9883a 	add	r20,r7,r23
    7e60:	18800315 	stw	r2,12(r3)
    7e64:	10c00215 	stw	r3,8(r2)
    7e68:	20006f1e 	bne	r4,zero,8028 <_realloc_r+0x51c>
    7e6c:	30800530 	cmpltui	r2,r6,20
    7e70:	b0c00017 	ldw	r3,0(r22)
    7e74:	10006a1e 	bne	r2,zero,8020 <_realloc_r+0x514>
    7e78:	38c00215 	stw	r3,8(r7)
    7e7c:	b0c00117 	ldw	r3,4(r22)
    7e80:	30800728 	cmpgeui	r2,r6,28
    7e84:	38c00315 	stw	r3,12(r7)
    7e88:	10007a1e 	bne	r2,zero,8074 <_realloc_r+0x568>
    7e8c:	b0c00217 	ldw	r3,8(r22)
    7e90:	38800404 	addi	r2,r7,16
    7e94:	b5800204 	addi	r22,r22,8
    7e98:	10c00015 	stw	r3,0(r2)
    7e9c:	b0c00117 	ldw	r3,4(r22)
    7ea0:	b823883a 	mov	r17,r23
    7ea4:	3825883a 	mov	r18,r7
    7ea8:	10c00115 	stw	r3,4(r2)
    7eac:	b0c00217 	ldw	r3,8(r22)
    7eb0:	402d883a 	mov	r22,r8
    7eb4:	10c00215 	stw	r3,8(r2)
    7eb8:	003f6b06 	br	7c68 <_realloc_r+0x15c>
    7ebc:	98bfff17 	ldw	r2,-4(r19)
    7ec0:	00ffff04 	movi	r3,-4
    7ec4:	10c4703a 	and	r2,r2,r3
    7ec8:	88a3883a 	add	r17,r17,r2
    7ecc:	9469883a 	add	r20,r18,r17
    7ed0:	003f6506 	br	7c68 <_realloc_r+0x15c>
    7ed4:	b1fffe17 	ldw	r7,-8(r22)
    7ed8:	91cfc83a 	sub	r7,r18,r7
    7edc:	39000117 	ldw	r4,4(r7)
    7ee0:	214a703a 	and	r5,r4,r5
    7ee4:	003f4106 	br	7bec <_realloc_r+0xe0>
    7ee8:	a0800317 	ldw	r2,12(r20)
    7eec:	a0c00217 	ldw	r3,8(r20)
    7ef0:	2823883a 	mov	r17,r5
    7ef4:	9169883a 	add	r20,r18,r5
    7ef8:	18800315 	stw	r2,12(r3)
    7efc:	10c00215 	stw	r3,8(r2)
    7f00:	003f5906 	br	7c68 <_realloc_r+0x15c>
    7f04:	b00b883a 	mov	r5,r22
    7f08:	9809883a 	mov	r4,r19
    7f0c:	00069c80 	call	69c8 <memmove>
    7f10:	003f9006 	br	7d54 <_realloc_r+0x248>
    7f14:	80800404 	addi	r2,r16,16
    7f18:	b8bf3416 	blt	r23,r2,7bec <_realloc_r+0xe0>
    7f1c:	38800317 	ldw	r2,12(r7)
    7f20:	38c00217 	ldw	r3,8(r7)
    7f24:	89bfff04 	addi	r6,r17,-4
    7f28:	31000968 	cmpgeui	r4,r6,37
    7f2c:	18800315 	stw	r2,12(r3)
    7f30:	10c00215 	stw	r3,8(r2)
    7f34:	3cc00204 	addi	r19,r7,8
    7f38:	20005a1e 	bne	r4,zero,80a4 <_realloc_r+0x598>
    7f3c:	30800530 	cmpltui	r2,r6,20
    7f40:	b0c00017 	ldw	r3,0(r22)
    7f44:	1000551e 	bne	r2,zero,809c <_realloc_r+0x590>
    7f48:	38c00215 	stw	r3,8(r7)
    7f4c:	b0c00117 	ldw	r3,4(r22)
    7f50:	30800728 	cmpgeui	r2,r6,28
    7f54:	38c00315 	stw	r3,12(r7)
    7f58:	1000661e 	bne	r2,zero,80f4 <_realloc_r+0x5e8>
    7f5c:	b0c00217 	ldw	r3,8(r22)
    7f60:	38800404 	addi	r2,r7,16
    7f64:	b5800204 	addi	r22,r22,8
    7f68:	10c00015 	stw	r3,0(r2)
    7f6c:	b0c00117 	ldw	r3,4(r22)
    7f70:	10c00115 	stw	r3,4(r2)
    7f74:	b0c00217 	ldw	r3,8(r22)
    7f78:	10c00215 	stw	r3,8(r2)
    7f7c:	3c07883a 	add	r3,r7,r16
    7f80:	bc05c83a 	sub	r2,r23,r16
    7f84:	e0c00215 	stw	r3,8(fp)
    7f88:	10800054 	ori	r2,r2,1
    7f8c:	18800115 	stw	r2,4(r3)
    7f90:	38800117 	ldw	r2,4(r7)
    7f94:	a809883a 	mov	r4,r21
    7f98:	1080004c 	andi	r2,r2,1
    7f9c:	1420b03a 	or	r16,r2,r16
    7fa0:	3c000115 	stw	r16,4(r7)
    7fa4:	000dadc0 	call	dadc <__malloc_unlock>
    7fa8:	003f4306 	br	7cb8 <_realloc_r+0x1ac>
    7fac:	b0800217 	ldw	r2,8(r22)
    7fb0:	31800920 	cmpeqi	r6,r6,36
    7fb4:	98800215 	stw	r2,8(r19)
    7fb8:	b0800317 	ldw	r2,12(r22)
    7fbc:	98800315 	stw	r2,12(r19)
    7fc0:	3000061e 	bne	r6,zero,7fdc <_realloc_r+0x4d0>
    7fc4:	b0c00404 	addi	r3,r22,16
    7fc8:	98800404 	addi	r2,r19,16
    7fcc:	b1000417 	ldw	r4,16(r22)
    7fd0:	003f5b06 	br	7d40 <_realloc_r+0x234>
    7fd4:	1805883a 	mov	r2,r3
    7fd8:	003f1b06 	br	7c48 <_realloc_r+0x13c>
    7fdc:	b1000417 	ldw	r4,16(r22)
    7fe0:	b0c00604 	addi	r3,r22,24
    7fe4:	98800604 	addi	r2,r19,24
    7fe8:	99000415 	stw	r4,16(r19)
    7fec:	b1000517 	ldw	r4,20(r22)
    7ff0:	99000515 	stw	r4,20(r19)
    7ff4:	b1000617 	ldw	r4,24(r22)
    7ff8:	003f5106 	br	7d40 <_realloc_r+0x234>
    7ffc:	b00b883a 	mov	r5,r22
    8000:	1809883a 	mov	r4,r3
    8004:	d9c00015 	stw	r7,0(sp)
    8008:	00069c80 	call	69c8 <memmove>
    800c:	d9c00017 	ldw	r7,0(sp)
    8010:	102d883a 	mov	r22,r2
    8014:	b823883a 	mov	r17,r23
    8018:	3825883a 	mov	r18,r7
    801c:	003f1206 	br	7c68 <_realloc_r+0x15c>
    8020:	4005883a 	mov	r2,r8
    8024:	003f9c06 	br	7e98 <_realloc_r+0x38c>
    8028:	b00b883a 	mov	r5,r22
    802c:	4009883a 	mov	r4,r8
    8030:	d9c00015 	stw	r7,0(sp)
    8034:	00069c80 	call	69c8 <memmove>
    8038:	d9c00017 	ldw	r7,0(sp)
    803c:	102d883a 	mov	r22,r2
    8040:	b823883a 	mov	r17,r23
    8044:	3825883a 	mov	r18,r7
    8048:	003f0706 	br	7c68 <_realloc_r+0x15c>
    804c:	b0800217 	ldw	r2,8(r22)
    8050:	31800920 	cmpeqi	r6,r6,36
    8054:	38800415 	stw	r2,16(r7)
    8058:	b0800317 	ldw	r2,12(r22)
    805c:	38800515 	stw	r2,20(r7)
    8060:	b1000417 	ldw	r4,16(r22)
    8064:	3000151e 	bne	r6,zero,80bc <_realloc_r+0x5b0>
    8068:	38800604 	addi	r2,r7,24
    806c:	b5800404 	addi	r22,r22,16
    8070:	003ef506 	br	7c48 <_realloc_r+0x13c>
    8074:	b0800217 	ldw	r2,8(r22)
    8078:	31800920 	cmpeqi	r6,r6,36
    807c:	38800415 	stw	r2,16(r7)
    8080:	b0800317 	ldw	r2,12(r22)
    8084:	38800515 	stw	r2,20(r7)
    8088:	b0c00417 	ldw	r3,16(r22)
    808c:	3000121e 	bne	r6,zero,80d8 <_realloc_r+0x5cc>
    8090:	38800604 	addi	r2,r7,24
    8094:	b5800404 	addi	r22,r22,16
    8098:	003f7f06 	br	7e98 <_realloc_r+0x38c>
    809c:	9805883a 	mov	r2,r19
    80a0:	003fb106 	br	7f68 <_realloc_r+0x45c>
    80a4:	b00b883a 	mov	r5,r22
    80a8:	9809883a 	mov	r4,r19
    80ac:	d9c00015 	stw	r7,0(sp)
    80b0:	00069c80 	call	69c8 <memmove>
    80b4:	d9c00017 	ldw	r7,0(sp)
    80b8:	003fb006 	br	7f7c <_realloc_r+0x470>
    80bc:	b5800604 	addi	r22,r22,24
    80c0:	39000615 	stw	r4,24(r7)
    80c4:	b13fff17 	ldw	r4,-4(r22)
    80c8:	38800804 	addi	r2,r7,32
    80cc:	39000715 	stw	r4,28(r7)
    80d0:	b1000017 	ldw	r4,0(r22)
    80d4:	003edc06 	br	7c48 <_realloc_r+0x13c>
    80d8:	b5800604 	addi	r22,r22,24
    80dc:	38c00615 	stw	r3,24(r7)
    80e0:	b0ffff17 	ldw	r3,-4(r22)
    80e4:	38800804 	addi	r2,r7,32
    80e8:	38c00715 	stw	r3,28(r7)
    80ec:	b0c00017 	ldw	r3,0(r22)
    80f0:	003f6906 	br	7e98 <_realloc_r+0x38c>
    80f4:	b0800217 	ldw	r2,8(r22)
    80f8:	31800920 	cmpeqi	r6,r6,36
    80fc:	38800415 	stw	r2,16(r7)
    8100:	b0800317 	ldw	r2,12(r22)
    8104:	38800515 	stw	r2,20(r7)
    8108:	b0c00417 	ldw	r3,16(r22)
    810c:	3000031e 	bne	r6,zero,811c <_realloc_r+0x610>
    8110:	38800604 	addi	r2,r7,24
    8114:	b5800404 	addi	r22,r22,16
    8118:	003f9306 	br	7f68 <_realloc_r+0x45c>
    811c:	b5800604 	addi	r22,r22,24
    8120:	38c00615 	stw	r3,24(r7)
    8124:	b0ffff17 	ldw	r3,-4(r22)
    8128:	38800804 	addi	r2,r7,32
    812c:	38c00715 	stw	r3,28(r7)
    8130:	b0c00017 	ldw	r3,0(r22)
    8134:	003f8c06 	br	7f68 <_realloc_r+0x45c>

00008138 <__sprint_r.part.0>:
    8138:	28801917 	ldw	r2,100(r5)
    813c:	defff604 	addi	sp,sp,-40
    8140:	dd000415 	stw	r20,16(sp)
    8144:	dfc00915 	stw	ra,36(sp)
    8148:	df000815 	stw	fp,32(sp)
    814c:	ddc00715 	stw	r23,28(sp)
    8150:	dd800615 	stw	r22,24(sp)
    8154:	dd400515 	stw	r21,20(sp)
    8158:	dcc00315 	stw	r19,12(sp)
    815c:	dc800215 	stw	r18,8(sp)
    8160:	dc400115 	stw	r17,4(sp)
    8164:	dc000015 	stw	r16,0(sp)
    8168:	1088000c 	andi	r2,r2,8192
    816c:	3029883a 	mov	r20,r6
    8170:	10002c26 	beq	r2,zero,8224 <__sprint_r.part.0+0xec>
    8174:	30800217 	ldw	r2,8(r6)
    8178:	2823883a 	mov	r17,r5
    817c:	2027883a 	mov	r19,r4
    8180:	35400017 	ldw	r21,0(r6)
    8184:	05ffff04 	movi	r23,-4
    8188:	10002426 	beq	r2,zero,821c <__sprint_r.part.0+0xe4>
    818c:	ad800117 	ldw	r22,4(r21)
    8190:	ac000017 	ldw	r16,0(r21)
    8194:	b024d0ba 	srli	r18,r22,2
    8198:	90001b26 	beq	r18,zero,8208 <__sprint_r.part.0+0xd0>
    819c:	0039883a 	mov	fp,zero
    81a0:	00000206 	br	81ac <__sprint_r.part.0+0x74>
    81a4:	84000104 	addi	r16,r16,4
    81a8:	97001626 	beq	r18,fp,8204 <__sprint_r.part.0+0xcc>
    81ac:	81400017 	ldw	r5,0(r16)
    81b0:	880d883a 	mov	r6,r17
    81b4:	9809883a 	mov	r4,r19
    81b8:	00098740 	call	9874 <_fputwc_r>
    81bc:	10bfffe0 	cmpeqi	r2,r2,-1
    81c0:	e7000044 	addi	fp,fp,1
    81c4:	103ff726 	beq	r2,zero,81a4 <__sprint_r.part.0+0x6c>
    81c8:	00bfffc4 	movi	r2,-1
    81cc:	a0000215 	stw	zero,8(r20)
    81d0:	a0000115 	stw	zero,4(r20)
    81d4:	dfc00917 	ldw	ra,36(sp)
    81d8:	df000817 	ldw	fp,32(sp)
    81dc:	ddc00717 	ldw	r23,28(sp)
    81e0:	dd800617 	ldw	r22,24(sp)
    81e4:	dd400517 	ldw	r21,20(sp)
    81e8:	dd000417 	ldw	r20,16(sp)
    81ec:	dcc00317 	ldw	r19,12(sp)
    81f0:	dc800217 	ldw	r18,8(sp)
    81f4:	dc400117 	ldw	r17,4(sp)
    81f8:	dc000017 	ldw	r16,0(sp)
    81fc:	dec00a04 	addi	sp,sp,40
    8200:	f800283a 	ret
    8204:	a0800217 	ldw	r2,8(r20)
    8208:	b5ec703a 	and	r22,r22,r23
    820c:	1585c83a 	sub	r2,r2,r22
    8210:	a0800215 	stw	r2,8(r20)
    8214:	ad400204 	addi	r21,r21,8
    8218:	103fdc1e 	bne	r2,zero,818c <__sprint_r.part.0+0x54>
    821c:	0005883a 	mov	r2,zero
    8220:	003fea06 	br	81cc <__sprint_r.part.0+0x94>
    8224:	000629c0 	call	629c <__sfvwrite_r>
    8228:	003fe806 	br	81cc <__sprint_r.part.0+0x94>

0000822c <__sprint_r>:
    822c:	30c00217 	ldw	r3,8(r6)
    8230:	18000126 	beq	r3,zero,8238 <__sprint_r+0xc>
    8234:	00081381 	jmpi	8138 <__sprint_r.part.0>
    8238:	30000115 	stw	zero,4(r6)
    823c:	0005883a 	mov	r2,zero
    8240:	f800283a 	ret

00008244 <___vfiprintf_internal_r>:
    8244:	deffd004 	addi	sp,sp,-192
    8248:	df002e15 	stw	fp,184(sp)
    824c:	dcc02915 	stw	r19,164(sp)
    8250:	dc802815 	stw	r18,160(sp)
    8254:	dfc02f15 	stw	ra,188(sp)
    8258:	ddc02d15 	stw	r23,180(sp)
    825c:	dd802c15 	stw	r22,176(sp)
    8260:	dd402b15 	stw	r21,172(sp)
    8264:	dd002a15 	stw	r20,168(sp)
    8268:	dc402715 	stw	r17,156(sp)
    826c:	dc002615 	stw	r16,152(sp)
    8270:	d9c00315 	stw	r7,12(sp)
    8274:	2027883a 	mov	r19,r4
    8278:	2825883a 	mov	r18,r5
    827c:	3039883a 	mov	fp,r6
    8280:	20000226 	beq	r4,zero,828c <___vfiprintf_internal_r+0x48>
    8284:	20800e17 	ldw	r2,56(r4)
    8288:	1002ba26 	beq	r2,zero,8d74 <___vfiprintf_internal_r+0xb30>
    828c:	9080030b 	ldhu	r2,12(r18)
    8290:	10c8000c 	andi	r3,r2,8192
    8294:	1800061e 	bne	r3,zero,82b0 <___vfiprintf_internal_r+0x6c>
    8298:	90c01917 	ldw	r3,100(r18)
    829c:	0137ffc4 	movi	r4,-8193
    82a0:	10880014 	ori	r2,r2,8192
    82a4:	1906703a 	and	r3,r3,r4
    82a8:	9080030d 	sth	r2,12(r18)
    82ac:	90c01915 	stw	r3,100(r18)
    82b0:	10c0020c 	andi	r3,r2,8
    82b4:	18009426 	beq	r3,zero,8508 <___vfiprintf_internal_r+0x2c4>
    82b8:	90c00417 	ldw	r3,16(r18)
    82bc:	18009226 	beq	r3,zero,8508 <___vfiprintf_internal_r+0x2c4>
    82c0:	1080068c 	andi	r2,r2,26
    82c4:	10800298 	cmpnei	r2,r2,10
    82c8:	10009726 	beq	r2,zero,8528 <___vfiprintf_internal_r+0x2e4>
    82cc:	dc401604 	addi	r17,sp,88
    82d0:	dc400915 	stw	r17,36(sp)
    82d4:	d8000b15 	stw	zero,44(sp)
    82d8:	d8000a15 	stw	zero,40(sp)
    82dc:	8811883a 	mov	r8,r17
    82e0:	d8000415 	stw	zero,16(sp)
    82e4:	d8000015 	stw	zero,0(sp)
    82e8:	e0800007 	ldb	r2,0(fp)
    82ec:	1000a226 	beq	r2,zero,8578 <___vfiprintf_internal_r+0x334>
    82f0:	10800960 	cmpeqi	r2,r2,37
    82f4:	1003eb1e 	bne	r2,zero,92a4 <___vfiprintf_internal_r+0x1060>
    82f8:	e021883a 	mov	r16,fp
    82fc:	00000206 	br	8308 <___vfiprintf_internal_r+0xc4>
    8300:	18009226 	beq	r3,zero,854c <___vfiprintf_internal_r+0x308>
    8304:	a021883a 	mov	r16,r20
    8308:	80800047 	ldb	r2,1(r16)
    830c:	85000044 	addi	r20,r16,1
    8310:	10c00958 	cmpnei	r3,r2,37
    8314:	103ffa1e 	bne	r2,zero,8300 <___vfiprintf_internal_r+0xbc>
    8318:	a72bc83a 	sub	r21,r20,fp
    831c:	a8009626 	beq	r21,zero,8578 <___vfiprintf_internal_r+0x334>
    8320:	d8c00b17 	ldw	r3,44(sp)
    8324:	d8800a17 	ldw	r2,40(sp)
    8328:	47000015 	stw	fp,0(r8)
    832c:	a8c7883a 	add	r3,r21,r3
    8330:	10800044 	addi	r2,r2,1
    8334:	d8800a15 	stw	r2,40(sp)
    8338:	45400115 	stw	r21,4(r8)
    833c:	d8c00b15 	stw	r3,44(sp)
    8340:	10800208 	cmpgei	r2,r2,8
    8344:	1000841e 	bne	r2,zero,8558 <___vfiprintf_internal_r+0x314>
    8348:	42000204 	addi	r8,r8,8
    834c:	d8c00017 	ldw	r3,0(sp)
    8350:	80800047 	ldb	r2,1(r16)
    8354:	1d47883a 	add	r3,r3,r21
    8358:	d8c00015 	stw	r3,0(sp)
    835c:	10008626 	beq	r2,zero,8578 <___vfiprintf_internal_r+0x334>
    8360:	a0800047 	ldb	r2,1(r20)
    8364:	a7000044 	addi	fp,r20,1
    8368:	d8000845 	stb	zero,33(sp)
    836c:	000b883a 	mov	r5,zero
    8370:	000d883a 	mov	r6,zero
    8374:	027fffc4 	movi	r9,-1
    8378:	0021883a 	mov	r16,zero
    837c:	0019883a 	mov	r12,zero
    8380:	e7000044 	addi	fp,fp,1
    8384:	10fff804 	addi	r3,r2,-32
    8388:	19001668 	cmpgeui	r4,r3,89
    838c:	20009e1e 	bne	r4,zero,8608 <___vfiprintf_internal_r+0x3c4>
    8390:	180690ba 	slli	r3,r3,2
    8394:	01000074 	movhi	r4,1
    8398:	1909883a 	add	r4,r3,r4
    839c:	20e0e917 	ldw	r3,-31836(r4)
    83a0:	1800683a 	jmp	r3
    83a4:	000086e0 	cmpeqi	zero,zero,539
    83a8:	00008608 	cmpgei	zero,zero,536
    83ac:	00008608 	cmpgei	zero,zero,536
    83b0:	000086d4 	movui	zero,539
    83b4:	00008608 	cmpgei	zero,zero,536
    83b8:	00008608 	cmpgei	zero,zero,536
    83bc:	00008608 	cmpgei	zero,zero,536
    83c0:	00008608 	cmpgei	zero,zero,536
    83c4:	00008608 	cmpgei	zero,zero,536
    83c8:	00008608 	cmpgei	zero,zero,536
    83cc:	000086ac 	andhi	zero,zero,538
    83d0:	0000869c 	xori	zero,zero,538
    83d4:	00008608 	cmpgei	zero,zero,536
    83d8:	00008684 	movi	zero,538
    83dc:	00008638 	rdprs	zero,zero,536
    83e0:	00008608 	cmpgei	zero,zero,536
    83e4:	0000862c 	andhi	zero,zero,536
    83e8:	000085d0 	cmplti	zero,zero,535
    83ec:	000085d0 	cmplti	zero,zero,535
    83f0:	000085d0 	cmplti	zero,zero,535
    83f4:	000085d0 	cmplti	zero,zero,535
    83f8:	000085d0 	cmplti	zero,zero,535
    83fc:	000085d0 	cmplti	zero,zero,535
    8400:	000085d0 	cmplti	zero,zero,535
    8404:	000085d0 	cmplti	zero,zero,535
    8408:	000085d0 	cmplti	zero,zero,535
    840c:	00008608 	cmpgei	zero,zero,536
    8410:	00008608 	cmpgei	zero,zero,536
    8414:	00008608 	cmpgei	zero,zero,536
    8418:	00008608 	cmpgei	zero,zero,536
    841c:	00008608 	cmpgei	zero,zero,536
    8420:	00008608 	cmpgei	zero,zero,536
    8424:	00008608 	cmpgei	zero,zero,536
    8428:	00008608 	cmpgei	zero,zero,536
    842c:	00008608 	cmpgei	zero,zero,536
    8430:	00008608 	cmpgei	zero,zero,536
    8434:	00008c9c 	xori	zero,zero,562
    8438:	00008608 	cmpgei	zero,zero,536
    843c:	00008608 	cmpgei	zero,zero,536
    8440:	00008608 	cmpgei	zero,zero,536
    8444:	00008608 	cmpgei	zero,zero,536
    8448:	00008608 	cmpgei	zero,zero,536
    844c:	00008608 	cmpgei	zero,zero,536
    8450:	00008608 	cmpgei	zero,zero,536
    8454:	00008608 	cmpgei	zero,zero,536
    8458:	00008608 	cmpgei	zero,zero,536
    845c:	00008608 	cmpgei	zero,zero,536
    8460:	00008c34 	movhi	zero,560
    8464:	00008608 	cmpgei	zero,zero,536
    8468:	00008608 	cmpgei	zero,zero,536
    846c:	00008608 	cmpgei	zero,zero,536
    8470:	00008608 	cmpgei	zero,zero,536
    8474:	00008608 	cmpgei	zero,zero,536
    8478:	00008c68 	cmpgeui	zero,zero,561
    847c:	00008608 	cmpgei	zero,zero,536
    8480:	00008608 	cmpgei	zero,zero,536
    8484:	00008838 	rdprs	zero,zero,544
    8488:	00008608 	cmpgei	zero,zero,536
    848c:	00008608 	cmpgei	zero,zero,536
    8490:	00008608 	cmpgei	zero,zero,536
    8494:	00008608 	cmpgei	zero,zero,536
    8498:	00008608 	cmpgei	zero,zero,536
    849c:	00008608 	cmpgei	zero,zero,536
    84a0:	00008608 	cmpgei	zero,zero,536
    84a4:	00008608 	cmpgei	zero,zero,536
    84a8:	00008608 	cmpgei	zero,zero,536
    84ac:	00008608 	cmpgei	zero,zero,536
    84b0:	000089d4 	movui	zero,551
    84b4:	00008960 	cmpeqi	zero,zero,549
    84b8:	00008608 	cmpgei	zero,zero,536
    84bc:	00008608 	cmpgei	zero,zero,536
    84c0:	00008608 	cmpgei	zero,zero,536
    84c4:	00008768 	cmpgeui	zero,zero,541
    84c8:	00008960 	cmpeqi	zero,zero,549
    84cc:	00008608 	cmpgei	zero,zero,536
    84d0:	00008608 	cmpgei	zero,zero,536
    84d4:	00008754 	movui	zero,541
    84d8:	00008608 	cmpgei	zero,zero,536
    84dc:	00008920 	cmpeqi	zero,zero,548
    84e0:	000087f8 	rdprs	zero,zero,543
    84e4:	00008780 	call	878 <__sfp+0x6c>
    84e8:	00008774 	movhi	zero,541
    84ec:	00008608 	cmpgei	zero,zero,536
    84f0:	000088c0 	call	88c <__sfp+0x80>
    84f4:	00008608 	cmpgei	zero,zero,536
    84f8:	00008880 	call	888 <__sfp+0x7c>
    84fc:	00008608 	cmpgei	zero,zero,536
    8500:	00008608 	cmpgei	zero,zero,536
    8504:	0000870c 	andi	zero,zero,540
    8508:	900b883a 	mov	r5,r18
    850c:	9809883a 	mov	r4,r19
    8510:	00040180 	call	4018 <__swsetup_r>
    8514:	10040b1e 	bne	r2,zero,9544 <___vfiprintf_internal_r+0x1300>
    8518:	9080030b 	ldhu	r2,12(r18)
    851c:	1080068c 	andi	r2,r2,26
    8520:	10800298 	cmpnei	r2,r2,10
    8524:	103f691e 	bne	r2,zero,82cc <___vfiprintf_internal_r+0x88>
    8528:	9080038f 	ldh	r2,14(r18)
    852c:	103f6716 	blt	r2,zero,82cc <___vfiprintf_internal_r+0x88>
    8530:	d9c00317 	ldw	r7,12(sp)
    8534:	e00d883a 	mov	r6,fp
    8538:	900b883a 	mov	r5,r18
    853c:	9809883a 	mov	r4,r19
    8540:	00095980 	call	9598 <__sbprintf>
    8544:	d8800015 	stw	r2,0(sp)
    8548:	00001406 	br	859c <___vfiprintf_internal_r+0x358>
    854c:	a72bc83a 	sub	r21,r20,fp
    8550:	a83f8326 	beq	r21,zero,8360 <___vfiprintf_internal_r+0x11c>
    8554:	003f7206 	br	8320 <___vfiprintf_internal_r+0xdc>
    8558:	18032f26 	beq	r3,zero,9218 <___vfiprintf_internal_r+0xfd4>
    855c:	d9800904 	addi	r6,sp,36
    8560:	900b883a 	mov	r5,r18
    8564:	9809883a 	mov	r4,r19
    8568:	00081380 	call	8138 <__sprint_r.part.0>
    856c:	1000081e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8570:	8811883a 	mov	r8,r17
    8574:	003f7506 	br	834c <___vfiprintf_internal_r+0x108>
    8578:	d8800b17 	ldw	r2,44(sp)
    857c:	10000426 	beq	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8580:	d9800904 	addi	r6,sp,36
    8584:	900b883a 	mov	r5,r18
    8588:	9809883a 	mov	r4,r19
    858c:	00081380 	call	8138 <__sprint_r.part.0>
    8590:	9080030b 	ldhu	r2,12(r18)
    8594:	1080100c 	andi	r2,r2,64
    8598:	1003ea1e 	bne	r2,zero,9544 <___vfiprintf_internal_r+0x1300>
    859c:	d8800017 	ldw	r2,0(sp)
    85a0:	dfc02f17 	ldw	ra,188(sp)
    85a4:	df002e17 	ldw	fp,184(sp)
    85a8:	ddc02d17 	ldw	r23,180(sp)
    85ac:	dd802c17 	ldw	r22,176(sp)
    85b0:	dd402b17 	ldw	r21,172(sp)
    85b4:	dd002a17 	ldw	r20,168(sp)
    85b8:	dcc02917 	ldw	r19,164(sp)
    85bc:	dc802817 	ldw	r18,160(sp)
    85c0:	dc402717 	ldw	r17,156(sp)
    85c4:	dc002617 	ldw	r16,152(sp)
    85c8:	dec03004 	addi	sp,sp,192
    85cc:	f800283a 	ret
    85d0:	0021883a 	mov	r16,zero
    85d4:	113ff404 	addi	r4,r2,-48
    85d8:	800690ba 	slli	r3,r16,2
    85dc:	e7000044 	addi	fp,fp,1
    85e0:	e0bfffc7 	ldb	r2,-1(fp)
    85e4:	1c21883a 	add	r16,r3,r16
    85e8:	8421883a 	add	r16,r16,r16
    85ec:	2421883a 	add	r16,r4,r16
    85f0:	113ff404 	addi	r4,r2,-48
    85f4:	20c002b0 	cmpltui	r3,r4,10
    85f8:	183ff71e 	bne	r3,zero,85d8 <___vfiprintf_internal_r+0x394>
    85fc:	10fff804 	addi	r3,r2,-32
    8600:	19001668 	cmpgeui	r4,r3,89
    8604:	203f6226 	beq	r4,zero,8390 <___vfiprintf_internal_r+0x14c>
    8608:	29403fcc 	andi	r5,r5,255
    860c:	2803ab1e 	bne	r5,zero,94bc <___vfiprintf_internal_r+0x1278>
    8610:	103fd926 	beq	r2,zero,8578 <___vfiprintf_internal_r+0x334>
    8614:	d8800c05 	stb	r2,48(sp)
    8618:	d8000845 	stb	zero,33(sp)
    861c:	05400044 	movi	r21,1
    8620:	05800044 	movi	r22,1
    8624:	ddc00c04 	addi	r23,sp,48
    8628:	0000f306 	br	89f8 <___vfiprintf_internal_r+0x7b4>
    862c:	63002014 	ori	r12,r12,128
    8630:	e0800007 	ldb	r2,0(fp)
    8634:	003f5206 	br	8380 <___vfiprintf_internal_r+0x13c>
    8638:	e0800007 	ldb	r2,0(fp)
    863c:	e0c00044 	addi	r3,fp,1
    8640:	11000aa0 	cmpeqi	r4,r2,42
    8644:	2003c21e 	bne	r4,zero,9550 <___vfiprintf_internal_r+0x130c>
    8648:	113ff404 	addi	r4,r2,-48
    864c:	21c002b0 	cmpltui	r7,r4,10
    8650:	1839883a 	mov	fp,r3
    8654:	0013883a 	mov	r9,zero
    8658:	383f4a26 	beq	r7,zero,8384 <___vfiprintf_internal_r+0x140>
    865c:	480690ba 	slli	r3,r9,2
    8660:	e7000044 	addi	fp,fp,1
    8664:	e0bfffc7 	ldb	r2,-1(fp)
    8668:	1a53883a 	add	r9,r3,r9
    866c:	4a53883a 	add	r9,r9,r9
    8670:	4913883a 	add	r9,r9,r4
    8674:	113ff404 	addi	r4,r2,-48
    8678:	20c002b0 	cmpltui	r3,r4,10
    867c:	183ff71e 	bne	r3,zero,865c <___vfiprintf_internal_r+0x418>
    8680:	003f4006 	br	8384 <___vfiprintf_internal_r+0x140>
    8684:	e0800003 	ldbu	r2,0(fp)
    8688:	10803fcc 	andi	r2,r2,255
    868c:	1080201c 	xori	r2,r2,128
    8690:	63000114 	ori	r12,r12,4
    8694:	10bfe004 	addi	r2,r2,-128
    8698:	003f3906 	br	8380 <___vfiprintf_internal_r+0x13c>
    869c:	01400044 	movi	r5,1
    86a0:	01800ac4 	movi	r6,43
    86a4:	e0800007 	ldb	r2,0(fp)
    86a8:	003f3506 	br	8380 <___vfiprintf_internal_r+0x13c>
    86ac:	d8800317 	ldw	r2,12(sp)
    86b0:	14000017 	ldw	r16,0(r2)
    86b4:	15c00104 	addi	r23,r2,4
    86b8:	e0800003 	ldbu	r2,0(fp)
    86bc:	80031416 	blt	r16,zero,9310 <___vfiprintf_internal_r+0x10cc>
    86c0:	ddc00315 	stw	r23,12(sp)
    86c4:	10803fcc 	andi	r2,r2,255
    86c8:	1080201c 	xori	r2,r2,128
    86cc:	10bfe004 	addi	r2,r2,-128
    86d0:	003f2b06 	br	8380 <___vfiprintf_internal_r+0x13c>
    86d4:	63000054 	ori	r12,r12,1
    86d8:	e0800007 	ldb	r2,0(fp)
    86dc:	003f2806 	br	8380 <___vfiprintf_internal_r+0x13c>
    86e0:	30c03fcc 	andi	r3,r6,255
    86e4:	18c0201c 	xori	r3,r3,128
    86e8:	18ffe004 	addi	r3,r3,-128
    86ec:	e0800003 	ldbu	r2,0(fp)
    86f0:	183ff41e 	bne	r3,zero,86c4 <___vfiprintf_internal_r+0x480>
    86f4:	10803fcc 	andi	r2,r2,255
    86f8:	1080201c 	xori	r2,r2,128
    86fc:	01400044 	movi	r5,1
    8700:	01800804 	movi	r6,32
    8704:	10bfe004 	addi	r2,r2,-128
    8708:	003f1d06 	br	8380 <___vfiprintf_internal_r+0x13c>
    870c:	29403fcc 	andi	r5,r5,255
    8710:	2803741e 	bne	r5,zero,94e4 <___vfiprintf_internal_r+0x12a0>
    8714:	00c00074 	movhi	r3,1
    8718:	18fef304 	addi	r3,r3,-1076
    871c:	d8c00415 	stw	r3,16(sp)
    8720:	60c0080c 	andi	r3,r12,32
    8724:	18004b26 	beq	r3,zero,8854 <___vfiprintf_internal_r+0x610>
    8728:	d8c00317 	ldw	r3,12(sp)
    872c:	1d400017 	ldw	r21,0(r3)
    8730:	1d800117 	ldw	r22,4(r3)
    8734:	18c00204 	addi	r3,r3,8
    8738:	d8c00315 	stw	r3,12(sp)
    873c:	60c0004c 	andi	r3,r12,1
    8740:	18000226 	beq	r3,zero,874c <___vfiprintf_internal_r+0x508>
    8744:	ad86b03a 	or	r3,r21,r22
    8748:	1802df1e 	bne	r3,zero,92c8 <___vfiprintf_internal_r+0x1084>
    874c:	00800084 	movi	r2,2
    8750:	00001906 	br	87b8 <___vfiprintf_internal_r+0x574>
    8754:	e0800007 	ldb	r2,0(fp)
    8758:	10c01b18 	cmpnei	r3,r2,108
    875c:	18033026 	beq	r3,zero,9420 <___vfiprintf_internal_r+0x11dc>
    8760:	63000414 	ori	r12,r12,16
    8764:	003f0606 	br	8380 <___vfiprintf_internal_r+0x13c>
    8768:	63001014 	ori	r12,r12,64
    876c:	e0800007 	ldb	r2,0(fp)
    8770:	003f0306 	br	8380 <___vfiprintf_internal_r+0x13c>
    8774:	63000814 	ori	r12,r12,32
    8778:	e0800007 	ldb	r2,0(fp)
    877c:	003f0006 	br	8380 <___vfiprintf_internal_r+0x13c>
    8780:	d8c00317 	ldw	r3,12(sp)
    8784:	00800c04 	movi	r2,48
    8788:	d8800885 	stb	r2,34(sp)
    878c:	00801e04 	movi	r2,120
    8790:	01000074 	movhi	r4,1
    8794:	d88008c5 	stb	r2,35(sp)
    8798:	1d400017 	ldw	r21,0(r3)
    879c:	18800104 	addi	r2,r3,4
    87a0:	d8800315 	stw	r2,12(sp)
    87a4:	20bef304 	addi	r2,r4,-1076
    87a8:	d8800415 	stw	r2,16(sp)
    87ac:	002d883a 	mov	r22,zero
    87b0:	63000094 	ori	r12,r12,2
    87b4:	00800084 	movi	r2,2
    87b8:	d8000845 	stb	zero,33(sp)
    87bc:	48ffffe0 	cmpeqi	r3,r9,-1
    87c0:	001b883a 	mov	r13,zero
    87c4:	18014c1e 	bne	r3,zero,8cf8 <___vfiprintf_internal_r+0xab4>
    87c8:	053fdfc4 	movi	r20,-129
    87cc:	ad86b03a 	or	r3,r21,r22
    87d0:	6528703a 	and	r20,r12,r20
    87d4:	1802411e 	bne	r3,zero,90dc <___vfiprintf_internal_r+0xe98>
    87d8:	48030d1e 	bne	r9,zero,9410 <___vfiprintf_internal_r+0x11cc>
    87dc:	1000791e 	bne	r2,zero,89c4 <___vfiprintf_internal_r+0x780>
    87e0:	6580004c 	andi	r22,r12,1
    87e4:	b002b126 	beq	r22,zero,92ac <___vfiprintf_internal_r+0x1068>
    87e8:	00800c04 	movi	r2,48
    87ec:	d88015c5 	stb	r2,87(sp)
    87f0:	ddc015c4 	addi	r23,sp,87
    87f4:	00017e06 	br	8df0 <___vfiprintf_internal_r+0xbac>
    87f8:	29403fcc 	andi	r5,r5,255
    87fc:	2803461e 	bne	r5,zero,9518 <___vfiprintf_internal_r+0x12d4>
    8800:	6080080c 	andi	r2,r12,32
    8804:	10016b1e 	bne	r2,zero,8db4 <___vfiprintf_internal_r+0xb70>
    8808:	d8800317 	ldw	r2,12(sp)
    880c:	60c0040c 	andi	r3,r12,16
    8810:	15400017 	ldw	r21,0(r2)
    8814:	10800104 	addi	r2,r2,4
    8818:	18010d1e 	bne	r3,zero,8c50 <___vfiprintf_internal_r+0xa0c>
    881c:	60c0100c 	andi	r3,r12,64
    8820:	18031326 	beq	r3,zero,9470 <___vfiprintf_internal_r+0x122c>
    8824:	d8800315 	stw	r2,12(sp)
    8828:	ad7fffcc 	andi	r21,r21,65535
    882c:	002d883a 	mov	r22,zero
    8830:	0005883a 	mov	r2,zero
    8834:	003fe006 	br	87b8 <___vfiprintf_internal_r+0x574>
    8838:	29403fcc 	andi	r5,r5,255
    883c:	2803251e 	bne	r5,zero,94d4 <___vfiprintf_internal_r+0x1290>
    8840:	00c00074 	movhi	r3,1
    8844:	18feee04 	addi	r3,r3,-1096
    8848:	d8c00415 	stw	r3,16(sp)
    884c:	60c0080c 	andi	r3,r12,32
    8850:	183fb51e 	bne	r3,zero,8728 <___vfiprintf_internal_r+0x4e4>
    8854:	d9000317 	ldw	r4,12(sp)
    8858:	60c0040c 	andi	r3,r12,16
    885c:	25400017 	ldw	r21,0(r4)
    8860:	21000104 	addi	r4,r4,4
    8864:	d9000315 	stw	r4,12(sp)
    8868:	18026e1e 	bne	r3,zero,9224 <___vfiprintf_internal_r+0xfe0>
    886c:	60c0100c 	andi	r3,r12,64
    8870:	18026c26 	beq	r3,zero,9224 <___vfiprintf_internal_r+0xfe0>
    8874:	ad7fffcc 	andi	r21,r21,65535
    8878:	002d883a 	mov	r22,zero
    887c:	003faf06 	br	873c <___vfiprintf_internal_r+0x4f8>
    8880:	29403fcc 	andi	r5,r5,255
    8884:	2803151e 	bne	r5,zero,94dc <___vfiprintf_internal_r+0x1298>
    8888:	6080080c 	andi	r2,r12,32
    888c:	10013b1e 	bne	r2,zero,8d7c <___vfiprintf_internal_r+0xb38>
    8890:	d8800317 	ldw	r2,12(sp)
    8894:	60c0040c 	andi	r3,r12,16
    8898:	15400017 	ldw	r21,0(r2)
    889c:	10800104 	addi	r2,r2,4
    88a0:	1800f81e 	bne	r3,zero,8c84 <___vfiprintf_internal_r+0xa40>
    88a4:	60c0100c 	andi	r3,r12,64
    88a8:	1802ed26 	beq	r3,zero,9460 <___vfiprintf_internal_r+0x121c>
    88ac:	d8800315 	stw	r2,12(sp)
    88b0:	ad7fffcc 	andi	r21,r21,65535
    88b4:	002d883a 	mov	r22,zero
    88b8:	00800044 	movi	r2,1
    88bc:	003fbe06 	br	87b8 <___vfiprintf_internal_r+0x574>
    88c0:	d8800317 	ldw	r2,12(sp)
    88c4:	d8000845 	stb	zero,33(sp)
    88c8:	15c00017 	ldw	r23,0(r2)
    88cc:	15000104 	addi	r20,r2,4
    88d0:	b802da26 	beq	r23,zero,943c <___vfiprintf_internal_r+0x11f8>
    88d4:	48bfffe0 	cmpeqi	r2,r9,-1
    88d8:	1002901e 	bne	r2,zero,931c <___vfiprintf_internal_r+0x10d8>
    88dc:	480d883a 	mov	r6,r9
    88e0:	000b883a 	mov	r5,zero
    88e4:	b809883a 	mov	r4,r23
    88e8:	da000315 	stw	r8,12(sp)
    88ec:	db000215 	stw	r12,8(sp)
    88f0:	da400115 	stw	r9,4(sp)
    88f4:	00012b00 	call	12b0 <memchr>
    88f8:	da400117 	ldw	r9,4(sp)
    88fc:	db000217 	ldw	r12,8(sp)
    8900:	da000317 	ldw	r8,12(sp)
    8904:	1002ef26 	beq	r2,zero,94c4 <___vfiprintf_internal_r+0x1280>
    8908:	15edc83a 	sub	r22,r2,r23
    890c:	b02b883a 	mov	r21,r22
    8910:	b000010e 	bge	r22,zero,8918 <___vfiprintf_internal_r+0x6d4>
    8914:	002b883a 	mov	r21,zero
    8918:	dd000315 	stw	r20,12(sp)
    891c:	00003606 	br	89f8 <___vfiprintf_internal_r+0x7b4>
    8920:	29403fcc 	andi	r5,r5,255
    8924:	2802fa1e 	bne	r5,zero,9510 <___vfiprintf_internal_r+0x12cc>
    8928:	d9000317 	ldw	r4,12(sp)
    892c:	6080080c 	andi	r2,r12,32
    8930:	20c00104 	addi	r3,r4,4
    8934:	10026a1e 	bne	r2,zero,92e0 <___vfiprintf_internal_r+0x109c>
    8938:	6080040c 	andi	r2,r12,16
    893c:	1002891e 	bne	r2,zero,9364 <___vfiprintf_internal_r+0x1120>
    8940:	6300100c 	andi	r12,r12,64
    8944:	60028726 	beq	r12,zero,9364 <___vfiprintf_internal_r+0x1120>
    8948:	d8800317 	ldw	r2,12(sp)
    894c:	d8c00315 	stw	r3,12(sp)
    8950:	d8c00017 	ldw	r3,0(sp)
    8954:	10800017 	ldw	r2,0(r2)
    8958:	10c0000d 	sth	r3,0(r2)
    895c:	003e6206 	br	82e8 <___vfiprintf_internal_r+0xa4>
    8960:	29403fcc 	andi	r5,r5,255
    8964:	2802e81e 	bne	r5,zero,9508 <___vfiprintf_internal_r+0x12c4>
    8968:	6080080c 	andi	r2,r12,32
    896c:	10010a1e 	bne	r2,zero,8d98 <___vfiprintf_internal_r+0xb54>
    8970:	d8800317 	ldw	r2,12(sp)
    8974:	60c0040c 	andi	r3,r12,16
    8978:	10800104 	addi	r2,r2,4
    897c:	1800ce1e 	bne	r3,zero,8cb8 <___vfiprintf_internal_r+0xa74>
    8980:	60c0100c 	andi	r3,r12,64
    8984:	1800cc26 	beq	r3,zero,8cb8 <___vfiprintf_internal_r+0xa74>
    8988:	d8c00317 	ldw	r3,12(sp)
    898c:	d8800315 	stw	r2,12(sp)
    8990:	1d40000f 	ldh	r21,0(r3)
    8994:	a82dd7fa 	srai	r22,r21,31
    8998:	b005883a 	mov	r2,r22
    899c:	1000cc16 	blt	r2,zero,8cd0 <___vfiprintf_internal_r+0xa8c>
    89a0:	48bfffd8 	cmpnei	r2,r9,-1
    89a4:	db400843 	ldbu	r13,33(sp)
    89a8:	10010926 	beq	r2,zero,8dd0 <___vfiprintf_internal_r+0xb8c>
    89ac:	00ffdfc4 	movi	r3,-129
    89b0:	ad84b03a 	or	r2,r21,r22
    89b4:	60d8703a 	and	r12,r12,r3
    89b8:	1001051e 	bne	r2,zero,8dd0 <___vfiprintf_internal_r+0xb8c>
    89bc:	4801071e 	bne	r9,zero,8ddc <___vfiprintf_internal_r+0xb98>
    89c0:	6029883a 	mov	r20,r12
    89c4:	0013883a 	mov	r9,zero
    89c8:	002d883a 	mov	r22,zero
    89cc:	882f883a 	mov	r23,r17
    89d0:	00010706 	br	8df0 <___vfiprintf_internal_r+0xbac>
    89d4:	d8c00317 	ldw	r3,12(sp)
    89d8:	d8000845 	stb	zero,33(sp)
    89dc:	05400044 	movi	r21,1
    89e0:	18800017 	ldw	r2,0(r3)
    89e4:	18c00104 	addi	r3,r3,4
    89e8:	d8c00315 	stw	r3,12(sp)
    89ec:	d8800c05 	stb	r2,48(sp)
    89f0:	05800044 	movi	r22,1
    89f4:	ddc00c04 	addi	r23,sp,48
    89f8:	6029883a 	mov	r20,r12
    89fc:	0013883a 	mov	r9,zero
    8a00:	a340008c 	andi	r13,r20,2
    8a04:	68000126 	beq	r13,zero,8a0c <___vfiprintf_internal_r+0x7c8>
    8a08:	ad400084 	addi	r21,r21,2
    8a0c:	d9000a17 	ldw	r4,40(sp)
    8a10:	a300210c 	andi	r12,r20,132
    8a14:	d8800b17 	ldw	r2,44(sp)
    8a18:	21800044 	addi	r6,r4,1
    8a1c:	300b883a 	mov	r5,r6
    8a20:	6000021e 	bne	r12,zero,8a2c <___vfiprintf_internal_r+0x7e8>
    8a24:	8547c83a 	sub	r3,r16,r21
    8a28:	00c1ae16 	blt	zero,r3,90e4 <___vfiprintf_internal_r+0xea0>
    8a2c:	d9800847 	ldb	r6,33(sp)
    8a30:	40c00204 	addi	r3,r8,8
    8a34:	30000d26 	beq	r6,zero,8a6c <___vfiprintf_internal_r+0x828>
    8a38:	d9000844 	addi	r4,sp,33
    8a3c:	10800044 	addi	r2,r2,1
    8a40:	41000015 	stw	r4,0(r8)
    8a44:	01000044 	movi	r4,1
    8a48:	41000115 	stw	r4,4(r8)
    8a4c:	d8800b15 	stw	r2,44(sp)
    8a50:	d9400a15 	stw	r5,40(sp)
    8a54:	29000208 	cmpgei	r4,r5,8
    8a58:	2001831e 	bne	r4,zero,9068 <___vfiprintf_internal_r+0xe24>
    8a5c:	2809883a 	mov	r4,r5
    8a60:	1811883a 	mov	r8,r3
    8a64:	29400044 	addi	r5,r5,1
    8a68:	18c00204 	addi	r3,r3,8
    8a6c:	68001826 	beq	r13,zero,8ad0 <___vfiprintf_internal_r+0x88c>
    8a70:	d9000884 	addi	r4,sp,34
    8a74:	10800084 	addi	r2,r2,2
    8a78:	41000015 	stw	r4,0(r8)
    8a7c:	01000084 	movi	r4,2
    8a80:	41000115 	stw	r4,4(r8)
    8a84:	d8800b15 	stw	r2,44(sp)
    8a88:	d9400a15 	stw	r5,40(sp)
    8a8c:	29000208 	cmpgei	r4,r5,8
    8a90:	20018d26 	beq	r4,zero,90c8 <___vfiprintf_internal_r+0xe84>
    8a94:	1001ed26 	beq	r2,zero,924c <___vfiprintf_internal_r+0x1008>
    8a98:	d9800904 	addi	r6,sp,36
    8a9c:	900b883a 	mov	r5,r18
    8aa0:	9809883a 	mov	r4,r19
    8aa4:	da400215 	stw	r9,8(sp)
    8aa8:	db000115 	stw	r12,4(sp)
    8aac:	00081380 	call	8138 <__sprint_r.part.0>
    8ab0:	103eb71e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8ab4:	d9000a17 	ldw	r4,40(sp)
    8ab8:	d8800b17 	ldw	r2,44(sp)
    8abc:	da400217 	ldw	r9,8(sp)
    8ac0:	db000117 	ldw	r12,4(sp)
    8ac4:	d8c01804 	addi	r3,sp,96
    8ac8:	21400044 	addi	r5,r4,1
    8acc:	8811883a 	mov	r8,r17
    8ad0:	63002018 	cmpnei	r12,r12,128
    8ad4:	6000e326 	beq	r12,zero,8e64 <___vfiprintf_internal_r+0xc20>
    8ad8:	4d93c83a 	sub	r9,r9,r22
    8adc:	02412216 	blt	zero,r9,8f68 <___vfiprintf_internal_r+0xd24>
    8ae0:	b085883a 	add	r2,r22,r2
    8ae4:	d9400a15 	stw	r5,40(sp)
    8ae8:	45c00015 	stw	r23,0(r8)
    8aec:	45800115 	stw	r22,4(r8)
    8af0:	d8800b15 	stw	r2,44(sp)
    8af4:	29400210 	cmplti	r5,r5,8
    8af8:	2800081e 	bne	r5,zero,8b1c <___vfiprintf_internal_r+0x8d8>
    8afc:	10001426 	beq	r2,zero,8b50 <___vfiprintf_internal_r+0x90c>
    8b00:	d9800904 	addi	r6,sp,36
    8b04:	900b883a 	mov	r5,r18
    8b08:	9809883a 	mov	r4,r19
    8b0c:	00081380 	call	8138 <__sprint_r.part.0>
    8b10:	103e9f1e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8b14:	d8800b17 	ldw	r2,44(sp)
    8b18:	8807883a 	mov	r3,r17
    8b1c:	a500010c 	andi	r20,r20,4
    8b20:	a0000226 	beq	r20,zero,8b2c <___vfiprintf_internal_r+0x8e8>
    8b24:	8569c83a 	sub	r20,r16,r21
    8b28:	05000f16 	blt	zero,r20,8b68 <___vfiprintf_internal_r+0x924>
    8b2c:	8540010e 	bge	r16,r21,8b34 <___vfiprintf_internal_r+0x8f0>
    8b30:	a821883a 	mov	r16,r21
    8b34:	d8c00017 	ldw	r3,0(sp)
    8b38:	1c07883a 	add	r3,r3,r16
    8b3c:	d8c00015 	stw	r3,0(sp)
    8b40:	10013f1e 	bne	r2,zero,9040 <___vfiprintf_internal_r+0xdfc>
    8b44:	d8000a15 	stw	zero,40(sp)
    8b48:	8811883a 	mov	r8,r17
    8b4c:	003de606 	br	82e8 <___vfiprintf_internal_r+0xa4>
    8b50:	d8000a15 	stw	zero,40(sp)
    8b54:	a500010c 	andi	r20,r20,4
    8b58:	a0019d26 	beq	r20,zero,91d0 <___vfiprintf_internal_r+0xf8c>
    8b5c:	8569c83a 	sub	r20,r16,r21
    8b60:	05019b0e 	bge	zero,r20,91d0 <___vfiprintf_internal_r+0xf8c>
    8b64:	8807883a 	mov	r3,r17
    8b68:	a1000450 	cmplti	r4,r20,17
    8b6c:	01c00074 	movhi	r7,1
    8b70:	d9400a17 	ldw	r5,40(sp)
    8b74:	20026c1e 	bne	r4,zero,9528 <___vfiprintf_internal_r+0x12e4>
    8b78:	39fff404 	addi	r7,r7,-48
    8b7c:	05800404 	movi	r22,16
    8b80:	00000606 	br	8b9c <___vfiprintf_internal_r+0x958>
    8b84:	29800084 	addi	r6,r5,2
    8b88:	18c00204 	addi	r3,r3,8
    8b8c:	200b883a 	mov	r5,r4
    8b90:	a53ffc04 	addi	r20,r20,-16
    8b94:	a1000448 	cmpgei	r4,r20,17
    8b98:	20001726 	beq	r4,zero,8bf8 <___vfiprintf_internal_r+0x9b4>
    8b9c:	29000044 	addi	r4,r5,1
    8ba0:	10800404 	addi	r2,r2,16
    8ba4:	19c00015 	stw	r7,0(r3)
    8ba8:	1d800115 	stw	r22,4(r3)
    8bac:	d8800b15 	stw	r2,44(sp)
    8bb0:	d9000a15 	stw	r4,40(sp)
    8bb4:	21800208 	cmpgei	r6,r4,8
    8bb8:	303ff226 	beq	r6,zero,8b84 <___vfiprintf_internal_r+0x940>
    8bbc:	d9800904 	addi	r6,sp,36
    8bc0:	900b883a 	mov	r5,r18
    8bc4:	9809883a 	mov	r4,r19
    8bc8:	1000a226 	beq	r2,zero,8e54 <___vfiprintf_internal_r+0xc10>
    8bcc:	d9c00115 	stw	r7,4(sp)
    8bd0:	00081380 	call	8138 <__sprint_r.part.0>
    8bd4:	103e6e1e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8bd8:	d9400a17 	ldw	r5,40(sp)
    8bdc:	a53ffc04 	addi	r20,r20,-16
    8be0:	a1000448 	cmpgei	r4,r20,17
    8be4:	d8800b17 	ldw	r2,44(sp)
    8be8:	8807883a 	mov	r3,r17
    8bec:	29800044 	addi	r6,r5,1
    8bf0:	d9c00117 	ldw	r7,4(sp)
    8bf4:	203fe91e 	bne	r4,zero,8b9c <___vfiprintf_internal_r+0x958>
    8bf8:	1505883a 	add	r2,r2,r20
    8bfc:	d9800a15 	stw	r6,40(sp)
    8c00:	19c00015 	stw	r7,0(r3)
    8c04:	1d000115 	stw	r20,4(r3)
    8c08:	d8800b15 	stw	r2,44(sp)
    8c0c:	31800210 	cmplti	r6,r6,8
    8c10:	303fc61e 	bne	r6,zero,8b2c <___vfiprintf_internal_r+0x8e8>
    8c14:	10016e26 	beq	r2,zero,91d0 <___vfiprintf_internal_r+0xf8c>
    8c18:	d9800904 	addi	r6,sp,36
    8c1c:	900b883a 	mov	r5,r18
    8c20:	9809883a 	mov	r4,r19
    8c24:	00081380 	call	8138 <__sprint_r.part.0>
    8c28:	103e591e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8c2c:	d8800b17 	ldw	r2,44(sp)
    8c30:	003fbe06 	br	8b2c <___vfiprintf_internal_r+0x8e8>
    8c34:	29403fcc 	andi	r5,r5,255
    8c38:	28022c1e 	bne	r5,zero,94ec <___vfiprintf_internal_r+0x12a8>
    8c3c:	6080080c 	andi	r2,r12,32
    8c40:	63000414 	ori	r12,r12,16
    8c44:	10005b1e 	bne	r2,zero,8db4 <___vfiprintf_internal_r+0xb70>
    8c48:	d8800317 	ldw	r2,12(sp)
    8c4c:	10800104 	addi	r2,r2,4
    8c50:	d8c00317 	ldw	r3,12(sp)
    8c54:	002d883a 	mov	r22,zero
    8c58:	d8800315 	stw	r2,12(sp)
    8c5c:	1d400017 	ldw	r21,0(r3)
    8c60:	0005883a 	mov	r2,zero
    8c64:	003ed406 	br	87b8 <___vfiprintf_internal_r+0x574>
    8c68:	29403fcc 	andi	r5,r5,255
    8c6c:	2802211e 	bne	r5,zero,94f4 <___vfiprintf_internal_r+0x12b0>
    8c70:	6080080c 	andi	r2,r12,32
    8c74:	63000414 	ori	r12,r12,16
    8c78:	1000401e 	bne	r2,zero,8d7c <___vfiprintf_internal_r+0xb38>
    8c7c:	d8800317 	ldw	r2,12(sp)
    8c80:	10800104 	addi	r2,r2,4
    8c84:	d8c00317 	ldw	r3,12(sp)
    8c88:	002d883a 	mov	r22,zero
    8c8c:	d8800315 	stw	r2,12(sp)
    8c90:	1d400017 	ldw	r21,0(r3)
    8c94:	00800044 	movi	r2,1
    8c98:	003ec706 	br	87b8 <___vfiprintf_internal_r+0x574>
    8c9c:	29403fcc 	andi	r5,r5,255
    8ca0:	28021f1e 	bne	r5,zero,9520 <___vfiprintf_internal_r+0x12dc>
    8ca4:	6080080c 	andi	r2,r12,32
    8ca8:	63000414 	ori	r12,r12,16
    8cac:	10003a1e 	bne	r2,zero,8d98 <___vfiprintf_internal_r+0xb54>
    8cb0:	d8800317 	ldw	r2,12(sp)
    8cb4:	10800104 	addi	r2,r2,4
    8cb8:	d8c00317 	ldw	r3,12(sp)
    8cbc:	1d400017 	ldw	r21,0(r3)
    8cc0:	d8800315 	stw	r2,12(sp)
    8cc4:	a82dd7fa 	srai	r22,r21,31
    8cc8:	b005883a 	mov	r2,r22
    8ccc:	103f340e 	bge	r2,zero,89a0 <___vfiprintf_internal_r+0x75c>
    8cd0:	056bc83a 	sub	r21,zero,r21
    8cd4:	a804c03a 	cmpne	r2,r21,zero
    8cd8:	05adc83a 	sub	r22,zero,r22
    8cdc:	b0adc83a 	sub	r22,r22,r2
    8ce0:	00800b44 	movi	r2,45
    8ce4:	d8800845 	stb	r2,33(sp)
    8ce8:	48ffffe0 	cmpeqi	r3,r9,-1
    8cec:	03400b44 	movi	r13,45
    8cf0:	00800044 	movi	r2,1
    8cf4:	183eb426 	beq	r3,zero,87c8 <___vfiprintf_internal_r+0x584>
    8cf8:	10c00060 	cmpeqi	r3,r2,1
    8cfc:	1800341e 	bne	r3,zero,8dd0 <___vfiprintf_internal_r+0xb8c>
    8d00:	108000a0 	cmpeqi	r2,r2,2
    8d04:	1000431e 	bne	r2,zero,8e14 <___vfiprintf_internal_r+0xbd0>
    8d08:	8807883a 	mov	r3,r17
    8d0c:	00000106 	br	8d14 <___vfiprintf_internal_r+0xad0>
    8d10:	b807883a 	mov	r3,r23
    8d14:	a808d0fa 	srli	r4,r21,3
    8d18:	b00a977a 	slli	r5,r22,29
    8d1c:	b02cd0fa 	srli	r22,r22,3
    8d20:	ad4001cc 	andi	r21,r21,7
    8d24:	a8800c04 	addi	r2,r21,48
    8d28:	292ab03a 	or	r21,r5,r4
    8d2c:	18bfffc5 	stb	r2,-1(r3)
    8d30:	ad88b03a 	or	r4,r21,r22
    8d34:	1dffffc4 	addi	r23,r3,-1
    8d38:	203ff51e 	bne	r4,zero,8d10 <___vfiprintf_internal_r+0xacc>
    8d3c:	6100004c 	andi	r4,r12,1
    8d40:	20004126 	beq	r4,zero,8e48 <___vfiprintf_internal_r+0xc04>
    8d44:	10803fcc 	andi	r2,r2,255
    8d48:	1080201c 	xori	r2,r2,128
    8d4c:	10bfe004 	addi	r2,r2,-128
    8d50:	10800c18 	cmpnei	r2,r2,48
    8d54:	10003c26 	beq	r2,zero,8e48 <___vfiprintf_internal_r+0xc04>
    8d58:	18ffff84 	addi	r3,r3,-2
    8d5c:	00800c04 	movi	r2,48
    8d60:	b8bfffc5 	stb	r2,-1(r23)
    8d64:	88edc83a 	sub	r22,r17,r3
    8d68:	6029883a 	mov	r20,r12
    8d6c:	182f883a 	mov	r23,r3
    8d70:	00001f06 	br	8df0 <___vfiprintf_internal_r+0xbac>
    8d74:	000091c0 	call	91c <__sinit>
    8d78:	003d4406 	br	828c <___vfiprintf_internal_r+0x48>
    8d7c:	d8c00317 	ldw	r3,12(sp)
    8d80:	00800044 	movi	r2,1
    8d84:	1d400017 	ldw	r21,0(r3)
    8d88:	1d800117 	ldw	r22,4(r3)
    8d8c:	18c00204 	addi	r3,r3,8
    8d90:	d8c00315 	stw	r3,12(sp)
    8d94:	003e8806 	br	87b8 <___vfiprintf_internal_r+0x574>
    8d98:	d8c00317 	ldw	r3,12(sp)
    8d9c:	18800117 	ldw	r2,4(r3)
    8da0:	1d400017 	ldw	r21,0(r3)
    8da4:	18c00204 	addi	r3,r3,8
    8da8:	d8c00315 	stw	r3,12(sp)
    8dac:	102d883a 	mov	r22,r2
    8db0:	003efa06 	br	899c <___vfiprintf_internal_r+0x758>
    8db4:	d8c00317 	ldw	r3,12(sp)
    8db8:	0005883a 	mov	r2,zero
    8dbc:	1d400017 	ldw	r21,0(r3)
    8dc0:	1d800117 	ldw	r22,4(r3)
    8dc4:	18c00204 	addi	r3,r3,8
    8dc8:	d8c00315 	stw	r3,12(sp)
    8dcc:	003e7a06 	br	87b8 <___vfiprintf_internal_r+0x574>
    8dd0:	b0016a1e 	bne	r22,zero,937c <___vfiprintf_internal_r+0x1138>
    8dd4:	a88002a8 	cmpgeui	r2,r21,10
    8dd8:	1001681e 	bne	r2,zero,937c <___vfiprintf_internal_r+0x1138>
    8ddc:	ad400c04 	addi	r21,r21,48
    8de0:	dd4015c5 	stb	r21,87(sp)
    8de4:	6029883a 	mov	r20,r12
    8de8:	05800044 	movi	r22,1
    8dec:	ddc015c4 	addi	r23,sp,87
    8df0:	482b883a 	mov	r21,r9
    8df4:	4d80010e 	bge	r9,r22,8dfc <___vfiprintf_internal_r+0xbb8>
    8df8:	b02b883a 	mov	r21,r22
    8dfc:	6b403fcc 	andi	r13,r13,255
    8e00:	6b40201c 	xori	r13,r13,128
    8e04:	6b7fe004 	addi	r13,r13,-128
    8e08:	683efd26 	beq	r13,zero,8a00 <___vfiprintf_internal_r+0x7bc>
    8e0c:	ad400044 	addi	r21,r21,1
    8e10:	003efb06 	br	8a00 <___vfiprintf_internal_r+0x7bc>
    8e14:	882f883a 	mov	r23,r17
    8e18:	d9000417 	ldw	r4,16(sp)
    8e1c:	a88003cc 	andi	r2,r21,15
    8e20:	b006973a 	slli	r3,r22,28
    8e24:	2085883a 	add	r2,r4,r2
    8e28:	a82ad13a 	srli	r21,r21,4
    8e2c:	10800003 	ldbu	r2,0(r2)
    8e30:	b02cd13a 	srli	r22,r22,4
    8e34:	bdffffc4 	addi	r23,r23,-1
    8e38:	1d6ab03a 	or	r21,r3,r21
    8e3c:	b8800005 	stb	r2,0(r23)
    8e40:	ad84b03a 	or	r2,r21,r22
    8e44:	103ff41e 	bne	r2,zero,8e18 <___vfiprintf_internal_r+0xbd4>
    8e48:	8dedc83a 	sub	r22,r17,r23
    8e4c:	6029883a 	mov	r20,r12
    8e50:	003fe706 	br	8df0 <___vfiprintf_internal_r+0xbac>
    8e54:	01800044 	movi	r6,1
    8e58:	000b883a 	mov	r5,zero
    8e5c:	8807883a 	mov	r3,r17
    8e60:	003f4b06 	br	8b90 <___vfiprintf_internal_r+0x94c>
    8e64:	8559c83a 	sub	r12,r16,r21
    8e68:	033f1b0e 	bge	zero,r12,8ad8 <___vfiprintf_internal_r+0x894>
    8e6c:	61800450 	cmplti	r6,r12,17
    8e70:	01c00074 	movhi	r7,1
    8e74:	3001af1e 	bne	r6,zero,9534 <___vfiprintf_internal_r+0x12f0>
    8e78:	39fff004 	addi	r7,r7,-64
    8e7c:	03400404 	movi	r13,16
    8e80:	00000606 	br	8e9c <___vfiprintf_internal_r+0xc58>
    8e84:	21800084 	addi	r6,r4,2
    8e88:	42000204 	addi	r8,r8,8
    8e8c:	1809883a 	mov	r4,r3
    8e90:	633ffc04 	addi	r12,r12,-16
    8e94:	60c00448 	cmpgei	r3,r12,17
    8e98:	18001c26 	beq	r3,zero,8f0c <___vfiprintf_internal_r+0xcc8>
    8e9c:	20c00044 	addi	r3,r4,1
    8ea0:	10800404 	addi	r2,r2,16
    8ea4:	41c00015 	stw	r7,0(r8)
    8ea8:	43400115 	stw	r13,4(r8)
    8eac:	d8800b15 	stw	r2,44(sp)
    8eb0:	d8c00a15 	stw	r3,40(sp)
    8eb4:	19400208 	cmpgei	r5,r3,8
    8eb8:	283ff226 	beq	r5,zero,8e84 <___vfiprintf_internal_r+0xc40>
    8ebc:	d9800904 	addi	r6,sp,36
    8ec0:	900b883a 	mov	r5,r18
    8ec4:	9809883a 	mov	r4,r19
    8ec8:	10006326 	beq	r2,zero,9058 <___vfiprintf_internal_r+0xe14>
    8ecc:	d9c00515 	stw	r7,20(sp)
    8ed0:	db000215 	stw	r12,8(sp)
    8ed4:	da400115 	stw	r9,4(sp)
    8ed8:	00081380 	call	8138 <__sprint_r.part.0>
    8edc:	103dac1e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8ee0:	db000217 	ldw	r12,8(sp)
    8ee4:	d9000a17 	ldw	r4,40(sp)
    8ee8:	d8800b17 	ldw	r2,44(sp)
    8eec:	633ffc04 	addi	r12,r12,-16
    8ef0:	60c00448 	cmpgei	r3,r12,17
    8ef4:	8811883a 	mov	r8,r17
    8ef8:	21800044 	addi	r6,r4,1
    8efc:	d9c00517 	ldw	r7,20(sp)
    8f00:	03400404 	movi	r13,16
    8f04:	da400117 	ldw	r9,4(sp)
    8f08:	183fe41e 	bne	r3,zero,8e9c <___vfiprintf_internal_r+0xc58>
    8f0c:	43400204 	addi	r13,r8,8
    8f10:	1305883a 	add	r2,r2,r12
    8f14:	41c00015 	stw	r7,0(r8)
    8f18:	43000115 	stw	r12,4(r8)
    8f1c:	d8800b15 	stw	r2,44(sp)
    8f20:	d9800a15 	stw	r6,40(sp)
    8f24:	30c00208 	cmpgei	r3,r6,8
    8f28:	1800e226 	beq	r3,zero,92b4 <___vfiprintf_internal_r+0x1070>
    8f2c:	10015726 	beq	r2,zero,948c <___vfiprintf_internal_r+0x1248>
    8f30:	d9800904 	addi	r6,sp,36
    8f34:	900b883a 	mov	r5,r18
    8f38:	9809883a 	mov	r4,r19
    8f3c:	da400115 	stw	r9,4(sp)
    8f40:	00081380 	call	8138 <__sprint_r.part.0>
    8f44:	103d921e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8f48:	da400117 	ldw	r9,4(sp)
    8f4c:	d9000a17 	ldw	r4,40(sp)
    8f50:	d8800b17 	ldw	r2,44(sp)
    8f54:	4d93c83a 	sub	r9,r9,r22
    8f58:	d8c01804 	addi	r3,sp,96
    8f5c:	21400044 	addi	r5,r4,1
    8f60:	8811883a 	mov	r8,r17
    8f64:	027ede0e 	bge	zero,r9,8ae0 <___vfiprintf_internal_r+0x89c>
    8f68:	49800450 	cmplti	r6,r9,17
    8f6c:	01c00074 	movhi	r7,1
    8f70:	3001431e 	bne	r6,zero,9480 <___vfiprintf_internal_r+0x123c>
    8f74:	39fff004 	addi	r7,r7,-64
    8f78:	03000404 	movi	r12,16
    8f7c:	00000606 	br	8f98 <___vfiprintf_internal_r+0xd54>
    8f80:	21400084 	addi	r5,r4,2
    8f84:	42000204 	addi	r8,r8,8
    8f88:	1809883a 	mov	r4,r3
    8f8c:	4a7ffc04 	addi	r9,r9,-16
    8f90:	48c00448 	cmpgei	r3,r9,17
    8f94:	18001a26 	beq	r3,zero,9000 <___vfiprintf_internal_r+0xdbc>
    8f98:	20c00044 	addi	r3,r4,1
    8f9c:	10800404 	addi	r2,r2,16
    8fa0:	41c00015 	stw	r7,0(r8)
    8fa4:	43000115 	stw	r12,4(r8)
    8fa8:	d8800b15 	stw	r2,44(sp)
    8fac:	d8c00a15 	stw	r3,40(sp)
    8fb0:	19400208 	cmpgei	r5,r3,8
    8fb4:	283ff226 	beq	r5,zero,8f80 <___vfiprintf_internal_r+0xd3c>
    8fb8:	d9800904 	addi	r6,sp,36
    8fbc:	900b883a 	mov	r5,r18
    8fc0:	9809883a 	mov	r4,r19
    8fc4:	10001a26 	beq	r2,zero,9030 <___vfiprintf_internal_r+0xdec>
    8fc8:	d9c00215 	stw	r7,8(sp)
    8fcc:	da400115 	stw	r9,4(sp)
    8fd0:	00081380 	call	8138 <__sprint_r.part.0>
    8fd4:	103d6e1e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    8fd8:	da400117 	ldw	r9,4(sp)
    8fdc:	d9000a17 	ldw	r4,40(sp)
    8fe0:	d8800b17 	ldw	r2,44(sp)
    8fe4:	4a7ffc04 	addi	r9,r9,-16
    8fe8:	48c00448 	cmpgei	r3,r9,17
    8fec:	8811883a 	mov	r8,r17
    8ff0:	21400044 	addi	r5,r4,1
    8ff4:	d9c00217 	ldw	r7,8(sp)
    8ff8:	03000404 	movi	r12,16
    8ffc:	183fe61e 	bne	r3,zero,8f98 <___vfiprintf_internal_r+0xd54>
    9000:	41000204 	addi	r4,r8,8
    9004:	1245883a 	add	r2,r2,r9
    9008:	41c00015 	stw	r7,0(r8)
    900c:	42400115 	stw	r9,4(r8)
    9010:	d8800b15 	stw	r2,44(sp)
    9014:	d9400a15 	stw	r5,40(sp)
    9018:	28c00208 	cmpgei	r3,r5,8
    901c:	1800721e 	bne	r3,zero,91e8 <___vfiprintf_internal_r+0xfa4>
    9020:	29400044 	addi	r5,r5,1
    9024:	20c00204 	addi	r3,r4,8
    9028:	2011883a 	mov	r8,r4
    902c:	003eac06 	br	8ae0 <___vfiprintf_internal_r+0x89c>
    9030:	01400044 	movi	r5,1
    9034:	0009883a 	mov	r4,zero
    9038:	8811883a 	mov	r8,r17
    903c:	003fd306 	br	8f8c <___vfiprintf_internal_r+0xd48>
    9040:	d9800904 	addi	r6,sp,36
    9044:	900b883a 	mov	r5,r18
    9048:	9809883a 	mov	r4,r19
    904c:	00081380 	call	8138 <__sprint_r.part.0>
    9050:	103ebc26 	beq	r2,zero,8b44 <___vfiprintf_internal_r+0x900>
    9054:	003d4e06 	br	8590 <___vfiprintf_internal_r+0x34c>
    9058:	01800044 	movi	r6,1
    905c:	0009883a 	mov	r4,zero
    9060:	8811883a 	mov	r8,r17
    9064:	003f8a06 	br	8e90 <___vfiprintf_internal_r+0xc4c>
    9068:	10007026 	beq	r2,zero,922c <___vfiprintf_internal_r+0xfe8>
    906c:	d9800904 	addi	r6,sp,36
    9070:	900b883a 	mov	r5,r18
    9074:	9809883a 	mov	r4,r19
    9078:	da400515 	stw	r9,20(sp)
    907c:	db000215 	stw	r12,8(sp)
    9080:	db400115 	stw	r13,4(sp)
    9084:	00081380 	call	8138 <__sprint_r.part.0>
    9088:	103d411e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    908c:	d9000a17 	ldw	r4,40(sp)
    9090:	d8800b17 	ldw	r2,44(sp)
    9094:	d8c01804 	addi	r3,sp,96
    9098:	21400044 	addi	r5,r4,1
    909c:	8811883a 	mov	r8,r17
    90a0:	da400517 	ldw	r9,20(sp)
    90a4:	db000217 	ldw	r12,8(sp)
    90a8:	db400117 	ldw	r13,4(sp)
    90ac:	003e6f06 	br	8a6c <___vfiprintf_internal_r+0x828>
    90b0:	d8800884 	addi	r2,sp,34
    90b4:	d8801615 	stw	r2,88(sp)
    90b8:	00800084 	movi	r2,2
    90bc:	d8801715 	stw	r2,92(sp)
    90c0:	d8c01804 	addi	r3,sp,96
    90c4:	01400044 	movi	r5,1
    90c8:	1811883a 	mov	r8,r3
    90cc:	2809883a 	mov	r4,r5
    90d0:	21400044 	addi	r5,r4,1
    90d4:	40c00204 	addi	r3,r8,8
    90d8:	003e7d06 	br	8ad0 <___vfiprintf_internal_r+0x88c>
    90dc:	a019883a 	mov	r12,r20
    90e0:	003f0506 	br	8cf8 <___vfiprintf_internal_r+0xab4>
    90e4:	19400450 	cmplti	r5,r3,17
    90e8:	01c00074 	movhi	r7,1
    90ec:	2801031e 	bne	r5,zero,94fc <___vfiprintf_internal_r+0x12b8>
    90f0:	39fff404 	addi	r7,r7,-48
    90f4:	03800404 	movi	r14,16
    90f8:	00000706 	br	9118 <___vfiprintf_internal_r+0xed4>
    90fc:	23c00084 	addi	r15,r4,2
    9100:	42000204 	addi	r8,r8,8
    9104:	3009883a 	mov	r4,r6
    9108:	18fffc04 	addi	r3,r3,-16
    910c:	19400448 	cmpgei	r5,r3,17
    9110:	28002026 	beq	r5,zero,9194 <___vfiprintf_internal_r+0xf50>
    9114:	21800044 	addi	r6,r4,1
    9118:	10800404 	addi	r2,r2,16
    911c:	41c00015 	stw	r7,0(r8)
    9120:	43800115 	stw	r14,4(r8)
    9124:	d8800b15 	stw	r2,44(sp)
    9128:	d9800a15 	stw	r6,40(sp)
    912c:	31400208 	cmpgei	r5,r6,8
    9130:	283ff226 	beq	r5,zero,90fc <___vfiprintf_internal_r+0xeb8>
    9134:	d9800904 	addi	r6,sp,36
    9138:	900b883a 	mov	r5,r18
    913c:	9809883a 	mov	r4,r19
    9140:	10001f26 	beq	r2,zero,91c0 <___vfiprintf_internal_r+0xf7c>
    9144:	d9c00715 	stw	r7,28(sp)
    9148:	d8c00615 	stw	r3,24(sp)
    914c:	da400515 	stw	r9,20(sp)
    9150:	db000215 	stw	r12,8(sp)
    9154:	db400115 	stw	r13,4(sp)
    9158:	00081380 	call	8138 <__sprint_r.part.0>
    915c:	103d0c1e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    9160:	d8c00617 	ldw	r3,24(sp)
    9164:	d9000a17 	ldw	r4,40(sp)
    9168:	d8800b17 	ldw	r2,44(sp)
    916c:	18fffc04 	addi	r3,r3,-16
    9170:	19400448 	cmpgei	r5,r3,17
    9174:	8811883a 	mov	r8,r17
    9178:	23c00044 	addi	r15,r4,1
    917c:	d9c00717 	ldw	r7,28(sp)
    9180:	03800404 	movi	r14,16
    9184:	da400517 	ldw	r9,20(sp)
    9188:	db000217 	ldw	r12,8(sp)
    918c:	db400117 	ldw	r13,4(sp)
    9190:	283fe01e 	bne	r5,zero,9114 <___vfiprintf_internal_r+0xed0>
    9194:	10c5883a 	add	r2,r2,r3
    9198:	40c00115 	stw	r3,4(r8)
    919c:	41c00015 	stw	r7,0(r8)
    91a0:	d8800b15 	stw	r2,44(sp)
    91a4:	dbc00a15 	stw	r15,40(sp)
    91a8:	78c00208 	cmpgei	r3,r15,8
    91ac:	18002c1e 	bne	r3,zero,9260 <___vfiprintf_internal_r+0x101c>
    91b0:	42000204 	addi	r8,r8,8
    91b4:	79400044 	addi	r5,r15,1
    91b8:	7809883a 	mov	r4,r15
    91bc:	003e1b06 	br	8a2c <___vfiprintf_internal_r+0x7e8>
    91c0:	0009883a 	mov	r4,zero
    91c4:	03c00044 	movi	r15,1
    91c8:	8811883a 	mov	r8,r17
    91cc:	003fce06 	br	9108 <___vfiprintf_internal_r+0xec4>
    91d0:	8540010e 	bge	r16,r21,91d8 <___vfiprintf_internal_r+0xf94>
    91d4:	a821883a 	mov	r16,r21
    91d8:	d8800017 	ldw	r2,0(sp)
    91dc:	1405883a 	add	r2,r2,r16
    91e0:	d8800015 	stw	r2,0(sp)
    91e4:	003e5706 	br	8b44 <___vfiprintf_internal_r+0x900>
    91e8:	10008126 	beq	r2,zero,93f0 <___vfiprintf_internal_r+0x11ac>
    91ec:	d9800904 	addi	r6,sp,36
    91f0:	900b883a 	mov	r5,r18
    91f4:	9809883a 	mov	r4,r19
    91f8:	00081380 	call	8138 <__sprint_r.part.0>
    91fc:	103ce41e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    9200:	d9400a17 	ldw	r5,40(sp)
    9204:	d8800b17 	ldw	r2,44(sp)
    9208:	d8c01804 	addi	r3,sp,96
    920c:	29400044 	addi	r5,r5,1
    9210:	8811883a 	mov	r8,r17
    9214:	003e3206 	br	8ae0 <___vfiprintf_internal_r+0x89c>
    9218:	d8000a15 	stw	zero,40(sp)
    921c:	8811883a 	mov	r8,r17
    9220:	003c4a06 	br	834c <___vfiprintf_internal_r+0x108>
    9224:	002d883a 	mov	r22,zero
    9228:	003d4406 	br	873c <___vfiprintf_internal_r+0x4f8>
    922c:	68003326 	beq	r13,zero,92fc <___vfiprintf_internal_r+0x10b8>
    9230:	d8800884 	addi	r2,sp,34
    9234:	d8801615 	stw	r2,88(sp)
    9238:	00800084 	movi	r2,2
    923c:	d8801715 	stw	r2,92(sp)
    9240:	da001804 	addi	r8,sp,96
    9244:	01000044 	movi	r4,1
    9248:	003fa106 	br	90d0 <___vfiprintf_internal_r+0xe8c>
    924c:	d8c01804 	addi	r3,sp,96
    9250:	01400044 	movi	r5,1
    9254:	0009883a 	mov	r4,zero
    9258:	8811883a 	mov	r8,r17
    925c:	003e1c06 	br	8ad0 <___vfiprintf_internal_r+0x88c>
    9260:	10003826 	beq	r2,zero,9344 <___vfiprintf_internal_r+0x1100>
    9264:	d9800904 	addi	r6,sp,36
    9268:	900b883a 	mov	r5,r18
    926c:	9809883a 	mov	r4,r19
    9270:	da400515 	stw	r9,20(sp)
    9274:	db000215 	stw	r12,8(sp)
    9278:	db400115 	stw	r13,4(sp)
    927c:	00081380 	call	8138 <__sprint_r.part.0>
    9280:	103cc31e 	bne	r2,zero,8590 <___vfiprintf_internal_r+0x34c>
    9284:	d9000a17 	ldw	r4,40(sp)
    9288:	d8800b17 	ldw	r2,44(sp)
    928c:	8811883a 	mov	r8,r17
    9290:	21400044 	addi	r5,r4,1
    9294:	da400517 	ldw	r9,20(sp)
    9298:	db000217 	ldw	r12,8(sp)
    929c:	db400117 	ldw	r13,4(sp)
    92a0:	003de206 	br	8a2c <___vfiprintf_internal_r+0x7e8>
    92a4:	e029883a 	mov	r20,fp
    92a8:	003c2d06 	br	8360 <___vfiprintf_internal_r+0x11c>
    92ac:	882f883a 	mov	r23,r17
    92b0:	003ecf06 	br	8df0 <___vfiprintf_internal_r+0xbac>
    92b4:	31400044 	addi	r5,r6,1
    92b8:	68c00204 	addi	r3,r13,8
    92bc:	3009883a 	mov	r4,r6
    92c0:	6811883a 	mov	r8,r13
    92c4:	003e0406 	br	8ad8 <___vfiprintf_internal_r+0x894>
    92c8:	00c00c04 	movi	r3,48
    92cc:	d88008c5 	stb	r2,35(sp)
    92d0:	d8c00885 	stb	r3,34(sp)
    92d4:	63000094 	ori	r12,r12,2
    92d8:	00800084 	movi	r2,2
    92dc:	003d3606 	br	87b8 <___vfiprintf_internal_r+0x574>
    92e0:	d9400017 	ldw	r5,0(sp)
    92e4:	20800017 	ldw	r2,0(r4)
    92e8:	d8c00315 	stw	r3,12(sp)
    92ec:	2809d7fa 	srai	r4,r5,31
    92f0:	11400015 	stw	r5,0(r2)
    92f4:	11000115 	stw	r4,4(r2)
    92f8:	003bfb06 	br	82e8 <___vfiprintf_internal_r+0xa4>
    92fc:	0009883a 	mov	r4,zero
    9300:	d8c01804 	addi	r3,sp,96
    9304:	01400044 	movi	r5,1
    9308:	8811883a 	mov	r8,r17
    930c:	003df006 	br	8ad0 <___vfiprintf_internal_r+0x88c>
    9310:	0421c83a 	sub	r16,zero,r16
    9314:	ddc00315 	stw	r23,12(sp)
    9318:	003cdb06 	br	8688 <___vfiprintf_internal_r+0x444>
    931c:	b809883a 	mov	r4,r23
    9320:	da000215 	stw	r8,8(sp)
    9324:	db000115 	stw	r12,4(sp)
    9328:	0001a4c0 	call	1a4c <strlen>
    932c:	102d883a 	mov	r22,r2
    9330:	102b883a 	mov	r21,r2
    9334:	dd000315 	stw	r20,12(sp)
    9338:	db000117 	ldw	r12,4(sp)
    933c:	da000217 	ldw	r8,8(sp)
    9340:	003dad06 	br	89f8 <___vfiprintf_internal_r+0x7b4>
    9344:	d8c00847 	ldb	r3,33(sp)
    9348:	1800551e 	bne	r3,zero,94a0 <___vfiprintf_internal_r+0x125c>
    934c:	683f581e 	bne	r13,zero,90b0 <___vfiprintf_internal_r+0xe6c>
    9350:	0009883a 	mov	r4,zero
    9354:	d8c01804 	addi	r3,sp,96
    9358:	01400044 	movi	r5,1
    935c:	8811883a 	mov	r8,r17
    9360:	003ddd06 	br	8ad8 <___vfiprintf_internal_r+0x894>
    9364:	d8800317 	ldw	r2,12(sp)
    9368:	10800017 	ldw	r2,0(r2)
    936c:	d8c00315 	stw	r3,12(sp)
    9370:	d8c00017 	ldw	r3,0(sp)
    9374:	10c00015 	stw	r3,0(r2)
    9378:	003bdb06 	br	82e8 <___vfiprintf_internal_r+0xa4>
    937c:	882f883a 	mov	r23,r17
    9380:	00000206 	br	938c <___vfiprintf_internal_r+0x1148>
    9384:	102b883a 	mov	r21,r2
    9388:	182d883a 	mov	r22,r3
    938c:	a809883a 	mov	r4,r21
    9390:	b00b883a 	mov	r5,r22
    9394:	01800284 	movi	r6,10
    9398:	000f883a 	mov	r7,zero
    939c:	db400615 	stw	r13,24(sp)
    93a0:	da000515 	stw	r8,20(sp)
    93a4:	da400215 	stw	r9,8(sp)
    93a8:	db000115 	stw	r12,4(sp)
    93ac:	000a4280 	call	a428 <__umoddi3>
    93b0:	10800c04 	addi	r2,r2,48
    93b4:	bdffffc4 	addi	r23,r23,-1
    93b8:	a809883a 	mov	r4,r21
    93bc:	b00b883a 	mov	r5,r22
    93c0:	b8800005 	stb	r2,0(r23)
    93c4:	01800284 	movi	r6,10
    93c8:	000f883a 	mov	r7,zero
    93cc:	0009e0c0 	call	9e0c <__udivdi3>
    93d0:	db000117 	ldw	r12,4(sp)
    93d4:	da400217 	ldw	r9,8(sp)
    93d8:	da000517 	ldw	r8,20(sp)
    93dc:	db400617 	ldw	r13,24(sp)
    93e0:	b03fe81e 	bne	r22,zero,9384 <___vfiprintf_internal_r+0x1140>
    93e4:	ad4002a8 	cmpgeui	r21,r21,10
    93e8:	a83fe61e 	bne	r21,zero,9384 <___vfiprintf_internal_r+0x1140>
    93ec:	003e9606 	br	8e48 <___vfiprintf_internal_r+0xc04>
    93f0:	00c00044 	movi	r3,1
    93f4:	d8c00a15 	stw	r3,40(sp)
    93f8:	b005883a 	mov	r2,r22
    93fc:	ddc01615 	stw	r23,88(sp)
    9400:	dd801715 	stw	r22,92(sp)
    9404:	dd800b15 	stw	r22,44(sp)
    9408:	d8c01804 	addi	r3,sp,96
    940c:	003dc306 	br	8b1c <___vfiprintf_internal_r+0x8d8>
    9410:	10c00060 	cmpeqi	r3,r2,1
    9414:	a019883a 	mov	r12,r20
    9418:	183e3926 	beq	r3,zero,8d00 <___vfiprintf_internal_r+0xabc>
    941c:	003e6f06 	br	8ddc <___vfiprintf_internal_r+0xb98>
    9420:	e0800043 	ldbu	r2,1(fp)
    9424:	63000814 	ori	r12,r12,32
    9428:	e7000044 	addi	fp,fp,1
    942c:	10803fcc 	andi	r2,r2,255
    9430:	1080201c 	xori	r2,r2,128
    9434:	10bfe004 	addi	r2,r2,-128
    9438:	003bd106 	br	8380 <___vfiprintf_internal_r+0x13c>
    943c:	488001f0 	cmpltui	r2,r9,7
    9440:	482d883a 	mov	r22,r9
    9444:	1000011e 	bne	r2,zero,944c <___vfiprintf_internal_r+0x1208>
    9448:	05800184 	movi	r22,6
    944c:	05c00074 	movhi	r23,1
    9450:	b02b883a 	mov	r21,r22
    9454:	dd000315 	stw	r20,12(sp)
    9458:	bdfef804 	addi	r23,r23,-1056
    945c:	003d6606 	br	89f8 <___vfiprintf_internal_r+0x7b4>
    9460:	d8800315 	stw	r2,12(sp)
    9464:	002d883a 	mov	r22,zero
    9468:	00800044 	movi	r2,1
    946c:	003cd206 	br	87b8 <___vfiprintf_internal_r+0x574>
    9470:	d8800315 	stw	r2,12(sp)
    9474:	002d883a 	mov	r22,zero
    9478:	0005883a 	mov	r2,zero
    947c:	003cce06 	br	87b8 <___vfiprintf_internal_r+0x574>
    9480:	1809883a 	mov	r4,r3
    9484:	39fff004 	addi	r7,r7,-64
    9488:	003ede06 	br	9004 <___vfiprintf_internal_r+0xdc0>
    948c:	d8c01804 	addi	r3,sp,96
    9490:	01400044 	movi	r5,1
    9494:	0009883a 	mov	r4,zero
    9498:	8811883a 	mov	r8,r17
    949c:	003d8e06 	br	8ad8 <___vfiprintf_internal_r+0x894>
    94a0:	d8800844 	addi	r2,sp,33
    94a4:	d8801615 	stw	r2,88(sp)
    94a8:	00800044 	movi	r2,1
    94ac:	d8801715 	stw	r2,92(sp)
    94b0:	d8c01804 	addi	r3,sp,96
    94b4:	01400044 	movi	r5,1
    94b8:	003d6806 	br	8a5c <___vfiprintf_internal_r+0x818>
    94bc:	d9800845 	stb	r6,33(sp)
    94c0:	003c5306 	br	8610 <___vfiprintf_internal_r+0x3cc>
    94c4:	482b883a 	mov	r21,r9
    94c8:	dd000315 	stw	r20,12(sp)
    94cc:	482d883a 	mov	r22,r9
    94d0:	003d4906 	br	89f8 <___vfiprintf_internal_r+0x7b4>
    94d4:	d9800845 	stb	r6,33(sp)
    94d8:	003cd906 	br	8840 <___vfiprintf_internal_r+0x5fc>
    94dc:	d9800845 	stb	r6,33(sp)
    94e0:	003ce906 	br	8888 <___vfiprintf_internal_r+0x644>
    94e4:	d9800845 	stb	r6,33(sp)
    94e8:	003c8a06 	br	8714 <___vfiprintf_internal_r+0x4d0>
    94ec:	d9800845 	stb	r6,33(sp)
    94f0:	003dd206 	br	8c3c <___vfiprintf_internal_r+0x9f8>
    94f4:	d9800845 	stb	r6,33(sp)
    94f8:	003ddd06 	br	8c70 <___vfiprintf_internal_r+0xa2c>
    94fc:	301f883a 	mov	r15,r6
    9500:	39fff404 	addi	r7,r7,-48
    9504:	003f2306 	br	9194 <___vfiprintf_internal_r+0xf50>
    9508:	d9800845 	stb	r6,33(sp)
    950c:	003d1606 	br	8968 <___vfiprintf_internal_r+0x724>
    9510:	d9800845 	stb	r6,33(sp)
    9514:	003d0406 	br	8928 <___vfiprintf_internal_r+0x6e4>
    9518:	d9800845 	stb	r6,33(sp)
    951c:	003cb806 	br	8800 <___vfiprintf_internal_r+0x5bc>
    9520:	d9800845 	stb	r6,33(sp)
    9524:	003ddf06 	br	8ca4 <___vfiprintf_internal_r+0xa60>
    9528:	29800044 	addi	r6,r5,1
    952c:	39fff404 	addi	r7,r7,-48
    9530:	003db106 	br	8bf8 <___vfiprintf_internal_r+0x9b4>
    9534:	181b883a 	mov	r13,r3
    9538:	280d883a 	mov	r6,r5
    953c:	39fff004 	addi	r7,r7,-64
    9540:	003e7306 	br	8f10 <___vfiprintf_internal_r+0xccc>
    9544:	00bfffc4 	movi	r2,-1
    9548:	d8800015 	stw	r2,0(sp)
    954c:	003c1306 	br	859c <___vfiprintf_internal_r+0x358>
    9550:	d8800317 	ldw	r2,12(sp)
    9554:	12400017 	ldw	r9,0(r2)
    9558:	15c00104 	addi	r23,r2,4
    955c:	4800010e 	bge	r9,zero,9564 <___vfiprintf_internal_r+0x1320>
    9560:	027fffc4 	movi	r9,-1
    9564:	e0800043 	ldbu	r2,1(fp)
    9568:	ddc00315 	stw	r23,12(sp)
    956c:	1839883a 	mov	fp,r3
    9570:	10803fcc 	andi	r2,r2,255
    9574:	1080201c 	xori	r2,r2,128
    9578:	10bfe004 	addi	r2,r2,-128
    957c:	003b8006 	br	8380 <___vfiprintf_internal_r+0x13c>

00009580 <__vfiprintf_internal>:
    9580:	00800074 	movhi	r2,1
    9584:	300f883a 	mov	r7,r6
    9588:	280d883a 	mov	r6,r5
    958c:	200b883a 	mov	r5,r4
    9590:	11075717 	ldw	r4,7516(r2)
    9594:	00082441 	jmpi	8244 <___vfiprintf_internal_r>

00009598 <__sbprintf>:
    9598:	2880030b 	ldhu	r2,12(r5)
    959c:	2b001917 	ldw	r12,100(r5)
    95a0:	2ac0038b 	ldhu	r11,14(r5)
    95a4:	2a800717 	ldw	r10,28(r5)
    95a8:	2a400917 	ldw	r9,36(r5)
    95ac:	defee204 	addi	sp,sp,-1144
    95b0:	da001a04 	addi	r8,sp,104
    95b4:	00c10004 	movi	r3,1024
    95b8:	dc011a15 	stw	r16,1128(sp)
    95bc:	10bfff4c 	andi	r2,r2,65533
    95c0:	2821883a 	mov	r16,r5
    95c4:	d80b883a 	mov	r5,sp
    95c8:	dc811c15 	stw	r18,1136(sp)
    95cc:	dc411b15 	stw	r17,1132(sp)
    95d0:	dfc11d15 	stw	ra,1140(sp)
    95d4:	2025883a 	mov	r18,r4
    95d8:	d880030d 	sth	r2,12(sp)
    95dc:	db001915 	stw	r12,100(sp)
    95e0:	dac0038d 	sth	r11,14(sp)
    95e4:	da800715 	stw	r10,28(sp)
    95e8:	da400915 	stw	r9,36(sp)
    95ec:	da000015 	stw	r8,0(sp)
    95f0:	da000415 	stw	r8,16(sp)
    95f4:	d8c00215 	stw	r3,8(sp)
    95f8:	d8c00515 	stw	r3,20(sp)
    95fc:	d8000615 	stw	zero,24(sp)
    9600:	00082440 	call	8244 <___vfiprintf_internal_r>
    9604:	1023883a 	mov	r17,r2
    9608:	10000d0e 	bge	r2,zero,9640 <__sbprintf+0xa8>
    960c:	d880030b 	ldhu	r2,12(sp)
    9610:	1080100c 	andi	r2,r2,64
    9614:	10000326 	beq	r2,zero,9624 <__sbprintf+0x8c>
    9618:	8080030b 	ldhu	r2,12(r16)
    961c:	10801014 	ori	r2,r2,64
    9620:	8080030d 	sth	r2,12(r16)
    9624:	8805883a 	mov	r2,r17
    9628:	dfc11d17 	ldw	ra,1140(sp)
    962c:	dc811c17 	ldw	r18,1136(sp)
    9630:	dc411b17 	ldw	r17,1132(sp)
    9634:	dc011a17 	ldw	r16,1128(sp)
    9638:	dec11e04 	addi	sp,sp,1144
    963c:	f800283a 	ret
    9640:	d80b883a 	mov	r5,sp
    9644:	9009883a 	mov	r4,r18
    9648:	0005dfc0 	call	5dfc <_fflush_r>
    964c:	103fef26 	beq	r2,zero,960c <__sbprintf+0x74>
    9650:	047fffc4 	movi	r17,-1
    9654:	003fed06 	br	960c <__sbprintf+0x74>

00009658 <_calloc_r>:
    9658:	defffe04 	addi	sp,sp,-8
    965c:	2805883a 	mov	r2,r5
    9660:	dc000015 	stw	r16,0(sp)
    9664:	300b883a 	mov	r5,r6
    9668:	2021883a 	mov	r16,r4
    966c:	1009883a 	mov	r4,r2
    9670:	dfc00115 	stw	ra,4(sp)
    9674:	000aba80 	call	aba8 <__mulsi3>
    9678:	100b883a 	mov	r5,r2
    967c:	8009883a 	mov	r4,r16
    9680:	0000abc0 	call	abc <_malloc_r>
    9684:	1007883a 	mov	r3,r2
    9688:	10000c26 	beq	r2,zero,96bc <_calloc_r+0x64>
    968c:	11bfff17 	ldw	r6,-4(r2)
    9690:	00bfff04 	movi	r2,-4
    9694:	308c703a 	and	r6,r6,r2
    9698:	31bfff04 	addi	r6,r6,-4
    969c:	30800968 	cmpgeui	r2,r6,37
    96a0:	1000151e 	bne	r2,zero,96f8 <_calloc_r+0xa0>
    96a4:	30800530 	cmpltui	r2,r6,20
    96a8:	10000926 	beq	r2,zero,96d0 <_calloc_r+0x78>
    96ac:	1805883a 	mov	r2,r3
    96b0:	10000015 	stw	zero,0(r2)
    96b4:	10000115 	stw	zero,4(r2)
    96b8:	10000215 	stw	zero,8(r2)
    96bc:	1805883a 	mov	r2,r3
    96c0:	dfc00117 	ldw	ra,4(sp)
    96c4:	dc000017 	ldw	r16,0(sp)
    96c8:	dec00204 	addi	sp,sp,8
    96cc:	f800283a 	ret
    96d0:	18000015 	stw	zero,0(r3)
    96d4:	18000115 	stw	zero,4(r3)
    96d8:	30800728 	cmpgeui	r2,r6,28
    96dc:	10000b26 	beq	r2,zero,970c <_calloc_r+0xb4>
    96e0:	18000215 	stw	zero,8(r3)
    96e4:	18000315 	stw	zero,12(r3)
    96e8:	31800920 	cmpeqi	r6,r6,36
    96ec:	3000091e 	bne	r6,zero,9714 <_calloc_r+0xbc>
    96f0:	18800404 	addi	r2,r3,16
    96f4:	003fee06 	br	96b0 <_calloc_r+0x58>
    96f8:	1809883a 	mov	r4,r3
    96fc:	000b883a 	mov	r5,zero
    9700:	00014980 	call	1498 <memset>
    9704:	1007883a 	mov	r3,r2
    9708:	003fec06 	br	96bc <_calloc_r+0x64>
    970c:	18800204 	addi	r2,r3,8
    9710:	003fe706 	br	96b0 <_calloc_r+0x58>
    9714:	18000415 	stw	zero,16(r3)
    9718:	18800604 	addi	r2,r3,24
    971c:	18000515 	stw	zero,20(r3)
    9720:	003fe306 	br	96b0 <_calloc_r+0x58>

00009724 <__fputwc>:
    9724:	defff904 	addi	sp,sp,-28
    9728:	dcc00415 	stw	r19,16(sp)
    972c:	dc800315 	stw	r18,12(sp)
    9730:	dc000115 	stw	r16,4(sp)
    9734:	dfc00615 	stw	ra,24(sp)
    9738:	dd000515 	stw	r20,20(sp)
    973c:	dc400215 	stw	r17,8(sp)
    9740:	2025883a 	mov	r18,r4
    9744:	2827883a 	mov	r19,r5
    9748:	3021883a 	mov	r16,r6
    974c:	0009a3c0 	call	9a3c <__locale_mb_cur_max>
    9750:	10800058 	cmpnei	r2,r2,1
    9754:	1000071e 	bne	r2,zero,9774 <__fputwc+0x50>
    9758:	98bfffc4 	addi	r2,r19,-1
    975c:	10803fe8 	cmpgeui	r2,r2,255
    9760:	1000041e 	bne	r2,zero,9774 <__fputwc+0x50>
    9764:	980b883a 	mov	r5,r19
    9768:	dcc000c5 	stb	r19,3(sp)
    976c:	05000044 	movi	r20,1
    9770:	00000a06 	br	979c <__fputwc+0x78>
    9774:	81c01704 	addi	r7,r16,92
    9778:	980d883a 	mov	r6,r19
    977c:	d94000c4 	addi	r5,sp,3
    9780:	9009883a 	mov	r4,r18
    9784:	0009ce00 	call	9ce0 <_wcrtomb_r>
    9788:	1029883a 	mov	r20,r2
    978c:	10bfffd8 	cmpnei	r2,r2,-1
    9790:	10003426 	beq	r2,zero,9864 <__fputwc+0x140>
    9794:	a0002926 	beq	r20,zero,983c <__fputwc+0x118>
    9798:	d94000c3 	ldbu	r5,3(sp)
    979c:	0023883a 	mov	r17,zero
    97a0:	00000a06 	br	97cc <__fputwc+0xa8>
    97a4:	80800017 	ldw	r2,0(r16)
    97a8:	11400005 	stb	r5,0(r2)
    97ac:	80800017 	ldw	r2,0(r16)
    97b0:	10800044 	addi	r2,r2,1
    97b4:	80800015 	stw	r2,0(r16)
    97b8:	8c400044 	addi	r17,r17,1
    97bc:	d88000c4 	addi	r2,sp,3
    97c0:	1445883a 	add	r2,r2,r17
    97c4:	8d001d2e 	bgeu	r17,r20,983c <__fputwc+0x118>
    97c8:	11400003 	ldbu	r5,0(r2)
    97cc:	80800217 	ldw	r2,8(r16)
    97d0:	10bfffc4 	addi	r2,r2,-1
    97d4:	80800215 	stw	r2,8(r16)
    97d8:	103ff20e 	bge	r2,zero,97a4 <__fputwc+0x80>
    97dc:	80c00617 	ldw	r3,24(r16)
    97e0:	10c01016 	blt	r2,r3,9824 <__fputwc+0x100>
    97e4:	80800017 	ldw	r2,0(r16)
    97e8:	11400005 	stb	r5,0(r2)
    97ec:	80800017 	ldw	r2,0(r16)
    97f0:	10c00003 	ldbu	r3,0(r2)
    97f4:	10800044 	addi	r2,r2,1
    97f8:	18c002a0 	cmpeqi	r3,r3,10
    97fc:	183fed26 	beq	r3,zero,97b4 <__fputwc+0x90>
    9800:	800d883a 	mov	r6,r16
    9804:	01400284 	movi	r5,10
    9808:	9009883a 	mov	r4,r18
    980c:	0009b840 	call	9b84 <__swbuf_r>
    9810:	10bfffe0 	cmpeqi	r2,r2,-1
    9814:	10803fcc 	andi	r2,r2,255
    9818:	103fe726 	beq	r2,zero,97b8 <__fputwc+0x94>
    981c:	053fffc4 	movi	r20,-1
    9820:	00000706 	br	9840 <__fputwc+0x11c>
    9824:	29403fcc 	andi	r5,r5,255
    9828:	800d883a 	mov	r6,r16
    982c:	9009883a 	mov	r4,r18
    9830:	0009b840 	call	9b84 <__swbuf_r>
    9834:	10bfffe0 	cmpeqi	r2,r2,-1
    9838:	003ff606 	br	9814 <__fputwc+0xf0>
    983c:	9829883a 	mov	r20,r19
    9840:	a005883a 	mov	r2,r20
    9844:	dfc00617 	ldw	ra,24(sp)
    9848:	dd000517 	ldw	r20,20(sp)
    984c:	dcc00417 	ldw	r19,16(sp)
    9850:	dc800317 	ldw	r18,12(sp)
    9854:	dc400217 	ldw	r17,8(sp)
    9858:	dc000117 	ldw	r16,4(sp)
    985c:	dec00704 	addi	sp,sp,28
    9860:	f800283a 	ret
    9864:	8080030b 	ldhu	r2,12(r16)
    9868:	10801014 	ori	r2,r2,64
    986c:	8080030d 	sth	r2,12(r16)
    9870:	003ff306 	br	9840 <__fputwc+0x11c>

00009874 <_fputwc_r>:
    9874:	3080030b 	ldhu	r2,12(r6)
    9878:	10c8000c 	andi	r3,r2,8192
    987c:	1800051e 	bne	r3,zero,9894 <_fputwc_r+0x20>
    9880:	30c01917 	ldw	r3,100(r6)
    9884:	10880014 	ori	r2,r2,8192
    9888:	3080030d 	sth	r2,12(r6)
    988c:	18880014 	ori	r2,r3,8192
    9890:	30801915 	stw	r2,100(r6)
    9894:	00097241 	jmpi	9724 <__fputwc>

00009898 <fputwc>:
    9898:	defffc04 	addi	sp,sp,-16
    989c:	00800074 	movhi	r2,1
    98a0:	dc000115 	stw	r16,4(sp)
    98a4:	14075717 	ldw	r16,7516(r2)
    98a8:	dc400215 	stw	r17,8(sp)
    98ac:	dfc00315 	stw	ra,12(sp)
    98b0:	2023883a 	mov	r17,r4
    98b4:	80000226 	beq	r16,zero,98c0 <fputwc+0x28>
    98b8:	80800e17 	ldw	r2,56(r16)
    98bc:	10001026 	beq	r2,zero,9900 <fputwc+0x68>
    98c0:	2880030b 	ldhu	r2,12(r5)
    98c4:	10c8000c 	andi	r3,r2,8192
    98c8:	1800051e 	bne	r3,zero,98e0 <fputwc+0x48>
    98cc:	28c01917 	ldw	r3,100(r5)
    98d0:	10880014 	ori	r2,r2,8192
    98d4:	2880030d 	sth	r2,12(r5)
    98d8:	18880014 	ori	r2,r3,8192
    98dc:	28801915 	stw	r2,100(r5)
    98e0:	280d883a 	mov	r6,r5
    98e4:	8009883a 	mov	r4,r16
    98e8:	880b883a 	mov	r5,r17
    98ec:	dfc00317 	ldw	ra,12(sp)
    98f0:	dc400217 	ldw	r17,8(sp)
    98f4:	dc000117 	ldw	r16,4(sp)
    98f8:	dec00404 	addi	sp,sp,16
    98fc:	00097241 	jmpi	9724 <__fputwc>
    9900:	8009883a 	mov	r4,r16
    9904:	d9400015 	stw	r5,0(sp)
    9908:	000091c0 	call	91c <__sinit>
    990c:	d9400017 	ldw	r5,0(sp)
    9910:	003feb06 	br	98c0 <fputwc+0x28>

00009914 <_fstat_r>:
    9914:	defffe04 	addi	sp,sp,-8
    9918:	2805883a 	mov	r2,r5
    991c:	dc000015 	stw	r16,0(sp)
    9920:	300b883a 	mov	r5,r6
    9924:	2021883a 	mov	r16,r4
    9928:	1009883a 	mov	r4,r2
    992c:	00800074 	movhi	r2,1
    9930:	dfc00115 	stw	ra,4(sp)
    9934:	100e8315 	stw	zero,14860(r2)
    9938:	000d68c0 	call	d68c <fstat>
    993c:	10ffffd8 	cmpnei	r3,r2,-1
    9940:	18000426 	beq	r3,zero,9954 <_fstat_r+0x40>
    9944:	dfc00117 	ldw	ra,4(sp)
    9948:	dc000017 	ldw	r16,0(sp)
    994c:	dec00204 	addi	sp,sp,8
    9950:	f800283a 	ret
    9954:	00c00074 	movhi	r3,1
    9958:	18ce8317 	ldw	r3,14860(r3)
    995c:	183ff926 	beq	r3,zero,9944 <_fstat_r+0x30>
    9960:	80c00015 	stw	r3,0(r16)
    9964:	dfc00117 	ldw	ra,4(sp)
    9968:	dc000017 	ldw	r16,0(sp)
    996c:	dec00204 	addi	sp,sp,8
    9970:	f800283a 	ret

00009974 <_isatty_r>:
    9974:	defffe04 	addi	sp,sp,-8
    9978:	dc000015 	stw	r16,0(sp)
    997c:	00800074 	movhi	r2,1
    9980:	2021883a 	mov	r16,r4
    9984:	2809883a 	mov	r4,r5
    9988:	dfc00115 	stw	ra,4(sp)
    998c:	100e8315 	stw	zero,14860(r2)
    9990:	000d7840 	call	d784 <isatty>
    9994:	10ffffd8 	cmpnei	r3,r2,-1
    9998:	18000426 	beq	r3,zero,99ac <_isatty_r+0x38>
    999c:	dfc00117 	ldw	ra,4(sp)
    99a0:	dc000017 	ldw	r16,0(sp)
    99a4:	dec00204 	addi	sp,sp,8
    99a8:	f800283a 	ret
    99ac:	00c00074 	movhi	r3,1
    99b0:	18ce8317 	ldw	r3,14860(r3)
    99b4:	183ff926 	beq	r3,zero,999c <_isatty_r+0x28>
    99b8:	80c00015 	stw	r3,0(r16)
    99bc:	dfc00117 	ldw	ra,4(sp)
    99c0:	dc000017 	ldw	r16,0(sp)
    99c4:	dec00204 	addi	sp,sp,8
    99c8:	f800283a 	ret

000099cc <_setlocale_r>:
    99cc:	30001826 	beq	r6,zero,9a30 <_setlocale_r+0x64>
    99d0:	01400074 	movhi	r5,1
    99d4:	defffe04 	addi	sp,sp,-8
    99d8:	297ff904 	addi	r5,r5,-28
    99dc:	3009883a 	mov	r4,r6
    99e0:	dc000015 	stw	r16,0(sp)
    99e4:	dfc00115 	stw	ra,4(sp)
    99e8:	3021883a 	mov	r16,r6
    99ec:	0009aac0 	call	9aac <strcmp>
    99f0:	1000061e 	bne	r2,zero,9a0c <_setlocale_r+0x40>
    99f4:	00800074 	movhi	r2,1
    99f8:	10bff804 	addi	r2,r2,-32
    99fc:	dfc00117 	ldw	ra,4(sp)
    9a00:	dc000017 	ldw	r16,0(sp)
    9a04:	dec00204 	addi	sp,sp,8
    9a08:	f800283a 	ret
    9a0c:	01400074 	movhi	r5,1
    9a10:	297ff804 	addi	r5,r5,-32
    9a14:	8009883a 	mov	r4,r16
    9a18:	0009aac0 	call	9aac <strcmp>
    9a1c:	103ff526 	beq	r2,zero,99f4 <_setlocale_r+0x28>
    9a20:	80800003 	ldbu	r2,0(r16)
    9a24:	103ff326 	beq	r2,zero,99f4 <_setlocale_r+0x28>
    9a28:	0005883a 	mov	r2,zero
    9a2c:	003ff306 	br	99fc <_setlocale_r+0x30>
    9a30:	00800074 	movhi	r2,1
    9a34:	10bff804 	addi	r2,r2,-32
    9a38:	f800283a 	ret

00009a3c <__locale_mb_cur_max>:
    9a3c:	00800074 	movhi	r2,1
    9a40:	1082be07 	ldb	r2,2808(r2)
    9a44:	f800283a 	ret

00009a48 <setlocale>:
    9a48:	00800074 	movhi	r2,1
    9a4c:	280d883a 	mov	r6,r5
    9a50:	200b883a 	mov	r5,r4
    9a54:	11075717 	ldw	r4,7516(r2)
    9a58:	00099cc1 	jmpi	99cc <_setlocale_r>

00009a5c <_mbtowc_r>:
    9a5c:	00800074 	movhi	r2,1
    9a60:	1082ad17 	ldw	r2,2740(r2)
    9a64:	1000683a 	jmp	r2

00009a68 <__ascii_mbtowc>:
    9a68:	deffff04 	addi	sp,sp,-4
    9a6c:	28000826 	beq	r5,zero,9a90 <__ascii_mbtowc+0x28>
    9a70:	30000926 	beq	r6,zero,9a98 <__ascii_mbtowc+0x30>
    9a74:	38000b26 	beq	r7,zero,9aa4 <__ascii_mbtowc+0x3c>
    9a78:	30800003 	ldbu	r2,0(r6)
    9a7c:	28800015 	stw	r2,0(r5)
    9a80:	30800003 	ldbu	r2,0(r6)
    9a84:	1004c03a 	cmpne	r2,r2,zero
    9a88:	dec00104 	addi	sp,sp,4
    9a8c:	f800283a 	ret
    9a90:	d80b883a 	mov	r5,sp
    9a94:	303ff71e 	bne	r6,zero,9a74 <__ascii_mbtowc+0xc>
    9a98:	0005883a 	mov	r2,zero
    9a9c:	dec00104 	addi	sp,sp,4
    9aa0:	f800283a 	ret
    9aa4:	00bfff84 	movi	r2,-2
    9aa8:	003ff706 	br	9a88 <__ascii_mbtowc+0x20>

00009aac <strcmp>:
    9aac:	2144b03a 	or	r2,r4,r5
    9ab0:	108000cc 	andi	r2,r2,3
    9ab4:	1000171e 	bne	r2,zero,9b14 <strcmp+0x68>
    9ab8:	20800017 	ldw	r2,0(r4)
    9abc:	28c00017 	ldw	r3,0(r5)
    9ac0:	10c0141e 	bne	r2,r3,9b14 <strcmp+0x68>
    9ac4:	027fbff4 	movhi	r9,65279
    9ac8:	4a7fbfc4 	addi	r9,r9,-257
    9acc:	1247883a 	add	r3,r2,r9
    9ad0:	02202074 	movhi	r8,32897
    9ad4:	0084303a 	nor	r2,zero,r2
    9ad8:	1884703a 	and	r2,r3,r2
    9adc:	42202004 	addi	r8,r8,-32640
    9ae0:	1204703a 	and	r2,r2,r8
    9ae4:	10000226 	beq	r2,zero,9af0 <strcmp+0x44>
    9ae8:	00002406 	br	9b7c <strcmp+0xd0>
    9aec:	1000231e 	bne	r2,zero,9b7c <strcmp+0xd0>
    9af0:	21000104 	addi	r4,r4,4
    9af4:	20c00017 	ldw	r3,0(r4)
    9af8:	29400104 	addi	r5,r5,4
    9afc:	29800017 	ldw	r6,0(r5)
    9b00:	1a45883a 	add	r2,r3,r9
    9b04:	00ce303a 	nor	r7,zero,r3
    9b08:	11c4703a 	and	r2,r2,r7
    9b0c:	1204703a 	and	r2,r2,r8
    9b10:	19bff626 	beq	r3,r6,9aec <strcmp+0x40>
    9b14:	20800003 	ldbu	r2,0(r4)
    9b18:	10c03fcc 	andi	r3,r2,255
    9b1c:	18c0201c 	xori	r3,r3,128
    9b20:	18ffe004 	addi	r3,r3,-128
    9b24:	18000d26 	beq	r3,zero,9b5c <strcmp+0xb0>
    9b28:	29800007 	ldb	r6,0(r5)
    9b2c:	10803fcc 	andi	r2,r2,255
    9b30:	19800326 	beq	r3,r6,9b40 <strcmp+0x94>
    9b34:	00000a06 	br	9b60 <strcmp+0xb4>
    9b38:	29800007 	ldb	r6,0(r5)
    9b3c:	11800b1e 	bne	r2,r6,9b6c <strcmp+0xc0>
    9b40:	21000044 	addi	r4,r4,1
    9b44:	20c00003 	ldbu	r3,0(r4)
    9b48:	29400044 	addi	r5,r5,1
    9b4c:	18803fcc 	andi	r2,r3,255
    9b50:	1080201c 	xori	r2,r2,128
    9b54:	10bfe004 	addi	r2,r2,-128
    9b58:	103ff71e 	bne	r2,zero,9b38 <strcmp+0x8c>
    9b5c:	0005883a 	mov	r2,zero
    9b60:	28c00003 	ldbu	r3,0(r5)
    9b64:	10c5c83a 	sub	r2,r2,r3
    9b68:	f800283a 	ret
    9b6c:	18803fcc 	andi	r2,r3,255
    9b70:	28c00003 	ldbu	r3,0(r5)
    9b74:	10c5c83a 	sub	r2,r2,r3
    9b78:	f800283a 	ret
    9b7c:	0005883a 	mov	r2,zero
    9b80:	f800283a 	ret

00009b84 <__swbuf_r>:
    9b84:	defffb04 	addi	sp,sp,-20
    9b88:	dc800215 	stw	r18,8(sp)
    9b8c:	dc400115 	stw	r17,4(sp)
    9b90:	dc000015 	stw	r16,0(sp)
    9b94:	dfc00415 	stw	ra,16(sp)
    9b98:	dcc00315 	stw	r19,12(sp)
    9b9c:	2023883a 	mov	r17,r4
    9ba0:	2825883a 	mov	r18,r5
    9ba4:	3021883a 	mov	r16,r6
    9ba8:	20000226 	beq	r4,zero,9bb4 <__swbuf_r+0x30>
    9bac:	20800e17 	ldw	r2,56(r4)
    9bb0:	10003e26 	beq	r2,zero,9cac <__swbuf_r+0x128>
    9bb4:	80800617 	ldw	r2,24(r16)
    9bb8:	80c0030b 	ldhu	r3,12(r16)
    9bbc:	80800215 	stw	r2,8(r16)
    9bc0:	1880020c 	andi	r2,r3,8
    9bc4:	10001f26 	beq	r2,zero,9c44 <__swbuf_r+0xc0>
    9bc8:	80800417 	ldw	r2,16(r16)
    9bcc:	10001d26 	beq	r2,zero,9c44 <__swbuf_r+0xc0>
    9bd0:	1908000c 	andi	r4,r3,8192
    9bd4:	94c03fcc 	andi	r19,r18,255
    9bd8:	20002326 	beq	r4,zero,9c68 <__swbuf_r+0xe4>
    9bdc:	80c00017 	ldw	r3,0(r16)
    9be0:	81000517 	ldw	r4,20(r16)
    9be4:	1885c83a 	sub	r2,r3,r2
    9be8:	1100290e 	bge	r2,r4,9c90 <__swbuf_r+0x10c>
    9bec:	10800044 	addi	r2,r2,1
    9bf0:	81000217 	ldw	r4,8(r16)
    9bf4:	19400044 	addi	r5,r3,1
    9bf8:	81400015 	stw	r5,0(r16)
    9bfc:	213fffc4 	addi	r4,r4,-1
    9c00:	81000215 	stw	r4,8(r16)
    9c04:	1c800005 	stb	r18,0(r3)
    9c08:	80c00517 	ldw	r3,20(r16)
    9c0c:	18802926 	beq	r3,r2,9cb4 <__swbuf_r+0x130>
    9c10:	8080030b 	ldhu	r2,12(r16)
    9c14:	1080004c 	andi	r2,r2,1
    9c18:	10000226 	beq	r2,zero,9c24 <__swbuf_r+0xa0>
    9c1c:	98800298 	cmpnei	r2,r19,10
    9c20:	10002426 	beq	r2,zero,9cb4 <__swbuf_r+0x130>
    9c24:	9805883a 	mov	r2,r19
    9c28:	dfc00417 	ldw	ra,16(sp)
    9c2c:	dcc00317 	ldw	r19,12(sp)
    9c30:	dc800217 	ldw	r18,8(sp)
    9c34:	dc400117 	ldw	r17,4(sp)
    9c38:	dc000017 	ldw	r16,0(sp)
    9c3c:	dec00504 	addi	sp,sp,20
    9c40:	f800283a 	ret
    9c44:	800b883a 	mov	r5,r16
    9c48:	8809883a 	mov	r4,r17
    9c4c:	00040180 	call	4018 <__swsetup_r>
    9c50:	10001c1e 	bne	r2,zero,9cc4 <__swbuf_r+0x140>
    9c54:	80c0030b 	ldhu	r3,12(r16)
    9c58:	80800417 	ldw	r2,16(r16)
    9c5c:	94c03fcc 	andi	r19,r18,255
    9c60:	1908000c 	andi	r4,r3,8192
    9c64:	203fdd1e 	bne	r4,zero,9bdc <__swbuf_r+0x58>
    9c68:	81001917 	ldw	r4,100(r16)
    9c6c:	18c80014 	ori	r3,r3,8192
    9c70:	0177ffc4 	movi	r5,-8193
    9c74:	2148703a 	and	r4,r4,r5
    9c78:	80c0030d 	sth	r3,12(r16)
    9c7c:	80c00017 	ldw	r3,0(r16)
    9c80:	81001915 	stw	r4,100(r16)
    9c84:	81000517 	ldw	r4,20(r16)
    9c88:	1885c83a 	sub	r2,r3,r2
    9c8c:	113fd716 	blt	r2,r4,9bec <__swbuf_r+0x68>
    9c90:	800b883a 	mov	r5,r16
    9c94:	8809883a 	mov	r4,r17
    9c98:	0005dfc0 	call	5dfc <_fflush_r>
    9c9c:	1000091e 	bne	r2,zero,9cc4 <__swbuf_r+0x140>
    9ca0:	80c00017 	ldw	r3,0(r16)
    9ca4:	00800044 	movi	r2,1
    9ca8:	003fd106 	br	9bf0 <__swbuf_r+0x6c>
    9cac:	000091c0 	call	91c <__sinit>
    9cb0:	003fc006 	br	9bb4 <__swbuf_r+0x30>
    9cb4:	800b883a 	mov	r5,r16
    9cb8:	8809883a 	mov	r4,r17
    9cbc:	0005dfc0 	call	5dfc <_fflush_r>
    9cc0:	103fd826 	beq	r2,zero,9c24 <__swbuf_r+0xa0>
    9cc4:	04ffffc4 	movi	r19,-1
    9cc8:	003fd606 	br	9c24 <__swbuf_r+0xa0>

00009ccc <__swbuf>:
    9ccc:	00800074 	movhi	r2,1
    9cd0:	280d883a 	mov	r6,r5
    9cd4:	200b883a 	mov	r5,r4
    9cd8:	11075717 	ldw	r4,7516(r2)
    9cdc:	0009b841 	jmpi	9b84 <__swbuf_r>

00009ce0 <_wcrtomb_r>:
    9ce0:	defffa04 	addi	sp,sp,-24
    9ce4:	dc400415 	stw	r17,16(sp)
    9ce8:	dc000315 	stw	r16,12(sp)
    9cec:	00800074 	movhi	r2,1
    9cf0:	dfc00515 	stw	ra,20(sp)
    9cf4:	2021883a 	mov	r16,r4
    9cf8:	3823883a 	mov	r17,r7
    9cfc:	1082ac17 	ldw	r2,2736(r2)
    9d00:	28000826 	beq	r5,zero,9d24 <_wcrtomb_r+0x44>
    9d04:	103ee83a 	callr	r2
    9d08:	10ffffd8 	cmpnei	r3,r2,-1
    9d0c:	18000a26 	beq	r3,zero,9d38 <_wcrtomb_r+0x58>
    9d10:	dfc00517 	ldw	ra,20(sp)
    9d14:	dc400417 	ldw	r17,16(sp)
    9d18:	dc000317 	ldw	r16,12(sp)
    9d1c:	dec00604 	addi	sp,sp,24
    9d20:	f800283a 	ret
    9d24:	000d883a 	mov	r6,zero
    9d28:	d9400084 	addi	r5,sp,2
    9d2c:	103ee83a 	callr	r2
    9d30:	10ffffd8 	cmpnei	r3,r2,-1
    9d34:	183ff61e 	bne	r3,zero,9d10 <_wcrtomb_r+0x30>
    9d38:	00802284 	movi	r2,138
    9d3c:	88000015 	stw	zero,0(r17)
    9d40:	80800015 	stw	r2,0(r16)
    9d44:	00bfffc4 	movi	r2,-1
    9d48:	003ff106 	br	9d10 <_wcrtomb_r+0x30>

00009d4c <wcrtomb>:
    9d4c:	defffa04 	addi	sp,sp,-24
    9d50:	00800074 	movhi	r2,1
    9d54:	dc400415 	stw	r17,16(sp)
    9d58:	dc000315 	stw	r16,12(sp)
    9d5c:	dfc00515 	stw	ra,20(sp)
    9d60:	14075717 	ldw	r16,7516(r2)
    9d64:	00800074 	movhi	r2,1
    9d68:	3023883a 	mov	r17,r6
    9d6c:	1082ac17 	ldw	r2,2736(r2)
    9d70:	300f883a 	mov	r7,r6
    9d74:	20000b26 	beq	r4,zero,9da4 <wcrtomb+0x58>
    9d78:	280d883a 	mov	r6,r5
    9d7c:	200b883a 	mov	r5,r4
    9d80:	8009883a 	mov	r4,r16
    9d84:	103ee83a 	callr	r2
    9d88:	10ffffd8 	cmpnei	r3,r2,-1
    9d8c:	18000b26 	beq	r3,zero,9dbc <wcrtomb+0x70>
    9d90:	dfc00517 	ldw	ra,20(sp)
    9d94:	dc400417 	ldw	r17,16(sp)
    9d98:	dc000317 	ldw	r16,12(sp)
    9d9c:	dec00604 	addi	sp,sp,24
    9da0:	f800283a 	ret
    9da4:	000d883a 	mov	r6,zero
    9da8:	d9400084 	addi	r5,sp,2
    9dac:	8009883a 	mov	r4,r16
    9db0:	103ee83a 	callr	r2
    9db4:	10ffffd8 	cmpnei	r3,r2,-1
    9db8:	183ff51e 	bne	r3,zero,9d90 <wcrtomb+0x44>
    9dbc:	00802284 	movi	r2,138
    9dc0:	88000015 	stw	zero,0(r17)
    9dc4:	80800015 	stw	r2,0(r16)
    9dc8:	00bfffc4 	movi	r2,-1
    9dcc:	003ff006 	br	9d90 <wcrtomb+0x44>

00009dd0 <_wctomb_r>:
    9dd0:	00800074 	movhi	r2,1
    9dd4:	1082ac17 	ldw	r2,2736(r2)
    9dd8:	1000683a 	jmp	r2

00009ddc <__ascii_wctomb>:
    9ddc:	28000926 	beq	r5,zero,9e04 <__ascii_wctomb+0x28>
    9de0:	30804030 	cmpltui	r2,r6,256
    9de4:	10000326 	beq	r2,zero,9df4 <__ascii_wctomb+0x18>
    9de8:	29800005 	stb	r6,0(r5)
    9dec:	00800044 	movi	r2,1
    9df0:	f800283a 	ret
    9df4:	00802284 	movi	r2,138
    9df8:	20800015 	stw	r2,0(r4)
    9dfc:	00bfffc4 	movi	r2,-1
    9e00:	f800283a 	ret
    9e04:	0005883a 	mov	r2,zero
    9e08:	f800283a 	ret

00009e0c <__udivdi3>:
    9e0c:	defff504 	addi	sp,sp,-44
    9e10:	dd000515 	stw	r20,20(sp)
    9e14:	dc000115 	stw	r16,4(sp)
    9e18:	dfc00a15 	stw	ra,40(sp)
    9e1c:	df000915 	stw	fp,36(sp)
    9e20:	ddc00815 	stw	r23,32(sp)
    9e24:	dd800715 	stw	r22,28(sp)
    9e28:	dd400615 	stw	r21,24(sp)
    9e2c:	dcc00415 	stw	r19,16(sp)
    9e30:	dc800315 	stw	r18,12(sp)
    9e34:	dc400215 	stw	r17,8(sp)
    9e38:	2029883a 	mov	r20,r4
    9e3c:	2821883a 	mov	r16,r5
    9e40:	38008c1e 	bne	r7,zero,a074 <__udivdi3+0x268>
    9e44:	3827883a 	mov	r19,r7
    9e48:	3023883a 	mov	r17,r6
    9e4c:	2025883a 	mov	r18,r4
    9e50:	2980422e 	bgeu	r5,r6,9f5c <__udivdi3+0x150>
    9e54:	00bfffd4 	movui	r2,65535
    9e58:	282f883a 	mov	r23,r5
    9e5c:	1180af2e 	bgeu	r2,r6,a11c <__udivdi3+0x310>
    9e60:	00804034 	movhi	r2,256
    9e64:	30815936 	bltu	r6,r2,a3cc <__udivdi3+0x5c0>
    9e68:	3006d63a 	srli	r3,r6,24
    9e6c:	04c00604 	movi	r19,24
    9e70:	00800074 	movhi	r2,1
    9e74:	1885883a 	add	r2,r3,r2
    9e78:	10bffc03 	ldbu	r2,-16(r2)
    9e7c:	14e7883a 	add	r19,r2,r19
    9e80:	00800804 	movi	r2,32
    9e84:	14c5c83a 	sub	r2,r2,r19
    9e88:	10000526 	beq	r2,zero,9ea0 <__udivdi3+0x94>
    9e8c:	80a0983a 	sll	r16,r16,r2
    9e90:	a4e6d83a 	srl	r19,r20,r19
    9e94:	30a2983a 	sll	r17,r6,r2
    9e98:	a0a4983a 	sll	r18,r20,r2
    9e9c:	9c2eb03a 	or	r23,r19,r16
    9ea0:	882ad43a 	srli	r21,r17,16
    9ea4:	b809883a 	mov	r4,r23
    9ea8:	8dbfffcc 	andi	r22,r17,65535
    9eac:	a80b883a 	mov	r5,r21
    9eb0:	000ab4c0 	call	ab4c <__umodsi3>
    9eb4:	a80b883a 	mov	r5,r21
    9eb8:	b809883a 	mov	r4,r23
    9ebc:	1029883a 	mov	r20,r2
    9ec0:	000aae80 	call	aae8 <__udivsi3>
    9ec4:	100b883a 	mov	r5,r2
    9ec8:	b009883a 	mov	r4,r22
    9ecc:	1021883a 	mov	r16,r2
    9ed0:	000aba80 	call	aba8 <__mulsi3>
    9ed4:	a028943a 	slli	r20,r20,16
    9ed8:	9006d43a 	srli	r3,r18,16
    9edc:	a0c6b03a 	or	r3,r20,r3
    9ee0:	1880052e 	bgeu	r3,r2,9ef8 <__udivdi3+0xec>
    9ee4:	1c47883a 	add	r3,r3,r17
    9ee8:	813fffc4 	addi	r4,r16,-1
    9eec:	1c400136 	bltu	r3,r17,9ef4 <__udivdi3+0xe8>
    9ef0:	18814736 	bltu	r3,r2,a410 <__udivdi3+0x604>
    9ef4:	2021883a 	mov	r16,r4
    9ef8:	18a7c83a 	sub	r19,r3,r2
    9efc:	9809883a 	mov	r4,r19
    9f00:	a80b883a 	mov	r5,r21
    9f04:	000ab4c0 	call	ab4c <__umodsi3>
    9f08:	1029883a 	mov	r20,r2
    9f0c:	9809883a 	mov	r4,r19
    9f10:	a80b883a 	mov	r5,r21
    9f14:	a028943a 	slli	r20,r20,16
    9f18:	000aae80 	call	aae8 <__udivsi3>
    9f1c:	100b883a 	mov	r5,r2
    9f20:	b009883a 	mov	r4,r22
    9f24:	94bfffcc 	andi	r18,r18,65535
    9f28:	1027883a 	mov	r19,r2
    9f2c:	a4a4b03a 	or	r18,r20,r18
    9f30:	000aba80 	call	aba8 <__mulsi3>
    9f34:	9080052e 	bgeu	r18,r2,9f4c <__udivdi3+0x140>
    9f38:	8ca5883a 	add	r18,r17,r18
    9f3c:	98ffffc4 	addi	r3,r19,-1
    9f40:	94400136 	bltu	r18,r17,9f48 <__udivdi3+0x13c>
    9f44:	90813036 	bltu	r18,r2,a408 <__udivdi3+0x5fc>
    9f48:	1827883a 	mov	r19,r3
    9f4c:	8004943a 	slli	r2,r16,16
    9f50:	0007883a 	mov	r3,zero
    9f54:	14c4b03a 	or	r2,r2,r19
    9f58:	00005a06 	br	a0c4 <__udivdi3+0x2b8>
    9f5c:	3000041e 	bne	r6,zero,9f70 <__udivdi3+0x164>
    9f60:	000b883a 	mov	r5,zero
    9f64:	01000044 	movi	r4,1
    9f68:	000aae80 	call	aae8 <__udivsi3>
    9f6c:	1023883a 	mov	r17,r2
    9f70:	00bfffd4 	movui	r2,65535
    9f74:	1440642e 	bgeu	r2,r17,a108 <__udivdi3+0x2fc>
    9f78:	00804034 	movhi	r2,256
    9f7c:	88811036 	bltu	r17,r2,a3c0 <__udivdi3+0x5b4>
    9f80:	8806d63a 	srli	r3,r17,24
    9f84:	04c00604 	movi	r19,24
    9f88:	00800074 	movhi	r2,1
    9f8c:	1885883a 	add	r2,r3,r2
    9f90:	10bffc03 	ldbu	r2,-16(r2)
    9f94:	00c00804 	movi	r3,32
    9f98:	14e7883a 	add	r19,r2,r19
    9f9c:	1cc7c83a 	sub	r3,r3,r19
    9fa0:	1800631e 	bne	r3,zero,a130 <__udivdi3+0x324>
    9fa4:	882ad43a 	srli	r21,r17,16
    9fa8:	8461c83a 	sub	r16,r16,r17
    9fac:	8dbfffcc 	andi	r22,r17,65535
    9fb0:	00c00044 	movi	r3,1
    9fb4:	8009883a 	mov	r4,r16
    9fb8:	a80b883a 	mov	r5,r21
    9fbc:	d8c00015 	stw	r3,0(sp)
    9fc0:	000ab4c0 	call	ab4c <__umodsi3>
    9fc4:	8009883a 	mov	r4,r16
    9fc8:	a80b883a 	mov	r5,r21
    9fcc:	1029883a 	mov	r20,r2
    9fd0:	000aae80 	call	aae8 <__udivsi3>
    9fd4:	1009883a 	mov	r4,r2
    9fd8:	b00b883a 	mov	r5,r22
    9fdc:	1021883a 	mov	r16,r2
    9fe0:	000aba80 	call	aba8 <__mulsi3>
    9fe4:	a028943a 	slli	r20,r20,16
    9fe8:	9008d43a 	srli	r4,r18,16
    9fec:	d8c00017 	ldw	r3,0(sp)
    9ff0:	a108b03a 	or	r4,r20,r4
    9ff4:	2080052e 	bgeu	r4,r2,a00c <__udivdi3+0x200>
    9ff8:	2449883a 	add	r4,r4,r17
    9ffc:	817fffc4 	addi	r5,r16,-1
    a000:	24400136 	bltu	r4,r17,a008 <__udivdi3+0x1fc>
    a004:	20810536 	bltu	r4,r2,a41c <__udivdi3+0x610>
    a008:	2821883a 	mov	r16,r5
    a00c:	20a7c83a 	sub	r19,r4,r2
    a010:	9809883a 	mov	r4,r19
    a014:	a80b883a 	mov	r5,r21
    a018:	d8c00015 	stw	r3,0(sp)
    a01c:	000ab4c0 	call	ab4c <__umodsi3>
    a020:	1029883a 	mov	r20,r2
    a024:	9809883a 	mov	r4,r19
    a028:	a80b883a 	mov	r5,r21
    a02c:	a028943a 	slli	r20,r20,16
    a030:	000aae80 	call	aae8 <__udivsi3>
    a034:	b00b883a 	mov	r5,r22
    a038:	1009883a 	mov	r4,r2
    a03c:	94bfffcc 	andi	r18,r18,65535
    a040:	1027883a 	mov	r19,r2
    a044:	a4a4b03a 	or	r18,r20,r18
    a048:	000aba80 	call	aba8 <__mulsi3>
    a04c:	d8c00017 	ldw	r3,0(sp)
    a050:	9080052e 	bgeu	r18,r2,a068 <__udivdi3+0x25c>
    a054:	8ca5883a 	add	r18,r17,r18
    a058:	993fffc4 	addi	r4,r19,-1
    a05c:	94400136 	bltu	r18,r17,a064 <__udivdi3+0x258>
    a060:	9080e736 	bltu	r18,r2,a400 <__udivdi3+0x5f4>
    a064:	2027883a 	mov	r19,r4
    a068:	8004943a 	slli	r2,r16,16
    a06c:	14c4b03a 	or	r2,r2,r19
    a070:	00001406 	br	a0c4 <__udivdi3+0x2b8>
    a074:	29c01136 	bltu	r5,r7,a0bc <__udivdi3+0x2b0>
    a078:	00bfffd4 	movui	r2,65535
    a07c:	11c01d2e 	bgeu	r2,r7,a0f4 <__udivdi3+0x2e8>
    a080:	00804034 	movhi	r2,256
    a084:	3880c336 	bltu	r7,r2,a394 <__udivdi3+0x588>
    a088:	3808d63a 	srli	r4,r7,24
    a08c:	00c00604 	movi	r3,24
    a090:	00800074 	movhi	r2,1
    a094:	2085883a 	add	r2,r4,r2
    a098:	113ffc03 	ldbu	r4,-16(r2)
    a09c:	20c9883a 	add	r4,r4,r3
    a0a0:	00c00804 	movi	r3,32
    a0a4:	192fc83a 	sub	r23,r3,r4
    a0a8:	b800581e 	bne	r23,zero,a20c <__udivdi3+0x400>
    a0ac:	3c00bc36 	bltu	r7,r16,a3a0 <__udivdi3+0x594>
    a0b0:	a185403a 	cmpgeu	r2,r20,r6
    a0b4:	0007883a 	mov	r3,zero
    a0b8:	00000206 	br	a0c4 <__udivdi3+0x2b8>
    a0bc:	0007883a 	mov	r3,zero
    a0c0:	0005883a 	mov	r2,zero
    a0c4:	dfc00a17 	ldw	ra,40(sp)
    a0c8:	df000917 	ldw	fp,36(sp)
    a0cc:	ddc00817 	ldw	r23,32(sp)
    a0d0:	dd800717 	ldw	r22,28(sp)
    a0d4:	dd400617 	ldw	r21,24(sp)
    a0d8:	dd000517 	ldw	r20,20(sp)
    a0dc:	dcc00417 	ldw	r19,16(sp)
    a0e0:	dc800317 	ldw	r18,12(sp)
    a0e4:	dc400217 	ldw	r17,8(sp)
    a0e8:	dc000117 	ldw	r16,4(sp)
    a0ec:	dec00b04 	addi	sp,sp,44
    a0f0:	f800283a 	ret
    a0f4:	38804030 	cmpltui	r2,r7,256
    a0f8:	1000ac1e 	bne	r2,zero,a3ac <__udivdi3+0x5a0>
    a0fc:	3808d23a 	srli	r4,r7,8
    a100:	00c00204 	movi	r3,8
    a104:	003fe206 	br	a090 <__udivdi3+0x284>
    a108:	88804030 	cmpltui	r2,r17,256
    a10c:	1000b21e 	bne	r2,zero,a3d8 <__udivdi3+0x5cc>
    a110:	8806d23a 	srli	r3,r17,8
    a114:	04c00204 	movi	r19,8
    a118:	003f9b06 	br	9f88 <__udivdi3+0x17c>
    a11c:	30804030 	cmpltui	r2,r6,256
    a120:	1000a51e 	bne	r2,zero,a3b8 <__udivdi3+0x5ac>
    a124:	3006d23a 	srli	r3,r6,8
    a128:	04c00204 	movi	r19,8
    a12c:	003f5006 	br	9e70 <__udivdi3+0x64>
    a130:	88e2983a 	sll	r17,r17,r3
    a134:	84eed83a 	srl	r23,r16,r19
    a138:	a0e4983a 	sll	r18,r20,r3
    a13c:	882ad43a 	srli	r21,r17,16
    a140:	b809883a 	mov	r4,r23
    a144:	80e0983a 	sll	r16,r16,r3
    a148:	a80b883a 	mov	r5,r21
    a14c:	000ab4c0 	call	ab4c <__umodsi3>
    a150:	b809883a 	mov	r4,r23
    a154:	a4e6d83a 	srl	r19,r20,r19
    a158:	a80b883a 	mov	r5,r21
    a15c:	1029883a 	mov	r20,r2
    a160:	8dbfffcc 	andi	r22,r17,65535
    a164:	000aae80 	call	aae8 <__udivsi3>
    a168:	b009883a 	mov	r4,r22
    a16c:	100b883a 	mov	r5,r2
    a170:	9c26b03a 	or	r19,r19,r16
    a174:	102f883a 	mov	r23,r2
    a178:	000aba80 	call	aba8 <__mulsi3>
    a17c:	a028943a 	slli	r20,r20,16
    a180:	9808d43a 	srli	r4,r19,16
    a184:	a108b03a 	or	r4,r20,r4
    a188:	2080062e 	bgeu	r4,r2,a1a4 <__udivdi3+0x398>
    a18c:	2449883a 	add	r4,r4,r17
    a190:	b8ffffc4 	addi	r3,r23,-1
    a194:	24409836 	bltu	r4,r17,a3f8 <__udivdi3+0x5ec>
    a198:	2080972e 	bgeu	r4,r2,a3f8 <__udivdi3+0x5ec>
    a19c:	bdffff84 	addi	r23,r23,-2
    a1a0:	2449883a 	add	r4,r4,r17
    a1a4:	20a1c83a 	sub	r16,r4,r2
    a1a8:	8009883a 	mov	r4,r16
    a1ac:	a80b883a 	mov	r5,r21
    a1b0:	000ab4c0 	call	ab4c <__umodsi3>
    a1b4:	1029883a 	mov	r20,r2
    a1b8:	8009883a 	mov	r4,r16
    a1bc:	a80b883a 	mov	r5,r21
    a1c0:	a020943a 	slli	r16,r20,16
    a1c4:	000aae80 	call	aae8 <__udivsi3>
    a1c8:	100b883a 	mov	r5,r2
    a1cc:	b009883a 	mov	r4,r22
    a1d0:	9cffffcc 	andi	r19,r19,65535
    a1d4:	1039883a 	mov	fp,r2
    a1d8:	84e0b03a 	or	r16,r16,r19
    a1dc:	000aba80 	call	aba8 <__mulsi3>
    a1e0:	8080062e 	bgeu	r16,r2,a1fc <__udivdi3+0x3f0>
    a1e4:	8461883a 	add	r16,r16,r17
    a1e8:	e0ffffc4 	addi	r3,fp,-1
    a1ec:	84407e36 	bltu	r16,r17,a3e8 <__udivdi3+0x5dc>
    a1f0:	80807d2e 	bgeu	r16,r2,a3e8 <__udivdi3+0x5dc>
    a1f4:	e73fff84 	addi	fp,fp,-2
    a1f8:	8461883a 	add	r16,r16,r17
    a1fc:	b806943a 	slli	r3,r23,16
    a200:	80a1c83a 	sub	r16,r16,r2
    a204:	1f06b03a 	or	r3,r3,fp
    a208:	003f6a06 	br	9fb4 <__udivdi3+0x1a8>
    a20c:	3106d83a 	srl	r3,r6,r4
    a210:	3dce983a 	sll	r7,r7,r23
    a214:	8122d83a 	srl	r17,r16,r4
    a218:	a104d83a 	srl	r2,r20,r4
    a21c:	19ecb03a 	or	r22,r3,r7
    a220:	b024d43a 	srli	r18,r22,16
    a224:	85e0983a 	sll	r16,r16,r23
    a228:	8809883a 	mov	r4,r17
    a22c:	900b883a 	mov	r5,r18
    a230:	1420b03a 	or	r16,r2,r16
    a234:	b0bfffcc 	andi	r2,r22,65535
    a238:	35ea983a 	sll	r21,r6,r23
    a23c:	d8800015 	stw	r2,0(sp)
    a240:	000ab4c0 	call	ab4c <__umodsi3>
    a244:	900b883a 	mov	r5,r18
    a248:	8809883a 	mov	r4,r17
    a24c:	1027883a 	mov	r19,r2
    a250:	000aae80 	call	aae8 <__udivsi3>
    a254:	b13fffcc 	andi	r4,r22,65535
    a258:	100b883a 	mov	r5,r2
    a25c:	1039883a 	mov	fp,r2
    a260:	000aba80 	call	aba8 <__mulsi3>
    a264:	9826943a 	slli	r19,r19,16
    a268:	8008d43a 	srli	r4,r16,16
    a26c:	9908b03a 	or	r4,r19,r4
    a270:	2080062e 	bgeu	r4,r2,a28c <__udivdi3+0x480>
    a274:	2589883a 	add	r4,r4,r22
    a278:	e0ffffc4 	addi	r3,fp,-1
    a27c:	25805c36 	bltu	r4,r22,a3f0 <__udivdi3+0x5e4>
    a280:	20805b2e 	bgeu	r4,r2,a3f0 <__udivdi3+0x5e4>
    a284:	e73fff84 	addi	fp,fp,-2
    a288:	2589883a 	add	r4,r4,r22
    a28c:	20a3c83a 	sub	r17,r4,r2
    a290:	8809883a 	mov	r4,r17
    a294:	900b883a 	mov	r5,r18
    a298:	000ab4c0 	call	ab4c <__umodsi3>
    a29c:	1027883a 	mov	r19,r2
    a2a0:	8809883a 	mov	r4,r17
    a2a4:	900b883a 	mov	r5,r18
    a2a8:	9826943a 	slli	r19,r19,16
    a2ac:	000aae80 	call	aae8 <__udivsi3>
    a2b0:	100b883a 	mov	r5,r2
    a2b4:	b13fffcc 	andi	r4,r22,65535
    a2b8:	843fffcc 	andi	r16,r16,65535
    a2bc:	1023883a 	mov	r17,r2
    a2c0:	9c20b03a 	or	r16,r19,r16
    a2c4:	000aba80 	call	aba8 <__mulsi3>
    a2c8:	8080062e 	bgeu	r16,r2,a2e4 <__udivdi3+0x4d8>
    a2cc:	85a1883a 	add	r16,r16,r22
    a2d0:	88ffffc4 	addi	r3,r17,-1
    a2d4:	85804236 	bltu	r16,r22,a3e0 <__udivdi3+0x5d4>
    a2d8:	8080412e 	bgeu	r16,r2,a3e0 <__udivdi3+0x5d4>
    a2dc:	8c7fff84 	addi	r17,r17,-2
    a2e0:	85a1883a 	add	r16,r16,r22
    a2e4:	e038943a 	slli	fp,fp,16
    a2e8:	adbfffcc 	andi	r22,r21,65535
    a2ec:	b00b883a 	mov	r5,r22
    a2f0:	e478b03a 	or	fp,fp,r17
    a2f4:	e024d43a 	srli	r18,fp,16
    a2f8:	e4ffffcc 	andi	r19,fp,65535
    a2fc:	9809883a 	mov	r4,r19
    a300:	a82ad43a 	srli	r21,r21,16
    a304:	80a1c83a 	sub	r16,r16,r2
    a308:	000aba80 	call	aba8 <__mulsi3>
    a30c:	9009883a 	mov	r4,r18
    a310:	b00b883a 	mov	r5,r22
    a314:	d8800015 	stw	r2,0(sp)
    a318:	000aba80 	call	aba8 <__mulsi3>
    a31c:	9009883a 	mov	r4,r18
    a320:	a80b883a 	mov	r5,r21
    a324:	1023883a 	mov	r17,r2
    a328:	000aba80 	call	aba8 <__mulsi3>
    a32c:	a80b883a 	mov	r5,r21
    a330:	9809883a 	mov	r4,r19
    a334:	1025883a 	mov	r18,r2
    a338:	000aba80 	call	aba8 <__mulsi3>
    a33c:	d9800017 	ldw	r6,0(sp)
    a340:	1445883a 	add	r2,r2,r17
    a344:	3006d43a 	srli	r3,r6,16
    a348:	1885883a 	add	r2,r3,r2
    a34c:	1440022e 	bgeu	r2,r17,a358 <__udivdi3+0x54c>
    a350:	00c00074 	movhi	r3,1
    a354:	90e5883a 	add	r18,r18,r3
    a358:	1006d43a 	srli	r3,r2,16
    a35c:	1c87883a 	add	r3,r3,r18
    a360:	80c00936 	bltu	r16,r3,a388 <__udivdi3+0x57c>
    a364:	80c00326 	beq	r16,r3,a374 <__udivdi3+0x568>
    a368:	e005883a 	mov	r2,fp
    a36c:	0007883a 	mov	r3,zero
    a370:	003f5406 	br	a0c4 <__udivdi3+0x2b8>
    a374:	1004943a 	slli	r2,r2,16
    a378:	a5c6983a 	sll	r3,r20,r23
    a37c:	31bfffcc 	andi	r6,r6,65535
    a380:	1185883a 	add	r2,r2,r6
    a384:	18bff82e 	bgeu	r3,r2,a368 <__udivdi3+0x55c>
    a388:	e0bfffc4 	addi	r2,fp,-1
    a38c:	0007883a 	mov	r3,zero
    a390:	003f4c06 	br	a0c4 <__udivdi3+0x2b8>
    a394:	3808d43a 	srli	r4,r7,16
    a398:	00c00404 	movi	r3,16
    a39c:	003f3c06 	br	a090 <__udivdi3+0x284>
    a3a0:	0007883a 	mov	r3,zero
    a3a4:	00800044 	movi	r2,1
    a3a8:	003f4606 	br	a0c4 <__udivdi3+0x2b8>
    a3ac:	3809883a 	mov	r4,r7
    a3b0:	0007883a 	mov	r3,zero
    a3b4:	003f3606 	br	a090 <__udivdi3+0x284>
    a3b8:	3007883a 	mov	r3,r6
    a3bc:	003eac06 	br	9e70 <__udivdi3+0x64>
    a3c0:	8806d43a 	srli	r3,r17,16
    a3c4:	04c00404 	movi	r19,16
    a3c8:	003eef06 	br	9f88 <__udivdi3+0x17c>
    a3cc:	3006d43a 	srli	r3,r6,16
    a3d0:	04c00404 	movi	r19,16
    a3d4:	003ea606 	br	9e70 <__udivdi3+0x64>
    a3d8:	8807883a 	mov	r3,r17
    a3dc:	003eea06 	br	9f88 <__udivdi3+0x17c>
    a3e0:	1823883a 	mov	r17,r3
    a3e4:	003fbf06 	br	a2e4 <__udivdi3+0x4d8>
    a3e8:	1839883a 	mov	fp,r3
    a3ec:	003f8306 	br	a1fc <__udivdi3+0x3f0>
    a3f0:	1839883a 	mov	fp,r3
    a3f4:	003fa506 	br	a28c <__udivdi3+0x480>
    a3f8:	182f883a 	mov	r23,r3
    a3fc:	003f6906 	br	a1a4 <__udivdi3+0x398>
    a400:	9cffff84 	addi	r19,r19,-2
    a404:	003f1806 	br	a068 <__udivdi3+0x25c>
    a408:	9cffff84 	addi	r19,r19,-2
    a40c:	003ecf06 	br	9f4c <__udivdi3+0x140>
    a410:	843fff84 	addi	r16,r16,-2
    a414:	1c47883a 	add	r3,r3,r17
    a418:	003eb706 	br	9ef8 <__udivdi3+0xec>
    a41c:	843fff84 	addi	r16,r16,-2
    a420:	2449883a 	add	r4,r4,r17
    a424:	003ef906 	br	a00c <__udivdi3+0x200>

0000a428 <__umoddi3>:
    a428:	defff304 	addi	sp,sp,-52
    a42c:	dc400415 	stw	r17,16(sp)
    a430:	dc000315 	stw	r16,12(sp)
    a434:	dfc00c15 	stw	ra,48(sp)
    a438:	df000b15 	stw	fp,44(sp)
    a43c:	ddc00a15 	stw	r23,40(sp)
    a440:	dd800915 	stw	r22,36(sp)
    a444:	dd400815 	stw	r21,32(sp)
    a448:	dd000715 	stw	r20,28(sp)
    a44c:	dcc00615 	stw	r19,24(sp)
    a450:	dc800515 	stw	r18,20(sp)
    a454:	2823883a 	mov	r17,r5
    a458:	2021883a 	mov	r16,r4
    a45c:	3800781e 	bne	r7,zero,a640 <__umoddi3+0x218>
    a460:	3825883a 	mov	r18,r7
    a464:	3027883a 	mov	r19,r6
    a468:	2029883a 	mov	r20,r4
    a46c:	29803d2e 	bgeu	r5,r6,a564 <__umoddi3+0x13c>
    a470:	00bfffd4 	movui	r2,65535
    a474:	2839883a 	mov	fp,r5
    a478:	11809f36 	bltu	r2,r6,a6f8 <__umoddi3+0x2d0>
    a47c:	30804030 	cmpltui	r2,r6,256
    a480:	1001451e 	bne	r2,zero,a998 <__umoddi3+0x570>
    a484:	3006d23a 	srli	r3,r6,8
    a488:	04800204 	movi	r18,8
    a48c:	00800074 	movhi	r2,1
    a490:	1885883a 	add	r2,r3,r2
    a494:	113ffc03 	ldbu	r4,-16(r2)
    a498:	00800804 	movi	r2,32
    a49c:	2489883a 	add	r4,r4,r18
    a4a0:	1125c83a 	sub	r18,r2,r4
    a4a4:	90000526 	beq	r18,zero,a4bc <__umoddi3+0x94>
    a4a8:	8ca2983a 	sll	r17,r17,r18
    a4ac:	8108d83a 	srl	r4,r16,r4
    a4b0:	34a6983a 	sll	r19,r6,r18
    a4b4:	84a8983a 	sll	r20,r16,r18
    a4b8:	2478b03a 	or	fp,r4,r17
    a4bc:	982cd43a 	srli	r22,r19,16
    a4c0:	e009883a 	mov	r4,fp
    a4c4:	9dffffcc 	andi	r23,r19,65535
    a4c8:	b00b883a 	mov	r5,r22
    a4cc:	000ab4c0 	call	ab4c <__umodsi3>
    a4d0:	b00b883a 	mov	r5,r22
    a4d4:	e009883a 	mov	r4,fp
    a4d8:	102b883a 	mov	r21,r2
    a4dc:	000aae80 	call	aae8 <__udivsi3>
    a4e0:	100b883a 	mov	r5,r2
    a4e4:	b809883a 	mov	r4,r23
    a4e8:	000aba80 	call	aba8 <__mulsi3>
    a4ec:	a82a943a 	slli	r21,r21,16
    a4f0:	a006d43a 	srli	r3,r20,16
    a4f4:	a8c6b03a 	or	r3,r21,r3
    a4f8:	1880032e 	bgeu	r3,r2,a508 <__umoddi3+0xe0>
    a4fc:	1cc7883a 	add	r3,r3,r19
    a500:	1cc00136 	bltu	r3,r19,a508 <__umoddi3+0xe0>
    a504:	18813836 	bltu	r3,r2,a9e8 <__umoddi3+0x5c0>
    a508:	18a1c83a 	sub	r16,r3,r2
    a50c:	b00b883a 	mov	r5,r22
    a510:	8009883a 	mov	r4,r16
    a514:	000ab4c0 	call	ab4c <__umodsi3>
    a518:	b00b883a 	mov	r5,r22
    a51c:	8009883a 	mov	r4,r16
    a520:	1023883a 	mov	r17,r2
    a524:	000aae80 	call	aae8 <__udivsi3>
    a528:	100b883a 	mov	r5,r2
    a52c:	b809883a 	mov	r4,r23
    a530:	8822943a 	slli	r17,r17,16
    a534:	000aba80 	call	aba8 <__mulsi3>
    a538:	a0ffffcc 	andi	r3,r20,65535
    a53c:	88c6b03a 	or	r3,r17,r3
    a540:	1880042e 	bgeu	r3,r2,a554 <__umoddi3+0x12c>
    a544:	1cc7883a 	add	r3,r3,r19
    a548:	1cc00236 	bltu	r3,r19,a554 <__umoddi3+0x12c>
    a54c:	1880012e 	bgeu	r3,r2,a554 <__umoddi3+0x12c>
    a550:	1cc7883a 	add	r3,r3,r19
    a554:	1885c83a 	sub	r2,r3,r2
    a558:	1484d83a 	srl	r2,r2,r18
    a55c:	0007883a 	mov	r3,zero
    a560:	00003a06 	br	a64c <__umoddi3+0x224>
    a564:	3000041e 	bne	r6,zero,a578 <__umoddi3+0x150>
    a568:	000b883a 	mov	r5,zero
    a56c:	01000044 	movi	r4,1
    a570:	000aae80 	call	aae8 <__udivsi3>
    a574:	1027883a 	mov	r19,r2
    a578:	00bfffd4 	movui	r2,65535
    a57c:	14c0592e 	bgeu	r2,r19,a6e4 <__umoddi3+0x2bc>
    a580:	00804034 	movhi	r2,256
    a584:	98810c36 	bltu	r19,r2,a9b8 <__umoddi3+0x590>
    a588:	9806d63a 	srli	r3,r19,24
    a58c:	04800604 	movi	r18,24
    a590:	00800074 	movhi	r2,1
    a594:	1885883a 	add	r2,r3,r2
    a598:	10fffc03 	ldbu	r3,-16(r2)
    a59c:	00800804 	movi	r2,32
    a5a0:	1c87883a 	add	r3,r3,r18
    a5a4:	10e5c83a 	sub	r18,r2,r3
    a5a8:	9000c51e 	bne	r18,zero,a8c0 <__umoddi3+0x498>
    a5ac:	982ad43a 	srli	r21,r19,16
    a5b0:	8ce3c83a 	sub	r17,r17,r19
    a5b4:	9dbfffcc 	andi	r22,r19,65535
    a5b8:	a80b883a 	mov	r5,r21
    a5bc:	8809883a 	mov	r4,r17
    a5c0:	000ab4c0 	call	ab4c <__umodsi3>
    a5c4:	a80b883a 	mov	r5,r21
    a5c8:	8809883a 	mov	r4,r17
    a5cc:	102f883a 	mov	r23,r2
    a5d0:	000aae80 	call	aae8 <__udivsi3>
    a5d4:	b00b883a 	mov	r5,r22
    a5d8:	1009883a 	mov	r4,r2
    a5dc:	000aba80 	call	aba8 <__mulsi3>
    a5e0:	b82e943a 	slli	r23,r23,16
    a5e4:	a006d43a 	srli	r3,r20,16
    a5e8:	b8c6b03a 	or	r3,r23,r3
    a5ec:	1880042e 	bgeu	r3,r2,a600 <__umoddi3+0x1d8>
    a5f0:	1cc7883a 	add	r3,r3,r19
    a5f4:	1cc00236 	bltu	r3,r19,a600 <__umoddi3+0x1d8>
    a5f8:	1880012e 	bgeu	r3,r2,a600 <__umoddi3+0x1d8>
    a5fc:	1cc7883a 	add	r3,r3,r19
    a600:	18a1c83a 	sub	r16,r3,r2
    a604:	a80b883a 	mov	r5,r21
    a608:	8009883a 	mov	r4,r16
    a60c:	000ab4c0 	call	ab4c <__umodsi3>
    a610:	1023883a 	mov	r17,r2
    a614:	a80b883a 	mov	r5,r21
    a618:	8009883a 	mov	r4,r16
    a61c:	000aae80 	call	aae8 <__udivsi3>
    a620:	8822943a 	slli	r17,r17,16
    a624:	b00b883a 	mov	r5,r22
    a628:	1009883a 	mov	r4,r2
    a62c:	000aba80 	call	aba8 <__mulsi3>
    a630:	a53fffcc 	andi	r20,r20,65535
    a634:	8d06b03a 	or	r3,r17,r20
    a638:	18bfc62e 	bgeu	r3,r2,a554 <__umoddi3+0x12c>
    a63c:	003fc106 	br	a544 <__umoddi3+0x11c>
    a640:	2005883a 	mov	r2,r4
    a644:	29c00d2e 	bgeu	r5,r7,a67c <__umoddi3+0x254>
    a648:	2807883a 	mov	r3,r5
    a64c:	dfc00c17 	ldw	ra,48(sp)
    a650:	df000b17 	ldw	fp,44(sp)
    a654:	ddc00a17 	ldw	r23,40(sp)
    a658:	dd800917 	ldw	r22,36(sp)
    a65c:	dd400817 	ldw	r21,32(sp)
    a660:	dd000717 	ldw	r20,28(sp)
    a664:	dcc00617 	ldw	r19,24(sp)
    a668:	dc800517 	ldw	r18,20(sp)
    a66c:	dc400417 	ldw	r17,16(sp)
    a670:	dc000317 	ldw	r16,12(sp)
    a674:	dec00d04 	addi	sp,sp,52
    a678:	f800283a 	ret
    a67c:	013fffd4 	movui	r4,65535
    a680:	2807883a 	mov	r3,r5
    a684:	21c0122e 	bgeu	r4,r7,a6d0 <__umoddi3+0x2a8>
    a688:	01004034 	movhi	r4,256
    a68c:	3900c736 	bltu	r7,r4,a9ac <__umoddi3+0x584>
    a690:	3810d63a 	srli	r8,r7,24
    a694:	01400604 	movi	r5,24
    a698:	01000074 	movhi	r4,1
    a69c:	4109883a 	add	r4,r8,r4
    a6a0:	253ffc03 	ldbu	r20,-16(r4)
    a6a4:	05400804 	movi	r21,32
    a6a8:	a169883a 	add	r20,r20,r5
    a6ac:	ad2bc83a 	sub	r21,r21,r20
    a6b0:	a800161e 	bne	r21,zero,a70c <__umoddi3+0x2e4>
    a6b4:	3c400136 	bltu	r7,r17,a6bc <__umoddi3+0x294>
    a6b8:	81bfe436 	bltu	r16,r6,a64c <__umoddi3+0x224>
    a6bc:	8185c83a 	sub	r2,r16,r6
    a6c0:	89cfc83a 	sub	r7,r17,r7
    a6c4:	8087803a 	cmpltu	r3,r16,r2
    a6c8:	38c7c83a 	sub	r3,r7,r3
    a6cc:	003fdf06 	br	a64c <__umoddi3+0x224>
    a6d0:	39004030 	cmpltui	r4,r7,256
    a6d4:	2000b21e 	bne	r4,zero,a9a0 <__umoddi3+0x578>
    a6d8:	3810d23a 	srli	r8,r7,8
    a6dc:	01400204 	movi	r5,8
    a6e0:	003fed06 	br	a698 <__umoddi3+0x270>
    a6e4:	98804030 	cmpltui	r2,r19,256
    a6e8:	1000b61e 	bne	r2,zero,a9c4 <__umoddi3+0x59c>
    a6ec:	9806d23a 	srli	r3,r19,8
    a6f0:	04800204 	movi	r18,8
    a6f4:	003fa606 	br	a590 <__umoddi3+0x168>
    a6f8:	00804034 	movhi	r2,256
    a6fc:	3080b336 	bltu	r6,r2,a9cc <__umoddi3+0x5a4>
    a700:	3006d63a 	srli	r3,r6,24
    a704:	04800604 	movi	r18,24
    a708:	003f6006 	br	a48c <__umoddi3+0x64>
    a70c:	3508d83a 	srl	r4,r6,r20
    a710:	3d4e983a 	sll	r7,r7,r21
    a714:	8d38d83a 	srl	fp,r17,r20
    a718:	8504d83a 	srl	r2,r16,r20
    a71c:	21e4b03a 	or	r18,r4,r7
    a720:	902cd43a 	srli	r22,r18,16
    a724:	8d62983a 	sll	r17,r17,r21
    a728:	e009883a 	mov	r4,fp
    a72c:	b00b883a 	mov	r5,r22
    a730:	3566983a 	sll	r19,r6,r21
    a734:	1462b03a 	or	r17,r2,r17
    a738:	000ab4c0 	call	ab4c <__umodsi3>
    a73c:	e009883a 	mov	r4,fp
    a740:	b00b883a 	mov	r5,r22
    a744:	95ffffcc 	andi	r23,r18,65535
    a748:	d8800015 	stw	r2,0(sp)
    a74c:	000aae80 	call	aae8 <__udivsi3>
    a750:	100b883a 	mov	r5,r2
    a754:	b809883a 	mov	r4,r23
    a758:	1039883a 	mov	fp,r2
    a75c:	000aba80 	call	aba8 <__mulsi3>
    a760:	d9800017 	ldw	r6,0(sp)
    a764:	8806d43a 	srli	r3,r17,16
    a768:	8560983a 	sll	r16,r16,r21
    a76c:	300c943a 	slli	r6,r6,16
    a770:	30c6b03a 	or	r3,r6,r3
    a774:	1880062e 	bgeu	r3,r2,a790 <__umoddi3+0x368>
    a778:	1c87883a 	add	r3,r3,r18
    a77c:	e13fffc4 	addi	r4,fp,-1
    a780:	1c809736 	bltu	r3,r18,a9e0 <__umoddi3+0x5b8>
    a784:	1880962e 	bgeu	r3,r2,a9e0 <__umoddi3+0x5b8>
    a788:	e73fff84 	addi	fp,fp,-2
    a78c:	1c87883a 	add	r3,r3,r18
    a790:	1887c83a 	sub	r3,r3,r2
    a794:	b00b883a 	mov	r5,r22
    a798:	1809883a 	mov	r4,r3
    a79c:	d8c00115 	stw	r3,4(sp)
    a7a0:	000ab4c0 	call	ab4c <__umodsi3>
    a7a4:	d8c00117 	ldw	r3,4(sp)
    a7a8:	b00b883a 	mov	r5,r22
    a7ac:	d8800015 	stw	r2,0(sp)
    a7b0:	1809883a 	mov	r4,r3
    a7b4:	000aae80 	call	aae8 <__udivsi3>
    a7b8:	100b883a 	mov	r5,r2
    a7bc:	b809883a 	mov	r4,r23
    a7c0:	102d883a 	mov	r22,r2
    a7c4:	000aba80 	call	aba8 <__mulsi3>
    a7c8:	d9800017 	ldw	r6,0(sp)
    a7cc:	8c7fffcc 	andi	r17,r17,65535
    a7d0:	300c943a 	slli	r6,r6,16
    a7d4:	3462b03a 	or	r17,r6,r17
    a7d8:	8880062e 	bgeu	r17,r2,a7f4 <__umoddi3+0x3cc>
    a7dc:	8ca3883a 	add	r17,r17,r18
    a7e0:	b0ffffc4 	addi	r3,r22,-1
    a7e4:	8c807c36 	bltu	r17,r18,a9d8 <__umoddi3+0x5b0>
    a7e8:	88807b2e 	bgeu	r17,r2,a9d8 <__umoddi3+0x5b0>
    a7ec:	b5bfff84 	addi	r22,r22,-2
    a7f0:	8ca3883a 	add	r17,r17,r18
    a7f4:	e038943a 	slli	fp,fp,16
    a7f8:	980cd43a 	srli	r6,r19,16
    a7fc:	98ffffcc 	andi	r3,r19,65535
    a800:	e5b8b03a 	or	fp,fp,r22
    a804:	e02cd43a 	srli	r22,fp,16
    a808:	e73fffcc 	andi	fp,fp,65535
    a80c:	180b883a 	mov	r5,r3
    a810:	e009883a 	mov	r4,fp
    a814:	d9800215 	stw	r6,8(sp)
    a818:	d8c00015 	stw	r3,0(sp)
    a81c:	88a3c83a 	sub	r17,r17,r2
    a820:	000aba80 	call	aba8 <__mulsi3>
    a824:	d8c00017 	ldw	r3,0(sp)
    a828:	b009883a 	mov	r4,r22
    a82c:	102f883a 	mov	r23,r2
    a830:	180b883a 	mov	r5,r3
    a834:	000aba80 	call	aba8 <__mulsi3>
    a838:	d9800217 	ldw	r6,8(sp)
    a83c:	b009883a 	mov	r4,r22
    a840:	d8800115 	stw	r2,4(sp)
    a844:	300b883a 	mov	r5,r6
    a848:	d9800015 	stw	r6,0(sp)
    a84c:	000aba80 	call	aba8 <__mulsi3>
    a850:	d9800017 	ldw	r6,0(sp)
    a854:	e009883a 	mov	r4,fp
    a858:	102d883a 	mov	r22,r2
    a85c:	300b883a 	mov	r5,r6
    a860:	000aba80 	call	aba8 <__mulsi3>
    a864:	d9c00117 	ldw	r7,4(sp)
    a868:	b808d43a 	srli	r4,r23,16
    a86c:	11c5883a 	add	r2,r2,r7
    a870:	2085883a 	add	r2,r4,r2
    a874:	11c0022e 	bgeu	r2,r7,a880 <__umoddi3+0x458>
    a878:	00c00074 	movhi	r3,1
    a87c:	b0ed883a 	add	r22,r22,r3
    a880:	1006d43a 	srli	r3,r2,16
    a884:	1004943a 	slli	r2,r2,16
    a888:	bdffffcc 	andi	r23,r23,65535
    a88c:	1d87883a 	add	r3,r3,r22
    a890:	15c5883a 	add	r2,r2,r23
    a894:	88c03a36 	bltu	r17,r3,a980 <__umoddi3+0x558>
    a898:	88c03826 	beq	r17,r3,a97c <__umoddi3+0x554>
    a89c:	8085c83a 	sub	r2,r16,r2
    a8a0:	80a1803a 	cmpltu	r16,r16,r2
    a8a4:	88c7c83a 	sub	r3,r17,r3
    a8a8:	1c07c83a 	sub	r3,r3,r16
    a8ac:	1d20983a 	sll	r16,r3,r20
    a8b0:	1544d83a 	srl	r2,r2,r21
    a8b4:	1d46d83a 	srl	r3,r3,r21
    a8b8:	8084b03a 	or	r2,r16,r2
    a8bc:	003f6306 	br	a64c <__umoddi3+0x224>
    a8c0:	9ca6983a 	sll	r19,r19,r18
    a8c4:	88f8d83a 	srl	fp,r17,r3
    a8c8:	80c6d83a 	srl	r3,r16,r3
    a8cc:	982ad43a 	srli	r21,r19,16
    a8d0:	8ca2983a 	sll	r17,r17,r18
    a8d4:	e009883a 	mov	r4,fp
    a8d8:	a80b883a 	mov	r5,r21
    a8dc:	1c6eb03a 	or	r23,r3,r17
    a8e0:	000ab4c0 	call	ab4c <__umodsi3>
    a8e4:	a80b883a 	mov	r5,r21
    a8e8:	e009883a 	mov	r4,fp
    a8ec:	1029883a 	mov	r20,r2
    a8f0:	9dbfffcc 	andi	r22,r19,65535
    a8f4:	000aae80 	call	aae8 <__udivsi3>
    a8f8:	b009883a 	mov	r4,r22
    a8fc:	100b883a 	mov	r5,r2
    a900:	000aba80 	call	aba8 <__mulsi3>
    a904:	a006943a 	slli	r3,r20,16
    a908:	b808d43a 	srli	r4,r23,16
    a90c:	84a8983a 	sll	r20,r16,r18
    a910:	1906b03a 	or	r3,r3,r4
    a914:	1880042e 	bgeu	r3,r2,a928 <__umoddi3+0x500>
    a918:	1cc7883a 	add	r3,r3,r19
    a91c:	1cc00236 	bltu	r3,r19,a928 <__umoddi3+0x500>
    a920:	1880012e 	bgeu	r3,r2,a928 <__umoddi3+0x500>
    a924:	1cc7883a 	add	r3,r3,r19
    a928:	18a3c83a 	sub	r17,r3,r2
    a92c:	8809883a 	mov	r4,r17
    a930:	a80b883a 	mov	r5,r21
    a934:	000ab4c0 	call	ab4c <__umodsi3>
    a938:	1021883a 	mov	r16,r2
    a93c:	8809883a 	mov	r4,r17
    a940:	a80b883a 	mov	r5,r21
    a944:	8022943a 	slli	r17,r16,16
    a948:	000aae80 	call	aae8 <__udivsi3>
    a94c:	100b883a 	mov	r5,r2
    a950:	b009883a 	mov	r4,r22
    a954:	bdffffcc 	andi	r23,r23,65535
    a958:	000aba80 	call	aba8 <__mulsi3>
    a95c:	8de2b03a 	or	r17,r17,r23
    a960:	8880042e 	bgeu	r17,r2,a974 <__umoddi3+0x54c>
    a964:	8ce3883a 	add	r17,r17,r19
    a968:	8cc00236 	bltu	r17,r19,a974 <__umoddi3+0x54c>
    a96c:	8880012e 	bgeu	r17,r2,a974 <__umoddi3+0x54c>
    a970:	8ce3883a 	add	r17,r17,r19
    a974:	88a3c83a 	sub	r17,r17,r2
    a978:	003f0f06 	br	a5b8 <__umoddi3+0x190>
    a97c:	80bfc72e 	bgeu	r16,r2,a89c <__umoddi3+0x474>
    a980:	14e7c83a 	sub	r19,r2,r19
    a984:	14c5803a 	cmpltu	r2,r2,r19
    a988:	1489883a 	add	r4,r2,r18
    a98c:	1907c83a 	sub	r3,r3,r4
    a990:	9805883a 	mov	r2,r19
    a994:	003fc106 	br	a89c <__umoddi3+0x474>
    a998:	3007883a 	mov	r3,r6
    a99c:	003ebb06 	br	a48c <__umoddi3+0x64>
    a9a0:	3811883a 	mov	r8,r7
    a9a4:	000b883a 	mov	r5,zero
    a9a8:	003f3b06 	br	a698 <__umoddi3+0x270>
    a9ac:	3810d43a 	srli	r8,r7,16
    a9b0:	01400404 	movi	r5,16
    a9b4:	003f3806 	br	a698 <__umoddi3+0x270>
    a9b8:	9806d43a 	srli	r3,r19,16
    a9bc:	04800404 	movi	r18,16
    a9c0:	003ef306 	br	a590 <__umoddi3+0x168>
    a9c4:	9807883a 	mov	r3,r19
    a9c8:	003ef106 	br	a590 <__umoddi3+0x168>
    a9cc:	3006d43a 	srli	r3,r6,16
    a9d0:	04800404 	movi	r18,16
    a9d4:	003ead06 	br	a48c <__umoddi3+0x64>
    a9d8:	182d883a 	mov	r22,r3
    a9dc:	003f8506 	br	a7f4 <__umoddi3+0x3cc>
    a9e0:	2039883a 	mov	fp,r4
    a9e4:	003f6a06 	br	a790 <__umoddi3+0x368>
    a9e8:	1cc7883a 	add	r3,r3,r19
    a9ec:	003ec606 	br	a508 <__umoddi3+0xe0>

0000a9f0 <__divsi3>:
    a9f0:	20001a16 	blt	r4,zero,aa5c <__divsi3+0x6c>
    a9f4:	000f883a 	mov	r7,zero
    a9f8:	2800020e 	bge	r5,zero,aa04 <__divsi3+0x14>
    a9fc:	014bc83a 	sub	r5,zero,r5
    aa00:	39c0005c 	xori	r7,r7,1
    aa04:	200d883a 	mov	r6,r4
    aa08:	00c00044 	movi	r3,1
    aa0c:	2900092e 	bgeu	r5,r4,aa34 <__divsi3+0x44>
    aa10:	00800804 	movi	r2,32
    aa14:	00c00044 	movi	r3,1
    aa18:	00000106 	br	aa20 <__divsi3+0x30>
    aa1c:	10001226 	beq	r2,zero,aa68 <__divsi3+0x78>
    aa20:	294b883a 	add	r5,r5,r5
    aa24:	10bfffc4 	addi	r2,r2,-1
    aa28:	18c7883a 	add	r3,r3,r3
    aa2c:	293ffb36 	bltu	r5,r4,aa1c <__divsi3+0x2c>
    aa30:	18000d26 	beq	r3,zero,aa68 <__divsi3+0x78>
    aa34:	0005883a 	mov	r2,zero
    aa38:	31400236 	bltu	r6,r5,aa44 <__divsi3+0x54>
    aa3c:	314dc83a 	sub	r6,r6,r5
    aa40:	10c4b03a 	or	r2,r2,r3
    aa44:	1806d07a 	srli	r3,r3,1
    aa48:	280ad07a 	srli	r5,r5,1
    aa4c:	183ffa1e 	bne	r3,zero,aa38 <__divsi3+0x48>
    aa50:	38000126 	beq	r7,zero,aa58 <__divsi3+0x68>
    aa54:	0085c83a 	sub	r2,zero,r2
    aa58:	f800283a 	ret
    aa5c:	0109c83a 	sub	r4,zero,r4
    aa60:	01c00044 	movi	r7,1
    aa64:	003fe406 	br	a9f8 <__divsi3+0x8>
    aa68:	0005883a 	mov	r2,zero
    aa6c:	003ff806 	br	aa50 <__divsi3+0x60>

0000aa70 <__modsi3>:
    aa70:	20001a16 	blt	r4,zero,aadc <__modsi3+0x6c>
    aa74:	000f883a 	mov	r7,zero
    aa78:	2005883a 	mov	r2,r4
    aa7c:	2800010e 	bge	r5,zero,aa84 <__modsi3+0x14>
    aa80:	014bc83a 	sub	r5,zero,r5
    aa84:	00c00044 	movi	r3,1
    aa88:	2900092e 	bgeu	r5,r4,aab0 <__modsi3+0x40>
    aa8c:	01800804 	movi	r6,32
    aa90:	00c00044 	movi	r3,1
    aa94:	00000106 	br	aa9c <__modsi3+0x2c>
    aa98:	30000d26 	beq	r6,zero,aad0 <__modsi3+0x60>
    aa9c:	294b883a 	add	r5,r5,r5
    aaa0:	31bfffc4 	addi	r6,r6,-1
    aaa4:	18c7883a 	add	r3,r3,r3
    aaa8:	293ffb36 	bltu	r5,r4,aa98 <__modsi3+0x28>
    aaac:	18000826 	beq	r3,zero,aad0 <__modsi3+0x60>
    aab0:	1806d07a 	srli	r3,r3,1
    aab4:	11400136 	bltu	r2,r5,aabc <__modsi3+0x4c>
    aab8:	1145c83a 	sub	r2,r2,r5
    aabc:	280ad07a 	srli	r5,r5,1
    aac0:	183ffb1e 	bne	r3,zero,aab0 <__modsi3+0x40>
    aac4:	38000126 	beq	r7,zero,aacc <__modsi3+0x5c>
    aac8:	0085c83a 	sub	r2,zero,r2
    aacc:	f800283a 	ret
    aad0:	2005883a 	mov	r2,r4
    aad4:	383ffd26 	beq	r7,zero,aacc <__modsi3+0x5c>
    aad8:	003ffb06 	br	aac8 <__modsi3+0x58>
    aadc:	0109c83a 	sub	r4,zero,r4
    aae0:	01c00044 	movi	r7,1
    aae4:	003fe406 	br	aa78 <__modsi3+0x8>

0000aae8 <__udivsi3>:
    aae8:	200d883a 	mov	r6,r4
    aaec:	2900152e 	bgeu	r5,r4,ab44 <__udivsi3+0x5c>
    aaf0:	28001416 	blt	r5,zero,ab44 <__udivsi3+0x5c>
    aaf4:	00800804 	movi	r2,32
    aaf8:	00c00044 	movi	r3,1
    aafc:	00000206 	br	ab08 <__udivsi3+0x20>
    ab00:	10000e26 	beq	r2,zero,ab3c <__udivsi3+0x54>
    ab04:	28000516 	blt	r5,zero,ab1c <__udivsi3+0x34>
    ab08:	294b883a 	add	r5,r5,r5
    ab0c:	10bfffc4 	addi	r2,r2,-1
    ab10:	18c7883a 	add	r3,r3,r3
    ab14:	293ffa36 	bltu	r5,r4,ab00 <__udivsi3+0x18>
    ab18:	18000826 	beq	r3,zero,ab3c <__udivsi3+0x54>
    ab1c:	0005883a 	mov	r2,zero
    ab20:	31400236 	bltu	r6,r5,ab2c <__udivsi3+0x44>
    ab24:	314dc83a 	sub	r6,r6,r5
    ab28:	10c4b03a 	or	r2,r2,r3
    ab2c:	1806d07a 	srli	r3,r3,1
    ab30:	280ad07a 	srli	r5,r5,1
    ab34:	183ffa1e 	bne	r3,zero,ab20 <__udivsi3+0x38>
    ab38:	f800283a 	ret
    ab3c:	0005883a 	mov	r2,zero
    ab40:	f800283a 	ret
    ab44:	00c00044 	movi	r3,1
    ab48:	003ff406 	br	ab1c <__udivsi3+0x34>

0000ab4c <__umodsi3>:
    ab4c:	2005883a 	mov	r2,r4
    ab50:	2900132e 	bgeu	r5,r4,aba0 <__umodsi3+0x54>
    ab54:	28001216 	blt	r5,zero,aba0 <__umodsi3+0x54>
    ab58:	01800804 	movi	r6,32
    ab5c:	00c00044 	movi	r3,1
    ab60:	00000206 	br	ab6c <__umodsi3+0x20>
    ab64:	30000c26 	beq	r6,zero,ab98 <__umodsi3+0x4c>
    ab68:	28000516 	blt	r5,zero,ab80 <__umodsi3+0x34>
    ab6c:	294b883a 	add	r5,r5,r5
    ab70:	31bfffc4 	addi	r6,r6,-1
    ab74:	18c7883a 	add	r3,r3,r3
    ab78:	293ffa36 	bltu	r5,r4,ab64 <__umodsi3+0x18>
    ab7c:	18000626 	beq	r3,zero,ab98 <__umodsi3+0x4c>
    ab80:	1806d07a 	srli	r3,r3,1
    ab84:	11400136 	bltu	r2,r5,ab8c <__umodsi3+0x40>
    ab88:	1145c83a 	sub	r2,r2,r5
    ab8c:	280ad07a 	srli	r5,r5,1
    ab90:	183ffb1e 	bne	r3,zero,ab80 <__umodsi3+0x34>
    ab94:	f800283a 	ret
    ab98:	2005883a 	mov	r2,r4
    ab9c:	f800283a 	ret
    aba0:	00c00044 	movi	r3,1
    aba4:	003ff606 	br	ab80 <__umodsi3+0x34>

0000aba8 <__mulsi3>:
    aba8:	0005883a 	mov	r2,zero
    abac:	20000726 	beq	r4,zero,abcc <__mulsi3+0x24>
    abb0:	20c0004c 	andi	r3,r4,1
    abb4:	2008d07a 	srli	r4,r4,1
    abb8:	18000126 	beq	r3,zero,abc0 <__mulsi3+0x18>
    abbc:	1145883a 	add	r2,r2,r5
    abc0:	294b883a 	add	r5,r5,r5
    abc4:	203ffa1e 	bne	r4,zero,abb0 <__mulsi3+0x8>
    abc8:	f800283a 	ret
    abcc:	f800283a 	ret

0000abd0 <__adddf3>:
    abd0:	02000434 	movhi	r8,16
    abd4:	defffb04 	addi	sp,sp,-20
    abd8:	423fffc4 	addi	r8,r8,-1
    abdc:	2a12703a 	and	r9,r5,r8
    abe0:	3a06703a 	and	r3,r7,r8
    abe4:	3804d53a 	srli	r2,r7,20
    abe8:	dc000015 	stw	r16,0(sp)
    abec:	2820d53a 	srli	r16,r5,20
    abf0:	2016d77a 	srli	r11,r4,29
    abf4:	3014d77a 	srli	r10,r6,29
    abf8:	280ad7fa 	srli	r5,r5,31
    abfc:	481290fa 	slli	r9,r9,3
    ac00:	180690fa 	slli	r3,r3,3
    ac04:	380ed7fa 	srli	r7,r7,31
    ac08:	dc400115 	stw	r17,4(sp)
    ac0c:	8401ffcc 	andi	r16,r16,2047
    ac10:	1081ffcc 	andi	r2,r2,2047
    ac14:	dfc00415 	stw	ra,16(sp)
    ac18:	dcc00315 	stw	r19,12(sp)
    ac1c:	dc800215 	stw	r18,8(sp)
    ac20:	5a52b03a 	or	r9,r11,r9
    ac24:	50c6b03a 	or	r3,r10,r3
    ac28:	2823883a 	mov	r17,r5
    ac2c:	201890fa 	slli	r12,r4,3
    ac30:	301690fa 	slli	r11,r6,3
    ac34:	8095c83a 	sub	r10,r16,r2
    ac38:	29c06a26 	beq	r5,r7,ade4 <__adddf3+0x214>
    ac3c:	0280590e 	bge	zero,r10,ada4 <__adddf3+0x1d4>
    ac40:	10007c26 	beq	r2,zero,ae34 <__adddf3+0x264>
    ac44:	8081ffd8 	cmpnei	r2,r16,2047
    ac48:	10010726 	beq	r2,zero,b068 <__adddf3+0x498>
    ac4c:	18c02034 	orhi	r3,r3,128
    ac50:	50800e48 	cmpgei	r2,r10,57
    ac54:	1000ed1e 	bne	r2,zero,b00c <__adddf3+0x43c>
    ac58:	50800808 	cmpgei	r2,r10,32
    ac5c:	1001541e 	bne	r2,zero,b1b0 <__adddf3+0x5e0>
    ac60:	01000804 	movi	r4,32
    ac64:	2289c83a 	sub	r4,r4,r10
    ac68:	1926983a 	sll	r19,r3,r4
    ac6c:	5a84d83a 	srl	r2,r11,r10
    ac70:	5908983a 	sll	r4,r11,r4
    ac74:	1a86d83a 	srl	r3,r3,r10
    ac78:	98a6b03a 	or	r19,r19,r2
    ac7c:	2016c03a 	cmpne	r11,r4,zero
    ac80:	9ae6b03a 	or	r19,r19,r11
    ac84:	48d3c83a 	sub	r9,r9,r3
    ac88:	64e7c83a 	sub	r19,r12,r19
    ac8c:	64c9803a 	cmpltu	r4,r12,r19
    ac90:	4909c83a 	sub	r4,r9,r4
    ac94:	2080202c 	andhi	r2,r4,128
    ac98:	10008726 	beq	r2,zero,aeb8 <__adddf3+0x2e8>
    ac9c:	02402034 	movhi	r9,128
    aca0:	4a7fffc4 	addi	r9,r9,-1
    aca4:	2264703a 	and	r18,r4,r9
    aca8:	9000cf26 	beq	r18,zero,afe8 <__adddf3+0x418>
    acac:	9009883a 	mov	r4,r18
    acb0:	000d4b80 	call	d4b8 <__clzsi2>
    acb4:	10fffe04 	addi	r3,r2,-8
    acb8:	01000804 	movi	r4,32
    acbc:	20c9c83a 	sub	r4,r4,r3
    acc0:	990ad83a 	srl	r5,r19,r4
    acc4:	90c8983a 	sll	r4,r18,r3
    acc8:	98e6983a 	sll	r19,r19,r3
    accc:	2908b03a 	or	r4,r5,r4
    acd0:	1c00be16 	blt	r3,r16,afcc <__adddf3+0x3fc>
    acd4:	1c21c83a 	sub	r16,r3,r16
    acd8:	81400044 	addi	r5,r16,1
    acdc:	28800808 	cmpgei	r2,r5,32
    ace0:	10011b1e 	bne	r2,zero,b150 <__adddf3+0x580>
    ace4:	00800804 	movi	r2,32
    ace8:	1145c83a 	sub	r2,r2,r5
    acec:	9946d83a 	srl	r3,r19,r5
    acf0:	98a6983a 	sll	r19,r19,r2
    acf4:	2084983a 	sll	r2,r4,r2
    acf8:	2148d83a 	srl	r4,r4,r5
    acfc:	9826c03a 	cmpne	r19,r19,zero
    ad00:	10c4b03a 	or	r2,r2,r3
    ad04:	14e6b03a 	or	r19,r2,r19
    ad08:	0021883a 	mov	r16,zero
    ad0c:	988001cc 	andi	r2,r19,7
    ad10:	10000726 	beq	r2,zero,ad30 <__adddf3+0x160>
    ad14:	988003cc 	andi	r2,r19,15
    ad18:	10800120 	cmpeqi	r2,r2,4
    ad1c:	1000041e 	bne	r2,zero,ad30 <__adddf3+0x160>
    ad20:	99400104 	addi	r5,r19,4
    ad24:	2ce7803a 	cmpltu	r19,r5,r19
    ad28:	24c9883a 	add	r4,r4,r19
    ad2c:	2827883a 	mov	r19,r5
    ad30:	2080202c 	andhi	r2,r4,128
    ad34:	10006226 	beq	r2,zero,aec0 <__adddf3+0x2f0>
    ad38:	84000044 	addi	r16,r16,1
    ad3c:	8081ffe0 	cmpeqi	r2,r16,2047
    ad40:	8401ffcc 	andi	r16,r16,2047
    ad44:	1000731e 	bne	r2,zero,af14 <__adddf3+0x344>
    ad48:	017fe034 	movhi	r5,65408
    ad4c:	297fffc4 	addi	r5,r5,-1
    ad50:	214a703a 	and	r5,r4,r5
    ad54:	2804977a 	slli	r2,r5,29
    ad58:	280a927a 	slli	r5,r5,9
    ad5c:	9826d0fa 	srli	r19,r19,3
    ad60:	2808d33a 	srli	r4,r5,12
    ad64:	14c4b03a 	or	r2,r2,r19
    ad68:	8020953a 	slli	r16,r16,20
    ad6c:	00c00434 	movhi	r3,16
    ad70:	8c403fcc 	andi	r17,r17,255
    ad74:	882297fa 	slli	r17,r17,31
    ad78:	18ffffc4 	addi	r3,r3,-1
    ad7c:	20c6703a 	and	r3,r4,r3
    ad80:	1c06b03a 	or	r3,r3,r16
    ad84:	1c46b03a 	or	r3,r3,r17
    ad88:	dfc00417 	ldw	ra,16(sp)
    ad8c:	dcc00317 	ldw	r19,12(sp)
    ad90:	dc800217 	ldw	r18,8(sp)
    ad94:	dc400117 	ldw	r17,4(sp)
    ad98:	dc000017 	ldw	r16,0(sp)
    ad9c:	dec00504 	addi	sp,sp,20
    ada0:	f800283a 	ret
    ada4:	50002b1e 	bne	r10,zero,ae54 <__adddf3+0x284>
    ada8:	80800044 	addi	r2,r16,1
    adac:	1081ff8c 	andi	r2,r2,2046
    adb0:	1000a11e 	bne	r2,zero,b038 <__adddf3+0x468>
    adb4:	4b0ab03a 	or	r5,r9,r12
    adb8:	1ac4b03a 	or	r2,r3,r11
    adbc:	80015c1e 	bne	r16,zero,b330 <__adddf3+0x760>
    adc0:	28012826 	beq	r5,zero,b264 <__adddf3+0x694>
    adc4:	1001671e 	bne	r2,zero,b364 <__adddf3+0x794>
    adc8:	4826977a 	slli	r19,r9,29
    adcc:	00c80034 	movhi	r3,8192
    add0:	18ffffc4 	addi	r3,r3,-1
    add4:	20c4703a 	and	r2,r4,r3
    add8:	9884b03a 	or	r2,r19,r2
    addc:	4812d0fa 	srli	r9,r9,3
    ade0:	00003d06 	br	aed8 <__adddf3+0x308>
    ade4:	02804f0e 	bge	zero,r10,af24 <__adddf3+0x354>
    ade8:	10002426 	beq	r2,zero,ae7c <__adddf3+0x2ac>
    adec:	8081ffd8 	cmpnei	r2,r16,2047
    adf0:	10009d26 	beq	r2,zero,b068 <__adddf3+0x498>
    adf4:	18c02034 	orhi	r3,r3,128
    adf8:	50800e48 	cmpgei	r2,r10,57
    adfc:	10003b1e 	bne	r2,zero,aeec <__adddf3+0x31c>
    ae00:	50800808 	cmpgei	r2,r10,32
    ae04:	10010326 	beq	r2,zero,b214 <__adddf3+0x644>
    ae08:	54fff804 	addi	r19,r10,-32
    ae0c:	51000820 	cmpeqi	r4,r10,32
    ae10:	1cc4d83a 	srl	r2,r3,r19
    ae14:	2000041e 	bne	r4,zero,ae28 <__adddf3+0x258>
    ae18:	01001004 	movi	r4,64
    ae1c:	2295c83a 	sub	r10,r4,r10
    ae20:	1a86983a 	sll	r3,r3,r10
    ae24:	58d6b03a 	or	r11,r11,r3
    ae28:	5826c03a 	cmpne	r19,r11,zero
    ae2c:	98a6b03a 	or	r19,r19,r2
    ae30:	00003006 	br	aef4 <__adddf3+0x324>
    ae34:	1ac4b03a 	or	r2,r3,r11
    ae38:	10007726 	beq	r2,zero,b018 <__adddf3+0x448>
    ae3c:	50bfffc4 	addi	r2,r10,-1
    ae40:	10011926 	beq	r2,zero,b2a8 <__adddf3+0x6d8>
    ae44:	5281ffd8 	cmpnei	r10,r10,2047
    ae48:	50012026 	beq	r10,zero,b2cc <__adddf3+0x6fc>
    ae4c:	1015883a 	mov	r10,r2
    ae50:	003f7f06 	br	ac50 <__adddf3+0x80>
    ae54:	1409c83a 	sub	r4,r2,r16
    ae58:	8000a61e 	bne	r16,zero,b0f4 <__adddf3+0x524>
    ae5c:	4b0ab03a 	or	r5,r9,r12
    ae60:	2800f726 	beq	r5,zero,b240 <__adddf3+0x670>
    ae64:	217fffc4 	addi	r5,r4,-1
    ae68:	28017f26 	beq	r5,zero,b468 <__adddf3+0x898>
    ae6c:	2101ffd8 	cmpnei	r4,r4,2047
    ae70:	2001a326 	beq	r4,zero,b500 <__adddf3+0x930>
    ae74:	2809883a 	mov	r4,r5
    ae78:	0000a106 	br	b100 <__adddf3+0x530>
    ae7c:	1ac4b03a 	or	r2,r3,r11
    ae80:	10006526 	beq	r2,zero,b018 <__adddf3+0x448>
    ae84:	50bfffc4 	addi	r2,r10,-1
    ae88:	10000426 	beq	r2,zero,ae9c <__adddf3+0x2cc>
    ae8c:	5281ffd8 	cmpnei	r10,r10,2047
    ae90:	50014326 	beq	r10,zero,b3a0 <__adddf3+0x7d0>
    ae94:	1015883a 	mov	r10,r2
    ae98:	003fd706 	br	adf8 <__adddf3+0x228>
    ae9c:	62e7883a 	add	r19,r12,r11
    aea0:	48d3883a 	add	r9,r9,r3
    aea4:	9b09803a 	cmpltu	r4,r19,r12
    aea8:	4909883a 	add	r4,r9,r4
    aeac:	2080202c 	andhi	r2,r4,128
    aeb0:	1000b41e 	bne	r2,zero,b184 <__adddf3+0x5b4>
    aeb4:	04000044 	movi	r16,1
    aeb8:	988001cc 	andi	r2,r19,7
    aebc:	103f951e 	bne	r2,zero,ad14 <__adddf3+0x144>
    aec0:	9826d0fa 	srli	r19,r19,3
    aec4:	2004977a 	slli	r2,r4,29
    aec8:	2012d0fa 	srli	r9,r4,3
    aecc:	9884b03a 	or	r2,r19,r2
    aed0:	80c1ffe0 	cmpeqi	r3,r16,2047
    aed4:	1800351e 	bne	r3,zero,afac <__adddf3+0x3dc>
    aed8:	01000434 	movhi	r4,16
    aedc:	213fffc4 	addi	r4,r4,-1
    aee0:	4908703a 	and	r4,r9,r4
    aee4:	8401ffcc 	andi	r16,r16,2047
    aee8:	003f9f06 	br	ad68 <__adddf3+0x198>
    aeec:	1ac8b03a 	or	r4,r3,r11
    aef0:	2026c03a 	cmpne	r19,r4,zero
    aef4:	9b27883a 	add	r19,r19,r12
    aef8:	9b09803a 	cmpltu	r4,r19,r12
    aefc:	2249883a 	add	r4,r4,r9
    af00:	2080202c 	andhi	r2,r4,128
    af04:	103fec26 	beq	r2,zero,aeb8 <__adddf3+0x2e8>
    af08:	84000044 	addi	r16,r16,1
    af0c:	8081ffe0 	cmpeqi	r2,r16,2047
    af10:	10009d26 	beq	r2,zero,b188 <__adddf3+0x5b8>
    af14:	0401ffc4 	movi	r16,2047
    af18:	0009883a 	mov	r4,zero
    af1c:	0005883a 	mov	r2,zero
    af20:	003f9106 	br	ad68 <__adddf3+0x198>
    af24:	5000571e 	bne	r10,zero,b084 <__adddf3+0x4b4>
    af28:	80800044 	addi	r2,r16,1
    af2c:	1141ff8c 	andi	r5,r2,2046
    af30:	2800ed1e 	bne	r5,zero,b2e8 <__adddf3+0x718>
    af34:	4b04b03a 	or	r2,r9,r12
    af38:	8000a826 	beq	r16,zero,b1dc <__adddf3+0x60c>
    af3c:	10010226 	beq	r2,zero,b348 <__adddf3+0x778>
    af40:	1ad6b03a 	or	r11,r3,r11
    af44:	480a977a 	slli	r5,r9,29
    af48:	4812d0fa 	srli	r9,r9,3
    af4c:	58015f26 	beq	r11,zero,b4cc <__adddf3+0x8fc>
    af50:	02080034 	movhi	r8,8192
    af54:	423fffc4 	addi	r8,r8,-1
    af58:	2204703a 	and	r2,r4,r8
    af5c:	4900022c 	andhi	r4,r9,8
    af60:	114ab03a 	or	r5,r2,r5
    af64:	20000826 	beq	r4,zero,af88 <__adddf3+0x3b8>
    af68:	1808d0fa 	srli	r4,r3,3
    af6c:	2080022c 	andhi	r2,r4,8
    af70:	1000051e 	bne	r2,zero,af88 <__adddf3+0x3b8>
    af74:	1806977a 	slli	r3,r3,29
    af78:	3204703a 	and	r2,r6,r8
    af7c:	3823883a 	mov	r17,r7
    af80:	10cab03a 	or	r5,r2,r3
    af84:	2013883a 	mov	r9,r4
    af88:	2804d77a 	srli	r2,r5,29
    af8c:	480890fa 	slli	r4,r9,3
    af90:	00c80034 	movhi	r3,8192
    af94:	18ffffc4 	addi	r3,r3,-1
    af98:	1108b03a 	or	r4,r2,r4
    af9c:	2004977a 	slli	r2,r4,29
    afa0:	2012d0fa 	srli	r9,r4,3
    afa4:	28ca703a 	and	r5,r5,r3
    afa8:	1144b03a 	or	r2,r2,r5
    afac:	4886b03a 	or	r3,r9,r2
    afb0:	18016b26 	beq	r3,zero,b560 <__adddf3+0x990>
    afb4:	00c00434 	movhi	r3,16
    afb8:	49000234 	orhi	r4,r9,8
    afbc:	18ffffc4 	addi	r3,r3,-1
    afc0:	20c8703a 	and	r4,r4,r3
    afc4:	0401ffc4 	movi	r16,2047
    afc8:	003f6706 	br	ad68 <__adddf3+0x198>
    afcc:	017fe034 	movhi	r5,65408
    afd0:	297fffc4 	addi	r5,r5,-1
    afd4:	988001cc 	andi	r2,r19,7
    afd8:	80e1c83a 	sub	r16,r16,r3
    afdc:	2148703a 	and	r4,r4,r5
    afe0:	103f4c1e 	bne	r2,zero,ad14 <__adddf3+0x144>
    afe4:	003fb606 	br	aec0 <__adddf3+0x2f0>
    afe8:	9809883a 	mov	r4,r19
    afec:	000d4b80 	call	d4b8 <__clzsi2>
    aff0:	10c00604 	addi	r3,r2,24
    aff4:	19000808 	cmpgei	r4,r3,32
    aff8:	203f2f26 	beq	r4,zero,acb8 <__adddf3+0xe8>
    affc:	113ffe04 	addi	r4,r2,-8
    b000:	9908983a 	sll	r4,r19,r4
    b004:	0027883a 	mov	r19,zero
    b008:	003f3106 	br	acd0 <__adddf3+0x100>
    b00c:	1ac8b03a 	or	r4,r3,r11
    b010:	2026c03a 	cmpne	r19,r4,zero
    b014:	003f1c06 	br	ac88 <__adddf3+0xb8>
    b018:	4826977a 	slli	r19,r9,29
    b01c:	00c80034 	movhi	r3,8192
    b020:	18ffffc4 	addi	r3,r3,-1
    b024:	20c4703a 	and	r2,r4,r3
    b028:	14c4b03a 	or	r2,r2,r19
    b02c:	4812d0fa 	srli	r9,r9,3
    b030:	5021883a 	mov	r16,r10
    b034:	003fa606 	br	aed0 <__adddf3+0x300>
    b038:	62e7c83a 	sub	r19,r12,r11
    b03c:	48e5c83a 	sub	r18,r9,r3
    b040:	64c9803a 	cmpltu	r4,r12,r19
    b044:	9125c83a 	sub	r18,r18,r4
    b048:	9080202c 	andhi	r2,r18,128
    b04c:	1000b21e 	bne	r2,zero,b318 <__adddf3+0x748>
    b050:	9c84b03a 	or	r2,r19,r18
    b054:	103f141e 	bne	r2,zero,aca8 <__adddf3+0xd8>
    b058:	0013883a 	mov	r9,zero
    b05c:	0021883a 	mov	r16,zero
    b060:	0023883a 	mov	r17,zero
    b064:	003f9c06 	br	aed8 <__adddf3+0x308>
    b068:	4826977a 	slli	r19,r9,29
    b06c:	00c80034 	movhi	r3,8192
    b070:	18ffffc4 	addi	r3,r3,-1
    b074:	20c4703a 	and	r2,r4,r3
    b078:	14c4b03a 	or	r2,r2,r19
    b07c:	4812d0fa 	srli	r9,r9,3
    b080:	003fca06 	br	afac <__adddf3+0x3dc>
    b084:	1409c83a 	sub	r4,r2,r16
    b088:	80005e1e 	bne	r16,zero,b204 <__adddf3+0x634>
    b08c:	4b0ab03a 	or	r5,r9,r12
    b090:	28011326 	beq	r5,zero,b4e0 <__adddf3+0x910>
    b094:	217fffc4 	addi	r5,r4,-1
    b098:	28012c26 	beq	r5,zero,b54c <__adddf3+0x97c>
    b09c:	2101ffd8 	cmpnei	r4,r4,2047
    b0a0:	2000a926 	beq	r4,zero,b348 <__adddf3+0x778>
    b0a4:	2809883a 	mov	r4,r5
    b0a8:	21400e48 	cmpgei	r5,r4,57
    b0ac:	2800b91e 	bne	r5,zero,b394 <__adddf3+0x7c4>
    b0b0:	21400808 	cmpgei	r5,r4,32
    b0b4:	28011a1e 	bne	r5,zero,b520 <__adddf3+0x950>
    b0b8:	01400804 	movi	r5,32
    b0bc:	290bc83a 	sub	r5,r5,r4
    b0c0:	4966983a 	sll	r19,r9,r5
    b0c4:	610cd83a 	srl	r6,r12,r4
    b0c8:	614a983a 	sll	r5,r12,r5
    b0cc:	4912d83a 	srl	r9,r9,r4
    b0d0:	99a6b03a 	or	r19,r19,r6
    b0d4:	280ac03a 	cmpne	r5,r5,zero
    b0d8:	9966b03a 	or	r19,r19,r5
    b0dc:	1a47883a 	add	r3,r3,r9
    b0e0:	9ae7883a 	add	r19,r19,r11
    b0e4:	9ac9803a 	cmpltu	r4,r19,r11
    b0e8:	20c9883a 	add	r4,r4,r3
    b0ec:	1021883a 	mov	r16,r2
    b0f0:	003f8306 	br	af00 <__adddf3+0x330>
    b0f4:	1141ffd8 	cmpnei	r5,r2,2047
    b0f8:	28006326 	beq	r5,zero,b288 <__adddf3+0x6b8>
    b0fc:	4a402034 	orhi	r9,r9,128
    b100:	21400e48 	cmpgei	r5,r4,57
    b104:	28006e1e 	bne	r5,zero,b2c0 <__adddf3+0x6f0>
    b108:	21400808 	cmpgei	r5,r4,32
    b10c:	2800ab1e 	bne	r5,zero,b3bc <__adddf3+0x7ec>
    b110:	01400804 	movi	r5,32
    b114:	290bc83a 	sub	r5,r5,r4
    b118:	4966983a 	sll	r19,r9,r5
    b11c:	610cd83a 	srl	r6,r12,r4
    b120:	614a983a 	sll	r5,r12,r5
    b124:	4912d83a 	srl	r9,r9,r4
    b128:	99a6b03a 	or	r19,r19,r6
    b12c:	280ac03a 	cmpne	r5,r5,zero
    b130:	9966b03a 	or	r19,r19,r5
    b134:	1a47c83a 	sub	r3,r3,r9
    b138:	5ce7c83a 	sub	r19,r11,r19
    b13c:	5cc9803a 	cmpltu	r4,r11,r19
    b140:	1909c83a 	sub	r4,r3,r4
    b144:	3823883a 	mov	r17,r7
    b148:	1021883a 	mov	r16,r2
    b14c:	003ed106 	br	ac94 <__adddf3+0xc4>
    b150:	843ff844 	addi	r16,r16,-31
    b154:	28800820 	cmpeqi	r2,r5,32
    b158:	2420d83a 	srl	r16,r4,r16
    b15c:	1000041e 	bne	r2,zero,b170 <__adddf3+0x5a0>
    b160:	00801004 	movi	r2,64
    b164:	114bc83a 	sub	r5,r2,r5
    b168:	2148983a 	sll	r4,r4,r5
    b16c:	9926b03a 	or	r19,r19,r4
    b170:	9826c03a 	cmpne	r19,r19,zero
    b174:	9c26b03a 	or	r19,r19,r16
    b178:	0009883a 	mov	r4,zero
    b17c:	0021883a 	mov	r16,zero
    b180:	003f4d06 	br	aeb8 <__adddf3+0x2e8>
    b184:	04000084 	movi	r16,2
    b188:	00bfe034 	movhi	r2,65408
    b18c:	10bfffc4 	addi	r2,r2,-1
    b190:	208a703a 	and	r5,r4,r2
    b194:	9804d07a 	srli	r2,r19,1
    b198:	280697fa 	slli	r3,r5,31
    b19c:	9cc0004c 	andi	r19,r19,1
    b1a0:	14e6b03a 	or	r19,r2,r19
    b1a4:	2808d07a 	srli	r4,r5,1
    b1a8:	1ce6b03a 	or	r19,r3,r19
    b1ac:	003ed706 	br	ad0c <__adddf3+0x13c>
    b1b0:	54fff804 	addi	r19,r10,-32
    b1b4:	50800820 	cmpeqi	r2,r10,32
    b1b8:	1ce6d83a 	srl	r19,r3,r19
    b1bc:	1000041e 	bne	r2,zero,b1d0 <__adddf3+0x600>
    b1c0:	00801004 	movi	r2,64
    b1c4:	1295c83a 	sub	r10,r2,r10
    b1c8:	1a86983a 	sll	r3,r3,r10
    b1cc:	58d6b03a 	or	r11,r11,r3
    b1d0:	5808c03a 	cmpne	r4,r11,zero
    b1d4:	24e6b03a 	or	r19,r4,r19
    b1d8:	003eab06 	br	ac88 <__adddf3+0xb8>
    b1dc:	1000a926 	beq	r2,zero,b484 <__adddf3+0x8b4>
    b1e0:	1ac4b03a 	or	r2,r3,r11
    b1e4:	1000ae1e 	bne	r2,zero,b4a0 <__adddf3+0x8d0>
    b1e8:	4806977a 	slli	r3,r9,29
    b1ec:	00880034 	movhi	r2,8192
    b1f0:	10bfffc4 	addi	r2,r2,-1
    b1f4:	2084703a 	and	r2,r4,r2
    b1f8:	10c4b03a 	or	r2,r2,r3
    b1fc:	4812d0fa 	srli	r9,r9,3
    b200:	003f3506 	br	aed8 <__adddf3+0x308>
    b204:	1141ffd8 	cmpnei	r5,r2,2047
    b208:	28004f26 	beq	r5,zero,b348 <__adddf3+0x778>
    b20c:	4a402034 	orhi	r9,r9,128
    b210:	003fa506 	br	b0a8 <__adddf3+0x4d8>
    b214:	01000804 	movi	r4,32
    b218:	2289c83a 	sub	r4,r4,r10
    b21c:	1926983a 	sll	r19,r3,r4
    b220:	5a84d83a 	srl	r2,r11,r10
    b224:	5908983a 	sll	r4,r11,r4
    b228:	1a86d83a 	srl	r3,r3,r10
    b22c:	98a6b03a 	or	r19,r19,r2
    b230:	2016c03a 	cmpne	r11,r4,zero
    b234:	9ae6b03a 	or	r19,r19,r11
    b238:	48d3883a 	add	r9,r9,r3
    b23c:	003f2d06 	br	aef4 <__adddf3+0x324>
    b240:	01480034 	movhi	r5,8192
    b244:	1826977a 	slli	r19,r3,29
    b248:	297fffc4 	addi	r5,r5,-1
    b24c:	3144703a 	and	r2,r6,r5
    b250:	14c4b03a 	or	r2,r2,r19
    b254:	1812d0fa 	srli	r9,r3,3
    b258:	3823883a 	mov	r17,r7
    b25c:	2021883a 	mov	r16,r4
    b260:	003f1b06 	br	aed0 <__adddf3+0x300>
    b264:	10007d26 	beq	r2,zero,b45c <__adddf3+0x88c>
    b268:	00880034 	movhi	r2,8192
    b26c:	1808977a 	slli	r4,r3,29
    b270:	10bfffc4 	addi	r2,r2,-1
    b274:	3084703a 	and	r2,r6,r2
    b278:	1104b03a 	or	r2,r2,r4
    b27c:	1812d0fa 	srli	r9,r3,3
    b280:	3823883a 	mov	r17,r7
    b284:	003f1406 	br	aed8 <__adddf3+0x308>
    b288:	180a977a 	slli	r5,r3,29
    b28c:	01080034 	movhi	r4,8192
    b290:	213fffc4 	addi	r4,r4,-1
    b294:	3104703a 	and	r2,r6,r4
    b298:	2884b03a 	or	r2,r5,r2
    b29c:	1812d0fa 	srli	r9,r3,3
    b2a0:	3823883a 	mov	r17,r7
    b2a4:	003f4106 	br	afac <__adddf3+0x3dc>
    b2a8:	62e7c83a 	sub	r19,r12,r11
    b2ac:	48d3c83a 	sub	r9,r9,r3
    b2b0:	64c9803a 	cmpltu	r4,r12,r19
    b2b4:	4909c83a 	sub	r4,r9,r4
    b2b8:	04000044 	movi	r16,1
    b2bc:	003e7506 	br	ac94 <__adddf3+0xc4>
    b2c0:	4b12b03a 	or	r9,r9,r12
    b2c4:	4826c03a 	cmpne	r19,r9,zero
    b2c8:	003f9b06 	br	b138 <__adddf3+0x568>
    b2cc:	4826977a 	slli	r19,r9,29
    b2d0:	00c80034 	movhi	r3,8192
    b2d4:	18ffffc4 	addi	r3,r3,-1
    b2d8:	20c4703a 	and	r2,r4,r3
    b2dc:	9884b03a 	or	r2,r19,r2
    b2e0:	4812d0fa 	srli	r9,r9,3
    b2e4:	003f3106 	br	afac <__adddf3+0x3dc>
    b2e8:	1101ffe0 	cmpeqi	r4,r2,2047
    b2ec:	203f091e 	bne	r4,zero,af14 <__adddf3+0x344>
    b2f0:	62d7883a 	add	r11,r12,r11
    b2f4:	5b09803a 	cmpltu	r4,r11,r12
    b2f8:	48d3883a 	add	r9,r9,r3
    b2fc:	490b883a 	add	r5,r9,r4
    b300:	282697fa 	slli	r19,r5,31
    b304:	5816d07a 	srli	r11,r11,1
    b308:	2808d07a 	srli	r4,r5,1
    b30c:	1021883a 	mov	r16,r2
    b310:	9ae6b03a 	or	r19,r19,r11
    b314:	003ee806 	br	aeb8 <__adddf3+0x2e8>
    b318:	5b27c83a 	sub	r19,r11,r12
    b31c:	1a53c83a 	sub	r9,r3,r9
    b320:	5cc9803a 	cmpltu	r4,r11,r19
    b324:	4925c83a 	sub	r18,r9,r4
    b328:	3823883a 	mov	r17,r7
    b32c:	003e5e06 	br	aca8 <__adddf3+0xd8>
    b330:	28002d1e 	bne	r5,zero,b3e8 <__adddf3+0x818>
    b334:	103fd41e 	bne	r2,zero,b288 <__adddf3+0x6b8>
    b338:	00bfffc4 	movi	r2,-1
    b33c:	0023883a 	mov	r17,zero
    b340:	4013883a 	mov	r9,r8
    b344:	003f1b06 	br	afb4 <__adddf3+0x3e4>
    b348:	00880034 	movhi	r2,8192
    b34c:	1808977a 	slli	r4,r3,29
    b350:	10bfffc4 	addi	r2,r2,-1
    b354:	3084703a 	and	r2,r6,r2
    b358:	1104b03a 	or	r2,r2,r4
    b35c:	1812d0fa 	srli	r9,r3,3
    b360:	003f1206 	br	afac <__adddf3+0x3dc>
    b364:	62e7c83a 	sub	r19,r12,r11
    b368:	48cbc83a 	sub	r5,r9,r3
    b36c:	64c9803a 	cmpltu	r4,r12,r19
    b370:	2909c83a 	sub	r4,r5,r4
    b374:	2080202c 	andhi	r2,r4,128
    b378:	10003626 	beq	r2,zero,b454 <__adddf3+0x884>
    b37c:	5b27c83a 	sub	r19,r11,r12
    b380:	1a53c83a 	sub	r9,r3,r9
    b384:	5cc9803a 	cmpltu	r4,r11,r19
    b388:	4909c83a 	sub	r4,r9,r4
    b38c:	3823883a 	mov	r17,r7
    b390:	003e5e06 	br	ad0c <__adddf3+0x13c>
    b394:	4b12b03a 	or	r9,r9,r12
    b398:	4826c03a 	cmpne	r19,r9,zero
    b39c:	003f5006 	br	b0e0 <__adddf3+0x510>
    b3a0:	4806977a 	slli	r3,r9,29
    b3a4:	00880034 	movhi	r2,8192
    b3a8:	10bfffc4 	addi	r2,r2,-1
    b3ac:	2084703a 	and	r2,r4,r2
    b3b0:	10c4b03a 	or	r2,r2,r3
    b3b4:	4812d0fa 	srli	r9,r9,3
    b3b8:	003efc06 	br	afac <__adddf3+0x3dc>
    b3bc:	217ff804 	addi	r5,r4,-32
    b3c0:	21800820 	cmpeqi	r6,r4,32
    b3c4:	494ad83a 	srl	r5,r9,r5
    b3c8:	3000041e 	bne	r6,zero,b3dc <__adddf3+0x80c>
    b3cc:	01801004 	movi	r6,64
    b3d0:	3109c83a 	sub	r4,r6,r4
    b3d4:	4912983a 	sll	r9,r9,r4
    b3d8:	6258b03a 	or	r12,r12,r9
    b3dc:	6026c03a 	cmpne	r19,r12,zero
    b3e0:	9966b03a 	or	r19,r19,r5
    b3e4:	003f5406 	br	b138 <__adddf3+0x568>
    b3e8:	480a977a 	slli	r5,r9,29
    b3ec:	4812d0fa 	srli	r9,r9,3
    b3f0:	10003626 	beq	r2,zero,b4cc <__adddf3+0x8fc>
    b3f4:	02080034 	movhi	r8,8192
    b3f8:	423fffc4 	addi	r8,r8,-1
    b3fc:	2204703a 	and	r2,r4,r8
    b400:	4900022c 	andhi	r4,r9,8
    b404:	114ab03a 	or	r5,r2,r5
    b408:	20000826 	beq	r4,zero,b42c <__adddf3+0x85c>
    b40c:	1808d0fa 	srli	r4,r3,3
    b410:	2080022c 	andhi	r2,r4,8
    b414:	1000051e 	bne	r2,zero,b42c <__adddf3+0x85c>
    b418:	1806977a 	slli	r3,r3,29
    b41c:	3204703a 	and	r2,r6,r8
    b420:	3823883a 	mov	r17,r7
    b424:	10cab03a 	or	r5,r2,r3
    b428:	2013883a 	mov	r9,r4
    b42c:	480890fa 	slli	r4,r9,3
    b430:	2804d77a 	srli	r2,r5,29
    b434:	00c80034 	movhi	r3,8192
    b438:	18ffffc4 	addi	r3,r3,-1
    b43c:	1108b03a 	or	r4,r2,r4
    b440:	200c977a 	slli	r6,r4,29
    b444:	28c4703a 	and	r2,r5,r3
    b448:	2012d0fa 	srli	r9,r4,3
    b44c:	3084b03a 	or	r2,r6,r2
    b450:	003ed606 	br	afac <__adddf3+0x3dc>
    b454:	9904b03a 	or	r2,r19,r4
    b458:	103e971e 	bne	r2,zero,aeb8 <__adddf3+0x2e8>
    b45c:	0013883a 	mov	r9,zero
    b460:	0023883a 	mov	r17,zero
    b464:	003e9c06 	br	aed8 <__adddf3+0x308>
    b468:	5b27c83a 	sub	r19,r11,r12
    b46c:	1a53c83a 	sub	r9,r3,r9
    b470:	5cc9803a 	cmpltu	r4,r11,r19
    b474:	4909c83a 	sub	r4,r9,r4
    b478:	3823883a 	mov	r17,r7
    b47c:	04000044 	movi	r16,1
    b480:	003e0406 	br	ac94 <__adddf3+0xc4>
    b484:	180a977a 	slli	r5,r3,29
    b488:	01080034 	movhi	r4,8192
    b48c:	213fffc4 	addi	r4,r4,-1
    b490:	3104703a 	and	r2,r6,r4
    b494:	2884b03a 	or	r2,r5,r2
    b498:	1812d0fa 	srli	r9,r3,3
    b49c:	003e8e06 	br	aed8 <__adddf3+0x308>
    b4a0:	62e7883a 	add	r19,r12,r11
    b4a4:	48d3883a 	add	r9,r9,r3
    b4a8:	9b09803a 	cmpltu	r4,r19,r12
    b4ac:	4909883a 	add	r4,r9,r4
    b4b0:	2080202c 	andhi	r2,r4,128
    b4b4:	103e8026 	beq	r2,zero,aeb8 <__adddf3+0x2e8>
    b4b8:	00bfe034 	movhi	r2,65408
    b4bc:	10bfffc4 	addi	r2,r2,-1
    b4c0:	2088703a 	and	r4,r4,r2
    b4c4:	04000044 	movi	r16,1
    b4c8:	003e7b06 	br	aeb8 <__adddf3+0x2e8>
    b4cc:	00880034 	movhi	r2,8192
    b4d0:	10bfffc4 	addi	r2,r2,-1
    b4d4:	2084703a 	and	r2,r4,r2
    b4d8:	1144b03a 	or	r2,r2,r5
    b4dc:	003eb306 	br	afac <__adddf3+0x3dc>
    b4e0:	180e977a 	slli	r7,r3,29
    b4e4:	01480034 	movhi	r5,8192
    b4e8:	297fffc4 	addi	r5,r5,-1
    b4ec:	3144703a 	and	r2,r6,r5
    b4f0:	3884b03a 	or	r2,r7,r2
    b4f4:	1812d0fa 	srli	r9,r3,3
    b4f8:	2021883a 	mov	r16,r4
    b4fc:	003e7406 	br	aed0 <__adddf3+0x300>
    b500:	00880034 	movhi	r2,8192
    b504:	1808977a 	slli	r4,r3,29
    b508:	10bfffc4 	addi	r2,r2,-1
    b50c:	3084703a 	and	r2,r6,r2
    b510:	1104b03a 	or	r2,r2,r4
    b514:	1812d0fa 	srli	r9,r3,3
    b518:	3823883a 	mov	r17,r7
    b51c:	003ea306 	br	afac <__adddf3+0x3dc>
    b520:	217ff804 	addi	r5,r4,-32
    b524:	21800820 	cmpeqi	r6,r4,32
    b528:	494ad83a 	srl	r5,r9,r5
    b52c:	3000041e 	bne	r6,zero,b540 <__adddf3+0x970>
    b530:	01801004 	movi	r6,64
    b534:	3109c83a 	sub	r4,r6,r4
    b538:	4912983a 	sll	r9,r9,r4
    b53c:	6258b03a 	or	r12,r12,r9
    b540:	6026c03a 	cmpne	r19,r12,zero
    b544:	9966b03a 	or	r19,r19,r5
    b548:	003ee506 	br	b0e0 <__adddf3+0x510>
    b54c:	62e7883a 	add	r19,r12,r11
    b550:	48d3883a 	add	r9,r9,r3
    b554:	9ac9803a 	cmpltu	r4,r19,r11
    b558:	4909883a 	add	r4,r9,r4
    b55c:	003e5306 	br	aeac <__adddf3+0x2dc>
    b560:	0005883a 	mov	r2,zero
    b564:	0401ffc4 	movi	r16,2047
    b568:	0009883a 	mov	r4,zero
    b56c:	003dfe06 	br	ad68 <__adddf3+0x198>

0000b570 <__divdf3>:
    b570:	deffef04 	addi	sp,sp,-68
    b574:	2804d53a 	srli	r2,r5,20
    b578:	dd000b15 	stw	r20,44(sp)
    b57c:	2828d7fa 	srli	r20,r5,31
    b580:	dc400815 	stw	r17,32(sp)
    b584:	04400434 	movhi	r17,16
    b588:	dd800d15 	stw	r22,52(sp)
    b58c:	dcc00a15 	stw	r19,40(sp)
    b590:	8c7fffc4 	addi	r17,r17,-1
    b594:	dfc01015 	stw	ra,64(sp)
    b598:	df000f15 	stw	fp,60(sp)
    b59c:	ddc00e15 	stw	r23,56(sp)
    b5a0:	dd400c15 	stw	r21,48(sp)
    b5a4:	dc800915 	stw	r18,36(sp)
    b5a8:	dc000715 	stw	r16,28(sp)
    b5ac:	1081ffcc 	andi	r2,r2,2047
    b5b0:	2027883a 	mov	r19,r4
    b5b4:	2c62703a 	and	r17,r5,r17
    b5b8:	a02d883a 	mov	r22,r20
    b5bc:	10008726 	beq	r2,zero,b7dc <__divdf3+0x26c>
    b5c0:	10c1ffe0 	cmpeqi	r3,r2,2047
    b5c4:	18009d1e 	bne	r3,zero,b83c <__divdf3+0x2cc>
    b5c8:	880a90fa 	slli	r5,r17,3
    b5cc:	2008d77a 	srli	r4,r4,29
    b5d0:	982690fa 	slli	r19,r19,3
    b5d4:	14bf0044 	addi	r18,r2,-1023
    b5d8:	2148b03a 	or	r4,r4,r5
    b5dc:	24002034 	orhi	r16,r4,128
    b5e0:	0023883a 	mov	r17,zero
    b5e4:	002f883a 	mov	r23,zero
    b5e8:	3806d53a 	srli	r3,r7,20
    b5ec:	01000434 	movhi	r4,16
    b5f0:	213fffc4 	addi	r4,r4,-1
    b5f4:	18c1ffcc 	andi	r3,r3,2047
    b5f8:	392a703a 	and	r21,r7,r4
    b5fc:	3838d7fa 	srli	fp,r7,31
    b600:	18006326 	beq	r3,zero,b790 <__divdf3+0x220>
    b604:	1881ffe0 	cmpeqi	r2,r3,2047
    b608:	1000201e 	bne	r2,zero,b68c <__divdf3+0x11c>
    b60c:	a80890fa 	slli	r4,r21,3
    b610:	300ed77a 	srli	r7,r6,29
    b614:	300a90fa 	slli	r5,r6,3
    b618:	18ff0044 	addi	r3,r3,-1023
    b61c:	3908b03a 	or	r4,r7,r4
    b620:	90e5c83a 	sub	r18,r18,r3
    b624:	25402034 	orhi	r21,r4,128
    b628:	0007883a 	mov	r3,zero
    b62c:	88800428 	cmpgeui	r2,r17,16
    b630:	a70cf03a 	xor	r6,r20,fp
    b634:	1000ab1e 	bne	r2,zero,b8e4 <__divdf3+0x374>
    b638:	882290ba 	slli	r17,r17,2
    b63c:	00800074 	movhi	r2,1
    b640:	8885883a 	add	r2,r17,r2
    b644:	10ad9317 	ldw	r2,-18868(r2)
    b648:	1000683a 	jmp	r2
    b64c:	0000b8e4 	muli	zero,zero,739
    b650:	0000b780 	call	b78 <_malloc_r+0xbc>
    b654:	0000b724 	muli	zero,zero,732
    b658:	0000b6a8 	cmpgeui	zero,zero,730
    b65c:	0000b724 	muli	zero,zero,732
    b660:	0000b8a0 	cmpeqi	zero,zero,738
    b664:	0000b724 	muli	zero,zero,732
    b668:	0000b6a8 	cmpgeui	zero,zero,730
    b66c:	0000b780 	call	b78 <_malloc_r+0xbc>
    b670:	0000b780 	call	b78 <_malloc_r+0xbc>
    b674:	0000b8a0 	cmpeqi	zero,zero,738
    b678:	0000b6a8 	cmpgeui	zero,zero,730
    b67c:	0000b6b8 	rdprs	zero,zero,730
    b680:	0000b6b8 	rdprs	zero,zero,730
    b684:	0000b6b8 	rdprs	zero,zero,730
    b688:	0000b8b8 	rdprs	zero,zero,738
    b68c:	a98ab03a 	or	r5,r21,r6
    b690:	94be0044 	addi	r18,r18,-2047
    b694:	28007e1e 	bne	r5,zero,b890 <__divdf3+0x320>
    b698:	8c400094 	ori	r17,r17,2
    b69c:	002b883a 	mov	r21,zero
    b6a0:	00c00084 	movi	r3,2
    b6a4:	003fe106 	br	b62c <__divdf3+0xbc>
    b6a8:	e02d883a 	mov	r22,fp
    b6ac:	a821883a 	mov	r16,r21
    b6b0:	2827883a 	mov	r19,r5
    b6b4:	182f883a 	mov	r23,r3
    b6b8:	b88000a0 	cmpeqi	r2,r23,2
    b6bc:	1001ab1e 	bne	r2,zero,bd6c <__divdf3+0x7fc>
    b6c0:	b88000e0 	cmpeqi	r2,r23,3
    b6c4:	1001f91e 	bne	r2,zero,beac <__divdf3+0x93c>
    b6c8:	b8800060 	cmpeqi	r2,r23,1
    b6cc:	1000141e 	bne	r2,zero,b720 <__divdf3+0x1b0>
    b6d0:	9500ffc4 	addi	r20,r18,1023
    b6d4:	b00d883a 	mov	r6,r22
    b6d8:	0501870e 	bge	zero,r20,bcf8 <__divdf3+0x788>
    b6dc:	988001cc 	andi	r2,r19,7
    b6e0:	1001c11e 	bne	r2,zero,bde8 <__divdf3+0x878>
    b6e4:	9826d0fa 	srli	r19,r19,3
    b6e8:	8080402c 	andhi	r2,r16,256
    b6ec:	10000426 	beq	r2,zero,b700 <__divdf3+0x190>
    b6f0:	00bfc034 	movhi	r2,65280
    b6f4:	10bfffc4 	addi	r2,r2,-1
    b6f8:	80a0703a 	and	r16,r16,r2
    b6fc:	95010004 	addi	r20,r18,1024
    b700:	a081ffc8 	cmpgei	r2,r20,2047
    b704:	10001e1e 	bne	r2,zero,b780 <__divdf3+0x210>
    b708:	8006977a 	slli	r3,r16,29
    b70c:	8008927a 	slli	r4,r16,9
    b710:	a081ffcc 	andi	r2,r20,2047
    b714:	1ce6b03a 	or	r19,r3,r19
    b718:	2008d33a 	srli	r4,r4,12
    b71c:	00000406 	br	b730 <__divdf3+0x1c0>
    b720:	b00d883a 	mov	r6,r22
    b724:	0005883a 	mov	r2,zero
    b728:	0009883a 	mov	r4,zero
    b72c:	0027883a 	mov	r19,zero
    b730:	1004953a 	slli	r2,r2,20
    b734:	00c00434 	movhi	r3,16
    b738:	300c97fa 	slli	r6,r6,31
    b73c:	18ffffc4 	addi	r3,r3,-1
    b740:	20c6703a 	and	r3,r4,r3
    b744:	1886b03a 	or	r3,r3,r2
    b748:	1986b03a 	or	r3,r3,r6
    b74c:	9805883a 	mov	r2,r19
    b750:	dfc01017 	ldw	ra,64(sp)
    b754:	df000f17 	ldw	fp,60(sp)
    b758:	ddc00e17 	ldw	r23,56(sp)
    b75c:	dd800d17 	ldw	r22,52(sp)
    b760:	dd400c17 	ldw	r21,48(sp)
    b764:	dd000b17 	ldw	r20,44(sp)
    b768:	dcc00a17 	ldw	r19,40(sp)
    b76c:	dc800917 	ldw	r18,36(sp)
    b770:	dc400817 	ldw	r17,32(sp)
    b774:	dc000717 	ldw	r16,28(sp)
    b778:	dec01104 	addi	sp,sp,68
    b77c:	f800283a 	ret
    b780:	0081ffc4 	movi	r2,2047
    b784:	0009883a 	mov	r4,zero
    b788:	0027883a 	mov	r19,zero
    b78c:	003fe806 	br	b730 <__divdf3+0x1c0>
    b790:	a98ab03a 	or	r5,r21,r6
    b794:	28003a26 	beq	r5,zero,b880 <__divdf3+0x310>
    b798:	a8014926 	beq	r21,zero,bcc0 <__divdf3+0x750>
    b79c:	a809883a 	mov	r4,r21
    b7a0:	d9800015 	stw	r6,0(sp)
    b7a4:	000d4b80 	call	d4b8 <__clzsi2>
    b7a8:	d9800017 	ldw	r6,0(sp)
    b7ac:	11fffd44 	addi	r7,r2,-11
    b7b0:	00c00744 	movi	r3,29
    b7b4:	117ffe04 	addi	r5,r2,-8
    b7b8:	19c7c83a 	sub	r3,r3,r7
    b7bc:	a948983a 	sll	r4,r21,r5
    b7c0:	30c6d83a 	srl	r3,r6,r3
    b7c4:	314a983a 	sll	r5,r6,r5
    b7c8:	192ab03a 	or	r21,r3,r4
    b7cc:	1485883a 	add	r2,r2,r18
    b7d0:	1480fcc4 	addi	r18,r2,1011
    b7d4:	0007883a 	mov	r3,zero
    b7d8:	003f9406 	br	b62c <__divdf3+0xbc>
    b7dc:	2460b03a 	or	r16,r4,r17
    b7e0:	202b883a 	mov	r21,r4
    b7e4:	80002126 	beq	r16,zero,b86c <__divdf3+0x2fc>
    b7e8:	d9c00115 	stw	r7,4(sp)
    b7ec:	d9800015 	stw	r6,0(sp)
    b7f0:	88012826 	beq	r17,zero,bc94 <__divdf3+0x724>
    b7f4:	8809883a 	mov	r4,r17
    b7f8:	000d4b80 	call	d4b8 <__clzsi2>
    b7fc:	d9800017 	ldw	r6,0(sp)
    b800:	d9c00117 	ldw	r7,4(sp)
    b804:	1025883a 	mov	r18,r2
    b808:	143ffd44 	addi	r16,r2,-11
    b80c:	01000744 	movi	r4,29
    b810:	94fffe04 	addi	r19,r18,-8
    b814:	2409c83a 	sub	r4,r4,r16
    b818:	8cca983a 	sll	r5,r17,r19
    b81c:	a908d83a 	srl	r4,r21,r4
    b820:	ace6983a 	sll	r19,r21,r19
    b824:	2160b03a 	or	r16,r4,r5
    b828:	00bf0344 	movi	r2,-1011
    b82c:	14a5c83a 	sub	r18,r2,r18
    b830:	0023883a 	mov	r17,zero
    b834:	002f883a 	mov	r23,zero
    b838:	003f6b06 	br	b5e8 <__divdf3+0x78>
    b83c:	2460b03a 	or	r16,r4,r17
    b840:	8000051e 	bne	r16,zero,b858 <__divdf3+0x2e8>
    b844:	0027883a 	mov	r19,zero
    b848:	04400204 	movi	r17,8
    b84c:	0481ffc4 	movi	r18,2047
    b850:	05c00084 	movi	r23,2
    b854:	003f6406 	br	b5e8 <__divdf3+0x78>
    b858:	8821883a 	mov	r16,r17
    b85c:	0481ffc4 	movi	r18,2047
    b860:	04400304 	movi	r17,12
    b864:	05c000c4 	movi	r23,3
    b868:	003f5f06 	br	b5e8 <__divdf3+0x78>
    b86c:	0027883a 	mov	r19,zero
    b870:	04400104 	movi	r17,4
    b874:	0025883a 	mov	r18,zero
    b878:	05c00044 	movi	r23,1
    b87c:	003f5a06 	br	b5e8 <__divdf3+0x78>
    b880:	8c400054 	ori	r17,r17,1
    b884:	002b883a 	mov	r21,zero
    b888:	00c00044 	movi	r3,1
    b88c:	003f6706 	br	b62c <__divdf3+0xbc>
    b890:	8c4000d4 	ori	r17,r17,3
    b894:	300b883a 	mov	r5,r6
    b898:	00c000c4 	movi	r3,3
    b89c:	003f6306 	br	b62c <__divdf3+0xbc>
    b8a0:	01000434 	movhi	r4,16
    b8a4:	000d883a 	mov	r6,zero
    b8a8:	213fffc4 	addi	r4,r4,-1
    b8ac:	04ffffc4 	movi	r19,-1
    b8b0:	0081ffc4 	movi	r2,2047
    b8b4:	003f9e06 	br	b730 <__divdf3+0x1c0>
    b8b8:	8080022c 	andhi	r2,r16,8
    b8bc:	1000d426 	beq	r2,zero,bc10 <__divdf3+0x6a0>
    b8c0:	a880022c 	andhi	r2,r21,8
    b8c4:	1000d21e 	bne	r2,zero,bc10 <__divdf3+0x6a0>
    b8c8:	00800434 	movhi	r2,16
    b8cc:	a9000234 	orhi	r4,r21,8
    b8d0:	10bfffc4 	addi	r2,r2,-1
    b8d4:	2088703a 	and	r4,r4,r2
    b8d8:	e00d883a 	mov	r6,fp
    b8dc:	2827883a 	mov	r19,r5
    b8e0:	003ff306 	br	b8b0 <__divdf3+0x340>
    b8e4:	ac00e536 	bltu	r21,r16,bc7c <__divdf3+0x70c>
    b8e8:	ac00e326 	beq	r21,r16,bc78 <__divdf3+0x708>
    b8ec:	94bfffc4 	addi	r18,r18,-1
    b8f0:	0029883a 	mov	r20,zero
    b8f4:	280ed63a 	srli	r7,r5,24
    b8f8:	a82a923a 	slli	r21,r21,8
    b8fc:	2804923a 	slli	r2,r5,8
    b900:	8009883a 	mov	r4,r16
    b904:	3d62b03a 	or	r17,r7,r21
    b908:	882ad43a 	srli	r21,r17,16
    b90c:	d9800115 	stw	r6,4(sp)
    b910:	d8800015 	stw	r2,0(sp)
    b914:	a80b883a 	mov	r5,r21
    b918:	000aae80 	call	aae8 <__udivsi3>
    b91c:	8f3fffcc 	andi	fp,r17,65535
    b920:	100b883a 	mov	r5,r2
    b924:	e009883a 	mov	r4,fp
    b928:	102f883a 	mov	r23,r2
    b92c:	000aba80 	call	aba8 <__mulsi3>
    b930:	a80b883a 	mov	r5,r21
    b934:	8009883a 	mov	r4,r16
    b938:	102d883a 	mov	r22,r2
    b93c:	000ab4c0 	call	ab4c <__umodsi3>
    b940:	1006943a 	slli	r3,r2,16
    b944:	9804d43a 	srli	r2,r19,16
    b948:	d9800117 	ldw	r6,4(sp)
    b94c:	10c4b03a 	or	r2,r2,r3
    b950:	1580042e 	bgeu	r2,r22,b964 <__divdf3+0x3f4>
    b954:	1445883a 	add	r2,r2,r17
    b958:	b8ffffc4 	addi	r3,r23,-1
    b95c:	1441102e 	bgeu	r2,r17,bda0 <__divdf3+0x830>
    b960:	182f883a 	mov	r23,r3
    b964:	15adc83a 	sub	r22,r2,r22
    b968:	a80b883a 	mov	r5,r21
    b96c:	b009883a 	mov	r4,r22
    b970:	d9800215 	stw	r6,8(sp)
    b974:	000aae80 	call	aae8 <__udivsi3>
    b978:	100b883a 	mov	r5,r2
    b97c:	e009883a 	mov	r4,fp
    b980:	1021883a 	mov	r16,r2
    b984:	000aba80 	call	aba8 <__mulsi3>
    b988:	a80b883a 	mov	r5,r21
    b98c:	b009883a 	mov	r4,r22
    b990:	d8800115 	stw	r2,4(sp)
    b994:	000ab4c0 	call	ab4c <__umodsi3>
    b998:	1004943a 	slli	r2,r2,16
    b99c:	da000117 	ldw	r8,4(sp)
    b9a0:	9cffffcc 	andi	r19,r19,65535
    b9a4:	9884b03a 	or	r2,r19,r2
    b9a8:	d9800217 	ldw	r6,8(sp)
    b9ac:	1200042e 	bgeu	r2,r8,b9c0 <__divdf3+0x450>
    b9b0:	1445883a 	add	r2,r2,r17
    b9b4:	80ffffc4 	addi	r3,r16,-1
    b9b8:	1440f52e 	bgeu	r2,r17,bd90 <__divdf3+0x820>
    b9bc:	1821883a 	mov	r16,r3
    b9c0:	b808943a 	slli	r4,r23,16
    b9c4:	d8c00017 	ldw	r3,0(sp)
    b9c8:	1211c83a 	sub	r8,r2,r8
    b9cc:	2420b03a 	or	r16,r4,r16
    b9d0:	182cd43a 	srli	r22,r3,16
    b9d4:	1dffffcc 	andi	r23,r3,65535
    b9d8:	8026d43a 	srli	r19,r16,16
    b9dc:	80ffffcc 	andi	r3,r16,65535
    b9e0:	180b883a 	mov	r5,r3
    b9e4:	b809883a 	mov	r4,r23
    b9e8:	d9800615 	stw	r6,24(sp)
    b9ec:	da000415 	stw	r8,16(sp)
    b9f0:	d8c00515 	stw	r3,20(sp)
    b9f4:	000aba80 	call	aba8 <__mulsi3>
    b9f8:	b80b883a 	mov	r5,r23
    b9fc:	9809883a 	mov	r4,r19
    ba00:	d8800315 	stw	r2,12(sp)
    ba04:	000aba80 	call	aba8 <__mulsi3>
    ba08:	b00b883a 	mov	r5,r22
    ba0c:	9809883a 	mov	r4,r19
    ba10:	d8800215 	stw	r2,8(sp)
    ba14:	000aba80 	call	aba8 <__mulsi3>
    ba18:	d8c00517 	ldw	r3,20(sp)
    ba1c:	b009883a 	mov	r4,r22
    ba20:	d8800115 	stw	r2,4(sp)
    ba24:	180b883a 	mov	r5,r3
    ba28:	000aba80 	call	aba8 <__mulsi3>
    ba2c:	da400317 	ldw	r9,12(sp)
    ba30:	dac00217 	ldw	r11,8(sp)
    ba34:	da800117 	ldw	r10,4(sp)
    ba38:	4806d43a 	srli	r3,r9,16
    ba3c:	12c5883a 	add	r2,r2,r11
    ba40:	da000417 	ldw	r8,16(sp)
    ba44:	1887883a 	add	r3,r3,r2
    ba48:	d9800617 	ldw	r6,24(sp)
    ba4c:	1ac0022e 	bgeu	r3,r11,ba58 <__divdf3+0x4e8>
    ba50:	00800074 	movhi	r2,1
    ba54:	5095883a 	add	r10,r10,r2
    ba58:	1826d43a 	srli	r19,r3,16
    ba5c:	1806943a 	slli	r3,r3,16
    ba60:	4a7fffcc 	andi	r9,r9,65535
    ba64:	9aa7883a 	add	r19,r19,r10
    ba68:	1a47883a 	add	r3,r3,r9
    ba6c:	44c07736 	bltu	r8,r19,bc4c <__divdf3+0x6dc>
    ba70:	44c07526 	beq	r8,r19,bc48 <__divdf3+0x6d8>
    ba74:	a0c7c83a 	sub	r3,r20,r3
    ba78:	44c5c83a 	sub	r2,r8,r19
    ba7c:	a0e7803a 	cmpltu	r19,r20,r3
    ba80:	d8c00115 	stw	r3,4(sp)
    ba84:	14e7c83a 	sub	r19,r2,r19
    ba88:	9500ffc4 	addi	r20,r18,1023
    ba8c:	8cc0cd26 	beq	r17,r19,bdc4 <__divdf3+0x854>
    ba90:	a80b883a 	mov	r5,r21
    ba94:	9809883a 	mov	r4,r19
    ba98:	d9800415 	stw	r6,16(sp)
    ba9c:	000aae80 	call	aae8 <__udivsi3>
    baa0:	100b883a 	mov	r5,r2
    baa4:	e009883a 	mov	r4,fp
    baa8:	d8800315 	stw	r2,12(sp)
    baac:	000aba80 	call	aba8 <__mulsi3>
    bab0:	9809883a 	mov	r4,r19
    bab4:	a80b883a 	mov	r5,r21
    bab8:	d8800215 	stw	r2,8(sp)
    babc:	000ab4c0 	call	ab4c <__umodsi3>
    bac0:	d8c00117 	ldw	r3,4(sp)
    bac4:	1008943a 	slli	r4,r2,16
    bac8:	da400217 	ldw	r9,8(sp)
    bacc:	1804d43a 	srli	r2,r3,16
    bad0:	da000317 	ldw	r8,12(sp)
    bad4:	d9800417 	ldw	r6,16(sp)
    bad8:	1104b03a 	or	r2,r2,r4
    badc:	1240062e 	bgeu	r2,r9,baf8 <__divdf3+0x588>
    bae0:	1445883a 	add	r2,r2,r17
    bae4:	413fffc4 	addi	r4,r8,-1
    bae8:	1440bd36 	bltu	r2,r17,bde0 <__divdf3+0x870>
    baec:	1240bc2e 	bgeu	r2,r9,bde0 <__divdf3+0x870>
    baf0:	423fff84 	addi	r8,r8,-2
    baf4:	1445883a 	add	r2,r2,r17
    baf8:	1267c83a 	sub	r19,r2,r9
    bafc:	a80b883a 	mov	r5,r21
    bb00:	9809883a 	mov	r4,r19
    bb04:	d8c00415 	stw	r3,16(sp)
    bb08:	d9800315 	stw	r6,12(sp)
    bb0c:	da000215 	stw	r8,8(sp)
    bb10:	000aae80 	call	aae8 <__udivsi3>
    bb14:	e009883a 	mov	r4,fp
    bb18:	100b883a 	mov	r5,r2
    bb1c:	d8800115 	stw	r2,4(sp)
    bb20:	000aba80 	call	aba8 <__mulsi3>
    bb24:	a80b883a 	mov	r5,r21
    bb28:	9809883a 	mov	r4,r19
    bb2c:	1039883a 	mov	fp,r2
    bb30:	000ab4c0 	call	ab4c <__umodsi3>
    bb34:	d8c00417 	ldw	r3,16(sp)
    bb38:	1004943a 	slli	r2,r2,16
    bb3c:	da400117 	ldw	r9,4(sp)
    bb40:	18ffffcc 	andi	r3,r3,65535
    bb44:	1886b03a 	or	r3,r3,r2
    bb48:	da000217 	ldw	r8,8(sp)
    bb4c:	d9800317 	ldw	r6,12(sp)
    bb50:	1f00062e 	bgeu	r3,fp,bb6c <__divdf3+0x5fc>
    bb54:	1c47883a 	add	r3,r3,r17
    bb58:	48bfffc4 	addi	r2,r9,-1
    bb5c:	1c409e36 	bltu	r3,r17,bdd8 <__divdf3+0x868>
    bb60:	1f009d2e 	bgeu	r3,fp,bdd8 <__divdf3+0x868>
    bb64:	4a7fff84 	addi	r9,r9,-2
    bb68:	1c47883a 	add	r3,r3,r17
    bb6c:	4010943a 	slli	r8,r8,16
    bb70:	1f2bc83a 	sub	r21,r3,fp
    bb74:	b80b883a 	mov	r5,r23
    bb78:	4266b03a 	or	r19,r8,r9
    bb7c:	98ffffcc 	andi	r3,r19,65535
    bb80:	9838d43a 	srli	fp,r19,16
    bb84:	1809883a 	mov	r4,r3
    bb88:	d9800415 	stw	r6,16(sp)
    bb8c:	d8c00315 	stw	r3,12(sp)
    bb90:	000aba80 	call	aba8 <__mulsi3>
    bb94:	b80b883a 	mov	r5,r23
    bb98:	e009883a 	mov	r4,fp
    bb9c:	d8800215 	stw	r2,8(sp)
    bba0:	000aba80 	call	aba8 <__mulsi3>
    bba4:	e00b883a 	mov	r5,fp
    bba8:	b009883a 	mov	r4,r22
    bbac:	d8800115 	stw	r2,4(sp)
    bbb0:	000aba80 	call	aba8 <__mulsi3>
    bbb4:	d8c00317 	ldw	r3,12(sp)
    bbb8:	b009883a 	mov	r4,r22
    bbbc:	102f883a 	mov	r23,r2
    bbc0:	180b883a 	mov	r5,r3
    bbc4:	000aba80 	call	aba8 <__mulsi3>
    bbc8:	da000217 	ldw	r8,8(sp)
    bbcc:	da400117 	ldw	r9,4(sp)
    bbd0:	d9800417 	ldw	r6,16(sp)
    bbd4:	4006d43a 	srli	r3,r8,16
    bbd8:	1245883a 	add	r2,r2,r9
    bbdc:	1885883a 	add	r2,r3,r2
    bbe0:	1240022e 	bgeu	r2,r9,bbec <__divdf3+0x67c>
    bbe4:	00c00074 	movhi	r3,1
    bbe8:	b8ef883a 	add	r23,r23,r3
    bbec:	1008d43a 	srli	r4,r2,16
    bbf0:	1004943a 	slli	r2,r2,16
    bbf4:	423fffcc 	andi	r8,r8,65535
    bbf8:	25c9883a 	add	r4,r4,r23
    bbfc:	1205883a 	add	r2,r2,r8
    bc00:	a9000a36 	bltu	r21,r4,bc2c <__divdf3+0x6bc>
    bc04:	a9000826 	beq	r21,r4,bc28 <__divdf3+0x6b8>
    bc08:	9cc00054 	ori	r19,r19,1
    bc0c:	003eb206 	br	b6d8 <__divdf3+0x168>
    bc10:	00800434 	movhi	r2,16
    bc14:	81000234 	orhi	r4,r16,8
    bc18:	10bfffc4 	addi	r2,r2,-1
    bc1c:	2088703a 	and	r4,r4,r2
    bc20:	a00d883a 	mov	r6,r20
    bc24:	003f2206 	br	b8b0 <__divdf3+0x340>
    bc28:	103eab26 	beq	r2,zero,b6d8 <__divdf3+0x168>
    bc2c:	8d47883a 	add	r3,r17,r21
    bc30:	997fffc4 	addi	r5,r19,-1
    bc34:	1c405e36 	bltu	r3,r17,bdb0 <__divdf3+0x840>
    bc38:	19007b36 	bltu	r3,r4,be28 <__divdf3+0x8b8>
    bc3c:	1900a126 	beq	r3,r4,bec4 <__divdf3+0x954>
    bc40:	2827883a 	mov	r19,r5
    bc44:	003ff006 	br	bc08 <__divdf3+0x698>
    bc48:	a0ff8a2e 	bgeu	r20,r3,ba74 <__divdf3+0x504>
    bc4c:	d8800017 	ldw	r2,0(sp)
    bc50:	a0a9883a 	add	r20,r20,r2
    bc54:	a085803a 	cmpltu	r2,r20,r2
    bc58:	1445883a 	add	r2,r2,r17
    bc5c:	4091883a 	add	r8,r8,r2
    bc60:	80bfffc4 	addi	r2,r16,-1
    bc64:	8a00462e 	bgeu	r17,r8,bd80 <__divdf3+0x810>
    bc68:	44c06836 	bltu	r8,r19,be0c <__divdf3+0x89c>
    bc6c:	9a006626 	beq	r19,r8,be08 <__divdf3+0x898>
    bc70:	1021883a 	mov	r16,r2
    bc74:	003f7f06 	br	ba74 <__divdf3+0x504>
    bc78:	997f1c36 	bltu	r19,r5,b8ec <__divdf3+0x37c>
    bc7c:	800697fa 	slli	r3,r16,31
    bc80:	9804d07a 	srli	r2,r19,1
    bc84:	982897fa 	slli	r20,r19,31
    bc88:	8020d07a 	srli	r16,r16,1
    bc8c:	18a6b03a 	or	r19,r3,r2
    bc90:	003f1806 	br	b8f4 <__divdf3+0x384>
    bc94:	000d4b80 	call	d4b8 <__clzsi2>
    bc98:	14000544 	addi	r16,r2,21
    bc9c:	81000748 	cmpgei	r4,r16,29
    bca0:	14800804 	addi	r18,r2,32
    bca4:	d9800017 	ldw	r6,0(sp)
    bca8:	d9c00117 	ldw	r7,4(sp)
    bcac:	203ed726 	beq	r4,zero,b80c <__divdf3+0x29c>
    bcb0:	113ffe04 	addi	r4,r2,-8
    bcb4:	9920983a 	sll	r16,r19,r4
    bcb8:	0027883a 	mov	r19,zero
    bcbc:	003eda06 	br	b828 <__divdf3+0x2b8>
    bcc0:	3009883a 	mov	r4,r6
    bcc4:	d9800015 	stw	r6,0(sp)
    bcc8:	000d4b80 	call	d4b8 <__clzsi2>
    bccc:	11c00544 	addi	r7,r2,21
    bcd0:	38c00748 	cmpgei	r3,r7,29
    bcd4:	1009883a 	mov	r4,r2
    bcd8:	d9800017 	ldw	r6,0(sp)
    bcdc:	10800804 	addi	r2,r2,32
    bce0:	183eb326 	beq	r3,zero,b7b0 <__divdf3+0x240>
    bce4:	213ffe04 	addi	r4,r4,-8
    bce8:	312a983a 	sll	r21,r6,r4
    bcec:	000b883a 	mov	r5,zero
    bcf0:	003eb606 	br	b7cc <__divdf3+0x25c>
    bcf4:	04ffffc4 	movi	r19,-1
    bcf8:	01000044 	movi	r4,1
    bcfc:	2509c83a 	sub	r4,r4,r20
    bd00:	20800e48 	cmpgei	r2,r4,57
    bd04:	103e871e 	bne	r2,zero,b724 <__divdf3+0x1b4>
    bd08:	20800808 	cmpgei	r2,r4,32
    bd0c:	10004e1e 	bne	r2,zero,be48 <__divdf3+0x8d8>
    bd10:	90810784 	addi	r2,r18,1054
    bd14:	8086983a 	sll	r3,r16,r2
    bd18:	990ad83a 	srl	r5,r19,r4
    bd1c:	9884983a 	sll	r2,r19,r2
    bd20:	8108d83a 	srl	r4,r16,r4
    bd24:	1966b03a 	or	r19,r3,r5
    bd28:	1004c03a 	cmpne	r2,r2,zero
    bd2c:	98a6b03a 	or	r19,r19,r2
    bd30:	988001cc 	andi	r2,r19,7
    bd34:	10000726 	beq	r2,zero,bd54 <__divdf3+0x7e4>
    bd38:	988003cc 	andi	r2,r19,15
    bd3c:	10800120 	cmpeqi	r2,r2,4
    bd40:	1000041e 	bne	r2,zero,bd54 <__divdf3+0x7e4>
    bd44:	98800104 	addi	r2,r19,4
    bd48:	14e7803a 	cmpltu	r19,r2,r19
    bd4c:	24c9883a 	add	r4,r4,r19
    bd50:	1027883a 	mov	r19,r2
    bd54:	2080202c 	andhi	r2,r4,128
    bd58:	10005026 	beq	r2,zero,be9c <__divdf3+0x92c>
    bd5c:	00800044 	movi	r2,1
    bd60:	0009883a 	mov	r4,zero
    bd64:	0027883a 	mov	r19,zero
    bd68:	003e7106 	br	b730 <__divdf3+0x1c0>
    bd6c:	b00d883a 	mov	r6,r22
    bd70:	0081ffc4 	movi	r2,2047
    bd74:	0009883a 	mov	r4,zero
    bd78:	0027883a 	mov	r19,zero
    bd7c:	003e6c06 	br	b730 <__divdf3+0x1c0>
    bd80:	8a3fbb1e 	bne	r17,r8,bc70 <__divdf3+0x700>
    bd84:	d9000017 	ldw	r4,0(sp)
    bd88:	a13fb936 	bltu	r20,r4,bc70 <__divdf3+0x700>
    bd8c:	003fb606 	br	bc68 <__divdf3+0x6f8>
    bd90:	123f0a2e 	bgeu	r2,r8,b9bc <__divdf3+0x44c>
    bd94:	843fff84 	addi	r16,r16,-2
    bd98:	1445883a 	add	r2,r2,r17
    bd9c:	003f0806 	br	b9c0 <__divdf3+0x450>
    bda0:	15beef2e 	bgeu	r2,r22,b960 <__divdf3+0x3f0>
    bda4:	bdffff84 	addi	r23,r23,-2
    bda8:	1445883a 	add	r2,r2,r17
    bdac:	003eed06 	br	b964 <__divdf3+0x3f4>
    bdb0:	2827883a 	mov	r19,r5
    bdb4:	193f941e 	bne	r3,r4,bc08 <__divdf3+0x698>
    bdb8:	d8c00017 	ldw	r3,0(sp)
    bdbc:	18bf921e 	bne	r3,r2,bc08 <__divdf3+0x698>
    bdc0:	003e4506 	br	b6d8 <__divdf3+0x168>
    bdc4:	053fcb0e 	bge	zero,r20,bcf4 <__divdf3+0x784>
    bdc8:	0027883a 	mov	r19,zero
    bdcc:	00c00044 	movi	r3,1
    bdd0:	80e1883a 	add	r16,r16,r3
    bdd4:	003e4406 	br	b6e8 <__divdf3+0x178>
    bdd8:	1013883a 	mov	r9,r2
    bddc:	003f6306 	br	bb6c <__divdf3+0x5fc>
    bde0:	2011883a 	mov	r8,r4
    bde4:	003f4406 	br	baf8 <__divdf3+0x588>
    bde8:	988003cc 	andi	r2,r19,15
    bdec:	10800118 	cmpnei	r2,r2,4
    bdf0:	103e3c26 	beq	r2,zero,b6e4 <__divdf3+0x174>
    bdf4:	98800104 	addi	r2,r19,4
    bdf8:	00fffec4 	movi	r3,-5
    bdfc:	1cc7803a 	cmpltu	r3,r3,r19
    be00:	1026d0fa 	srli	r19,r2,3
    be04:	003ff206 	br	bdd0 <__divdf3+0x860>
    be08:	a0ff992e 	bgeu	r20,r3,bc70 <__divdf3+0x700>
    be0c:	d8800017 	ldw	r2,0(sp)
    be10:	843fff84 	addi	r16,r16,-2
    be14:	a0a9883a 	add	r20,r20,r2
    be18:	a085803a 	cmpltu	r2,r20,r2
    be1c:	1445883a 	add	r2,r2,r17
    be20:	4091883a 	add	r8,r8,r2
    be24:	003f1306 	br	ba74 <__divdf3+0x504>
    be28:	d9c00017 	ldw	r7,0(sp)
    be2c:	9cffff84 	addi	r19,r19,-2
    be30:	39cb883a 	add	r5,r7,r7
    be34:	29cf803a 	cmpltu	r7,r5,r7
    be38:	3c4f883a 	add	r7,r7,r17
    be3c:	19c7883a 	add	r3,r3,r7
    be40:	d9400015 	stw	r5,0(sp)
    be44:	003fdb06 	br	bdb4 <__divdf3+0x844>
    be48:	00bff844 	movi	r2,-31
    be4c:	1529c83a 	sub	r20,r2,r20
    be50:	21000820 	cmpeqi	r4,r4,32
    be54:	8528d83a 	srl	r20,r16,r20
    be58:	2000031e 	bne	r4,zero,be68 <__divdf3+0x8f8>
    be5c:	90810f84 	addi	r2,r18,1086
    be60:	8088983a 	sll	r4,r16,r2
    be64:	9926b03a 	or	r19,r19,r4
    be68:	9826c03a 	cmpne	r19,r19,zero
    be6c:	9d26b03a 	or	r19,r19,r20
    be70:	9c0001cc 	andi	r16,r19,7
    be74:	8000051e 	bne	r16,zero,be8c <__divdf3+0x91c>
    be78:	0009883a 	mov	r4,zero
    be7c:	9826d0fa 	srli	r19,r19,3
    be80:	0005883a 	mov	r2,zero
    be84:	9c26b03a 	or	r19,r19,r16
    be88:	003e2906 	br	b730 <__divdf3+0x1c0>
    be8c:	988003cc 	andi	r2,r19,15
    be90:	10800118 	cmpnei	r2,r2,4
    be94:	0009883a 	mov	r4,zero
    be98:	103faa1e 	bne	r2,zero,bd44 <__divdf3+0x7d4>
    be9c:	2004927a 	slli	r2,r4,9
    bea0:	2020977a 	slli	r16,r4,29
    bea4:	1008d33a 	srli	r4,r2,12
    bea8:	003ff406 	br	be7c <__divdf3+0x90c>
    beac:	00800434 	movhi	r2,16
    beb0:	81000234 	orhi	r4,r16,8
    beb4:	10bfffc4 	addi	r2,r2,-1
    beb8:	2088703a 	and	r4,r4,r2
    bebc:	b00d883a 	mov	r6,r22
    bec0:	003e7b06 	br	b8b0 <__divdf3+0x340>
    bec4:	d9c00017 	ldw	r7,0(sp)
    bec8:	38bfd736 	bltu	r7,r2,be28 <__divdf3+0x8b8>
    becc:	2827883a 	mov	r19,r5
    bed0:	003fb906 	br	bdb8 <__divdf3+0x848>

0000bed4 <__eqdf2>:
    bed4:	2810d53a 	srli	r8,r5,20
    bed8:	3806d53a 	srli	r3,r7,20
    bedc:	00800434 	movhi	r2,16
    bee0:	4201ffcc 	andi	r8,r8,2047
    bee4:	10bfffc4 	addi	r2,r2,-1
    bee8:	4281ffd8 	cmpnei	r10,r8,2047
    beec:	2892703a 	and	r9,r5,r2
    bef0:	18c1ffcc 	andi	r3,r3,2047
    bef4:	3884703a 	and	r2,r7,r2
    bef8:	280ad7fa 	srli	r5,r5,31
    befc:	380ed7fa 	srli	r7,r7,31
    bf00:	50000626 	beq	r10,zero,bf1c <__eqdf2+0x48>
    bf04:	1a81ffe0 	cmpeqi	r10,r3,2047
    bf08:	5000021e 	bne	r10,zero,bf14 <__eqdf2+0x40>
    bf0c:	40c0011e 	bne	r8,r3,bf14 <__eqdf2+0x40>
    bf10:	48800826 	beq	r9,r2,bf34 <__eqdf2+0x60>
    bf14:	00800044 	movi	r2,1
    bf18:	f800283a 	ret
    bf1c:	4914b03a 	or	r10,r9,r4
    bf20:	503ffc1e 	bne	r10,zero,bf14 <__eqdf2+0x40>
    bf24:	18c1ffd8 	cmpnei	r3,r3,2047
    bf28:	183ffa1e 	bne	r3,zero,bf14 <__eqdf2+0x40>
    bf2c:	1184b03a 	or	r2,r2,r6
    bf30:	103ff81e 	bne	r2,zero,bf14 <__eqdf2+0x40>
    bf34:	21bff71e 	bne	r4,r6,bf14 <__eqdf2+0x40>
    bf38:	29c00426 	beq	r5,r7,bf4c <__eqdf2+0x78>
    bf3c:	403ff51e 	bne	r8,zero,bf14 <__eqdf2+0x40>
    bf40:	4904b03a 	or	r2,r9,r4
    bf44:	1004c03a 	cmpne	r2,r2,zero
    bf48:	f800283a 	ret
    bf4c:	0005883a 	mov	r2,zero
    bf50:	f800283a 	ret

0000bf54 <__gedf2>:
    bf54:	2810d53a 	srli	r8,r5,20
    bf58:	3812d53a 	srli	r9,r7,20
    bf5c:	00800434 	movhi	r2,16
    bf60:	4201ffcc 	andi	r8,r8,2047
    bf64:	10bfffc4 	addi	r2,r2,-1
    bf68:	4281ffd8 	cmpnei	r10,r8,2047
    bf6c:	2896703a 	and	r11,r5,r2
    bf70:	3886703a 	and	r3,r7,r2
    bf74:	280ad7fa 	srli	r5,r5,31
    bf78:	4a41ffcc 	andi	r9,r9,2047
    bf7c:	3804d7fa 	srli	r2,r7,31
    bf80:	50000b26 	beq	r10,zero,bfb0 <__gedf2+0x5c>
    bf84:	49c1ffd8 	cmpnei	r7,r9,2047
    bf88:	38000d26 	beq	r7,zero,bfc0 <__gedf2+0x6c>
    bf8c:	4000191e 	bne	r8,zero,bff4 <__gedf2+0xa0>
    bf90:	5914b03a 	or	r10,r11,r4
    bf94:	500f003a 	cmpeq	r7,r10,zero
    bf98:	4800131e 	bne	r9,zero,bfe8 <__gedf2+0x94>
    bf9c:	1998b03a 	or	r12,r3,r6
    bfa0:	6000111e 	bne	r12,zero,bfe8 <__gedf2+0x94>
    bfa4:	50000a1e 	bne	r10,zero,bfd0 <__gedf2+0x7c>
    bfa8:	0005883a 	mov	r2,zero
    bfac:	f800283a 	ret
    bfb0:	590eb03a 	or	r7,r11,r4
    bfb4:	38001e1e 	bne	r7,zero,c030 <__gedf2+0xdc>
    bfb8:	49c1ffe0 	cmpeqi	r7,r9,2047
    bfbc:	38000d26 	beq	r7,zero,bff4 <__gedf2+0xa0>
    bfc0:	198eb03a 	or	r7,r3,r6
    bfc4:	38001a1e 	bne	r7,zero,c030 <__gedf2+0xdc>
    bfc8:	40000526 	beq	r8,zero,bfe0 <__gedf2+0x8c>
    bfcc:	28800d26 	beq	r5,r2,c004 <__gedf2+0xb0>
    bfd0:	00800044 	movi	r2,1
    bfd4:	28000626 	beq	r5,zero,bff0 <__gedf2+0x9c>
    bfd8:	00bfffc4 	movi	r2,-1
    bfdc:	f800283a 	ret
    bfe0:	590eb03a 	or	r7,r11,r4
    bfe4:	380f003a 	cmpeq	r7,r7,zero
    bfe8:	383ff826 	beq	r7,zero,bfcc <__gedf2+0x78>
    bfec:	103ffa26 	beq	r2,zero,bfd8 <__gedf2+0x84>
    bff0:	f800283a 	ret
    bff4:	483ff51e 	bne	r9,zero,bfcc <__gedf2+0x78>
    bff8:	198eb03a 	or	r7,r3,r6
    bffc:	383ff31e 	bne	r7,zero,bfcc <__gedf2+0x78>
    c000:	003ff306 	br	bfd0 <__gedf2+0x7c>
    c004:	4a000716 	blt	r9,r8,c024 <__gedf2+0xd0>
    c008:	427ff816 	blt	r8,r9,bfec <__gedf2+0x98>
    c00c:	1afff036 	bltu	r3,r11,bfd0 <__gedf2+0x7c>
    c010:	58c00926 	beq	r11,r3,c038 <__gedf2+0xe4>
    c014:	58ffe42e 	bgeu	r11,r3,bfa8 <__gedf2+0x54>
    c018:	283fef26 	beq	r5,zero,bfd8 <__gedf2+0x84>
    c01c:	2805883a 	mov	r2,r5
    c020:	f800283a 	ret
    c024:	103fec1e 	bne	r2,zero,bfd8 <__gedf2+0x84>
    c028:	00800044 	movi	r2,1
    c02c:	f800283a 	ret
    c030:	00bfff84 	movi	r2,-2
    c034:	f800283a 	ret
    c038:	313fe536 	bltu	r6,r4,bfd0 <__gedf2+0x7c>
    c03c:	21bfda2e 	bgeu	r4,r6,bfa8 <__gedf2+0x54>
    c040:	003ff506 	br	c018 <__gedf2+0xc4>

0000c044 <__ledf2>:
    c044:	2810d53a 	srli	r8,r5,20
    c048:	3812d53a 	srli	r9,r7,20
    c04c:	00800434 	movhi	r2,16
    c050:	4201ffcc 	andi	r8,r8,2047
    c054:	10bfffc4 	addi	r2,r2,-1
    c058:	4281ffd8 	cmpnei	r10,r8,2047
    c05c:	2896703a 	and	r11,r5,r2
    c060:	3886703a 	and	r3,r7,r2
    c064:	280ad7fa 	srli	r5,r5,31
    c068:	4a41ffcc 	andi	r9,r9,2047
    c06c:	3804d7fa 	srli	r2,r7,31
    c070:	50000b26 	beq	r10,zero,c0a0 <__ledf2+0x5c>
    c074:	49c1ffd8 	cmpnei	r7,r9,2047
    c078:	38000d26 	beq	r7,zero,c0b0 <__ledf2+0x6c>
    c07c:	40001b1e 	bne	r8,zero,c0ec <__ledf2+0xa8>
    c080:	5914b03a 	or	r10,r11,r4
    c084:	500f003a 	cmpeq	r7,r10,zero
    c088:	48000e1e 	bne	r9,zero,c0c4 <__ledf2+0x80>
    c08c:	1998b03a 	or	r12,r3,r6
    c090:	60000c1e 	bne	r12,zero,c0c4 <__ledf2+0x80>
    c094:	50000d1e 	bne	r10,zero,c0cc <__ledf2+0x88>
    c098:	0005883a 	mov	r2,zero
    c09c:	f800283a 	ret
    c0a0:	590eb03a 	or	r7,r11,r4
    c0a4:	38000d1e 	bne	r7,zero,c0dc <__ledf2+0x98>
    c0a8:	49c1ffe0 	cmpeqi	r7,r9,2047
    c0ac:	38000f26 	beq	r7,zero,c0ec <__ledf2+0xa8>
    c0b0:	198eb03a 	or	r7,r3,r6
    c0b4:	3800091e 	bne	r7,zero,c0dc <__ledf2+0x98>
    c0b8:	4000031e 	bne	r8,zero,c0c8 <__ledf2+0x84>
    c0bc:	590eb03a 	or	r7,r11,r4
    c0c0:	380f003a 	cmpeq	r7,r7,zero
    c0c4:	3800071e 	bne	r7,zero,c0e4 <__ledf2+0xa0>
    c0c8:	28800c26 	beq	r5,r2,c0fc <__ledf2+0xb8>
    c0cc:	00800044 	movi	r2,1
    c0d0:	28000526 	beq	r5,zero,c0e8 <__ledf2+0xa4>
    c0d4:	00bfffc4 	movi	r2,-1
    c0d8:	f800283a 	ret
    c0dc:	00800084 	movi	r2,2
    c0e0:	f800283a 	ret
    c0e4:	103ffb26 	beq	r2,zero,c0d4 <__ledf2+0x90>
    c0e8:	f800283a 	ret
    c0ec:	483ff61e 	bne	r9,zero,c0c8 <__ledf2+0x84>
    c0f0:	198eb03a 	or	r7,r3,r6
    c0f4:	383ff41e 	bne	r7,zero,c0c8 <__ledf2+0x84>
    c0f8:	003ff406 	br	c0cc <__ledf2+0x88>
    c0fc:	4a00030e 	bge	r9,r8,c10c <__ledf2+0xc8>
    c100:	103ff41e 	bne	r2,zero,c0d4 <__ledf2+0x90>
    c104:	00800044 	movi	r2,1
    c108:	f800283a 	ret
    c10c:	427ff516 	blt	r8,r9,c0e4 <__ledf2+0xa0>
    c110:	1affee36 	bltu	r3,r11,c0cc <__ledf2+0x88>
    c114:	58c00426 	beq	r11,r3,c128 <__ledf2+0xe4>
    c118:	58ffdf2e 	bgeu	r11,r3,c098 <__ledf2+0x54>
    c11c:	283fed26 	beq	r5,zero,c0d4 <__ledf2+0x90>
    c120:	2805883a 	mov	r2,r5
    c124:	f800283a 	ret
    c128:	313fe836 	bltu	r6,r4,c0cc <__ledf2+0x88>
    c12c:	21bfda2e 	bgeu	r4,r6,c098 <__ledf2+0x54>
    c130:	003ffa06 	br	c11c <__ledf2+0xd8>

0000c134 <__muldf3>:
    c134:	2810d53a 	srli	r8,r5,20
    c138:	deffef04 	addi	sp,sp,-68
    c13c:	dc000715 	stw	r16,28(sp)
    c140:	04000434 	movhi	r16,16
    c144:	dd000b15 	stw	r20,44(sp)
    c148:	dc800915 	stw	r18,36(sp)
    c14c:	843fffc4 	addi	r16,r16,-1
    c150:	dfc01015 	stw	ra,64(sp)
    c154:	df000f15 	stw	fp,60(sp)
    c158:	ddc00e15 	stw	r23,56(sp)
    c15c:	dd800d15 	stw	r22,52(sp)
    c160:	dd400c15 	stw	r21,48(sp)
    c164:	dcc00a15 	stw	r19,40(sp)
    c168:	dc400815 	stw	r17,32(sp)
    c16c:	4201ffcc 	andi	r8,r8,2047
    c170:	2025883a 	mov	r18,r4
    c174:	2c20703a 	and	r16,r5,r16
    c178:	2828d7fa 	srli	r20,r5,31
    c17c:	40005d26 	beq	r8,zero,c2f4 <__muldf3+0x1c0>
    c180:	4081ffe0 	cmpeqi	r2,r8,2047
    c184:	1000721e 	bne	r2,zero,c350 <__muldf3+0x21c>
    c188:	802090fa 	slli	r16,r16,3
    c18c:	2006d77a 	srli	r3,r4,29
    c190:	202c90fa 	slli	r22,r4,3
    c194:	423f0044 	addi	r8,r8,-1023
    c198:	1c20b03a 	or	r16,r3,r16
    c19c:	84002034 	orhi	r16,r16,128
    c1a0:	0027883a 	mov	r19,zero
    c1a4:	002f883a 	mov	r23,zero
    c1a8:	3806d53a 	srli	r3,r7,20
    c1ac:	04400434 	movhi	r17,16
    c1b0:	8c7fffc4 	addi	r17,r17,-1
    c1b4:	18c1ffcc 	andi	r3,r3,2047
    c1b8:	3c62703a 	and	r17,r7,r17
    c1bc:	382ad7fa 	srli	r21,r7,31
    c1c0:	18006a26 	beq	r3,zero,c36c <__muldf3+0x238>
    c1c4:	1881ffe0 	cmpeqi	r2,r3,2047
    c1c8:	1000211e 	bne	r2,zero,c250 <__muldf3+0x11c>
    c1cc:	882290fa 	slli	r17,r17,3
    c1d0:	3008d77a 	srli	r4,r6,29
    c1d4:	302490fa 	slli	r18,r6,3
    c1d8:	18ff0044 	addi	r3,r3,-1023
    c1dc:	2462b03a 	or	r17,r4,r17
    c1e0:	40d1883a 	add	r8,r8,r3
    c1e4:	8c402034 	orhi	r17,r17,128
    c1e8:	0007883a 	mov	r3,zero
    c1ec:	98800428 	cmpgeui	r2,r19,16
    c1f0:	a54cf03a 	xor	r6,r20,r21
    c1f4:	42400044 	addi	r9,r8,1
    c1f8:	10009b1e 	bne	r2,zero,c468 <__muldf3+0x334>
    c1fc:	982690ba 	slli	r19,r19,2
    c200:	00800074 	movhi	r2,1
    c204:	9885883a 	add	r2,r19,r2
    c208:	10b08417 	ldw	r2,-15856(r2)
    c20c:	1000683a 	jmp	r2
    c210:	0000c468 	cmpgeui	zero,zero,785
    c214:	0000c270 	cmpltui	zero,zero,777
    c218:	0000c270 	cmpltui	zero,zero,777
    c21c:	0000c26c 	andhi	zero,zero,777
    c220:	0000c27c 	xorhi	zero,zero,777
    c224:	0000c27c 	xorhi	zero,zero,777
    c228:	0000c424 	muli	zero,zero,784
    c22c:	0000c26c 	andhi	zero,zero,777
    c230:	0000c27c 	xorhi	zero,zero,777
    c234:	0000c424 	muli	zero,zero,784
    c238:	0000c27c 	xorhi	zero,zero,777
    c23c:	0000c26c 	andhi	zero,zero,777
    c240:	0000c41c 	xori	zero,zero,784
    c244:	0000c41c 	xori	zero,zero,784
    c248:	0000c41c 	xori	zero,zero,784
    c24c:	0000c43c 	xorhi	zero,zero,784
    c250:	3464b03a 	or	r18,r6,r17
    c254:	4201ffc4 	addi	r8,r8,2047
    c258:	90006c1e 	bne	r18,zero,c40c <__muldf3+0x2d8>
    c25c:	9cc00094 	ori	r19,r19,2
    c260:	0023883a 	mov	r17,zero
    c264:	00c00084 	movi	r3,2
    c268:	003fe006 	br	c1ec <__muldf3+0xb8>
    c26c:	a80d883a 	mov	r6,r21
    c270:	8821883a 	mov	r16,r17
    c274:	902d883a 	mov	r22,r18
    c278:	182f883a 	mov	r23,r3
    c27c:	b88000a0 	cmpeqi	r2,r23,2
    c280:	1000501e 	bne	r2,zero,c3c4 <__muldf3+0x290>
    c284:	b88000e0 	cmpeqi	r2,r23,3
    c288:	10019d1e 	bne	r2,zero,c900 <__muldf3+0x7cc>
    c28c:	b8800060 	cmpeqi	r2,r23,1
    c290:	10012a26 	beq	r2,zero,c73c <__muldf3+0x608>
    c294:	0007883a 	mov	r3,zero
    c298:	0021883a 	mov	r16,zero
    c29c:	002d883a 	mov	r22,zero
    c2a0:	04400434 	movhi	r17,16
    c2a4:	1806953a 	slli	r3,r3,20
    c2a8:	31803fcc 	andi	r6,r6,255
    c2ac:	8c7fffc4 	addi	r17,r17,-1
    c2b0:	300c97fa 	slli	r6,r6,31
    c2b4:	8460703a 	and	r16,r16,r17
    c2b8:	80c6b03a 	or	r3,r16,r3
    c2bc:	1986b03a 	or	r3,r3,r6
    c2c0:	b005883a 	mov	r2,r22
    c2c4:	dfc01017 	ldw	ra,64(sp)
    c2c8:	df000f17 	ldw	fp,60(sp)
    c2cc:	ddc00e17 	ldw	r23,56(sp)
    c2d0:	dd800d17 	ldw	r22,52(sp)
    c2d4:	dd400c17 	ldw	r21,48(sp)
    c2d8:	dd000b17 	ldw	r20,44(sp)
    c2dc:	dcc00a17 	ldw	r19,40(sp)
    c2e0:	dc800917 	ldw	r18,36(sp)
    c2e4:	dc400817 	ldw	r17,32(sp)
    c2e8:	dc000717 	ldw	r16,28(sp)
    c2ec:	dec01104 	addi	sp,sp,68
    c2f0:	f800283a 	ret
    c2f4:	812cb03a 	or	r22,r16,r4
    c2f8:	b0003f26 	beq	r22,zero,c3f8 <__muldf3+0x2c4>
    c2fc:	d9c00115 	stw	r7,4(sp)
    c300:	d9800015 	stw	r6,0(sp)
    c304:	80013b26 	beq	r16,zero,c7f4 <__muldf3+0x6c0>
    c308:	8009883a 	mov	r4,r16
    c30c:	000d4b80 	call	d4b8 <__clzsi2>
    c310:	d9800017 	ldw	r6,0(sp)
    c314:	d9c00117 	ldw	r7,4(sp)
    c318:	1007883a 	mov	r3,r2
    c31c:	117ffd44 	addi	r5,r2,-11
    c320:	01000744 	movi	r4,29
    c324:	1dbffe04 	addi	r22,r3,-8
    c328:	2149c83a 	sub	r4,r4,r5
    c32c:	85a0983a 	sll	r16,r16,r22
    c330:	9108d83a 	srl	r4,r18,r4
    c334:	95ac983a 	sll	r22,r18,r22
    c338:	2420b03a 	or	r16,r4,r16
    c33c:	023f0344 	movi	r8,-1011
    c340:	40d1c83a 	sub	r8,r8,r3
    c344:	0027883a 	mov	r19,zero
    c348:	002f883a 	mov	r23,zero
    c34c:	003f9606 	br	c1a8 <__muldf3+0x74>
    c350:	812cb03a 	or	r22,r16,r4
    c354:	b000231e 	bne	r22,zero,c3e4 <__muldf3+0x2b0>
    c358:	0021883a 	mov	r16,zero
    c35c:	04c00204 	movi	r19,8
    c360:	0201ffc4 	movi	r8,2047
    c364:	05c00084 	movi	r23,2
    c368:	003f8f06 	br	c1a8 <__muldf3+0x74>
    c36c:	3464b03a 	or	r18,r6,r17
    c370:	90001826 	beq	r18,zero,c3d4 <__muldf3+0x2a0>
    c374:	88011126 	beq	r17,zero,c7bc <__muldf3+0x688>
    c378:	8809883a 	mov	r4,r17
    c37c:	d9800115 	stw	r6,4(sp)
    c380:	da000015 	stw	r8,0(sp)
    c384:	000d4b80 	call	d4b8 <__clzsi2>
    c388:	da000017 	ldw	r8,0(sp)
    c38c:	d9800117 	ldw	r6,4(sp)
    c390:	1007883a 	mov	r3,r2
    c394:	117ffd44 	addi	r5,r2,-11
    c398:	01000744 	movi	r4,29
    c39c:	1cbffe04 	addi	r18,r3,-8
    c3a0:	2149c83a 	sub	r4,r4,r5
    c3a4:	8ca2983a 	sll	r17,r17,r18
    c3a8:	3108d83a 	srl	r4,r6,r4
    c3ac:	34a4983a 	sll	r18,r6,r18
    c3b0:	2462b03a 	or	r17,r4,r17
    c3b4:	40d1c83a 	sub	r8,r8,r3
    c3b8:	423f0344 	addi	r8,r8,-1011
    c3bc:	0007883a 	mov	r3,zero
    c3c0:	003f8a06 	br	c1ec <__muldf3+0xb8>
    c3c4:	00c1ffc4 	movi	r3,2047
    c3c8:	0021883a 	mov	r16,zero
    c3cc:	002d883a 	mov	r22,zero
    c3d0:	003fb306 	br	c2a0 <__muldf3+0x16c>
    c3d4:	9cc00054 	ori	r19,r19,1
    c3d8:	0023883a 	mov	r17,zero
    c3dc:	00c00044 	movi	r3,1
    c3e0:	003f8206 	br	c1ec <__muldf3+0xb8>
    c3e4:	202d883a 	mov	r22,r4
    c3e8:	04c00304 	movi	r19,12
    c3ec:	0201ffc4 	movi	r8,2047
    c3f0:	05c000c4 	movi	r23,3
    c3f4:	003f6c06 	br	c1a8 <__muldf3+0x74>
    c3f8:	0021883a 	mov	r16,zero
    c3fc:	04c00104 	movi	r19,4
    c400:	0011883a 	mov	r8,zero
    c404:	05c00044 	movi	r23,1
    c408:	003f6706 	br	c1a8 <__muldf3+0x74>
    c40c:	9cc000d4 	ori	r19,r19,3
    c410:	3025883a 	mov	r18,r6
    c414:	00c000c4 	movi	r3,3
    c418:	003f7406 	br	c1ec <__muldf3+0xb8>
    c41c:	a00d883a 	mov	r6,r20
    c420:	003f9606 	br	c27c <__muldf3+0x148>
    c424:	04000434 	movhi	r16,16
    c428:	000d883a 	mov	r6,zero
    c42c:	843fffc4 	addi	r16,r16,-1
    c430:	05bfffc4 	movi	r22,-1
    c434:	00c1ffc4 	movi	r3,2047
    c438:	003f9906 	br	c2a0 <__muldf3+0x16c>
    c43c:	8080022c 	andhi	r2,r16,8
    c440:	1000d826 	beq	r2,zero,c7a4 <__muldf3+0x670>
    c444:	8880022c 	andhi	r2,r17,8
    c448:	1000d61e 	bne	r2,zero,c7a4 <__muldf3+0x670>
    c44c:	00800434 	movhi	r2,16
    c450:	8c000234 	orhi	r16,r17,8
    c454:	10bfffc4 	addi	r2,r2,-1
    c458:	80a0703a 	and	r16,r16,r2
    c45c:	a80d883a 	mov	r6,r21
    c460:	902d883a 	mov	r22,r18
    c464:	003ff306 	br	c434 <__muldf3+0x300>
    c468:	b028d43a 	srli	r20,r22,16
    c46c:	902ed43a 	srli	r23,r18,16
    c470:	b5bfffcc 	andi	r22,r22,65535
    c474:	94bfffcc 	andi	r18,r18,65535
    c478:	b00b883a 	mov	r5,r22
    c47c:	9009883a 	mov	r4,r18
    c480:	d9800215 	stw	r6,8(sp)
    c484:	da000115 	stw	r8,4(sp)
    c488:	da400015 	stw	r9,0(sp)
    c48c:	000aba80 	call	aba8 <__mulsi3>
    c490:	900b883a 	mov	r5,r18
    c494:	a009883a 	mov	r4,r20
    c498:	1027883a 	mov	r19,r2
    c49c:	000aba80 	call	aba8 <__mulsi3>
    c4a0:	b80b883a 	mov	r5,r23
    c4a4:	a009883a 	mov	r4,r20
    c4a8:	102b883a 	mov	r21,r2
    c4ac:	000aba80 	call	aba8 <__mulsi3>
    c4b0:	b00b883a 	mov	r5,r22
    c4b4:	b809883a 	mov	r4,r23
    c4b8:	1039883a 	mov	fp,r2
    c4bc:	000aba80 	call	aba8 <__mulsi3>
    c4c0:	9806d43a 	srli	r3,r19,16
    c4c4:	1545883a 	add	r2,r2,r21
    c4c8:	da400017 	ldw	r9,0(sp)
    c4cc:	1885883a 	add	r2,r3,r2
    c4d0:	da000117 	ldw	r8,4(sp)
    c4d4:	d9800217 	ldw	r6,8(sp)
    c4d8:	1540022e 	bgeu	r2,r21,c4e4 <__muldf3+0x3b0>
    c4dc:	00c00074 	movhi	r3,1
    c4e0:	e0f9883a 	add	fp,fp,r3
    c4e4:	1006943a 	slli	r3,r2,16
    c4e8:	1004d43a 	srli	r2,r2,16
    c4ec:	882ad43a 	srli	r21,r17,16
    c4f0:	9cffffcc 	andi	r19,r19,65535
    c4f4:	8c7fffcc 	andi	r17,r17,65535
    c4f8:	b00b883a 	mov	r5,r22
    c4fc:	8809883a 	mov	r4,r17
    c500:	d8800015 	stw	r2,0(sp)
    c504:	1cc5883a 	add	r2,r3,r19
    c508:	d9800515 	stw	r6,20(sp)
    c50c:	da000415 	stw	r8,16(sp)
    c510:	da400315 	stw	r9,12(sp)
    c514:	d8800115 	stw	r2,4(sp)
    c518:	000aba80 	call	aba8 <__mulsi3>
    c51c:	a009883a 	mov	r4,r20
    c520:	880b883a 	mov	r5,r17
    c524:	d8800215 	stw	r2,8(sp)
    c528:	000aba80 	call	aba8 <__mulsi3>
    c52c:	a009883a 	mov	r4,r20
    c530:	a80b883a 	mov	r5,r21
    c534:	1027883a 	mov	r19,r2
    c538:	000aba80 	call	aba8 <__mulsi3>
    c53c:	b00b883a 	mov	r5,r22
    c540:	a809883a 	mov	r4,r21
    c544:	1029883a 	mov	r20,r2
    c548:	000aba80 	call	aba8 <__mulsi3>
    c54c:	d9c00217 	ldw	r7,8(sp)
    c550:	14c5883a 	add	r2,r2,r19
    c554:	da400317 	ldw	r9,12(sp)
    c558:	3806d43a 	srli	r3,r7,16
    c55c:	da000417 	ldw	r8,16(sp)
    c560:	d9800517 	ldw	r6,20(sp)
    c564:	1885883a 	add	r2,r3,r2
    c568:	14c0022e 	bgeu	r2,r19,c574 <__muldf3+0x440>
    c56c:	00c00074 	movhi	r3,1
    c570:	a0e9883a 	add	r20,r20,r3
    c574:	1006d43a 	srli	r3,r2,16
    c578:	1004943a 	slli	r2,r2,16
    c57c:	802cd43a 	srli	r22,r16,16
    c580:	843fffcc 	andi	r16,r16,65535
    c584:	3cffffcc 	andi	r19,r7,65535
    c588:	9009883a 	mov	r4,r18
    c58c:	800b883a 	mov	r5,r16
    c590:	d9800615 	stw	r6,24(sp)
    c594:	da000515 	stw	r8,20(sp)
    c598:	da400415 	stw	r9,16(sp)
    c59c:	1d29883a 	add	r20,r3,r20
    c5a0:	14e7883a 	add	r19,r2,r19
    c5a4:	000aba80 	call	aba8 <__mulsi3>
    c5a8:	900b883a 	mov	r5,r18
    c5ac:	b009883a 	mov	r4,r22
    c5b0:	d8800315 	stw	r2,12(sp)
    c5b4:	000aba80 	call	aba8 <__mulsi3>
    c5b8:	b00b883a 	mov	r5,r22
    c5bc:	b809883a 	mov	r4,r23
    c5c0:	1025883a 	mov	r18,r2
    c5c4:	000aba80 	call	aba8 <__mulsi3>
    c5c8:	800b883a 	mov	r5,r16
    c5cc:	b809883a 	mov	r4,r23
    c5d0:	d8800215 	stw	r2,8(sp)
    c5d4:	000aba80 	call	aba8 <__mulsi3>
    c5d8:	d8c00317 	ldw	r3,12(sp)
    c5dc:	d9400017 	ldw	r5,0(sp)
    c5e0:	1485883a 	add	r2,r2,r18
    c5e4:	1808d43a 	srli	r4,r3,16
    c5e8:	2ccf883a 	add	r7,r5,r19
    c5ec:	da800217 	ldw	r10,8(sp)
    c5f0:	2085883a 	add	r2,r4,r2
    c5f4:	da400417 	ldw	r9,16(sp)
    c5f8:	da000517 	ldw	r8,20(sp)
    c5fc:	d9800617 	ldw	r6,24(sp)
    c600:	1480022e 	bgeu	r2,r18,c60c <__muldf3+0x4d8>
    c604:	01000074 	movhi	r4,1
    c608:	5115883a 	add	r10,r10,r4
    c60c:	1024d43a 	srli	r18,r2,16
    c610:	1004943a 	slli	r2,r2,16
    c614:	1dffffcc 	andi	r23,r3,65535
    c618:	8809883a 	mov	r4,r17
    c61c:	800b883a 	mov	r5,r16
    c620:	d9800615 	stw	r6,24(sp)
    c624:	da000515 	stw	r8,20(sp)
    c628:	da400415 	stw	r9,16(sp)
    c62c:	d9c00315 	stw	r7,12(sp)
    c630:	92a5883a 	add	r18,r18,r10
    c634:	15ef883a 	add	r23,r2,r23
    c638:	000aba80 	call	aba8 <__mulsi3>
    c63c:	880b883a 	mov	r5,r17
    c640:	b009883a 	mov	r4,r22
    c644:	d8800215 	stw	r2,8(sp)
    c648:	000aba80 	call	aba8 <__mulsi3>
    c64c:	b00b883a 	mov	r5,r22
    c650:	a809883a 	mov	r4,r21
    c654:	d8800015 	stw	r2,0(sp)
    c658:	000aba80 	call	aba8 <__mulsi3>
    c65c:	800b883a 	mov	r5,r16
    c660:	a809883a 	mov	r4,r21
    c664:	1023883a 	mov	r17,r2
    c668:	000aba80 	call	aba8 <__mulsi3>
    c66c:	da800217 	ldw	r10,8(sp)
    c670:	d8c00017 	ldw	r3,0(sp)
    c674:	d9c00317 	ldw	r7,12(sp)
    c678:	500ad43a 	srli	r5,r10,16
    c67c:	10c5883a 	add	r2,r2,r3
    c680:	da400417 	ldw	r9,16(sp)
    c684:	288b883a 	add	r5,r5,r2
    c688:	da000517 	ldw	r8,20(sp)
    c68c:	d9800617 	ldw	r6,24(sp)
    c690:	28c0022e 	bgeu	r5,r3,c69c <__muldf3+0x568>
    c694:	00800074 	movhi	r2,1
    c698:	88a3883a 	add	r17,r17,r2
    c69c:	2806943a 	slli	r3,r5,16
    c6a0:	52bfffcc 	andi	r10,r10,65535
    c6a4:	3f39883a 	add	fp,r7,fp
    c6a8:	1a87883a 	add	r3,r3,r10
    c6ac:	e4e7803a 	cmpltu	r19,fp,r19
    c6b0:	1d07883a 	add	r3,r3,r20
    c6b4:	e5f9883a 	add	fp,fp,r23
    c6b8:	1ce1883a 	add	r16,r3,r19
    c6bc:	e5c9803a 	cmpltu	r4,fp,r23
    c6c0:	848f883a 	add	r7,r16,r18
    c6c4:	280ad43a 	srli	r5,r5,16
    c6c8:	3915883a 	add	r10,r7,r4
    c6cc:	1d29803a 	cmpltu	r20,r3,r20
    c6d0:	84e1803a 	cmpltu	r16,r16,r19
    c6d4:	5109803a 	cmpltu	r4,r10,r4
    c6d8:	a420b03a 	or	r16,r20,r16
    c6dc:	3ca5803a 	cmpltu	r18,r7,r18
    c6e0:	8161883a 	add	r16,r16,r5
    c6e4:	9108b03a 	or	r4,r18,r4
    c6e8:	8121883a 	add	r16,r16,r4
    c6ec:	e02c927a 	slli	r22,fp,9
    c6f0:	8461883a 	add	r16,r16,r17
    c6f4:	d8c00117 	ldw	r3,4(sp)
    c6f8:	5004d5fa 	srli	r2,r10,23
    c6fc:	8020927a 	slli	r16,r16,9
    c700:	e038d5fa 	srli	fp,fp,23
    c704:	b0ecb03a 	or	r22,r22,r3
    c708:	5014927a 	slli	r10,r10,9
    c70c:	80a0b03a 	or	r16,r16,r2
    c710:	b02cc03a 	cmpne	r22,r22,zero
    c714:	b72cb03a 	or	r22,r22,fp
    c718:	8080402c 	andhi	r2,r16,256
    c71c:	b2acb03a 	or	r22,r22,r10
    c720:	10005c26 	beq	r2,zero,c894 <__muldf3+0x760>
    c724:	b004d07a 	srli	r2,r22,1
    c728:	800697fa 	slli	r3,r16,31
    c72c:	b580004c 	andi	r22,r22,1
    c730:	8020d07a 	srli	r16,r16,1
    c734:	15acb03a 	or	r22,r2,r22
    c738:	b0ecb03a 	or	r22,r22,r3
    c73c:	48c0ffc4 	addi	r3,r9,1023
    c740:	00c0370e 	bge	zero,r3,c820 <__muldf3+0x6ec>
    c744:	b08001cc 	andi	r2,r22,7
    c748:	10000726 	beq	r2,zero,c768 <__muldf3+0x634>
    c74c:	b08003cc 	andi	r2,r22,15
    c750:	10800120 	cmpeqi	r2,r2,4
    c754:	1000041e 	bne	r2,zero,c768 <__muldf3+0x634>
    c758:	b0800104 	addi	r2,r22,4
    c75c:	15ad803a 	cmpltu	r22,r2,r22
    c760:	85a1883a 	add	r16,r16,r22
    c764:	102d883a 	mov	r22,r2
    c768:	8080402c 	andhi	r2,r16,256
    c76c:	10000426 	beq	r2,zero,c780 <__muldf3+0x64c>
    c770:	00bfc034 	movhi	r2,65280
    c774:	10bfffc4 	addi	r2,r2,-1
    c778:	80a0703a 	and	r16,r16,r2
    c77c:	48c10004 	addi	r3,r9,1024
    c780:	1881ffc8 	cmpgei	r2,r3,2047
    c784:	103f0f1e 	bne	r2,zero,c3c4 <__muldf3+0x290>
    c788:	8004977a 	slli	r2,r16,29
    c78c:	b02cd0fa 	srli	r22,r22,3
    c790:	8020927a 	slli	r16,r16,9
    c794:	18c1ffcc 	andi	r3,r3,2047
    c798:	15acb03a 	or	r22,r2,r22
    c79c:	8020d33a 	srli	r16,r16,12
    c7a0:	003ebf06 	br	c2a0 <__muldf3+0x16c>
    c7a4:	00800434 	movhi	r2,16
    c7a8:	84000234 	orhi	r16,r16,8
    c7ac:	10bfffc4 	addi	r2,r2,-1
    c7b0:	80a0703a 	and	r16,r16,r2
    c7b4:	a00d883a 	mov	r6,r20
    c7b8:	003f1e06 	br	c434 <__muldf3+0x300>
    c7bc:	3009883a 	mov	r4,r6
    c7c0:	da000115 	stw	r8,4(sp)
    c7c4:	d9800015 	stw	r6,0(sp)
    c7c8:	000d4b80 	call	d4b8 <__clzsi2>
    c7cc:	11400544 	addi	r5,r2,21
    c7d0:	29000748 	cmpgei	r4,r5,29
    c7d4:	10c00804 	addi	r3,r2,32
    c7d8:	d9800017 	ldw	r6,0(sp)
    c7dc:	da000117 	ldw	r8,4(sp)
    c7e0:	203eed26 	beq	r4,zero,c398 <__muldf3+0x264>
    c7e4:	147ffe04 	addi	r17,r2,-8
    c7e8:	3462983a 	sll	r17,r6,r17
    c7ec:	0025883a 	mov	r18,zero
    c7f0:	003ef006 	br	c3b4 <__muldf3+0x280>
    c7f4:	000d4b80 	call	d4b8 <__clzsi2>
    c7f8:	11400544 	addi	r5,r2,21
    c7fc:	29000748 	cmpgei	r4,r5,29
    c800:	10c00804 	addi	r3,r2,32
    c804:	d9800017 	ldw	r6,0(sp)
    c808:	d9c00117 	ldw	r7,4(sp)
    c80c:	203ec426 	beq	r4,zero,c320 <__muldf3+0x1ec>
    c810:	143ffe04 	addi	r16,r2,-8
    c814:	9420983a 	sll	r16,r18,r16
    c818:	002d883a 	mov	r22,zero
    c81c:	003ec706 	br	c33c <__muldf3+0x208>
    c820:	00800044 	movi	r2,1
    c824:	10c5c83a 	sub	r2,r2,r3
    c828:	11000e48 	cmpgei	r4,r2,57
    c82c:	203e991e 	bne	r4,zero,c294 <__muldf3+0x160>
    c830:	11000808 	cmpgei	r4,r2,32
    c834:	2000191e 	bne	r4,zero,c89c <__muldf3+0x768>
    c838:	4a410784 	addi	r9,r9,1054
    c83c:	8246983a 	sll	r3,r16,r9
    c840:	b088d83a 	srl	r4,r22,r2
    c844:	b26c983a 	sll	r22,r22,r9
    c848:	80a0d83a 	srl	r16,r16,r2
    c84c:	1904b03a 	or	r2,r3,r4
    c850:	b02cc03a 	cmpne	r22,r22,zero
    c854:	1584b03a 	or	r2,r2,r22
    c858:	10c001cc 	andi	r3,r2,7
    c85c:	18000726 	beq	r3,zero,c87c <__muldf3+0x748>
    c860:	10c003cc 	andi	r3,r2,15
    c864:	18c00120 	cmpeqi	r3,r3,4
    c868:	1800041e 	bne	r3,zero,c87c <__muldf3+0x748>
    c86c:	10c00104 	addi	r3,r2,4
    c870:	1885803a 	cmpltu	r2,r3,r2
    c874:	80a1883a 	add	r16,r16,r2
    c878:	1805883a 	mov	r2,r3
    c87c:	80c0202c 	andhi	r3,r16,128
    c880:	18001b26 	beq	r3,zero,c8f0 <__muldf3+0x7bc>
    c884:	00c00044 	movi	r3,1
    c888:	0021883a 	mov	r16,zero
    c88c:	002d883a 	mov	r22,zero
    c890:	003e8306 	br	c2a0 <__muldf3+0x16c>
    c894:	4013883a 	mov	r9,r8
    c898:	003fa806 	br	c73c <__muldf3+0x608>
    c89c:	013ff844 	movi	r4,-31
    c8a0:	20c7c83a 	sub	r3,r4,r3
    c8a4:	10800820 	cmpeqi	r2,r2,32
    c8a8:	80c6d83a 	srl	r3,r16,r3
    c8ac:	1000031e 	bne	r2,zero,c8bc <__muldf3+0x788>
    c8b0:	4a410f84 	addi	r9,r9,1086
    c8b4:	8260983a 	sll	r16,r16,r9
    c8b8:	b42cb03a 	or	r22,r22,r16
    c8bc:	b02cc03a 	cmpne	r22,r22,zero
    c8c0:	b0c4b03a 	or	r2,r22,r3
    c8c4:	158001cc 	andi	r22,r2,7
    c8c8:	b000051e 	bne	r22,zero,c8e0 <__muldf3+0x7ac>
    c8cc:	0021883a 	mov	r16,zero
    c8d0:	1004d0fa 	srli	r2,r2,3
    c8d4:	0007883a 	mov	r3,zero
    c8d8:	15acb03a 	or	r22,r2,r22
    c8dc:	003e7006 	br	c2a0 <__muldf3+0x16c>
    c8e0:	10c003cc 	andi	r3,r2,15
    c8e4:	18c00118 	cmpnei	r3,r3,4
    c8e8:	0021883a 	mov	r16,zero
    c8ec:	183fdf1e 	bne	r3,zero,c86c <__muldf3+0x738>
    c8f0:	8006927a 	slli	r3,r16,9
    c8f4:	802c977a 	slli	r22,r16,29
    c8f8:	1820d33a 	srli	r16,r3,12
    c8fc:	003ff406 	br	c8d0 <__muldf3+0x79c>
    c900:	00800434 	movhi	r2,16
    c904:	84000234 	orhi	r16,r16,8
    c908:	10bfffc4 	addi	r2,r2,-1
    c90c:	80a0703a 	and	r16,r16,r2
    c910:	003ec806 	br	c434 <__muldf3+0x300>

0000c914 <__subdf3>:
    c914:	00800434 	movhi	r2,16
    c918:	3812d53a 	srli	r9,r7,20
    c91c:	10bfffc4 	addi	r2,r2,-1
    c920:	defffb04 	addi	sp,sp,-20
    c924:	2890703a 	and	r8,r5,r2
    c928:	3884703a 	and	r2,r7,r2
    c92c:	2806d7fa 	srli	r3,r5,31
    c930:	dcc00315 	stw	r19,12(sp)
    c934:	dc400115 	stw	r17,4(sp)
    c938:	280ad53a 	srli	r5,r5,20
    c93c:	401090fa 	slli	r8,r8,3
    c940:	2026d77a 	srli	r19,r4,29
    c944:	100490fa 	slli	r2,r2,3
    c948:	3022d77a 	srli	r17,r6,29
    c94c:	4a81ffcc 	andi	r10,r9,2047
    c950:	dc800215 	stw	r18,8(sp)
    c954:	dc000015 	stw	r16,0(sp)
    c958:	dfc00415 	stw	ra,16(sp)
    c95c:	5241ffe0 	cmpeqi	r9,r10,2047
    c960:	1825883a 	mov	r18,r3
    c964:	2c01ffcc 	andi	r16,r5,2047
    c968:	18c03fcc 	andi	r3,r3,255
    c96c:	9a18b03a 	or	r12,r19,r8
    c970:	201a90fa 	slli	r13,r4,3
    c974:	380ed7fa 	srli	r7,r7,31
    c978:	8896b03a 	or	r11,r17,r2
    c97c:	301c90fa 	slli	r14,r6,3
    c980:	4800711e 	bne	r9,zero,cb48 <__subdf3+0x234>
    c984:	39c0005c 	xori	r7,r7,1
    c988:	8291c83a 	sub	r8,r16,r10
    c98c:	19c05a26 	beq	r3,r7,caf8 <__subdf3+0x1e4>
    c990:	0200720e 	bge	zero,r8,cb5c <__subdf3+0x248>
    c994:	50008126 	beq	r10,zero,cb9c <__subdf3+0x288>
    c998:	8081ffd8 	cmpnei	r2,r16,2047
    c99c:	10011626 	beq	r2,zero,cdf8 <__subdf3+0x4e4>
    c9a0:	5ac02034 	orhi	r11,r11,128
    c9a4:	40800e48 	cmpgei	r2,r8,57
    c9a8:	1000fe1e 	bne	r2,zero,cda4 <__subdf3+0x490>
    c9ac:	40800808 	cmpgei	r2,r8,32
    c9b0:	10015e1e 	bne	r2,zero,cf2c <__subdf3+0x618>
    c9b4:	00800804 	movi	r2,32
    c9b8:	1205c83a 	sub	r2,r2,r8
    c9bc:	58a2983a 	sll	r17,r11,r2
    c9c0:	7206d83a 	srl	r3,r14,r8
    c9c4:	709c983a 	sll	r14,r14,r2
    c9c8:	5a04d83a 	srl	r2,r11,r8
    c9cc:	88e2b03a 	or	r17,r17,r3
    c9d0:	701cc03a 	cmpne	r14,r14,zero
    c9d4:	8ba2b03a 	or	r17,r17,r14
    c9d8:	6099c83a 	sub	r12,r12,r2
    c9dc:	6c63c83a 	sub	r17,r13,r17
    c9e0:	6c49803a 	cmpltu	r4,r13,r17
    c9e4:	6109c83a 	sub	r4,r12,r4
    c9e8:	2080202c 	andhi	r2,r4,128
    c9ec:	10009f26 	beq	r2,zero,cc6c <__subdf3+0x358>
    c9f0:	04c02034 	movhi	r19,128
    c9f4:	9cffffc4 	addi	r19,r19,-1
    c9f8:	24e6703a 	and	r19,r4,r19
    c9fc:	9800e026 	beq	r19,zero,cd80 <__subdf3+0x46c>
    ca00:	9809883a 	mov	r4,r19
    ca04:	000d4b80 	call	d4b8 <__clzsi2>
    ca08:	123ffe04 	addi	r8,r2,-8
    ca0c:	01000804 	movi	r4,32
    ca10:	2209c83a 	sub	r4,r4,r8
    ca14:	8906d83a 	srl	r3,r17,r4
    ca18:	9a08983a 	sll	r4,r19,r8
    ca1c:	8a22983a 	sll	r17,r17,r8
    ca20:	1908b03a 	or	r4,r3,r4
    ca24:	4400cf16 	blt	r8,r16,cd64 <__subdf3+0x450>
    ca28:	4411c83a 	sub	r8,r8,r16
    ca2c:	40800044 	addi	r2,r8,1
    ca30:	10c00808 	cmpgei	r3,r2,32
    ca34:	1801251e 	bne	r3,zero,cecc <__subdf3+0x5b8>
    ca38:	00c00804 	movi	r3,32
    ca3c:	1887c83a 	sub	r3,r3,r2
    ca40:	888ad83a 	srl	r5,r17,r2
    ca44:	88e2983a 	sll	r17,r17,r3
    ca48:	20c6983a 	sll	r3,r4,r3
    ca4c:	2088d83a 	srl	r4,r4,r2
    ca50:	8822c03a 	cmpne	r17,r17,zero
    ca54:	1946b03a 	or	r3,r3,r5
    ca58:	1c62b03a 	or	r17,r3,r17
    ca5c:	0021883a 	mov	r16,zero
    ca60:	888001cc 	andi	r2,r17,7
    ca64:	10000726 	beq	r2,zero,ca84 <__subdf3+0x170>
    ca68:	888003cc 	andi	r2,r17,15
    ca6c:	10800120 	cmpeqi	r2,r2,4
    ca70:	1000041e 	bne	r2,zero,ca84 <__subdf3+0x170>
    ca74:	88c00104 	addi	r3,r17,4
    ca78:	1c63803a 	cmpltu	r17,r3,r17
    ca7c:	2449883a 	add	r4,r4,r17
    ca80:	1823883a 	mov	r17,r3
    ca84:	2080202c 	andhi	r2,r4,128
    ca88:	10007a26 	beq	r2,zero,cc74 <__subdf3+0x360>
    ca8c:	82000044 	addi	r8,r16,1
    ca90:	4081ffe0 	cmpeqi	r2,r8,2047
    ca94:	4201ffcc 	andi	r8,r8,2047
    ca98:	10008c1e 	bne	r2,zero,cccc <__subdf3+0x3b8>
    ca9c:	00bfe034 	movhi	r2,65408
    caa0:	10bfffc4 	addi	r2,r2,-1
    caa4:	2084703a 	and	r2,r4,r2
    caa8:	1008927a 	slli	r4,r2,9
    caac:	8822d0fa 	srli	r17,r17,3
    cab0:	100c977a 	slli	r6,r2,29
    cab4:	2008d33a 	srli	r4,r4,12
    cab8:	3444b03a 	or	r2,r6,r17
    cabc:	4010953a 	slli	r8,r8,20
    cac0:	00c00434 	movhi	r3,16
    cac4:	94803fcc 	andi	r18,r18,255
    cac8:	902497fa 	slli	r18,r18,31
    cacc:	18ffffc4 	addi	r3,r3,-1
    cad0:	20c6703a 	and	r3,r4,r3
    cad4:	1a06b03a 	or	r3,r3,r8
    cad8:	1c86b03a 	or	r3,r3,r18
    cadc:	dfc00417 	ldw	ra,16(sp)
    cae0:	dcc00317 	ldw	r19,12(sp)
    cae4:	dc800217 	ldw	r18,8(sp)
    cae8:	dc400117 	ldw	r17,4(sp)
    caec:	dc000017 	ldw	r16,0(sp)
    caf0:	dec00504 	addi	sp,sp,20
    caf4:	f800283a 	ret
    caf8:	0200320e 	bge	zero,r8,cbc4 <__subdf3+0x2b0>
    cafc:	50004c26 	beq	r10,zero,cc30 <__subdf3+0x31c>
    cb00:	8081ffd8 	cmpnei	r2,r16,2047
    cb04:	1000bc26 	beq	r2,zero,cdf8 <__subdf3+0x4e4>
    cb08:	5ac02034 	orhi	r11,r11,128
    cb0c:	40800e48 	cmpgei	r2,r8,57
    cb10:	1000641e 	bne	r2,zero,cca4 <__subdf3+0x390>
    cb14:	40800808 	cmpgei	r2,r8,32
    cb18:	10011726 	beq	r2,zero,cf78 <__subdf3+0x664>
    cb1c:	447ff804 	addi	r17,r8,-32
    cb20:	40800820 	cmpeqi	r2,r8,32
    cb24:	5c46d83a 	srl	r3,r11,r17
    cb28:	1000041e 	bne	r2,zero,cb3c <__subdf3+0x228>
    cb2c:	00801004 	movi	r2,64
    cb30:	1205c83a 	sub	r2,r2,r8
    cb34:	5884983a 	sll	r2,r11,r2
    cb38:	709cb03a 	or	r14,r14,r2
    cb3c:	7022c03a 	cmpne	r17,r14,zero
    cb40:	88e2b03a 	or	r17,r17,r3
    cb44:	00005906 	br	ccac <__subdf3+0x398>
    cb48:	5b8ab03a 	or	r5,r11,r14
    cb4c:	823e0044 	addi	r8,r16,-2047
    cb50:	28001a1e 	bne	r5,zero,cbbc <__subdf3+0x2a8>
    cb54:	39c0005c 	xori	r7,r7,1
    cb58:	19c01a26 	beq	r3,r7,cbc4 <__subdf3+0x2b0>
    cb5c:	4000291e 	bne	r8,zero,cc04 <__subdf3+0x2f0>
    cb60:	80800044 	addi	r2,r16,1
    cb64:	1081ff8c 	andi	r2,r2,2046
    cb68:	1000911e 	bne	r2,zero,cdb0 <__subdf3+0x49c>
    cb6c:	6346b03a 	or	r3,r12,r13
    cb70:	5b84b03a 	or	r2,r11,r14
    cb74:	8001551e 	bne	r16,zero,d0cc <__subdf3+0x7b8>
    cb78:	18011b26 	beq	r3,zero,cfe8 <__subdf3+0x6d4>
    cb7c:	1001641e 	bne	r2,zero,d110 <__subdf3+0x7fc>
    cb80:	00880034 	movhi	r2,8192
    cb84:	6022977a 	slli	r17,r12,29
    cb88:	10bfffc4 	addi	r2,r2,-1
    cb8c:	2088703a 	and	r4,r4,r2
    cb90:	2444b03a 	or	r2,r4,r17
    cb94:	6026d0fa 	srli	r19,r12,3
    cb98:	00003d06 	br	cc90 <__subdf3+0x37c>
    cb9c:	5b84b03a 	or	r2,r11,r14
    cba0:	10008e26 	beq	r2,zero,cddc <__subdf3+0x4c8>
    cba4:	40bfffc4 	addi	r2,r8,-1
    cba8:	10011f26 	beq	r2,zero,d028 <__subdf3+0x714>
    cbac:	4201ffd8 	cmpnei	r8,r8,2047
    cbb0:	40012d26 	beq	r8,zero,d068 <__subdf3+0x754>
    cbb4:	1011883a 	mov	r8,r2
    cbb8:	003f7a06 	br	c9a4 <__subdf3+0x90>
    cbbc:	39c03fcc 	andi	r7,r7,255
    cbc0:	19ffe61e 	bne	r3,r7,cb5c <__subdf3+0x248>
    cbc4:	4000931e 	bne	r8,zero,ce14 <__subdf3+0x500>
    cbc8:	80c00044 	addi	r3,r16,1
    cbcc:	1881ff8c 	andi	r2,r3,2046
    cbd0:	10012c1e 	bne	r2,zero,d084 <__subdf3+0x770>
    cbd4:	6344b03a 	or	r2,r12,r13
    cbd8:	8000f91e 	bne	r16,zero,cfc0 <__subdf3+0x6ac>
    cbdc:	10017326 	beq	r2,zero,d1ac <__subdf3+0x898>
    cbe0:	5b84b03a 	or	r2,r11,r14
    cbe4:	1001781e 	bne	r2,zero,d1c8 <__subdf3+0x8b4>
    cbe8:	6004977a 	slli	r2,r12,29
    cbec:	00c80034 	movhi	r3,8192
    cbf0:	18ffffc4 	addi	r3,r3,-1
    cbf4:	20c6703a 	and	r3,r4,r3
    cbf8:	10c4b03a 	or	r2,r2,r3
    cbfc:	6026d0fa 	srli	r19,r12,3
    cc00:	00002306 	br	cc90 <__subdf3+0x37c>
    cc04:	5411c83a 	sub	r8,r10,r16
    cc08:	3825883a 	mov	r18,r7
    cc0c:	8000991e 	bne	r16,zero,ce74 <__subdf3+0x560>
    cc10:	6344b03a 	or	r2,r12,r13
    cc14:	1000e326 	beq	r2,zero,cfa4 <__subdf3+0x690>
    cc18:	40bfffc4 	addi	r2,r8,-1
    cc1c:	10015d26 	beq	r2,zero,d194 <__subdf3+0x880>
    cc20:	4201ffd8 	cmpnei	r8,r8,2047
    cc24:	4000f926 	beq	r8,zero,d00c <__subdf3+0x6f8>
    cc28:	1011883a 	mov	r8,r2
    cc2c:	00009406 	br	ce80 <__subdf3+0x56c>
    cc30:	5b84b03a 	or	r2,r11,r14
    cc34:	10010226 	beq	r2,zero,d040 <__subdf3+0x72c>
    cc38:	40bfffc4 	addi	r2,r8,-1
    cc3c:	10000426 	beq	r2,zero,cc50 <__subdf3+0x33c>
    cc40:	4201ffd8 	cmpnei	r8,r8,2047
    cc44:	40014126 	beq	r8,zero,d14c <__subdf3+0x838>
    cc48:	1011883a 	mov	r8,r2
    cc4c:	003faf06 	br	cb0c <__subdf3+0x1f8>
    cc50:	6ba3883a 	add	r17,r13,r14
    cc54:	62c9883a 	add	r4,r12,r11
    cc58:	8b5b803a 	cmpltu	r13,r17,r13
    cc5c:	2349883a 	add	r4,r4,r13
    cc60:	2080202c 	andhi	r2,r4,128
    cc64:	1000a61e 	bne	r2,zero,cf00 <__subdf3+0x5ec>
    cc68:	04000044 	movi	r16,1
    cc6c:	888001cc 	andi	r2,r17,7
    cc70:	103f7d1e 	bne	r2,zero,ca68 <__subdf3+0x154>
    cc74:	8822d0fa 	srli	r17,r17,3
    cc78:	2004977a 	slli	r2,r4,29
    cc7c:	2026d0fa 	srli	r19,r4,3
    cc80:	8011883a 	mov	r8,r16
    cc84:	8884b03a 	or	r2,r17,r2
    cc88:	40c1ffe0 	cmpeqi	r3,r8,2047
    cc8c:	18002d1e 	bne	r3,zero,cd44 <__subdf3+0x430>
    cc90:	01000434 	movhi	r4,16
    cc94:	213fffc4 	addi	r4,r4,-1
    cc98:	9908703a 	and	r4,r19,r4
    cc9c:	4201ffcc 	andi	r8,r8,2047
    cca0:	003f8606 	br	cabc <__subdf3+0x1a8>
    cca4:	5ba2b03a 	or	r17,r11,r14
    cca8:	8822c03a 	cmpne	r17,r17,zero
    ccac:	8b63883a 	add	r17,r17,r13
    ccb0:	8b49803a 	cmpltu	r4,r17,r13
    ccb4:	2309883a 	add	r4,r4,r12
    ccb8:	2080202c 	andhi	r2,r4,128
    ccbc:	103feb26 	beq	r2,zero,cc6c <__subdf3+0x358>
    ccc0:	84000044 	addi	r16,r16,1
    ccc4:	8081ffe0 	cmpeqi	r2,r16,2047
    ccc8:	10008e26 	beq	r2,zero,cf04 <__subdf3+0x5f0>
    cccc:	0201ffc4 	movi	r8,2047
    ccd0:	0009883a 	mov	r4,zero
    ccd4:	0005883a 	mov	r2,zero
    ccd8:	003f7806 	br	cabc <__subdf3+0x1a8>
    ccdc:	6010977a 	slli	r8,r12,29
    cce0:	6026d0fa 	srli	r19,r12,3
    cce4:	1000bb26 	beq	r2,zero,cfd4 <__subdf3+0x6c0>
    cce8:	01480034 	movhi	r5,8192
    ccec:	297fffc4 	addi	r5,r5,-1
    ccf0:	2146703a 	and	r3,r4,r5
    ccf4:	9880022c 	andhi	r2,r19,8
    ccf8:	1a06b03a 	or	r3,r3,r8
    ccfc:	10000826 	beq	r2,zero,cd20 <__subdf3+0x40c>
    cd00:	5808d0fa 	srli	r4,r11,3
    cd04:	2080022c 	andhi	r2,r4,8
    cd08:	1000051e 	bne	r2,zero,cd20 <__subdf3+0x40c>
    cd0c:	5804977a 	slli	r2,r11,29
    cd10:	3146703a 	and	r3,r6,r5
    cd14:	3825883a 	mov	r18,r7
    cd18:	1886b03a 	or	r3,r3,r2
    cd1c:	2027883a 	mov	r19,r4
    cd20:	1804d77a 	srli	r2,r3,29
    cd24:	980890fa 	slli	r4,r19,3
    cd28:	01480034 	movhi	r5,8192
    cd2c:	297fffc4 	addi	r5,r5,-1
    cd30:	1108b03a 	or	r4,r2,r4
    cd34:	2004977a 	slli	r2,r4,29
    cd38:	2026d0fa 	srli	r19,r4,3
    cd3c:	1946703a 	and	r3,r3,r5
    cd40:	10c4b03a 	or	r2,r2,r3
    cd44:	14c6b03a 	or	r3,r2,r19
    cd48:	18014926 	beq	r3,zero,d270 <__subdf3+0x95c>
    cd4c:	00c00434 	movhi	r3,16
    cd50:	99000234 	orhi	r4,r19,8
    cd54:	18ffffc4 	addi	r3,r3,-1
    cd58:	20c8703a 	and	r4,r4,r3
    cd5c:	0201ffc4 	movi	r8,2047
    cd60:	003f5606 	br	cabc <__subdf3+0x1a8>
    cd64:	00bfe034 	movhi	r2,65408
    cd68:	10bfffc4 	addi	r2,r2,-1
    cd6c:	2088703a 	and	r4,r4,r2
    cd70:	888001cc 	andi	r2,r17,7
    cd74:	8221c83a 	sub	r16,r16,r8
    cd78:	103f3b1e 	bne	r2,zero,ca68 <__subdf3+0x154>
    cd7c:	003fbd06 	br	cc74 <__subdf3+0x360>
    cd80:	8809883a 	mov	r4,r17
    cd84:	000d4b80 	call	d4b8 <__clzsi2>
    cd88:	12000604 	addi	r8,r2,24
    cd8c:	40c00808 	cmpgei	r3,r8,32
    cd90:	183f1e26 	beq	r3,zero,ca0c <__subdf3+0xf8>
    cd94:	113ffe04 	addi	r4,r2,-8
    cd98:	8908983a 	sll	r4,r17,r4
    cd9c:	0023883a 	mov	r17,zero
    cda0:	003f2006 	br	ca24 <__subdf3+0x110>
    cda4:	5ba2b03a 	or	r17,r11,r14
    cda8:	8822c03a 	cmpne	r17,r17,zero
    cdac:	003f0b06 	br	c9dc <__subdf3+0xc8>
    cdb0:	6ba3c83a 	sub	r17,r13,r14
    cdb4:	62e7c83a 	sub	r19,r12,r11
    cdb8:	6c49803a 	cmpltu	r4,r13,r17
    cdbc:	9927c83a 	sub	r19,r19,r4
    cdc0:	9880202c 	andhi	r2,r19,128
    cdc4:	1000bb1e 	bne	r2,zero,d0b4 <__subdf3+0x7a0>
    cdc8:	8cc4b03a 	or	r2,r17,r19
    cdcc:	103f0b1e 	bne	r2,zero,c9fc <__subdf3+0xe8>
    cdd0:	0027883a 	mov	r19,zero
    cdd4:	0025883a 	mov	r18,zero
    cdd8:	003fad06 	br	cc90 <__subdf3+0x37c>
    cddc:	00880034 	movhi	r2,8192
    cde0:	6022977a 	slli	r17,r12,29
    cde4:	10bfffc4 	addi	r2,r2,-1
    cde8:	2088703a 	and	r4,r4,r2
    cdec:	2444b03a 	or	r2,r4,r17
    cdf0:	6026d0fa 	srli	r19,r12,3
    cdf4:	003fa406 	br	cc88 <__subdf3+0x374>
    cdf8:	00880034 	movhi	r2,8192
    cdfc:	6022977a 	slli	r17,r12,29
    ce00:	10bfffc4 	addi	r2,r2,-1
    ce04:	2088703a 	and	r4,r4,r2
    ce08:	2444b03a 	or	r2,r4,r17
    ce0c:	6026d0fa 	srli	r19,r12,3
    ce10:	003fcc06 	br	cd44 <__subdf3+0x430>
    ce14:	5411c83a 	sub	r8,r10,r16
    ce18:	80004f26 	beq	r16,zero,cf58 <__subdf3+0x644>
    ce1c:	5081ffd8 	cmpnei	r2,r10,2047
    ce20:	1000b426 	beq	r2,zero,d0f4 <__subdf3+0x7e0>
    ce24:	63002034 	orhi	r12,r12,128
    ce28:	40800e48 	cmpgei	r2,r8,57
    ce2c:	1000c41e 	bne	r2,zero,d140 <__subdf3+0x82c>
    ce30:	40800808 	cmpgei	r2,r8,32
    ce34:	1000f91e 	bne	r2,zero,d21c <__subdf3+0x908>
    ce38:	00800804 	movi	r2,32
    ce3c:	1205c83a 	sub	r2,r2,r8
    ce40:	60a2983a 	sll	r17,r12,r2
    ce44:	6a06d83a 	srl	r3,r13,r8
    ce48:	6884983a 	sll	r2,r13,r2
    ce4c:	6210d83a 	srl	r8,r12,r8
    ce50:	88e2b03a 	or	r17,r17,r3
    ce54:	1004c03a 	cmpne	r2,r2,zero
    ce58:	88a2b03a 	or	r17,r17,r2
    ce5c:	5a17883a 	add	r11,r11,r8
    ce60:	8ba3883a 	add	r17,r17,r14
    ce64:	8b85803a 	cmpltu	r2,r17,r14
    ce68:	12c9883a 	add	r4,r2,r11
    ce6c:	5021883a 	mov	r16,r10
    ce70:	003f9106 	br	ccb8 <__subdf3+0x3a4>
    ce74:	5081ffd8 	cmpnei	r2,r10,2047
    ce78:	10006426 	beq	r2,zero,d00c <__subdf3+0x6f8>
    ce7c:	63002034 	orhi	r12,r12,128
    ce80:	40800e48 	cmpgei	r2,r8,57
    ce84:	1000751e 	bne	r2,zero,d05c <__subdf3+0x748>
    ce88:	40800808 	cmpgei	r2,r8,32
    ce8c:	1000b61e 	bne	r2,zero,d168 <__subdf3+0x854>
    ce90:	00800804 	movi	r2,32
    ce94:	1205c83a 	sub	r2,r2,r8
    ce98:	60a2983a 	sll	r17,r12,r2
    ce9c:	6a06d83a 	srl	r3,r13,r8
    cea0:	6884983a 	sll	r2,r13,r2
    cea4:	6210d83a 	srl	r8,r12,r8
    cea8:	88e2b03a 	or	r17,r17,r3
    ceac:	1004c03a 	cmpne	r2,r2,zero
    ceb0:	88a2b03a 	or	r17,r17,r2
    ceb4:	5a17c83a 	sub	r11,r11,r8
    ceb8:	7463c83a 	sub	r17,r14,r17
    cebc:	7445803a 	cmpltu	r2,r14,r17
    cec0:	5889c83a 	sub	r4,r11,r2
    cec4:	5021883a 	mov	r16,r10
    cec8:	003ec706 	br	c9e8 <__subdf3+0xd4>
    cecc:	423ff844 	addi	r8,r8,-31
    ced0:	10c00820 	cmpeqi	r3,r2,32
    ced4:	2210d83a 	srl	r8,r4,r8
    ced8:	1800041e 	bne	r3,zero,ceec <__subdf3+0x5d8>
    cedc:	00c01004 	movi	r3,64
    cee0:	1885c83a 	sub	r2,r3,r2
    cee4:	2088983a 	sll	r4,r4,r2
    cee8:	8922b03a 	or	r17,r17,r4
    ceec:	8822c03a 	cmpne	r17,r17,zero
    cef0:	8a22b03a 	or	r17,r17,r8
    cef4:	0009883a 	mov	r4,zero
    cef8:	0021883a 	mov	r16,zero
    cefc:	003f5b06 	br	cc6c <__subdf3+0x358>
    cf00:	04000084 	movi	r16,2
    cf04:	00bfe034 	movhi	r2,65408
    cf08:	10bfffc4 	addi	r2,r2,-1
    cf0c:	2084703a 	and	r2,r4,r2
    cf10:	8806d07a 	srli	r3,r17,1
    cf14:	100a97fa 	slli	r5,r2,31
    cf18:	8c40004c 	andi	r17,r17,1
    cf1c:	1c62b03a 	or	r17,r3,r17
    cf20:	1008d07a 	srli	r4,r2,1
    cf24:	2c62b03a 	or	r17,r5,r17
    cf28:	003ecd06 	br	ca60 <__subdf3+0x14c>
    cf2c:	447ff804 	addi	r17,r8,-32
    cf30:	40800820 	cmpeqi	r2,r8,32
    cf34:	5c46d83a 	srl	r3,r11,r17
    cf38:	1000041e 	bne	r2,zero,cf4c <__subdf3+0x638>
    cf3c:	00801004 	movi	r2,64
    cf40:	1205c83a 	sub	r2,r2,r8
    cf44:	5884983a 	sll	r2,r11,r2
    cf48:	709cb03a 	or	r14,r14,r2
    cf4c:	7022c03a 	cmpne	r17,r14,zero
    cf50:	88e2b03a 	or	r17,r17,r3
    cf54:	003ea106 	br	c9dc <__subdf3+0xc8>
    cf58:	6344b03a 	or	r2,r12,r13
    cf5c:	1000a526 	beq	r2,zero,d1f4 <__subdf3+0x8e0>
    cf60:	40bfffc4 	addi	r2,r8,-1
    cf64:	1000bd26 	beq	r2,zero,d25c <__subdf3+0x948>
    cf68:	4201ffd8 	cmpnei	r8,r8,2047
    cf6c:	40006126 	beq	r8,zero,d0f4 <__subdf3+0x7e0>
    cf70:	1011883a 	mov	r8,r2
    cf74:	003fac06 	br	ce28 <__subdf3+0x514>
    cf78:	00800804 	movi	r2,32
    cf7c:	1205c83a 	sub	r2,r2,r8
    cf80:	58a2983a 	sll	r17,r11,r2
    cf84:	7206d83a 	srl	r3,r14,r8
    cf88:	709c983a 	sll	r14,r14,r2
    cf8c:	5a04d83a 	srl	r2,r11,r8
    cf90:	88e2b03a 	or	r17,r17,r3
    cf94:	701cc03a 	cmpne	r14,r14,zero
    cf98:	8ba2b03a 	or	r17,r17,r14
    cf9c:	6099883a 	add	r12,r12,r2
    cfa0:	003f4206 	br	ccac <__subdf3+0x398>
    cfa4:	5808977a 	slli	r4,r11,29
    cfa8:	00c80034 	movhi	r3,8192
    cfac:	18ffffc4 	addi	r3,r3,-1
    cfb0:	30cc703a 	and	r6,r6,r3
    cfb4:	2184b03a 	or	r2,r4,r6
    cfb8:	5826d0fa 	srli	r19,r11,3
    cfbc:	003f3206 	br	cc88 <__subdf3+0x374>
    cfc0:	10004c26 	beq	r2,zero,d0f4 <__subdf3+0x7e0>
    cfc4:	5b9cb03a 	or	r14,r11,r14
    cfc8:	6010977a 	slli	r8,r12,29
    cfcc:	6026d0fa 	srli	r19,r12,3
    cfd0:	703f451e 	bne	r14,zero,cce8 <__subdf3+0x3d4>
    cfd4:	00880034 	movhi	r2,8192
    cfd8:	10bfffc4 	addi	r2,r2,-1
    cfdc:	2084703a 	and	r2,r4,r2
    cfe0:	1204b03a 	or	r2,r2,r8
    cfe4:	003f5706 	br	cd44 <__subdf3+0x430>
    cfe8:	103f7926 	beq	r2,zero,cdd0 <__subdf3+0x4bc>
    cfec:	5804977a 	slli	r2,r11,29
    cff0:	00c80034 	movhi	r3,8192
    cff4:	18ffffc4 	addi	r3,r3,-1
    cff8:	30c6703a 	and	r3,r6,r3
    cffc:	10c4b03a 	or	r2,r2,r3
    d000:	5826d0fa 	srli	r19,r11,3
    d004:	3825883a 	mov	r18,r7
    d008:	003f2106 	br	cc90 <__subdf3+0x37c>
    d00c:	5804977a 	slli	r2,r11,29
    d010:	00c80034 	movhi	r3,8192
    d014:	18ffffc4 	addi	r3,r3,-1
    d018:	30c6703a 	and	r3,r6,r3
    d01c:	10c4b03a 	or	r2,r2,r3
    d020:	5826d0fa 	srli	r19,r11,3
    d024:	003f4706 	br	cd44 <__subdf3+0x430>
    d028:	6ba3c83a 	sub	r17,r13,r14
    d02c:	62c9c83a 	sub	r4,r12,r11
    d030:	6c5b803a 	cmpltu	r13,r13,r17
    d034:	2349c83a 	sub	r4,r4,r13
    d038:	04000044 	movi	r16,1
    d03c:	003e6a06 	br	c9e8 <__subdf3+0xd4>
    d040:	6004977a 	slli	r2,r12,29
    d044:	00c80034 	movhi	r3,8192
    d048:	18ffffc4 	addi	r3,r3,-1
    d04c:	20c8703a 	and	r4,r4,r3
    d050:	1104b03a 	or	r2,r2,r4
    d054:	6026d0fa 	srli	r19,r12,3
    d058:	003f0b06 	br	cc88 <__subdf3+0x374>
    d05c:	6366b03a 	or	r19,r12,r13
    d060:	9822c03a 	cmpne	r17,r19,zero
    d064:	003f9406 	br	ceb8 <__subdf3+0x5a4>
    d068:	6004977a 	slli	r2,r12,29
    d06c:	00c80034 	movhi	r3,8192
    d070:	18ffffc4 	addi	r3,r3,-1
    d074:	20c8703a 	and	r4,r4,r3
    d078:	1104b03a 	or	r2,r2,r4
    d07c:	6026d0fa 	srli	r19,r12,3
    d080:	003f3006 	br	cd44 <__subdf3+0x430>
    d084:	1881ffe0 	cmpeqi	r2,r3,2047
    d088:	103f101e 	bne	r2,zero,cccc <__subdf3+0x3b8>
    d08c:	6b9d883a 	add	r14,r13,r14
    d090:	62c9883a 	add	r4,r12,r11
    d094:	7345803a 	cmpltu	r2,r14,r13
    d098:	2085883a 	add	r2,r4,r2
    d09c:	102297fa 	slli	r17,r2,31
    d0a0:	701cd07a 	srli	r14,r14,1
    d0a4:	1008d07a 	srli	r4,r2,1
    d0a8:	1821883a 	mov	r16,r3
    d0ac:	8ba2b03a 	or	r17,r17,r14
    d0b0:	003eee06 	br	cc6c <__subdf3+0x358>
    d0b4:	7363c83a 	sub	r17,r14,r13
    d0b8:	5b09c83a 	sub	r4,r11,r12
    d0bc:	7467803a 	cmpltu	r19,r14,r17
    d0c0:	24e7c83a 	sub	r19,r4,r19
    d0c4:	3825883a 	mov	r18,r7
    d0c8:	003e4c06 	br	c9fc <__subdf3+0xe8>
    d0cc:	183f031e 	bne	r3,zero,ccdc <__subdf3+0x3c8>
    d0d0:	10005d26 	beq	r2,zero,d248 <__subdf3+0x934>
    d0d4:	00880034 	movhi	r2,8192
    d0d8:	5806977a 	slli	r3,r11,29
    d0dc:	10bfffc4 	addi	r2,r2,-1
    d0e0:	3084703a 	and	r2,r6,r2
    d0e4:	10c4b03a 	or	r2,r2,r3
    d0e8:	5826d0fa 	srli	r19,r11,3
    d0ec:	3825883a 	mov	r18,r7
    d0f0:	003f1406 	br	cd44 <__subdf3+0x430>
    d0f4:	00880034 	movhi	r2,8192
    d0f8:	5806977a 	slli	r3,r11,29
    d0fc:	10bfffc4 	addi	r2,r2,-1
    d100:	3084703a 	and	r2,r6,r2
    d104:	10c4b03a 	or	r2,r2,r3
    d108:	5826d0fa 	srli	r19,r11,3
    d10c:	003f0d06 	br	cd44 <__subdf3+0x430>
    d110:	6ba3c83a 	sub	r17,r13,r14
    d114:	62c5c83a 	sub	r2,r12,r11
    d118:	6c49803a 	cmpltu	r4,r13,r17
    d11c:	1109c83a 	sub	r4,r2,r4
    d120:	2080202c 	andhi	r2,r4,128
    d124:	10003a26 	beq	r2,zero,d210 <__subdf3+0x8fc>
    d128:	7363c83a 	sub	r17,r14,r13
    d12c:	5b09c83a 	sub	r4,r11,r12
    d130:	745d803a 	cmpltu	r14,r14,r17
    d134:	2389c83a 	sub	r4,r4,r14
    d138:	3825883a 	mov	r18,r7
    d13c:	003e4806 	br	ca60 <__subdf3+0x14c>
    d140:	6362b03a 	or	r17,r12,r13
    d144:	8822c03a 	cmpne	r17,r17,zero
    d148:	003f4506 	br	ce60 <__subdf3+0x54c>
    d14c:	6004977a 	slli	r2,r12,29
    d150:	00c80034 	movhi	r3,8192
    d154:	18ffffc4 	addi	r3,r3,-1
    d158:	20c6703a 	and	r3,r4,r3
    d15c:	10c4b03a 	or	r2,r2,r3
    d160:	6026d0fa 	srli	r19,r12,3
    d164:	003ef706 	br	cd44 <__subdf3+0x430>
    d168:	40bff804 	addi	r2,r8,-32
    d16c:	40c00820 	cmpeqi	r3,r8,32
    d170:	6084d83a 	srl	r2,r12,r2
    d174:	1800041e 	bne	r3,zero,d188 <__subdf3+0x874>
    d178:	04c01004 	movi	r19,64
    d17c:	9a11c83a 	sub	r8,r19,r8
    d180:	6226983a 	sll	r19,r12,r8
    d184:	6cdab03a 	or	r13,r13,r19
    d188:	6822c03a 	cmpne	r17,r13,zero
    d18c:	88a2b03a 	or	r17,r17,r2
    d190:	003f4906 	br	ceb8 <__subdf3+0x5a4>
    d194:	7363c83a 	sub	r17,r14,r13
    d198:	5b09c83a 	sub	r4,r11,r12
    d19c:	745d803a 	cmpltu	r14,r14,r17
    d1a0:	2389c83a 	sub	r4,r4,r14
    d1a4:	04000044 	movi	r16,1
    d1a8:	003e0f06 	br	c9e8 <__subdf3+0xd4>
    d1ac:	00880034 	movhi	r2,8192
    d1b0:	5806977a 	slli	r3,r11,29
    d1b4:	10bfffc4 	addi	r2,r2,-1
    d1b8:	3084703a 	and	r2,r6,r2
    d1bc:	10c4b03a 	or	r2,r2,r3
    d1c0:	5826d0fa 	srli	r19,r11,3
    d1c4:	003eb206 	br	cc90 <__subdf3+0x37c>
    d1c8:	6ba3883a 	add	r17,r13,r14
    d1cc:	62c9883a 	add	r4,r12,r11
    d1d0:	8b5b803a 	cmpltu	r13,r17,r13
    d1d4:	2349883a 	add	r4,r4,r13
    d1d8:	2080202c 	andhi	r2,r4,128
    d1dc:	103ea326 	beq	r2,zero,cc6c <__subdf3+0x358>
    d1e0:	00bfe034 	movhi	r2,65408
    d1e4:	10bfffc4 	addi	r2,r2,-1
    d1e8:	2088703a 	and	r4,r4,r2
    d1ec:	04000044 	movi	r16,1
    d1f0:	003e9e06 	br	cc6c <__subdf3+0x358>
    d1f4:	00880034 	movhi	r2,8192
    d1f8:	5806977a 	slli	r3,r11,29
    d1fc:	10bfffc4 	addi	r2,r2,-1
    d200:	3084703a 	and	r2,r6,r2
    d204:	10c4b03a 	or	r2,r2,r3
    d208:	5826d0fa 	srli	r19,r11,3
    d20c:	003e9e06 	br	cc88 <__subdf3+0x374>
    d210:	8904b03a 	or	r2,r17,r4
    d214:	103eee26 	beq	r2,zero,cdd0 <__subdf3+0x4bc>
    d218:	003e9406 	br	cc6c <__subdf3+0x358>
    d21c:	40bff804 	addi	r2,r8,-32
    d220:	40c00820 	cmpeqi	r3,r8,32
    d224:	6084d83a 	srl	r2,r12,r2
    d228:	1800041e 	bne	r3,zero,d23c <__subdf3+0x928>
    d22c:	04c01004 	movi	r19,64
    d230:	9a11c83a 	sub	r8,r19,r8
    d234:	6226983a 	sll	r19,r12,r8
    d238:	6cdab03a 	or	r13,r13,r19
    d23c:	6822c03a 	cmpne	r17,r13,zero
    d240:	88a2b03a 	or	r17,r17,r2
    d244:	003f0606 	br	ce60 <__subdf3+0x54c>
    d248:	04c00434 	movhi	r19,16
    d24c:	9cffffc4 	addi	r19,r19,-1
    d250:	0025883a 	mov	r18,zero
    d254:	00bfffc4 	movi	r2,-1
    d258:	003ebc06 	br	cd4c <__subdf3+0x438>
    d25c:	6ba3883a 	add	r17,r13,r14
    d260:	62c9883a 	add	r4,r12,r11
    d264:	8b9d803a 	cmpltu	r14,r17,r14
    d268:	2389883a 	add	r4,r4,r14
    d26c:	003e7c06 	br	cc60 <__subdf3+0x34c>
    d270:	0005883a 	mov	r2,zero
    d274:	0201ffc4 	movi	r8,2047
    d278:	0009883a 	mov	r4,zero
    d27c:	003e0f06 	br	cabc <__subdf3+0x1a8>

0000d280 <__unorddf2>:
    d280:	2806d53a 	srli	r3,r5,20
    d284:	3810d53a 	srli	r8,r7,20
    d288:	00800434 	movhi	r2,16
    d28c:	18c1ffcc 	andi	r3,r3,2047
    d290:	10bfffc4 	addi	r2,r2,-1
    d294:	18c1ffd8 	cmpnei	r3,r3,2047
    d298:	288a703a 	and	r5,r5,r2
    d29c:	388e703a 	and	r7,r7,r2
    d2a0:	4201ffcc 	andi	r8,r8,2047
    d2a4:	18000426 	beq	r3,zero,d2b8 <__unorddf2+0x38>
    d2a8:	4201ffd8 	cmpnei	r8,r8,2047
    d2ac:	40000626 	beq	r8,zero,d2c8 <__unorddf2+0x48>
    d2b0:	0005883a 	mov	r2,zero
    d2b4:	f800283a 	ret
    d2b8:	214ab03a 	or	r5,r4,r5
    d2bc:	283ffa26 	beq	r5,zero,d2a8 <__unorddf2+0x28>
    d2c0:	00800044 	movi	r2,1
    d2c4:	f800283a 	ret
    d2c8:	398eb03a 	or	r7,r7,r6
    d2cc:	3804c03a 	cmpne	r2,r7,zero
    d2d0:	f800283a 	ret

0000d2d4 <__fixdfsi>:
    d2d4:	280cd53a 	srli	r6,r5,20
    d2d8:	00c00434 	movhi	r3,16
    d2dc:	18ffffc4 	addi	r3,r3,-1
    d2e0:	3181ffcc 	andi	r6,r6,2047
    d2e4:	31c0ffd0 	cmplti	r7,r6,1023
    d2e8:	28c6703a 	and	r3,r5,r3
    d2ec:	280ad7fa 	srli	r5,r5,31
    d2f0:	3800061e 	bne	r7,zero,d30c <__fixdfsi+0x38>
    d2f4:	30810790 	cmplti	r2,r6,1054
    d2f8:	1000061e 	bne	r2,zero,d314 <__fixdfsi+0x40>
    d2fc:	00a00034 	movhi	r2,32768
    d300:	10bfffc4 	addi	r2,r2,-1
    d304:	2885883a 	add	r2,r5,r2
    d308:	f800283a 	ret
    d30c:	0005883a 	mov	r2,zero
    d310:	f800283a 	ret
    d314:	00810cc4 	movi	r2,1075
    d318:	118fc83a 	sub	r7,r2,r6
    d31c:	38800808 	cmpgei	r2,r7,32
    d320:	18c00434 	orhi	r3,r3,16
    d324:	1000071e 	bne	r2,zero,d344 <__fixdfsi+0x70>
    d328:	30befb44 	addi	r2,r6,-1043
    d32c:	1886983a 	sll	r3,r3,r2
    d330:	21c4d83a 	srl	r2,r4,r7
    d334:	1884b03a 	or	r2,r3,r2
    d338:	283ff526 	beq	r5,zero,d310 <__fixdfsi+0x3c>
    d33c:	0085c83a 	sub	r2,zero,r2
    d340:	f800283a 	ret
    d344:	008104c4 	movi	r2,1043
    d348:	1185c83a 	sub	r2,r2,r6
    d34c:	1884d83a 	srl	r2,r3,r2
    d350:	003ff906 	br	d338 <__fixdfsi+0x64>

0000d354 <__floatsidf>:
    d354:	defffd04 	addi	sp,sp,-12
    d358:	dfc00215 	stw	ra,8(sp)
    d35c:	dc400115 	stw	r17,4(sp)
    d360:	dc000015 	stw	r16,0(sp)
    d364:	20001326 	beq	r4,zero,d3b4 <__floatsidf+0x60>
    d368:	2021883a 	mov	r16,r4
    d36c:	2022d7fa 	srli	r17,r4,31
    d370:	20002116 	blt	r4,zero,d3f8 <__floatsidf+0xa4>
    d374:	8009883a 	mov	r4,r16
    d378:	000d4b80 	call	d4b8 <__clzsi2>
    d37c:	01010784 	movi	r4,1054
    d380:	2089c83a 	sub	r4,r4,r2
    d384:	10c002c8 	cmpgei	r3,r2,11
    d388:	2101ffcc 	andi	r4,r4,2047
    d38c:	18001c1e 	bne	r3,zero,d400 <__floatsidf+0xac>
    d390:	018002c4 	movi	r6,11
    d394:	308dc83a 	sub	r6,r6,r2
    d398:	818ad83a 	srl	r5,r16,r6
    d39c:	00c00434 	movhi	r3,16
    d3a0:	10800544 	addi	r2,r2,21
    d3a4:	18ffffc4 	addi	r3,r3,-1
    d3a8:	8084983a 	sll	r2,r16,r2
    d3ac:	28ca703a 	and	r5,r5,r3
    d3b0:	00000406 	br	d3c4 <__floatsidf+0x70>
    d3b4:	0023883a 	mov	r17,zero
    d3b8:	0009883a 	mov	r4,zero
    d3bc:	000b883a 	mov	r5,zero
    d3c0:	0005883a 	mov	r2,zero
    d3c4:	2008953a 	slli	r4,r4,20
    d3c8:	8c403fcc 	andi	r17,r17,255
    d3cc:	01800434 	movhi	r6,16
    d3d0:	31bfffc4 	addi	r6,r6,-1
    d3d4:	880697fa 	slli	r3,r17,31
    d3d8:	298a703a 	and	r5,r5,r6
    d3dc:	290ab03a 	or	r5,r5,r4
    d3e0:	28c6b03a 	or	r3,r5,r3
    d3e4:	dfc00217 	ldw	ra,8(sp)
    d3e8:	dc400117 	ldw	r17,4(sp)
    d3ec:	dc000017 	ldw	r16,0(sp)
    d3f0:	dec00304 	addi	sp,sp,12
    d3f4:	f800283a 	ret
    d3f8:	0121c83a 	sub	r16,zero,r4
    d3fc:	003fdd06 	br	d374 <__floatsidf+0x20>
    d400:	10bffd44 	addi	r2,r2,-11
    d404:	808a983a 	sll	r5,r16,r2
    d408:	00800434 	movhi	r2,16
    d40c:	10bfffc4 	addi	r2,r2,-1
    d410:	288a703a 	and	r5,r5,r2
    d414:	0005883a 	mov	r2,zero
    d418:	003fea06 	br	d3c4 <__floatsidf+0x70>

0000d41c <__floatunsidf>:
    d41c:	defffe04 	addi	sp,sp,-8
    d420:	dc000015 	stw	r16,0(sp)
    d424:	dfc00115 	stw	ra,4(sp)
    d428:	2021883a 	mov	r16,r4
    d42c:	20000f26 	beq	r4,zero,d46c <__floatunsidf+0x50>
    d430:	000d4b80 	call	d4b8 <__clzsi2>
    d434:	01010784 	movi	r4,1054
    d438:	2089c83a 	sub	r4,r4,r2
    d43c:	10c002c8 	cmpgei	r3,r2,11
    d440:	2101ffcc 	andi	r4,r4,2047
    d444:	1800151e 	bne	r3,zero,d49c <__floatunsidf+0x80>
    d448:	00c002c4 	movi	r3,11
    d44c:	1887c83a 	sub	r3,r3,r2
    d450:	80c6d83a 	srl	r3,r16,r3
    d454:	01400434 	movhi	r5,16
    d458:	10800544 	addi	r2,r2,21
    d45c:	297fffc4 	addi	r5,r5,-1
    d460:	80a0983a 	sll	r16,r16,r2
    d464:	1944703a 	and	r2,r3,r5
    d468:	00000206 	br	d474 <__floatunsidf+0x58>
    d46c:	0009883a 	mov	r4,zero
    d470:	0005883a 	mov	r2,zero
    d474:	2008953a 	slli	r4,r4,20
    d478:	00c00434 	movhi	r3,16
    d47c:	18ffffc4 	addi	r3,r3,-1
    d480:	10c6703a 	and	r3,r2,r3
    d484:	1906b03a 	or	r3,r3,r4
    d488:	8005883a 	mov	r2,r16
    d48c:	dfc00117 	ldw	ra,4(sp)
    d490:	dc000017 	ldw	r16,0(sp)
    d494:	dec00204 	addi	sp,sp,8
    d498:	f800283a 	ret
    d49c:	10bffd44 	addi	r2,r2,-11
    d4a0:	8084983a 	sll	r2,r16,r2
    d4a4:	00c00434 	movhi	r3,16
    d4a8:	18ffffc4 	addi	r3,r3,-1
    d4ac:	10c4703a 	and	r2,r2,r3
    d4b0:	0021883a 	mov	r16,zero
    d4b4:	003fef06 	br	d474 <__floatunsidf+0x58>

0000d4b8 <__clzsi2>:
    d4b8:	00bfffd4 	movui	r2,65535
    d4bc:	11000b36 	bltu	r2,r4,d4ec <__clzsi2+0x34>
    d4c0:	20804030 	cmpltui	r2,r4,256
    d4c4:	1000071e 	bne	r2,zero,d4e4 <__clzsi2+0x2c>
    d4c8:	2008d23a 	srli	r4,r4,8
    d4cc:	01400604 	movi	r5,24
    d4d0:	00c00074 	movhi	r3,1
    d4d4:	20c7883a 	add	r3,r4,r3
    d4d8:	18bffc03 	ldbu	r2,-16(r3)
    d4dc:	2885c83a 	sub	r2,r5,r2
    d4e0:	f800283a 	ret
    d4e4:	01400804 	movi	r5,32
    d4e8:	003ff906 	br	d4d0 <__clzsi2+0x18>
    d4ec:	00804034 	movhi	r2,256
    d4f0:	20800336 	bltu	r4,r2,d500 <__clzsi2+0x48>
    d4f4:	2008d63a 	srli	r4,r4,24
    d4f8:	01400204 	movi	r5,8
    d4fc:	003ff406 	br	d4d0 <__clzsi2+0x18>
    d500:	2008d43a 	srli	r4,r4,16
    d504:	01400404 	movi	r5,16
    d508:	003ff106 	br	d4d0 <__clzsi2+0x18>

0000d50c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d50c:	defffe04 	addi	sp,sp,-8
    d510:	dfc00115 	stw	ra,4(sp)
    d514:	df000015 	stw	fp,0(sp)
    d518:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d51c:	d0a00e17 	ldw	r2,-32712(gp)
    d520:	10000326 	beq	r2,zero,d530 <alt_get_errno+0x24>
    d524:	d0a00e17 	ldw	r2,-32712(gp)
    d528:	103ee83a 	callr	r2
    d52c:	00000106 	br	d534 <alt_get_errno+0x28>
    d530:	d0a73204 	addi	r2,gp,-25400
}
    d534:	e037883a 	mov	sp,fp
    d538:	dfc00117 	ldw	ra,4(sp)
    d53c:	df000017 	ldw	fp,0(sp)
    d540:	dec00204 	addi	sp,sp,8
    d544:	f800283a 	ret

0000d548 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d548:	defffb04 	addi	sp,sp,-20
    d54c:	dfc00415 	stw	ra,16(sp)
    d550:	df000315 	stw	fp,12(sp)
    d554:	df000304 	addi	fp,sp,12
    d558:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d55c:	e0bffd17 	ldw	r2,-12(fp)
    d560:	10000916 	blt	r2,zero,d588 <close+0x40>
    d564:	e0fffd17 	ldw	r3,-12(fp)
    d568:	1805883a 	mov	r2,r3
    d56c:	1085883a 	add	r2,r2,r2
    d570:	10c5883a 	add	r2,r2,r3
    d574:	100490ba 	slli	r2,r2,2
    d578:	00c00074 	movhi	r3,1
    d57c:	18c2d904 	addi	r3,r3,2916
    d580:	10c5883a 	add	r2,r2,r3
    d584:	00000106 	br	d58c <close+0x44>
    d588:	0005883a 	mov	r2,zero
    d58c:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
    d590:	e0bfff17 	ldw	r2,-4(fp)
    d594:	10001926 	beq	r2,zero,d5fc <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d598:	e0bfff17 	ldw	r2,-4(fp)
    d59c:	10800017 	ldw	r2,0(r2)
    d5a0:	10800417 	ldw	r2,16(r2)
    d5a4:	10000626 	beq	r2,zero,d5c0 <close+0x78>
    d5a8:	e0bfff17 	ldw	r2,-4(fp)
    d5ac:	10800017 	ldw	r2,0(r2)
    d5b0:	10800417 	ldw	r2,16(r2)
    d5b4:	e13fff17 	ldw	r4,-4(fp)
    d5b8:	103ee83a 	callr	r2
    d5bc:	00000106 	br	d5c4 <close+0x7c>
    d5c0:	0005883a 	mov	r2,zero
    d5c4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d5c8:	e13ffd17 	ldw	r4,-12(fp)
    d5cc:	000dc440 	call	dc44 <alt_release_fd>
    if (rval < 0)
    d5d0:	e0bffe17 	ldw	r2,-8(fp)
    d5d4:	1000070e 	bge	r2,zero,d5f4 <close+0xac>
    {
      ALT_ERRNO = -rval;
    d5d8:	000d50c0 	call	d50c <alt_get_errno>
    d5dc:	1007883a 	mov	r3,r2
    d5e0:	e0bffe17 	ldw	r2,-8(fp)
    d5e4:	0085c83a 	sub	r2,zero,r2
    d5e8:	18800015 	stw	r2,0(r3)
      return -1;
    d5ec:	00bfffc4 	movi	r2,-1
    d5f0:	00000706 	br	d610 <close+0xc8>
    }
    return 0;
    d5f4:	0005883a 	mov	r2,zero
    d5f8:	00000506 	br	d610 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d5fc:	000d50c0 	call	d50c <alt_get_errno>
    d600:	1007883a 	mov	r3,r2
    d604:	00801444 	movi	r2,81
    d608:	18800015 	stw	r2,0(r3)
    return -1;
    d60c:	00bfffc4 	movi	r2,-1
  }
}
    d610:	e037883a 	mov	sp,fp
    d614:	dfc00117 	ldw	ra,4(sp)
    d618:	df000017 	ldw	fp,0(sp)
    d61c:	dec00204 	addi	sp,sp,8
    d620:	f800283a 	ret

0000d624 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d624:	defffc04 	addi	sp,sp,-16
    d628:	df000315 	stw	fp,12(sp)
    d62c:	df000304 	addi	fp,sp,12
    d630:	e13fff15 	stw	r4,-4(fp)
    d634:	e17ffe15 	stw	r5,-8(fp)
    d638:	e1bffd15 	stw	r6,-12(fp)
  return len;
    d63c:	e0bffd17 	ldw	r2,-12(fp)
}
    d640:	e037883a 	mov	sp,fp
    d644:	df000017 	ldw	fp,0(sp)
    d648:	dec00104 	addi	sp,sp,4
    d64c:	f800283a 	ret

0000d650 <alt_get_errno>:
{
    d650:	defffe04 	addi	sp,sp,-8
    d654:	dfc00115 	stw	ra,4(sp)
    d658:	df000015 	stw	fp,0(sp)
    d65c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d660:	d0a00e17 	ldw	r2,-32712(gp)
    d664:	10000326 	beq	r2,zero,d674 <alt_get_errno+0x24>
    d668:	d0a00e17 	ldw	r2,-32712(gp)
    d66c:	103ee83a 	callr	r2
    d670:	00000106 	br	d678 <alt_get_errno+0x28>
    d674:	d0a73204 	addi	r2,gp,-25400
}
    d678:	e037883a 	mov	sp,fp
    d67c:	dfc00117 	ldw	ra,4(sp)
    d680:	df000017 	ldw	fp,0(sp)
    d684:	dec00204 	addi	sp,sp,8
    d688:	f800283a 	ret

0000d68c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d68c:	defffb04 	addi	sp,sp,-20
    d690:	dfc00415 	stw	ra,16(sp)
    d694:	df000315 	stw	fp,12(sp)
    d698:	df000304 	addi	fp,sp,12
    d69c:	e13ffe15 	stw	r4,-8(fp)
    d6a0:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d6a4:	e0bffe17 	ldw	r2,-8(fp)
    d6a8:	10000916 	blt	r2,zero,d6d0 <fstat+0x44>
    d6ac:	e0fffe17 	ldw	r3,-8(fp)
    d6b0:	1805883a 	mov	r2,r3
    d6b4:	1085883a 	add	r2,r2,r2
    d6b8:	10c5883a 	add	r2,r2,r3
    d6bc:	100490ba 	slli	r2,r2,2
    d6c0:	00c00074 	movhi	r3,1
    d6c4:	18c2d904 	addi	r3,r3,2916
    d6c8:	10c5883a 	add	r2,r2,r3
    d6cc:	00000106 	br	d6d4 <fstat+0x48>
    d6d0:	0005883a 	mov	r2,zero
    d6d4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d6d8:	e0bfff17 	ldw	r2,-4(fp)
    d6dc:	10001026 	beq	r2,zero,d720 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d6e0:	e0bfff17 	ldw	r2,-4(fp)
    d6e4:	10800017 	ldw	r2,0(r2)
    d6e8:	10800817 	ldw	r2,32(r2)
    d6ec:	10000726 	beq	r2,zero,d70c <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
    d6f0:	e0bfff17 	ldw	r2,-4(fp)
    d6f4:	10800017 	ldw	r2,0(r2)
    d6f8:	10800817 	ldw	r2,32(r2)
    d6fc:	e17ffd17 	ldw	r5,-12(fp)
    d700:	e13fff17 	ldw	r4,-4(fp)
    d704:	103ee83a 	callr	r2
    d708:	00000a06 	br	d734 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d70c:	e0bffd17 	ldw	r2,-12(fp)
    d710:	00c80004 	movi	r3,8192
    d714:	10c00115 	stw	r3,4(r2)
      return 0;
    d718:	0005883a 	mov	r2,zero
    d71c:	00000506 	br	d734 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d720:	000d6500 	call	d650 <alt_get_errno>
    d724:	1007883a 	mov	r3,r2
    d728:	00801444 	movi	r2,81
    d72c:	18800015 	stw	r2,0(r3)
    return -1;
    d730:	00bfffc4 	movi	r2,-1
  }
}
    d734:	e037883a 	mov	sp,fp
    d738:	dfc00117 	ldw	ra,4(sp)
    d73c:	df000017 	ldw	fp,0(sp)
    d740:	dec00204 	addi	sp,sp,8
    d744:	f800283a 	ret

0000d748 <alt_get_errno>:
{
    d748:	defffe04 	addi	sp,sp,-8
    d74c:	dfc00115 	stw	ra,4(sp)
    d750:	df000015 	stw	fp,0(sp)
    d754:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d758:	d0a00e17 	ldw	r2,-32712(gp)
    d75c:	10000326 	beq	r2,zero,d76c <alt_get_errno+0x24>
    d760:	d0a00e17 	ldw	r2,-32712(gp)
    d764:	103ee83a 	callr	r2
    d768:	00000106 	br	d770 <alt_get_errno+0x28>
    d76c:	d0a73204 	addi	r2,gp,-25400
}
    d770:	e037883a 	mov	sp,fp
    d774:	dfc00117 	ldw	ra,4(sp)
    d778:	df000017 	ldw	fp,0(sp)
    d77c:	dec00204 	addi	sp,sp,8
    d780:	f800283a 	ret

0000d784 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d784:	deffea04 	addi	sp,sp,-88
    d788:	dfc01515 	stw	ra,84(sp)
    d78c:	df001415 	stw	fp,80(sp)
    d790:	df001404 	addi	fp,sp,80
    d794:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d798:	e0bfec17 	ldw	r2,-80(fp)
    d79c:	10000916 	blt	r2,zero,d7c4 <isatty+0x40>
    d7a0:	e0ffec17 	ldw	r3,-80(fp)
    d7a4:	1805883a 	mov	r2,r3
    d7a8:	1085883a 	add	r2,r2,r2
    d7ac:	10c5883a 	add	r2,r2,r3
    d7b0:	100490ba 	slli	r2,r2,2
    d7b4:	00c00074 	movhi	r3,1
    d7b8:	18c2d904 	addi	r3,r3,2916
    d7bc:	10c5883a 	add	r2,r2,r3
    d7c0:	00000106 	br	d7c8 <isatty+0x44>
    d7c4:	0005883a 	mov	r2,zero
    d7c8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d7cc:	e0bfff17 	ldw	r2,-4(fp)
    d7d0:	10000e26 	beq	r2,zero,d80c <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d7d4:	e0bfff17 	ldw	r2,-4(fp)
    d7d8:	10800017 	ldw	r2,0(r2)
    d7dc:	10800817 	ldw	r2,32(r2)
    d7e0:	1000021e 	bne	r2,zero,d7ec <isatty+0x68>
    {
      return 1;
    d7e4:	00800044 	movi	r2,1
    d7e8:	00000d06 	br	d820 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d7ec:	e0bfed04 	addi	r2,fp,-76
    d7f0:	100b883a 	mov	r5,r2
    d7f4:	e13fec17 	ldw	r4,-80(fp)
    d7f8:	000d68c0 	call	d68c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d7fc:	e0bfee17 	ldw	r2,-72(fp)
    d800:	10880020 	cmpeqi	r2,r2,8192
    d804:	10803fcc 	andi	r2,r2,255
    d808:	00000506 	br	d820 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d80c:	000d7480 	call	d748 <alt_get_errno>
    d810:	1007883a 	mov	r3,r2
    d814:	00801444 	movi	r2,81
    d818:	18800015 	stw	r2,0(r3)
    return 0;
    d81c:	0005883a 	mov	r2,zero
  }
}
    d820:	e037883a 	mov	sp,fp
    d824:	dfc00117 	ldw	ra,4(sp)
    d828:	df000017 	ldw	fp,0(sp)
    d82c:	dec00204 	addi	sp,sp,8
    d830:	f800283a 	ret

0000d834 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d834:	defffc04 	addi	sp,sp,-16
    d838:	df000315 	stw	fp,12(sp)
    d83c:	df000304 	addi	fp,sp,12
    d840:	e13fff15 	stw	r4,-4(fp)
    d844:	e17ffe15 	stw	r5,-8(fp)
    d848:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
    d84c:	e0fffe17 	ldw	r3,-8(fp)
    d850:	e0bfff17 	ldw	r2,-4(fp)
    d854:	18800c26 	beq	r3,r2,d888 <alt_load_section+0x54>
  {
    while( to != end )
    d858:	00000806 	br	d87c <alt_load_section+0x48>
    {
      *to++ = *from++;
    d85c:	e0ffff17 	ldw	r3,-4(fp)
    d860:	18800104 	addi	r2,r3,4
    d864:	e0bfff15 	stw	r2,-4(fp)
    d868:	e0bffe17 	ldw	r2,-8(fp)
    d86c:	11000104 	addi	r4,r2,4
    d870:	e13ffe15 	stw	r4,-8(fp)
    d874:	18c00017 	ldw	r3,0(r3)
    d878:	10c00015 	stw	r3,0(r2)
    while( to != end )
    d87c:	e0fffe17 	ldw	r3,-8(fp)
    d880:	e0bffd17 	ldw	r2,-12(fp)
    d884:	18bff51e 	bne	r3,r2,d85c <alt_load_section+0x28>
    }
  }
}
    d888:	0001883a 	nop
    d88c:	e037883a 	mov	sp,fp
    d890:	df000017 	ldw	fp,0(sp)
    d894:	dec00104 	addi	sp,sp,4
    d898:	f800283a 	ret

0000d89c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d89c:	defffe04 	addi	sp,sp,-8
    d8a0:	dfc00115 	stw	ra,4(sp)
    d8a4:	df000015 	stw	fp,0(sp)
    d8a8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d8ac:	01800074 	movhi	r6,1
    d8b0:	31876404 	addi	r6,r6,7568
    d8b4:	01400074 	movhi	r5,1
    d8b8:	29404904 	addi	r5,r5,292
    d8bc:	01000074 	movhi	r4,1
    d8c0:	21076404 	addi	r4,r4,7568
    d8c4:	000d8340 	call	d834 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d8c8:	01800034 	movhi	r6,0
    d8cc:	31808904 	addi	r6,r6,548
    d8d0:	01400034 	movhi	r5,0
    d8d4:	29400804 	addi	r5,r5,32
    d8d8:	01000034 	movhi	r4,0
    d8dc:	21000804 	addi	r4,r4,32
    d8e0:	000d8340 	call	d834 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d8e4:	01800074 	movhi	r6,1
    d8e8:	31804904 	addi	r6,r6,292
    d8ec:	01400074 	movhi	r5,1
    d8f0:	297ea104 	addi	r5,r5,-1404
    d8f4:	01000074 	movhi	r4,1
    d8f8:	213ea104 	addi	r4,r4,-1404
    d8fc:	000d8340 	call	d834 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d900:	000eae80 	call	eae8 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d904:	000eca80 	call	eca8 <alt_icache_flush_all>
}
    d908:	0001883a 	nop
    d90c:	e037883a 	mov	sp,fp
    d910:	dfc00117 	ldw	ra,4(sp)
    d914:	df000017 	ldw	fp,0(sp)
    d918:	dec00204 	addi	sp,sp,8
    d91c:	f800283a 	ret

0000d920 <alt_get_errno>:
{
    d920:	defffe04 	addi	sp,sp,-8
    d924:	dfc00115 	stw	ra,4(sp)
    d928:	df000015 	stw	fp,0(sp)
    d92c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d930:	d0a00e17 	ldw	r2,-32712(gp)
    d934:	10000326 	beq	r2,zero,d944 <alt_get_errno+0x24>
    d938:	d0a00e17 	ldw	r2,-32712(gp)
    d93c:	103ee83a 	callr	r2
    d940:	00000106 	br	d948 <alt_get_errno+0x28>
    d944:	d0a73204 	addi	r2,gp,-25400
}
    d948:	e037883a 	mov	sp,fp
    d94c:	dfc00117 	ldw	ra,4(sp)
    d950:	df000017 	ldw	fp,0(sp)
    d954:	dec00204 	addi	sp,sp,8
    d958:	f800283a 	ret

0000d95c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d95c:	defff904 	addi	sp,sp,-28
    d960:	dfc00615 	stw	ra,24(sp)
    d964:	df000515 	stw	fp,20(sp)
    d968:	df000504 	addi	fp,sp,20
    d96c:	e13ffd15 	stw	r4,-12(fp)
    d970:	e17ffc15 	stw	r5,-16(fp)
    d974:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d978:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d97c:	e0bffd17 	ldw	r2,-12(fp)
    d980:	10000916 	blt	r2,zero,d9a8 <lseek+0x4c>
    d984:	e0fffd17 	ldw	r3,-12(fp)
    d988:	1805883a 	mov	r2,r3
    d98c:	1085883a 	add	r2,r2,r2
    d990:	10c5883a 	add	r2,r2,r3
    d994:	100490ba 	slli	r2,r2,2
    d998:	00c00074 	movhi	r3,1
    d99c:	18c2d904 	addi	r3,r3,2916
    d9a0:	10c5883a 	add	r2,r2,r3
    d9a4:	00000106 	br	d9ac <lseek+0x50>
    d9a8:	0005883a 	mov	r2,zero
    d9ac:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
    d9b0:	e0bffe17 	ldw	r2,-8(fp)
    d9b4:	10001026 	beq	r2,zero,d9f8 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d9b8:	e0bffe17 	ldw	r2,-8(fp)
    d9bc:	10800017 	ldw	r2,0(r2)
    d9c0:	10800717 	ldw	r2,28(r2)
    d9c4:	10000926 	beq	r2,zero,d9ec <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d9c8:	e0bffe17 	ldw	r2,-8(fp)
    d9cc:	10800017 	ldw	r2,0(r2)
    d9d0:	10800717 	ldw	r2,28(r2)
    d9d4:	e1bffb17 	ldw	r6,-20(fp)
    d9d8:	e17ffc17 	ldw	r5,-16(fp)
    d9dc:	e13ffe17 	ldw	r4,-8(fp)
    d9e0:	103ee83a 	callr	r2
    d9e4:	e0bfff15 	stw	r2,-4(fp)
    d9e8:	00000506 	br	da00 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d9ec:	00bfde84 	movi	r2,-134
    d9f0:	e0bfff15 	stw	r2,-4(fp)
    d9f4:	00000206 	br	da00 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
    d9f8:	00bfebc4 	movi	r2,-81
    d9fc:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
    da00:	e0bfff17 	ldw	r2,-4(fp)
    da04:	1000070e 	bge	r2,zero,da24 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
    da08:	000d9200 	call	d920 <alt_get_errno>
    da0c:	1007883a 	mov	r3,r2
    da10:	e0bfff17 	ldw	r2,-4(fp)
    da14:	0085c83a 	sub	r2,zero,r2
    da18:	18800015 	stw	r2,0(r3)
    rc = -1;
    da1c:	00bfffc4 	movi	r2,-1
    da20:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
    da24:	e0bfff17 	ldw	r2,-4(fp)
}
    da28:	e037883a 	mov	sp,fp
    da2c:	dfc00117 	ldw	ra,4(sp)
    da30:	df000017 	ldw	fp,0(sp)
    da34:	dec00204 	addi	sp,sp,8
    da38:	f800283a 	ret

0000da3c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    da3c:	defffd04 	addi	sp,sp,-12
    da40:	dfc00215 	stw	ra,8(sp)
    da44:	df000115 	stw	fp,4(sp)
    da48:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    da4c:	0009883a 	mov	r4,zero
    da50:	000ded80 	call	ded8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    da54:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    da58:	000df100 	call	df10 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    da5c:	01800074 	movhi	r6,1
    da60:	31803f04 	addi	r6,r6,252
    da64:	01400074 	movhi	r5,1
    da68:	29403f04 	addi	r5,r5,252
    da6c:	01000074 	movhi	r4,1
    da70:	21003f04 	addi	r4,r4,252
    da74:	000f0300 	call	f030 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    da78:	000ebe80 	call	ebe8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    da7c:	01000074 	movhi	r4,1
    da80:	213b1204 	addi	r4,r4,-5048
    da84:	000f7d40 	call	f7d4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    da88:	d0a73417 	ldw	r2,-25392(gp)
    da8c:	d0e73517 	ldw	r3,-25388(gp)
    da90:	d1273617 	ldw	r4,-25384(gp)
    da94:	200d883a 	mov	r6,r4
    da98:	180b883a 	mov	r5,r3
    da9c:	1009883a 	mov	r4,r2
    daa0:	00004180 	call	418 <main>
    daa4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    daa8:	01000044 	movi	r4,1
    daac:	000d5480 	call	d548 <close>
  exit (result);
    dab0:	e13fff17 	ldw	r4,-4(fp)
    dab4:	000f7e80 	call	f7e8 <exit>

0000dab8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    dab8:	defffe04 	addi	sp,sp,-8
    dabc:	df000115 	stw	fp,4(sp)
    dac0:	df000104 	addi	fp,sp,4
    dac4:	e13fff15 	stw	r4,-4(fp)
}
    dac8:	0001883a 	nop
    dacc:	e037883a 	mov	sp,fp
    dad0:	df000017 	ldw	fp,0(sp)
    dad4:	dec00104 	addi	sp,sp,4
    dad8:	f800283a 	ret

0000dadc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    dadc:	defffe04 	addi	sp,sp,-8
    dae0:	df000115 	stw	fp,4(sp)
    dae4:	df000104 	addi	fp,sp,4
    dae8:	e13fff15 	stw	r4,-4(fp)
}
    daec:	0001883a 	nop
    daf0:	e037883a 	mov	sp,fp
    daf4:	df000017 	ldw	fp,0(sp)
    daf8:	dec00104 	addi	sp,sp,4
    dafc:	f800283a 	ret

0000db00 <alt_get_errno>:
{
    db00:	defffe04 	addi	sp,sp,-8
    db04:	dfc00115 	stw	ra,4(sp)
    db08:	df000015 	stw	fp,0(sp)
    db0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    db10:	d0a00e17 	ldw	r2,-32712(gp)
    db14:	10000326 	beq	r2,zero,db24 <alt_get_errno+0x24>
    db18:	d0a00e17 	ldw	r2,-32712(gp)
    db1c:	103ee83a 	callr	r2
    db20:	00000106 	br	db28 <alt_get_errno+0x28>
    db24:	d0a73204 	addi	r2,gp,-25400
}
    db28:	e037883a 	mov	sp,fp
    db2c:	dfc00117 	ldw	ra,4(sp)
    db30:	df000017 	ldw	fp,0(sp)
    db34:	dec00204 	addi	sp,sp,8
    db38:	f800283a 	ret

0000db3c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    db3c:	defff904 	addi	sp,sp,-28
    db40:	dfc00615 	stw	ra,24(sp)
    db44:	df000515 	stw	fp,20(sp)
    db48:	df000504 	addi	fp,sp,20
    db4c:	e13ffd15 	stw	r4,-12(fp)
    db50:	e17ffc15 	stw	r5,-16(fp)
    db54:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    db58:	e0bffd17 	ldw	r2,-12(fp)
    db5c:	10000916 	blt	r2,zero,db84 <read+0x48>
    db60:	e0fffd17 	ldw	r3,-12(fp)
    db64:	1805883a 	mov	r2,r3
    db68:	1085883a 	add	r2,r2,r2
    db6c:	10c5883a 	add	r2,r2,r3
    db70:	100490ba 	slli	r2,r2,2
    db74:	00c00074 	movhi	r3,1
    db78:	18c2d904 	addi	r3,r3,2916
    db7c:	10c5883a 	add	r2,r2,r3
    db80:	00000106 	br	db88 <read+0x4c>
    db84:	0005883a 	mov	r2,zero
    db88:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    db8c:	e0bfff17 	ldw	r2,-4(fp)
    db90:	10002226 	beq	r2,zero,dc1c <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    db94:	e0bfff17 	ldw	r2,-4(fp)
    db98:	10800217 	ldw	r2,8(r2)
    db9c:	108000cc 	andi	r2,r2,3
    dba0:	10800060 	cmpeqi	r2,r2,1
    dba4:	1000181e 	bne	r2,zero,dc08 <read+0xcc>
        (fd->dev->read))
    dba8:	e0bfff17 	ldw	r2,-4(fp)
    dbac:	10800017 	ldw	r2,0(r2)
    dbb0:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    dbb4:	10001426 	beq	r2,zero,dc08 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    dbb8:	e0bfff17 	ldw	r2,-4(fp)
    dbbc:	10800017 	ldw	r2,0(r2)
    dbc0:	10800517 	ldw	r2,20(r2)
    dbc4:	e0fffb17 	ldw	r3,-20(fp)
    dbc8:	180d883a 	mov	r6,r3
    dbcc:	e17ffc17 	ldw	r5,-16(fp)
    dbd0:	e13fff17 	ldw	r4,-4(fp)
    dbd4:	103ee83a 	callr	r2
    dbd8:	e0bffe15 	stw	r2,-8(fp)
    dbdc:	e0bffe17 	ldw	r2,-8(fp)
    dbe0:	1000070e 	bge	r2,zero,dc00 <read+0xc4>
        {
          ALT_ERRNO = -rval;
    dbe4:	000db000 	call	db00 <alt_get_errno>
    dbe8:	1007883a 	mov	r3,r2
    dbec:	e0bffe17 	ldw	r2,-8(fp)
    dbf0:	0085c83a 	sub	r2,zero,r2
    dbf4:	18800015 	stw	r2,0(r3)
          return -1;
    dbf8:	00bfffc4 	movi	r2,-1
    dbfc:	00000c06 	br	dc30 <read+0xf4>
        }
        return rval;
    dc00:	e0bffe17 	ldw	r2,-8(fp)
    dc04:	00000a06 	br	dc30 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
    dc08:	000db000 	call	db00 <alt_get_errno>
    dc0c:	1007883a 	mov	r3,r2
    dc10:	00800344 	movi	r2,13
    dc14:	18800015 	stw	r2,0(r3)
    dc18:	00000406 	br	dc2c <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    dc1c:	000db000 	call	db00 <alt_get_errno>
    dc20:	1007883a 	mov	r3,r2
    dc24:	00801444 	movi	r2,81
    dc28:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dc2c:	00bfffc4 	movi	r2,-1
}
    dc30:	e037883a 	mov	sp,fp
    dc34:	dfc00117 	ldw	ra,4(sp)
    dc38:	df000017 	ldw	fp,0(sp)
    dc3c:	dec00204 	addi	sp,sp,8
    dc40:	f800283a 	ret

0000dc44 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    dc44:	defffe04 	addi	sp,sp,-8
    dc48:	df000115 	stw	fp,4(sp)
    dc4c:	df000104 	addi	fp,sp,4
    dc50:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    dc54:	e0bfff17 	ldw	r2,-4(fp)
    dc58:	108000d0 	cmplti	r2,r2,3
    dc5c:	1000101e 	bne	r2,zero,dca0 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
    dc60:	e0ffff17 	ldw	r3,-4(fp)
    dc64:	1805883a 	mov	r2,r3
    dc68:	1085883a 	add	r2,r2,r2
    dc6c:	10c5883a 	add	r2,r2,r3
    dc70:	100490ba 	slli	r2,r2,2
    dc74:	00c00074 	movhi	r3,1
    dc78:	10c7883a 	add	r3,r2,r3
    dc7c:	1802db15 	stw	zero,2924(r3)
    alt_fd_list[fd].dev      = 0;
    dc80:	e0ffff17 	ldw	r3,-4(fp)
    dc84:	1805883a 	mov	r2,r3
    dc88:	1085883a 	add	r2,r2,r2
    dc8c:	10c5883a 	add	r2,r2,r3
    dc90:	100490ba 	slli	r2,r2,2
    dc94:	00c00074 	movhi	r3,1
    dc98:	10c7883a 	add	r3,r2,r3
    dc9c:	1802d915 	stw	zero,2916(r3)
  }
}
    dca0:	0001883a 	nop
    dca4:	e037883a 	mov	sp,fp
    dca8:	df000017 	ldw	fp,0(sp)
    dcac:	dec00104 	addi	sp,sp,4
    dcb0:	f800283a 	ret

0000dcb4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    dcb4:	defff904 	addi	sp,sp,-28
    dcb8:	df000615 	stw	fp,24(sp)
    dcbc:	df000604 	addi	fp,sp,24
    dcc0:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
    dcc4:	0005303a 	rdctl	r2,status
    dcc8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dccc:	e0fffd17 	ldw	r3,-12(fp)
    dcd0:	00bfff84 	movi	r2,-2
    dcd4:	1884703a 	and	r2,r3,r2
    dcd8:	1001703a 	wrctl	status,r2
  return context;
    dcdc:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    dce0:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    dce4:	d0a00f17 	ldw	r2,-32708(gp)
    dce8:	10c000c4 	addi	r3,r2,3
    dcec:	00bfff04 	movi	r2,-4
    dcf0:	1884703a 	and	r2,r3,r2
    dcf4:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    dcf8:	d0e00f17 	ldw	r3,-32708(gp)
    dcfc:	e0bffa17 	ldw	r2,-24(fp)
    dd00:	1887883a 	add	r3,r3,r2
    dd04:	008000b4 	movhi	r2,2
    dd08:	10bd0004 	addi	r2,r2,-3072
    dd0c:	10c0062e 	bgeu	r2,r3,dd28 <sbrk+0x74>
    dd10:	e0bfff17 	ldw	r2,-4(fp)
    dd14:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    dd18:	e0bffc17 	ldw	r2,-16(fp)
    dd1c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    dd20:	00bfffc4 	movi	r2,-1
    dd24:	00000b06 	br	dd54 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    dd28:	d0a00f17 	ldw	r2,-32708(gp)
    dd2c:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
    dd30:	d0e00f17 	ldw	r3,-32708(gp)
    dd34:	e0bffa17 	ldw	r2,-24(fp)
    dd38:	1885883a 	add	r2,r3,r2
    dd3c:	d0a00f15 	stw	r2,-32708(gp)
    dd40:	e0bfff17 	ldw	r2,-4(fp)
    dd44:	e0bffb15 	stw	r2,-20(fp)
    dd48:	e0bffb17 	ldw	r2,-20(fp)
    dd4c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    dd50:	e0bffe17 	ldw	r2,-8(fp)
} 
    dd54:	e037883a 	mov	sp,fp
    dd58:	df000017 	ldw	fp,0(sp)
    dd5c:	dec00104 	addi	sp,sp,4
    dd60:	f800283a 	ret

0000dd64 <alt_get_errno>:
{
    dd64:	defffe04 	addi	sp,sp,-8
    dd68:	dfc00115 	stw	ra,4(sp)
    dd6c:	df000015 	stw	fp,0(sp)
    dd70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dd74:	d0a00e17 	ldw	r2,-32712(gp)
    dd78:	10000326 	beq	r2,zero,dd88 <alt_get_errno+0x24>
    dd7c:	d0a00e17 	ldw	r2,-32712(gp)
    dd80:	103ee83a 	callr	r2
    dd84:	00000106 	br	dd8c <alt_get_errno+0x28>
    dd88:	d0a73204 	addi	r2,gp,-25400
}
    dd8c:	e037883a 	mov	sp,fp
    dd90:	dfc00117 	ldw	ra,4(sp)
    dd94:	df000017 	ldw	fp,0(sp)
    dd98:	dec00204 	addi	sp,sp,8
    dd9c:	f800283a 	ret

0000dda0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    dda0:	defff904 	addi	sp,sp,-28
    dda4:	dfc00615 	stw	ra,24(sp)
    dda8:	df000515 	stw	fp,20(sp)
    ddac:	df000504 	addi	fp,sp,20
    ddb0:	e13ffd15 	stw	r4,-12(fp)
    ddb4:	e17ffc15 	stw	r5,-16(fp)
    ddb8:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    ddbc:	e0bffd17 	ldw	r2,-12(fp)
    ddc0:	10000916 	blt	r2,zero,dde8 <write+0x48>
    ddc4:	e0fffd17 	ldw	r3,-12(fp)
    ddc8:	1805883a 	mov	r2,r3
    ddcc:	1085883a 	add	r2,r2,r2
    ddd0:	10c5883a 	add	r2,r2,r3
    ddd4:	100490ba 	slli	r2,r2,2
    ddd8:	00c00074 	movhi	r3,1
    dddc:	18c2d904 	addi	r3,r3,2916
    dde0:	10c5883a 	add	r2,r2,r3
    dde4:	00000106 	br	ddec <write+0x4c>
    dde8:	0005883a 	mov	r2,zero
    ddec:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    ddf0:	e0bfff17 	ldw	r2,-4(fp)
    ddf4:	10002126 	beq	r2,zero,de7c <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    ddf8:	e0bfff17 	ldw	r2,-4(fp)
    ddfc:	10800217 	ldw	r2,8(r2)
    de00:	108000cc 	andi	r2,r2,3
    de04:	10001826 	beq	r2,zero,de68 <write+0xc8>
    de08:	e0bfff17 	ldw	r2,-4(fp)
    de0c:	10800017 	ldw	r2,0(r2)
    de10:	10800617 	ldw	r2,24(r2)
    de14:	10001426 	beq	r2,zero,de68 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    de18:	e0bfff17 	ldw	r2,-4(fp)
    de1c:	10800017 	ldw	r2,0(r2)
    de20:	10800617 	ldw	r2,24(r2)
    de24:	e0fffb17 	ldw	r3,-20(fp)
    de28:	180d883a 	mov	r6,r3
    de2c:	e17ffc17 	ldw	r5,-16(fp)
    de30:	e13fff17 	ldw	r4,-4(fp)
    de34:	103ee83a 	callr	r2
    de38:	e0bffe15 	stw	r2,-8(fp)
    de3c:	e0bffe17 	ldw	r2,-8(fp)
    de40:	1000070e 	bge	r2,zero,de60 <write+0xc0>
      {
        ALT_ERRNO = -rval;
    de44:	000dd640 	call	dd64 <alt_get_errno>
    de48:	1007883a 	mov	r3,r2
    de4c:	e0bffe17 	ldw	r2,-8(fp)
    de50:	0085c83a 	sub	r2,zero,r2
    de54:	18800015 	stw	r2,0(r3)
        return -1;
    de58:	00bfffc4 	movi	r2,-1
    de5c:	00000c06 	br	de90 <write+0xf0>
      }
      return rval;
    de60:	e0bffe17 	ldw	r2,-8(fp)
    de64:	00000a06 	br	de90 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
    de68:	000dd640 	call	dd64 <alt_get_errno>
    de6c:	1007883a 	mov	r3,r2
    de70:	00800344 	movi	r2,13
    de74:	18800015 	stw	r2,0(r3)
    de78:	00000406 	br	de8c <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    de7c:	000dd640 	call	dd64 <alt_get_errno>
    de80:	1007883a 	mov	r3,r2
    de84:	00801444 	movi	r2,81
    de88:	18800015 	stw	r2,0(r3)
  }
  return -1;
    de8c:	00bfffc4 	movi	r2,-1
}
    de90:	e037883a 	mov	sp,fp
    de94:	dfc00117 	ldw	ra,4(sp)
    de98:	df000017 	ldw	fp,0(sp)
    de9c:	dec00204 	addi	sp,sp,8
    dea0:	f800283a 	ret

0000dea4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    dea4:	defffd04 	addi	sp,sp,-12
    dea8:	dfc00215 	stw	ra,8(sp)
    deac:	df000115 	stw	fp,4(sp)
    deb0:	df000104 	addi	fp,sp,4
    deb4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    deb8:	d1600b04 	addi	r5,gp,-32724
    debc:	e13fff17 	ldw	r4,-4(fp)
    dec0:	000eb440 	call	eb44 <alt_dev_llist_insert>
}
    dec4:	e037883a 	mov	sp,fp
    dec8:	dfc00117 	ldw	ra,4(sp)
    decc:	df000017 	ldw	fp,0(sp)
    ded0:	dec00204 	addi	sp,sp,8
    ded4:	f800283a 	ret

0000ded8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    ded8:	defffd04 	addi	sp,sp,-12
    dedc:	dfc00215 	stw	ra,8(sp)
    dee0:	df000115 	stw	fp,4(sp)
    dee4:	df000104 	addi	fp,sp,4
    dee8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    deec:	000f4c80 	call	f4c8 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    def0:	00800044 	movi	r2,1
    def4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    def8:	0001883a 	nop
    defc:	e037883a 	mov	sp,fp
    df00:	dfc00117 	ldw	ra,4(sp)
    df04:	df000017 	ldw	fp,0(sp)
    df08:	dec00204 	addi	sp,sp,8
    df0c:	f800283a 	ret

0000df10 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    df10:	defffe04 	addi	sp,sp,-8
    df14:	dfc00115 	stw	ra,4(sp)
    df18:	df000015 	stw	fp,0(sp)
    df1c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    df20:	000d883a 	mov	r6,zero
    df24:	000b883a 	mov	r5,zero
    df28:	01000074 	movhi	r4,1
    df2c:	21034304 	addi	r4,r4,3340
    df30:	000e0bc0 	call	e0bc <altera_avalon_jtag_uart_init>
    df34:	01000074 	movhi	r4,1
    df38:	21033904 	addi	r4,r4,3300
    df3c:	000dea40 	call	dea4 <alt_dev_reg>
}
    df40:	0001883a 	nop
    df44:	e037883a 	mov	sp,fp
    df48:	dfc00117 	ldw	ra,4(sp)
    df4c:	df000017 	ldw	fp,0(sp)
    df50:	dec00204 	addi	sp,sp,8
    df54:	f800283a 	ret

0000df58 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    df58:	defffa04 	addi	sp,sp,-24
    df5c:	dfc00515 	stw	ra,20(sp)
    df60:	df000415 	stw	fp,16(sp)
    df64:	df000404 	addi	fp,sp,16
    df68:	e13ffe15 	stw	r4,-8(fp)
    df6c:	e17ffd15 	stw	r5,-12(fp)
    df70:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    df74:	e0bffe17 	ldw	r2,-8(fp)
    df78:	10800017 	ldw	r2,0(r2)
    df7c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    df80:	e0bfff17 	ldw	r2,-4(fp)
    df84:	10c00a04 	addi	r3,r2,40
    df88:	e0bffe17 	ldw	r2,-8(fp)
    df8c:	10800217 	ldw	r2,8(r2)
    df90:	100f883a 	mov	r7,r2
    df94:	e1bffc17 	ldw	r6,-16(fp)
    df98:	e17ffd17 	ldw	r5,-12(fp)
    df9c:	1809883a 	mov	r4,r3
    dfa0:	000e57c0 	call	e57c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    dfa4:	e037883a 	mov	sp,fp
    dfa8:	dfc00117 	ldw	ra,4(sp)
    dfac:	df000017 	ldw	fp,0(sp)
    dfb0:	dec00204 	addi	sp,sp,8
    dfb4:	f800283a 	ret

0000dfb8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    dfb8:	defffa04 	addi	sp,sp,-24
    dfbc:	dfc00515 	stw	ra,20(sp)
    dfc0:	df000415 	stw	fp,16(sp)
    dfc4:	df000404 	addi	fp,sp,16
    dfc8:	e13ffe15 	stw	r4,-8(fp)
    dfcc:	e17ffd15 	stw	r5,-12(fp)
    dfd0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dfd4:	e0bffe17 	ldw	r2,-8(fp)
    dfd8:	10800017 	ldw	r2,0(r2)
    dfdc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    dfe0:	e0bfff17 	ldw	r2,-4(fp)
    dfe4:	10c00a04 	addi	r3,r2,40
    dfe8:	e0bffe17 	ldw	r2,-8(fp)
    dfec:	10800217 	ldw	r2,8(r2)
    dff0:	100f883a 	mov	r7,r2
    dff4:	e1bffc17 	ldw	r6,-16(fp)
    dff8:	e17ffd17 	ldw	r5,-12(fp)
    dffc:	1809883a 	mov	r4,r3
    e000:	000e7980 	call	e798 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e004:	e037883a 	mov	sp,fp
    e008:	dfc00117 	ldw	ra,4(sp)
    e00c:	df000017 	ldw	fp,0(sp)
    e010:	dec00204 	addi	sp,sp,8
    e014:	f800283a 	ret

0000e018 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e018:	defffc04 	addi	sp,sp,-16
    e01c:	dfc00315 	stw	ra,12(sp)
    e020:	df000215 	stw	fp,8(sp)
    e024:	df000204 	addi	fp,sp,8
    e028:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e02c:	e0bffe17 	ldw	r2,-8(fp)
    e030:	10800017 	ldw	r2,0(r2)
    e034:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e038:	e0bfff17 	ldw	r2,-4(fp)
    e03c:	10c00a04 	addi	r3,r2,40
    e040:	e0bffe17 	ldw	r2,-8(fp)
    e044:	10800217 	ldw	r2,8(r2)
    e048:	100b883a 	mov	r5,r2
    e04c:	1809883a 	mov	r4,r3
    e050:	000e4200 	call	e420 <altera_avalon_jtag_uart_close>
}
    e054:	e037883a 	mov	sp,fp
    e058:	dfc00117 	ldw	ra,4(sp)
    e05c:	df000017 	ldw	fp,0(sp)
    e060:	dec00204 	addi	sp,sp,8
    e064:	f800283a 	ret

0000e068 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e068:	defffa04 	addi	sp,sp,-24
    e06c:	dfc00515 	stw	ra,20(sp)
    e070:	df000415 	stw	fp,16(sp)
    e074:	df000404 	addi	fp,sp,16
    e078:	e13ffe15 	stw	r4,-8(fp)
    e07c:	e17ffd15 	stw	r5,-12(fp)
    e080:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e084:	e0bffe17 	ldw	r2,-8(fp)
    e088:	10800017 	ldw	r2,0(r2)
    e08c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e090:	e0bfff17 	ldw	r2,-4(fp)
    e094:	10800a04 	addi	r2,r2,40
    e098:	e1bffc17 	ldw	r6,-16(fp)
    e09c:	e17ffd17 	ldw	r5,-12(fp)
    e0a0:	1009883a 	mov	r4,r2
    e0a4:	000e4880 	call	e488 <altera_avalon_jtag_uart_ioctl>
}
    e0a8:	e037883a 	mov	sp,fp
    e0ac:	dfc00117 	ldw	ra,4(sp)
    e0b0:	df000017 	ldw	fp,0(sp)
    e0b4:	dec00204 	addi	sp,sp,8
    e0b8:	f800283a 	ret

0000e0bc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e0bc:	defffa04 	addi	sp,sp,-24
    e0c0:	dfc00515 	stw	ra,20(sp)
    e0c4:	df000415 	stw	fp,16(sp)
    e0c8:	df000404 	addi	fp,sp,16
    e0cc:	e13fff15 	stw	r4,-4(fp)
    e0d0:	e17ffe15 	stw	r5,-8(fp)
    e0d4:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e0d8:	e0bfff17 	ldw	r2,-4(fp)
    e0dc:	00c00044 	movi	r3,1
    e0e0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e0e4:	e0bfff17 	ldw	r2,-4(fp)
    e0e8:	10800017 	ldw	r2,0(r2)
    e0ec:	10800104 	addi	r2,r2,4
    e0f0:	1007883a 	mov	r3,r2
    e0f4:	e0bfff17 	ldw	r2,-4(fp)
    e0f8:	10800817 	ldw	r2,32(r2)
    e0fc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    e100:	e0bffe17 	ldw	r2,-8(fp)
    e104:	e0fffd17 	ldw	r3,-12(fp)
    e108:	d8000015 	stw	zero,0(sp)
    e10c:	e1ffff17 	ldw	r7,-4(fp)
    e110:	01800074 	movhi	r6,1
    e114:	31b85f04 	addi	r6,r6,-7812
    e118:	180b883a 	mov	r5,r3
    e11c:	1009883a 	mov	r4,r2
    e120:	000ecc80 	call	ecc8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e124:	e0bfff17 	ldw	r2,-4(fp)
    e128:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e12c:	e0bfff17 	ldw	r2,-4(fp)
    e130:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    e134:	d0e73817 	ldw	r3,-25376(gp)
    e138:	e1ffff17 	ldw	r7,-4(fp)
    e13c:	01800074 	movhi	r6,1
    e140:	31b8e004 	addi	r6,r6,-7296
    e144:	180b883a 	mov	r5,r3
    e148:	1009883a 	mov	r4,r2
    e14c:	000e9bc0 	call	e9bc <alt_alarm_start>
    e150:	1000040e 	bge	r2,zero,e164 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e154:	e0ffff17 	ldw	r3,-4(fp)
    e158:	00a00034 	movhi	r2,32768
    e15c:	10bfffc4 	addi	r2,r2,-1
    e160:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e164:	0001883a 	nop
    e168:	e037883a 	mov	sp,fp
    e16c:	dfc00117 	ldw	ra,4(sp)
    e170:	df000017 	ldw	fp,0(sp)
    e174:	dec00204 	addi	sp,sp,8
    e178:	f800283a 	ret

0000e17c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e17c:	defff804 	addi	sp,sp,-32
    e180:	df000715 	stw	fp,28(sp)
    e184:	df000704 	addi	fp,sp,28
    e188:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e18c:	e0bff917 	ldw	r2,-28(fp)
    e190:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
    e194:	e0bffd17 	ldw	r2,-12(fp)
    e198:	10800017 	ldw	r2,0(r2)
    e19c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e1a0:	e0bffc17 	ldw	r2,-16(fp)
    e1a4:	10800104 	addi	r2,r2,4
    e1a8:	10800037 	ldwio	r2,0(r2)
    e1ac:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e1b0:	e0bffb17 	ldw	r2,-20(fp)
    e1b4:	1080c00c 	andi	r2,r2,768
    e1b8:	10006b26 	beq	r2,zero,e368 <altera_avalon_jtag_uart_irq+0x1ec>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e1bc:	e0bffb17 	ldw	r2,-20(fp)
    e1c0:	1080400c 	andi	r2,r2,256
    e1c4:	10003426 	beq	r2,zero,e298 <altera_avalon_jtag_uart_irq+0x11c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e1c8:	00800074 	movhi	r2,1
    e1cc:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e1d0:	e0bffd17 	ldw	r2,-12(fp)
    e1d4:	10800a17 	ldw	r2,40(r2)
    e1d8:	10800044 	addi	r2,r2,1
    e1dc:	1081ffcc 	andi	r2,r2,2047
    e1e0:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
    e1e4:	e0bffd17 	ldw	r2,-12(fp)
    e1e8:	10800b17 	ldw	r2,44(r2)
    e1ec:	e0fffa17 	ldw	r3,-24(fp)
    e1f0:	18801426 	beq	r3,r2,e244 <altera_avalon_jtag_uart_irq+0xc8>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e1f4:	e0bffc17 	ldw	r2,-16(fp)
    e1f8:	10800037 	ldwio	r2,0(r2)
    e1fc:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e200:	e0bfff17 	ldw	r2,-4(fp)
    e204:	10a0000c 	andi	r2,r2,32768
    e208:	10001026 	beq	r2,zero,e24c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e20c:	e0bffd17 	ldw	r2,-12(fp)
    e210:	10800a17 	ldw	r2,40(r2)
    e214:	e0ffff17 	ldw	r3,-4(fp)
    e218:	1809883a 	mov	r4,r3
    e21c:	e0fffd17 	ldw	r3,-12(fp)
    e220:	1885883a 	add	r2,r3,r2
    e224:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e228:	e0bffd17 	ldw	r2,-12(fp)
    e22c:	10800a17 	ldw	r2,40(r2)
    e230:	10800044 	addi	r2,r2,1
    e234:	10c1ffcc 	andi	r3,r2,2047
    e238:	e0bffd17 	ldw	r2,-12(fp)
    e23c:	10c00a15 	stw	r3,40(r2)
      {
    e240:	003fe306 	br	e1d0 <altera_avalon_jtag_uart_irq+0x54>
          break;
    e244:	0001883a 	nop
    e248:	00000106 	br	e250 <altera_avalon_jtag_uart_irq+0xd4>
          break;
    e24c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e250:	e0bfff17 	ldw	r2,-4(fp)
    e254:	10bfffec 	andhi	r2,r2,65535
    e258:	10000f26 	beq	r2,zero,e298 <altera_avalon_jtag_uart_irq+0x11c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e25c:	e0bffd17 	ldw	r2,-12(fp)
    e260:	10c00817 	ldw	r3,32(r2)
    e264:	00bfff84 	movi	r2,-2
    e268:	1886703a 	and	r3,r3,r2
    e26c:	e0bffd17 	ldw	r2,-12(fp)
    e270:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e274:	e0bffc17 	ldw	r2,-16(fp)
    e278:	10800104 	addi	r2,r2,4
    e27c:	1007883a 	mov	r3,r2
    e280:	e0bffd17 	ldw	r2,-12(fp)
    e284:	10800817 	ldw	r2,32(r2)
    e288:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e28c:	e0bffc17 	ldw	r2,-16(fp)
    e290:	10800104 	addi	r2,r2,4
    e294:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e298:	e0bffb17 	ldw	r2,-20(fp)
    e29c:	1080800c 	andi	r2,r2,512
    e2a0:	103fbf26 	beq	r2,zero,e1a0 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e2a4:	e0bffb17 	ldw	r2,-20(fp)
    e2a8:	1004d43a 	srli	r2,r2,16
    e2ac:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e2b0:	00001306 	br	e300 <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e2b4:	e0bffc17 	ldw	r2,-16(fp)
    e2b8:	e0fffd17 	ldw	r3,-12(fp)
    e2bc:	18c00d17 	ldw	r3,52(r3)
    e2c0:	e13ffd17 	ldw	r4,-12(fp)
    e2c4:	20c7883a 	add	r3,r4,r3
    e2c8:	18c20e03 	ldbu	r3,2104(r3)
    e2cc:	18c03fcc 	andi	r3,r3,255
    e2d0:	18c0201c 	xori	r3,r3,128
    e2d4:	18ffe004 	addi	r3,r3,-128
    e2d8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e2dc:	e0bffd17 	ldw	r2,-12(fp)
    e2e0:	10800d17 	ldw	r2,52(r2)
    e2e4:	10800044 	addi	r2,r2,1
    e2e8:	10c1ffcc 	andi	r3,r2,2047
    e2ec:	e0bffd17 	ldw	r2,-12(fp)
    e2f0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e2f4:	e0bffe17 	ldw	r2,-8(fp)
    e2f8:	10bfffc4 	addi	r2,r2,-1
    e2fc:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
    e300:	e0bffe17 	ldw	r2,-8(fp)
    e304:	10000526 	beq	r2,zero,e31c <altera_avalon_jtag_uart_irq+0x1a0>
    e308:	e0bffd17 	ldw	r2,-12(fp)
    e30c:	10c00d17 	ldw	r3,52(r2)
    e310:	e0bffd17 	ldw	r2,-12(fp)
    e314:	10800c17 	ldw	r2,48(r2)
    e318:	18bfe61e 	bne	r3,r2,e2b4 <altera_avalon_jtag_uart_irq+0x138>
      }

      if (space > 0)
    e31c:	e0bffe17 	ldw	r2,-8(fp)
    e320:	103f9f26 	beq	r2,zero,e1a0 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e324:	e0bffd17 	ldw	r2,-12(fp)
    e328:	10c00817 	ldw	r3,32(r2)
    e32c:	00bfff44 	movi	r2,-3
    e330:	1886703a 	and	r3,r3,r2
    e334:	e0bffd17 	ldw	r2,-12(fp)
    e338:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e33c:	e0bffd17 	ldw	r2,-12(fp)
    e340:	10800017 	ldw	r2,0(r2)
    e344:	10800104 	addi	r2,r2,4
    e348:	1007883a 	mov	r3,r2
    e34c:	e0bffd17 	ldw	r2,-12(fp)
    e350:	10800817 	ldw	r2,32(r2)
    e354:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e358:	e0bffc17 	ldw	r2,-16(fp)
    e35c:	10800104 	addi	r2,r2,4
    e360:	10800037 	ldwio	r2,0(r2)
  {
    e364:	003f8e06 	br	e1a0 <altera_avalon_jtag_uart_irq+0x24>
      break;
    e368:	0001883a 	nop
      }
    }
  }
}
    e36c:	0001883a 	nop
    e370:	e037883a 	mov	sp,fp
    e374:	df000017 	ldw	fp,0(sp)
    e378:	dec00104 	addi	sp,sp,4
    e37c:	f800283a 	ret

0000e380 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e380:	defffc04 	addi	sp,sp,-16
    e384:	df000315 	stw	fp,12(sp)
    e388:	df000304 	addi	fp,sp,12
    e38c:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e390:	e0bffd17 	ldw	r2,-12(fp)
    e394:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e398:	e0bfff17 	ldw	r2,-4(fp)
    e39c:	10800017 	ldw	r2,0(r2)
    e3a0:	10800104 	addi	r2,r2,4
    e3a4:	10800037 	ldwio	r2,0(r2)
    e3a8:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e3ac:	e0bffe17 	ldw	r2,-8(fp)
    e3b0:	1081000c 	andi	r2,r2,1024
    e3b4:	10000b26 	beq	r2,zero,e3e4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e3b8:	e0bfff17 	ldw	r2,-4(fp)
    e3bc:	10800017 	ldw	r2,0(r2)
    e3c0:	10800104 	addi	r2,r2,4
    e3c4:	1007883a 	mov	r3,r2
    e3c8:	e0bfff17 	ldw	r2,-4(fp)
    e3cc:	10800817 	ldw	r2,32(r2)
    e3d0:	10810014 	ori	r2,r2,1024
    e3d4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e3d8:	e0bfff17 	ldw	r2,-4(fp)
    e3dc:	10000915 	stw	zero,36(r2)
    e3e0:	00000a06 	br	e40c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e3e4:	e0bfff17 	ldw	r2,-4(fp)
    e3e8:	10c00917 	ldw	r3,36(r2)
    e3ec:	00a00034 	movhi	r2,32768
    e3f0:	10bfff04 	addi	r2,r2,-4
    e3f4:	10c00536 	bltu	r2,r3,e40c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e3f8:	e0bfff17 	ldw	r2,-4(fp)
    e3fc:	10800917 	ldw	r2,36(r2)
    e400:	10c00044 	addi	r3,r2,1
    e404:	e0bfff17 	ldw	r2,-4(fp)
    e408:	10c00915 	stw	r3,36(r2)
    e40c:	d0a73817 	ldw	r2,-25376(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e410:	e037883a 	mov	sp,fp
    e414:	df000017 	ldw	fp,0(sp)
    e418:	dec00104 	addi	sp,sp,4
    e41c:	f800283a 	ret

0000e420 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e420:	defffd04 	addi	sp,sp,-12
    e424:	df000215 	stw	fp,8(sp)
    e428:	df000204 	addi	fp,sp,8
    e42c:	e13fff15 	stw	r4,-4(fp)
    e430:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e434:	00000506 	br	e44c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e438:	e0bffe17 	ldw	r2,-8(fp)
    e43c:	1090000c 	andi	r2,r2,16384
    e440:	10000226 	beq	r2,zero,e44c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e444:	00bffd44 	movi	r2,-11
    e448:	00000b06 	br	e478 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e44c:	e0bfff17 	ldw	r2,-4(fp)
    e450:	10c00d17 	ldw	r3,52(r2)
    e454:	e0bfff17 	ldw	r2,-4(fp)
    e458:	10800c17 	ldw	r2,48(r2)
    e45c:	18800526 	beq	r3,r2,e474 <altera_avalon_jtag_uart_close+0x54>
    e460:	e0bfff17 	ldw	r2,-4(fp)
    e464:	10c00917 	ldw	r3,36(r2)
    e468:	e0bfff17 	ldw	r2,-4(fp)
    e46c:	10800117 	ldw	r2,4(r2)
    e470:	18bff136 	bltu	r3,r2,e438 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
    e474:	0005883a 	mov	r2,zero
}
    e478:	e037883a 	mov	sp,fp
    e47c:	df000017 	ldw	fp,0(sp)
    e480:	dec00104 	addi	sp,sp,4
    e484:	f800283a 	ret

0000e488 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e488:	defffa04 	addi	sp,sp,-24
    e48c:	df000515 	stw	fp,20(sp)
    e490:	df000504 	addi	fp,sp,20
    e494:	e13ffd15 	stw	r4,-12(fp)
    e498:	e17ffc15 	stw	r5,-16(fp)
    e49c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
    e4a0:	00bff9c4 	movi	r2,-25
    e4a4:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
    e4a8:	e0bffc17 	ldw	r2,-16(fp)
    e4ac:	109a8060 	cmpeqi	r2,r2,27137
    e4b0:	1000041e 	bne	r2,zero,e4c4 <altera_avalon_jtag_uart_ioctl+0x3c>
    e4b4:	e0bffc17 	ldw	r2,-16(fp)
    e4b8:	109a80a0 	cmpeqi	r2,r2,27138
    e4bc:	1000181e 	bne	r2,zero,e520 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
    e4c0:	00002906 	br	e568 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    e4c4:	e0bffd17 	ldw	r2,-12(fp)
    e4c8:	10c00117 	ldw	r3,4(r2)
    e4cc:	00a00034 	movhi	r2,32768
    e4d0:	10bfffc4 	addi	r2,r2,-1
    e4d4:	18802126 	beq	r3,r2,e55c <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
    e4d8:	e0bffb17 	ldw	r2,-20(fp)
    e4dc:	10800017 	ldw	r2,0(r2)
    e4e0:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e4e4:	e0bffe17 	ldw	r2,-8(fp)
    e4e8:	10800090 	cmplti	r2,r2,2
    e4ec:	1000061e 	bne	r2,zero,e508 <altera_avalon_jtag_uart_ioctl+0x80>
    e4f0:	e0fffe17 	ldw	r3,-8(fp)
    e4f4:	00a00034 	movhi	r2,32768
    e4f8:	10bfffc4 	addi	r2,r2,-1
    e4fc:	18800226 	beq	r3,r2,e508 <altera_avalon_jtag_uart_ioctl+0x80>
    e500:	e0bffe17 	ldw	r2,-8(fp)
    e504:	00000206 	br	e510 <altera_avalon_jtag_uart_ioctl+0x88>
    e508:	00a00034 	movhi	r2,32768
    e50c:	10bfff84 	addi	r2,r2,-2
    e510:	e0fffd17 	ldw	r3,-12(fp)
    e514:	18800115 	stw	r2,4(r3)
      rc = 0;
    e518:	e03fff15 	stw	zero,-4(fp)
    break;
    e51c:	00000f06 	br	e55c <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
    e520:	e0bffd17 	ldw	r2,-12(fp)
    e524:	10c00117 	ldw	r3,4(r2)
    e528:	00a00034 	movhi	r2,32768
    e52c:	10bfffc4 	addi	r2,r2,-1
    e530:	18800c26 	beq	r3,r2,e564 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e534:	e0bffd17 	ldw	r2,-12(fp)
    e538:	10c00917 	ldw	r3,36(r2)
    e53c:	e0bffd17 	ldw	r2,-12(fp)
    e540:	10800117 	ldw	r2,4(r2)
    e544:	1885803a 	cmpltu	r2,r3,r2
    e548:	10c03fcc 	andi	r3,r2,255
    e54c:	e0bffb17 	ldw	r2,-20(fp)
    e550:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e554:	e03fff15 	stw	zero,-4(fp)
    break;
    e558:	00000206 	br	e564 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
    e55c:	0001883a 	nop
    e560:	00000106 	br	e568 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
    e564:	0001883a 	nop
  }

  return rc;
    e568:	e0bfff17 	ldw	r2,-4(fp)
}
    e56c:	e037883a 	mov	sp,fp
    e570:	df000017 	ldw	fp,0(sp)
    e574:	dec00104 	addi	sp,sp,4
    e578:	f800283a 	ret

0000e57c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e57c:	defff304 	addi	sp,sp,-52
    e580:	dfc00c15 	stw	ra,48(sp)
    e584:	df000b15 	stw	fp,44(sp)
    e588:	df000b04 	addi	fp,sp,44
    e58c:	e13ff815 	stw	r4,-32(fp)
    e590:	e17ff715 	stw	r5,-36(fp)
    e594:	e1bff615 	stw	r6,-40(fp)
    e598:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
    e59c:	e0bff717 	ldw	r2,-36(fp)
    e5a0:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e5a4:	00004706 	br	e6c4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e5a8:	e0bff817 	ldw	r2,-32(fp)
    e5ac:	10800a17 	ldw	r2,40(r2)
    e5b0:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
    e5b4:	e0bff817 	ldw	r2,-32(fp)
    e5b8:	10800b17 	ldw	r2,44(r2)
    e5bc:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
    e5c0:	e0fffd17 	ldw	r3,-12(fp)
    e5c4:	e0bffc17 	ldw	r2,-16(fp)
    e5c8:	18800536 	bltu	r3,r2,e5e0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e5cc:	e0fffd17 	ldw	r3,-12(fp)
    e5d0:	e0bffc17 	ldw	r2,-16(fp)
    e5d4:	1885c83a 	sub	r2,r3,r2
    e5d8:	e0bffe15 	stw	r2,-8(fp)
    e5dc:	00000406 	br	e5f0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e5e0:	00c20004 	movi	r3,2048
    e5e4:	e0bffc17 	ldw	r2,-16(fp)
    e5e8:	1885c83a 	sub	r2,r3,r2
    e5ec:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    e5f0:	e0bffe17 	ldw	r2,-8(fp)
    e5f4:	10001e26 	beq	r2,zero,e670 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e5f8:	e0fff617 	ldw	r3,-40(fp)
    e5fc:	e0bffe17 	ldw	r2,-8(fp)
    e600:	1880022e 	bgeu	r3,r2,e60c <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e604:	e0bff617 	ldw	r2,-40(fp)
    e608:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e60c:	e0bff817 	ldw	r2,-32(fp)
    e610:	10c00e04 	addi	r3,r2,56
    e614:	e0bffc17 	ldw	r2,-16(fp)
    e618:	1885883a 	add	r2,r3,r2
    e61c:	e1bffe17 	ldw	r6,-8(fp)
    e620:	100b883a 	mov	r5,r2
    e624:	e13fff17 	ldw	r4,-4(fp)
    e628:	00013980 	call	1398 <memcpy>
      ptr   += n;
    e62c:	e0ffff17 	ldw	r3,-4(fp)
    e630:	e0bffe17 	ldw	r2,-8(fp)
    e634:	1885883a 	add	r2,r3,r2
    e638:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
    e63c:	e0fff617 	ldw	r3,-40(fp)
    e640:	e0bffe17 	ldw	r2,-8(fp)
    e644:	1885c83a 	sub	r2,r3,r2
    e648:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e64c:	e0fffc17 	ldw	r3,-16(fp)
    e650:	e0bffe17 	ldw	r2,-8(fp)
    e654:	1885883a 	add	r2,r3,r2
    e658:	10c1ffcc 	andi	r3,r2,2047
    e65c:	e0bff817 	ldw	r2,-32(fp)
    e660:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e664:	e0bff617 	ldw	r2,-40(fp)
    e668:	00bfcf16 	blt	zero,r2,e5a8 <altera_avalon_jtag_uart_read+0x2c>
    e66c:	00000106 	br	e674 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
    e670:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
    e674:	e0ffff17 	ldw	r3,-4(fp)
    e678:	e0bff717 	ldw	r2,-36(fp)
    e67c:	1880141e 	bne	r3,r2,e6d0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e680:	e0bff517 	ldw	r2,-44(fp)
    e684:	1090000c 	andi	r2,r2,16384
    e688:	1000131e 	bne	r2,zero,e6d8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e68c:	0001883a 	nop
    e690:	e0bff817 	ldw	r2,-32(fp)
    e694:	10800a17 	ldw	r2,40(r2)
    e698:	e0fffd17 	ldw	r3,-12(fp)
    e69c:	1880051e 	bne	r3,r2,e6b4 <altera_avalon_jtag_uart_read+0x138>
    e6a0:	e0bff817 	ldw	r2,-32(fp)
    e6a4:	10c00917 	ldw	r3,36(r2)
    e6a8:	e0bff817 	ldw	r2,-32(fp)
    e6ac:	10800117 	ldw	r2,4(r2)
    e6b0:	18bff736 	bltu	r3,r2,e690 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e6b4:	e0bff817 	ldw	r2,-32(fp)
    e6b8:	10800a17 	ldw	r2,40(r2)
    e6bc:	e0fffd17 	ldw	r3,-12(fp)
    e6c0:	18800726 	beq	r3,r2,e6e0 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
    e6c4:	e0bff617 	ldw	r2,-40(fp)
    e6c8:	00bfb716 	blt	zero,r2,e5a8 <altera_avalon_jtag_uart_read+0x2c>
    e6cc:	00000506 	br	e6e4 <altera_avalon_jtag_uart_read+0x168>
      break;
    e6d0:	0001883a 	nop
    e6d4:	00000306 	br	e6e4 <altera_avalon_jtag_uart_read+0x168>
      break;
    e6d8:	0001883a 	nop
    e6dc:	00000106 	br	e6e4 <altera_avalon_jtag_uart_read+0x168>
      break;
    e6e0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e6e4:	e0ffff17 	ldw	r3,-4(fp)
    e6e8:	e0bff717 	ldw	r2,-36(fp)
    e6ec:	18801826 	beq	r3,r2,e750 <altera_avalon_jtag_uart_read+0x1d4>
  NIOS2_READ_STATUS (context);
    e6f0:	0005303a 	rdctl	r2,status
    e6f4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e6f8:	e0fff917 	ldw	r3,-28(fp)
    e6fc:	00bfff84 	movi	r2,-2
    e700:	1884703a 	and	r2,r3,r2
    e704:	1001703a 	wrctl	status,r2
  return context;
    e708:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e70c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e710:	e0bff817 	ldw	r2,-32(fp)
    e714:	10800817 	ldw	r2,32(r2)
    e718:	10c00054 	ori	r3,r2,1
    e71c:	e0bff817 	ldw	r2,-32(fp)
    e720:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e724:	e0bff817 	ldw	r2,-32(fp)
    e728:	10800017 	ldw	r2,0(r2)
    e72c:	10800104 	addi	r2,r2,4
    e730:	1007883a 	mov	r3,r2
    e734:	e0bff817 	ldw	r2,-32(fp)
    e738:	10800817 	ldw	r2,32(r2)
    e73c:	18800035 	stwio	r2,0(r3)
    e740:	e0bffb17 	ldw	r2,-20(fp)
    e744:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e748:	e0bffa17 	ldw	r2,-24(fp)
    e74c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e750:	e0ffff17 	ldw	r3,-4(fp)
    e754:	e0bff717 	ldw	r2,-36(fp)
    e758:	18800426 	beq	r3,r2,e76c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e75c:	e0ffff17 	ldw	r3,-4(fp)
    e760:	e0bff717 	ldw	r2,-36(fp)
    e764:	1885c83a 	sub	r2,r3,r2
    e768:	00000606 	br	e784 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e76c:	e0bff517 	ldw	r2,-44(fp)
    e770:	1090000c 	andi	r2,r2,16384
    e774:	10000226 	beq	r2,zero,e780 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e778:	00bffd44 	movi	r2,-11
    e77c:	00000106 	br	e784 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e780:	00bffec4 	movi	r2,-5
}
    e784:	e037883a 	mov	sp,fp
    e788:	dfc00117 	ldw	ra,4(sp)
    e78c:	df000017 	ldw	fp,0(sp)
    e790:	dec00204 	addi	sp,sp,8
    e794:	f800283a 	ret

0000e798 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e798:	defff304 	addi	sp,sp,-52
    e79c:	dfc00c15 	stw	ra,48(sp)
    e7a0:	df000b15 	stw	fp,44(sp)
    e7a4:	df000b04 	addi	fp,sp,44
    e7a8:	e13ff815 	stw	r4,-32(fp)
    e7ac:	e17ff715 	stw	r5,-36(fp)
    e7b0:	e1bff615 	stw	r6,-40(fp)
    e7b4:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e7b8:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e7bc:	e0bff717 	ldw	r2,-36(fp)
    e7c0:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e7c4:	00003706 	br	e8a4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e7c8:	e0bff817 	ldw	r2,-32(fp)
    e7cc:	10800c17 	ldw	r2,48(r2)
    e7d0:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
    e7d4:	e0bff817 	ldw	r2,-32(fp)
    e7d8:	10800d17 	ldw	r2,52(r2)
    e7dc:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
    e7e0:	e0fffc17 	ldw	r3,-16(fp)
    e7e4:	e0bfff17 	ldw	r2,-4(fp)
    e7e8:	1880062e 	bgeu	r3,r2,e804 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e7ec:	e0ffff17 	ldw	r3,-4(fp)
    e7f0:	e0bffc17 	ldw	r2,-16(fp)
    e7f4:	1885c83a 	sub	r2,r3,r2
    e7f8:	10bfffc4 	addi	r2,r2,-1
    e7fc:	e0bffe15 	stw	r2,-8(fp)
    e800:	00000b06 	br	e830 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e804:	e0bfff17 	ldw	r2,-4(fp)
    e808:	10000526 	beq	r2,zero,e820 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e80c:	00c20004 	movi	r3,2048
    e810:	e0bffc17 	ldw	r2,-16(fp)
    e814:	1885c83a 	sub	r2,r3,r2
    e818:	e0bffe15 	stw	r2,-8(fp)
    e81c:	00000406 	br	e830 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e820:	00c1ffc4 	movi	r3,2047
    e824:	e0bffc17 	ldw	r2,-16(fp)
    e828:	1885c83a 	sub	r2,r3,r2
    e82c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    e830:	e0bffe17 	ldw	r2,-8(fp)
    e834:	10001e26 	beq	r2,zero,e8b0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e838:	e0fff617 	ldw	r3,-40(fp)
    e83c:	e0bffe17 	ldw	r2,-8(fp)
    e840:	1880022e 	bgeu	r3,r2,e84c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e844:	e0bff617 	ldw	r2,-40(fp)
    e848:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e84c:	e0bff817 	ldw	r2,-32(fp)
    e850:	10c20e04 	addi	r3,r2,2104
    e854:	e0bffc17 	ldw	r2,-16(fp)
    e858:	1885883a 	add	r2,r3,r2
    e85c:	e1bffe17 	ldw	r6,-8(fp)
    e860:	e17ff717 	ldw	r5,-36(fp)
    e864:	1009883a 	mov	r4,r2
    e868:	00013980 	call	1398 <memcpy>
      ptr   += n;
    e86c:	e0fff717 	ldw	r3,-36(fp)
    e870:	e0bffe17 	ldw	r2,-8(fp)
    e874:	1885883a 	add	r2,r3,r2
    e878:	e0bff715 	stw	r2,-36(fp)
      count -= n;
    e87c:	e0fff617 	ldw	r3,-40(fp)
    e880:	e0bffe17 	ldw	r2,-8(fp)
    e884:	1885c83a 	sub	r2,r3,r2
    e888:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e88c:	e0fffc17 	ldw	r3,-16(fp)
    e890:	e0bffe17 	ldw	r2,-8(fp)
    e894:	1885883a 	add	r2,r3,r2
    e898:	10c1ffcc 	andi	r3,r2,2047
    e89c:	e0bff817 	ldw	r2,-32(fp)
    e8a0:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
    e8a4:	e0bff617 	ldw	r2,-40(fp)
    e8a8:	00bfc716 	blt	zero,r2,e7c8 <altera_avalon_jtag_uart_write+0x30>
    e8ac:	00000106 	br	e8b4 <altera_avalon_jtag_uart_write+0x11c>
        break;
    e8b0:	0001883a 	nop
  NIOS2_READ_STATUS (context);
    e8b4:	0005303a 	rdctl	r2,status
    e8b8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e8bc:	e0fff917 	ldw	r3,-28(fp)
    e8c0:	00bfff84 	movi	r2,-2
    e8c4:	1884703a 	and	r2,r3,r2
    e8c8:	1001703a 	wrctl	status,r2
  return context;
    e8cc:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e8d0:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e8d4:	e0bff817 	ldw	r2,-32(fp)
    e8d8:	10800817 	ldw	r2,32(r2)
    e8dc:	10c00094 	ori	r3,r2,2
    e8e0:	e0bff817 	ldw	r2,-32(fp)
    e8e4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e8e8:	e0bff817 	ldw	r2,-32(fp)
    e8ec:	10800017 	ldw	r2,0(r2)
    e8f0:	10800104 	addi	r2,r2,4
    e8f4:	1007883a 	mov	r3,r2
    e8f8:	e0bff817 	ldw	r2,-32(fp)
    e8fc:	10800817 	ldw	r2,32(r2)
    e900:	18800035 	stwio	r2,0(r3)
    e904:	e0bffb17 	ldw	r2,-20(fp)
    e908:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e90c:	e0bffa17 	ldw	r2,-24(fp)
    e910:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e914:	e0bff617 	ldw	r2,-40(fp)
    e918:	0080100e 	bge	zero,r2,e95c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e91c:	e0bff517 	ldw	r2,-44(fp)
    e920:	1090000c 	andi	r2,r2,16384
    e924:	1000101e 	bne	r2,zero,e968 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e928:	0001883a 	nop
    e92c:	e0bff817 	ldw	r2,-32(fp)
    e930:	10800d17 	ldw	r2,52(r2)
    e934:	e0ffff17 	ldw	r3,-4(fp)
    e938:	1880051e 	bne	r3,r2,e950 <altera_avalon_jtag_uart_write+0x1b8>
    e93c:	e0bff817 	ldw	r2,-32(fp)
    e940:	10c00917 	ldw	r3,36(r2)
    e944:	e0bff817 	ldw	r2,-32(fp)
    e948:	10800117 	ldw	r2,4(r2)
    e94c:	18bff736 	bltu	r3,r2,e92c <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e950:	e0bff817 	ldw	r2,-32(fp)
    e954:	10800917 	ldw	r2,36(r2)
    e958:	1000051e 	bne	r2,zero,e970 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e95c:	e0bff617 	ldw	r2,-40(fp)
    e960:	00bfd016 	blt	zero,r2,e8a4 <altera_avalon_jtag_uart_write+0x10c>
    e964:	00000306 	br	e974 <altera_avalon_jtag_uart_write+0x1dc>
        break;
    e968:	0001883a 	nop
    e96c:	00000106 	br	e974 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    e970:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e974:	e0fff717 	ldw	r3,-36(fp)
    e978:	e0bffd17 	ldw	r2,-12(fp)
    e97c:	18800426 	beq	r3,r2,e990 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e980:	e0fff717 	ldw	r3,-36(fp)
    e984:	e0bffd17 	ldw	r2,-12(fp)
    e988:	1885c83a 	sub	r2,r3,r2
    e98c:	00000606 	br	e9a8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e990:	e0bff517 	ldw	r2,-44(fp)
    e994:	1090000c 	andi	r2,r2,16384
    e998:	10000226 	beq	r2,zero,e9a4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e99c:	00bffd44 	movi	r2,-11
    e9a0:	00000106 	br	e9a8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e9a4:	00bffec4 	movi	r2,-5
}
    e9a8:	e037883a 	mov	sp,fp
    e9ac:	dfc00117 	ldw	ra,4(sp)
    e9b0:	df000017 	ldw	fp,0(sp)
    e9b4:	dec00204 	addi	sp,sp,8
    e9b8:	f800283a 	ret

0000e9bc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e9bc:	defff504 	addi	sp,sp,-44
    e9c0:	df000a15 	stw	fp,40(sp)
    e9c4:	df000a04 	addi	fp,sp,40
    e9c8:	e13ff915 	stw	r4,-28(fp)
    e9cc:	e17ff815 	stw	r5,-32(fp)
    e9d0:	e1bff715 	stw	r6,-36(fp)
    e9d4:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e9d8:	e03fff15 	stw	zero,-4(fp)
    e9dc:	d0a73817 	ldw	r2,-25376(gp)
  
  if (alt_ticks_per_second ())
    e9e0:	10003c26 	beq	r2,zero,ead4 <alt_alarm_start+0x118>
  {
    if (alarm)
    e9e4:	e0bff917 	ldw	r2,-28(fp)
    e9e8:	10003826 	beq	r2,zero,eacc <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    e9ec:	e0bff917 	ldw	r2,-28(fp)
    e9f0:	e0fff717 	ldw	r3,-36(fp)
    e9f4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e9f8:	e0bff917 	ldw	r2,-28(fp)
    e9fc:	e0fff617 	ldw	r3,-40(fp)
    ea00:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
    ea04:	0005303a 	rdctl	r2,status
    ea08:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ea0c:	e0fffd17 	ldw	r3,-12(fp)
    ea10:	00bfff84 	movi	r2,-2
    ea14:	1884703a 	and	r2,r3,r2
    ea18:	1001703a 	wrctl	status,r2
  return context;
    ea1c:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
    ea20:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    ea24:	d0a73917 	ldw	r2,-25372(gp)
      
      current_nticks = alt_nticks();
    ea28:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    ea2c:	e0fff817 	ldw	r3,-32(fp)
    ea30:	e0bfff17 	ldw	r2,-4(fp)
    ea34:	1885883a 	add	r2,r3,r2
    ea38:	10c00044 	addi	r3,r2,1
    ea3c:	e0bff917 	ldw	r2,-28(fp)
    ea40:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    ea44:	e0bff917 	ldw	r2,-28(fp)
    ea48:	10c00217 	ldw	r3,8(r2)
    ea4c:	e0bfff17 	ldw	r2,-4(fp)
    ea50:	1880042e 	bgeu	r3,r2,ea64 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    ea54:	e0bff917 	ldw	r2,-28(fp)
    ea58:	00c00044 	movi	r3,1
    ea5c:	10c00405 	stb	r3,16(r2)
    ea60:	00000206 	br	ea6c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    ea64:	e0bff917 	ldw	r2,-28(fp)
    ea68:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    ea6c:	e0bff917 	ldw	r2,-28(fp)
    ea70:	d0e01104 	addi	r3,gp,-32700
    ea74:	e0fffb15 	stw	r3,-20(fp)
    ea78:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    ea7c:	e0bffa17 	ldw	r2,-24(fp)
    ea80:	e0fffb17 	ldw	r3,-20(fp)
    ea84:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    ea88:	e0bffb17 	ldw	r2,-20(fp)
    ea8c:	10c00017 	ldw	r3,0(r2)
    ea90:	e0bffa17 	ldw	r2,-24(fp)
    ea94:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    ea98:	e0bffb17 	ldw	r2,-20(fp)
    ea9c:	10800017 	ldw	r2,0(r2)
    eaa0:	e0fffa17 	ldw	r3,-24(fp)
    eaa4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    eaa8:	e0bffb17 	ldw	r2,-20(fp)
    eaac:	e0fffa17 	ldw	r3,-24(fp)
    eab0:	10c00015 	stw	r3,0(r2)
    eab4:	e0bffe17 	ldw	r2,-8(fp)
    eab8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    eabc:	e0bffc17 	ldw	r2,-16(fp)
    eac0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    eac4:	0005883a 	mov	r2,zero
    eac8:	00000306 	br	ead8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    eacc:	00bffa84 	movi	r2,-22
    ead0:	00000106 	br	ead8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    ead4:	00bfde84 	movi	r2,-134
  }
}
    ead8:	e037883a 	mov	sp,fp
    eadc:	df000017 	ldw	fp,0(sp)
    eae0:	dec00104 	addi	sp,sp,4
    eae4:	f800283a 	ret

0000eae8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    eae8:	deffff04 	addi	sp,sp,-4
    eaec:	df000015 	stw	fp,0(sp)
    eaf0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    eaf4:	0001883a 	nop
    eaf8:	e037883a 	mov	sp,fp
    eafc:	df000017 	ldw	fp,0(sp)
    eb00:	dec00104 	addi	sp,sp,4
    eb04:	f800283a 	ret

0000eb08 <alt_get_errno>:
{
    eb08:	defffe04 	addi	sp,sp,-8
    eb0c:	dfc00115 	stw	ra,4(sp)
    eb10:	df000015 	stw	fp,0(sp)
    eb14:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    eb18:	d0a00e17 	ldw	r2,-32712(gp)
    eb1c:	10000326 	beq	r2,zero,eb2c <alt_get_errno+0x24>
    eb20:	d0a00e17 	ldw	r2,-32712(gp)
    eb24:	103ee83a 	callr	r2
    eb28:	00000106 	br	eb30 <alt_get_errno+0x28>
    eb2c:	d0a73204 	addi	r2,gp,-25400
}
    eb30:	e037883a 	mov	sp,fp
    eb34:	dfc00117 	ldw	ra,4(sp)
    eb38:	df000017 	ldw	fp,0(sp)
    eb3c:	dec00204 	addi	sp,sp,8
    eb40:	f800283a 	ret

0000eb44 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    eb44:	defffa04 	addi	sp,sp,-24
    eb48:	dfc00515 	stw	ra,20(sp)
    eb4c:	df000415 	stw	fp,16(sp)
    eb50:	df000404 	addi	fp,sp,16
    eb54:	e13ffd15 	stw	r4,-12(fp)
    eb58:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    eb5c:	e0bffd17 	ldw	r2,-12(fp)
    eb60:	10000326 	beq	r2,zero,eb70 <alt_dev_llist_insert+0x2c>
    eb64:	e0bffd17 	ldw	r2,-12(fp)
    eb68:	10800217 	ldw	r2,8(r2)
    eb6c:	1000061e 	bne	r2,zero,eb88 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    eb70:	000eb080 	call	eb08 <alt_get_errno>
    eb74:	1007883a 	mov	r3,r2
    eb78:	00800584 	movi	r2,22
    eb7c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    eb80:	00bffa84 	movi	r2,-22
    eb84:	00001306 	br	ebd4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    eb88:	e0bffd17 	ldw	r2,-12(fp)
    eb8c:	e0fffc17 	ldw	r3,-16(fp)
    eb90:	e0ffff15 	stw	r3,-4(fp)
    eb94:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
    eb98:	e0bffe17 	ldw	r2,-8(fp)
    eb9c:	e0ffff17 	ldw	r3,-4(fp)
    eba0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    eba4:	e0bfff17 	ldw	r2,-4(fp)
    eba8:	10c00017 	ldw	r3,0(r2)
    ebac:	e0bffe17 	ldw	r2,-8(fp)
    ebb0:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
    ebb4:	e0bfff17 	ldw	r2,-4(fp)
    ebb8:	10800017 	ldw	r2,0(r2)
    ebbc:	e0fffe17 	ldw	r3,-8(fp)
    ebc0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    ebc4:	e0bfff17 	ldw	r2,-4(fp)
    ebc8:	e0fffe17 	ldw	r3,-8(fp)
    ebcc:	10c00015 	stw	r3,0(r2)

  return 0;  
    ebd0:	0005883a 	mov	r2,zero
}
    ebd4:	e037883a 	mov	sp,fp
    ebd8:	dfc00117 	ldw	ra,4(sp)
    ebdc:	df000017 	ldw	fp,0(sp)
    ebe0:	dec00204 	addi	sp,sp,8
    ebe4:	f800283a 	ret

0000ebe8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    ebe8:	defffd04 	addi	sp,sp,-12
    ebec:	dfc00215 	stw	ra,8(sp)
    ebf0:	df000115 	stw	fp,4(sp)
    ebf4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    ebf8:	00800074 	movhi	r2,1
    ebfc:	10bea004 	addi	r2,r2,-1408
    ec00:	e0bfff15 	stw	r2,-4(fp)
    ec04:	00000606 	br	ec20 <_do_ctors+0x38>
        (*ctor) (); 
    ec08:	e0bfff17 	ldw	r2,-4(fp)
    ec0c:	10800017 	ldw	r2,0(r2)
    ec10:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    ec14:	e0bfff17 	ldw	r2,-4(fp)
    ec18:	10bfff04 	addi	r2,r2,-4
    ec1c:	e0bfff15 	stw	r2,-4(fp)
    ec20:	e0ffff17 	ldw	r3,-4(fp)
    ec24:	00800074 	movhi	r2,1
    ec28:	10bea104 	addi	r2,r2,-1404
    ec2c:	18bff62e 	bgeu	r3,r2,ec08 <_do_ctors+0x20>
}
    ec30:	0001883a 	nop
    ec34:	e037883a 	mov	sp,fp
    ec38:	dfc00117 	ldw	ra,4(sp)
    ec3c:	df000017 	ldw	fp,0(sp)
    ec40:	dec00204 	addi	sp,sp,8
    ec44:	f800283a 	ret

0000ec48 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    ec48:	defffd04 	addi	sp,sp,-12
    ec4c:	dfc00215 	stw	ra,8(sp)
    ec50:	df000115 	stw	fp,4(sp)
    ec54:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ec58:	00800074 	movhi	r2,1
    ec5c:	10bea004 	addi	r2,r2,-1408
    ec60:	e0bfff15 	stw	r2,-4(fp)
    ec64:	00000606 	br	ec80 <_do_dtors+0x38>
        (*dtor) (); 
    ec68:	e0bfff17 	ldw	r2,-4(fp)
    ec6c:	10800017 	ldw	r2,0(r2)
    ec70:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ec74:	e0bfff17 	ldw	r2,-4(fp)
    ec78:	10bfff04 	addi	r2,r2,-4
    ec7c:	e0bfff15 	stw	r2,-4(fp)
    ec80:	e0ffff17 	ldw	r3,-4(fp)
    ec84:	00800074 	movhi	r2,1
    ec88:	10bea104 	addi	r2,r2,-1404
    ec8c:	18bff62e 	bgeu	r3,r2,ec68 <_do_dtors+0x20>
}
    ec90:	0001883a 	nop
    ec94:	e037883a 	mov	sp,fp
    ec98:	dfc00117 	ldw	ra,4(sp)
    ec9c:	df000017 	ldw	fp,0(sp)
    eca0:	dec00204 	addi	sp,sp,8
    eca4:	f800283a 	ret

0000eca8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    eca8:	deffff04 	addi	sp,sp,-4
    ecac:	df000015 	stw	fp,0(sp)
    ecb0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    ecb4:	0001883a 	nop
    ecb8:	e037883a 	mov	sp,fp
    ecbc:	df000017 	ldw	fp,0(sp)
    ecc0:	dec00104 	addi	sp,sp,4
    ecc4:	f800283a 	ret

0000ecc8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ecc8:	defff904 	addi	sp,sp,-28
    eccc:	dfc00615 	stw	ra,24(sp)
    ecd0:	df000515 	stw	fp,20(sp)
    ecd4:	df000504 	addi	fp,sp,20
    ecd8:	e13fff15 	stw	r4,-4(fp)
    ecdc:	e17ffe15 	stw	r5,-8(fp)
    ece0:	e1bffd15 	stw	r6,-12(fp)
    ece4:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    ece8:	e0800217 	ldw	r2,8(fp)
    ecec:	d8800015 	stw	r2,0(sp)
    ecf0:	e1fffc17 	ldw	r7,-16(fp)
    ecf4:	e1bffd17 	ldw	r6,-12(fp)
    ecf8:	e17ffe17 	ldw	r5,-8(fp)
    ecfc:	e13fff17 	ldw	r4,-4(fp)
    ed00:	000ee780 	call	ee78 <alt_iic_isr_register>
}  
    ed04:	e037883a 	mov	sp,fp
    ed08:	dfc00117 	ldw	ra,4(sp)
    ed0c:	df000017 	ldw	fp,0(sp)
    ed10:	dec00204 	addi	sp,sp,8
    ed14:	f800283a 	ret

0000ed18 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    ed18:	defff904 	addi	sp,sp,-28
    ed1c:	df000615 	stw	fp,24(sp)
    ed20:	df000604 	addi	fp,sp,24
    ed24:	e13ffb15 	stw	r4,-20(fp)
    ed28:	e17ffa15 	stw	r5,-24(fp)
    ed2c:	e0bffa17 	ldw	r2,-24(fp)
    ed30:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    ed34:	0005303a 	rdctl	r2,status
    ed38:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ed3c:	e0fffe17 	ldw	r3,-8(fp)
    ed40:	00bfff84 	movi	r2,-2
    ed44:	1884703a 	and	r2,r3,r2
    ed48:	1001703a 	wrctl	status,r2
  return context;
    ed4c:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    ed50:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
    ed54:	00c00044 	movi	r3,1
    ed58:	e0bfff17 	ldw	r2,-4(fp)
    ed5c:	1884983a 	sll	r2,r3,r2
    ed60:	1007883a 	mov	r3,r2
    ed64:	d0a73717 	ldw	r2,-25380(gp)
    ed68:	1884b03a 	or	r2,r3,r2
    ed6c:	d0a73715 	stw	r2,-25380(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    ed70:	d0a73717 	ldw	r2,-25380(gp)
    ed74:	100170fa 	wrctl	ienable,r2
    ed78:	e0bffd17 	ldw	r2,-12(fp)
    ed7c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    ed80:	e0bffc17 	ldw	r2,-16(fp)
    ed84:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    ed88:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    ed8c:	0001883a 	nop
}
    ed90:	e037883a 	mov	sp,fp
    ed94:	df000017 	ldw	fp,0(sp)
    ed98:	dec00104 	addi	sp,sp,4
    ed9c:	f800283a 	ret

0000eda0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    eda0:	defff904 	addi	sp,sp,-28
    eda4:	df000615 	stw	fp,24(sp)
    eda8:	df000604 	addi	fp,sp,24
    edac:	e13ffb15 	stw	r4,-20(fp)
    edb0:	e17ffa15 	stw	r5,-24(fp)
    edb4:	e0bffa17 	ldw	r2,-24(fp)
    edb8:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    edbc:	0005303a 	rdctl	r2,status
    edc0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    edc4:	e0fffe17 	ldw	r3,-8(fp)
    edc8:	00bfff84 	movi	r2,-2
    edcc:	1884703a 	and	r2,r3,r2
    edd0:	1001703a 	wrctl	status,r2
  return context;
    edd4:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
    edd8:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
    eddc:	00c00044 	movi	r3,1
    ede0:	e0bfff17 	ldw	r2,-4(fp)
    ede4:	1884983a 	sll	r2,r3,r2
    ede8:	0084303a 	nor	r2,zero,r2
    edec:	1007883a 	mov	r3,r2
    edf0:	d0a73717 	ldw	r2,-25380(gp)
    edf4:	1884703a 	and	r2,r3,r2
    edf8:	d0a73715 	stw	r2,-25380(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    edfc:	d0a73717 	ldw	r2,-25380(gp)
    ee00:	100170fa 	wrctl	ienable,r2
    ee04:	e0bffd17 	ldw	r2,-12(fp)
    ee08:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    ee0c:	e0bffc17 	ldw	r2,-16(fp)
    ee10:	1001703a 	wrctl	status,r2
  return 0;
    ee14:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    ee18:	0001883a 	nop
}
    ee1c:	e037883a 	mov	sp,fp
    ee20:	df000017 	ldw	fp,0(sp)
    ee24:	dec00104 	addi	sp,sp,4
    ee28:	f800283a 	ret

0000ee2c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    ee2c:	defffc04 	addi	sp,sp,-16
    ee30:	df000315 	stw	fp,12(sp)
    ee34:	df000304 	addi	fp,sp,12
    ee38:	e13ffe15 	stw	r4,-8(fp)
    ee3c:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    ee40:	000530fa 	rdctl	r2,ienable
    ee44:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    ee48:	00c00044 	movi	r3,1
    ee4c:	e0bffd17 	ldw	r2,-12(fp)
    ee50:	1884983a 	sll	r2,r3,r2
    ee54:	1007883a 	mov	r3,r2
    ee58:	e0bfff17 	ldw	r2,-4(fp)
    ee5c:	1884703a 	and	r2,r3,r2
    ee60:	1004c03a 	cmpne	r2,r2,zero
    ee64:	10803fcc 	andi	r2,r2,255
}
    ee68:	e037883a 	mov	sp,fp
    ee6c:	df000017 	ldw	fp,0(sp)
    ee70:	dec00104 	addi	sp,sp,4
    ee74:	f800283a 	ret

0000ee78 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ee78:	defff504 	addi	sp,sp,-44
    ee7c:	dfc00a15 	stw	ra,40(sp)
    ee80:	df000915 	stw	fp,36(sp)
    ee84:	df000904 	addi	fp,sp,36
    ee88:	e13ffa15 	stw	r4,-24(fp)
    ee8c:	e17ff915 	stw	r5,-28(fp)
    ee90:	e1bff815 	stw	r6,-32(fp)
    ee94:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
    ee98:	00bffa84 	movi	r2,-22
    ee9c:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    eea0:	e0bff917 	ldw	r2,-28(fp)
    eea4:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    eea8:	e0bffe17 	ldw	r2,-8(fp)
    eeac:	10800808 	cmpgei	r2,r2,32
    eeb0:	1000241e 	bne	r2,zero,ef44 <alt_iic_isr_register+0xcc>
  NIOS2_READ_STATUS (context);
    eeb4:	0005303a 	rdctl	r2,status
    eeb8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eebc:	e0fffc17 	ldw	r3,-16(fp)
    eec0:	00bfff84 	movi	r2,-2
    eec4:	1884703a 	and	r2,r3,r2
    eec8:	1001703a 	wrctl	status,r2
  return context;
    eecc:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    eed0:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
    eed4:	e0bffe17 	ldw	r2,-8(fp)
    eed8:	100890fa 	slli	r4,r2,3
    eedc:	e0fff817 	ldw	r3,-32(fp)
    eee0:	00800074 	movhi	r2,1
    eee4:	2085883a 	add	r2,r4,r2
    eee8:	10ce9615 	stw	r3,14936(r2)
    alt_irq[id].context = isr_context;
    eeec:	e0bffe17 	ldw	r2,-8(fp)
    eef0:	100890fa 	slli	r4,r2,3
    eef4:	e0fff717 	ldw	r3,-36(fp)
    eef8:	00800074 	movhi	r2,1
    eefc:	2085883a 	add	r2,r4,r2
    ef00:	10ce9715 	stw	r3,14940(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    ef04:	e0bff817 	ldw	r2,-32(fp)
    ef08:	10000526 	beq	r2,zero,ef20 <alt_iic_isr_register+0xa8>
    ef0c:	e0bffe17 	ldw	r2,-8(fp)
    ef10:	100b883a 	mov	r5,r2
    ef14:	e13ffa17 	ldw	r4,-24(fp)
    ef18:	000ed180 	call	ed18 <alt_ic_irq_enable>
    ef1c:	00000406 	br	ef30 <alt_iic_isr_register+0xb8>
    ef20:	e0bffe17 	ldw	r2,-8(fp)
    ef24:	100b883a 	mov	r5,r2
    ef28:	e13ffa17 	ldw	r4,-24(fp)
    ef2c:	000eda00 	call	eda0 <alt_ic_irq_disable>
    ef30:	e0bfff15 	stw	r2,-4(fp)
    ef34:	e0bffd17 	ldw	r2,-12(fp)
    ef38:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
    ef3c:	e0bffb17 	ldw	r2,-20(fp)
    ef40:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    ef44:	e0bfff17 	ldw	r2,-4(fp)
}
    ef48:	e037883a 	mov	sp,fp
    ef4c:	dfc00117 	ldw	ra,4(sp)
    ef50:	df000017 	ldw	fp,0(sp)
    ef54:	dec00204 	addi	sp,sp,8
    ef58:	f800283a 	ret

0000ef5c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    ef5c:	defff904 	addi	sp,sp,-28
    ef60:	dfc00615 	stw	ra,24(sp)
    ef64:	df000515 	stw	fp,20(sp)
    ef68:	df000504 	addi	fp,sp,20
    ef6c:	e13ffe15 	stw	r4,-8(fp)
    ef70:	e17ffd15 	stw	r5,-12(fp)
    ef74:	e1bffc15 	stw	r6,-16(fp)
    ef78:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
    ef7c:	e1bffb17 	ldw	r6,-20(fp)
    ef80:	e17ffc17 	ldw	r5,-16(fp)
    ef84:	e13ffd17 	ldw	r4,-12(fp)
    ef88:	000f1c40 	call	f1c4 <open>
    ef8c:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
    ef90:	e0bfff17 	ldw	r2,-4(fp)
    ef94:	10002016 	blt	r2,zero,f018 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
    ef98:	e0ffff17 	ldw	r3,-4(fp)
    ef9c:	1805883a 	mov	r2,r3
    efa0:	1085883a 	add	r2,r2,r2
    efa4:	10c5883a 	add	r2,r2,r3
    efa8:	100490ba 	slli	r2,r2,2
    efac:	00c00074 	movhi	r3,1
    efb0:	10c7883a 	add	r3,r2,r3
    efb4:	18c2d917 	ldw	r3,2916(r3)
    efb8:	e0bffe17 	ldw	r2,-8(fp)
    efbc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    efc0:	e0ffff17 	ldw	r3,-4(fp)
    efc4:	1805883a 	mov	r2,r3
    efc8:	1085883a 	add	r2,r2,r2
    efcc:	10c5883a 	add	r2,r2,r3
    efd0:	100490ba 	slli	r2,r2,2
    efd4:	00c00074 	movhi	r3,1
    efd8:	10c7883a 	add	r3,r2,r3
    efdc:	18c2da17 	ldw	r3,2920(r3)
    efe0:	e0bffe17 	ldw	r2,-8(fp)
    efe4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    efe8:	e0ffff17 	ldw	r3,-4(fp)
    efec:	1805883a 	mov	r2,r3
    eff0:	1085883a 	add	r2,r2,r2
    eff4:	10c5883a 	add	r2,r2,r3
    eff8:	100490ba 	slli	r2,r2,2
    effc:	00c00074 	movhi	r3,1
    f000:	10c7883a 	add	r3,r2,r3
    f004:	18c2db17 	ldw	r3,2924(r3)
    f008:	e0bffe17 	ldw	r2,-8(fp)
    f00c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    f010:	e13fff17 	ldw	r4,-4(fp)
    f014:	000dc440 	call	dc44 <alt_release_fd>
  }
} 
    f018:	0001883a 	nop
    f01c:	e037883a 	mov	sp,fp
    f020:	dfc00117 	ldw	ra,4(sp)
    f024:	df000017 	ldw	fp,0(sp)
    f028:	dec00204 	addi	sp,sp,8
    f02c:	f800283a 	ret

0000f030 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    f030:	defffb04 	addi	sp,sp,-20
    f034:	dfc00415 	stw	ra,16(sp)
    f038:	df000315 	stw	fp,12(sp)
    f03c:	df000304 	addi	fp,sp,12
    f040:	e13fff15 	stw	r4,-4(fp)
    f044:	e17ffe15 	stw	r5,-8(fp)
    f048:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    f04c:	01c07fc4 	movi	r7,511
    f050:	01800044 	movi	r6,1
    f054:	e17fff17 	ldw	r5,-4(fp)
    f058:	01000074 	movhi	r4,1
    f05c:	2102dc04 	addi	r4,r4,2928
    f060:	000ef5c0 	call	ef5c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    f064:	01c07fc4 	movi	r7,511
    f068:	000d883a 	mov	r6,zero
    f06c:	e17ffe17 	ldw	r5,-8(fp)
    f070:	01000074 	movhi	r4,1
    f074:	2102d904 	addi	r4,r4,2916
    f078:	000ef5c0 	call	ef5c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    f07c:	01c07fc4 	movi	r7,511
    f080:	01800044 	movi	r6,1
    f084:	e17ffd17 	ldw	r5,-12(fp)
    f088:	01000074 	movhi	r4,1
    f08c:	2102df04 	addi	r4,r4,2940
    f090:	000ef5c0 	call	ef5c <alt_open_fd>
}  
    f094:	0001883a 	nop
    f098:	e037883a 	mov	sp,fp
    f09c:	dfc00117 	ldw	ra,4(sp)
    f0a0:	df000017 	ldw	fp,0(sp)
    f0a4:	dec00204 	addi	sp,sp,8
    f0a8:	f800283a 	ret

0000f0ac <alt_get_errno>:
{
    f0ac:	defffe04 	addi	sp,sp,-8
    f0b0:	dfc00115 	stw	ra,4(sp)
    f0b4:	df000015 	stw	fp,0(sp)
    f0b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f0bc:	d0a00e17 	ldw	r2,-32712(gp)
    f0c0:	10000326 	beq	r2,zero,f0d0 <alt_get_errno+0x24>
    f0c4:	d0a00e17 	ldw	r2,-32712(gp)
    f0c8:	103ee83a 	callr	r2
    f0cc:	00000106 	br	f0d4 <alt_get_errno+0x28>
    f0d0:	d0a73204 	addi	r2,gp,-25400
}
    f0d4:	e037883a 	mov	sp,fp
    f0d8:	dfc00117 	ldw	ra,4(sp)
    f0dc:	df000017 	ldw	fp,0(sp)
    f0e0:	dec00204 	addi	sp,sp,8
    f0e4:	f800283a 	ret

0000f0e8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    f0e8:	defffd04 	addi	sp,sp,-12
    f0ec:	df000215 	stw	fp,8(sp)
    f0f0:	df000204 	addi	fp,sp,8
    f0f4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    f0f8:	e0bffe17 	ldw	r2,-8(fp)
    f0fc:	10800217 	ldw	r2,8(r2)
    f100:	10d00034 	orhi	r3,r2,16384
    f104:	e0bffe17 	ldw	r2,-8(fp)
    f108:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    f10c:	e03fff15 	stw	zero,-4(fp)
    f110:	00002306 	br	f1a0 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    f114:	e0ffff17 	ldw	r3,-4(fp)
    f118:	1805883a 	mov	r2,r3
    f11c:	1085883a 	add	r2,r2,r2
    f120:	10c5883a 	add	r2,r2,r3
    f124:	100490ba 	slli	r2,r2,2
    f128:	00c00074 	movhi	r3,1
    f12c:	10c7883a 	add	r3,r2,r3
    f130:	18c2d917 	ldw	r3,2916(r3)
    f134:	e0bffe17 	ldw	r2,-8(fp)
    f138:	10800017 	ldw	r2,0(r2)
    f13c:	1880151e 	bne	r3,r2,f194 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f140:	e0ffff17 	ldw	r3,-4(fp)
    f144:	1805883a 	mov	r2,r3
    f148:	1085883a 	add	r2,r2,r2
    f14c:	10c5883a 	add	r2,r2,r3
    f150:	100490ba 	slli	r2,r2,2
    f154:	00c00074 	movhi	r3,1
    f158:	10c7883a 	add	r3,r2,r3
    f15c:	1882db17 	ldw	r2,2924(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
    f160:	10000c0e 	bge	r2,zero,f194 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
    f164:	e0ffff17 	ldw	r3,-4(fp)
    f168:	1805883a 	mov	r2,r3
    f16c:	1085883a 	add	r2,r2,r2
    f170:	10c5883a 	add	r2,r2,r3
    f174:	100490ba 	slli	r2,r2,2
    f178:	00c00074 	movhi	r3,1
    f17c:	18c2d904 	addi	r3,r3,2916
    f180:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f184:	e0fffe17 	ldw	r3,-8(fp)
    f188:	18800226 	beq	r3,r2,f194 <alt_file_locked+0xac>
    {
      return -EACCES;
    f18c:	00bffcc4 	movi	r2,-13
    f190:	00000806 	br	f1b4 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
    f194:	e0bfff17 	ldw	r2,-4(fp)
    f198:	10800044 	addi	r2,r2,1
    f19c:	e0bfff15 	stw	r2,-4(fp)
    f1a0:	d0a00d17 	ldw	r2,-32716(gp)
    f1a4:	1007883a 	mov	r3,r2
    f1a8:	e0bfff17 	ldw	r2,-4(fp)
    f1ac:	18bfd92e 	bgeu	r3,r2,f114 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    f1b0:	0005883a 	mov	r2,zero
}
    f1b4:	e037883a 	mov	sp,fp
    f1b8:	df000017 	ldw	fp,0(sp)
    f1bc:	dec00104 	addi	sp,sp,4
    f1c0:	f800283a 	ret

0000f1c4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    f1c4:	defff604 	addi	sp,sp,-40
    f1c8:	dfc00915 	stw	ra,36(sp)
    f1cc:	df000815 	stw	fp,32(sp)
    f1d0:	df000804 	addi	fp,sp,32
    f1d4:	e13ffa15 	stw	r4,-24(fp)
    f1d8:	e17ff915 	stw	r5,-28(fp)
    f1dc:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    f1e0:	00bfffc4 	movi	r2,-1
    f1e4:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
    f1e8:	00bffb44 	movi	r2,-19
    f1ec:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
    f1f0:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    f1f4:	d1600b04 	addi	r5,gp,-32724
    f1f8:	e13ffa17 	ldw	r4,-24(fp)
    f1fc:	000f4ec0 	call	f4ec <alt_find_dev>
    f200:	e0bfff15 	stw	r2,-4(fp)
    f204:	e0bfff17 	ldw	r2,-4(fp)
    f208:	1000051e 	bne	r2,zero,f220 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    f20c:	e13ffa17 	ldw	r4,-24(fp)
    f210:	000f57c0 	call	f57c <alt_find_file>
    f214:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
    f218:	00800044 	movi	r2,1
    f21c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    f220:	e0bfff17 	ldw	r2,-4(fp)
    f224:	10002c26 	beq	r2,zero,f2d8 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    f228:	e13fff17 	ldw	r4,-4(fp)
    f22c:	000f6840 	call	f684 <alt_get_fd>
    f230:	e0bffe15 	stw	r2,-8(fp)
    f234:	e0bffe17 	ldw	r2,-8(fp)
    f238:	1000030e 	bge	r2,zero,f248 <open+0x84>
    {
      status = index;
    f23c:	e0bffe17 	ldw	r2,-8(fp)
    f240:	e0bffd15 	stw	r2,-12(fp)
    f244:	00002606 	br	f2e0 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    f248:	e0fffe17 	ldw	r3,-8(fp)
    f24c:	1805883a 	mov	r2,r3
    f250:	1085883a 	add	r2,r2,r2
    f254:	10c5883a 	add	r2,r2,r3
    f258:	100490ba 	slli	r2,r2,2
    f25c:	00c00074 	movhi	r3,1
    f260:	18c2d904 	addi	r3,r3,2916
    f264:	10c5883a 	add	r2,r2,r3
    f268:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f26c:	e0fff917 	ldw	r3,-28(fp)
    f270:	00900034 	movhi	r2,16384
    f274:	10bfffc4 	addi	r2,r2,-1
    f278:	1886703a 	and	r3,r3,r2
    f27c:	e0bffb17 	ldw	r2,-20(fp)
    f280:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    f284:	e0bffc17 	ldw	r2,-16(fp)
    f288:	1000051e 	bne	r2,zero,f2a0 <open+0xdc>
    f28c:	e13ffb17 	ldw	r4,-20(fp)
    f290:	000f0e80 	call	f0e8 <alt_file_locked>
    f294:	e0bffd15 	stw	r2,-12(fp)
    f298:	e0bffd17 	ldw	r2,-12(fp)
    f29c:	10001016 	blt	r2,zero,f2e0 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    f2a0:	e0bfff17 	ldw	r2,-4(fp)
    f2a4:	10800317 	ldw	r2,12(r2)
    f2a8:	10000826 	beq	r2,zero,f2cc <open+0x108>
    f2ac:	e0bfff17 	ldw	r2,-4(fp)
    f2b0:	10800317 	ldw	r2,12(r2)
    f2b4:	e1fff817 	ldw	r7,-32(fp)
    f2b8:	e1bff917 	ldw	r6,-28(fp)
    f2bc:	e17ffa17 	ldw	r5,-24(fp)
    f2c0:	e13ffb17 	ldw	r4,-20(fp)
    f2c4:	103ee83a 	callr	r2
    f2c8:	00000106 	br	f2d0 <open+0x10c>
    f2cc:	0005883a 	mov	r2,zero
    f2d0:	e0bffd15 	stw	r2,-12(fp)
    f2d4:	00000206 	br	f2e0 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    f2d8:	00bffb44 	movi	r2,-19
    f2dc:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    f2e0:	e0bffd17 	ldw	r2,-12(fp)
    f2e4:	1000090e 	bge	r2,zero,f30c <open+0x148>
  {
    alt_release_fd (index);  
    f2e8:	e13ffe17 	ldw	r4,-8(fp)
    f2ec:	000dc440 	call	dc44 <alt_release_fd>
    ALT_ERRNO = -status;
    f2f0:	000f0ac0 	call	f0ac <alt_get_errno>
    f2f4:	1007883a 	mov	r3,r2
    f2f8:	e0bffd17 	ldw	r2,-12(fp)
    f2fc:	0085c83a 	sub	r2,zero,r2
    f300:	18800015 	stw	r2,0(r3)
    return -1;
    f304:	00bfffc4 	movi	r2,-1
    f308:	00000106 	br	f310 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    f30c:	e0bffe17 	ldw	r2,-8(fp)
}
    f310:	e037883a 	mov	sp,fp
    f314:	dfc00117 	ldw	ra,4(sp)
    f318:	df000017 	ldw	fp,0(sp)
    f31c:	dec00204 	addi	sp,sp,8
    f320:	f800283a 	ret

0000f324 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    f324:	defffa04 	addi	sp,sp,-24
    f328:	df000515 	stw	fp,20(sp)
    f32c:	df000504 	addi	fp,sp,20
    f330:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
    f334:	0005303a 	rdctl	r2,status
    f338:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f33c:	e0fffc17 	ldw	r3,-16(fp)
    f340:	00bfff84 	movi	r2,-2
    f344:	1884703a 	and	r2,r3,r2
    f348:	1001703a 	wrctl	status,r2
  return context;
    f34c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    f350:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
    f354:	e0bffb17 	ldw	r2,-20(fp)
    f358:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    f35c:	e0bffd17 	ldw	r2,-12(fp)
    f360:	10800017 	ldw	r2,0(r2)
    f364:	e0fffd17 	ldw	r3,-12(fp)
    f368:	18c00117 	ldw	r3,4(r3)
    f36c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    f370:	e0bffd17 	ldw	r2,-12(fp)
    f374:	10800117 	ldw	r2,4(r2)
    f378:	e0fffd17 	ldw	r3,-12(fp)
    f37c:	18c00017 	ldw	r3,0(r3)
    f380:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    f384:	e0bffd17 	ldw	r2,-12(fp)
    f388:	e0fffd17 	ldw	r3,-12(fp)
    f38c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    f390:	e0bffd17 	ldw	r2,-12(fp)
    f394:	e0fffd17 	ldw	r3,-12(fp)
    f398:	10c00015 	stw	r3,0(r2)
    f39c:	e0bfff17 	ldw	r2,-4(fp)
    f3a0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
    f3a4:	e0bffe17 	ldw	r2,-8(fp)
    f3a8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    f3ac:	0001883a 	nop
    f3b0:	e037883a 	mov	sp,fp
    f3b4:	df000017 	ldw	fp,0(sp)
    f3b8:	dec00104 	addi	sp,sp,4
    f3bc:	f800283a 	ret

0000f3c0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    f3c0:	defffb04 	addi	sp,sp,-20
    f3c4:	dfc00415 	stw	ra,16(sp)
    f3c8:	df000315 	stw	fp,12(sp)
    f3cc:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    f3d0:	d0a01117 	ldw	r2,-32700(gp)
    f3d4:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    f3d8:	d0a73917 	ldw	r2,-25372(gp)
    f3dc:	10800044 	addi	r2,r2,1
    f3e0:	d0a73915 	stw	r2,-25372(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f3e4:	00002e06 	br	f4a0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    f3e8:	e0bfff17 	ldw	r2,-4(fp)
    f3ec:	10800017 	ldw	r2,0(r2)
    f3f0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    f3f4:	e0bfff17 	ldw	r2,-4(fp)
    f3f8:	10800403 	ldbu	r2,16(r2)
    f3fc:	10803fcc 	andi	r2,r2,255
    f400:	10000426 	beq	r2,zero,f414 <alt_tick+0x54>
    f404:	d0a73917 	ldw	r2,-25372(gp)
    f408:	1000021e 	bne	r2,zero,f414 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    f40c:	e0bfff17 	ldw	r2,-4(fp)
    f410:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    f414:	e0bfff17 	ldw	r2,-4(fp)
    f418:	10800217 	ldw	r2,8(r2)
    f41c:	d0e73917 	ldw	r3,-25372(gp)
    f420:	18801d36 	bltu	r3,r2,f498 <alt_tick+0xd8>
    f424:	e0bfff17 	ldw	r2,-4(fp)
    f428:	10800403 	ldbu	r2,16(r2)
    f42c:	10803fcc 	andi	r2,r2,255
    f430:	1000191e 	bne	r2,zero,f498 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    f434:	e0bfff17 	ldw	r2,-4(fp)
    f438:	10800317 	ldw	r2,12(r2)
    f43c:	e0ffff17 	ldw	r3,-4(fp)
    f440:	18c00517 	ldw	r3,20(r3)
    f444:	1809883a 	mov	r4,r3
    f448:	103ee83a 	callr	r2
    f44c:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    f450:	e0bffd17 	ldw	r2,-12(fp)
    f454:	1000031e 	bne	r2,zero,f464 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    f458:	e13fff17 	ldw	r4,-4(fp)
    f45c:	000f3240 	call	f324 <alt_alarm_stop>
    f460:	00000d06 	br	f498 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    f464:	e0bfff17 	ldw	r2,-4(fp)
    f468:	10c00217 	ldw	r3,8(r2)
    f46c:	e0bffd17 	ldw	r2,-12(fp)
    f470:	1887883a 	add	r3,r3,r2
    f474:	e0bfff17 	ldw	r2,-4(fp)
    f478:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    f47c:	e0bfff17 	ldw	r2,-4(fp)
    f480:	10c00217 	ldw	r3,8(r2)
    f484:	d0a73917 	ldw	r2,-25372(gp)
    f488:	1880032e 	bgeu	r3,r2,f498 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    f48c:	e0bfff17 	ldw	r2,-4(fp)
    f490:	00c00044 	movi	r3,1
    f494:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    f498:	e0bffe17 	ldw	r2,-8(fp)
    f49c:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
    f4a0:	e0ffff17 	ldw	r3,-4(fp)
    f4a4:	d0a01104 	addi	r2,gp,-32700
    f4a8:	18bfcf1e 	bne	r3,r2,f3e8 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f4ac:	0001883a 	nop
}
    f4b0:	0001883a 	nop
    f4b4:	e037883a 	mov	sp,fp
    f4b8:	dfc00117 	ldw	ra,4(sp)
    f4bc:	df000017 	ldw	fp,0(sp)
    f4c0:	dec00204 	addi	sp,sp,8
    f4c4:	f800283a 	ret

0000f4c8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    f4c8:	deffff04 	addi	sp,sp,-4
    f4cc:	df000015 	stw	fp,0(sp)
    f4d0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    f4d4:	000170fa 	wrctl	ienable,zero
}
    f4d8:	0001883a 	nop
    f4dc:	e037883a 	mov	sp,fp
    f4e0:	df000017 	ldw	fp,0(sp)
    f4e4:	dec00104 	addi	sp,sp,4
    f4e8:	f800283a 	ret

0000f4ec <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f4ec:	defffa04 	addi	sp,sp,-24
    f4f0:	dfc00515 	stw	ra,20(sp)
    f4f4:	df000415 	stw	fp,16(sp)
    f4f8:	df000404 	addi	fp,sp,16
    f4fc:	e13ffd15 	stw	r4,-12(fp)
    f500:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f504:	e0bffc17 	ldw	r2,-16(fp)
    f508:	10800017 	ldw	r2,0(r2)
    f50c:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f510:	e13ffd17 	ldw	r4,-12(fp)
    f514:	0001a4c0 	call	1a4c <strlen>
    f518:	10800044 	addi	r2,r2,1
    f51c:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f520:	00000d06 	br	f558 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f524:	e0bfff17 	ldw	r2,-4(fp)
    f528:	10800217 	ldw	r2,8(r2)
    f52c:	e0fffe17 	ldw	r3,-8(fp)
    f530:	180d883a 	mov	r6,r3
    f534:	e17ffd17 	ldw	r5,-12(fp)
    f538:	1009883a 	mov	r4,r2
    f53c:	000f81c0 	call	f81c <memcmp>
    f540:	1000021e 	bne	r2,zero,f54c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f544:	e0bfff17 	ldw	r2,-4(fp)
    f548:	00000706 	br	f568 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f54c:	e0bfff17 	ldw	r2,-4(fp)
    f550:	10800017 	ldw	r2,0(r2)
    f554:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
    f558:	e0ffff17 	ldw	r3,-4(fp)
    f55c:	e0bffc17 	ldw	r2,-16(fp)
    f560:	18bff01e 	bne	r3,r2,f524 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
    f564:	0005883a 	mov	r2,zero
}
    f568:	e037883a 	mov	sp,fp
    f56c:	dfc00117 	ldw	ra,4(sp)
    f570:	df000017 	ldw	fp,0(sp)
    f574:	dec00204 	addi	sp,sp,8
    f578:	f800283a 	ret

0000f57c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f57c:	defffb04 	addi	sp,sp,-20
    f580:	dfc00415 	stw	ra,16(sp)
    f584:	df000315 	stw	fp,12(sp)
    f588:	df000304 	addi	fp,sp,12
    f58c:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f590:	d0a00917 	ldw	r2,-32732(gp)
    f594:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f598:	00003106 	br	f660 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    f59c:	e0bfff17 	ldw	r2,-4(fp)
    f5a0:	10800217 	ldw	r2,8(r2)
    f5a4:	1009883a 	mov	r4,r2
    f5a8:	0001a4c0 	call	1a4c <strlen>
    f5ac:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    f5b0:	e0bfff17 	ldw	r2,-4(fp)
    f5b4:	10c00217 	ldw	r3,8(r2)
    f5b8:	e0bffe17 	ldw	r2,-8(fp)
    f5bc:	10bfffc4 	addi	r2,r2,-1
    f5c0:	1885883a 	add	r2,r3,r2
    f5c4:	10800003 	ldbu	r2,0(r2)
    f5c8:	10803fcc 	andi	r2,r2,255
    f5cc:	1080201c 	xori	r2,r2,128
    f5d0:	10bfe004 	addi	r2,r2,-128
    f5d4:	10800bd8 	cmpnei	r2,r2,47
    f5d8:	1000031e 	bne	r2,zero,f5e8 <alt_find_file+0x6c>
    {
      len -= 1;
    f5dc:	e0bffe17 	ldw	r2,-8(fp)
    f5e0:	10bfffc4 	addi	r2,r2,-1
    f5e4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f5e8:	e0bffe17 	ldw	r2,-8(fp)
    f5ec:	e0fffd17 	ldw	r3,-12(fp)
    f5f0:	1885883a 	add	r2,r3,r2
    f5f4:	10800003 	ldbu	r2,0(r2)
    f5f8:	10803fcc 	andi	r2,r2,255
    f5fc:	1080201c 	xori	r2,r2,128
    f600:	10bfe004 	addi	r2,r2,-128
    f604:	10800be0 	cmpeqi	r2,r2,47
    f608:	1000081e 	bne	r2,zero,f62c <alt_find_file+0xb0>
    f60c:	e0bffe17 	ldw	r2,-8(fp)
    f610:	e0fffd17 	ldw	r3,-12(fp)
    f614:	1885883a 	add	r2,r3,r2
    f618:	10800003 	ldbu	r2,0(r2)
    f61c:	10803fcc 	andi	r2,r2,255
    f620:	1080201c 	xori	r2,r2,128
    f624:	10bfe004 	addi	r2,r2,-128
    f628:	10000a1e 	bne	r2,zero,f654 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    f62c:	e0bfff17 	ldw	r2,-4(fp)
    f630:	10800217 	ldw	r2,8(r2)
    f634:	e0fffe17 	ldw	r3,-8(fp)
    f638:	180d883a 	mov	r6,r3
    f63c:	e17ffd17 	ldw	r5,-12(fp)
    f640:	1009883a 	mov	r4,r2
    f644:	000f81c0 	call	f81c <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
    f648:	1000021e 	bne	r2,zero,f654 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
    f64c:	e0bfff17 	ldw	r2,-4(fp)
    f650:	00000706 	br	f670 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    f654:	e0bfff17 	ldw	r2,-4(fp)
    f658:	10800017 	ldw	r2,0(r2)
    f65c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
    f660:	e0ffff17 	ldw	r3,-4(fp)
    f664:	d0a00904 	addi	r2,gp,-32732
    f668:	18bfcc1e 	bne	r3,r2,f59c <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
    f66c:	0005883a 	mov	r2,zero
}
    f670:	e037883a 	mov	sp,fp
    f674:	dfc00117 	ldw	ra,4(sp)
    f678:	df000017 	ldw	fp,0(sp)
    f67c:	dec00204 	addi	sp,sp,8
    f680:	f800283a 	ret

0000f684 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f684:	defffc04 	addi	sp,sp,-16
    f688:	df000315 	stw	fp,12(sp)
    f68c:	df000304 	addi	fp,sp,12
    f690:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
    f694:	00bffa04 	movi	r2,-24
    f698:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f69c:	e03fff15 	stw	zero,-4(fp)
    f6a0:	00001d06 	br	f718 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
    f6a4:	e0ffff17 	ldw	r3,-4(fp)
    f6a8:	1805883a 	mov	r2,r3
    f6ac:	1085883a 	add	r2,r2,r2
    f6b0:	10c5883a 	add	r2,r2,r3
    f6b4:	100490ba 	slli	r2,r2,2
    f6b8:	00c00074 	movhi	r3,1
    f6bc:	10c7883a 	add	r3,r2,r3
    f6c0:	1882d917 	ldw	r2,2916(r3)
    f6c4:	1000111e 	bne	r2,zero,f70c <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
    f6c8:	e0ffff17 	ldw	r3,-4(fp)
    f6cc:	1805883a 	mov	r2,r3
    f6d0:	1085883a 	add	r2,r2,r2
    f6d4:	10c5883a 	add	r2,r2,r3
    f6d8:	100490ba 	slli	r2,r2,2
    f6dc:	e13ffd17 	ldw	r4,-12(fp)
    f6e0:	00c00074 	movhi	r3,1
    f6e4:	10c7883a 	add	r3,r2,r3
    f6e8:	1902d915 	stw	r4,2916(r3)
      if (i > alt_max_fd)
    f6ec:	d0e00d17 	ldw	r3,-32716(gp)
    f6f0:	e0bfff17 	ldw	r2,-4(fp)
    f6f4:	1880020e 	bge	r3,r2,f700 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
    f6f8:	e0bfff17 	ldw	r2,-4(fp)
    f6fc:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
    f700:	e0bfff17 	ldw	r2,-4(fp)
    f704:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
    f708:	00000706 	br	f728 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
    f70c:	e0bfff17 	ldw	r2,-4(fp)
    f710:	10800044 	addi	r2,r2,1
    f714:	e0bfff15 	stw	r2,-4(fp)
    f718:	e0bfff17 	ldw	r2,-4(fp)
    f71c:	10800810 	cmplti	r2,r2,32
    f720:	103fe01e 	bne	r2,zero,f6a4 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
    f724:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f728:	e0bffe17 	ldw	r2,-8(fp)
}
    f72c:	e037883a 	mov	sp,fp
    f730:	df000017 	ldw	fp,0(sp)
    f734:	dec00104 	addi	sp,sp,4
    f738:	f800283a 	ret

0000f73c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f73c:	defffe04 	addi	sp,sp,-8
    f740:	df000115 	stw	fp,4(sp)
    f744:	df000104 	addi	fp,sp,4
    f748:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f74c:	e0bfff17 	ldw	r2,-4(fp)
    f750:	10bffe84 	addi	r2,r2,-6
    f754:	10c00428 	cmpgeui	r3,r2,16
    f758:	1800191e 	bne	r3,zero,f7c0 <alt_exception_cause_generated_bad_addr+0x84>
    f75c:	100690ba 	slli	r3,r2,2
    f760:	00800074 	movhi	r2,1
    f764:	1885883a 	add	r2,r3,r2
    f768:	10bddc17 	ldw	r2,-2192(r2)
    f76c:	1000683a 	jmp	r2
    f770:	0000f7b0 	cmpltui	zero,zero,990
    f774:	0000f7b0 	cmpltui	zero,zero,990
    f778:	0000f7c0 	call	f7c <_malloc_r+0x4c0>
    f77c:	0000f7c0 	call	f7c <_malloc_r+0x4c0>
    f780:	0000f7c0 	call	f7c <_malloc_r+0x4c0>
    f784:	0000f7b0 	cmpltui	zero,zero,990
    f788:	0000f7b8 	rdprs	zero,zero,990
    f78c:	0000f7c0 	call	f7c <_malloc_r+0x4c0>
    f790:	0000f7b0 	cmpltui	zero,zero,990
    f794:	0000f7b0 	cmpltui	zero,zero,990
    f798:	0000f7c0 	call	f7c <_malloc_r+0x4c0>
    f79c:	0000f7b0 	cmpltui	zero,zero,990
    f7a0:	0000f7b8 	rdprs	zero,zero,990
    f7a4:	0000f7c0 	call	f7c <_malloc_r+0x4c0>
    f7a8:	0000f7c0 	call	f7c <_malloc_r+0x4c0>
    f7ac:	0000f7b0 	cmpltui	zero,zero,990
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f7b0:	00800044 	movi	r2,1
    f7b4:	00000306 	br	f7c4 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f7b8:	0005883a 	mov	r2,zero
    f7bc:	00000106 	br	f7c4 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
    f7c0:	0005883a 	mov	r2,zero
  }
}
    f7c4:	e037883a 	mov	sp,fp
    f7c8:	df000017 	ldw	fp,0(sp)
    f7cc:	dec00104 	addi	sp,sp,4
    f7d0:	f800283a 	ret

0000f7d4 <atexit>:
    f7d4:	200b883a 	mov	r5,r4
    f7d8:	000f883a 	mov	r7,zero
    f7dc:	000d883a 	mov	r6,zero
    f7e0:	0009883a 	mov	r4,zero
    f7e4:	000f8a81 	jmpi	f8a8 <__register_exitproc>

0000f7e8 <exit>:
    f7e8:	defffe04 	addi	sp,sp,-8
    f7ec:	000b883a 	mov	r5,zero
    f7f0:	dc000015 	stw	r16,0(sp)
    f7f4:	dfc00115 	stw	ra,4(sp)
    f7f8:	2021883a 	mov	r16,r4
    f7fc:	000f9380 	call	f938 <__call_exitprocs>
    f800:	00800074 	movhi	r2,1
    f804:	11075617 	ldw	r4,7512(r2)
    f808:	20800f17 	ldw	r2,60(r4)
    f80c:	10000126 	beq	r2,zero,f814 <exit+0x2c>
    f810:	103ee83a 	callr	r2
    f814:	8009883a 	mov	r4,r16
    f818:	000fa500 	call	fa50 <_exit>

0000f81c <memcmp>:
    f81c:	30800130 	cmpltui	r2,r6,4
    f820:	10000b1e 	bne	r2,zero,f850 <memcmp+0x34>
    f824:	2144b03a 	or	r2,r4,r5
    f828:	108000cc 	andi	r2,r2,3
    f82c:	10001a1e 	bne	r2,zero,f898 <memcmp+0x7c>
    f830:	20c00017 	ldw	r3,0(r4)
    f834:	28800017 	ldw	r2,0(r5)
    f838:	1880171e 	bne	r3,r2,f898 <memcmp+0x7c>
    f83c:	31bfff04 	addi	r6,r6,-4
    f840:	30800128 	cmpgeui	r2,r6,4
    f844:	21000104 	addi	r4,r4,4
    f848:	29400104 	addi	r5,r5,4
    f84c:	103ff81e 	bne	r2,zero,f830 <memcmp+0x14>
    f850:	30ffffc4 	addi	r3,r6,-1
    f854:	30000e26 	beq	r6,zero,f890 <memcmp+0x74>
    f858:	29800003 	ldbu	r6,0(r5)
    f85c:	20800003 	ldbu	r2,0(r4)
    f860:	30800f1e 	bne	r6,r2,f8a0 <memcmp+0x84>
    f864:	18800044 	addi	r2,r3,1
    f868:	20c00044 	addi	r3,r4,1
    f86c:	2089883a 	add	r4,r4,r2
    f870:	00000506 	br	f888 <memcmp+0x6c>
    f874:	18800003 	ldbu	r2,0(r3)
    f878:	29800003 	ldbu	r6,0(r5)
    f87c:	18c00044 	addi	r3,r3,1
    f880:	10803fcc 	andi	r2,r2,255
    f884:	1180061e 	bne	r2,r6,f8a0 <memcmp+0x84>
    f888:	29400044 	addi	r5,r5,1
    f88c:	193ff91e 	bne	r3,r4,f874 <memcmp+0x58>
    f890:	0005883a 	mov	r2,zero
    f894:	f800283a 	ret
    f898:	30ffffc4 	addi	r3,r6,-1
    f89c:	003fee06 	br	f858 <memcmp+0x3c>
    f8a0:	1185c83a 	sub	r2,r2,r6
    f8a4:	f800283a 	ret

0000f8a8 <__register_exitproc>:
    f8a8:	00800074 	movhi	r2,1
    f8ac:	10c75617 	ldw	r3,7512(r2)
    f8b0:	18805217 	ldw	r2,328(r3)
    f8b4:	10001726 	beq	r2,zero,f914 <__register_exitproc+0x6c>
    f8b8:	10c00117 	ldw	r3,4(r2)
    f8bc:	1a000808 	cmpgei	r8,r3,32
    f8c0:	40001b1e 	bne	r8,zero,f930 <__register_exitproc+0x88>
    f8c4:	20000b26 	beq	r4,zero,f8f4 <__register_exitproc+0x4c>
    f8c8:	181090ba 	slli	r8,r3,2
    f8cc:	02400044 	movi	r9,1
    f8d0:	48d2983a 	sll	r9,r9,r3
    f8d4:	1211883a 	add	r8,r2,r8
    f8d8:	41802215 	stw	r6,136(r8)
    f8dc:	11806217 	ldw	r6,392(r2)
    f8e0:	21000098 	cmpnei	r4,r4,2
    f8e4:	324cb03a 	or	r6,r6,r9
    f8e8:	11806215 	stw	r6,392(r2)
    f8ec:	41c04215 	stw	r7,264(r8)
    f8f0:	20000b26 	beq	r4,zero,f920 <__register_exitproc+0x78>
    f8f4:	19000084 	addi	r4,r3,2
    f8f8:	200890ba 	slli	r4,r4,2
    f8fc:	18c00044 	addi	r3,r3,1
    f900:	10c00115 	stw	r3,4(r2)
    f904:	1105883a 	add	r2,r2,r4
    f908:	11400015 	stw	r5,0(r2)
    f90c:	0005883a 	mov	r2,zero
    f910:	f800283a 	ret
    f914:	18805304 	addi	r2,r3,332
    f918:	18805215 	stw	r2,328(r3)
    f91c:	003fe606 	br	f8b8 <__register_exitproc+0x10>
    f920:	11006317 	ldw	r4,396(r2)
    f924:	2252b03a 	or	r9,r4,r9
    f928:	12406315 	stw	r9,396(r2)
    f92c:	003ff106 	br	f8f4 <__register_exitproc+0x4c>
    f930:	00bfffc4 	movi	r2,-1
    f934:	f800283a 	ret

0000f938 <__call_exitprocs>:
    f938:	defff704 	addi	sp,sp,-36
    f93c:	00800074 	movhi	r2,1
    f940:	ddc00715 	stw	r23,28(sp)
    f944:	15c75617 	ldw	r23,7512(r2)
    f948:	dd400515 	stw	r21,20(sp)
    f94c:	dd000415 	stw	r20,16(sp)
    f950:	dcc00315 	stw	r19,12(sp)
    f954:	dfc00815 	stw	ra,32(sp)
    f958:	dd800615 	stw	r22,24(sp)
    f95c:	dc800215 	stw	r18,8(sp)
    f960:	dc400115 	stw	r17,4(sp)
    f964:	dc000015 	stw	r16,0(sp)
    f968:	2029883a 	mov	r20,r4
    f96c:	282b883a 	mov	r21,r5
    f970:	04c00044 	movi	r19,1
    f974:	bc805217 	ldw	r18,328(r23)
    f978:	90000d26 	beq	r18,zero,f9b0 <__call_exitprocs+0x78>
    f97c:	94000117 	ldw	r16,4(r18)
    f980:	847fffc4 	addi	r17,r16,-1
    f984:	88000a16 	blt	r17,zero,f9b0 <__call_exitprocs+0x78>
    f988:	84000044 	addi	r16,r16,1
    f98c:	802090ba 	slli	r16,r16,2
    f990:	9421883a 	add	r16,r18,r16
    f994:	a8001126 	beq	r21,zero,f9dc <__call_exitprocs+0xa4>
    f998:	80804017 	ldw	r2,256(r16)
    f99c:	15400f26 	beq	r2,r21,f9dc <__call_exitprocs+0xa4>
    f9a0:	8c7fffc4 	addi	r17,r17,-1
    f9a4:	88bfffd8 	cmpnei	r2,r17,-1
    f9a8:	843fff04 	addi	r16,r16,-4
    f9ac:	103ff91e 	bne	r2,zero,f994 <__call_exitprocs+0x5c>
    f9b0:	dfc00817 	ldw	ra,32(sp)
    f9b4:	ddc00717 	ldw	r23,28(sp)
    f9b8:	dd800617 	ldw	r22,24(sp)
    f9bc:	dd400517 	ldw	r21,20(sp)
    f9c0:	dd000417 	ldw	r20,16(sp)
    f9c4:	dcc00317 	ldw	r19,12(sp)
    f9c8:	dc800217 	ldw	r18,8(sp)
    f9cc:	dc400117 	ldw	r17,4(sp)
    f9d0:	dc000017 	ldw	r16,0(sp)
    f9d4:	dec00904 	addi	sp,sp,36
    f9d8:	f800283a 	ret
    f9dc:	90800117 	ldw	r2,4(r18)
    f9e0:	81800017 	ldw	r6,0(r16)
    f9e4:	10bfffc4 	addi	r2,r2,-1
    f9e8:	14401526 	beq	r2,r17,fa40 <__call_exitprocs+0x108>
    f9ec:	80000015 	stw	zero,0(r16)
    f9f0:	303feb26 	beq	r6,zero,f9a0 <__call_exitprocs+0x68>
    f9f4:	9c46983a 	sll	r3,r19,r17
    f9f8:	90806217 	ldw	r2,392(r18)
    f9fc:	95800117 	ldw	r22,4(r18)
    fa00:	1884703a 	and	r2,r3,r2
    fa04:	1000061e 	bne	r2,zero,fa20 <__call_exitprocs+0xe8>
    fa08:	303ee83a 	callr	r6
    fa0c:	90800117 	ldw	r2,4(r18)
    fa10:	15bfd81e 	bne	r2,r22,f974 <__call_exitprocs+0x3c>
    fa14:	b8805217 	ldw	r2,328(r23)
    fa18:	14bfe126 	beq	r2,r18,f9a0 <__call_exitprocs+0x68>
    fa1c:	003fd506 	br	f974 <__call_exitprocs+0x3c>
    fa20:	90806317 	ldw	r2,396(r18)
    fa24:	81002017 	ldw	r4,128(r16)
    fa28:	1886703a 	and	r3,r3,r2
    fa2c:	1800061e 	bne	r3,zero,fa48 <__call_exitprocs+0x110>
    fa30:	200b883a 	mov	r5,r4
    fa34:	a009883a 	mov	r4,r20
    fa38:	303ee83a 	callr	r6
    fa3c:	003ff306 	br	fa0c <__call_exitprocs+0xd4>
    fa40:	94400115 	stw	r17,4(r18)
    fa44:	003fea06 	br	f9f0 <__call_exitprocs+0xb8>
    fa48:	303ee83a 	callr	r6
    fa4c:	003fef06 	br	fa0c <__call_exitprocs+0xd4>

0000fa50 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    fa50:	defffd04 	addi	sp,sp,-12
    fa54:	df000215 	stw	fp,8(sp)
    fa58:	df000204 	addi	fp,sp,8
    fa5c:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    fa60:	0001883a 	nop
    fa64:	e0bffe17 	ldw	r2,-8(fp)
    fa68:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    fa6c:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    fa70:	10000226 	beq	r2,zero,fa7c <_exit+0x2c>
    ALT_SIM_FAIL();
    fa74:	002af070 	cmpltui	zero,zero,43969
    fa78:	00000106 	br	fa80 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    fa7c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    fa80:	003fff06 	br	fa80 <_exit+0x30>
