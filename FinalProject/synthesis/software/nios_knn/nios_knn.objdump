
nios_knn.elf:     file format elf32-littlenios2
nios_knn.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000224

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00010198 memsz 0x00010198 flags r-x
    LOAD off    0x000111b8 vaddr 0x000101b8 paddr 0x00011e24 align 2**12
         filesz 0x00001c6c memsz 0x00001c6c flags rw-
    LOAD off    0x00013a90 vaddr 0x00013a90 paddr 0x00013a90 align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000204  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f8f0  00000224  00000224  00001224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006a4  0000fb14  0000fb14  00010b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c6c  000101b8  00011e24  000111b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  00013a90  00013a90  00013a90  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00013bf8  00013bf8  00012e24  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  00012e24  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f98  00000000  00000000  00012e50  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00049fcb  00000000  00000000  00013de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000ee27  00000000  00000000  0005ddb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00018483  00000000  00000000  0006cbda  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000021bc  00000000  00000000  00085060  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004064  00000000  00000000  0008721c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001cef9  00000000  00000000  0008b280  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000a817c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001ce8  00000000  00000000  000a8190  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000ad08f  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000ad092  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000ad09e  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000ad09f  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  000ad0a0  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000ad0ab  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000ad0b6  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000c  00000000  00000000  000ad0c1  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004a  00000000  00000000  000ad0cd  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000224 l    d  .text	00000000 .text
0000fb14 l    d  .rodata	00000000 .rodata
000101b8 l    d  .rwdata	00000000 .rwdata
00013a90 l    d  .bss	00000000 .bss
00013bf8 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/nothi/Documents/Quartus/ECE541FinalProject/FinalProject/synthesis/software/nios_knn_bsp//obj/HAL/src/crt0.o
0000025c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 nios_knn.c
000101b8 l     O .rwdata	00000040 flowers.3023
000101f8 l     O .rwdata	00000040 strs.3030
00013ac0 l     O .bss	00000010 attributes.3031
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
000006a0 l     F .text	00000008 __fp_lock
000006b4 l     F .text	00000168 __sinit.part.0
0000081c l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00010238 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
0000175c l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtol.c
00001b74 l     F .text	0000023c _strtol_l.isra.0
00000000 l    df *ABS*	00000000 vfprintf.c
00003f84 l     F .text	000000c0 __sbprintf
0000fc8e l     O .rodata	00000010 blanks.5226
0000fc7e l     O .rodata	00000010 zeroes.5227
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 dtoa.c
00004260 l     F .text	00000234 quorem
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0000ff30 l     O .rodata	0000000c p05.4024
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 vfprintf.c
000081c8 l     F .text	000000f4 __sprint_r.part.0
00009628 l     F .text	000000c0 __sbprintf
00010064 l     O .rodata	00000010 blanks.5203
00010054 l     O .rodata	00000010 zeroes.5204
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d59c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d6b4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d6e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d7d8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d8c4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d9b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000db90 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00011e14 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000ddf4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000df34 l     F .text	00000034 alt_dev_reg
00010d78 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e20c l     F .text	00000204 altera_avalon_jtag_uart_irq
0000e410 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000eb98 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000efec l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000f13c l     F .text	0000003c alt_get_errno
0000f178 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00013abc g     O .bss	00000004 alt_instruction_exception_handler
000079e4 g     F .text	00000074 _mprec_log10
00007ac4 g     F .text	00000074 __any_on
00009a04 g     F .text	00000058 _isatty_r
0000ff3c g     O .rodata	00000028 __mprec_tinytens
0000dacc g     F .text	0000007c alt_main
00001680 g     F .text	000000cc _puts_r
00013af8 g     O .bss	00000100 alt_irq
00006820 g     F .text	00000064 _lseek_r
00011e24 g       *ABS*	00000000 __flash_rwdata_start
0000bf64 g     F .text	00000080 .hidden __eqdf2
00013bf8 g       *ABS*	00000000 __alt_heap_start
00001648 g     F .text	00000038 printf
00009d70 g     F .text	0000006c _wcrtomb_r
000002ac g     F .text	000000a4 printClassificationResult
00001a78 g     F .text	0000005c __sseek
000009ac g     F .text	00000010 __sinit
00009c14 g     F .text	00000148 __swbuf_r
00009a5c g     F .text	00000070 _setlocale_r
00000824 g     F .text	00000078 __sfmoreglue
0000db6c g     F .text	00000024 __malloc_unlock
00006a58 g     F .text	0000012c memmove
00000998 g     F .text	00000014 _cleanup
00006b84 g     F .text	000000a4 _Balloc
0000bfe4 g     F .text	000000f0 .hidden __gtdf2
0000f558 g     F .text	00000024 altera_nios2_gen2_irq_init
00000350 g     F .text	000000d0 getAttributesFromUser
00000000 g     F .entry	0000000c __reset
00006800 g     F .text	00000008 __localeconv_l
00000020 g       *ABS*	00000000 __flash_exceptions_start
000099a4 g     F .text	00000060 _fstat_r
00013a9c g     O .bss	00000004 errno
000019f0 g     F .text	00000008 __seofread
00013aa8 g     O .bss	00000004 alt_argv
00019dd8 g       *ABS*	00000000 _gp
00000688 g     F .text	00000018 fgets
00010bf8 g     O .rwdata	00000180 alt_fd_list
00000260 g     F .text	0000004c resolveToFlower
0000f57c g     F .text	00000090 alt_find_dev
00001428 g     F .text	00000100 memcpy
000006a8 g     F .text	0000000c _cleanup_r
0000d3e4 g     F .text	000000c8 .hidden __floatsidf
0000f0c0 g     F .text	0000007c alt_io_redirect
0000c0d4 g     F .text	000000f0 .hidden __ltdf2
0000fb14 g       *ABS*	00000000 __DTOR_END__
0000174c g     F .text	00000010 puts
0000f7cc g     F .text	00000098 alt_exception_cause_generated_bad_addr
00007940 g     F .text	000000a4 __ratio
00009610 g     F .text	00000018 __vfiprintf_internal
0000e60c g     F .text	0000021c altera_avalon_jtag_uart_read
00001618 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000ab78 g     F .text	00000064 .hidden __udivsi3
0000d814 g     F .text	000000b0 isatty
0000ff8c g     O .rodata	000000c8 __mprec_tens
00013a98 g     O .bss	00000004 __malloc_top_pad
00006808 g     F .text	0000000c _localeconv_r
00006fac g     F .text	00000034 __i2b
0000632c g     F .text	000004d4 __sfvwrite_r
00001944 g     F .text	00000058 _sbrk_r
00007b38 g     F .text	00000064 _read_r
00011e0c g     O .rwdata	00000004 alt_max_fd
00005b5c g     F .text	000000f8 _fclose_r
00005eec g     F .text	00000028 fflush
00013a94 g     O .bss	00000004 __malloc_max_sbrked_mem
0000ac60 g     F .text	000009a0 .hidden __adddf3
000076f4 g     F .text	00000104 __b2d
0000a4b8 g     F .text	000005c8 .hidden __umoddi3
0000d9ec g     F .text	000000e0 lseek
00011dec g     O .rwdata	00000004 _global_impure_ptr
00007b9c g     F .text	0000062c _realloc_r
00013bf8 g       *ABS*	00000000 __bss_end
0000ef08 g     F .text	000000e4 alt_iic_isr_register
00001db4 g     F .text	00000018 strtol_l
0000f450 g     F .text	00000108 alt_tick
00009e9c g     F .text	0000061c .hidden __udivdi3
00009904 g     F .text	00000024 _fputwc_r
0000ff64 g     O .rodata	00000028 __mprec_bigtens
00006d88 g     F .text	00000110 __s2b
0000d4ac g     F .text	0000009c .hidden __floatunsidf
00007484 g     F .text	00000058 __mcmp
000009cc g     F .text	00000014 __fp_lock_all
0000eebc g     F .text	0000004c alt_ic_irq_enabled
0000f3b4 g     F .text	0000009c alt_alarm_stop
00001dcc g     F .text	00000018 strtol
00013ab0 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000c8 alt_irq_handler
00010bd0 g     O .rwdata	00000028 alt_dev_null
0000eb78 g     F .text	00000020 alt_dcache_flush_all
00006e98 g     F .text	00000064 __hi0bits
0000d364 g     F .text	00000080 .hidden __fixdfsi
00011e24 g       *ABS*	00000000 __ram_rwdata_end
00011e04 g     O .rwdata	00000008 alt_dev_list
0000de30 g     F .text	00000104 write
000101b8 g       *ABS*	00000000 __ram_rodata_end
0000d71c g     F .text	000000bc fstat
0000c0d4 g     F .text	000000f0 .hidden __ledf2
00007220 g     F .text	00000128 __pow5mult
000082d4 g     F .text	0000133c ___vfiprintf_internal_r
0000abdc g     F .text	0000005c .hidden __umodsi3
00013bf8 g       *ABS*	00000000 end
00011dd8 g     O .rwdata	00000004 leds
0000050c g     F .text	0000000c _atoi_r
0000e14c g     F .text	000000c0 altera_avalon_jtag_uart_init
000001c4 g     F .exceptions	00000060 alt_instruction_exception_entry
0000fb14 g       *ABS*	00000000 __CTOR_LIST__
0001f400 g       *ABS*	00000000 __alt_stack_pointer
0000d548 g     F .text	00000054 .hidden __clzsi2
0000e828 g     F .text	00000224 altera_avalon_jtag_uart_write
000009bc g     F .text	00000004 __sfp_lock_acquire
00001340 g     F .text	000000e8 memchr
00001de4 g     F .text	00002188 ___vfprintf_internal_r
00006030 g     F .text	000002fc _free_r
0000fd9f g     O .rodata	00000180 _ctype_b
00009acc g     F .text	0000000c __locale_mb_cur_max
0000f9c8 g     F .text	00000118 __call_exitprocs
00011df4 g     O .rwdata	00000004 __malloc_sbrk_base
00000224 g     F .text	0000003c _start
00013ab4 g     O .bss	00000004 _alt_tick_rate
00007348 g     F .text	0000013c __lshift
00013ab8 g     O .bss	00000004 _alt_nticks
0000dbcc g     F .text	00000108 read
0000dfa0 g     F .text	00000048 alt_sys_init
00011de0 g     O .rwdata	00000004 btns
0000f938 g     F .text	00000090 __register_exitproc
00006fe0 g     F .text	00000240 __multiply
0000e4b0 g     F .text	00000068 altera_avalon_jtag_uart_close
0000ac38 g     F .text	00000028 .hidden __mulsi3
000101b8 g       *ABS*	00000000 __ram_rwdata_start
0000fb14 g       *ABS*	00000000 __ram_rodata_start
00013ad0 g     O .bss	00000028 __malloc_current_mallinfo
000077f8 g     F .text	00000148 __d2b
0000dfe8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f714 g     F .text	000000b8 alt_get_fd
00004208 g     F .text	00000058 _close_r
0000f8ac g     F .text	0000008c memcmp
0000e0a8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013bf8 g       *ABS*	00000000 __alt_stack_base
0000e0f8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000040a8 g     F .text	00000160 __swsetup_r
0000b600 g     F .text	00000964 .hidden __divdf3
0000089c g     F .text	000000fc __sfp
00007a58 g     F .text	0000006c __copybits
0001065c g     O .rwdata	00000408 __malloc_av_
000009c8 g     F .text	00000004 __sinit_lock_release
0000c1c4 g     F .text	000007e0 .hidden __muldf3
0000199c g     F .text	00000054 __sread
00011de4 g     O .rwdata	00000004 nios_input
0000f60c g     F .text	00000108 alt_find_file
0000ebd4 g     F .text	000000a4 alt_dev_llist_insert
0000db48 g     F .text	00000024 __malloc_lock
0000dd44 g     F .text	000000b0 sbrk
00005e8c g     F .text	00000060 _fflush_r
000096e8 g     F .text	000000cc _calloc_r
00013a90 g       *ABS*	00000000 __bss_start
00001528 g     F .text	000000f0 memset
00011de8 g     O .rwdata	00000004 nios_output
00000420 g     F .text	000000e0 main
00013aac g     O .bss	00000004 alt_envp
00013a90 g     O .bss	00000004 __malloc_max_total_mem
0000e048 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009d5c g     F .text	00000014 __swbuf
00001ad4 g     F .text	00000008 __sclose
0001f400 g       *ABS*	00000000 __alt_heap_limit
00005c54 g     F .text	00000010 fclose
00001db0 g     F .text	00000004 _strtol_r
00004494 g     F .text	000016c8 _dtoa_r
00000b4c g     F .text	000007f4 _malloc_r
00009e6c g     F .text	00000030 __ascii_wctomb
00011e10 g     O .rwdata	00000004 alt_errno
000009f4 g     F .text	000000a4 _fwalk
00000518 g     F .text	00000170 _fgets_r
00009aec g     F .text	0000000c _mbtowc_r
0000aa80 g     F .text	00000080 .hidden __divsi3
00005f14 g     F .text	0000011c _malloc_trim_r
0000fb14 g       *ABS*	00000000 __CTOR_END__
00009b3c g     F .text	000000d8 strcmp
0000fb14 g       *ABS*	00000000 __flash_rodata_start
0000fb14 g       *ABS*	00000000 __DTOR_LIST__
0000bf64 g     F .text	00000080 .hidden __nedf2
0000df68 g     F .text	00000038 alt_irq_init
0000dcd4 g     F .text	00000070 alt_release_fd
00010084 g     O .rodata	00000100 .hidden __clz_tab
00013aa0 g     O .bss	00000004 _PathLocale
0000f864 g     F .text	00000014 atexit
00004044 g     F .text	00000064 _write_r
00009ad8 g     F .text	00000014 setlocale
00011df0 g     O .rwdata	00000004 _impure_ptr
00013aa4 g     O .bss	00000004 alt_argc
00005c64 g     F .text	00000228 __sflush_r
0000ecd8 g     F .text	00000060 _do_dtors
00011ddc g     O .rwdata	00000004 sw
00001778 g     F .text	000001cc __srefill_r
00000020 g       .exceptions	00000000 alt_irq_entry
00009af8 g     F .text	00000044 __ascii_mbtowc
00007698 g     F .text	0000005c __ulp
000009e0 g     F .text	00000014 __fp_unlock_all
00011dfc g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00006814 g     F .text	0000000c localeconv
00006884 g     F .text	00000098 __swhatbuf_r
0000ed58 g     F .text	00000050 alt_ic_isr_register
00011e24 g       *ABS*	00000000 _edata
00013bf8 g       *ABS*	00000000 _end
000097b4 g     F .text	00000150 __fputwc
00000224 g       *ABS*	00000000 __ram_exceptions_end
0000e518 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0000ee30 g     F .text	0000008c alt_ic_irq_disable
000019f8 g     F .text	00000080 __swrite
00011df8 g     O .rwdata	00000004 __malloc_trim_threshold
0000f878 g     F .text	00000034 exit
00000a98 g     F .text	000000b4 _fwalk_reent
000074dc g     F .text	000001bc __mdiff
0000ab00 g     F .text	00000078 .hidden __modsi3
0001f400 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
000009c0 g     F .text	00000004 __sfp_lock_release
00000500 g     F .text	0000000c atoi
0000fc9e g     O .rodata	00000101 _ctype_
0000d310 g     F .text	00000054 .hidden __unorddf2
0000fae0 g     F .text	00000034 _exit
0000ea4c g     F .text	0000012c alt_alarm_start
0000691c g     F .text	0000013c __smakebuf_r
00001adc g     F .text	00000098 strlen
0000f254 g     F .text	00000160 open
0000bfe4 g     F .text	000000f0 .hidden __gedf2
000082bc g     F .text	00000018 __sprint_r
0000ed38 g     F .text	00000020 alt_icache_flush_all
00011e18 g     O .rwdata	00000004 alt_priority_mask
0000eda8 g     F .text	00000088 alt_ic_irq_enable
00003f6c g     F .text	00000018 __vfprintf_internal
00009e60 g     F .text	0000000c _wctomb_r
0000c9a4 g     F .text	0000096c .hidden __subdf3
00006efc g     F .text	000000b0 __lo0bits
00011e1c g     O .rwdata	00000008 alt_alarm_list
0000ec78 g     F .text	00000060 _do_ctors
00009ddc g     F .text	00000084 wcrtomb
0000d5d8 g     F .text	000000dc close
00010a64 g     O .rwdata	0000016c __global_locale
0000d92c g     F .text	00000084 alt_load
00009928 g     F .text	0000007c fputwc
000009c4 g     F .text	00000004 __sinit_lock_acquire
00006c4c g     F .text	0000013c __multadd
00006c28 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408914 	ori	at,at,548
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001c40 	call	1c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001126 	beq	r2,zero,180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	00800074 	movhi	r2,1
 148:	1885883a 	add	r2,r3,r2
 14c:	10cebe17 	ldw	r3,15096(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	00800074 	movhi	r2,1
 15c:	2085883a 	add	r2,r4,r2
 160:	108ebf17 	ldw	r2,15100(r2)
 164:	1009883a 	mov	r4,r2
 168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 16c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 170:	0005313a 	rdctl	r2,ipending
 174:	e0bffb15 	stw	r2,-20(fp)
  return active;
 178:	e0bffb17 	ldw	r2,-20(fp)
 17c:	00000706 	br	19c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
 180:	e0bffe17 	ldw	r2,-8(fp)
 184:	1085883a 	add	r2,r2,r2
 188:	e0bffe15 	stw	r2,-8(fp)
      i++;
 18c:	e0bffd17 	ldw	r2,-12(fp)
 190:	10800044 	addi	r2,r2,1
 194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 198:	003fe406 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 19c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a0:	e0bfff17 	ldw	r2,-4(fp)
 1a4:	103fde1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a8:	0001883a 	nop
}
 1ac:	0001883a 	nop
 1b0:	e037883a 	mov	sp,fp
 1b4:	dfc00117 	ldw	ra,4(sp)
 1b8:	df000017 	ldw	fp,0(sp)
 1bc:	dec00204 	addi	sp,sp,8
 1c0:	f800283a 	ret

000001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c4:	defffb04 	addi	sp,sp,-20
 1c8:	dfc00415 	stw	ra,16(sp)
 1cc:	df000315 	stw	fp,12(sp)
 1d0:	df000304 	addi	fp,sp,12
 1d4:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1d8:	00bfffc4 	movi	r2,-1
 1dc:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e4:	d0a73917 	ldw	r2,-25372(gp)
 1e8:	10000726 	beq	r2,zero,208 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1ec:	d0a73917 	ldw	r2,-25372(gp)
 1f0:	e0ffff17 	ldw	r3,-4(fp)
 1f4:	e1bffe17 	ldw	r6,-8(fp)
 1f8:	e17ffd17 	ldw	r5,-12(fp)
 1fc:	1809883a 	mov	r4,r3
 200:	103ee83a 	callr	r2
 204:	00000206 	br	210 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 208:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 20c:	0005883a 	mov	r2,zero
}
 210:	e037883a 	mov	sp,fp
 214:	dfc00117 	ldw	ra,4(sp)
 218:	df000017 	ldw	fp,0(sp)
 21c:	dec00204 	addi	sp,sp,8
 220:	f800283a 	ret

Disassembly of section .text:

00000224 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     224:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     228:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
     22c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     230:	d6a77614 	ori	gp,gp,40408
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     234:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     238:	108ea414 	ori	r2,r2,14992

    movhi r3, %hi(__bss_end)
     23c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     240:	18cefe14 	ori	r3,r3,15352

    beq r2, r3, 1f
     244:	10c00326 	beq	r2,r3,254 <_start+0x30>

0:
    stw zero, (r2)
     248:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     24c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     250:	10fffd36 	bltu	r2,r3,248 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     254:	000d92c0 	call	d92c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     258:	000dacc0 	call	dacc <alt_main>

0000025c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     25c:	003fff06 	br	25c <alt_after_alt_main>

00000260 <resolveToFlower>:
//General 32 bit input @ 0x21010
uint *nios_input = (uint*)0x21010;
//General 32 bit output @ 0x21000
uint *nios_output = (uint*)0x21000;

char* resolveToFlower(uint flower) {
     260:	defffe04 	addi	sp,sp,-8
     264:	df000115 	stw	fp,4(sp)
     268:	df000104 	addi	fp,sp,4
     26c:	e13fff15 	stw	r4,-4(fp)
	static char flowers[][16] = { "Iris-setosa", "Iris-versicolor", "Iris-virginica", "uh oh" };
	return flower > 2 ? flowers[3] : flowers[flower];
     270:	e0bfff17 	ldw	r2,-4(fp)
     274:	108000e8 	cmpgeui	r2,r2,3
     278:	1000061e 	bne	r2,zero,294 <resolveToFlower+0x34>
     27c:	e0bfff17 	ldw	r2,-4(fp)
     280:	1006913a 	slli	r3,r2,4
     284:	00800074 	movhi	r2,1
     288:	10806e04 	addi	r2,r2,440
     28c:	1885883a 	add	r2,r3,r2
     290:	00000206 	br	29c <resolveToFlower+0x3c>
     294:	00800074 	movhi	r2,1
     298:	10807a04 	addi	r2,r2,488
}
     29c:	e037883a 	mov	sp,fp
     2a0:	df000017 	ldw	fp,0(sp)
     2a4:	dec00104 	addi	sp,sp,4
     2a8:	f800283a 	ret

000002ac <printClassificationResult>:

void printClassificationResult() {
     2ac:	defffb04 	addi	sp,sp,-20
     2b0:	dfc00415 	stw	ra,16(sp)
     2b4:	df000315 	stw	fp,12(sp)
     2b8:	dc000215 	stw	r16,8(sp)
     2bc:	df000304 	addi	fp,sp,12
	uint actual = 0xFF & *nios_input;
     2c0:	d0a00317 	ldw	r2,-32756(gp)
     2c4:	10800017 	ldw	r2,0(r2)
     2c8:	10803fcc 	andi	r2,r2,255
     2cc:	e0bffe15 	stw	r2,-8(fp)
    uint classified = 0xFF & (*nios_input >> 8);
     2d0:	d0a00317 	ldw	r2,-32756(gp)
     2d4:	10800017 	ldw	r2,0(r2)
     2d8:	1004d23a 	srli	r2,r2,8
     2dc:	10803fcc 	andi	r2,r2,255
     2e0:	e0bffd15 	stw	r2,-12(fp)

	if (actual == classified) {
     2e4:	e0fffe17 	ldw	r3,-8(fp)
     2e8:	e0bffd17 	ldw	r2,-12(fp)
     2ec:	1880041e 	bne	r3,r2,300 <printClassificationResult+0x54>
		printf("Classification correct!\n");
     2f0:	01000074 	movhi	r4,1
     2f4:	213ec504 	addi	r4,r4,-1260
     2f8:	000174c0 	call	174c <puts>
     2fc:	00000306 	br	30c <printClassificationResult+0x60>
	} else {
		printf("Classification wrong. :(\n");
     300:	01000074 	movhi	r4,1
     304:	213ecb04 	addi	r4,r4,-1236
     308:	000174c0 	call	174c <puts>
	}

	printf("Actual: %s\nClassified as: %s\n\n", resolveToFlower(actual), resolveToFlower(classified));
     30c:	e13ffe17 	ldw	r4,-8(fp)
     310:	00002600 	call	260 <resolveToFlower>
     314:	1021883a 	mov	r16,r2
     318:	e13ffd17 	ldw	r4,-12(fp)
     31c:	00002600 	call	260 <resolveToFlower>
     320:	100d883a 	mov	r6,r2
     324:	800b883a 	mov	r5,r16
     328:	01000074 	movhi	r4,1
     32c:	213ed204 	addi	r4,r4,-1208
     330:	00016480 	call	1648 <printf>
}
     334:	0001883a 	nop
     338:	e6ffff04 	addi	sp,fp,-4
     33c:	dfc00217 	ldw	ra,8(sp)
     340:	df000117 	ldw	fp,4(sp)
     344:	dc000017 	ldw	r16,0(sp)
     348:	dec00304 	addi	sp,sp,12
     34c:	f800283a 	ret

00000350 <getAttributesFromUser>:

int* getAttributesFromUser() {
     350:	defffc04 	addi	sp,sp,-16
     354:	dfc00315 	stw	ra,12(sp)
     358:	df000215 	stw	fp,8(sp)
     35c:	df000204 	addi	fp,sp,8
    static char strs[][16] = { "Sepal length", "Sepal width", "Petal length", "Petal width" };
    static int attributes[4];

    printf("An Iris flower can be described using 4 attributes: sepal length and width, and petal length and width.\nPlease enter the 4 attributes in millimeters between 0 and 255.\n\n");
     360:	01000074 	movhi	r4,1
     364:	213eda04 	addi	r4,r4,-1176
     368:	000174c0 	call	174c <puts>

    for (int i = 0; i < 4; i++) {
     36c:	e03fff15 	stw	zero,-4(fp)
     370:	00002106 	br	3f8 <getAttributesFromUser+0xa8>
        printf("%s: ", strs[i]);
     374:	e0bfff17 	ldw	r2,-4(fp)
     378:	1006913a 	slli	r3,r2,4
     37c:	00800074 	movhi	r2,1
     380:	10807e04 	addi	r2,r2,504
     384:	1885883a 	add	r2,r3,r2
     388:	100b883a 	mov	r5,r2
     38c:	01000074 	movhi	r4,1
     390:	213f0504 	addi	r4,r4,-1004
     394:	00016480 	call	1648 <printf>

        char buf[4];
        fgets(buf, 4, stdin);
     398:	d0a00617 	ldw	r2,-32744(gp)
     39c:	10c00117 	ldw	r3,4(r2)
     3a0:	e0bffe04 	addi	r2,fp,-8
     3a4:	180d883a 	mov	r6,r3
     3a8:	01400104 	movi	r5,4
     3ac:	1009883a 	mov	r4,r2
     3b0:	00006880 	call	688 <fgets>
        printf("You entered: %s\n", buf);
     3b4:	e0bffe04 	addi	r2,fp,-8
     3b8:	100b883a 	mov	r5,r2
     3bc:	01000074 	movhi	r4,1
     3c0:	213f0704 	addi	r4,r4,-996
     3c4:	00016480 	call	1648 <printf>
        attributes[i] = atoi(buf);
     3c8:	e0bffe04 	addi	r2,fp,-8
     3cc:	1009883a 	mov	r4,r2
     3d0:	00005000 	call	500 <atoi>
     3d4:	1009883a 	mov	r4,r2
     3d8:	e0bfff17 	ldw	r2,-4(fp)
     3dc:	100690ba 	slli	r3,r2,2
     3e0:	00800074 	movhi	r2,1
     3e4:	1885883a 	add	r2,r3,r2
     3e8:	110eb015 	stw	r4,15040(r2)
    for (int i = 0; i < 4; i++) {
     3ec:	e0bfff17 	ldw	r2,-4(fp)
     3f0:	10800044 	addi	r2,r2,1
     3f4:	e0bfff15 	stw	r2,-4(fp)
     3f8:	e0bfff17 	ldw	r2,-4(fp)
     3fc:	10800110 	cmplti	r2,r2,4
     400:	103fdc1e 	bne	r2,zero,374 <getAttributesFromUser+0x24>
    }

    return attributes;
     404:	00800074 	movhi	r2,1
     408:	108eb004 	addi	r2,r2,15040
}
     40c:	e037883a 	mov	sp,fp
     410:	dfc00117 	ldw	ra,4(sp)
     414:	df000017 	ldw	fp,0(sp)
     418:	dec00204 	addi	sp,sp,8
     41c:	f800283a 	ret

00000420 <main>:

int main()
{
     420:	defffb04 	addi	sp,sp,-20
     424:	dfc00415 	stw	ra,16(sp)
     428:	df000315 	stw	fp,12(sp)
     42c:	df000304 	addi	fp,sp,12
	int *a = getAttributesFromUser();
     430:	00003500 	call	350 <getAttributesFromUser>
     434:	e0bffd15 	stw	r2,-12(fp)

	for (int i = 0; i < 4; i++) {
     438:	e03fff15 	stw	zero,-4(fp)
     43c:	00001106 	br	484 <main+0x64>
		*(nios_output + i) = (char)*(a + i);
     440:	e0bfff17 	ldw	r2,-4(fp)
     444:	100490ba 	slli	r2,r2,2
     448:	e0fffd17 	ldw	r3,-12(fp)
     44c:	1885883a 	add	r2,r3,r2
     450:	10800017 	ldw	r2,0(r2)
     454:	1009883a 	mov	r4,r2
     458:	d0e00417 	ldw	r3,-32752(gp)
     45c:	e0bfff17 	ldw	r2,-4(fp)
     460:	100490ba 	slli	r2,r2,2
     464:	1885883a 	add	r2,r3,r2
     468:	20c03fcc 	andi	r3,r4,255
     46c:	18c0201c 	xori	r3,r3,128
     470:	18ffe004 	addi	r3,r3,-128
     474:	10c00015 	stw	r3,0(r2)
	for (int i = 0; i < 4; i++) {
     478:	e0bfff17 	ldw	r2,-4(fp)
     47c:	10800044 	addi	r2,r2,1
     480:	e0bfff15 	stw	r2,-4(fp)
     484:	e0bfff17 	ldw	r2,-4(fp)
     488:	10800110 	cmplti	r2,r2,4
     48c:	103fec1e 	bne	r2,zero,440 <main+0x20>
	}

	for (int i = 0; i < 4; i++) {
     490:	e03ffe15 	stw	zero,-8(fp)
     494:	00001106 	br	4dc <main+0xbc>
		printf("%u: %c\n", nios_output + i, *(nios_output + i));
     498:	d0e00417 	ldw	r3,-32752(gp)
     49c:	e0bffe17 	ldw	r2,-8(fp)
     4a0:	100490ba 	slli	r2,r2,2
     4a4:	1889883a 	add	r4,r3,r2
     4a8:	d0e00417 	ldw	r3,-32752(gp)
     4ac:	e0bffe17 	ldw	r2,-8(fp)
     4b0:	100490ba 	slli	r2,r2,2
     4b4:	1885883a 	add	r2,r3,r2
     4b8:	10800017 	ldw	r2,0(r2)
     4bc:	100d883a 	mov	r6,r2
     4c0:	200b883a 	mov	r5,r4
     4c4:	01000074 	movhi	r4,1
     4c8:	213f0c04 	addi	r4,r4,-976
     4cc:	00016480 	call	1648 <printf>
	for (int i = 0; i < 4; i++) {
     4d0:	e0bffe17 	ldw	r2,-8(fp)
     4d4:	10800044 	addi	r2,r2,1
     4d8:	e0bffe15 	stw	r2,-8(fp)
     4dc:	e0bffe17 	ldw	r2,-8(fp)
     4e0:	10800110 	cmplti	r2,r2,4
     4e4:	103fec1e 	bne	r2,zero,498 <main+0x78>
	}

	return 0;
     4e8:	0005883a 	mov	r2,zero
}
     4ec:	e037883a 	mov	sp,fp
     4f0:	dfc00117 	ldw	ra,4(sp)
     4f4:	df000017 	ldw	fp,0(sp)
     4f8:	dec00204 	addi	sp,sp,8
     4fc:	f800283a 	ret

00000500 <atoi>:
     500:	01800284 	movi	r6,10
     504:	000b883a 	mov	r5,zero
     508:	0001dcc1 	jmpi	1dcc <strtol>

0000050c <_atoi_r>:
     50c:	01c00284 	movi	r7,10
     510:	000d883a 	mov	r6,zero
     514:	0001db01 	jmpi	1db0 <_strtol_r>

00000518 <_fgets_r>:
     518:	30c00088 	cmpgei	r3,r6,2
     51c:	18005826 	beq	r3,zero,680 <_fgets_r+0x168>
     520:	defff804 	addi	sp,sp,-32
     524:	dd800615 	stw	r22,24(sp)
     528:	dd400515 	stw	r21,20(sp)
     52c:	dc800215 	stw	r18,8(sp)
     530:	dc400115 	stw	r17,4(sp)
     534:	dfc00715 	stw	ra,28(sp)
     538:	dd000415 	stw	r20,16(sp)
     53c:	dcc00315 	stw	r19,12(sp)
     540:	dc000015 	stw	r16,0(sp)
     544:	202d883a 	mov	r22,r4
     548:	3825883a 	mov	r18,r7
     54c:	282b883a 	mov	r21,r5
     550:	3023883a 	mov	r17,r6
     554:	20000226 	beq	r4,zero,560 <_fgets_r+0x48>
     558:	20800e17 	ldw	r2,56(r4)
     55c:	10003726 	beq	r2,zero,63c <_fgets_r+0x124>
     560:	94000117 	ldw	r16,4(r18)
     564:	8c7fffc4 	addi	r17,r17,-1
     568:	a829883a 	mov	r20,r21
     56c:	80001126 	beq	r16,zero,5b4 <_fgets_r+0x9c>
     570:	94c00017 	ldw	r19,0(r18)
     574:	8c001636 	bltu	r17,r16,5d0 <_fgets_r+0xb8>
     578:	800d883a 	mov	r6,r16
     57c:	01400284 	movi	r5,10
     580:	9809883a 	mov	r4,r19
     584:	00013400 	call	1340 <memchr>
     588:	1000161e 	bne	r2,zero,5e4 <_fgets_r+0xcc>
     58c:	9c05883a 	add	r2,r19,r16
     590:	a009883a 	mov	r4,r20
     594:	90000115 	stw	zero,4(r18)
     598:	90800015 	stw	r2,0(r18)
     59c:	800d883a 	mov	r6,r16
     5a0:	980b883a 	mov	r5,r19
     5a4:	8c23c83a 	sub	r17,r17,r16
     5a8:	00014280 	call	1428 <memcpy>
     5ac:	a429883a 	add	r20,r20,r16
     5b0:	88002d26 	beq	r17,zero,668 <_fgets_r+0x150>
     5b4:	900b883a 	mov	r5,r18
     5b8:	b009883a 	mov	r4,r22
     5bc:	00017780 	call	1778 <__srefill_r>
     5c0:	10002c1e 	bne	r2,zero,674 <_fgets_r+0x15c>
     5c4:	94000117 	ldw	r16,4(r18)
     5c8:	94c00017 	ldw	r19,0(r18)
     5cc:	8c3fea2e 	bgeu	r17,r16,578 <_fgets_r+0x60>
     5d0:	880d883a 	mov	r6,r17
     5d4:	01400284 	movi	r5,10
     5d8:	9809883a 	mov	r4,r19
     5dc:	00013400 	call	1340 <memchr>
     5e0:	10001826 	beq	r2,zero,644 <_fgets_r+0x12c>
     5e4:	10800044 	addi	r2,r2,1
     5e8:	14e3c83a 	sub	r17,r2,r19
     5ec:	8461c83a 	sub	r16,r16,r17
     5f0:	a009883a 	mov	r4,r20
     5f4:	94000115 	stw	r16,4(r18)
     5f8:	90800015 	stw	r2,0(r18)
     5fc:	880d883a 	mov	r6,r17
     600:	980b883a 	mov	r5,r19
     604:	00014280 	call	1428 <memcpy>
     608:	a469883a 	add	r20,r20,r17
     60c:	a0000005 	stb	zero,0(r20)
     610:	a805883a 	mov	r2,r21
     614:	dfc00717 	ldw	ra,28(sp)
     618:	dd800617 	ldw	r22,24(sp)
     61c:	dd400517 	ldw	r21,20(sp)
     620:	dd000417 	ldw	r20,16(sp)
     624:	dcc00317 	ldw	r19,12(sp)
     628:	dc800217 	ldw	r18,8(sp)
     62c:	dc400117 	ldw	r17,4(sp)
     630:	dc000017 	ldw	r16,0(sp)
     634:	dec00804 	addi	sp,sp,32
     638:	f800283a 	ret
     63c:	00009ac0 	call	9ac <__sinit>
     640:	003fc706 	br	560 <_fgets_r+0x48>
     644:	9c45883a 	add	r2,r19,r17
     648:	8461c83a 	sub	r16,r16,r17
     64c:	a009883a 	mov	r4,r20
     650:	94000115 	stw	r16,4(r18)
     654:	90800015 	stw	r2,0(r18)
     658:	880d883a 	mov	r6,r17
     65c:	980b883a 	mov	r5,r19
     660:	00014280 	call	1428 <memcpy>
     664:	a469883a 	add	r20,r20,r17
     668:	a0000005 	stb	zero,0(r20)
     66c:	a805883a 	mov	r2,r21
     670:	003fe806 	br	614 <_fgets_r+0xfc>
     674:	a57ffc1e 	bne	r20,r21,668 <_fgets_r+0x150>
     678:	0005883a 	mov	r2,zero
     67c:	003fe506 	br	614 <_fgets_r+0xfc>
     680:	0005883a 	mov	r2,zero
     684:	f800283a 	ret

00000688 <fgets>:
     688:	00800074 	movhi	r2,1
     68c:	300f883a 	mov	r7,r6
     690:	280d883a 	mov	r6,r5
     694:	200b883a 	mov	r5,r4
     698:	11077c17 	ldw	r4,7664(r2)
     69c:	00005181 	jmpi	518 <_fgets_r>

000006a0 <__fp_lock>:
     6a0:	0005883a 	mov	r2,zero
     6a4:	f800283a 	ret

000006a8 <_cleanup_r>:
     6a8:	01400034 	movhi	r5,0
     6ac:	2956d704 	addi	r5,r5,23388
     6b0:	0000a981 	jmpi	a98 <_fwalk_reent>

000006b4 <__sinit.part.0>:
     6b4:	00c00034 	movhi	r3,0
     6b8:	20800117 	ldw	r2,4(r4)
     6bc:	18c1aa04 	addi	r3,r3,1704
     6c0:	20c00f15 	stw	r3,60(r4)
     6c4:	2140bb04 	addi	r5,r4,748
     6c8:	00c000c4 	movi	r3,3
     6cc:	20c0b915 	stw	r3,740(r4)
     6d0:	2140ba15 	stw	r5,744(r4)
     6d4:	2000b815 	stw	zero,736(r4)
     6d8:	10001705 	stb	zero,92(r2)
     6dc:	10001745 	stb	zero,93(r2)
     6e0:	10001785 	stb	zero,94(r2)
     6e4:	100017c5 	stb	zero,95(r2)
     6e8:	10001805 	stb	zero,96(r2)
     6ec:	10001845 	stb	zero,97(r2)
     6f0:	10001885 	stb	zero,98(r2)
     6f4:	100018c5 	stb	zero,99(r2)
     6f8:	00c00104 	movi	r3,4
     6fc:	10c00315 	stw	r3,12(r2)
     700:	02000034 	movhi	r8,0
     704:	20c00217 	ldw	r3,8(r4)
     708:	01c00034 	movhi	r7,0
     70c:	01800034 	movhi	r6,0
     710:	01400034 	movhi	r5,0
     714:	42066704 	addi	r8,r8,6556
     718:	39c67e04 	addi	r7,r7,6648
     71c:	31869e04 	addi	r6,r6,6776
     720:	2946b504 	addi	r5,r5,6868
     724:	02400074 	movhi	r9,1
     728:	10001915 	stw	zero,100(r2)
     72c:	10000015 	stw	zero,0(r2)
     730:	10000115 	stw	zero,4(r2)
     734:	10000215 	stw	zero,8(r2)
     738:	10000415 	stw	zero,16(r2)
     73c:	10000515 	stw	zero,20(r2)
     740:	10000615 	stw	zero,24(r2)
     744:	10800715 	stw	r2,28(r2)
     748:	12000815 	stw	r8,32(r2)
     74c:	11c00915 	stw	r7,36(r2)
     750:	11800a15 	stw	r6,40(r2)
     754:	11400b15 	stw	r5,44(r2)
     758:	4a400284 	addi	r9,r9,10
     75c:	1a400315 	stw	r9,12(r3)
     760:	18001915 	stw	zero,100(r3)
     764:	18000015 	stw	zero,0(r3)
     768:	18000115 	stw	zero,4(r3)
     76c:	18000215 	stw	zero,8(r3)
     770:	18000415 	stw	zero,16(r3)
     774:	18001705 	stb	zero,92(r3)
     778:	18001745 	stb	zero,93(r3)
     77c:	18001785 	stb	zero,94(r3)
     780:	180017c5 	stb	zero,95(r3)
     784:	18001805 	stb	zero,96(r3)
     788:	18001845 	stb	zero,97(r3)
     78c:	18001885 	stb	zero,98(r3)
     790:	180018c5 	stb	zero,99(r3)
     794:	20800317 	ldw	r2,12(r4)
     798:	024000b4 	movhi	r9,2
     79c:	18000515 	stw	zero,20(r3)
     7a0:	18000615 	stw	zero,24(r3)
     7a4:	18c00715 	stw	r3,28(r3)
     7a8:	1a000815 	stw	r8,32(r3)
     7ac:	19c00915 	stw	r7,36(r3)
     7b0:	19800a15 	stw	r6,40(r3)
     7b4:	19400b15 	stw	r5,44(r3)
     7b8:	4a400484 	addi	r9,r9,18
     7bc:	10001915 	stw	zero,100(r2)
     7c0:	10000015 	stw	zero,0(r2)
     7c4:	10000115 	stw	zero,4(r2)
     7c8:	10000215 	stw	zero,8(r2)
     7cc:	12400315 	stw	r9,12(r2)
     7d0:	10000415 	stw	zero,16(r2)
     7d4:	10000515 	stw	zero,20(r2)
     7d8:	10000615 	stw	zero,24(r2)
     7dc:	10001705 	stb	zero,92(r2)
     7e0:	10001745 	stb	zero,93(r2)
     7e4:	10001785 	stb	zero,94(r2)
     7e8:	100017c5 	stb	zero,95(r2)
     7ec:	10001805 	stb	zero,96(r2)
     7f0:	10001845 	stb	zero,97(r2)
     7f4:	10001885 	stb	zero,98(r2)
     7f8:	100018c5 	stb	zero,99(r2)
     7fc:	10800715 	stw	r2,28(r2)
     800:	12000815 	stw	r8,32(r2)
     804:	11c00915 	stw	r7,36(r2)
     808:	11800a15 	stw	r6,40(r2)
     80c:	11400b15 	stw	r5,44(r2)
     810:	00800044 	movi	r2,1
     814:	20800e15 	stw	r2,56(r4)
     818:	f800283a 	ret

0000081c <__fp_unlock>:
     81c:	0005883a 	mov	r2,zero
     820:	f800283a 	ret

00000824 <__sfmoreglue>:
     824:	defffc04 	addi	sp,sp,-16
     828:	dc800215 	stw	r18,8(sp)
     82c:	2825883a 	mov	r18,r5
     830:	dc000015 	stw	r16,0(sp)
     834:	01401a04 	movi	r5,104
     838:	2021883a 	mov	r16,r4
     83c:	913fffc4 	addi	r4,r18,-1
     840:	dfc00315 	stw	ra,12(sp)
     844:	dc400115 	stw	r17,4(sp)
     848:	000ac380 	call	ac38 <__mulsi3>
     84c:	8009883a 	mov	r4,r16
     850:	11401d04 	addi	r5,r2,116
     854:	1023883a 	mov	r17,r2
     858:	0000b4c0 	call	b4c <_malloc_r>
     85c:	1021883a 	mov	r16,r2
     860:	10000726 	beq	r2,zero,880 <__sfmoreglue+0x5c>
     864:	11000304 	addi	r4,r2,12
     868:	10000015 	stw	zero,0(r2)
     86c:	14800115 	stw	r18,4(r2)
     870:	11000215 	stw	r4,8(r2)
     874:	89801a04 	addi	r6,r17,104
     878:	000b883a 	mov	r5,zero
     87c:	00015280 	call	1528 <memset>
     880:	8005883a 	mov	r2,r16
     884:	dfc00317 	ldw	ra,12(sp)
     888:	dc800217 	ldw	r18,8(sp)
     88c:	dc400117 	ldw	r17,4(sp)
     890:	dc000017 	ldw	r16,0(sp)
     894:	dec00404 	addi	sp,sp,16
     898:	f800283a 	ret

0000089c <__sfp>:
     89c:	defffd04 	addi	sp,sp,-12
     8a0:	00800074 	movhi	r2,1
     8a4:	dc000015 	stw	r16,0(sp)
     8a8:	14077b17 	ldw	r16,7660(r2)
     8ac:	dc400115 	stw	r17,4(sp)
     8b0:	dfc00215 	stw	ra,8(sp)
     8b4:	80800e17 	ldw	r2,56(r16)
     8b8:	2023883a 	mov	r17,r4
     8bc:	10002b26 	beq	r2,zero,96c <__sfp+0xd0>
     8c0:	8400b804 	addi	r16,r16,736
     8c4:	80c00117 	ldw	r3,4(r16)
     8c8:	80800217 	ldw	r2,8(r16)
     8cc:	18ffffc4 	addi	r3,r3,-1
     8d0:	1800050e 	bge	r3,zero,8e8 <__sfp+0x4c>
     8d4:	00002106 	br	95c <__sfp+0xc0>
     8d8:	18ffffc4 	addi	r3,r3,-1
     8dc:	193fffd8 	cmpnei	r4,r3,-1
     8e0:	10801a04 	addi	r2,r2,104
     8e4:	20001d26 	beq	r4,zero,95c <__sfp+0xc0>
     8e8:	1100030f 	ldh	r4,12(r2)
     8ec:	203ffa1e 	bne	r4,zero,8d8 <__sfp+0x3c>
     8f0:	00fffff4 	movhi	r3,65535
     8f4:	18c00044 	addi	r3,r3,1
     8f8:	10001915 	stw	zero,100(r2)
     8fc:	10000015 	stw	zero,0(r2)
     900:	10000115 	stw	zero,4(r2)
     904:	10000215 	stw	zero,8(r2)
     908:	10c00315 	stw	r3,12(r2)
     90c:	10000415 	stw	zero,16(r2)
     910:	10000515 	stw	zero,20(r2)
     914:	10000615 	stw	zero,24(r2)
     918:	10001705 	stb	zero,92(r2)
     91c:	10001745 	stb	zero,93(r2)
     920:	10001785 	stb	zero,94(r2)
     924:	100017c5 	stb	zero,95(r2)
     928:	10001805 	stb	zero,96(r2)
     92c:	10001845 	stb	zero,97(r2)
     930:	10001885 	stb	zero,98(r2)
     934:	100018c5 	stb	zero,99(r2)
     938:	10000c15 	stw	zero,48(r2)
     93c:	10000d15 	stw	zero,52(r2)
     940:	10001115 	stw	zero,68(r2)
     944:	10001215 	stw	zero,72(r2)
     948:	dfc00217 	ldw	ra,8(sp)
     94c:	dc400117 	ldw	r17,4(sp)
     950:	dc000017 	ldw	r16,0(sp)
     954:	dec00304 	addi	sp,sp,12
     958:	f800283a 	ret
     95c:	80800017 	ldw	r2,0(r16)
     960:	10000526 	beq	r2,zero,978 <__sfp+0xdc>
     964:	1021883a 	mov	r16,r2
     968:	003fd606 	br	8c4 <__sfp+0x28>
     96c:	8009883a 	mov	r4,r16
     970:	00006b40 	call	6b4 <__sinit.part.0>
     974:	003fd206 	br	8c0 <__sfp+0x24>
     978:	01400104 	movi	r5,4
     97c:	8809883a 	mov	r4,r17
     980:	00008240 	call	824 <__sfmoreglue>
     984:	80800015 	stw	r2,0(r16)
     988:	103ff61e 	bne	r2,zero,964 <__sfp+0xc8>
     98c:	00c00304 	movi	r3,12
     990:	88c00015 	stw	r3,0(r17)
     994:	003fec06 	br	948 <__sfp+0xac>

00000998 <_cleanup>:
     998:	00800074 	movhi	r2,1
     99c:	11077b17 	ldw	r4,7660(r2)
     9a0:	01400034 	movhi	r5,0
     9a4:	2956d704 	addi	r5,r5,23388
     9a8:	0000a981 	jmpi	a98 <_fwalk_reent>

000009ac <__sinit>:
     9ac:	20800e17 	ldw	r2,56(r4)
     9b0:	10000126 	beq	r2,zero,9b8 <__sinit+0xc>
     9b4:	f800283a 	ret
     9b8:	00006b41 	jmpi	6b4 <__sinit.part.0>

000009bc <__sfp_lock_acquire>:
     9bc:	f800283a 	ret

000009c0 <__sfp_lock_release>:
     9c0:	f800283a 	ret

000009c4 <__sinit_lock_acquire>:
     9c4:	f800283a 	ret

000009c8 <__sinit_lock_release>:
     9c8:	f800283a 	ret

000009cc <__fp_lock_all>:
     9cc:	00800074 	movhi	r2,1
     9d0:	11077c17 	ldw	r4,7664(r2)
     9d4:	01400034 	movhi	r5,0
     9d8:	2941a804 	addi	r5,r5,1696
     9dc:	00009f41 	jmpi	9f4 <_fwalk>

000009e0 <__fp_unlock_all>:
     9e0:	00800074 	movhi	r2,1
     9e4:	11077c17 	ldw	r4,7664(r2)
     9e8:	01400034 	movhi	r5,0
     9ec:	29420704 	addi	r5,r5,2076
     9f0:	00009f41 	jmpi	9f4 <_fwalk>

000009f4 <_fwalk>:
     9f4:	defffa04 	addi	sp,sp,-24
     9f8:	dc800215 	stw	r18,8(sp)
     9fc:	dfc00515 	stw	ra,20(sp)
     a00:	dd000415 	stw	r20,16(sp)
     a04:	dcc00315 	stw	r19,12(sp)
     a08:	dc400115 	stw	r17,4(sp)
     a0c:	dc000015 	stw	r16,0(sp)
     a10:	2480b804 	addi	r18,r4,736
     a14:	90001e26 	beq	r18,zero,a90 <_fwalk+0x9c>
     a18:	2827883a 	mov	r19,r5
     a1c:	0029883a 	mov	r20,zero
     a20:	94400117 	ldw	r17,4(r18)
     a24:	94000217 	ldw	r16,8(r18)
     a28:	8c7fffc4 	addi	r17,r17,-1
     a2c:	88000d16 	blt	r17,zero,a64 <_fwalk+0x70>
     a30:	8080030b 	ldhu	r2,12(r16)
     a34:	8c7fffc4 	addi	r17,r17,-1
     a38:	108000b0 	cmpltui	r2,r2,2
     a3c:	1000061e 	bne	r2,zero,a58 <_fwalk+0x64>
     a40:	8080038f 	ldh	r2,14(r16)
     a44:	8009883a 	mov	r4,r16
     a48:	10bfffe0 	cmpeqi	r2,r2,-1
     a4c:	1000021e 	bne	r2,zero,a58 <_fwalk+0x64>
     a50:	983ee83a 	callr	r19
     a54:	a0a8b03a 	or	r20,r20,r2
     a58:	88bfffd8 	cmpnei	r2,r17,-1
     a5c:	84001a04 	addi	r16,r16,104
     a60:	103ff31e 	bne	r2,zero,a30 <_fwalk+0x3c>
     a64:	94800017 	ldw	r18,0(r18)
     a68:	903fed1e 	bne	r18,zero,a20 <_fwalk+0x2c>
     a6c:	a005883a 	mov	r2,r20
     a70:	dfc00517 	ldw	ra,20(sp)
     a74:	dd000417 	ldw	r20,16(sp)
     a78:	dcc00317 	ldw	r19,12(sp)
     a7c:	dc800217 	ldw	r18,8(sp)
     a80:	dc400117 	ldw	r17,4(sp)
     a84:	dc000017 	ldw	r16,0(sp)
     a88:	dec00604 	addi	sp,sp,24
     a8c:	f800283a 	ret
     a90:	0029883a 	mov	r20,zero
     a94:	003ff506 	br	a6c <_fwalk+0x78>

00000a98 <_fwalk_reent>:
     a98:	defff904 	addi	sp,sp,-28
     a9c:	dc800215 	stw	r18,8(sp)
     aa0:	dfc00615 	stw	ra,24(sp)
     aa4:	dd400515 	stw	r21,20(sp)
     aa8:	dd000415 	stw	r20,16(sp)
     aac:	dcc00315 	stw	r19,12(sp)
     ab0:	dc400115 	stw	r17,4(sp)
     ab4:	dc000015 	stw	r16,0(sp)
     ab8:	2480b804 	addi	r18,r4,736
     abc:	90002126 	beq	r18,zero,b44 <_fwalk_reent+0xac>
     ac0:	2829883a 	mov	r20,r5
     ac4:	2027883a 	mov	r19,r4
     ac8:	002b883a 	mov	r21,zero
     acc:	94400117 	ldw	r17,4(r18)
     ad0:	94000217 	ldw	r16,8(r18)
     ad4:	8c7fffc4 	addi	r17,r17,-1
     ad8:	88000e16 	blt	r17,zero,b14 <_fwalk_reent+0x7c>
     adc:	8080030b 	ldhu	r2,12(r16)
     ae0:	8c7fffc4 	addi	r17,r17,-1
     ae4:	108000b0 	cmpltui	r2,r2,2
     ae8:	1000071e 	bne	r2,zero,b08 <_fwalk_reent+0x70>
     aec:	8080038f 	ldh	r2,14(r16)
     af0:	800b883a 	mov	r5,r16
     af4:	9809883a 	mov	r4,r19
     af8:	10bfffe0 	cmpeqi	r2,r2,-1
     afc:	1000021e 	bne	r2,zero,b08 <_fwalk_reent+0x70>
     b00:	a03ee83a 	callr	r20
     b04:	a8aab03a 	or	r21,r21,r2
     b08:	88bfffd8 	cmpnei	r2,r17,-1
     b0c:	84001a04 	addi	r16,r16,104
     b10:	103ff21e 	bne	r2,zero,adc <_fwalk_reent+0x44>
     b14:	94800017 	ldw	r18,0(r18)
     b18:	903fec1e 	bne	r18,zero,acc <_fwalk_reent+0x34>
     b1c:	a805883a 	mov	r2,r21
     b20:	dfc00617 	ldw	ra,24(sp)
     b24:	dd400517 	ldw	r21,20(sp)
     b28:	dd000417 	ldw	r20,16(sp)
     b2c:	dcc00317 	ldw	r19,12(sp)
     b30:	dc800217 	ldw	r18,8(sp)
     b34:	dc400117 	ldw	r17,4(sp)
     b38:	dc000017 	ldw	r16,0(sp)
     b3c:	dec00704 	addi	sp,sp,28
     b40:	f800283a 	ret
     b44:	002b883a 	mov	r21,zero
     b48:	003ff406 	br	b1c <_fwalk_reent+0x84>

00000b4c <_malloc_r>:
     b4c:	defff604 	addi	sp,sp,-40
     b50:	dc400115 	stw	r17,4(sp)
     b54:	2c4002c4 	addi	r17,r5,11
     b58:	dc800215 	stw	r18,8(sp)
     b5c:	dfc00915 	stw	ra,36(sp)
     b60:	df000815 	stw	fp,32(sp)
     b64:	ddc00715 	stw	r23,28(sp)
     b68:	dd800615 	stw	r22,24(sp)
     b6c:	dd400515 	stw	r21,20(sp)
     b70:	dd000415 	stw	r20,16(sp)
     b74:	dcc00315 	stw	r19,12(sp)
     b78:	dc000015 	stw	r16,0(sp)
     b7c:	888005e8 	cmpgeui	r2,r17,23
     b80:	2025883a 	mov	r18,r4
     b84:	10001b1e 	bne	r2,zero,bf4 <_malloc_r+0xa8>
     b88:	29400468 	cmpgeui	r5,r5,17
     b8c:	2800951e 	bne	r5,zero,de4 <_malloc_r+0x298>
     b90:	000db480 	call	db48 <__malloc_lock>
     b94:	04400404 	movi	r17,16
     b98:	00800604 	movi	r2,24
     b9c:	01800084 	movi	r6,2
     ba0:	04c00074 	movhi	r19,1
     ba4:	9cc19704 	addi	r19,r19,1628
     ba8:	9885883a 	add	r2,r19,r2
     bac:	14000117 	ldw	r16,4(r2)
     bb0:	10fffe04 	addi	r3,r2,-8
     bb4:	80c09e26 	beq	r16,r3,e30 <_malloc_r+0x2e4>
     bb8:	80800117 	ldw	r2,4(r16)
     bbc:	81000317 	ldw	r4,12(r16)
     bc0:	00ffff04 	movi	r3,-4
     bc4:	10c4703a 	and	r2,r2,r3
     bc8:	81400217 	ldw	r5,8(r16)
     bcc:	8085883a 	add	r2,r16,r2
     bd0:	10c00117 	ldw	r3,4(r2)
     bd4:	29000315 	stw	r4,12(r5)
     bd8:	21400215 	stw	r5,8(r4)
     bdc:	18c00054 	ori	r3,r3,1
     be0:	10c00115 	stw	r3,4(r2)
     be4:	9009883a 	mov	r4,r18
     be8:	000db6c0 	call	db6c <__malloc_unlock>
     bec:	80800204 	addi	r2,r16,8
     bf0:	00007f06 	br	df0 <_malloc_r+0x2a4>
     bf4:	00bffe04 	movi	r2,-8
     bf8:	88a2703a 	and	r17,r17,r2
     bfc:	88007916 	blt	r17,zero,de4 <_malloc_r+0x298>
     c00:	89407836 	bltu	r17,r5,de4 <_malloc_r+0x298>
     c04:	000db480 	call	db48 <__malloc_lock>
     c08:	88807e28 	cmpgeui	r2,r17,504
     c0c:	10013326 	beq	r2,zero,10dc <_malloc_r+0x590>
     c10:	8804d27a 	srli	r2,r17,9
     c14:	10008226 	beq	r2,zero,e20 <_malloc_r+0x2d4>
     c18:	10c00168 	cmpgeui	r3,r2,5
     c1c:	1801151e 	bne	r3,zero,1074 <_malloc_r+0x528>
     c20:	8804d1ba 	srli	r2,r17,6
     c24:	11800e44 	addi	r6,r2,57
     c28:	300a90fa 	slli	r5,r6,3
     c2c:	12000e04 	addi	r8,r2,56
     c30:	04c00074 	movhi	r19,1
     c34:	9cc19704 	addi	r19,r19,1628
     c38:	994b883a 	add	r5,r19,r5
     c3c:	2c000117 	ldw	r16,4(r5)
     c40:	297ffe04 	addi	r5,r5,-8
     c44:	2c001126 	beq	r5,r16,c8c <_malloc_r+0x140>
     c48:	80800117 	ldw	r2,4(r16)
     c4c:	00ffff04 	movi	r3,-4
     c50:	10c4703a 	and	r2,r2,r3
     c54:	1447c83a 	sub	r3,r2,r17
     c58:	19000408 	cmpgei	r4,r3,16
     c5c:	2000e81e 	bne	r4,zero,1000 <_malloc_r+0x4b4>
     c60:	1800e90e 	bge	r3,zero,1008 <_malloc_r+0x4bc>
     c64:	01ffff04 	movi	r7,-4
     c68:	00000606 	br	c84 <_malloc_r+0x138>
     c6c:	80800117 	ldw	r2,4(r16)
     c70:	11c4703a 	and	r2,r2,r7
     c74:	1447c83a 	sub	r3,r2,r17
     c78:	19000408 	cmpgei	r4,r3,16
     c7c:	2000e01e 	bne	r4,zero,1000 <_malloc_r+0x4b4>
     c80:	1800e10e 	bge	r3,zero,1008 <_malloc_r+0x4bc>
     c84:	84000317 	ldw	r16,12(r16)
     c88:	2c3ff81e 	bne	r5,r16,c6c <_malloc_r+0x120>
     c8c:	9c000417 	ldw	r16,16(r19)
     c90:	02000074 	movhi	r8,1
     c94:	42019904 	addi	r8,r8,1636
     c98:	82006c26 	beq	r16,r8,e4c <_malloc_r+0x300>
     c9c:	80c00117 	ldw	r3,4(r16)
     ca0:	00bfff04 	movi	r2,-4
     ca4:	1884703a 	and	r2,r3,r2
     ca8:	1447c83a 	sub	r3,r2,r17
     cac:	19000410 	cmplti	r4,r3,16
     cb0:	20011526 	beq	r4,zero,1108 <_malloc_r+0x5bc>
     cb4:	9a000515 	stw	r8,20(r19)
     cb8:	9a000415 	stw	r8,16(r19)
     cbc:	18010a0e 	bge	r3,zero,10e8 <_malloc_r+0x59c>
     cc0:	10c08028 	cmpgeui	r3,r2,512
     cc4:	1800d21e 	bne	r3,zero,1010 <_malloc_r+0x4c4>
     cc8:	1004d0fa 	srli	r2,r2,3
     ccc:	99400117 	ldw	r5,4(r19)
     cd0:	10c00044 	addi	r3,r2,1
     cd4:	1009d0ba 	srai	r4,r2,2
     cd8:	180690fa 	slli	r3,r3,3
     cdc:	00800044 	movi	r2,1
     ce0:	1104983a 	sll	r2,r2,r4
     ce4:	98c7883a 	add	r3,r19,r3
     ce8:	19000017 	ldw	r4,0(r3)
     cec:	1144b03a 	or	r2,r2,r5
     cf0:	197ffe04 	addi	r5,r3,-8
     cf4:	81400315 	stw	r5,12(r16)
     cf8:	81000215 	stw	r4,8(r16)
     cfc:	98800115 	stw	r2,4(r19)
     d00:	1c000015 	stw	r16,0(r3)
     d04:	24000315 	stw	r16,12(r4)
     d08:	3007d0ba 	srai	r3,r6,2
     d0c:	01000044 	movi	r4,1
     d10:	20c8983a 	sll	r4,r4,r3
     d14:	11005236 	bltu	r2,r4,e60 <_malloc_r+0x314>
     d18:	2086703a 	and	r3,r4,r2
     d1c:	18000a1e 	bne	r3,zero,d48 <_malloc_r+0x1fc>
     d20:	00ffff04 	movi	r3,-4
     d24:	2109883a 	add	r4,r4,r4
     d28:	30cc703a 	and	r6,r6,r3
     d2c:	2086703a 	and	r3,r4,r2
     d30:	31800104 	addi	r6,r6,4
     d34:	1800041e 	bne	r3,zero,d48 <_malloc_r+0x1fc>
     d38:	2109883a 	add	r4,r4,r4
     d3c:	2086703a 	and	r3,r4,r2
     d40:	31800104 	addi	r6,r6,4
     d44:	183ffc26 	beq	r3,zero,d38 <_malloc_r+0x1ec>
     d48:	027fff04 	movi	r9,-4
     d4c:	301490fa 	slli	r10,r6,3
     d50:	3017883a 	mov	r11,r6
     d54:	9a95883a 	add	r10,r19,r10
     d58:	500f883a 	mov	r7,r10
     d5c:	3c000317 	ldw	r16,12(r7)
     d60:	3c00cd26 	beq	r7,r16,1098 <_malloc_r+0x54c>
     d64:	80800117 	ldw	r2,4(r16)
     d68:	1244703a 	and	r2,r2,r9
     d6c:	1447c83a 	sub	r3,r2,r17
     d70:	19400408 	cmpgei	r5,r3,16
     d74:	2800081e 	bne	r5,zero,d98 <_malloc_r+0x24c>
     d78:	1800cc0e 	bge	r3,zero,10ac <_malloc_r+0x560>
     d7c:	84000317 	ldw	r16,12(r16)
     d80:	3c00c526 	beq	r7,r16,1098 <_malloc_r+0x54c>
     d84:	80800117 	ldw	r2,4(r16)
     d88:	1244703a 	and	r2,r2,r9
     d8c:	1447c83a 	sub	r3,r2,r17
     d90:	19400410 	cmplti	r5,r3,16
     d94:	283ff81e 	bne	r5,zero,d78 <_malloc_r+0x22c>
     d98:	81000317 	ldw	r4,12(r16)
     d9c:	81400217 	ldw	r5,8(r16)
     da0:	89800054 	ori	r6,r17,1
     da4:	81800115 	stw	r6,4(r16)
     da8:	29000315 	stw	r4,12(r5)
     dac:	21400215 	stw	r5,8(r4)
     db0:	8463883a 	add	r17,r16,r17
     db4:	9c400515 	stw	r17,20(r19)
     db8:	9c400415 	stw	r17,16(r19)
     dbc:	19000054 	ori	r4,r3,1
     dc0:	89000115 	stw	r4,4(r17)
     dc4:	8085883a 	add	r2,r16,r2
     dc8:	8a000315 	stw	r8,12(r17)
     dcc:	8a000215 	stw	r8,8(r17)
     dd0:	10c00015 	stw	r3,0(r2)
     dd4:	9009883a 	mov	r4,r18
     dd8:	000db6c0 	call	db6c <__malloc_unlock>
     ddc:	80800204 	addi	r2,r16,8
     de0:	00000306 	br	df0 <_malloc_r+0x2a4>
     de4:	00800304 	movi	r2,12
     de8:	90800015 	stw	r2,0(r18)
     dec:	0005883a 	mov	r2,zero
     df0:	dfc00917 	ldw	ra,36(sp)
     df4:	df000817 	ldw	fp,32(sp)
     df8:	ddc00717 	ldw	r23,28(sp)
     dfc:	dd800617 	ldw	r22,24(sp)
     e00:	dd400517 	ldw	r21,20(sp)
     e04:	dd000417 	ldw	r20,16(sp)
     e08:	dcc00317 	ldw	r19,12(sp)
     e0c:	dc800217 	ldw	r18,8(sp)
     e10:	dc400117 	ldw	r17,4(sp)
     e14:	dc000017 	ldw	r16,0(sp)
     e18:	dec00a04 	addi	sp,sp,40
     e1c:	f800283a 	ret
     e20:	01408004 	movi	r5,512
     e24:	01801004 	movi	r6,64
     e28:	02000fc4 	movi	r8,63
     e2c:	003f8006 	br	c30 <_malloc_r+0xe4>
     e30:	14000317 	ldw	r16,12(r2)
     e34:	31800084 	addi	r6,r6,2
     e38:	143f5f1e 	bne	r2,r16,bb8 <_malloc_r+0x6c>
     e3c:	9c000417 	ldw	r16,16(r19)
     e40:	02000074 	movhi	r8,1
     e44:	42019904 	addi	r8,r8,1636
     e48:	823f941e 	bne	r16,r8,c9c <_malloc_r+0x150>
     e4c:	3007d0ba 	srai	r3,r6,2
     e50:	01000044 	movi	r4,1
     e54:	98800117 	ldw	r2,4(r19)
     e58:	20c8983a 	sll	r4,r4,r3
     e5c:	113fae2e 	bgeu	r2,r4,d18 <_malloc_r+0x1cc>
     e60:	9c000217 	ldw	r16,8(r19)
     e64:	00bfff04 	movi	r2,-4
     e68:	85000117 	ldw	r20,4(r16)
     e6c:	a0ac703a 	and	r22,r20,r2
     e70:	b4400336 	bltu	r22,r17,e80 <_malloc_r+0x334>
     e74:	b445c83a 	sub	r2,r22,r17
     e78:	10c00408 	cmpgei	r3,r2,16
     e7c:	1800561e 	bne	r3,zero,fd8 <_malloc_r+0x48c>
     e80:	00800074 	movhi	r2,1
     e84:	10877d17 	ldw	r2,7668(r2)
     e88:	00c00074 	movhi	r3,1
     e8c:	1d0ea617 	ldw	r20,15000(r3)
     e90:	10bfffd8 	cmpnei	r2,r2,-1
     e94:	85ab883a 	add	r21,r16,r22
     e98:	8d29883a 	add	r20,r17,r20
     e9c:	1000c826 	beq	r2,zero,11c0 <_malloc_r+0x674>
     ea0:	a50403c4 	addi	r20,r20,4111
     ea4:	00bc0004 	movi	r2,-4096
     ea8:	a0a8703a 	and	r20,r20,r2
     eac:	a00b883a 	mov	r5,r20
     eb0:	9009883a 	mov	r4,r18
     eb4:	00019440 	call	1944 <_sbrk_r>
     eb8:	102f883a 	mov	r23,r2
     ebc:	10bfffd8 	cmpnei	r2,r2,-1
     ec0:	10009a26 	beq	r2,zero,112c <_malloc_r+0x5e0>
     ec4:	bd409836 	bltu	r23,r21,1128 <_malloc_r+0x5dc>
     ec8:	00800074 	movhi	r2,1
     ecc:	108eb417 	ldw	r2,15056(r2)
     ed0:	00c00074 	movhi	r3,1
     ed4:	a085883a 	add	r2,r20,r2
     ed8:	188eb415 	stw	r2,15056(r3)
     edc:	1007883a 	mov	r3,r2
     ee0:	adc0dd26 	beq	r21,r23,1258 <_malloc_r+0x70c>
     ee4:	00800074 	movhi	r2,1
     ee8:	10877d17 	ldw	r2,7668(r2)
     eec:	10bfffd8 	cmpnei	r2,r2,-1
     ef0:	1000e026 	beq	r2,zero,1274 <_malloc_r+0x728>
     ef4:	bd6bc83a 	sub	r21,r23,r21
     ef8:	a8c7883a 	add	r3,r21,r3
     efc:	00800074 	movhi	r2,1
     f00:	10ceb415 	stw	r3,15056(r2)
     f04:	bf0001cc 	andi	fp,r23,7
     f08:	e000b626 	beq	fp,zero,11e4 <_malloc_r+0x698>
     f0c:	bf2fc83a 	sub	r23,r23,fp
     f10:	bdc00204 	addi	r23,r23,8
     f14:	00840204 	movi	r2,4104
     f18:	1705c83a 	sub	r2,r2,fp
     f1c:	bd29883a 	add	r20,r23,r20
     f20:	1505c83a 	sub	r2,r2,r20
     f24:	1543ffcc 	andi	r21,r2,4095
     f28:	a80b883a 	mov	r5,r21
     f2c:	9009883a 	mov	r4,r18
     f30:	00019440 	call	1944 <_sbrk_r>
     f34:	10ffffe0 	cmpeqi	r3,r2,-1
     f38:	1800e41e 	bne	r3,zero,12cc <_malloc_r+0x780>
     f3c:	15c5c83a 	sub	r2,r2,r23
     f40:	1569883a 	add	r20,r2,r21
     f44:	00800074 	movhi	r2,1
     f48:	108eb417 	ldw	r2,15056(r2)
     f4c:	9dc00215 	stw	r23,8(r19)
     f50:	a5000054 	ori	r20,r20,1
     f54:	a885883a 	add	r2,r21,r2
     f58:	00c00074 	movhi	r3,1
     f5c:	188eb415 	stw	r2,15056(r3)
     f60:	bd000115 	stw	r20,4(r23)
     f64:	84c0c626 	beq	r16,r19,1280 <_malloc_r+0x734>
     f68:	b0c00428 	cmpgeui	r3,r22,16
     f6c:	1800c626 	beq	r3,zero,1288 <_malloc_r+0x73c>
     f70:	81000117 	ldw	r4,4(r16)
     f74:	017ffe04 	movi	r5,-8
     f78:	b0fffd04 	addi	r3,r22,-12
     f7c:	1946703a 	and	r3,r3,r5
     f80:	2100004c 	andi	r4,r4,1
     f84:	20c8b03a 	or	r4,r4,r3
     f88:	81000115 	stw	r4,4(r16)
     f8c:	01400144 	movi	r5,5
     f90:	80c9883a 	add	r4,r16,r3
     f94:	21400115 	stw	r5,4(r4)
     f98:	21400215 	stw	r5,8(r4)
     f9c:	18c00428 	cmpgeui	r3,r3,16
     fa0:	1800cf1e 	bne	r3,zero,12e0 <_malloc_r+0x794>
     fa4:	bd000117 	ldw	r20,4(r23)
     fa8:	b821883a 	mov	r16,r23
     fac:	00c00074 	movhi	r3,1
     fb0:	18cea517 	ldw	r3,14996(r3)
     fb4:	1880022e 	bgeu	r3,r2,fc0 <_malloc_r+0x474>
     fb8:	00c00074 	movhi	r3,1
     fbc:	188ea515 	stw	r2,14996(r3)
     fc0:	00c00074 	movhi	r3,1
     fc4:	18cea417 	ldw	r3,14992(r3)
     fc8:	18805a2e 	bgeu	r3,r2,1134 <_malloc_r+0x5e8>
     fcc:	00c00074 	movhi	r3,1
     fd0:	188ea415 	stw	r2,14992(r3)
     fd4:	00005706 	br	1134 <_malloc_r+0x5e8>
     fd8:	88c00054 	ori	r3,r17,1
     fdc:	80c00115 	stw	r3,4(r16)
     fe0:	8463883a 	add	r17,r16,r17
     fe4:	10800054 	ori	r2,r2,1
     fe8:	9c400215 	stw	r17,8(r19)
     fec:	88800115 	stw	r2,4(r17)
     ff0:	9009883a 	mov	r4,r18
     ff4:	000db6c0 	call	db6c <__malloc_unlock>
     ff8:	80800204 	addi	r2,r16,8
     ffc:	003f7c06 	br	df0 <_malloc_r+0x2a4>
    1000:	400d883a 	mov	r6,r8
    1004:	003f2106 	br	c8c <_malloc_r+0x140>
    1008:	81000317 	ldw	r4,12(r16)
    100c:	003eee06 	br	bc8 <_malloc_r+0x7c>
    1010:	1006d27a 	srli	r3,r2,9
    1014:	19000168 	cmpgeui	r4,r3,5
    1018:	20003e26 	beq	r4,zero,1114 <_malloc_r+0x5c8>
    101c:	19000568 	cmpgeui	r4,r3,21
    1020:	20007a1e 	bne	r4,zero,120c <_malloc_r+0x6c0>
    1024:	19401704 	addi	r5,r3,92
    1028:	280a90fa 	slli	r5,r5,3
    102c:	190016c4 	addi	r4,r3,91
    1030:	994b883a 	add	r5,r19,r5
    1034:	28c00017 	ldw	r3,0(r5)
    1038:	297ffe04 	addi	r5,r5,-8
    103c:	28c06226 	beq	r5,r3,11c8 <_malloc_r+0x67c>
    1040:	01ffff04 	movi	r7,-4
    1044:	19000117 	ldw	r4,4(r3)
    1048:	21c8703a 	and	r4,r4,r7
    104c:	1100022e 	bgeu	r2,r4,1058 <_malloc_r+0x50c>
    1050:	18c00217 	ldw	r3,8(r3)
    1054:	28fffb1e 	bne	r5,r3,1044 <_malloc_r+0x4f8>
    1058:	19400317 	ldw	r5,12(r3)
    105c:	98800117 	ldw	r2,4(r19)
    1060:	81400315 	stw	r5,12(r16)
    1064:	80c00215 	stw	r3,8(r16)
    1068:	2c000215 	stw	r16,8(r5)
    106c:	1c000315 	stw	r16,12(r3)
    1070:	003f2506 	br	d08 <_malloc_r+0x1bc>
    1074:	10c00568 	cmpgeui	r3,r2,21
    1078:	18003826 	beq	r3,zero,115c <_malloc_r+0x610>
    107c:	10c01568 	cmpgeui	r3,r2,85
    1080:	1800691e 	bne	r3,zero,1228 <_malloc_r+0x6dc>
    1084:	8804d33a 	srli	r2,r17,12
    1088:	11801bc4 	addi	r6,r2,111
    108c:	12001b84 	addi	r8,r2,110
    1090:	300a90fa 	slli	r5,r6,3
    1094:	003ee606 	br	c30 <_malloc_r+0xe4>
    1098:	5ac00044 	addi	r11,r11,1
    109c:	588000cc 	andi	r2,r11,3
    10a0:	39c00204 	addi	r7,r7,8
    10a4:	103f2d1e 	bne	r2,zero,d5c <_malloc_r+0x210>
    10a8:	00003306 	br	1178 <_malloc_r+0x62c>
    10ac:	8085883a 	add	r2,r16,r2
    10b0:	10c00117 	ldw	r3,4(r2)
    10b4:	81000317 	ldw	r4,12(r16)
    10b8:	81400217 	ldw	r5,8(r16)
    10bc:	18c00054 	ori	r3,r3,1
    10c0:	10c00115 	stw	r3,4(r2)
    10c4:	29000315 	stw	r4,12(r5)
    10c8:	21400215 	stw	r5,8(r4)
    10cc:	9009883a 	mov	r4,r18
    10d0:	000db6c0 	call	db6c <__malloc_unlock>
    10d4:	80800204 	addi	r2,r16,8
    10d8:	003f4506 	br	df0 <_malloc_r+0x2a4>
    10dc:	880cd0fa 	srli	r6,r17,3
    10e0:	88800204 	addi	r2,r17,8
    10e4:	003eae06 	br	ba0 <_malloc_r+0x54>
    10e8:	8085883a 	add	r2,r16,r2
    10ec:	10c00117 	ldw	r3,4(r2)
    10f0:	9009883a 	mov	r4,r18
    10f4:	18c00054 	ori	r3,r3,1
    10f8:	10c00115 	stw	r3,4(r2)
    10fc:	000db6c0 	call	db6c <__malloc_unlock>
    1100:	80800204 	addi	r2,r16,8
    1104:	003f3a06 	br	df0 <_malloc_r+0x2a4>
    1108:	89000054 	ori	r4,r17,1
    110c:	81000115 	stw	r4,4(r16)
    1110:	003f2706 	br	db0 <_malloc_r+0x264>
    1114:	1006d1ba 	srli	r3,r2,6
    1118:	19400e44 	addi	r5,r3,57
    111c:	19000e04 	addi	r4,r3,56
    1120:	280a90fa 	slli	r5,r5,3
    1124:	003fc206 	br	1030 <_malloc_r+0x4e4>
    1128:	84c04626 	beq	r16,r19,1244 <_malloc_r+0x6f8>
    112c:	9c000217 	ldw	r16,8(r19)
    1130:	85000117 	ldw	r20,4(r16)
    1134:	00bfff04 	movi	r2,-4
    1138:	a0a8703a 	and	r20,r20,r2
    113c:	a445c83a 	sub	r2,r20,r17
    1140:	a4400236 	bltu	r20,r17,114c <_malloc_r+0x600>
    1144:	10c00408 	cmpgei	r3,r2,16
    1148:	183fa31e 	bne	r3,zero,fd8 <_malloc_r+0x48c>
    114c:	9009883a 	mov	r4,r18
    1150:	000db6c0 	call	db6c <__malloc_unlock>
    1154:	0005883a 	mov	r2,zero
    1158:	003f2506 	br	df0 <_malloc_r+0x2a4>
    115c:	11801704 	addi	r6,r2,92
    1160:	120016c4 	addi	r8,r2,91
    1164:	300a90fa 	slli	r5,r6,3
    1168:	003eb106 	br	c30 <_malloc_r+0xe4>
    116c:	50800217 	ldw	r2,8(r10)
    1170:	31bfffc4 	addi	r6,r6,-1
    1174:	1280701e 	bne	r2,r10,1338 <_malloc_r+0x7ec>
    1178:	308000cc 	andi	r2,r6,3
    117c:	52bffe04 	addi	r10,r10,-8
    1180:	103ffa1e 	bne	r2,zero,116c <_malloc_r+0x620>
    1184:	98c00117 	ldw	r3,4(r19)
    1188:	0104303a 	nor	r2,zero,r4
    118c:	10c4703a 	and	r2,r2,r3
    1190:	98800115 	stw	r2,4(r19)
    1194:	2109883a 	add	r4,r4,r4
    1198:	113f3136 	bltu	r2,r4,e60 <_malloc_r+0x314>
    119c:	203f3026 	beq	r4,zero,e60 <_malloc_r+0x314>
    11a0:	2086703a 	and	r3,r4,r2
    11a4:	1800041e 	bne	r3,zero,11b8 <_malloc_r+0x66c>
    11a8:	2109883a 	add	r4,r4,r4
    11ac:	2086703a 	and	r3,r4,r2
    11b0:	5ac00104 	addi	r11,r11,4
    11b4:	183ffc26 	beq	r3,zero,11a8 <_malloc_r+0x65c>
    11b8:	580d883a 	mov	r6,r11
    11bc:	003ee306 	br	d4c <_malloc_r+0x200>
    11c0:	a5000404 	addi	r20,r20,16
    11c4:	003f3906 	br	eac <_malloc_r+0x360>
    11c8:	2009d0ba 	srai	r4,r4,2
    11cc:	00800044 	movi	r2,1
    11d0:	99c00117 	ldw	r7,4(r19)
    11d4:	1104983a 	sll	r2,r2,r4
    11d8:	11c4b03a 	or	r2,r2,r7
    11dc:	98800115 	stw	r2,4(r19)
    11e0:	003f9f06 	br	1060 <_malloc_r+0x514>
    11e4:	bd05883a 	add	r2,r23,r20
    11e8:	0085c83a 	sub	r2,zero,r2
    11ec:	1543ffcc 	andi	r21,r2,4095
    11f0:	a80b883a 	mov	r5,r21
    11f4:	9009883a 	mov	r4,r18
    11f8:	00019440 	call	1944 <_sbrk_r>
    11fc:	10ffffe0 	cmpeqi	r3,r2,-1
    1200:	183f4e26 	beq	r3,zero,f3c <_malloc_r+0x3f0>
    1204:	002b883a 	mov	r21,zero
    1208:	003f4e06 	br	f44 <_malloc_r+0x3f8>
    120c:	19001568 	cmpgeui	r4,r3,85
    1210:	2000201e 	bne	r4,zero,1294 <_malloc_r+0x748>
    1214:	1006d33a 	srli	r3,r2,12
    1218:	19401bc4 	addi	r5,r3,111
    121c:	19001b84 	addi	r4,r3,110
    1220:	280a90fa 	slli	r5,r5,3
    1224:	003f8206 	br	1030 <_malloc_r+0x4e4>
    1228:	10c05568 	cmpgeui	r3,r2,341
    122c:	1800201e 	bne	r3,zero,12b0 <_malloc_r+0x764>
    1230:	8804d3fa 	srli	r2,r17,15
    1234:	11801e04 	addi	r6,r2,120
    1238:	12001dc4 	addi	r8,r2,119
    123c:	300a90fa 	slli	r5,r6,3
    1240:	003e7b06 	br	c30 <_malloc_r+0xe4>
    1244:	00800074 	movhi	r2,1
    1248:	10ceb417 	ldw	r3,15056(r2)
    124c:	a0c7883a 	add	r3,r20,r3
    1250:	10ceb415 	stw	r3,15056(r2)
    1254:	003f2306 	br	ee4 <_malloc_r+0x398>
    1258:	a903ffcc 	andi	r4,r21,4095
    125c:	203f211e 	bne	r4,zero,ee4 <_malloc_r+0x398>
    1260:	9c000217 	ldw	r16,8(r19)
    1264:	b529883a 	add	r20,r22,r20
    1268:	a5000054 	ori	r20,r20,1
    126c:	85000115 	stw	r20,4(r16)
    1270:	003f4e06 	br	fac <_malloc_r+0x460>
    1274:	00800074 	movhi	r2,1
    1278:	15c77d15 	stw	r23,7668(r2)
    127c:	003f2106 	br	f04 <_malloc_r+0x3b8>
    1280:	b821883a 	mov	r16,r23
    1284:	003f4906 	br	fac <_malloc_r+0x460>
    1288:	00800044 	movi	r2,1
    128c:	b8800115 	stw	r2,4(r23)
    1290:	003fae06 	br	114c <_malloc_r+0x600>
    1294:	19005568 	cmpgeui	r4,r3,341
    1298:	2000191e 	bne	r4,zero,1300 <_malloc_r+0x7b4>
    129c:	1006d3fa 	srli	r3,r2,15
    12a0:	19401e04 	addi	r5,r3,120
    12a4:	19001dc4 	addi	r4,r3,119
    12a8:	280a90fa 	slli	r5,r5,3
    12ac:	003f6006 	br	1030 <_malloc_r+0x4e4>
    12b0:	10815568 	cmpgeui	r2,r2,1365
    12b4:	1000191e 	bne	r2,zero,131c <_malloc_r+0x7d0>
    12b8:	8804d4ba 	srli	r2,r17,18
    12bc:	11801f44 	addi	r6,r2,125
    12c0:	12001f04 	addi	r8,r2,124
    12c4:	300a90fa 	slli	r5,r6,3
    12c8:	003e5906 	br	c30 <_malloc_r+0xe4>
    12cc:	e73ffe04 	addi	fp,fp,-8
    12d0:	a729883a 	add	r20,r20,fp
    12d4:	a5e9c83a 	sub	r20,r20,r23
    12d8:	002b883a 	mov	r21,zero
    12dc:	003f1906 	br	f44 <_malloc_r+0x3f8>
    12e0:	81400204 	addi	r5,r16,8
    12e4:	9009883a 	mov	r4,r18
    12e8:	00060300 	call	6030 <_free_r>
    12ec:	9c000217 	ldw	r16,8(r19)
    12f0:	00800074 	movhi	r2,1
    12f4:	108eb417 	ldw	r2,15056(r2)
    12f8:	85000117 	ldw	r20,4(r16)
    12fc:	003f2b06 	br	fac <_malloc_r+0x460>
    1300:	18c15568 	cmpgeui	r3,r3,1365
    1304:	1800091e 	bne	r3,zero,132c <_malloc_r+0x7e0>
    1308:	1006d4ba 	srli	r3,r2,18
    130c:	19401f44 	addi	r5,r3,125
    1310:	19001f04 	addi	r4,r3,124
    1314:	280a90fa 	slli	r5,r5,3
    1318:	003f4506 	br	1030 <_malloc_r+0x4e4>
    131c:	0140fe04 	movi	r5,1016
    1320:	01801fc4 	movi	r6,127
    1324:	02001f84 	movi	r8,126
    1328:	003e4106 	br	c30 <_malloc_r+0xe4>
    132c:	0140fe04 	movi	r5,1016
    1330:	01001f84 	movi	r4,126
    1334:	003f3e06 	br	1030 <_malloc_r+0x4e4>
    1338:	98800117 	ldw	r2,4(r19)
    133c:	003f9506 	br	1194 <_malloc_r+0x648>

00001340 <memchr>:
    1340:	208000cc 	andi	r2,r4,3
    1344:	280f883a 	mov	r7,r5
    1348:	10003526 	beq	r2,zero,1420 <memchr+0xe0>
    134c:	30bfffc4 	addi	r2,r6,-1
    1350:	30001926 	beq	r6,zero,13b8 <memchr+0x78>
    1354:	20c00003 	ldbu	r3,0(r4)
    1358:	29803fcc 	andi	r6,r5,255
    135c:	30c0061e 	bne	r6,r3,1378 <memchr+0x38>
    1360:	00001706 	br	13c0 <memchr+0x80>
    1364:	10bfffc4 	addi	r2,r2,-1
    1368:	10ffffe0 	cmpeqi	r3,r2,-1
    136c:	1800121e 	bne	r3,zero,13b8 <memchr+0x78>
    1370:	20c00003 	ldbu	r3,0(r4)
    1374:	19801226 	beq	r3,r6,13c0 <memchr+0x80>
    1378:	21000044 	addi	r4,r4,1
    137c:	20c000cc 	andi	r3,r4,3
    1380:	183ff81e 	bne	r3,zero,1364 <memchr+0x24>
    1384:	10c00128 	cmpgeui	r3,r2,4
    1388:	18000f1e 	bne	r3,zero,13c8 <memchr+0x88>
    138c:	10000a26 	beq	r2,zero,13b8 <memchr+0x78>
    1390:	20c00003 	ldbu	r3,0(r4)
    1394:	29403fcc 	andi	r5,r5,255
    1398:	19400926 	beq	r3,r5,13c0 <memchr+0x80>
    139c:	2085883a 	add	r2,r4,r2
    13a0:	39403fcc 	andi	r5,r7,255
    13a4:	00000206 	br	13b0 <memchr+0x70>
    13a8:	20c00003 	ldbu	r3,0(r4)
    13ac:	19400426 	beq	r3,r5,13c0 <memchr+0x80>
    13b0:	21000044 	addi	r4,r4,1
    13b4:	113ffc1e 	bne	r2,r4,13a8 <memchr+0x68>
    13b8:	0005883a 	mov	r2,zero
    13bc:	f800283a 	ret
    13c0:	2005883a 	mov	r2,r4
    13c4:	f800283a 	ret
    13c8:	280c923a 	slli	r6,r5,8
    13cc:	2a403fcc 	andi	r9,r5,255
    13d0:	02bfbff4 	movhi	r10,65279
    13d4:	31bfffcc 	andi	r6,r6,65535
    13d8:	3246b03a 	or	r3,r6,r9
    13dc:	1812943a 	slli	r9,r3,16
    13e0:	02202074 	movhi	r8,32897
    13e4:	52bfbfc4 	addi	r10,r10,-257
    13e8:	48d2b03a 	or	r9,r9,r3
    13ec:	42202004 	addi	r8,r8,-32640
    13f0:	20c00017 	ldw	r3,0(r4)
    13f4:	48c6f03a 	xor	r3,r9,r3
    13f8:	1a8d883a 	add	r6,r3,r10
    13fc:	00c6303a 	nor	r3,zero,r3
    1400:	30c6703a 	and	r3,r6,r3
    1404:	1a06703a 	and	r3,r3,r8
    1408:	183fe11e 	bne	r3,zero,1390 <memchr+0x50>
    140c:	10bfff04 	addi	r2,r2,-4
    1410:	10c00128 	cmpgeui	r3,r2,4
    1414:	21000104 	addi	r4,r4,4
    1418:	183ff51e 	bne	r3,zero,13f0 <memchr+0xb0>
    141c:	003fdb06 	br	138c <memchr+0x4c>
    1420:	3005883a 	mov	r2,r6
    1424:	003fd706 	br	1384 <memchr+0x44>

00001428 <memcpy>:
    1428:	30c00430 	cmpltui	r3,r6,16
    142c:	2005883a 	mov	r2,r4
    1430:	18002d1e 	bne	r3,zero,14e8 <memcpy+0xc0>
    1434:	2906b03a 	or	r3,r5,r4
    1438:	18c000cc 	andi	r3,r3,3
    143c:	1800351e 	bne	r3,zero,1514 <memcpy+0xec>
    1440:	32fffc04 	addi	r11,r6,-16
    1444:	5816d13a 	srli	r11,r11,4
    1448:	2007883a 	mov	r3,r4
    144c:	280f883a 	mov	r7,r5
    1450:	5ac00044 	addi	r11,r11,1
    1454:	5816913a 	slli	r11,r11,4
    1458:	22c9883a 	add	r4,r4,r11
    145c:	3a000017 	ldw	r8,0(r7)
    1460:	3a800117 	ldw	r10,4(r7)
    1464:	3a400217 	ldw	r9,8(r7)
    1468:	39c00404 	addi	r7,r7,16
    146c:	1a000015 	stw	r8,0(r3)
    1470:	3a3fff17 	ldw	r8,-4(r7)
    1474:	1a800115 	stw	r10,4(r3)
    1478:	1a400215 	stw	r9,8(r3)
    147c:	18c00404 	addi	r3,r3,16
    1480:	1a3fff15 	stw	r8,-4(r3)
    1484:	20fff51e 	bne	r4,r3,145c <memcpy+0x34>
    1488:	3100030c 	andi	r4,r6,12
    148c:	2acb883a 	add	r5,r5,r11
    1490:	320003cc 	andi	r8,r6,15
    1494:	20002226 	beq	r4,zero,1520 <memcpy+0xf8>
    1498:	2809883a 	mov	r4,r5
    149c:	1813883a 	mov	r9,r3
    14a0:	21000104 	addi	r4,r4,4
    14a4:	22bfff17 	ldw	r10,-4(r4)
    14a8:	410fc83a 	sub	r7,r8,r4
    14ac:	4a400104 	addi	r9,r9,4
    14b0:	29cf883a 	add	r7,r5,r7
    14b4:	4abfff15 	stw	r10,-4(r9)
    14b8:	39c00128 	cmpgeui	r7,r7,4
    14bc:	383ff81e 	bne	r7,zero,14a0 <memcpy+0x78>
    14c0:	413fff04 	addi	r4,r8,-4
    14c4:	2008d0ba 	srli	r4,r4,2
    14c8:	318000cc 	andi	r6,r6,3
    14cc:	31ffffc4 	addi	r7,r6,-1
    14d0:	21000044 	addi	r4,r4,1
    14d4:	200890ba 	slli	r4,r4,2
    14d8:	1907883a 	add	r3,r3,r4
    14dc:	290b883a 	add	r5,r5,r4
    14e0:	3000041e 	bne	r6,zero,14f4 <memcpy+0xcc>
    14e4:	f800283a 	ret
    14e8:	2007883a 	mov	r3,r4
    14ec:	31ffffc4 	addi	r7,r6,-1
    14f0:	303ffc26 	beq	r6,zero,14e4 <memcpy+0xbc>
    14f4:	39c00044 	addi	r7,r7,1
    14f8:	19cf883a 	add	r7,r3,r7
    14fc:	29400044 	addi	r5,r5,1
    1500:	29bfffc3 	ldbu	r6,-1(r5)
    1504:	18c00044 	addi	r3,r3,1
    1508:	19bfffc5 	stb	r6,-1(r3)
    150c:	19fffb1e 	bne	r3,r7,14fc <memcpy+0xd4>
    1510:	f800283a 	ret
    1514:	31ffffc4 	addi	r7,r6,-1
    1518:	2007883a 	mov	r3,r4
    151c:	003ff506 	br	14f4 <memcpy+0xcc>
    1520:	400d883a 	mov	r6,r8
    1524:	003ff106 	br	14ec <memcpy+0xc4>

00001528 <memset>:
    1528:	20c000cc 	andi	r3,r4,3
    152c:	2005883a 	mov	r2,r4
    1530:	18003626 	beq	r3,zero,160c <memset+0xe4>
    1534:	31ffffc4 	addi	r7,r6,-1
    1538:	30003326 	beq	r6,zero,1608 <memset+0xe0>
    153c:	2811883a 	mov	r8,r5
    1540:	2007883a 	mov	r3,r4
    1544:	00000306 	br	1554 <memset+0x2c>
    1548:	39ffffc4 	addi	r7,r7,-1
    154c:	39bfffe0 	cmpeqi	r6,r7,-1
    1550:	30002d1e 	bne	r6,zero,1608 <memset+0xe0>
    1554:	18c00044 	addi	r3,r3,1
    1558:	1a3fffc5 	stb	r8,-1(r3)
    155c:	198000cc 	andi	r6,r3,3
    1560:	303ff91e 	bne	r6,zero,1548 <memset+0x20>
    1564:	39000130 	cmpltui	r4,r7,4
    1568:	2000221e 	bne	r4,zero,15f4 <memset+0xcc>
    156c:	29003fcc 	andi	r4,r5,255
    1570:	200c923a 	slli	r6,r4,8
    1574:	3a000430 	cmpltui	r8,r7,16
    1578:	3108b03a 	or	r4,r6,r4
    157c:	200c943a 	slli	r6,r4,16
    1580:	310cb03a 	or	r6,r6,r4
    1584:	40000e1e 	bne	r8,zero,15c0 <memset+0x98>
    1588:	3a3ffc04 	addi	r8,r7,-16
    158c:	4010d13a 	srli	r8,r8,4
    1590:	42000044 	addi	r8,r8,1
    1594:	4010913a 	slli	r8,r8,4
    1598:	1a11883a 	add	r8,r3,r8
    159c:	19800015 	stw	r6,0(r3)
    15a0:	19800115 	stw	r6,4(r3)
    15a4:	19800215 	stw	r6,8(r3)
    15a8:	18c00404 	addi	r3,r3,16
    15ac:	19bfff15 	stw	r6,-4(r3)
    15b0:	40fffa1e 	bne	r8,r3,159c <memset+0x74>
    15b4:	3900030c 	andi	r4,r7,12
    15b8:	39c003cc 	andi	r7,r7,15
    15bc:	20000d26 	beq	r4,zero,15f4 <memset+0xcc>
    15c0:	1809883a 	mov	r4,r3
    15c4:	21000104 	addi	r4,r4,4
    15c8:	3911c83a 	sub	r8,r7,r4
    15cc:	1a11883a 	add	r8,r3,r8
    15d0:	21bfff15 	stw	r6,-4(r4)
    15d4:	42000128 	cmpgeui	r8,r8,4
    15d8:	403ffa1e 	bne	r8,zero,15c4 <memset+0x9c>
    15dc:	393fff04 	addi	r4,r7,-4
    15e0:	2008d0ba 	srli	r4,r4,2
    15e4:	39c000cc 	andi	r7,r7,3
    15e8:	21000044 	addi	r4,r4,1
    15ec:	200890ba 	slli	r4,r4,2
    15f0:	1907883a 	add	r3,r3,r4
    15f4:	38000426 	beq	r7,zero,1608 <memset+0xe0>
    15f8:	19cf883a 	add	r7,r3,r7
    15fc:	18c00044 	addi	r3,r3,1
    1600:	197fffc5 	stb	r5,-1(r3)
    1604:	38fffd1e 	bne	r7,r3,15fc <memset+0xd4>
    1608:	f800283a 	ret
    160c:	2007883a 	mov	r3,r4
    1610:	300f883a 	mov	r7,r6
    1614:	003fd306 	br	1564 <memset+0x3c>

00001618 <_printf_r>:
    1618:	defffd04 	addi	sp,sp,-12
    161c:	2805883a 	mov	r2,r5
    1620:	dfc00015 	stw	ra,0(sp)
    1624:	d9800115 	stw	r6,4(sp)
    1628:	d9c00215 	stw	r7,8(sp)
    162c:	21400217 	ldw	r5,8(r4)
    1630:	d9c00104 	addi	r7,sp,4
    1634:	100d883a 	mov	r6,r2
    1638:	0001de40 	call	1de4 <___vfprintf_internal_r>
    163c:	dfc00017 	ldw	ra,0(sp)
    1640:	dec00304 	addi	sp,sp,12
    1644:	f800283a 	ret

00001648 <printf>:
    1648:	defffc04 	addi	sp,sp,-16
    164c:	dfc00015 	stw	ra,0(sp)
    1650:	d9400115 	stw	r5,4(sp)
    1654:	d9800215 	stw	r6,8(sp)
    1658:	d9c00315 	stw	r7,12(sp)
    165c:	00800074 	movhi	r2,1
    1660:	10877c17 	ldw	r2,7664(r2)
    1664:	200b883a 	mov	r5,r4
    1668:	d9800104 	addi	r6,sp,4
    166c:	11000217 	ldw	r4,8(r2)
    1670:	0003f6c0 	call	3f6c <__vfprintf_internal>
    1674:	dfc00017 	ldw	ra,0(sp)
    1678:	dec00404 	addi	sp,sp,16
    167c:	f800283a 	ret

00001680 <_puts_r>:
    1680:	defff504 	addi	sp,sp,-44
    1684:	dc000815 	stw	r16,32(sp)
    1688:	2021883a 	mov	r16,r4
    168c:	2809883a 	mov	r4,r5
    1690:	dc400915 	stw	r17,36(sp)
    1694:	dfc00a15 	stw	ra,40(sp)
    1698:	2823883a 	mov	r17,r5
    169c:	0001adc0 	call	1adc <strlen>
    16a0:	11000044 	addi	r4,r2,1
    16a4:	d8800515 	stw	r2,20(sp)
    16a8:	00800044 	movi	r2,1
    16ac:	00c00074 	movhi	r3,1
    16b0:	d8800715 	stw	r2,28(sp)
    16b4:	d8800404 	addi	r2,sp,16
    16b8:	18ff0e04 	addi	r3,r3,-968
    16bc:	d8800115 	stw	r2,4(sp)
    16c0:	00800084 	movi	r2,2
    16c4:	dc400415 	stw	r17,16(sp)
    16c8:	d8c00615 	stw	r3,24(sp)
    16cc:	d9000315 	stw	r4,12(sp)
    16d0:	d8800215 	stw	r2,8(sp)
    16d4:	81400217 	ldw	r5,8(r16)
    16d8:	80000226 	beq	r16,zero,16e4 <_puts_r+0x64>
    16dc:	80800e17 	ldw	r2,56(r16)
    16e0:	10001326 	beq	r2,zero,1730 <_puts_r+0xb0>
    16e4:	2880030b 	ldhu	r2,12(r5)
    16e8:	10c8000c 	andi	r3,r2,8192
    16ec:	1800061e 	bne	r3,zero,1708 <_puts_r+0x88>
    16f0:	28c01917 	ldw	r3,100(r5)
    16f4:	0137ffc4 	movi	r4,-8193
    16f8:	10880014 	ori	r2,r2,8192
    16fc:	1906703a 	and	r3,r3,r4
    1700:	2880030d 	sth	r2,12(r5)
    1704:	28c01915 	stw	r3,100(r5)
    1708:	d9800104 	addi	r6,sp,4
    170c:	8009883a 	mov	r4,r16
    1710:	000632c0 	call	632c <__sfvwrite_r>
    1714:	10000b1e 	bne	r2,zero,1744 <_puts_r+0xc4>
    1718:	00800284 	movi	r2,10
    171c:	dfc00a17 	ldw	ra,40(sp)
    1720:	dc400917 	ldw	r17,36(sp)
    1724:	dc000817 	ldw	r16,32(sp)
    1728:	dec00b04 	addi	sp,sp,44
    172c:	f800283a 	ret
    1730:	8009883a 	mov	r4,r16
    1734:	d9400015 	stw	r5,0(sp)
    1738:	00009ac0 	call	9ac <__sinit>
    173c:	d9400017 	ldw	r5,0(sp)
    1740:	003fe806 	br	16e4 <_puts_r+0x64>
    1744:	00bfffc4 	movi	r2,-1
    1748:	003ff406 	br	171c <_puts_r+0x9c>

0000174c <puts>:
    174c:	00800074 	movhi	r2,1
    1750:	200b883a 	mov	r5,r4
    1754:	11077c17 	ldw	r4,7664(r2)
    1758:	00016801 	jmpi	1680 <_puts_r>

0000175c <lflush>:
    175c:	2080030b 	ldhu	r2,12(r4)
    1760:	1080024c 	andi	r2,r2,9
    1764:	10800258 	cmpnei	r2,r2,9
    1768:	10000226 	beq	r2,zero,1774 <lflush+0x18>
    176c:	0005883a 	mov	r2,zero
    1770:	f800283a 	ret
    1774:	0005eec1 	jmpi	5eec <fflush>

00001778 <__srefill_r>:
    1778:	defffc04 	addi	sp,sp,-16
    177c:	dc400115 	stw	r17,4(sp)
    1780:	dc000015 	stw	r16,0(sp)
    1784:	dfc00315 	stw	ra,12(sp)
    1788:	dc800215 	stw	r18,8(sp)
    178c:	2023883a 	mov	r17,r4
    1790:	2821883a 	mov	r16,r5
    1794:	20000226 	beq	r4,zero,17a0 <__srefill_r+0x28>
    1798:	20800e17 	ldw	r2,56(r4)
    179c:	10003a26 	beq	r2,zero,1888 <__srefill_r+0x110>
    17a0:	80c0030b 	ldhu	r3,12(r16)
    17a4:	1908000c 	andi	r4,r3,8192
    17a8:	1805883a 	mov	r2,r3
    17ac:	2000071e 	bne	r4,zero,17cc <__srefill_r+0x54>
    17b0:	81001917 	ldw	r4,100(r16)
    17b4:	18880014 	ori	r2,r3,8192
    17b8:	00f7ffc4 	movi	r3,-8193
    17bc:	20c8703a 	and	r4,r4,r3
    17c0:	8080030d 	sth	r2,12(r16)
    17c4:	1007883a 	mov	r3,r2
    17c8:	81001915 	stw	r4,100(r16)
    17cc:	80000115 	stw	zero,4(r16)
    17d0:	1100080c 	andi	r4,r2,32
    17d4:	20004d1e 	bne	r4,zero,190c <__srefill_r+0x194>
    17d8:	1100010c 	andi	r4,r2,4
    17dc:	20001c1e 	bne	r4,zero,1850 <__srefill_r+0xd8>
    17e0:	1100040c 	andi	r4,r2,16
    17e4:	20005126 	beq	r4,zero,192c <__srefill_r+0x1b4>
    17e8:	1080020c 	andi	r2,r2,8
    17ec:	1000371e 	bne	r2,zero,18cc <__srefill_r+0x154>
    17f0:	18c00114 	ori	r3,r3,4
    17f4:	80c0030d 	sth	r3,12(r16)
    17f8:	80800417 	ldw	r2,16(r16)
    17fc:	10003c26 	beq	r2,zero,18f0 <__srefill_r+0x178>
    1800:	8480030b 	ldhu	r18,12(r16)
    1804:	908000cc 	andi	r2,r18,3
    1808:	1000211e 	bne	r2,zero,1890 <__srefill_r+0x118>
    180c:	81800417 	ldw	r6,16(r16)
    1810:	80800817 	ldw	r2,32(r16)
    1814:	81c00517 	ldw	r7,20(r16)
    1818:	81400717 	ldw	r5,28(r16)
    181c:	81800015 	stw	r6,0(r16)
    1820:	8809883a 	mov	r4,r17
    1824:	103ee83a 	callr	r2
    1828:	1007883a 	mov	r3,r2
    182c:	80800115 	stw	r2,4(r16)
    1830:	0005883a 	mov	r2,zero
    1834:	00c0370e 	bge	zero,r3,1914 <__srefill_r+0x19c>
    1838:	dfc00317 	ldw	ra,12(sp)
    183c:	dc800217 	ldw	r18,8(sp)
    1840:	dc400117 	ldw	r17,4(sp)
    1844:	dc000017 	ldw	r16,0(sp)
    1848:	dec00404 	addi	sp,sp,16
    184c:	f800283a 	ret
    1850:	81400c17 	ldw	r5,48(r16)
    1854:	283fe826 	beq	r5,zero,17f8 <__srefill_r+0x80>
    1858:	80801004 	addi	r2,r16,64
    185c:	28800226 	beq	r5,r2,1868 <__srefill_r+0xf0>
    1860:	8809883a 	mov	r4,r17
    1864:	00060300 	call	6030 <_free_r>
    1868:	80800f17 	ldw	r2,60(r16)
    186c:	80000c15 	stw	zero,48(r16)
    1870:	80800115 	stw	r2,4(r16)
    1874:	103fe026 	beq	r2,zero,17f8 <__srefill_r+0x80>
    1878:	80c00e17 	ldw	r3,56(r16)
    187c:	0005883a 	mov	r2,zero
    1880:	80c00015 	stw	r3,0(r16)
    1884:	003fec06 	br	1838 <__srefill_r+0xc0>
    1888:	00009ac0 	call	9ac <__sinit>
    188c:	003fc406 	br	17a0 <__srefill_r+0x28>
    1890:	00800074 	movhi	r2,1
    1894:	11077b17 	ldw	r4,7660(r2)
    1898:	01400034 	movhi	r5,0
    189c:	00800044 	movi	r2,1
    18a0:	8080030d 	sth	r2,12(r16)
    18a4:	2945d704 	addi	r5,r5,5980
    18a8:	00009f40 	call	9f4 <_fwalk>
    18ac:	9080024c 	andi	r2,r18,9
    18b0:	8480030d 	sth	r18,12(r16)
    18b4:	10800258 	cmpnei	r2,r2,9
    18b8:	103fd41e 	bne	r2,zero,180c <__srefill_r+0x94>
    18bc:	800b883a 	mov	r5,r16
    18c0:	8809883a 	mov	r4,r17
    18c4:	0005c640 	call	5c64 <__sflush_r>
    18c8:	003fd006 	br	180c <__srefill_r+0x94>
    18cc:	800b883a 	mov	r5,r16
    18d0:	8809883a 	mov	r4,r17
    18d4:	0005e8c0 	call	5e8c <_fflush_r>
    18d8:	10000c1e 	bne	r2,zero,190c <__srefill_r+0x194>
    18dc:	80c0030b 	ldhu	r3,12(r16)
    18e0:	80000215 	stw	zero,8(r16)
    18e4:	80000615 	stw	zero,24(r16)
    18e8:	18fffdcc 	andi	r3,r3,65527
    18ec:	003fc006 	br	17f0 <__srefill_r+0x78>
    18f0:	800b883a 	mov	r5,r16
    18f4:	8809883a 	mov	r4,r17
    18f8:	000691c0 	call	691c <__smakebuf_r>
    18fc:	003fc006 	br	1800 <__srefill_r+0x88>
    1900:	10801014 	ori	r2,r2,64
    1904:	80000115 	stw	zero,4(r16)
    1908:	8080030d 	sth	r2,12(r16)
    190c:	00bfffc4 	movi	r2,-1
    1910:	003fc906 	br	1838 <__srefill_r+0xc0>
    1914:	8080030b 	ldhu	r2,12(r16)
    1918:	183ff91e 	bne	r3,zero,1900 <__srefill_r+0x188>
    191c:	10800814 	ori	r2,r2,32
    1920:	8080030d 	sth	r2,12(r16)
    1924:	00bfffc4 	movi	r2,-1
    1928:	003fc306 	br	1838 <__srefill_r+0xc0>
    192c:	00800244 	movi	r2,9
    1930:	88800015 	stw	r2,0(r17)
    1934:	18c01014 	ori	r3,r3,64
    1938:	80c0030d 	sth	r3,12(r16)
    193c:	00bfffc4 	movi	r2,-1
    1940:	003fbd06 	br	1838 <__srefill_r+0xc0>

00001944 <_sbrk_r>:
    1944:	defffe04 	addi	sp,sp,-8
    1948:	dc000015 	stw	r16,0(sp)
    194c:	00800074 	movhi	r2,1
    1950:	2021883a 	mov	r16,r4
    1954:	2809883a 	mov	r4,r5
    1958:	dfc00115 	stw	ra,4(sp)
    195c:	100ea715 	stw	zero,15004(r2)
    1960:	000dd440 	call	dd44 <sbrk>
    1964:	10ffffd8 	cmpnei	r3,r2,-1
    1968:	18000426 	beq	r3,zero,197c <_sbrk_r+0x38>
    196c:	dfc00117 	ldw	ra,4(sp)
    1970:	dc000017 	ldw	r16,0(sp)
    1974:	dec00204 	addi	sp,sp,8
    1978:	f800283a 	ret
    197c:	00c00074 	movhi	r3,1
    1980:	18cea717 	ldw	r3,15004(r3)
    1984:	183ff926 	beq	r3,zero,196c <_sbrk_r+0x28>
    1988:	80c00015 	stw	r3,0(r16)
    198c:	dfc00117 	ldw	ra,4(sp)
    1990:	dc000017 	ldw	r16,0(sp)
    1994:	dec00204 	addi	sp,sp,8
    1998:	f800283a 	ret

0000199c <__sread>:
    199c:	defffe04 	addi	sp,sp,-8
    19a0:	dc000015 	stw	r16,0(sp)
    19a4:	2821883a 	mov	r16,r5
    19a8:	2940038f 	ldh	r5,14(r5)
    19ac:	dfc00115 	stw	ra,4(sp)
    19b0:	0007b380 	call	7b38 <_read_r>
    19b4:	10000716 	blt	r2,zero,19d4 <__sread+0x38>
    19b8:	80c01417 	ldw	r3,80(r16)
    19bc:	1887883a 	add	r3,r3,r2
    19c0:	80c01415 	stw	r3,80(r16)
    19c4:	dfc00117 	ldw	ra,4(sp)
    19c8:	dc000017 	ldw	r16,0(sp)
    19cc:	dec00204 	addi	sp,sp,8
    19d0:	f800283a 	ret
    19d4:	80c0030b 	ldhu	r3,12(r16)
    19d8:	18fbffcc 	andi	r3,r3,61439
    19dc:	80c0030d 	sth	r3,12(r16)
    19e0:	dfc00117 	ldw	ra,4(sp)
    19e4:	dc000017 	ldw	r16,0(sp)
    19e8:	dec00204 	addi	sp,sp,8
    19ec:	f800283a 	ret

000019f0 <__seofread>:
    19f0:	0005883a 	mov	r2,zero
    19f4:	f800283a 	ret

000019f8 <__swrite>:
    19f8:	2880030b 	ldhu	r2,12(r5)
    19fc:	defffb04 	addi	sp,sp,-20
    1a00:	dcc00315 	stw	r19,12(sp)
    1a04:	dc800215 	stw	r18,8(sp)
    1a08:	dc400115 	stw	r17,4(sp)
    1a0c:	dc000015 	stw	r16,0(sp)
    1a10:	dfc00415 	stw	ra,16(sp)
    1a14:	10c0400c 	andi	r3,r2,256
    1a18:	2821883a 	mov	r16,r5
    1a1c:	2023883a 	mov	r17,r4
    1a20:	3025883a 	mov	r18,r6
    1a24:	3827883a 	mov	r19,r7
    1a28:	2940038f 	ldh	r5,14(r5)
    1a2c:	18000c1e 	bne	r3,zero,1a60 <__swrite+0x68>
    1a30:	10bbffcc 	andi	r2,r2,61439
    1a34:	980f883a 	mov	r7,r19
    1a38:	900d883a 	mov	r6,r18
    1a3c:	8809883a 	mov	r4,r17
    1a40:	8080030d 	sth	r2,12(r16)
    1a44:	dfc00417 	ldw	ra,16(sp)
    1a48:	dcc00317 	ldw	r19,12(sp)
    1a4c:	dc800217 	ldw	r18,8(sp)
    1a50:	dc400117 	ldw	r17,4(sp)
    1a54:	dc000017 	ldw	r16,0(sp)
    1a58:	dec00504 	addi	sp,sp,20
    1a5c:	00040441 	jmpi	4044 <_write_r>
    1a60:	01c00084 	movi	r7,2
    1a64:	000d883a 	mov	r6,zero
    1a68:	00068200 	call	6820 <_lseek_r>
    1a6c:	8080030b 	ldhu	r2,12(r16)
    1a70:	8140038f 	ldh	r5,14(r16)
    1a74:	003fee06 	br	1a30 <__swrite+0x38>

00001a78 <__sseek>:
    1a78:	defffe04 	addi	sp,sp,-8
    1a7c:	dc000015 	stw	r16,0(sp)
    1a80:	2821883a 	mov	r16,r5
    1a84:	2940038f 	ldh	r5,14(r5)
    1a88:	dfc00115 	stw	ra,4(sp)
    1a8c:	00068200 	call	6820 <_lseek_r>
    1a90:	10ffffd8 	cmpnei	r3,r2,-1
    1a94:	18000826 	beq	r3,zero,1ab8 <__sseek+0x40>
    1a98:	80c0030b 	ldhu	r3,12(r16)
    1a9c:	80801415 	stw	r2,80(r16)
    1aa0:	18c40014 	ori	r3,r3,4096
    1aa4:	80c0030d 	sth	r3,12(r16)
    1aa8:	dfc00117 	ldw	ra,4(sp)
    1aac:	dc000017 	ldw	r16,0(sp)
    1ab0:	dec00204 	addi	sp,sp,8
    1ab4:	f800283a 	ret
    1ab8:	80c0030b 	ldhu	r3,12(r16)
    1abc:	18fbffcc 	andi	r3,r3,61439
    1ac0:	80c0030d 	sth	r3,12(r16)
    1ac4:	dfc00117 	ldw	ra,4(sp)
    1ac8:	dc000017 	ldw	r16,0(sp)
    1acc:	dec00204 	addi	sp,sp,8
    1ad0:	f800283a 	ret

00001ad4 <__sclose>:
    1ad4:	2940038f 	ldh	r5,14(r5)
    1ad8:	00042081 	jmpi	4208 <_close_r>

00001adc <strlen>:
    1adc:	208000cc 	andi	r2,r4,3
    1ae0:	10002026 	beq	r2,zero,1b64 <strlen+0x88>
    1ae4:	20800007 	ldb	r2,0(r4)
    1ae8:	10002026 	beq	r2,zero,1b6c <strlen+0x90>
    1aec:	2005883a 	mov	r2,r4
    1af0:	00000206 	br	1afc <strlen+0x20>
    1af4:	10c00007 	ldb	r3,0(r2)
    1af8:	18001826 	beq	r3,zero,1b5c <strlen+0x80>
    1afc:	10800044 	addi	r2,r2,1
    1b00:	10c000cc 	andi	r3,r2,3
    1b04:	183ffb1e 	bne	r3,zero,1af4 <strlen+0x18>
    1b08:	11400017 	ldw	r5,0(r2)
    1b0c:	01ffbff4 	movhi	r7,65279
    1b10:	39ffbfc4 	addi	r7,r7,-257
    1b14:	29c7883a 	add	r3,r5,r7
    1b18:	01a02074 	movhi	r6,32897
    1b1c:	014a303a 	nor	r5,zero,r5
    1b20:	1946703a 	and	r3,r3,r5
    1b24:	31a02004 	addi	r6,r6,-32640
    1b28:	1986703a 	and	r3,r3,r6
    1b2c:	1800091e 	bne	r3,zero,1b54 <strlen+0x78>
    1b30:	10800104 	addi	r2,r2,4
    1b34:	11400017 	ldw	r5,0(r2)
    1b38:	29c7883a 	add	r3,r5,r7
    1b3c:	014a303a 	nor	r5,zero,r5
    1b40:	1946703a 	and	r3,r3,r5
    1b44:	1986703a 	and	r3,r3,r6
    1b48:	183ff926 	beq	r3,zero,1b30 <strlen+0x54>
    1b4c:	00000106 	br	1b54 <strlen+0x78>
    1b50:	10800044 	addi	r2,r2,1
    1b54:	10c00007 	ldb	r3,0(r2)
    1b58:	183ffd1e 	bne	r3,zero,1b50 <strlen+0x74>
    1b5c:	1105c83a 	sub	r2,r2,r4
    1b60:	f800283a 	ret
    1b64:	2005883a 	mov	r2,r4
    1b68:	003fe706 	br	1b08 <strlen+0x2c>
    1b6c:	0005883a 	mov	r2,zero
    1b70:	f800283a 	ret

00001b74 <_strtol_l.isra.0>:
    1b74:	defff404 	addi	sp,sp,-48
    1b78:	ddc00915 	stw	r23,36(sp)
    1b7c:	dd000615 	stw	r20,24(sp)
    1b80:	dcc00515 	stw	r19,20(sp)
    1b84:	dfc00b15 	stw	ra,44(sp)
    1b88:	df000a15 	stw	fp,40(sp)
    1b8c:	dd800815 	stw	r22,32(sp)
    1b90:	dd400715 	stw	r21,28(sp)
    1b94:	dc800415 	stw	r18,16(sp)
    1b98:	dc400315 	stw	r17,12(sp)
    1b9c:	dc000215 	stw	r16,8(sp)
    1ba0:	2827883a 	mov	r19,r5
    1ba4:	d9000115 	stw	r4,4(sp)
    1ba8:	3029883a 	mov	r20,r6
    1bac:	382f883a 	mov	r23,r7
    1bb0:	2807883a 	mov	r3,r5
    1bb4:	00000106 	br	1bbc <_strtol_l.isra.0+0x48>
    1bb8:	e007883a 	mov	r3,fp
    1bbc:	1f000044 	addi	fp,r3,1
    1bc0:	e43fffc3 	ldbu	r16,-1(fp)
    1bc4:	00800074 	movhi	r2,1
    1bc8:	8085883a 	add	r2,r16,r2
    1bcc:	10bf27c3 	ldbu	r2,-865(r2)
    1bd0:	1080020c 	andi	r2,r2,8
    1bd4:	103ff81e 	bne	r2,zero,1bb8 <_strtol_l.isra.0+0x44>
    1bd8:	80800b58 	cmpnei	r2,r16,45
    1bdc:	10005826 	beq	r2,zero,1d40 <_strtol_l.isra.0+0x1cc>
    1be0:	80800ae0 	cmpeqi	r2,r16,43
    1be4:	10003d1e 	bne	r2,zero,1cdc <_strtol_l.isra.0+0x168>
    1be8:	002b883a 	mov	r21,zero
    1bec:	b8003f26 	beq	r23,zero,1cec <_strtol_l.isra.0+0x178>
    1bf0:	b8800420 	cmpeqi	r2,r23,16
    1bf4:	1000561e 	bne	r2,zero,1d50 <_strtol_l.isra.0+0x1dc>
    1bf8:	b823883a 	mov	r17,r23
    1bfc:	04a00034 	movhi	r18,32768
    1c00:	a800011e 	bne	r21,zero,1c08 <_strtol_l.isra.0+0x94>
    1c04:	94bfffc4 	addi	r18,r18,-1
    1c08:	880b883a 	mov	r5,r17
    1c0c:	9009883a 	mov	r4,r18
    1c10:	000abdc0 	call	abdc <__umodsi3>
    1c14:	880b883a 	mov	r5,r17
    1c18:	9009883a 	mov	r4,r18
    1c1c:	d8800015 	stw	r2,0(sp)
    1c20:	000ab780 	call	ab78 <__udivsi3>
    1c24:	80fff404 	addi	r3,r16,-48
    1c28:	190002a8 	cmpgeui	r4,r3,10
    1c2c:	102d883a 	mov	r22,r2
    1c30:	000d883a 	mov	r6,zero
    1c34:	000b883a 	mov	r5,zero
    1c38:	20000f1e 	bne	r4,zero,1c78 <_strtol_l.isra.0+0x104>
    1c3c:	1821883a 	mov	r16,r3
    1c40:	85c0120e 	bge	r16,r23,1c8c <_strtol_l.isra.0+0x118>
    1c44:	30ffffe0 	cmpeqi	r3,r6,-1
    1c48:	1800061e 	bne	r3,zero,1c64 <_strtol_l.isra.0+0xf0>
    1c4c:	b1402e36 	bltu	r22,r5,1d08 <_strtol_l.isra.0+0x194>
    1c50:	b1402b26 	beq	r22,r5,1d00 <_strtol_l.isra.0+0x18c>
    1c54:	8809883a 	mov	r4,r17
    1c58:	000ac380 	call	ac38 <__mulsi3>
    1c5c:	808b883a 	add	r5,r16,r2
    1c60:	01800044 	movi	r6,1
    1c64:	e7000044 	addi	fp,fp,1
    1c68:	e43fffc3 	ldbu	r16,-1(fp)
    1c6c:	80fff404 	addi	r3,r16,-48
    1c70:	190002a8 	cmpgeui	r4,r3,10
    1c74:	203ff126 	beq	r4,zero,1c3c <_strtol_l.isra.0+0xc8>
    1c78:	80ffefc4 	addi	r3,r16,-65
    1c7c:	18c006a8 	cmpgeui	r3,r3,26
    1c80:	1800231e 	bne	r3,zero,1d10 <_strtol_l.isra.0+0x19c>
    1c84:	843ff244 	addi	r16,r16,-55
    1c88:	85ffee16 	blt	r16,r23,1c44 <_strtol_l.isra.0+0xd0>
    1c8c:	30bfffd8 	cmpnei	r2,r6,-1
    1c90:	10002426 	beq	r2,zero,1d24 <_strtol_l.isra.0+0x1b0>
    1c94:	a8000126 	beq	r21,zero,1c9c <_strtol_l.isra.0+0x128>
    1c98:	014bc83a 	sub	r5,zero,r5
    1c9c:	a0000226 	beq	r20,zero,1ca8 <_strtol_l.isra.0+0x134>
    1ca0:	3000411e 	bne	r6,zero,1da8 <_strtol_l.isra.0+0x234>
    1ca4:	a4c00015 	stw	r19,0(r20)
    1ca8:	2805883a 	mov	r2,r5
    1cac:	dfc00b17 	ldw	ra,44(sp)
    1cb0:	df000a17 	ldw	fp,40(sp)
    1cb4:	ddc00917 	ldw	r23,36(sp)
    1cb8:	dd800817 	ldw	r22,32(sp)
    1cbc:	dd400717 	ldw	r21,28(sp)
    1cc0:	dd000617 	ldw	r20,24(sp)
    1cc4:	dcc00517 	ldw	r19,20(sp)
    1cc8:	dc800417 	ldw	r18,16(sp)
    1ccc:	dc400317 	ldw	r17,12(sp)
    1cd0:	dc000217 	ldw	r16,8(sp)
    1cd4:	dec00c04 	addi	sp,sp,48
    1cd8:	f800283a 	ret
    1cdc:	e4000003 	ldbu	r16,0(fp)
    1ce0:	002b883a 	mov	r21,zero
    1ce4:	1f000084 	addi	fp,r3,2
    1ce8:	b83fc11e 	bne	r23,zero,1bf0 <_strtol_l.isra.0+0x7c>
    1cec:	80800c20 	cmpeqi	r2,r16,48
    1cf0:	1000241e 	bne	r2,zero,1d84 <_strtol_l.isra.0+0x210>
    1cf4:	04400284 	movi	r17,10
    1cf8:	05c00284 	movi	r23,10
    1cfc:	003fbf06 	br	1bfc <_strtol_l.isra.0+0x88>
    1d00:	d8800017 	ldw	r2,0(sp)
    1d04:	143fd30e 	bge	r2,r16,1c54 <_strtol_l.isra.0+0xe0>
    1d08:	01bfffc4 	movi	r6,-1
    1d0c:	003fd506 	br	1c64 <_strtol_l.isra.0+0xf0>
    1d10:	80bfe7c4 	addi	r2,r16,-97
    1d14:	108006a8 	cmpgeui	r2,r2,26
    1d18:	103fdc1e 	bne	r2,zero,1c8c <_strtol_l.isra.0+0x118>
    1d1c:	843fea44 	addi	r16,r16,-87
    1d20:	003fc706 	br	1c40 <_strtol_l.isra.0+0xcc>
    1d24:	d8c00117 	ldw	r3,4(sp)
    1d28:	00800884 	movi	r2,34
    1d2c:	18800015 	stw	r2,0(r3)
    1d30:	a0001b26 	beq	r20,zero,1da0 <_strtol_l.isra.0+0x22c>
    1d34:	e4ffffc4 	addi	r19,fp,-1
    1d38:	900b883a 	mov	r5,r18
    1d3c:	003fd906 	br	1ca4 <_strtol_l.isra.0+0x130>
    1d40:	e4000003 	ldbu	r16,0(fp)
    1d44:	05400044 	movi	r21,1
    1d48:	1f000084 	addi	fp,r3,2
    1d4c:	003fa706 	br	1bec <_strtol_l.isra.0+0x78>
    1d50:	80800c18 	cmpnei	r2,r16,48
    1d54:	1000041e 	bne	r2,zero,1d68 <_strtol_l.isra.0+0x1f4>
    1d58:	e0800003 	ldbu	r2,0(fp)
    1d5c:	108037cc 	andi	r2,r2,223
    1d60:	10801620 	cmpeqi	r2,r2,88
    1d64:	1000021e 	bne	r2,zero,1d70 <_strtol_l.isra.0+0x1fc>
    1d68:	04400404 	movi	r17,16
    1d6c:	003fa306 	br	1bfc <_strtol_l.isra.0+0x88>
    1d70:	e4000043 	ldbu	r16,1(fp)
    1d74:	04400404 	movi	r17,16
    1d78:	e7000084 	addi	fp,fp,2
    1d7c:	05c00404 	movi	r23,16
    1d80:	003f9e06 	br	1bfc <_strtol_l.isra.0+0x88>
    1d84:	e0800003 	ldbu	r2,0(fp)
    1d88:	108037cc 	andi	r2,r2,223
    1d8c:	10801620 	cmpeqi	r2,r2,88
    1d90:	103ff71e 	bne	r2,zero,1d70 <_strtol_l.isra.0+0x1fc>
    1d94:	04400204 	movi	r17,8
    1d98:	05c00204 	movi	r23,8
    1d9c:	003f9706 	br	1bfc <_strtol_l.isra.0+0x88>
    1da0:	900b883a 	mov	r5,r18
    1da4:	003fc006 	br	1ca8 <_strtol_l.isra.0+0x134>
    1da8:	2825883a 	mov	r18,r5
    1dac:	003fe106 	br	1d34 <_strtol_l.isra.0+0x1c0>

00001db0 <_strtol_r>:
    1db0:	0001b741 	jmpi	1b74 <_strtol_l.isra.0>

00001db4 <strtol_l>:
    1db4:	00800074 	movhi	r2,1
    1db8:	300f883a 	mov	r7,r6
    1dbc:	280d883a 	mov	r6,r5
    1dc0:	200b883a 	mov	r5,r4
    1dc4:	11077c17 	ldw	r4,7664(r2)
    1dc8:	0001b741 	jmpi	1b74 <_strtol_l.isra.0>

00001dcc <strtol>:
    1dcc:	00800074 	movhi	r2,1
    1dd0:	300f883a 	mov	r7,r6
    1dd4:	280d883a 	mov	r6,r5
    1dd8:	200b883a 	mov	r5,r4
    1ddc:	11077c17 	ldw	r4,7664(r2)
    1de0:	0001b741 	jmpi	1b74 <_strtol_l.isra.0>

00001de4 <___vfprintf_internal_r>:
    1de4:	deffbd04 	addi	sp,sp,-268
    1de8:	dfc04215 	stw	ra,264(sp)
    1dec:	dd003d15 	stw	r20,244(sp)
    1df0:	dcc03c15 	stw	r19,240(sp)
    1df4:	dc003915 	stw	r16,228(sp)
    1df8:	d9000515 	stw	r4,20(sp)
    1dfc:	2021883a 	mov	r16,r4
    1e00:	2827883a 	mov	r19,r5
    1e04:	3029883a 	mov	r20,r6
    1e08:	d9c00615 	stw	r7,24(sp)
    1e0c:	df004115 	stw	fp,260(sp)
    1e10:	ddc04015 	stw	r23,256(sp)
    1e14:	dd803f15 	stw	r22,252(sp)
    1e18:	dd403e15 	stw	r21,248(sp)
    1e1c:	dc803b15 	stw	r18,236(sp)
    1e20:	dc403a15 	stw	r17,232(sp)
    1e24:	00068080 	call	6808 <_localeconv_r>
    1e28:	10800017 	ldw	r2,0(r2)
    1e2c:	1009883a 	mov	r4,r2
    1e30:	d8800d15 	stw	r2,52(sp)
    1e34:	0001adc0 	call	1adc <strlen>
    1e38:	d8800b15 	stw	r2,44(sp)
    1e3c:	80000226 	beq	r16,zero,1e48 <___vfprintf_internal_r+0x64>
    1e40:	80800e17 	ldw	r2,56(r16)
    1e44:	1002de26 	beq	r2,zero,29c0 <___vfprintf_internal_r+0xbdc>
    1e48:	9880030b 	ldhu	r2,12(r19)
    1e4c:	10c8000c 	andi	r3,r2,8192
    1e50:	1800061e 	bne	r3,zero,1e6c <___vfprintf_internal_r+0x88>
    1e54:	98c01917 	ldw	r3,100(r19)
    1e58:	0137ffc4 	movi	r4,-8193
    1e5c:	10880014 	ori	r2,r2,8192
    1e60:	1906703a 	and	r3,r3,r4
    1e64:	9880030d 	sth	r2,12(r19)
    1e68:	98c01915 	stw	r3,100(r19)
    1e6c:	10c0020c 	andi	r3,r2,8
    1e70:	18009a26 	beq	r3,zero,20dc <___vfprintf_internal_r+0x2f8>
    1e74:	98c00417 	ldw	r3,16(r19)
    1e78:	18009826 	beq	r3,zero,20dc <___vfprintf_internal_r+0x2f8>
    1e7c:	1080068c 	andi	r2,r2,26
    1e80:	10800298 	cmpnei	r2,r2,10
    1e84:	10009d26 	beq	r2,zero,20fc <___vfprintf_internal_r+0x318>
    1e88:	ddc02904 	addi	r23,sp,164
    1e8c:	ddc01c15 	stw	r23,112(sp)
    1e90:	d8001e15 	stw	zero,120(sp)
    1e94:	d8001d15 	stw	zero,116(sp)
    1e98:	d8000815 	stw	zero,32(sp)
    1e9c:	d8000915 	stw	zero,36(sp)
    1ea0:	d8000a15 	stw	zero,40(sp)
    1ea4:	b811883a 	mov	r8,r23
    1ea8:	d8000c15 	stw	zero,48(sp)
    1eac:	d8001115 	stw	zero,68(sp)
    1eb0:	d8000415 	stw	zero,16(sp)
    1eb4:	a02d883a 	mov	r22,r20
    1eb8:	b0800007 	ldb	r2,0(r22)
    1ebc:	1000a226 	beq	r2,zero,2148 <___vfprintf_internal_r+0x364>
    1ec0:	10800960 	cmpeqi	r2,r2,37
    1ec4:	1005351e 	bne	r2,zero,339c <___vfprintf_internal_r+0x15b8>
    1ec8:	b021883a 	mov	r16,r22
    1ecc:	00000206 	br	1ed8 <___vfprintf_internal_r+0xf4>
    1ed0:	18009326 	beq	r3,zero,2120 <___vfprintf_internal_r+0x33c>
    1ed4:	8821883a 	mov	r16,r17
    1ed8:	80800047 	ldb	r2,1(r16)
    1edc:	84400044 	addi	r17,r16,1
    1ee0:	10c00958 	cmpnei	r3,r2,37
    1ee4:	103ffa1e 	bne	r2,zero,1ed0 <___vfprintf_internal_r+0xec>
    1ee8:	8da5c83a 	sub	r18,r17,r22
    1eec:	90009626 	beq	r18,zero,2148 <___vfprintf_internal_r+0x364>
    1ef0:	d8c01e17 	ldw	r3,120(sp)
    1ef4:	d8801d17 	ldw	r2,116(sp)
    1ef8:	45800015 	stw	r22,0(r8)
    1efc:	1c87883a 	add	r3,r3,r18
    1f00:	10800044 	addi	r2,r2,1
    1f04:	d8801d15 	stw	r2,116(sp)
    1f08:	44800115 	stw	r18,4(r8)
    1f0c:	d8c01e15 	stw	r3,120(sp)
    1f10:	10800208 	cmpgei	r2,r2,8
    1f14:	1000851e 	bne	r2,zero,212c <___vfprintf_internal_r+0x348>
    1f18:	42000204 	addi	r8,r8,8
    1f1c:	d8c00417 	ldw	r3,16(sp)
    1f20:	80800047 	ldb	r2,1(r16)
    1f24:	1c87883a 	add	r3,r3,r18
    1f28:	d8c00415 	stw	r3,16(sp)
    1f2c:	10008626 	beq	r2,zero,2148 <___vfprintf_internal_r+0x364>
    1f30:	8a800047 	ldb	r10,1(r17)
    1f34:	8d800044 	addi	r22,r17,1
    1f38:	d8001545 	stb	zero,85(sp)
    1f3c:	0009883a 	mov	r4,zero
    1f40:	000b883a 	mov	r5,zero
    1f44:	02ffffc4 	movi	r11,-1
    1f48:	0021883a 	mov	r16,zero
    1f4c:	0019883a 	mov	r12,zero
    1f50:	b5800044 	addi	r22,r22,1
    1f54:	5039883a 	mov	fp,r10
    1f58:	e0bff804 	addi	r2,fp,-32
    1f5c:	10c01668 	cmpgeui	r3,r2,89
    1f60:	18009d1e 	bne	r3,zero,21d8 <___vfprintf_internal_r+0x3f4>
    1f64:	100490ba 	slli	r2,r2,2
    1f68:	00c00034 	movhi	r3,0
    1f6c:	10c7883a 	add	r3,r2,r3
    1f70:	1887de17 	ldw	r2,8056(r3)
    1f74:	1000683a 	jmp	r2
    1f78:	000022b0 	cmpltui	zero,zero,138
    1f7c:	000021d8 	cmpnei	zero,zero,135
    1f80:	000021d8 	cmpnei	zero,zero,135
    1f84:	000022a4 	muli	zero,zero,138
    1f88:	000021d8 	cmpnei	zero,zero,135
    1f8c:	000021d8 	cmpnei	zero,zero,135
    1f90:	000021d8 	cmpnei	zero,zero,135
    1f94:	000021d8 	cmpnei	zero,zero,135
    1f98:	000021d8 	cmpnei	zero,zero,135
    1f9c:	000021d8 	cmpnei	zero,zero,135
    1fa0:	0000227c 	xorhi	zero,zero,137
    1fa4:	0000226c 	andhi	zero,zero,137
    1fa8:	000021d8 	cmpnei	zero,zero,135
    1fac:	00002254 	movui	zero,137
    1fb0:	00002208 	cmpgei	zero,zero,136
    1fb4:	000021d8 	cmpnei	zero,zero,135
    1fb8:	000021fc 	xorhi	zero,zero,135
    1fbc:	000021a0 	cmpeqi	zero,zero,134
    1fc0:	000021a0 	cmpeqi	zero,zero,134
    1fc4:	000021a0 	cmpeqi	zero,zero,134
    1fc8:	000021a0 	cmpeqi	zero,zero,134
    1fcc:	000021a0 	cmpeqi	zero,zero,134
    1fd0:	000021a0 	cmpeqi	zero,zero,134
    1fd4:	000021a0 	cmpeqi	zero,zero,134
    1fd8:	000021a0 	cmpeqi	zero,zero,134
    1fdc:	000021a0 	cmpeqi	zero,zero,134
    1fe0:	000021d8 	cmpnei	zero,zero,135
    1fe4:	000021d8 	cmpnei	zero,zero,135
    1fe8:	000021d8 	cmpnei	zero,zero,135
    1fec:	000021d8 	cmpnei	zero,zero,135
    1ff0:	000021d8 	cmpnei	zero,zero,135
    1ff4:	000021d8 	cmpnei	zero,zero,135
    1ff8:	000021d8 	cmpnei	zero,zero,135
    1ffc:	000021d8 	cmpnei	zero,zero,135
    2000:	000021d8 	cmpnei	zero,zero,135
    2004:	000021d8 	cmpnei	zero,zero,135
    2008:	000027c4 	movi	zero,159
    200c:	000026e4 	muli	zero,zero,155
    2010:	000021d8 	cmpnei	zero,zero,135
    2014:	000026e4 	muli	zero,zero,155
    2018:	000021d8 	cmpnei	zero,zero,135
    201c:	000021d8 	cmpnei	zero,zero,135
    2020:	000021d8 	cmpnei	zero,zero,135
    2024:	000021d8 	cmpnei	zero,zero,135
    2028:	000026d8 	cmpnei	zero,zero,155
    202c:	000021d8 	cmpnei	zero,zero,135
    2030:	000021d8 	cmpnei	zero,zero,135
    2034:	000026a4 	muli	zero,zero,154
    2038:	000021d8 	cmpnei	zero,zero,135
    203c:	000021d8 	cmpnei	zero,zero,135
    2040:	000021d8 	cmpnei	zero,zero,135
    2044:	000021d8 	cmpnei	zero,zero,135
    2048:	000021d8 	cmpnei	zero,zero,135
    204c:	000028e4 	muli	zero,zero,163
    2050:	000021d8 	cmpnei	zero,zero,135
    2054:	000021d8 	cmpnei	zero,zero,135
    2058:	0000289c 	xori	zero,zero,162
    205c:	000021d8 	cmpnei	zero,zero,135
    2060:	000021d8 	cmpnei	zero,zero,135
    2064:	000021d8 	cmpnei	zero,zero,135
    2068:	000021d8 	cmpnei	zero,zero,135
    206c:	000021d8 	cmpnei	zero,zero,135
    2070:	000021d8 	cmpnei	zero,zero,135
    2074:	000021d8 	cmpnei	zero,zero,135
    2078:	000021d8 	cmpnei	zero,zero,135
    207c:	000021d8 	cmpnei	zero,zero,135
    2080:	000021d8 	cmpnei	zero,zero,135
    2084:	00002434 	movhi	zero,144
    2088:	000023c0 	call	23c <_start+0x18>
    208c:	000026e4 	muli	zero,zero,155
    2090:	000026e4 	muli	zero,zero,155
    2094:	000026e4 	muli	zero,zero,155
    2098:	000029b4 	movhi	zero,166
    209c:	000023c0 	call	23c <_start+0x18>
    20a0:	000021d8 	cmpnei	zero,zero,135
    20a4:	000021d8 	cmpnei	zero,zero,135
    20a8:	000029a0 	cmpeqi	zero,zero,166
    20ac:	000021d8 	cmpnei	zero,zero,135
    20b0:	00002664 	muli	zero,zero,153
    20b4:	00002624 	muli	zero,zero,152
    20b8:	00002924 	muli	zero,zero,164
    20bc:	00002918 	cmpnei	zero,zero,164
    20c0:	000021d8 	cmpnei	zero,zero,135
    20c4:	00002364 	muli	zero,zero,141
    20c8:	000021d8 	cmpnei	zero,zero,135
    20cc:	00002324 	muli	zero,zero,140
    20d0:	000021d8 	cmpnei	zero,zero,135
    20d4:	000021d8 	cmpnei	zero,zero,135
    20d8:	000022dc 	xori	zero,zero,139
    20dc:	d9000517 	ldw	r4,20(sp)
    20e0:	980b883a 	mov	r5,r19
    20e4:	00040a80 	call	40a8 <__swsetup_r>
    20e8:	1007561e 	bne	r2,zero,3e44 <___vfprintf_internal_r+0x2060>
    20ec:	9880030b 	ldhu	r2,12(r19)
    20f0:	1080068c 	andi	r2,r2,26
    20f4:	10800298 	cmpnei	r2,r2,10
    20f8:	103f631e 	bne	r2,zero,1e88 <___vfprintf_internal_r+0xa4>
    20fc:	9880038f 	ldh	r2,14(r19)
    2100:	103f6116 	blt	r2,zero,1e88 <___vfprintf_internal_r+0xa4>
    2104:	d9c00617 	ldw	r7,24(sp)
    2108:	d9000517 	ldw	r4,20(sp)
    210c:	a00d883a 	mov	r6,r20
    2110:	980b883a 	mov	r5,r19
    2114:	0003f840 	call	3f84 <__sbprintf>
    2118:	d8800415 	stw	r2,16(sp)
    211c:	00001306 	br	216c <___vfprintf_internal_r+0x388>
    2120:	8da5c83a 	sub	r18,r17,r22
    2124:	903f8226 	beq	r18,zero,1f30 <___vfprintf_internal_r+0x14c>
    2128:	003f7106 	br	1ef0 <___vfprintf_internal_r+0x10c>
    212c:	d9000517 	ldw	r4,20(sp)
    2130:	d9801c04 	addi	r6,sp,112
    2134:	980b883a 	mov	r5,r19
    2138:	00082bc0 	call	82bc <__sprint_r>
    213c:	1000081e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    2140:	b811883a 	mov	r8,r23
    2144:	003f7506 	br	1f1c <___vfprintf_internal_r+0x138>
    2148:	d8801e17 	ldw	r2,120(sp)
    214c:	10000426 	beq	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    2150:	d9000517 	ldw	r4,20(sp)
    2154:	d9801c04 	addi	r6,sp,112
    2158:	980b883a 	mov	r5,r19
    215c:	00082bc0 	call	82bc <__sprint_r>
    2160:	9880030b 	ldhu	r2,12(r19)
    2164:	1080100c 	andi	r2,r2,64
    2168:	1007361e 	bne	r2,zero,3e44 <___vfprintf_internal_r+0x2060>
    216c:	d8800417 	ldw	r2,16(sp)
    2170:	dfc04217 	ldw	ra,264(sp)
    2174:	df004117 	ldw	fp,260(sp)
    2178:	ddc04017 	ldw	r23,256(sp)
    217c:	dd803f17 	ldw	r22,252(sp)
    2180:	dd403e17 	ldw	r21,248(sp)
    2184:	dd003d17 	ldw	r20,244(sp)
    2188:	dcc03c17 	ldw	r19,240(sp)
    218c:	dc803b17 	ldw	r18,236(sp)
    2190:	dc403a17 	ldw	r17,232(sp)
    2194:	dc003917 	ldw	r16,228(sp)
    2198:	dec04304 	addi	sp,sp,268
    219c:	f800283a 	ret
    21a0:	0021883a 	mov	r16,zero
    21a4:	e0fff404 	addi	r3,fp,-48
    21a8:	800490ba 	slli	r2,r16,2
    21ac:	b5800044 	addi	r22,r22,1
    21b0:	b73fffc7 	ldb	fp,-1(r22)
    21b4:	1421883a 	add	r16,r2,r16
    21b8:	8421883a 	add	r16,r16,r16
    21bc:	1c21883a 	add	r16,r3,r16
    21c0:	e0fff404 	addi	r3,fp,-48
    21c4:	188002b0 	cmpltui	r2,r3,10
    21c8:	103ff71e 	bne	r2,zero,21a8 <___vfprintf_internal_r+0x3c4>
    21cc:	e0bff804 	addi	r2,fp,-32
    21d0:	10c01668 	cmpgeui	r3,r2,89
    21d4:	183f6326 	beq	r3,zero,1f64 <___vfprintf_internal_r+0x180>
    21d8:	21003fcc 	andi	r4,r4,255
    21dc:	2006741e 	bne	r4,zero,3bb0 <___vfprintf_internal_r+0x1dcc>
    21e0:	e03fd926 	beq	fp,zero,2148 <___vfprintf_internal_r+0x364>
    21e4:	df001f05 	stb	fp,124(sp)
    21e8:	d8001545 	stb	zero,85(sp)
    21ec:	05400044 	movi	r21,1
    21f0:	05000044 	movi	r20,1
    21f4:	dc401f04 	addi	r17,sp,124
    21f8:	00009706 	br	2458 <___vfprintf_internal_r+0x674>
    21fc:	63002014 	ori	r12,r12,128
    2200:	b2800007 	ldb	r10,0(r22)
    2204:	003f5206 	br	1f50 <___vfprintf_internal_r+0x16c>
    2208:	b7000007 	ldb	fp,0(r22)
    220c:	b0800044 	addi	r2,r22,1
    2210:	e0c00aa0 	cmpeqi	r3,fp,42
    2214:	1807491e 	bne	r3,zero,3f3c <___vfprintf_internal_r+0x2158>
    2218:	e0fff404 	addi	r3,fp,-48
    221c:	198002b0 	cmpltui	r6,r3,10
    2220:	102d883a 	mov	r22,r2
    2224:	0017883a 	mov	r11,zero
    2228:	303f4b26 	beq	r6,zero,1f58 <___vfprintf_internal_r+0x174>
    222c:	580490ba 	slli	r2,r11,2
    2230:	b5800044 	addi	r22,r22,1
    2234:	b73fffc7 	ldb	fp,-1(r22)
    2238:	12d7883a 	add	r11,r2,r11
    223c:	5ad7883a 	add	r11,r11,r11
    2240:	58d7883a 	add	r11,r11,r3
    2244:	e0fff404 	addi	r3,fp,-48
    2248:	188002b0 	cmpltui	r2,r3,10
    224c:	103ff71e 	bne	r2,zero,222c <___vfprintf_internal_r+0x448>
    2250:	003f4106 	br	1f58 <___vfprintf_internal_r+0x174>
    2254:	b7000003 	ldbu	fp,0(r22)
    2258:	e2803fcc 	andi	r10,fp,255
    225c:	5280201c 	xori	r10,r10,128
    2260:	63000114 	ori	r12,r12,4
    2264:	52bfe004 	addi	r10,r10,-128
    2268:	003f3906 	br	1f50 <___vfprintf_internal_r+0x16c>
    226c:	01000044 	movi	r4,1
    2270:	01400ac4 	movi	r5,43
    2274:	b2800007 	ldb	r10,0(r22)
    2278:	003f3506 	br	1f50 <___vfprintf_internal_r+0x16c>
    227c:	d8800617 	ldw	r2,24(sp)
    2280:	b7000003 	ldbu	fp,0(r22)
    2284:	14000017 	ldw	r16,0(r2)
    2288:	10800104 	addi	r2,r2,4
    228c:	8004da16 	blt	r16,zero,35f8 <___vfprintf_internal_r+0x1814>
    2290:	d8800615 	stw	r2,24(sp)
    2294:	e2803fcc 	andi	r10,fp,255
    2298:	5280201c 	xori	r10,r10,128
    229c:	52bfe004 	addi	r10,r10,-128
    22a0:	003f2b06 	br	1f50 <___vfprintf_internal_r+0x16c>
    22a4:	63000054 	ori	r12,r12,1
    22a8:	b2800007 	ldb	r10,0(r22)
    22ac:	003f2806 	br	1f50 <___vfprintf_internal_r+0x16c>
    22b0:	28803fcc 	andi	r2,r5,255
    22b4:	1080201c 	xori	r2,r2,128
    22b8:	10bfe004 	addi	r2,r2,-128
    22bc:	b7000003 	ldbu	fp,0(r22)
    22c0:	103ff41e 	bne	r2,zero,2294 <___vfprintf_internal_r+0x4b0>
    22c4:	e2803fcc 	andi	r10,fp,255
    22c8:	5280201c 	xori	r10,r10,128
    22cc:	01000044 	movi	r4,1
    22d0:	01400804 	movi	r5,32
    22d4:	52bfe004 	addi	r10,r10,-128
    22d8:	003f1d06 	br	1f50 <___vfprintf_internal_r+0x16c>
    22dc:	21003fcc 	andi	r4,r4,255
    22e0:	2006b81e 	bne	r4,zero,3dc4 <___vfprintf_internal_r+0x1fe0>
    22e4:	00800074 	movhi	r2,1
    22e8:	10bf1804 	addi	r2,r2,-928
    22ec:	d8800c15 	stw	r2,48(sp)
    22f0:	6080080c 	andi	r2,r12,32
    22f4:	10017026 	beq	r2,zero,28b8 <___vfprintf_internal_r+0xad4>
    22f8:	d8800617 	ldw	r2,24(sp)
    22fc:	15400017 	ldw	r21,0(r2)
    2300:	15000117 	ldw	r20,4(r2)
    2304:	10800204 	addi	r2,r2,8
    2308:	d8800615 	stw	r2,24(sp)
    230c:	6080004c 	andi	r2,r12,1
    2310:	10000226 	beq	r2,zero,231c <___vfprintf_internal_r+0x538>
    2314:	ad04b03a 	or	r2,r21,r20
    2318:	1004aa1e 	bne	r2,zero,35c4 <___vfprintf_internal_r+0x17e0>
    231c:	00800084 	movi	r2,2
    2320:	00018f06 	br	2960 <___vfprintf_internal_r+0xb7c>
    2324:	21003fcc 	andi	r4,r4,255
    2328:	2006a41e 	bne	r4,zero,3dbc <___vfprintf_internal_r+0x1fd8>
    232c:	6080080c 	andi	r2,r12,32
    2330:	1001b41e 	bne	r2,zero,2a04 <___vfprintf_internal_r+0xc20>
    2334:	d8800617 	ldw	r2,24(sp)
    2338:	60c0040c 	andi	r3,r12,16
    233c:	15400017 	ldw	r21,0(r2)
    2340:	10800104 	addi	r2,r2,4
    2344:	18016e1e 	bne	r3,zero,2900 <___vfprintf_internal_r+0xb1c>
    2348:	60c0100c 	andi	r3,r12,64
    234c:	1805a526 	beq	r3,zero,39e4 <___vfprintf_internal_r+0x1c00>
    2350:	d8800615 	stw	r2,24(sp)
    2354:	ad7fffcc 	andi	r21,r21,65535
    2358:	0029883a 	mov	r20,zero
    235c:	00800044 	movi	r2,1
    2360:	00017f06 	br	2960 <___vfprintf_internal_r+0xb7c>
    2364:	d8800617 	ldw	r2,24(sp)
    2368:	d8001545 	stb	zero,85(sp)
    236c:	14400017 	ldw	r17,0(r2)
    2370:	14800104 	addi	r18,r2,4
    2374:	8804ca26 	beq	r17,zero,36a0 <___vfprintf_internal_r+0x18bc>
    2378:	da000e15 	stw	r8,56(sp)
    237c:	db000715 	stw	r12,28(sp)
    2380:	58bfffe0 	cmpeqi	r2,r11,-1
    2384:	10056c1e 	bne	r2,zero,3938 <___vfprintf_internal_r+0x1b54>
    2388:	580d883a 	mov	r6,r11
    238c:	000b883a 	mov	r5,zero
    2390:	8809883a 	mov	r4,r17
    2394:	dac00615 	stw	r11,24(sp)
    2398:	00013400 	call	1340 <memchr>
    239c:	dac00617 	ldw	r11,24(sp)
    23a0:	db000717 	ldw	r12,28(sp)
    23a4:	da000e17 	ldw	r8,56(sp)
    23a8:	10066c26 	beq	r2,zero,3d5c <___vfprintf_internal_r+0x1f78>
    23ac:	1469c83a 	sub	r20,r2,r17
    23b0:	a02b883a 	mov	r21,r20
    23b4:	a005fc16 	blt	r20,zero,3ba8 <___vfprintf_internal_r+0x1dc4>
    23b8:	dc800615 	stw	r18,24(sp)
    23bc:	00002606 	br	2458 <___vfprintf_internal_r+0x674>
    23c0:	21003fcc 	andi	r4,r4,255
    23c4:	20067b1e 	bne	r4,zero,3db4 <___vfprintf_internal_r+0x1fd0>
    23c8:	6080080c 	andi	r2,r12,32
    23cc:	10017f1e 	bne	r2,zero,29cc <___vfprintf_internal_r+0xbe8>
    23d0:	d8800617 	ldw	r2,24(sp)
    23d4:	60c0040c 	andi	r3,r12,16
    23d8:	10800104 	addi	r2,r2,4
    23dc:	1801001e 	bne	r3,zero,27e0 <___vfprintf_internal_r+0x9fc>
    23e0:	60c0100c 	andi	r3,r12,64
    23e4:	1800fe26 	beq	r3,zero,27e0 <___vfprintf_internal_r+0x9fc>
    23e8:	d8c00617 	ldw	r3,24(sp)
    23ec:	d8800615 	stw	r2,24(sp)
    23f0:	1d40000f 	ldh	r21,0(r3)
    23f4:	a829d7fa 	srai	r20,r21,31
    23f8:	a005883a 	mov	r2,r20
    23fc:	1000fe16 	blt	r2,zero,27f8 <___vfprintf_internal_r+0xa14>
    2400:	58bfffd8 	cmpnei	r2,r11,-1
    2404:	db401543 	ldbu	r13,85(sp)
    2408:	10018526 	beq	r2,zero,2a20 <___vfprintf_internal_r+0xc3c>
    240c:	00ffdfc4 	movi	r3,-129
    2410:	ad04b03a 	or	r2,r21,r20
    2414:	60d8703a 	and	r12,r12,r3
    2418:	1001811e 	bne	r2,zero,2a20 <___vfprintf_internal_r+0xc3c>
    241c:	5801831e 	bne	r11,zero,2a2c <___vfprintf_internal_r+0xc48>
    2420:	6025883a 	mov	r18,r12
    2424:	0017883a 	mov	r11,zero
    2428:	0029883a 	mov	r20,zero
    242c:	b823883a 	mov	r17,r23
    2430:	00018306 	br	2a40 <___vfprintf_internal_r+0xc5c>
    2434:	d8c00617 	ldw	r3,24(sp)
    2438:	d8001545 	stb	zero,85(sp)
    243c:	05400044 	movi	r21,1
    2440:	18800017 	ldw	r2,0(r3)
    2444:	18c00104 	addi	r3,r3,4
    2448:	d8c00615 	stw	r3,24(sp)
    244c:	d8801f05 	stb	r2,124(sp)
    2450:	05000044 	movi	r20,1
    2454:	dc401f04 	addi	r17,sp,124
    2458:	6025883a 	mov	r18,r12
    245c:	0017883a 	mov	r11,zero
    2460:	d8000715 	stw	zero,28(sp)
    2464:	9380008c 	andi	r14,r18,2
    2468:	70000126 	beq	r14,zero,2470 <___vfprintf_internal_r+0x68c>
    246c:	ad400084 	addi	r21,r21,2
    2470:	9340210c 	andi	r13,r18,132
    2474:	d8c01e17 	ldw	r3,120(sp)
    2478:	6800021e 	bne	r13,zero,2484 <___vfprintf_internal_r+0x6a0>
    247c:	854fc83a 	sub	r7,r16,r21
    2480:	01c2ce16 	blt	zero,r7,2fbc <___vfprintf_internal_r+0x11d8>
    2484:	d8801547 	ldb	r2,85(sp)
    2488:	10000c26 	beq	r2,zero,24bc <___vfprintf_internal_r+0x6d8>
    248c:	d8801d17 	ldw	r2,116(sp)
    2490:	d9001544 	addi	r4,sp,85
    2494:	18c00044 	addi	r3,r3,1
    2498:	10800044 	addi	r2,r2,1
    249c:	41000015 	stw	r4,0(r8)
    24a0:	01000044 	movi	r4,1
    24a4:	d8801d15 	stw	r2,116(sp)
    24a8:	41000115 	stw	r4,4(r8)
    24ac:	d8c01e15 	stw	r3,120(sp)
    24b0:	10800208 	cmpgei	r2,r2,8
    24b4:	1002fb1e 	bne	r2,zero,30a4 <___vfprintf_internal_r+0x12c0>
    24b8:	42000204 	addi	r8,r8,8
    24bc:	70000c26 	beq	r14,zero,24f0 <___vfprintf_internal_r+0x70c>
    24c0:	d8801d17 	ldw	r2,116(sp)
    24c4:	d9001584 	addi	r4,sp,86
    24c8:	18c00084 	addi	r3,r3,2
    24cc:	10800044 	addi	r2,r2,1
    24d0:	41000015 	stw	r4,0(r8)
    24d4:	01000084 	movi	r4,2
    24d8:	d8801d15 	stw	r2,116(sp)
    24dc:	41000115 	stw	r4,4(r8)
    24e0:	d8c01e15 	stw	r3,120(sp)
    24e4:	10800208 	cmpgei	r2,r2,8
    24e8:	1002fc1e 	bne	r2,zero,30dc <___vfprintf_internal_r+0x12f8>
    24ec:	42000204 	addi	r8,r8,8
    24f0:	6b402018 	cmpnei	r13,r13,128
    24f4:	6801cf26 	beq	r13,zero,2c34 <___vfprintf_internal_r+0xe50>
    24f8:	5d0fc83a 	sub	r7,r11,r20
    24fc:	01c20616 	blt	zero,r7,2d18 <___vfprintf_internal_r+0xf34>
    2500:	9080400c 	andi	r2,r18,256
    2504:	10017c1e 	bne	r2,zero,2af8 <___vfprintf_internal_r+0xd14>
    2508:	d8801d17 	ldw	r2,116(sp)
    250c:	1d07883a 	add	r3,r3,r20
    2510:	44400015 	stw	r17,0(r8)
    2514:	10800044 	addi	r2,r2,1
    2518:	d8801d15 	stw	r2,116(sp)
    251c:	45000115 	stw	r20,4(r8)
    2520:	d8c01e15 	stw	r3,120(sp)
    2524:	10800208 	cmpgei	r2,r2,8
    2528:	1002571e 	bne	r2,zero,2e88 <___vfprintf_internal_r+0x10a4>
    252c:	42000204 	addi	r8,r8,8
    2530:	9480010c 	andi	r18,r18,4
    2534:	90000226 	beq	r18,zero,2540 <___vfprintf_internal_r+0x75c>
    2538:	8563c83a 	sub	r17,r16,r21
    253c:	04400916 	blt	zero,r17,2564 <___vfprintf_internal_r+0x780>
    2540:	8540010e 	bge	r16,r21,2548 <___vfprintf_internal_r+0x764>
    2544:	a821883a 	mov	r16,r21
    2548:	d8800417 	ldw	r2,16(sp)
    254c:	1405883a 	add	r2,r2,r16
    2550:	d8800415 	stw	r2,16(sp)
    2554:	1802241e 	bne	r3,zero,2de8 <___vfprintf_internal_r+0x1004>
    2558:	d8001d15 	stw	zero,116(sp)
    255c:	b811883a 	mov	r8,r23
    2560:	003e5506 	br	1eb8 <___vfprintf_internal_r+0xd4>
    2564:	03000074 	movhi	r12,1
    2568:	89000450 	cmplti	r4,r17,17
    256c:	633f2384 	addi	r12,r12,-882
    2570:	d8801d17 	ldw	r2,116(sp)
    2574:	20001c1e 	bne	r4,zero,25e8 <___vfprintf_internal_r+0x804>
    2578:	04800404 	movi	r18,16
    257c:	dd000517 	ldw	r20,20(sp)
    2580:	6039883a 	mov	fp,r12
    2584:	00000406 	br	2598 <___vfprintf_internal_r+0x7b4>
    2588:	8c7ffc04 	addi	r17,r17,-16
    258c:	89000448 	cmpgei	r4,r17,17
    2590:	42000204 	addi	r8,r8,8
    2594:	20001326 	beq	r4,zero,25e4 <___vfprintf_internal_r+0x800>
    2598:	10800044 	addi	r2,r2,1
    259c:	18c00404 	addi	r3,r3,16
    25a0:	47000015 	stw	fp,0(r8)
    25a4:	44800115 	stw	r18,4(r8)
    25a8:	d8c01e15 	stw	r3,120(sp)
    25ac:	d8801d15 	stw	r2,116(sp)
    25b0:	11000208 	cmpgei	r4,r2,8
    25b4:	203ff426 	beq	r4,zero,2588 <___vfprintf_internal_r+0x7a4>
    25b8:	d9801c04 	addi	r6,sp,112
    25bc:	980b883a 	mov	r5,r19
    25c0:	a009883a 	mov	r4,r20
    25c4:	00082bc0 	call	82bc <__sprint_r>
    25c8:	103ee51e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    25cc:	8c7ffc04 	addi	r17,r17,-16
    25d0:	89000448 	cmpgei	r4,r17,17
    25d4:	d8c01e17 	ldw	r3,120(sp)
    25d8:	d8801d17 	ldw	r2,116(sp)
    25dc:	b811883a 	mov	r8,r23
    25e0:	203fed1e 	bne	r4,zero,2598 <___vfprintf_internal_r+0x7b4>
    25e4:	e019883a 	mov	r12,fp
    25e8:	10800044 	addi	r2,r2,1
    25ec:	1c47883a 	add	r3,r3,r17
    25f0:	d8801d15 	stw	r2,116(sp)
    25f4:	43000015 	stw	r12,0(r8)
    25f8:	44400115 	stw	r17,4(r8)
    25fc:	d8c01e15 	stw	r3,120(sp)
    2600:	10800210 	cmplti	r2,r2,8
    2604:	103fce1e 	bne	r2,zero,2540 <___vfprintf_internal_r+0x75c>
    2608:	d9000517 	ldw	r4,20(sp)
    260c:	d9801c04 	addi	r6,sp,112
    2610:	980b883a 	mov	r5,r19
    2614:	00082bc0 	call	82bc <__sprint_r>
    2618:	103ed11e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    261c:	d8c01e17 	ldw	r3,120(sp)
    2620:	003fc706 	br	2540 <___vfprintf_internal_r+0x75c>
    2624:	21003fcc 	andi	r4,r4,255
    2628:	2005de1e 	bne	r4,zero,3da4 <___vfprintf_internal_r+0x1fc0>
    262c:	6080080c 	andi	r2,r12,32
    2630:	1000ed1e 	bne	r2,zero,29e8 <___vfprintf_internal_r+0xc04>
    2634:	d8800617 	ldw	r2,24(sp)
    2638:	60c0040c 	andi	r3,r12,16
    263c:	15400017 	ldw	r21,0(r2)
    2640:	10800104 	addi	r2,r2,4
    2644:	18001e1e 	bne	r3,zero,26c0 <___vfprintf_internal_r+0x8dc>
    2648:	60c0100c 	andi	r3,r12,64
    264c:	1804e126 	beq	r3,zero,39d4 <___vfprintf_internal_r+0x1bf0>
    2650:	d8800615 	stw	r2,24(sp)
    2654:	ad7fffcc 	andi	r21,r21,65535
    2658:	0029883a 	mov	r20,zero
    265c:	0005883a 	mov	r2,zero
    2660:	0000bf06 	br	2960 <___vfprintf_internal_r+0xb7c>
    2664:	21003fcc 	andi	r4,r4,255
    2668:	2005d01e 	bne	r4,zero,3dac <___vfprintf_internal_r+0x1fc8>
    266c:	d9000617 	ldw	r4,24(sp)
    2670:	6080080c 	andi	r2,r12,32
    2674:	20c00104 	addi	r3,r4,4
    2678:	1003d81e 	bne	r2,zero,35dc <___vfprintf_internal_r+0x17f8>
    267c:	6080040c 	andi	r2,r12,16
    2680:	1004321e 	bne	r2,zero,374c <___vfprintf_internal_r+0x1968>
    2684:	6300100c 	andi	r12,r12,64
    2688:	60043026 	beq	r12,zero,374c <___vfprintf_internal_r+0x1968>
    268c:	d8800617 	ldw	r2,24(sp)
    2690:	d8c00615 	stw	r3,24(sp)
    2694:	d8c00417 	ldw	r3,16(sp)
    2698:	10800017 	ldw	r2,0(r2)
    269c:	10c0000d 	sth	r3,0(r2)
    26a0:	003e0506 	br	1eb8 <___vfprintf_internal_r+0xd4>
    26a4:	21003fcc 	andi	r4,r4,255
    26a8:	2005c81e 	bne	r4,zero,3dcc <___vfprintf_internal_r+0x1fe8>
    26ac:	6080080c 	andi	r2,r12,32
    26b0:	63000414 	ori	r12,r12,16
    26b4:	1000cc1e 	bne	r2,zero,29e8 <___vfprintf_internal_r+0xc04>
    26b8:	d8800617 	ldw	r2,24(sp)
    26bc:	10800104 	addi	r2,r2,4
    26c0:	d8c00617 	ldw	r3,24(sp)
    26c4:	0029883a 	mov	r20,zero
    26c8:	d8800615 	stw	r2,24(sp)
    26cc:	1d400017 	ldw	r21,0(r3)
    26d0:	0005883a 	mov	r2,zero
    26d4:	0000a206 	br	2960 <___vfprintf_internal_r+0xb7c>
    26d8:	63000214 	ori	r12,r12,8
    26dc:	b2800007 	ldb	r10,0(r22)
    26e0:	003e1b06 	br	1f50 <___vfprintf_internal_r+0x16c>
    26e4:	21003fcc 	andi	r4,r4,255
    26e8:	2005bc1e 	bne	r4,zero,3ddc <___vfprintf_internal_r+0x1ff8>
    26ec:	d8c00617 	ldw	r3,24(sp)
    26f0:	00a00034 	movhi	r2,32768
    26f4:	10bfffc4 	addi	r2,r2,-1
    26f8:	1d000117 	ldw	r20,4(r3)
    26fc:	1c800017 	ldw	r18,0(r3)
    2700:	01dffc34 	movhi	r7,32752
    2704:	a0a2703a 	and	r17,r20,r2
    2708:	01bfffc4 	movi	r6,-1
    270c:	18800204 	addi	r2,r3,8
    2710:	39ffffc4 	addi	r7,r7,-1
    2714:	9009883a 	mov	r4,r18
    2718:	880b883a 	mov	r5,r17
    271c:	da000f15 	stw	r8,60(sp)
    2720:	dac00e15 	stw	r11,56(sp)
    2724:	db000715 	stw	r12,28(sp)
    2728:	dd000a15 	stw	r20,40(sp)
    272c:	dc800915 	stw	r18,36(sp)
    2730:	d8800615 	stw	r2,24(sp)
    2734:	000d3100 	call	d310 <__unorddf2>
    2738:	db000717 	ldw	r12,28(sp)
    273c:	dac00e17 	ldw	r11,56(sp)
    2740:	da000f17 	ldw	r8,60(sp)
    2744:	1003191e 	bne	r2,zero,33ac <___vfprintf_internal_r+0x15c8>
    2748:	01dffc34 	movhi	r7,32752
    274c:	01bfffc4 	movi	r6,-1
    2750:	39ffffc4 	addi	r7,r7,-1
    2754:	9009883a 	mov	r4,r18
    2758:	880b883a 	mov	r5,r17
    275c:	000c0d40 	call	c0d4 <__ledf2>
    2760:	db000717 	ldw	r12,28(sp)
    2764:	dac00e17 	ldw	r11,56(sp)
    2768:	da000f17 	ldw	r8,60(sp)
    276c:	00830f0e 	bge	zero,r2,33ac <___vfprintf_internal_r+0x15c8>
    2770:	000d883a 	mov	r6,zero
    2774:	000f883a 	mov	r7,zero
    2778:	9009883a 	mov	r4,r18
    277c:	a00b883a 	mov	r5,r20
    2780:	da000e15 	stw	r8,56(sp)
    2784:	000c0d40 	call	c0d4 <__ledf2>
    2788:	db000717 	ldw	r12,28(sp)
    278c:	da000e17 	ldw	r8,56(sp)
    2790:	1004e716 	blt	r2,zero,3b30 <___vfprintf_internal_r+0x1d4c>
    2794:	db401543 	ldbu	r13,85(sp)
    2798:	e0801210 	cmplti	r2,fp,72
    279c:	1004d11e 	bne	r2,zero,3ae4 <___vfprintf_internal_r+0x1d00>
    27a0:	04400074 	movhi	r17,1
    27a4:	8c7f1004 	addi	r17,r17,-960
    27a8:	04bfdfc4 	movi	r18,-129
    27ac:	64a4703a 	and	r18,r12,r18
    27b0:	054000c4 	movi	r21,3
    27b4:	050000c4 	movi	r20,3
    27b8:	0017883a 	mov	r11,zero
    27bc:	d8000715 	stw	zero,28(sp)
    27c0:	0000a306 	br	2a50 <___vfprintf_internal_r+0xc6c>
    27c4:	21003fcc 	andi	r4,r4,255
    27c8:	2005821e 	bne	r4,zero,3dd4 <___vfprintf_internal_r+0x1ff0>
    27cc:	6080080c 	andi	r2,r12,32
    27d0:	63000414 	ori	r12,r12,16
    27d4:	10007d1e 	bne	r2,zero,29cc <___vfprintf_internal_r+0xbe8>
    27d8:	d8800617 	ldw	r2,24(sp)
    27dc:	10800104 	addi	r2,r2,4
    27e0:	d8c00617 	ldw	r3,24(sp)
    27e4:	1d400017 	ldw	r21,0(r3)
    27e8:	d8800615 	stw	r2,24(sp)
    27ec:	a829d7fa 	srai	r20,r21,31
    27f0:	a005883a 	mov	r2,r20
    27f4:	103f020e 	bge	r2,zero,2400 <___vfprintf_internal_r+0x61c>
    27f8:	056bc83a 	sub	r21,zero,r21
    27fc:	a804c03a 	cmpne	r2,r21,zero
    2800:	0529c83a 	sub	r20,zero,r20
    2804:	a0a9c83a 	sub	r20,r20,r2
    2808:	00800b44 	movi	r2,45
    280c:	d8801545 	stb	r2,85(sp)
    2810:	58ffffe0 	cmpeqi	r3,r11,-1
    2814:	03400b44 	movi	r13,45
    2818:	00800044 	movi	r2,1
    281c:	18005426 	beq	r3,zero,2970 <___vfprintf_internal_r+0xb8c>
    2820:	10c00060 	cmpeqi	r3,r2,1
    2824:	18007e1e 	bne	r3,zero,2a20 <___vfprintf_internal_r+0xc3c>
    2828:	108000a0 	cmpeqi	r2,r2,2
    282c:	1002371e 	bne	r2,zero,310c <___vfprintf_internal_r+0x1328>
    2830:	b807883a 	mov	r3,r23
    2834:	00000106 	br	283c <___vfprintf_internal_r+0xa58>
    2838:	8807883a 	mov	r3,r17
    283c:	a808d0fa 	srli	r4,r21,3
    2840:	a00a977a 	slli	r5,r20,29
    2844:	a028d0fa 	srli	r20,r20,3
    2848:	ad4001cc 	andi	r21,r21,7
    284c:	a8800c04 	addi	r2,r21,48
    2850:	292ab03a 	or	r21,r5,r4
    2854:	18bfffc5 	stb	r2,-1(r3)
    2858:	ad08b03a 	or	r4,r21,r20
    285c:	1c7fffc4 	addi	r17,r3,-1
    2860:	203ff51e 	bne	r4,zero,2838 <___vfprintf_internal_r+0xa54>
    2864:	6100004c 	andi	r4,r12,1
    2868:	2000a026 	beq	r4,zero,2aec <___vfprintf_internal_r+0xd08>
    286c:	10803fcc 	andi	r2,r2,255
    2870:	1080201c 	xori	r2,r2,128
    2874:	10bfe004 	addi	r2,r2,-128
    2878:	10800c18 	cmpnei	r2,r2,48
    287c:	10009b26 	beq	r2,zero,2aec <___vfprintf_internal_r+0xd08>
    2880:	18ffff84 	addi	r3,r3,-2
    2884:	00800c04 	movi	r2,48
    2888:	88bfffc5 	stb	r2,-1(r17)
    288c:	b8e9c83a 	sub	r20,r23,r3
    2890:	6025883a 	mov	r18,r12
    2894:	1823883a 	mov	r17,r3
    2898:	00006906 	br	2a40 <___vfprintf_internal_r+0xc5c>
    289c:	21003fcc 	andi	r4,r4,255
    28a0:	20053e1e 	bne	r4,zero,3d9c <___vfprintf_internal_r+0x1fb8>
    28a4:	00800074 	movhi	r2,1
    28a8:	10bf1304 	addi	r2,r2,-948
    28ac:	d8800c15 	stw	r2,48(sp)
    28b0:	6080080c 	andi	r2,r12,32
    28b4:	103e901e 	bne	r2,zero,22f8 <___vfprintf_internal_r+0x514>
    28b8:	d8c00617 	ldw	r3,24(sp)
    28bc:	6080040c 	andi	r2,r12,16
    28c0:	1d400017 	ldw	r21,0(r3)
    28c4:	18c00104 	addi	r3,r3,4
    28c8:	d8c00615 	stw	r3,24(sp)
    28cc:	1002b11e 	bne	r2,zero,3394 <___vfprintf_internal_r+0x15b0>
    28d0:	6080100c 	andi	r2,r12,64
    28d4:	1002af26 	beq	r2,zero,3394 <___vfprintf_internal_r+0x15b0>
    28d8:	ad7fffcc 	andi	r21,r21,65535
    28dc:	0029883a 	mov	r20,zero
    28e0:	003e8a06 	br	230c <___vfprintf_internal_r+0x528>
    28e4:	21003fcc 	andi	r4,r4,255
    28e8:	20053e1e 	bne	r4,zero,3de4 <___vfprintf_internal_r+0x2000>
    28ec:	6080080c 	andi	r2,r12,32
    28f0:	63000414 	ori	r12,r12,16
    28f4:	1000431e 	bne	r2,zero,2a04 <___vfprintf_internal_r+0xc20>
    28f8:	d8800617 	ldw	r2,24(sp)
    28fc:	10800104 	addi	r2,r2,4
    2900:	d8c00617 	ldw	r3,24(sp)
    2904:	0029883a 	mov	r20,zero
    2908:	d8800615 	stw	r2,24(sp)
    290c:	1d400017 	ldw	r21,0(r3)
    2910:	00800044 	movi	r2,1
    2914:	00001206 	br	2960 <___vfprintf_internal_r+0xb7c>
    2918:	63000814 	ori	r12,r12,32
    291c:	b2800007 	ldb	r10,0(r22)
    2920:	003d8b06 	br	1f50 <___vfprintf_internal_r+0x16c>
    2924:	d8c00617 	ldw	r3,24(sp)
    2928:	00800c04 	movi	r2,48
    292c:	d8801585 	stb	r2,86(sp)
    2930:	00801e04 	movi	r2,120
    2934:	01000074 	movhi	r4,1
    2938:	d88015c5 	stb	r2,87(sp)
    293c:	1d400017 	ldw	r21,0(r3)
    2940:	18800104 	addi	r2,r3,4
    2944:	d8800615 	stw	r2,24(sp)
    2948:	20bf1804 	addi	r2,r4,-928
    294c:	d8800c15 	stw	r2,48(sp)
    2950:	0029883a 	mov	r20,zero
    2954:	63000094 	ori	r12,r12,2
    2958:	00800084 	movi	r2,2
    295c:	07001e04 	movi	fp,120
    2960:	d8001545 	stb	zero,85(sp)
    2964:	58ffffe0 	cmpeqi	r3,r11,-1
    2968:	001b883a 	mov	r13,zero
    296c:	183fac1e 	bne	r3,zero,2820 <___vfprintf_internal_r+0xa3c>
    2970:	04bfdfc4 	movi	r18,-129
    2974:	ad06b03a 	or	r3,r21,r20
    2978:	64a4703a 	and	r18,r12,r18
    297c:	18018d1e 	bne	r3,zero,2fb4 <___vfprintf_internal_r+0x11d0>
    2980:	5803bb1e 	bne	r11,zero,3870 <___vfprintf_internal_r+0x1a8c>
    2984:	103ea71e 	bne	r2,zero,2424 <___vfprintf_internal_r+0x640>
    2988:	6500004c 	andi	r20,r12,1
    298c:	a0028526 	beq	r20,zero,33a4 <___vfprintf_internal_r+0x15c0>
    2990:	00800c04 	movi	r2,48
    2994:	d88028c5 	stb	r2,163(sp)
    2998:	dc4028c4 	addi	r17,sp,163
    299c:	00002806 	br	2a40 <___vfprintf_internal_r+0xc5c>
    29a0:	b2800007 	ldb	r10,0(r22)
    29a4:	50801b18 	cmpnei	r2,r10,108
    29a8:	10032c26 	beq	r2,zero,365c <___vfprintf_internal_r+0x1878>
    29ac:	63000414 	ori	r12,r12,16
    29b0:	003d6706 	br	1f50 <___vfprintf_internal_r+0x16c>
    29b4:	63001014 	ori	r12,r12,64
    29b8:	b2800007 	ldb	r10,0(r22)
    29bc:	003d6406 	br	1f50 <___vfprintf_internal_r+0x16c>
    29c0:	d9000517 	ldw	r4,20(sp)
    29c4:	00009ac0 	call	9ac <__sinit>
    29c8:	003d1f06 	br	1e48 <___vfprintf_internal_r+0x64>
    29cc:	d8c00617 	ldw	r3,24(sp)
    29d0:	18800117 	ldw	r2,4(r3)
    29d4:	1d400017 	ldw	r21,0(r3)
    29d8:	18c00204 	addi	r3,r3,8
    29dc:	d8c00615 	stw	r3,24(sp)
    29e0:	1029883a 	mov	r20,r2
    29e4:	003e8506 	br	23fc <___vfprintf_internal_r+0x618>
    29e8:	d8c00617 	ldw	r3,24(sp)
    29ec:	0005883a 	mov	r2,zero
    29f0:	1d400017 	ldw	r21,0(r3)
    29f4:	1d000117 	ldw	r20,4(r3)
    29f8:	18c00204 	addi	r3,r3,8
    29fc:	d8c00615 	stw	r3,24(sp)
    2a00:	003fd706 	br	2960 <___vfprintf_internal_r+0xb7c>
    2a04:	d8c00617 	ldw	r3,24(sp)
    2a08:	00800044 	movi	r2,1
    2a0c:	1d400017 	ldw	r21,0(r3)
    2a10:	1d000117 	ldw	r20,4(r3)
    2a14:	18c00204 	addi	r3,r3,8
    2a18:	d8c00615 	stw	r3,24(sp)
    2a1c:	003fd006 	br	2960 <___vfprintf_internal_r+0xb7c>
    2a20:	a000111e 	bne	r20,zero,2a68 <___vfprintf_internal_r+0xc84>
    2a24:	a88002a8 	cmpgeui	r2,r21,10
    2a28:	10000f1e 	bne	r2,zero,2a68 <___vfprintf_internal_r+0xc84>
    2a2c:	ad400c04 	addi	r21,r21,48
    2a30:	dd4028c5 	stb	r21,163(sp)
    2a34:	6025883a 	mov	r18,r12
    2a38:	05000044 	movi	r20,1
    2a3c:	dc4028c4 	addi	r17,sp,163
    2a40:	582b883a 	mov	r21,r11
    2a44:	5d00010e 	bge	r11,r20,2a4c <___vfprintf_internal_r+0xc68>
    2a48:	a02b883a 	mov	r21,r20
    2a4c:	d8000715 	stw	zero,28(sp)
    2a50:	6b403fcc 	andi	r13,r13,255
    2a54:	6b40201c 	xori	r13,r13,128
    2a58:	6b7fe004 	addi	r13,r13,-128
    2a5c:	683e8126 	beq	r13,zero,2464 <___vfprintf_internal_r+0x680>
    2a60:	ad400044 	addi	r21,r21,1
    2a64:	003e7f06 	br	2464 <___vfprintf_internal_r+0x680>
    2a68:	dc000e15 	stw	r16,56(sp)
    2a6c:	b823883a 	mov	r17,r23
    2a70:	a021883a 	mov	r16,r20
    2a74:	db000715 	stw	r12,28(sp)
    2a78:	9829883a 	mov	r20,r19
    2a7c:	dac00f15 	stw	r11,60(sp)
    2a80:	4025883a 	mov	r18,r8
    2a84:	6827883a 	mov	r19,r13
    2a88:	00000206 	br	2a94 <___vfprintf_internal_r+0xcb0>
    2a8c:	102b883a 	mov	r21,r2
    2a90:	1821883a 	mov	r16,r3
    2a94:	a809883a 	mov	r4,r21
    2a98:	800b883a 	mov	r5,r16
    2a9c:	01800284 	movi	r6,10
    2aa0:	000f883a 	mov	r7,zero
    2aa4:	000a4b80 	call	a4b8 <__umoddi3>
    2aa8:	10800c04 	addi	r2,r2,48
    2aac:	8c7fffc4 	addi	r17,r17,-1
    2ab0:	a809883a 	mov	r4,r21
    2ab4:	800b883a 	mov	r5,r16
    2ab8:	88800005 	stb	r2,0(r17)
    2abc:	01800284 	movi	r6,10
    2ac0:	000f883a 	mov	r7,zero
    2ac4:	0009e9c0 	call	9e9c <__udivdi3>
    2ac8:	803ff01e 	bne	r16,zero,2a8c <___vfprintf_internal_r+0xca8>
    2acc:	ad4002a8 	cmpgeui	r21,r21,10
    2ad0:	a83fee1e 	bne	r21,zero,2a8c <___vfprintf_internal_r+0xca8>
    2ad4:	db000717 	ldw	r12,28(sp)
    2ad8:	dc000e17 	ldw	r16,56(sp)
    2adc:	dac00f17 	ldw	r11,60(sp)
    2ae0:	981b883a 	mov	r13,r19
    2ae4:	9011883a 	mov	r8,r18
    2ae8:	a027883a 	mov	r19,r20
    2aec:	bc69c83a 	sub	r20,r23,r17
    2af0:	6025883a 	mov	r18,r12
    2af4:	003fd206 	br	2a40 <___vfprintf_internal_r+0xc5c>
    2af8:	e2801990 	cmplti	r10,fp,102
    2afc:	5000ea1e 	bne	r10,zero,2ea8 <___vfprintf_internal_r+0x10c4>
    2b00:	d9000917 	ldw	r4,36(sp)
    2b04:	d9400a17 	ldw	r5,40(sp)
    2b08:	000d883a 	mov	r6,zero
    2b0c:	000f883a 	mov	r7,zero
    2b10:	da000f15 	stw	r8,60(sp)
    2b14:	d8c00e15 	stw	r3,56(sp)
    2b18:	000bf640 	call	bf64 <__eqdf2>
    2b1c:	d8c00e17 	ldw	r3,56(sp)
    2b20:	da000f17 	ldw	r8,60(sp)
    2b24:	1001891e 	bne	r2,zero,314c <___vfprintf_internal_r+0x1368>
    2b28:	d8801d17 	ldw	r2,116(sp)
    2b2c:	01000074 	movhi	r4,1
    2b30:	213f1f04 	addi	r4,r4,-900
    2b34:	10800044 	addi	r2,r2,1
    2b38:	18c00044 	addi	r3,r3,1
    2b3c:	41000015 	stw	r4,0(r8)
    2b40:	01000044 	movi	r4,1
    2b44:	d8801d15 	stw	r2,116(sp)
    2b48:	41000115 	stw	r4,4(r8)
    2b4c:	d8c01e15 	stw	r3,120(sp)
    2b50:	10800208 	cmpgei	r2,r2,8
    2b54:	1003351e 	bne	r2,zero,382c <___vfprintf_internal_r+0x1a48>
    2b58:	42000204 	addi	r8,r8,8
    2b5c:	d8801617 	ldw	r2,88(sp)
    2b60:	d8c00817 	ldw	r3,32(sp)
    2b64:	10c00416 	blt	r2,r3,2b78 <___vfprintf_internal_r+0xd94>
    2b68:	9080004c 	andi	r2,r18,1
    2b6c:	1000021e 	bne	r2,zero,2b78 <___vfprintf_internal_r+0xd94>
    2b70:	d8c01e17 	ldw	r3,120(sp)
    2b74:	003e6e06 	br	2530 <___vfprintf_internal_r+0x74c>
    2b78:	d8800d17 	ldw	r2,52(sp)
    2b7c:	d8c01e17 	ldw	r3,120(sp)
    2b80:	d9000b17 	ldw	r4,44(sp)
    2b84:	40800015 	stw	r2,0(r8)
    2b88:	d8801d17 	ldw	r2,116(sp)
    2b8c:	20c7883a 	add	r3,r4,r3
    2b90:	41000115 	stw	r4,4(r8)
    2b94:	10800044 	addi	r2,r2,1
    2b98:	d8801d15 	stw	r2,116(sp)
    2b9c:	d8c01e15 	stw	r3,120(sp)
    2ba0:	10800208 	cmpgei	r2,r2,8
    2ba4:	1002b41e 	bne	r2,zero,3678 <___vfprintf_internal_r+0x1894>
    2ba8:	42000204 	addi	r8,r8,8
    2bac:	d8800817 	ldw	r2,32(sp)
    2bb0:	147fffc4 	addi	r17,r2,-1
    2bb4:	047e5e0e 	bge	zero,r17,2530 <___vfprintf_internal_r+0x74c>
    2bb8:	03000074 	movhi	r12,1
    2bbc:	89000450 	cmplti	r4,r17,17
    2bc0:	633f1f84 	addi	r12,r12,-898
    2bc4:	d8801d17 	ldw	r2,116(sp)
    2bc8:	2003791e 	bne	r4,zero,39b0 <___vfprintf_internal_r+0x1bcc>
    2bcc:	dc000715 	stw	r16,28(sp)
    2bd0:	05000404 	movi	r20,16
    2bd4:	df000517 	ldw	fp,20(sp)
    2bd8:	6021883a 	mov	r16,r12
    2bdc:	00000406 	br	2bf0 <___vfprintf_internal_r+0xe0c>
    2be0:	42000204 	addi	r8,r8,8
    2be4:	8c7ffc04 	addi	r17,r17,-16
    2be8:	89000448 	cmpgei	r4,r17,17
    2bec:	20036e26 	beq	r4,zero,39a8 <___vfprintf_internal_r+0x1bc4>
    2bf0:	10800044 	addi	r2,r2,1
    2bf4:	18c00404 	addi	r3,r3,16
    2bf8:	44000015 	stw	r16,0(r8)
    2bfc:	45000115 	stw	r20,4(r8)
    2c00:	d8c01e15 	stw	r3,120(sp)
    2c04:	d8801d15 	stw	r2,116(sp)
    2c08:	11000208 	cmpgei	r4,r2,8
    2c0c:	203ff426 	beq	r4,zero,2be0 <___vfprintf_internal_r+0xdfc>
    2c10:	d9801c04 	addi	r6,sp,112
    2c14:	980b883a 	mov	r5,r19
    2c18:	e009883a 	mov	r4,fp
    2c1c:	00082bc0 	call	82bc <__sprint_r>
    2c20:	103d4f1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    2c24:	d8c01e17 	ldw	r3,120(sp)
    2c28:	d8801d17 	ldw	r2,116(sp)
    2c2c:	b811883a 	mov	r8,r23
    2c30:	003fec06 	br	2be4 <___vfprintf_internal_r+0xe00>
    2c34:	854fc83a 	sub	r7,r16,r21
    2c38:	01fe2f0e 	bge	zero,r7,24f8 <___vfprintf_internal_r+0x714>
    2c3c:	03000074 	movhi	r12,1
    2c40:	39000450 	cmplti	r4,r7,17
    2c44:	633f1f84 	addi	r12,r12,-898
    2c48:	d8801d17 	ldw	r2,116(sp)
    2c4c:	2000271e 	bne	r4,zero,2cec <___vfprintf_internal_r+0xf08>
    2c50:	dc400e15 	stw	r17,56(sp)
    2c54:	dc800f15 	stw	r18,60(sp)
    2c58:	dc001015 	stw	r16,64(sp)
    2c5c:	03400404 	movi	r13,16
    2c60:	3821883a 	mov	r16,r7
    2c64:	dac01215 	stw	r11,72(sp)
    2c68:	dc400517 	ldw	r17,20(sp)
    2c6c:	6025883a 	mov	r18,r12
    2c70:	00000406 	br	2c84 <___vfprintf_internal_r+0xea0>
    2c74:	843ffc04 	addi	r16,r16,-16
    2c78:	81000448 	cmpgei	r4,r16,17
    2c7c:	42000204 	addi	r8,r8,8
    2c80:	20001426 	beq	r4,zero,2cd4 <___vfprintf_internal_r+0xef0>
    2c84:	10800044 	addi	r2,r2,1
    2c88:	18c00404 	addi	r3,r3,16
    2c8c:	44800015 	stw	r18,0(r8)
    2c90:	43400115 	stw	r13,4(r8)
    2c94:	d8c01e15 	stw	r3,120(sp)
    2c98:	d8801d15 	stw	r2,116(sp)
    2c9c:	11000208 	cmpgei	r4,r2,8
    2ca0:	203ff426 	beq	r4,zero,2c74 <___vfprintf_internal_r+0xe90>
    2ca4:	d9801c04 	addi	r6,sp,112
    2ca8:	980b883a 	mov	r5,r19
    2cac:	8809883a 	mov	r4,r17
    2cb0:	00082bc0 	call	82bc <__sprint_r>
    2cb4:	103d2a1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    2cb8:	843ffc04 	addi	r16,r16,-16
    2cbc:	81000448 	cmpgei	r4,r16,17
    2cc0:	d8c01e17 	ldw	r3,120(sp)
    2cc4:	d8801d17 	ldw	r2,116(sp)
    2cc8:	b811883a 	mov	r8,r23
    2ccc:	03400404 	movi	r13,16
    2cd0:	203fec1e 	bne	r4,zero,2c84 <___vfprintf_internal_r+0xea0>
    2cd4:	800f883a 	mov	r7,r16
    2cd8:	9019883a 	mov	r12,r18
    2cdc:	dc400e17 	ldw	r17,56(sp)
    2ce0:	dc001017 	ldw	r16,64(sp)
    2ce4:	dac01217 	ldw	r11,72(sp)
    2ce8:	dc800f17 	ldw	r18,60(sp)
    2cec:	10800044 	addi	r2,r2,1
    2cf0:	19c7883a 	add	r3,r3,r7
    2cf4:	d8801d15 	stw	r2,116(sp)
    2cf8:	43000015 	stw	r12,0(r8)
    2cfc:	41c00115 	stw	r7,4(r8)
    2d00:	d8c01e15 	stw	r3,120(sp)
    2d04:	10800208 	cmpgei	r2,r2,8
    2d08:	1002cf1e 	bne	r2,zero,3848 <___vfprintf_internal_r+0x1a64>
    2d0c:	5d0fc83a 	sub	r7,r11,r20
    2d10:	42000204 	addi	r8,r8,8
    2d14:	01fdfa0e 	bge	zero,r7,2500 <___vfprintf_internal_r+0x71c>
    2d18:	03000074 	movhi	r12,1
    2d1c:	39000450 	cmplti	r4,r7,17
    2d20:	633f1f84 	addi	r12,r12,-898
    2d24:	d8801d17 	ldw	r2,116(sp)
    2d28:	2000251e 	bne	r4,zero,2dc0 <___vfprintf_internal_r+0xfdc>
    2d2c:	dc400e15 	stw	r17,56(sp)
    2d30:	dc800f15 	stw	r18,60(sp)
    2d34:	dc001015 	stw	r16,64(sp)
    2d38:	02c00404 	movi	r11,16
    2d3c:	3821883a 	mov	r16,r7
    2d40:	dc400517 	ldw	r17,20(sp)
    2d44:	6025883a 	mov	r18,r12
    2d48:	00000406 	br	2d5c <___vfprintf_internal_r+0xf78>
    2d4c:	843ffc04 	addi	r16,r16,-16
    2d50:	81000448 	cmpgei	r4,r16,17
    2d54:	42000204 	addi	r8,r8,8
    2d58:	20001426 	beq	r4,zero,2dac <___vfprintf_internal_r+0xfc8>
    2d5c:	10800044 	addi	r2,r2,1
    2d60:	18c00404 	addi	r3,r3,16
    2d64:	44800015 	stw	r18,0(r8)
    2d68:	42c00115 	stw	r11,4(r8)
    2d6c:	d8c01e15 	stw	r3,120(sp)
    2d70:	d8801d15 	stw	r2,116(sp)
    2d74:	11000208 	cmpgei	r4,r2,8
    2d78:	203ff426 	beq	r4,zero,2d4c <___vfprintf_internal_r+0xf68>
    2d7c:	d9801c04 	addi	r6,sp,112
    2d80:	980b883a 	mov	r5,r19
    2d84:	8809883a 	mov	r4,r17
    2d88:	00082bc0 	call	82bc <__sprint_r>
    2d8c:	103cf41e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    2d90:	843ffc04 	addi	r16,r16,-16
    2d94:	81000448 	cmpgei	r4,r16,17
    2d98:	d8c01e17 	ldw	r3,120(sp)
    2d9c:	d8801d17 	ldw	r2,116(sp)
    2da0:	b811883a 	mov	r8,r23
    2da4:	02c00404 	movi	r11,16
    2da8:	203fec1e 	bne	r4,zero,2d5c <___vfprintf_internal_r+0xf78>
    2dac:	800f883a 	mov	r7,r16
    2db0:	9019883a 	mov	r12,r18
    2db4:	dc400e17 	ldw	r17,56(sp)
    2db8:	dc001017 	ldw	r16,64(sp)
    2dbc:	dc800f17 	ldw	r18,60(sp)
    2dc0:	10800044 	addi	r2,r2,1
    2dc4:	19c7883a 	add	r3,r3,r7
    2dc8:	d8801d15 	stw	r2,116(sp)
    2dcc:	43000015 	stw	r12,0(r8)
    2dd0:	41c00115 	stw	r7,4(r8)
    2dd4:	d8c01e15 	stw	r3,120(sp)
    2dd8:	10800208 	cmpgei	r2,r2,8
    2ddc:	1001651e 	bne	r2,zero,3374 <___vfprintf_internal_r+0x1590>
    2de0:	42000204 	addi	r8,r8,8
    2de4:	003dc606 	br	2500 <___vfprintf_internal_r+0x71c>
    2de8:	d9000517 	ldw	r4,20(sp)
    2dec:	d9801c04 	addi	r6,sp,112
    2df0:	980b883a 	mov	r5,r19
    2df4:	00082bc0 	call	82bc <__sprint_r>
    2df8:	103dd726 	beq	r2,zero,2558 <___vfprintf_internal_r+0x774>
    2dfc:	003cd806 	br	2160 <___vfprintf_internal_r+0x37c>
    2e00:	d9000517 	ldw	r4,20(sp)
    2e04:	d9801c04 	addi	r6,sp,112
    2e08:	980b883a 	mov	r5,r19
    2e0c:	00082bc0 	call	82bc <__sprint_r>
    2e10:	103cd31e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    2e14:	d9001617 	ldw	r4,88(sp)
    2e18:	d8c01e17 	ldw	r3,120(sp)
    2e1c:	b811883a 	mov	r8,r23
    2e20:	2002971e 	bne	r4,zero,3880 <___vfprintf_internal_r+0x1a9c>
    2e24:	d9000817 	ldw	r4,32(sp)
    2e28:	9080004c 	andi	r2,r18,1
    2e2c:	1104b03a 	or	r2,r2,r4
    2e30:	103dbf26 	beq	r2,zero,2530 <___vfprintf_internal_r+0x74c>
    2e34:	d8800d17 	ldw	r2,52(sp)
    2e38:	d9000b17 	ldw	r4,44(sp)
    2e3c:	40800015 	stw	r2,0(r8)
    2e40:	d8801d17 	ldw	r2,116(sp)
    2e44:	20c7883a 	add	r3,r4,r3
    2e48:	41000115 	stw	r4,4(r8)
    2e4c:	10800044 	addi	r2,r2,1
    2e50:	d8c01e15 	stw	r3,120(sp)
    2e54:	d8801d15 	stw	r2,116(sp)
    2e58:	11000208 	cmpgei	r4,r2,8
    2e5c:	2003691e 	bne	r4,zero,3c04 <___vfprintf_internal_r+0x1e20>
    2e60:	42000204 	addi	r8,r8,8
    2e64:	d9000817 	ldw	r4,32(sp)
    2e68:	10800044 	addi	r2,r2,1
    2e6c:	d8801d15 	stw	r2,116(sp)
    2e70:	20c7883a 	add	r3,r4,r3
    2e74:	44400015 	stw	r17,0(r8)
    2e78:	41000115 	stw	r4,4(r8)
    2e7c:	d8c01e15 	stw	r3,120(sp)
    2e80:	10800208 	cmpgei	r2,r2,8
    2e84:	103da926 	beq	r2,zero,252c <___vfprintf_internal_r+0x748>
    2e88:	d9000517 	ldw	r4,20(sp)
    2e8c:	d9801c04 	addi	r6,sp,112
    2e90:	980b883a 	mov	r5,r19
    2e94:	00082bc0 	call	82bc <__sprint_r>
    2e98:	103cb11e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    2e9c:	d8c01e17 	ldw	r3,120(sp)
    2ea0:	b811883a 	mov	r8,r23
    2ea4:	003da206 	br	2530 <___vfprintf_internal_r+0x74c>
    2ea8:	d8800817 	ldw	r2,32(sp)
    2eac:	da801d17 	ldw	r10,116(sp)
    2eb0:	18c00044 	addi	r3,r3,1
    2eb4:	10800088 	cmpgei	r2,r2,2
    2eb8:	55000044 	addi	r20,r10,1
    2ebc:	47000204 	addi	fp,r8,8
    2ec0:	1000fb26 	beq	r2,zero,32b0 <___vfprintf_internal_r+0x14cc>
    2ec4:	00800044 	movi	r2,1
    2ec8:	40800115 	stw	r2,4(r8)
    2ecc:	44400015 	stw	r17,0(r8)
    2ed0:	d8c01e15 	stw	r3,120(sp)
    2ed4:	dd001d15 	stw	r20,116(sp)
    2ed8:	a0800210 	cmplti	r2,r20,8
    2edc:	10022e26 	beq	r2,zero,3798 <___vfprintf_internal_r+0x19b4>
    2ee0:	d8800b17 	ldw	r2,44(sp)
    2ee4:	d9000d17 	ldw	r4,52(sp)
    2ee8:	a5000044 	addi	r20,r20,1
    2eec:	1887883a 	add	r3,r3,r2
    2ef0:	e0800115 	stw	r2,4(fp)
    2ef4:	e1000015 	stw	r4,0(fp)
    2ef8:	d8c01e15 	stw	r3,120(sp)
    2efc:	dd001d15 	stw	r20,116(sp)
    2f00:	a0800208 	cmpgei	r2,r20,8
    2f04:	10021b1e 	bne	r2,zero,3774 <___vfprintf_internal_r+0x1990>
    2f08:	e7000204 	addi	fp,fp,8
    2f0c:	d8800817 	ldw	r2,32(sp)
    2f10:	d9000917 	ldw	r4,36(sp)
    2f14:	d9400a17 	ldw	r5,40(sp)
    2f18:	a2800044 	addi	r10,r20,1
    2f1c:	e2000204 	addi	r8,fp,8
    2f20:	12ffffc4 	addi	r11,r2,-1
    2f24:	000d883a 	mov	r6,zero
    2f28:	000f883a 	mov	r7,zero
    2f2c:	d8c01215 	stw	r3,72(sp)
    2f30:	da801015 	stw	r10,64(sp)
    2f34:	da800f15 	stw	r10,60(sp)
    2f38:	da000e15 	stw	r8,56(sp)
    2f3c:	dac00715 	stw	r11,28(sp)
    2f40:	000bf640 	call	bf64 <__eqdf2>
    2f44:	dac00717 	ldw	r11,28(sp)
    2f48:	da000e17 	ldw	r8,56(sp)
    2f4c:	db400f17 	ldw	r13,60(sp)
    2f50:	da801017 	ldw	r10,64(sp)
    2f54:	d8c01217 	ldw	r3,72(sp)
    2f58:	1000e126 	beq	r2,zero,32e0 <___vfprintf_internal_r+0x14fc>
    2f5c:	8c400044 	addi	r17,r17,1
    2f60:	1ac7883a 	add	r3,r3,r11
    2f64:	da801d15 	stw	r10,116(sp)
    2f68:	e4400015 	stw	r17,0(fp)
    2f6c:	e2c00115 	stw	r11,4(fp)
    2f70:	d8c01e15 	stw	r3,120(sp)
    2f74:	52800208 	cmpgei	r10,r10,8
    2f78:	5001ad1e 	bne	r10,zero,3630 <___vfprintf_internal_r+0x184c>
    2f7c:	e0800404 	addi	r2,fp,16
    2f80:	a2800084 	addi	r10,r20,2
    2f84:	4039883a 	mov	fp,r8
    2f88:	1011883a 	mov	r8,r2
    2f8c:	d9001117 	ldw	r4,68(sp)
    2f90:	d8801844 	addi	r2,sp,97
    2f94:	da801d15 	stw	r10,116(sp)
    2f98:	20c7883a 	add	r3,r4,r3
    2f9c:	e0800015 	stw	r2,0(fp)
    2fa0:	e1000115 	stw	r4,4(fp)
    2fa4:	d8c01e15 	stw	r3,120(sp)
    2fa8:	52800210 	cmplti	r10,r10,8
    2fac:	503d601e 	bne	r10,zero,2530 <___vfprintf_internal_r+0x74c>
    2fb0:	003fb506 	br	2e88 <___vfprintf_internal_r+0x10a4>
    2fb4:	9019883a 	mov	r12,r18
    2fb8:	003e1906 	br	2820 <___vfprintf_internal_r+0xa3c>
    2fbc:	03000074 	movhi	r12,1
    2fc0:	39000450 	cmplti	r4,r7,17
    2fc4:	633f2384 	addi	r12,r12,-882
    2fc8:	d8801d17 	ldw	r2,116(sp)
    2fcc:	20002b1e 	bne	r4,zero,307c <___vfprintf_internal_r+0x1298>
    2fd0:	dc401015 	stw	r17,64(sp)
    2fd4:	dc801215 	stw	r18,72(sp)
    2fd8:	dc001315 	stw	r16,76(sp)
    2fdc:	03c00404 	movi	r15,16
    2fe0:	db800e15 	stw	r14,56(sp)
    2fe4:	db400f15 	stw	r13,60(sp)
    2fe8:	dac01415 	stw	r11,80(sp)
    2fec:	3821883a 	mov	r16,r7
    2ff0:	dc400517 	ldw	r17,20(sp)
    2ff4:	6025883a 	mov	r18,r12
    2ff8:	00000406 	br	300c <___vfprintf_internal_r+0x1228>
    2ffc:	843ffc04 	addi	r16,r16,-16
    3000:	81000448 	cmpgei	r4,r16,17
    3004:	42000204 	addi	r8,r8,8
    3008:	20001426 	beq	r4,zero,305c <___vfprintf_internal_r+0x1278>
    300c:	10800044 	addi	r2,r2,1
    3010:	18c00404 	addi	r3,r3,16
    3014:	44800015 	stw	r18,0(r8)
    3018:	43c00115 	stw	r15,4(r8)
    301c:	d8c01e15 	stw	r3,120(sp)
    3020:	d8801d15 	stw	r2,116(sp)
    3024:	11000208 	cmpgei	r4,r2,8
    3028:	203ff426 	beq	r4,zero,2ffc <___vfprintf_internal_r+0x1218>
    302c:	d9801c04 	addi	r6,sp,112
    3030:	980b883a 	mov	r5,r19
    3034:	8809883a 	mov	r4,r17
    3038:	00082bc0 	call	82bc <__sprint_r>
    303c:	103c481e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3040:	843ffc04 	addi	r16,r16,-16
    3044:	81000448 	cmpgei	r4,r16,17
    3048:	d8c01e17 	ldw	r3,120(sp)
    304c:	d8801d17 	ldw	r2,116(sp)
    3050:	b811883a 	mov	r8,r23
    3054:	03c00404 	movi	r15,16
    3058:	203fec1e 	bne	r4,zero,300c <___vfprintf_internal_r+0x1228>
    305c:	800f883a 	mov	r7,r16
    3060:	9019883a 	mov	r12,r18
    3064:	db800e17 	ldw	r14,56(sp)
    3068:	db400f17 	ldw	r13,60(sp)
    306c:	dc401017 	ldw	r17,64(sp)
    3070:	dac01417 	ldw	r11,80(sp)
    3074:	dc001317 	ldw	r16,76(sp)
    3078:	dc801217 	ldw	r18,72(sp)
    307c:	10800044 	addi	r2,r2,1
    3080:	19c7883a 	add	r3,r3,r7
    3084:	d8801d15 	stw	r2,116(sp)
    3088:	43000015 	stw	r12,0(r8)
    308c:	41c00115 	stw	r7,4(r8)
    3090:	d8c01e15 	stw	r3,120(sp)
    3094:	10800208 	cmpgei	r2,r2,8
    3098:	1001d61e 	bne	r2,zero,37f4 <___vfprintf_internal_r+0x1a10>
    309c:	42000204 	addi	r8,r8,8
    30a0:	003cf806 	br	2484 <___vfprintf_internal_r+0x6a0>
    30a4:	d9000517 	ldw	r4,20(sp)
    30a8:	d9801c04 	addi	r6,sp,112
    30ac:	980b883a 	mov	r5,r19
    30b0:	dac01015 	stw	r11,64(sp)
    30b4:	db400f15 	stw	r13,60(sp)
    30b8:	db800e15 	stw	r14,56(sp)
    30bc:	00082bc0 	call	82bc <__sprint_r>
    30c0:	103c271e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    30c4:	d8c01e17 	ldw	r3,120(sp)
    30c8:	b811883a 	mov	r8,r23
    30cc:	dac01017 	ldw	r11,64(sp)
    30d0:	db400f17 	ldw	r13,60(sp)
    30d4:	db800e17 	ldw	r14,56(sp)
    30d8:	003cf806 	br	24bc <___vfprintf_internal_r+0x6d8>
    30dc:	d9000517 	ldw	r4,20(sp)
    30e0:	d9801c04 	addi	r6,sp,112
    30e4:	980b883a 	mov	r5,r19
    30e8:	dac00f15 	stw	r11,60(sp)
    30ec:	db400e15 	stw	r13,56(sp)
    30f0:	00082bc0 	call	82bc <__sprint_r>
    30f4:	103c1a1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    30f8:	d8c01e17 	ldw	r3,120(sp)
    30fc:	b811883a 	mov	r8,r23
    3100:	dac00f17 	ldw	r11,60(sp)
    3104:	db400e17 	ldw	r13,56(sp)
    3108:	003cf906 	br	24f0 <___vfprintf_internal_r+0x70c>
    310c:	d9000c17 	ldw	r4,48(sp)
    3110:	b823883a 	mov	r17,r23
    3114:	a88003cc 	andi	r2,r21,15
    3118:	a006973a 	slli	r3,r20,28
    311c:	2085883a 	add	r2,r4,r2
    3120:	a82ad13a 	srli	r21,r21,4
    3124:	10800003 	ldbu	r2,0(r2)
    3128:	a028d13a 	srli	r20,r20,4
    312c:	8c7fffc4 	addi	r17,r17,-1
    3130:	1d6ab03a 	or	r21,r3,r21
    3134:	88800005 	stb	r2,0(r17)
    3138:	ad04b03a 	or	r2,r21,r20
    313c:	103ff51e 	bne	r2,zero,3114 <___vfprintf_internal_r+0x1330>
    3140:	bc69c83a 	sub	r20,r23,r17
    3144:	6025883a 	mov	r18,r12
    3148:	003e3d06 	br	2a40 <___vfprintf_internal_r+0xc5c>
    314c:	d9001617 	ldw	r4,88(sp)
    3150:	01019a0e 	bge	zero,r4,37bc <___vfprintf_internal_r+0x19d8>
    3154:	d8800717 	ldw	r2,28(sp)
    3158:	d9000817 	ldw	r4,32(sp)
    315c:	1039883a 	mov	fp,r2
    3160:	20812816 	blt	r4,r2,3604 <___vfprintf_internal_r+0x1820>
    3164:	07000a0e 	bge	zero,fp,3190 <___vfprintf_internal_r+0x13ac>
    3168:	d8801d17 	ldw	r2,116(sp)
    316c:	1f07883a 	add	r3,r3,fp
    3170:	44400015 	stw	r17,0(r8)
    3174:	10800044 	addi	r2,r2,1
    3178:	d8801d15 	stw	r2,116(sp)
    317c:	47000115 	stw	fp,4(r8)
    3180:	d8c01e15 	stw	r3,120(sp)
    3184:	10800208 	cmpgei	r2,r2,8
    3188:	1002de1e 	bne	r2,zero,3d04 <___vfprintf_internal_r+0x1f20>
    318c:	42000204 	addi	r8,r8,8
    3190:	e0014116 	blt	fp,zero,3698 <___vfprintf_internal_r+0x18b4>
    3194:	d8800717 	ldw	r2,28(sp)
    3198:	1739c83a 	sub	fp,r2,fp
    319c:	07014816 	blt	zero,fp,36c0 <___vfprintf_internal_r+0x18dc>
    31a0:	d9001617 	ldw	r4,88(sp)
    31a4:	d8800817 	ldw	r2,32(sp)
    31a8:	2081190e 	bge	r4,r2,3610 <___vfprintf_internal_r+0x182c>
    31ac:	d8800d17 	ldw	r2,52(sp)
    31b0:	d9400b17 	ldw	r5,44(sp)
    31b4:	40800015 	stw	r2,0(r8)
    31b8:	d8801d17 	ldw	r2,116(sp)
    31bc:	1947883a 	add	r3,r3,r5
    31c0:	41400115 	stw	r5,4(r8)
    31c4:	10800044 	addi	r2,r2,1
    31c8:	d8801d15 	stw	r2,116(sp)
    31cc:	d8c01e15 	stw	r3,120(sp)
    31d0:	10800208 	cmpgei	r2,r2,8
    31d4:	1002651e 	bne	r2,zero,3b6c <___vfprintf_internal_r+0x1d88>
    31d8:	42000204 	addi	r8,r8,8
    31dc:	d8800817 	ldw	r2,32(sp)
    31e0:	d9400717 	ldw	r5,28(sp)
    31e4:	1105c83a 	sub	r2,r2,r4
    31e8:	29015e0e 	bge	r5,r4,3764 <___vfprintf_internal_r+0x1980>
    31ec:	1039883a 	mov	fp,r2
    31f0:	07000c0e 	bge	zero,fp,3224 <___vfprintf_internal_r+0x1440>
    31f4:	d9000717 	ldw	r4,28(sp)
    31f8:	1f07883a 	add	r3,r3,fp
    31fc:	47000115 	stw	fp,4(r8)
    3200:	8923883a 	add	r17,r17,r4
    3204:	d9001d17 	ldw	r4,116(sp)
    3208:	44400015 	stw	r17,0(r8)
    320c:	d8c01e15 	stw	r3,120(sp)
    3210:	21000044 	addi	r4,r4,1
    3214:	d9001d15 	stw	r4,116(sp)
    3218:	21000208 	cmpgei	r4,r4,8
    321c:	2002c41e 	bne	r4,zero,3d30 <___vfprintf_internal_r+0x1f4c>
    3220:	42000204 	addi	r8,r8,8
    3224:	e000010e 	bge	fp,zero,322c <___vfprintf_internal_r+0x1448>
    3228:	0039883a 	mov	fp,zero
    322c:	1739c83a 	sub	fp,r2,fp
    3230:	073cbf0e 	bge	zero,fp,2530 <___vfprintf_internal_r+0x74c>
    3234:	03000074 	movhi	r12,1
    3238:	e1000450 	cmplti	r4,fp,17
    323c:	633f1f84 	addi	r12,r12,-898
    3240:	d8801d17 	ldw	r2,116(sp)
    3244:	2002401e 	bne	r4,zero,3b48 <___vfprintf_internal_r+0x1d64>
    3248:	dc000715 	stw	r16,28(sp)
    324c:	05000404 	movi	r20,16
    3250:	dc400517 	ldw	r17,20(sp)
    3254:	6021883a 	mov	r16,r12
    3258:	00000406 	br	326c <___vfprintf_internal_r+0x1488>
    325c:	42000204 	addi	r8,r8,8
    3260:	e73ffc04 	addi	fp,fp,-16
    3264:	e1000448 	cmpgei	r4,fp,17
    3268:	20023526 	beq	r4,zero,3b40 <___vfprintf_internal_r+0x1d5c>
    326c:	10800044 	addi	r2,r2,1
    3270:	18c00404 	addi	r3,r3,16
    3274:	44000015 	stw	r16,0(r8)
    3278:	45000115 	stw	r20,4(r8)
    327c:	d8c01e15 	stw	r3,120(sp)
    3280:	d8801d15 	stw	r2,116(sp)
    3284:	11000208 	cmpgei	r4,r2,8
    3288:	203ff426 	beq	r4,zero,325c <___vfprintf_internal_r+0x1478>
    328c:	d9801c04 	addi	r6,sp,112
    3290:	980b883a 	mov	r5,r19
    3294:	8809883a 	mov	r4,r17
    3298:	00082bc0 	call	82bc <__sprint_r>
    329c:	103bb01e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    32a0:	d8c01e17 	ldw	r3,120(sp)
    32a4:	d8801d17 	ldw	r2,116(sp)
    32a8:	b811883a 	mov	r8,r23
    32ac:	003fec06 	br	3260 <___vfprintf_internal_r+0x147c>
    32b0:	9080004c 	andi	r2,r18,1
    32b4:	103f031e 	bne	r2,zero,2ec4 <___vfprintf_internal_r+0x10e0>
    32b8:	00800044 	movi	r2,1
    32bc:	dd001d15 	stw	r20,116(sp)
    32c0:	44400015 	stw	r17,0(r8)
    32c4:	40800115 	stw	r2,4(r8)
    32c8:	d8c01e15 	stw	r3,120(sp)
    32cc:	a5000208 	cmpgei	r20,r20,8
    32d0:	a000d71e 	bne	r20,zero,3630 <___vfprintf_internal_r+0x184c>
    32d4:	52800084 	addi	r10,r10,2
    32d8:	42000404 	addi	r8,r8,16
    32dc:	003f2b06 	br	2f8c <___vfprintf_internal_r+0x11a8>
    32e0:	02ff2a0e 	bge	zero,r11,2f8c <___vfprintf_internal_r+0x11a8>
    32e4:	58800450 	cmplti	r2,r11,17
    32e8:	03000074 	movhi	r12,1
    32ec:	1002fe1e 	bne	r2,zero,3ee8 <___vfprintf_internal_r+0x2104>
    32f0:	633f1f84 	addi	r12,r12,-898
    32f4:	dd400715 	stw	r21,28(sp)
    32f8:	dc800e15 	stw	r18,56(sp)
    32fc:	e005883a 	mov	r2,fp
    3300:	04400404 	movi	r17,16
    3304:	b039883a 	mov	fp,r22
    3308:	5825883a 	mov	r18,r11
    330c:	802d883a 	mov	r22,r16
    3310:	602b883a 	mov	r21,r12
    3314:	dc000517 	ldw	r16,20(sp)
    3318:	6829883a 	mov	r20,r13
    331c:	00000506 	br	3334 <___vfprintf_internal_r+0x1550>
    3320:	10800204 	addi	r2,r2,8
    3324:	94bffc04 	addi	r18,r18,-16
    3328:	91000448 	cmpgei	r4,r18,17
    332c:	20018a26 	beq	r4,zero,3958 <___vfprintf_internal_r+0x1b74>
    3330:	a5000044 	addi	r20,r20,1
    3334:	18c00404 	addi	r3,r3,16
    3338:	15400015 	stw	r21,0(r2)
    333c:	14400115 	stw	r17,4(r2)
    3340:	d8c01e15 	stw	r3,120(sp)
    3344:	dd001d15 	stw	r20,116(sp)
    3348:	a1000208 	cmpgei	r4,r20,8
    334c:	203ff426 	beq	r4,zero,3320 <___vfprintf_internal_r+0x153c>
    3350:	d9801c04 	addi	r6,sp,112
    3354:	980b883a 	mov	r5,r19
    3358:	8009883a 	mov	r4,r16
    335c:	00082bc0 	call	82bc <__sprint_r>
    3360:	103b7f1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3364:	dd001d17 	ldw	r20,116(sp)
    3368:	d8c01e17 	ldw	r3,120(sp)
    336c:	b805883a 	mov	r2,r23
    3370:	003fec06 	br	3324 <___vfprintf_internal_r+0x1540>
    3374:	d9000517 	ldw	r4,20(sp)
    3378:	d9801c04 	addi	r6,sp,112
    337c:	980b883a 	mov	r5,r19
    3380:	00082bc0 	call	82bc <__sprint_r>
    3384:	103b761e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3388:	d8c01e17 	ldw	r3,120(sp)
    338c:	b811883a 	mov	r8,r23
    3390:	003c5b06 	br	2500 <___vfprintf_internal_r+0x71c>
    3394:	0029883a 	mov	r20,zero
    3398:	003bdc06 	br	230c <___vfprintf_internal_r+0x528>
    339c:	b023883a 	mov	r17,r22
    33a0:	003ae306 	br	1f30 <___vfprintf_internal_r+0x14c>
    33a4:	b823883a 	mov	r17,r23
    33a8:	003da506 	br	2a40 <___vfprintf_internal_r+0xc5c>
    33ac:	d9000917 	ldw	r4,36(sp)
    33b0:	d9400a17 	ldw	r5,40(sp)
    33b4:	da000f15 	stw	r8,60(sp)
    33b8:	200d883a 	mov	r6,r4
    33bc:	280f883a 	mov	r7,r5
    33c0:	dac00e15 	stw	r11,56(sp)
    33c4:	db000715 	stw	r12,28(sp)
    33c8:	000d3100 	call	d310 <__unorddf2>
    33cc:	db000717 	ldw	r12,28(sp)
    33d0:	dac00e17 	ldw	r11,56(sp)
    33d4:	da000f17 	ldw	r8,60(sp)
    33d8:	1002b21e 	bne	r2,zero,3ea4 <___vfprintf_internal_r+0x20c0>
    33dc:	00fff7c4 	movi	r3,-33
    33e0:	e0c6703a 	and	r3,fp,r3
    33e4:	58bfffe0 	cmpeqi	r2,r11,-1
    33e8:	d8c00715 	stw	r3,28(sp)
    33ec:	10024e1e 	bne	r2,zero,3d28 <___vfprintf_internal_r+0x1f44>
    33f0:	188011d8 	cmpnei	r2,r3,71
    33f4:	10020026 	beq	r2,zero,3bf8 <___vfprintf_internal_r+0x1e14>
    33f8:	d8800a17 	ldw	r2,40(sp)
    33fc:	64804014 	ori	r18,r12,256
    3400:	1001e316 	blt	r2,zero,3b90 <___vfprintf_internal_r+0x1dac>
    3404:	dd400a17 	ldw	r21,40(sp)
    3408:	d8000e05 	stb	zero,56(sp)
    340c:	e08019a0 	cmpeqi	r2,fp,102
    3410:	d8800f15 	stw	r2,60(sp)
    3414:	1001771e 	bne	r2,zero,39f4 <___vfprintf_internal_r+0x1c10>
    3418:	e08011a0 	cmpeqi	r2,fp,70
    341c:	1001751e 	bne	r2,zero,39f4 <___vfprintf_internal_r+0x1c10>
    3420:	d8800717 	ldw	r2,28(sp)
    3424:	da001215 	stw	r8,72(sp)
    3428:	db001015 	stw	r12,64(sp)
    342c:	10801158 	cmpnei	r2,r2,69
    3430:	10020726 	beq	r2,zero,3c50 <___vfprintf_internal_r+0x1e6c>
    3434:	d8801a04 	addi	r2,sp,104
    3438:	d8800315 	stw	r2,12(sp)
    343c:	d9400917 	ldw	r5,36(sp)
    3440:	d8801704 	addi	r2,sp,92
    3444:	d9000517 	ldw	r4,20(sp)
    3448:	d8800215 	stw	r2,8(sp)
    344c:	d8801604 	addi	r2,sp,88
    3450:	dac00015 	stw	r11,0(sp)
    3454:	d8800115 	stw	r2,4(sp)
    3458:	01c00084 	movi	r7,2
    345c:	a80d883a 	mov	r6,r21
    3460:	dac00815 	stw	r11,32(sp)
    3464:	00044940 	call	4494 <_dtoa_r>
    3468:	dac00817 	ldw	r11,32(sp)
    346c:	1023883a 	mov	r17,r2
    3470:	e08019d8 	cmpnei	r2,fp,103
    3474:	db001017 	ldw	r12,64(sp)
    3478:	da001217 	ldw	r8,72(sp)
    347c:	5829883a 	mov	r20,r11
    3480:	1002051e 	bne	r2,zero,3c98 <___vfprintf_internal_r+0x1eb4>
    3484:	6080004c 	andi	r2,r12,1
    3488:	1002051e 	bne	r2,zero,3ca0 <___vfprintf_internal_r+0x1ebc>
    348c:	d8c01617 	ldw	r3,88(sp)
    3490:	d8800717 	ldw	r2,28(sp)
    3494:	d8c00715 	stw	r3,28(sp)
    3498:	d8c01a17 	ldw	r3,104(sp)
    349c:	108011e0 	cmpeqi	r2,r2,71
    34a0:	1c47c83a 	sub	r3,r3,r17
    34a4:	d8c00815 	stw	r3,32(sp)
    34a8:	10000526 	beq	r2,zero,34c0 <___vfprintf_internal_r+0x16dc>
    34ac:	d8c00717 	ldw	r3,28(sp)
    34b0:	18bfff50 	cmplti	r2,r3,-3
    34b4:	1000011e 	bne	r2,zero,34bc <___vfprintf_internal_r+0x16d8>
    34b8:	58c2070e 	bge	r11,r3,3cd8 <___vfprintf_internal_r+0x1ef4>
    34bc:	e73fff84 	addi	fp,fp,-2
    34c0:	d8800717 	ldw	r2,28(sp)
    34c4:	df001845 	stb	fp,97(sp)
    34c8:	153fffc4 	addi	r20,r2,-1
    34cc:	dd001615 	stw	r20,88(sp)
    34d0:	a0027c16 	blt	r20,zero,3ec4 <___vfprintf_internal_r+0x20e0>
    34d4:	00800ac4 	movi	r2,43
    34d8:	d8801885 	stb	r2,98(sp)
    34dc:	a0800290 	cmplti	r2,r20,10
    34e0:	10025b1e 	bne	r2,zero,3e50 <___vfprintf_internal_r+0x206c>
    34e4:	dc000f15 	stw	r16,60(sp)
    34e8:	dd401bc4 	addi	r21,sp,111
    34ec:	a021883a 	mov	r16,r20
    34f0:	db000715 	stw	r12,28(sp)
    34f4:	9829883a 	mov	r20,r19
    34f8:	4027883a 	mov	r19,r8
    34fc:	00000206 	br	3508 <___vfprintf_internal_r+0x1724>
    3500:	202b883a 	mov	r21,r4
    3504:	1021883a 	mov	r16,r2
    3508:	8009883a 	mov	r4,r16
    350c:	01400284 	movi	r5,10
    3510:	000ab000 	call	ab00 <__modsi3>
    3514:	10800c04 	addi	r2,r2,48
    3518:	8009883a 	mov	r4,r16
    351c:	a8bfffc5 	stb	r2,-1(r21)
    3520:	01400284 	movi	r5,10
    3524:	000aa800 	call	aa80 <__divsi3>
    3528:	80c01908 	cmpgei	r3,r16,100
    352c:	a93fffc4 	addi	r4,r21,-1
    3530:	183ff31e 	bne	r3,zero,3500 <___vfprintf_internal_r+0x171c>
    3534:	10800c04 	addi	r2,r2,48
    3538:	20bfffc5 	stb	r2,-1(r4)
    353c:	a8ffff84 	addi	r3,r21,-2
    3540:	d9001bc4 	addi	r4,sp,111
    3544:	9811883a 	mov	r8,r19
    3548:	db000717 	ldw	r12,28(sp)
    354c:	dc000f17 	ldw	r16,60(sp)
    3550:	a027883a 	mov	r19,r20
    3554:	1902762e 	bgeu	r3,r4,3f30 <___vfprintf_internal_r+0x214c>
    3558:	d90018c4 	addi	r4,sp,99
    355c:	00000106 	br	3564 <___vfprintf_internal_r+0x1780>
    3560:	18800003 	ldbu	r2,0(r3)
    3564:	21000044 	addi	r4,r4,1
    3568:	20bfffc5 	stb	r2,-1(r4)
    356c:	18c00044 	addi	r3,r3,1
    3570:	d8801bc4 	addi	r2,sp,111
    3574:	18bffa1e 	bne	r3,r2,3560 <___vfprintf_internal_r+0x177c>
    3578:	d8801c44 	addi	r2,sp,113
    357c:	d8c018c4 	addi	r3,sp,99
    3580:	1545c83a 	sub	r2,r2,r21
    3584:	1885883a 	add	r2,r3,r2
    3588:	d8c01844 	addi	r3,sp,97
    358c:	10c5c83a 	sub	r2,r2,r3
    3590:	d8801115 	stw	r2,68(sp)
    3594:	d8c00817 	ldw	r3,32(sp)
    3598:	d9001117 	ldw	r4,68(sp)
    359c:	18800088 	cmpgei	r2,r3,2
    35a0:	1929883a 	add	r20,r3,r4
    35a4:	10024c26 	beq	r2,zero,3ed8 <___vfprintf_internal_r+0x20f4>
    35a8:	d8800b17 	ldw	r2,44(sp)
    35ac:	a0a9883a 	add	r20,r20,r2
    35b0:	a02b883a 	mov	r21,r20
    35b4:	a000010e 	bge	r20,zero,35bc <___vfprintf_internal_r+0x17d8>
    35b8:	002b883a 	mov	r21,zero
    35bc:	d8000715 	stw	zero,28(sp)
    35c0:	00014206 	br	3acc <___vfprintf_internal_r+0x1ce8>
    35c4:	00800c04 	movi	r2,48
    35c8:	d8801585 	stb	r2,86(sp)
    35cc:	df0015c5 	stb	fp,87(sp)
    35d0:	63000094 	ori	r12,r12,2
    35d4:	00800084 	movi	r2,2
    35d8:	003ce106 	br	2960 <___vfprintf_internal_r+0xb7c>
    35dc:	d9400417 	ldw	r5,16(sp)
    35e0:	20800017 	ldw	r2,0(r4)
    35e4:	d8c00615 	stw	r3,24(sp)
    35e8:	2809d7fa 	srai	r4,r5,31
    35ec:	11400015 	stw	r5,0(r2)
    35f0:	11000115 	stw	r4,4(r2)
    35f4:	003a3006 	br	1eb8 <___vfprintf_internal_r+0xd4>
    35f8:	0421c83a 	sub	r16,zero,r16
    35fc:	d8800615 	stw	r2,24(sp)
    3600:	003b1506 	br	2258 <___vfprintf_internal_r+0x474>
    3604:	2039883a 	mov	fp,r4
    3608:	073ed716 	blt	zero,fp,3168 <___vfprintf_internal_r+0x1384>
    360c:	003ee006 	br	3190 <___vfprintf_internal_r+0x13ac>
    3610:	9080004c 	andi	r2,r18,1
    3614:	103ee51e 	bne	r2,zero,31ac <___vfprintf_internal_r+0x13c8>
    3618:	d8800817 	ldw	r2,32(sp)
    361c:	d9400717 	ldw	r5,28(sp)
    3620:	1105c83a 	sub	r2,r2,r4
    3624:	29004f0e 	bge	r5,r4,3764 <___vfprintf_internal_r+0x1980>
    3628:	1039883a 	mov	fp,r2
    362c:	003efd06 	br	3224 <___vfprintf_internal_r+0x1440>
    3630:	d9000517 	ldw	r4,20(sp)
    3634:	d9801c04 	addi	r6,sp,112
    3638:	980b883a 	mov	r5,r19
    363c:	00082bc0 	call	82bc <__sprint_r>
    3640:	103ac71e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3644:	da801d17 	ldw	r10,116(sp)
    3648:	d8c01e17 	ldw	r3,120(sp)
    364c:	da002b04 	addi	r8,sp,172
    3650:	52800044 	addi	r10,r10,1
    3654:	b839883a 	mov	fp,r23
    3658:	003e4c06 	br	2f8c <___vfprintf_internal_r+0x11a8>
    365c:	b7000043 	ldbu	fp,1(r22)
    3660:	63000814 	ori	r12,r12,32
    3664:	b5800044 	addi	r22,r22,1
    3668:	e2803fcc 	andi	r10,fp,255
    366c:	5280201c 	xori	r10,r10,128
    3670:	52bfe004 	addi	r10,r10,-128
    3674:	003a3606 	br	1f50 <___vfprintf_internal_r+0x16c>
    3678:	d9000517 	ldw	r4,20(sp)
    367c:	d9801c04 	addi	r6,sp,112
    3680:	980b883a 	mov	r5,r19
    3684:	00082bc0 	call	82bc <__sprint_r>
    3688:	103ab51e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    368c:	d8c01e17 	ldw	r3,120(sp)
    3690:	b811883a 	mov	r8,r23
    3694:	003d4506 	br	2bac <___vfprintf_internal_r+0xdc8>
    3698:	0039883a 	mov	fp,zero
    369c:	003ebd06 	br	3194 <___vfprintf_internal_r+0x13b0>
    36a0:	588001f0 	cmpltui	r2,r11,7
    36a4:	5829883a 	mov	r20,r11
    36a8:	10013d26 	beq	r2,zero,3ba0 <___vfprintf_internal_r+0x1dbc>
    36ac:	04400074 	movhi	r17,1
    36b0:	a02b883a 	mov	r21,r20
    36b4:	dc800615 	stw	r18,24(sp)
    36b8:	8c7f1d04 	addi	r17,r17,-908
    36bc:	003b6606 	br	2458 <___vfprintf_internal_r+0x674>
    36c0:	03000074 	movhi	r12,1
    36c4:	e1000450 	cmplti	r4,fp,17
    36c8:	633f1f84 	addi	r12,r12,-898
    36cc:	d8801d17 	ldw	r2,116(sp)
    36d0:	20010d1e 	bne	r4,zero,3b08 <___vfprintf_internal_r+0x1d24>
    36d4:	dc400e15 	stw	r17,56(sp)
    36d8:	dc800f15 	stw	r18,60(sp)
    36dc:	e023883a 	mov	r17,fp
    36e0:	05000404 	movi	r20,16
    36e4:	b039883a 	mov	fp,r22
    36e8:	6025883a 	mov	r18,r12
    36ec:	802d883a 	mov	r22,r16
    36f0:	dc000517 	ldw	r16,20(sp)
    36f4:	00000406 	br	3708 <___vfprintf_internal_r+0x1924>
    36f8:	42000204 	addi	r8,r8,8
    36fc:	8c7ffc04 	addi	r17,r17,-16
    3700:	89000448 	cmpgei	r4,r17,17
    3704:	2000fa26 	beq	r4,zero,3af0 <___vfprintf_internal_r+0x1d0c>
    3708:	10800044 	addi	r2,r2,1
    370c:	18c00404 	addi	r3,r3,16
    3710:	44800015 	stw	r18,0(r8)
    3714:	45000115 	stw	r20,4(r8)
    3718:	d8c01e15 	stw	r3,120(sp)
    371c:	d8801d15 	stw	r2,116(sp)
    3720:	11000208 	cmpgei	r4,r2,8
    3724:	203ff426 	beq	r4,zero,36f8 <___vfprintf_internal_r+0x1914>
    3728:	d9801c04 	addi	r6,sp,112
    372c:	980b883a 	mov	r5,r19
    3730:	8009883a 	mov	r4,r16
    3734:	00082bc0 	call	82bc <__sprint_r>
    3738:	103a891e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    373c:	d8c01e17 	ldw	r3,120(sp)
    3740:	d8801d17 	ldw	r2,116(sp)
    3744:	b811883a 	mov	r8,r23
    3748:	003fec06 	br	36fc <___vfprintf_internal_r+0x1918>
    374c:	d8800617 	ldw	r2,24(sp)
    3750:	10800017 	ldw	r2,0(r2)
    3754:	d8c00615 	stw	r3,24(sp)
    3758:	d8c00417 	ldw	r3,16(sp)
    375c:	10c00015 	stw	r3,0(r2)
    3760:	0039d506 	br	1eb8 <___vfprintf_internal_r+0xd4>
    3764:	d9000817 	ldw	r4,32(sp)
    3768:	d9400717 	ldw	r5,28(sp)
    376c:	2179c83a 	sub	fp,r4,r5
    3770:	003e9f06 	br	31f0 <___vfprintf_internal_r+0x140c>
    3774:	d9000517 	ldw	r4,20(sp)
    3778:	d9801c04 	addi	r6,sp,112
    377c:	980b883a 	mov	r5,r19
    3780:	00082bc0 	call	82bc <__sprint_r>
    3784:	103a761e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3788:	d8c01e17 	ldw	r3,120(sp)
    378c:	dd001d17 	ldw	r20,116(sp)
    3790:	b839883a 	mov	fp,r23
    3794:	003ddd06 	br	2f0c <___vfprintf_internal_r+0x1128>
    3798:	d9000517 	ldw	r4,20(sp)
    379c:	d9801c04 	addi	r6,sp,112
    37a0:	980b883a 	mov	r5,r19
    37a4:	00082bc0 	call	82bc <__sprint_r>
    37a8:	103a6d1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    37ac:	d8c01e17 	ldw	r3,120(sp)
    37b0:	dd001d17 	ldw	r20,116(sp)
    37b4:	b839883a 	mov	fp,r23
    37b8:	003dc906 	br	2ee0 <___vfprintf_internal_r+0x10fc>
    37bc:	d8801d17 	ldw	r2,116(sp)
    37c0:	01400074 	movhi	r5,1
    37c4:	297f1f04 	addi	r5,r5,-900
    37c8:	10800044 	addi	r2,r2,1
    37cc:	18c00044 	addi	r3,r3,1
    37d0:	41400015 	stw	r5,0(r8)
    37d4:	01400044 	movi	r5,1
    37d8:	d8801d15 	stw	r2,116(sp)
    37dc:	41400115 	stw	r5,4(r8)
    37e0:	d8c01e15 	stw	r3,120(sp)
    37e4:	10800208 	cmpgei	r2,r2,8
    37e8:	103d851e 	bne	r2,zero,2e00 <___vfprintf_internal_r+0x101c>
    37ec:	42000204 	addi	r8,r8,8
    37f0:	003d8b06 	br	2e20 <___vfprintf_internal_r+0x103c>
    37f4:	d9000517 	ldw	r4,20(sp)
    37f8:	d9801c04 	addi	r6,sp,112
    37fc:	980b883a 	mov	r5,r19
    3800:	dac01015 	stw	r11,64(sp)
    3804:	db400f15 	stw	r13,60(sp)
    3808:	db800e15 	stw	r14,56(sp)
    380c:	00082bc0 	call	82bc <__sprint_r>
    3810:	103a531e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3814:	d8c01e17 	ldw	r3,120(sp)
    3818:	b811883a 	mov	r8,r23
    381c:	dac01017 	ldw	r11,64(sp)
    3820:	db400f17 	ldw	r13,60(sp)
    3824:	db800e17 	ldw	r14,56(sp)
    3828:	003b1606 	br	2484 <___vfprintf_internal_r+0x6a0>
    382c:	d9000517 	ldw	r4,20(sp)
    3830:	d9801c04 	addi	r6,sp,112
    3834:	980b883a 	mov	r5,r19
    3838:	00082bc0 	call	82bc <__sprint_r>
    383c:	103a481e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3840:	b811883a 	mov	r8,r23
    3844:	003cc506 	br	2b5c <___vfprintf_internal_r+0xd78>
    3848:	d9000517 	ldw	r4,20(sp)
    384c:	d9801c04 	addi	r6,sp,112
    3850:	980b883a 	mov	r5,r19
    3854:	dac00e15 	stw	r11,56(sp)
    3858:	00082bc0 	call	82bc <__sprint_r>
    385c:	103a401e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3860:	d8c01e17 	ldw	r3,120(sp)
    3864:	b811883a 	mov	r8,r23
    3868:	dac00e17 	ldw	r11,56(sp)
    386c:	003b2206 	br	24f8 <___vfprintf_internal_r+0x714>
    3870:	10c00060 	cmpeqi	r3,r2,1
    3874:	9019883a 	mov	r12,r18
    3878:	183beb26 	beq	r3,zero,2828 <___vfprintf_internal_r+0xa44>
    387c:	003c6b06 	br	2a2c <___vfprintf_internal_r+0xc48>
    3880:	d8800d17 	ldw	r2,52(sp)
    3884:	d9400b17 	ldw	r5,44(sp)
    3888:	40800015 	stw	r2,0(r8)
    388c:	d8801d17 	ldw	r2,116(sp)
    3890:	28c7883a 	add	r3,r5,r3
    3894:	41400115 	stw	r5,4(r8)
    3898:	10800044 	addi	r2,r2,1
    389c:	d8c01e15 	stw	r3,120(sp)
    38a0:	d8801d15 	stw	r2,116(sp)
    38a4:	11400208 	cmpgei	r5,r2,8
    38a8:	2800d61e 	bne	r5,zero,3c04 <___vfprintf_internal_r+0x1e20>
    38ac:	42000204 	addi	r8,r8,8
    38b0:	203d6c0e 	bge	r4,zero,2e64 <___vfprintf_internal_r+0x1080>
    38b4:	03000074 	movhi	r12,1
    38b8:	217ffc08 	cmpgei	r5,r4,-16
    38bc:	633f1f84 	addi	r12,r12,-898
    38c0:	0129c83a 	sub	r20,zero,r4
    38c4:	28014e1e 	bne	r5,zero,3e00 <___vfprintf_internal_r+0x201c>
    38c8:	8009883a 	mov	r4,r16
    38cc:	dc400715 	stw	r17,28(sp)
    38d0:	a021883a 	mov	r16,r20
    38d4:	07000404 	movi	fp,16
    38d8:	6023883a 	mov	r17,r12
    38dc:	2029883a 	mov	r20,r4
    38e0:	00000406 	br	38f4 <___vfprintf_internal_r+0x1b10>
    38e4:	42000204 	addi	r8,r8,8
    38e8:	843ffc04 	addi	r16,r16,-16
    38ec:	81000448 	cmpgei	r4,r16,17
    38f0:	20013e26 	beq	r4,zero,3dec <___vfprintf_internal_r+0x2008>
    38f4:	10800044 	addi	r2,r2,1
    38f8:	18c00404 	addi	r3,r3,16
    38fc:	44400015 	stw	r17,0(r8)
    3900:	47000115 	stw	fp,4(r8)
    3904:	d8c01e15 	stw	r3,120(sp)
    3908:	d8801d15 	stw	r2,116(sp)
    390c:	11000208 	cmpgei	r4,r2,8
    3910:	203ff426 	beq	r4,zero,38e4 <___vfprintf_internal_r+0x1b00>
    3914:	d9000517 	ldw	r4,20(sp)
    3918:	d9801c04 	addi	r6,sp,112
    391c:	980b883a 	mov	r5,r19
    3920:	00082bc0 	call	82bc <__sprint_r>
    3924:	103a0e1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3928:	d8c01e17 	ldw	r3,120(sp)
    392c:	d8801d17 	ldw	r2,116(sp)
    3930:	b811883a 	mov	r8,r23
    3934:	003fec06 	br	38e8 <___vfprintf_internal_r+0x1b04>
    3938:	8809883a 	mov	r4,r17
    393c:	0001adc0 	call	1adc <strlen>
    3940:	1029883a 	mov	r20,r2
    3944:	102b883a 	mov	r21,r2
    3948:	dc800615 	stw	r18,24(sp)
    394c:	db000717 	ldw	r12,28(sp)
    3950:	da000e17 	ldw	r8,56(sp)
    3954:	003ac006 	br	2458 <___vfprintf_internal_r+0x674>
    3958:	9017883a 	mov	r11,r18
    395c:	a819883a 	mov	r12,r21
    3960:	dc800e17 	ldw	r18,56(sp)
    3964:	dd400717 	ldw	r21,28(sp)
    3968:	b021883a 	mov	r16,r22
    396c:	a2800044 	addi	r10,r20,1
    3970:	e02d883a 	mov	r22,fp
    3974:	1039883a 	mov	fp,r2
    3978:	10800204 	addi	r2,r2,8
    397c:	1ac7883a 	add	r3,r3,r11
    3980:	e3000015 	stw	r12,0(fp)
    3984:	e2c00115 	stw	r11,4(fp)
    3988:	d8c01e15 	stw	r3,120(sp)
    398c:	da801d15 	stw	r10,116(sp)
    3990:	51000208 	cmpgei	r4,r10,8
    3994:	203f261e 	bne	r4,zero,3630 <___vfprintf_internal_r+0x184c>
    3998:	52800044 	addi	r10,r10,1
    399c:	12000204 	addi	r8,r2,8
    39a0:	1039883a 	mov	fp,r2
    39a4:	003d7906 	br	2f8c <___vfprintf_internal_r+0x11a8>
    39a8:	8019883a 	mov	r12,r16
    39ac:	dc000717 	ldw	r16,28(sp)
    39b0:	10800044 	addi	r2,r2,1
    39b4:	1c47883a 	add	r3,r3,r17
    39b8:	d8801d15 	stw	r2,116(sp)
    39bc:	43000015 	stw	r12,0(r8)
    39c0:	44400115 	stw	r17,4(r8)
    39c4:	d8c01e15 	stw	r3,120(sp)
    39c8:	10800208 	cmpgei	r2,r2,8
    39cc:	103ad726 	beq	r2,zero,252c <___vfprintf_internal_r+0x748>
    39d0:	003d2d06 	br	2e88 <___vfprintf_internal_r+0x10a4>
    39d4:	d8800615 	stw	r2,24(sp)
    39d8:	0029883a 	mov	r20,zero
    39dc:	0005883a 	mov	r2,zero
    39e0:	003bdf06 	br	2960 <___vfprintf_internal_r+0xb7c>
    39e4:	d8800615 	stw	r2,24(sp)
    39e8:	0029883a 	mov	r20,zero
    39ec:	00800044 	movi	r2,1
    39f0:	003bdb06 	br	2960 <___vfprintf_internal_r+0xb7c>
    39f4:	d8801a04 	addi	r2,sp,104
    39f8:	d8800315 	stw	r2,12(sp)
    39fc:	d9400917 	ldw	r5,36(sp)
    3a00:	d8801704 	addi	r2,sp,92
    3a04:	d9000517 	ldw	r4,20(sp)
    3a08:	d8800215 	stw	r2,8(sp)
    3a0c:	d8801604 	addi	r2,sp,88
    3a10:	dac00015 	stw	r11,0(sp)
    3a14:	d8800115 	stw	r2,4(sp)
    3a18:	01c000c4 	movi	r7,3
    3a1c:	a80d883a 	mov	r6,r21
    3a20:	da001215 	stw	r8,72(sp)
    3a24:	db001015 	stw	r12,64(sp)
    3a28:	dac00815 	stw	r11,32(sp)
    3a2c:	00044940 	call	4494 <_dtoa_r>
    3a30:	dac00817 	ldw	r11,32(sp)
    3a34:	1023883a 	mov	r17,r2
    3a38:	db001017 	ldw	r12,64(sp)
    3a3c:	12e9883a 	add	r20,r2,r11
    3a40:	88800007 	ldb	r2,0(r17)
    3a44:	da001217 	ldw	r8,72(sp)
    3a48:	10800c20 	cmpeqi	r2,r2,48
    3a4c:	10005a1e 	bne	r2,zero,3bb8 <___vfprintf_internal_r+0x1dd4>
    3a50:	d8801617 	ldw	r2,88(sp)
    3a54:	a0a9883a 	add	r20,r20,r2
    3a58:	d9000917 	ldw	r4,36(sp)
    3a5c:	000d883a 	mov	r6,zero
    3a60:	000f883a 	mov	r7,zero
    3a64:	a80b883a 	mov	r5,r21
    3a68:	da001215 	stw	r8,72(sp)
    3a6c:	dac01015 	stw	r11,64(sp)
    3a70:	db000815 	stw	r12,32(sp)
    3a74:	000bf640 	call	bf64 <__eqdf2>
    3a78:	db000817 	ldw	r12,32(sp)
    3a7c:	dac01017 	ldw	r11,64(sp)
    3a80:	da001217 	ldw	r8,72(sp)
    3a84:	1000881e 	bne	r2,zero,3ca8 <___vfprintf_internal_r+0x1ec4>
    3a88:	a005883a 	mov	r2,r20
    3a8c:	1445c83a 	sub	r2,r2,r17
    3a90:	d8c00717 	ldw	r3,28(sp)
    3a94:	d8800815 	stw	r2,32(sp)
    3a98:	d8801617 	ldw	r2,88(sp)
    3a9c:	18c011d8 	cmpnei	r3,r3,71
    3aa0:	d8800715 	stw	r2,28(sp)
    3aa4:	183e8126 	beq	r3,zero,34ac <___vfprintf_internal_r+0x16c8>
    3aa8:	d8800f17 	ldw	r2,60(sp)
    3aac:	103e8426 	beq	r2,zero,34c0 <___vfprintf_internal_r+0x16dc>
    3ab0:	d8c00717 	ldw	r3,28(sp)
    3ab4:	6080004c 	andi	r2,r12,1
    3ab8:	12c4b03a 	or	r2,r2,r11
    3abc:	00c10d0e 	bge	zero,r3,3ef4 <___vfprintf_internal_r+0x2110>
    3ac0:	1000f11e 	bne	r2,zero,3e88 <___vfprintf_internal_r+0x20a4>
    3ac4:	dd000717 	ldw	r20,28(sp)
    3ac8:	a02b883a 	mov	r21,r20
    3acc:	d8800e07 	ldb	r2,56(sp)
    3ad0:	10007e26 	beq	r2,zero,3ccc <___vfprintf_internal_r+0x1ee8>
    3ad4:	00800b44 	movi	r2,45
    3ad8:	d8801545 	stb	r2,85(sp)
    3adc:	0017883a 	mov	r11,zero
    3ae0:	003bdf06 	br	2a60 <___vfprintf_internal_r+0xc7c>
    3ae4:	04400074 	movhi	r17,1
    3ae8:	8c7f0f04 	addi	r17,r17,-964
    3aec:	003b2e06 	br	27a8 <___vfprintf_internal_r+0x9c4>
    3af0:	b021883a 	mov	r16,r22
    3af4:	9019883a 	mov	r12,r18
    3af8:	e02d883a 	mov	r22,fp
    3afc:	dc800f17 	ldw	r18,60(sp)
    3b00:	8839883a 	mov	fp,r17
    3b04:	dc400e17 	ldw	r17,56(sp)
    3b08:	10800044 	addi	r2,r2,1
    3b0c:	1f07883a 	add	r3,r3,fp
    3b10:	d8801d15 	stw	r2,116(sp)
    3b14:	43000015 	stw	r12,0(r8)
    3b18:	47000115 	stw	fp,4(r8)
    3b1c:	d8c01e15 	stw	r3,120(sp)
    3b20:	10800208 	cmpgei	r2,r2,8
    3b24:	1000421e 	bne	r2,zero,3c30 <___vfprintf_internal_r+0x1e4c>
    3b28:	42000204 	addi	r8,r8,8
    3b2c:	003d9c06 	br	31a0 <___vfprintf_internal_r+0x13bc>
    3b30:	00800b44 	movi	r2,45
    3b34:	d8801545 	stb	r2,85(sp)
    3b38:	03400b44 	movi	r13,45
    3b3c:	003b1606 	br	2798 <___vfprintf_internal_r+0x9b4>
    3b40:	8019883a 	mov	r12,r16
    3b44:	dc000717 	ldw	r16,28(sp)
    3b48:	10800044 	addi	r2,r2,1
    3b4c:	1f07883a 	add	r3,r3,fp
    3b50:	d8801d15 	stw	r2,116(sp)
    3b54:	43000015 	stw	r12,0(r8)
    3b58:	47000115 	stw	fp,4(r8)
    3b5c:	d8c01e15 	stw	r3,120(sp)
    3b60:	10800208 	cmpgei	r2,r2,8
    3b64:	103a7126 	beq	r2,zero,252c <___vfprintf_internal_r+0x748>
    3b68:	003cc706 	br	2e88 <___vfprintf_internal_r+0x10a4>
    3b6c:	d9000517 	ldw	r4,20(sp)
    3b70:	d9801c04 	addi	r6,sp,112
    3b74:	980b883a 	mov	r5,r19
    3b78:	00082bc0 	call	82bc <__sprint_r>
    3b7c:	1039781e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3b80:	d9001617 	ldw	r4,88(sp)
    3b84:	d8c01e17 	ldw	r3,120(sp)
    3b88:	b811883a 	mov	r8,r23
    3b8c:	003d9306 	br	31dc <___vfprintf_internal_r+0x13f8>
    3b90:	1560003c 	xorhi	r21,r2,32768
    3b94:	00800b44 	movi	r2,45
    3b98:	d8800e05 	stb	r2,56(sp)
    3b9c:	003e1b06 	br	340c <___vfprintf_internal_r+0x1628>
    3ba0:	05000184 	movi	r20,6
    3ba4:	003ec106 	br	36ac <___vfprintf_internal_r+0x18c8>
    3ba8:	002b883a 	mov	r21,zero
    3bac:	003a0206 	br	23b8 <___vfprintf_internal_r+0x5d4>
    3bb0:	d9401545 	stb	r5,85(sp)
    3bb4:	00398a06 	br	21e0 <___vfprintf_internal_r+0x3fc>
    3bb8:	d9000917 	ldw	r4,36(sp)
    3bbc:	000d883a 	mov	r6,zero
    3bc0:	000f883a 	mov	r7,zero
    3bc4:	a80b883a 	mov	r5,r21
    3bc8:	da001215 	stw	r8,72(sp)
    3bcc:	dac01015 	stw	r11,64(sp)
    3bd0:	db000815 	stw	r12,32(sp)
    3bd4:	000bf640 	call	bf64 <__eqdf2>
    3bd8:	db000817 	ldw	r12,32(sp)
    3bdc:	dac01017 	ldw	r11,64(sp)
    3be0:	da001217 	ldw	r8,72(sp)
    3be4:	103f9a26 	beq	r2,zero,3a50 <___vfprintf_internal_r+0x1c6c>
    3be8:	00800044 	movi	r2,1
    3bec:	12c5c83a 	sub	r2,r2,r11
    3bf0:	d8801615 	stw	r2,88(sp)
    3bf4:	003f9706 	br	3a54 <___vfprintf_internal_r+0x1c70>
    3bf8:	583dff1e 	bne	r11,zero,33f8 <___vfprintf_internal_r+0x1614>
    3bfc:	02c00044 	movi	r11,1
    3c00:	003dfd06 	br	33f8 <___vfprintf_internal_r+0x1614>
    3c04:	d9000517 	ldw	r4,20(sp)
    3c08:	d9801c04 	addi	r6,sp,112
    3c0c:	980b883a 	mov	r5,r19
    3c10:	00082bc0 	call	82bc <__sprint_r>
    3c14:	1039521e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3c18:	d9001617 	ldw	r4,88(sp)
    3c1c:	d8c01e17 	ldw	r3,120(sp)
    3c20:	d8801d17 	ldw	r2,116(sp)
    3c24:	b811883a 	mov	r8,r23
    3c28:	203c8e0e 	bge	r4,zero,2e64 <___vfprintf_internal_r+0x1080>
    3c2c:	003f2106 	br	38b4 <___vfprintf_internal_r+0x1ad0>
    3c30:	d9000517 	ldw	r4,20(sp)
    3c34:	d9801c04 	addi	r6,sp,112
    3c38:	980b883a 	mov	r5,r19
    3c3c:	00082bc0 	call	82bc <__sprint_r>
    3c40:	1039471e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3c44:	d8c01e17 	ldw	r3,120(sp)
    3c48:	b811883a 	mov	r8,r23
    3c4c:	003d5406 	br	31a0 <___vfprintf_internal_r+0x13bc>
    3c50:	d8801a04 	addi	r2,sp,104
    3c54:	d8800315 	stw	r2,12(sp)
    3c58:	d9400917 	ldw	r5,36(sp)
    3c5c:	d8801704 	addi	r2,sp,92
    3c60:	d9000517 	ldw	r4,20(sp)
    3c64:	5d000044 	addi	r20,r11,1
    3c68:	d8800215 	stw	r2,8(sp)
    3c6c:	d8801604 	addi	r2,sp,88
    3c70:	d8800115 	stw	r2,4(sp)
    3c74:	dd000015 	stw	r20,0(sp)
    3c78:	01c00084 	movi	r7,2
    3c7c:	a80d883a 	mov	r6,r21
    3c80:	dac00815 	stw	r11,32(sp)
    3c84:	00044940 	call	4494 <_dtoa_r>
    3c88:	dac00817 	ldw	r11,32(sp)
    3c8c:	db001017 	ldw	r12,64(sp)
    3c90:	da001217 	ldw	r8,72(sp)
    3c94:	1023883a 	mov	r17,r2
    3c98:	e08011d8 	cmpnei	r2,fp,71
    3c9c:	103df926 	beq	r2,zero,3484 <___vfprintf_internal_r+0x16a0>
    3ca0:	8d29883a 	add	r20,r17,r20
    3ca4:	003f6c06 	br	3a58 <___vfprintf_internal_r+0x1c74>
    3ca8:	d8801a17 	ldw	r2,104(sp)
    3cac:	01000c04 	movi	r4,48
    3cb0:	153f762e 	bgeu	r2,r20,3a8c <___vfprintf_internal_r+0x1ca8>
    3cb4:	10c00044 	addi	r3,r2,1
    3cb8:	d8c01a15 	stw	r3,104(sp)
    3cbc:	11000005 	stb	r4,0(r2)
    3cc0:	d8801a17 	ldw	r2,104(sp)
    3cc4:	153ffb36 	bltu	r2,r20,3cb4 <___vfprintf_internal_r+0x1ed0>
    3cc8:	003f7006 	br	3a8c <___vfprintf_internal_r+0x1ca8>
    3ccc:	db401543 	ldbu	r13,85(sp)
    3cd0:	0017883a 	mov	r11,zero
    3cd4:	003b5e06 	br	2a50 <___vfprintf_internal_r+0xc6c>
    3cd8:	d8800717 	ldw	r2,28(sp)
    3cdc:	d8c00817 	ldw	r3,32(sp)
    3ce0:	10c02216 	blt	r2,r3,3d6c <___vfprintf_internal_r+0x1f88>
    3ce4:	6300004c 	andi	r12,r12,1
    3ce8:	6000601e 	bne	r12,zero,3e6c <___vfprintf_internal_r+0x2088>
    3cec:	102b883a 	mov	r21,r2
    3cf0:	1000010e 	bge	r2,zero,3cf8 <___vfprintf_internal_r+0x1f14>
    3cf4:	002b883a 	mov	r21,zero
    3cf8:	dd000717 	ldw	r20,28(sp)
    3cfc:	070019c4 	movi	fp,103
    3d00:	003f7206 	br	3acc <___vfprintf_internal_r+0x1ce8>
    3d04:	d9000517 	ldw	r4,20(sp)
    3d08:	d9801c04 	addi	r6,sp,112
    3d0c:	980b883a 	mov	r5,r19
    3d10:	00082bc0 	call	82bc <__sprint_r>
    3d14:	1039121e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3d18:	d8c01e17 	ldw	r3,120(sp)
    3d1c:	b811883a 	mov	r8,r23
    3d20:	e03d1c0e 	bge	fp,zero,3194 <___vfprintf_internal_r+0x13b0>
    3d24:	003e5c06 	br	3698 <___vfprintf_internal_r+0x18b4>
    3d28:	02c00184 	movi	r11,6
    3d2c:	003db206 	br	33f8 <___vfprintf_internal_r+0x1614>
    3d30:	d9000517 	ldw	r4,20(sp)
    3d34:	d9801c04 	addi	r6,sp,112
    3d38:	980b883a 	mov	r5,r19
    3d3c:	00082bc0 	call	82bc <__sprint_r>
    3d40:	1039071e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3d44:	d8801617 	ldw	r2,88(sp)
    3d48:	d9000817 	ldw	r4,32(sp)
    3d4c:	d8c01e17 	ldw	r3,120(sp)
    3d50:	b811883a 	mov	r8,r23
    3d54:	2085c83a 	sub	r2,r4,r2
    3d58:	003d3206 	br	3224 <___vfprintf_internal_r+0x1440>
    3d5c:	582b883a 	mov	r21,r11
    3d60:	dc800615 	stw	r18,24(sp)
    3d64:	5829883a 	mov	r20,r11
    3d68:	0039bb06 	br	2458 <___vfprintf_internal_r+0x674>
    3d6c:	d8800817 	ldw	r2,32(sp)
    3d70:	d8c00b17 	ldw	r3,44(sp)
    3d74:	10e9883a 	add	r20,r2,r3
    3d78:	d8800717 	ldw	r2,28(sp)
    3d7c:	00800316 	blt	zero,r2,3d8c <___vfprintf_internal_r+0x1fa8>
    3d80:	d8800717 	ldw	r2,28(sp)
    3d84:	a0b9c83a 	sub	fp,r20,r2
    3d88:	e5000044 	addi	r20,fp,1
    3d8c:	a02b883a 	mov	r21,r20
    3d90:	a0003b16 	blt	r20,zero,3e80 <___vfprintf_internal_r+0x209c>
    3d94:	070019c4 	movi	fp,103
    3d98:	003f4c06 	br	3acc <___vfprintf_internal_r+0x1ce8>
    3d9c:	d9401545 	stb	r5,85(sp)
    3da0:	003ac006 	br	28a4 <___vfprintf_internal_r+0xac0>
    3da4:	d9401545 	stb	r5,85(sp)
    3da8:	003a2006 	br	262c <___vfprintf_internal_r+0x848>
    3dac:	d9401545 	stb	r5,85(sp)
    3db0:	003a2e06 	br	266c <___vfprintf_internal_r+0x888>
    3db4:	d9401545 	stb	r5,85(sp)
    3db8:	00398306 	br	23c8 <___vfprintf_internal_r+0x5e4>
    3dbc:	d9401545 	stb	r5,85(sp)
    3dc0:	00395a06 	br	232c <___vfprintf_internal_r+0x548>
    3dc4:	d9401545 	stb	r5,85(sp)
    3dc8:	00394606 	br	22e4 <___vfprintf_internal_r+0x500>
    3dcc:	d9401545 	stb	r5,85(sp)
    3dd0:	003a3606 	br	26ac <___vfprintf_internal_r+0x8c8>
    3dd4:	d9401545 	stb	r5,85(sp)
    3dd8:	003a7c06 	br	27cc <___vfprintf_internal_r+0x9e8>
    3ddc:	d9401545 	stb	r5,85(sp)
    3de0:	003a4206 	br	26ec <___vfprintf_internal_r+0x908>
    3de4:	d9401545 	stb	r5,85(sp)
    3de8:	003ac006 	br	28ec <___vfprintf_internal_r+0xb08>
    3dec:	8819883a 	mov	r12,r17
    3df0:	dc400717 	ldw	r17,28(sp)
    3df4:	a009883a 	mov	r4,r20
    3df8:	8029883a 	mov	r20,r16
    3dfc:	2021883a 	mov	r16,r4
    3e00:	10800044 	addi	r2,r2,1
    3e04:	1d07883a 	add	r3,r3,r20
    3e08:	43000015 	stw	r12,0(r8)
    3e0c:	45000115 	stw	r20,4(r8)
    3e10:	d8c01e15 	stw	r3,120(sp)
    3e14:	d8801d15 	stw	r2,116(sp)
    3e18:	11000208 	cmpgei	r4,r2,8
    3e1c:	203c1026 	beq	r4,zero,2e60 <___vfprintf_internal_r+0x107c>
    3e20:	d9000517 	ldw	r4,20(sp)
    3e24:	d9801c04 	addi	r6,sp,112
    3e28:	980b883a 	mov	r5,r19
    3e2c:	00082bc0 	call	82bc <__sprint_r>
    3e30:	1038cb1e 	bne	r2,zero,2160 <___vfprintf_internal_r+0x37c>
    3e34:	d8c01e17 	ldw	r3,120(sp)
    3e38:	d8801d17 	ldw	r2,116(sp)
    3e3c:	b811883a 	mov	r8,r23
    3e40:	003c0806 	br	2e64 <___vfprintf_internal_r+0x1080>
    3e44:	00bfffc4 	movi	r2,-1
    3e48:	d8800415 	stw	r2,16(sp)
    3e4c:	0038c706 	br	216c <___vfprintf_internal_r+0x388>
    3e50:	00800c04 	movi	r2,48
    3e54:	a0c00c04 	addi	r3,r20,48
    3e58:	d88018c5 	stb	r2,99(sp)
    3e5c:	00800104 	movi	r2,4
    3e60:	d8c01905 	stb	r3,100(sp)
    3e64:	d8801115 	stw	r2,68(sp)
    3e68:	003dca06 	br	3594 <___vfprintf_internal_r+0x17b0>
    3e6c:	d8800717 	ldw	r2,28(sp)
    3e70:	d8c00b17 	ldw	r3,44(sp)
    3e74:	10e9883a 	add	r20,r2,r3
    3e78:	a02b883a 	mov	r21,r20
    3e7c:	a03fc50e 	bge	r20,zero,3d94 <___vfprintf_internal_r+0x1fb0>
    3e80:	002b883a 	mov	r21,zero
    3e84:	003fc306 	br	3d94 <___vfprintf_internal_r+0x1fb0>
    3e88:	d8800b17 	ldw	r2,44(sp)
    3e8c:	1885883a 	add	r2,r3,r2
    3e90:	12e9883a 	add	r20,r2,r11
    3e94:	a02b883a 	mov	r21,r20
    3e98:	a03f0c0e 	bge	r20,zero,3acc <___vfprintf_internal_r+0x1ce8>
    3e9c:	002b883a 	mov	r21,zero
    3ea0:	003f0a06 	br	3acc <___vfprintf_internal_r+0x1ce8>
    3ea4:	d8800a17 	ldw	r2,40(sp)
    3ea8:	10001d16 	blt	r2,zero,3f20 <___vfprintf_internal_r+0x213c>
    3eac:	db401543 	ldbu	r13,85(sp)
    3eb0:	e0801210 	cmplti	r2,fp,72
    3eb4:	1000171e 	bne	r2,zero,3f14 <___vfprintf_internal_r+0x2130>
    3eb8:	04400074 	movhi	r17,1
    3ebc:	8c7f1204 	addi	r17,r17,-952
    3ec0:	003a3906 	br	27a8 <___vfprintf_internal_r+0x9c4>
    3ec4:	00c00044 	movi	r3,1
    3ec8:	18a9c83a 	sub	r20,r3,r2
    3ecc:	00800b44 	movi	r2,45
    3ed0:	d8801885 	stb	r2,98(sp)
    3ed4:	003d8106 	br	34dc <___vfprintf_internal_r+0x16f8>
    3ed8:	6080004c 	andi	r2,r12,1
    3edc:	d8800715 	stw	r2,28(sp)
    3ee0:	103db11e 	bne	r2,zero,35a8 <___vfprintf_internal_r+0x17c4>
    3ee4:	003feb06 	br	3e94 <___vfprintf_internal_r+0x20b0>
    3ee8:	4005883a 	mov	r2,r8
    3eec:	633f1f84 	addi	r12,r12,-898
    3ef0:	003ea206 	br	397c <___vfprintf_internal_r+0x1b98>
    3ef4:	1000031e 	bne	r2,zero,3f04 <___vfprintf_internal_r+0x2120>
    3ef8:	05400044 	movi	r21,1
    3efc:	05000044 	movi	r20,1
    3f00:	003ef206 	br	3acc <___vfprintf_internal_r+0x1ce8>
    3f04:	d8800b17 	ldw	r2,44(sp)
    3f08:	10800044 	addi	r2,r2,1
    3f0c:	12e9883a 	add	r20,r2,r11
    3f10:	003fe006 	br	3e94 <___vfprintf_internal_r+0x20b0>
    3f14:	04400074 	movhi	r17,1
    3f18:	8c7f1104 	addi	r17,r17,-956
    3f1c:	003a2206 	br	27a8 <___vfprintf_internal_r+0x9c4>
    3f20:	00800b44 	movi	r2,45
    3f24:	d8801545 	stb	r2,85(sp)
    3f28:	03400b44 	movi	r13,45
    3f2c:	003fe006 	br	3eb0 <___vfprintf_internal_r+0x20cc>
    3f30:	00800084 	movi	r2,2
    3f34:	d8801115 	stw	r2,68(sp)
    3f38:	003d9606 	br	3594 <___vfprintf_internal_r+0x17b0>
    3f3c:	d8c00617 	ldw	r3,24(sp)
    3f40:	1ac00017 	ldw	r11,0(r3)
    3f44:	18c00104 	addi	r3,r3,4
    3f48:	5800010e 	bge	r11,zero,3f50 <___vfprintf_internal_r+0x216c>
    3f4c:	02ffffc4 	movi	r11,-1
    3f50:	b7000043 	ldbu	fp,1(r22)
    3f54:	d8c00615 	stw	r3,24(sp)
    3f58:	102d883a 	mov	r22,r2
    3f5c:	e2803fcc 	andi	r10,fp,255
    3f60:	5280201c 	xori	r10,r10,128
    3f64:	52bfe004 	addi	r10,r10,-128
    3f68:	0037f906 	br	1f50 <___vfprintf_internal_r+0x16c>

00003f6c <__vfprintf_internal>:
    3f6c:	00800074 	movhi	r2,1
    3f70:	300f883a 	mov	r7,r6
    3f74:	280d883a 	mov	r6,r5
    3f78:	200b883a 	mov	r5,r4
    3f7c:	11077c17 	ldw	r4,7664(r2)
    3f80:	0001de41 	jmpi	1de4 <___vfprintf_internal_r>

00003f84 <__sbprintf>:
    3f84:	2880030b 	ldhu	r2,12(r5)
    3f88:	2b001917 	ldw	r12,100(r5)
    3f8c:	2ac0038b 	ldhu	r11,14(r5)
    3f90:	2a800717 	ldw	r10,28(r5)
    3f94:	2a400917 	ldw	r9,36(r5)
    3f98:	defee204 	addi	sp,sp,-1144
    3f9c:	da001a04 	addi	r8,sp,104
    3fa0:	00c10004 	movi	r3,1024
    3fa4:	dc011a15 	stw	r16,1128(sp)
    3fa8:	10bfff4c 	andi	r2,r2,65533
    3fac:	2821883a 	mov	r16,r5
    3fb0:	d80b883a 	mov	r5,sp
    3fb4:	dc811c15 	stw	r18,1136(sp)
    3fb8:	dc411b15 	stw	r17,1132(sp)
    3fbc:	dfc11d15 	stw	ra,1140(sp)
    3fc0:	2025883a 	mov	r18,r4
    3fc4:	d880030d 	sth	r2,12(sp)
    3fc8:	db001915 	stw	r12,100(sp)
    3fcc:	dac0038d 	sth	r11,14(sp)
    3fd0:	da800715 	stw	r10,28(sp)
    3fd4:	da400915 	stw	r9,36(sp)
    3fd8:	da000015 	stw	r8,0(sp)
    3fdc:	da000415 	stw	r8,16(sp)
    3fe0:	d8c00215 	stw	r3,8(sp)
    3fe4:	d8c00515 	stw	r3,20(sp)
    3fe8:	d8000615 	stw	zero,24(sp)
    3fec:	0001de40 	call	1de4 <___vfprintf_internal_r>
    3ff0:	1023883a 	mov	r17,r2
    3ff4:	10000d0e 	bge	r2,zero,402c <__sbprintf+0xa8>
    3ff8:	d880030b 	ldhu	r2,12(sp)
    3ffc:	1080100c 	andi	r2,r2,64
    4000:	10000326 	beq	r2,zero,4010 <__sbprintf+0x8c>
    4004:	8080030b 	ldhu	r2,12(r16)
    4008:	10801014 	ori	r2,r2,64
    400c:	8080030d 	sth	r2,12(r16)
    4010:	8805883a 	mov	r2,r17
    4014:	dfc11d17 	ldw	ra,1140(sp)
    4018:	dc811c17 	ldw	r18,1136(sp)
    401c:	dc411b17 	ldw	r17,1132(sp)
    4020:	dc011a17 	ldw	r16,1128(sp)
    4024:	dec11e04 	addi	sp,sp,1144
    4028:	f800283a 	ret
    402c:	d80b883a 	mov	r5,sp
    4030:	9009883a 	mov	r4,r18
    4034:	0005e8c0 	call	5e8c <_fflush_r>
    4038:	103fef26 	beq	r2,zero,3ff8 <__sbprintf+0x74>
    403c:	047fffc4 	movi	r17,-1
    4040:	003fed06 	br	3ff8 <__sbprintf+0x74>

00004044 <_write_r>:
    4044:	defffe04 	addi	sp,sp,-8
    4048:	2805883a 	mov	r2,r5
    404c:	dc000015 	stw	r16,0(sp)
    4050:	300b883a 	mov	r5,r6
    4054:	2021883a 	mov	r16,r4
    4058:	380d883a 	mov	r6,r7
    405c:	1009883a 	mov	r4,r2
    4060:	00800074 	movhi	r2,1
    4064:	dfc00115 	stw	ra,4(sp)
    4068:	100ea715 	stw	zero,15004(r2)
    406c:	000de300 	call	de30 <write>
    4070:	10ffffd8 	cmpnei	r3,r2,-1
    4074:	18000426 	beq	r3,zero,4088 <_write_r+0x44>
    4078:	dfc00117 	ldw	ra,4(sp)
    407c:	dc000017 	ldw	r16,0(sp)
    4080:	dec00204 	addi	sp,sp,8
    4084:	f800283a 	ret
    4088:	00c00074 	movhi	r3,1
    408c:	18cea717 	ldw	r3,15004(r3)
    4090:	183ff926 	beq	r3,zero,4078 <_write_r+0x34>
    4094:	80c00015 	stw	r3,0(r16)
    4098:	dfc00117 	ldw	ra,4(sp)
    409c:	dc000017 	ldw	r16,0(sp)
    40a0:	dec00204 	addi	sp,sp,8
    40a4:	f800283a 	ret

000040a8 <__swsetup_r>:
    40a8:	00800074 	movhi	r2,1
    40ac:	10877c17 	ldw	r2,7664(r2)
    40b0:	defffd04 	addi	sp,sp,-12
    40b4:	dc400115 	stw	r17,4(sp)
    40b8:	dc000015 	stw	r16,0(sp)
    40bc:	dfc00215 	stw	ra,8(sp)
    40c0:	2023883a 	mov	r17,r4
    40c4:	2821883a 	mov	r16,r5
    40c8:	10000226 	beq	r2,zero,40d4 <__swsetup_r+0x2c>
    40cc:	10c00e17 	ldw	r3,56(r2)
    40d0:	18002026 	beq	r3,zero,4154 <__swsetup_r+0xac>
    40d4:	8080030b 	ldhu	r2,12(r16)
    40d8:	10c0020c 	andi	r3,r2,8
    40dc:	1009883a 	mov	r4,r2
    40e0:	18002226 	beq	r3,zero,416c <__swsetup_r+0xc4>
    40e4:	80c00417 	ldw	r3,16(r16)
    40e8:	18002826 	beq	r3,zero,418c <__swsetup_r+0xe4>
    40ec:	1100004c 	andi	r4,r2,1
    40f0:	20000b1e 	bne	r4,zero,4120 <__swsetup_r+0x78>
    40f4:	1080008c 	andi	r2,r2,2
    40f8:	10002d1e 	bne	r2,zero,41b0 <__swsetup_r+0x108>
    40fc:	80800517 	ldw	r2,20(r16)
    4100:	80800215 	stw	r2,8(r16)
    4104:	18000b26 	beq	r3,zero,4134 <__swsetup_r+0x8c>
    4108:	0005883a 	mov	r2,zero
    410c:	dfc00217 	ldw	ra,8(sp)
    4110:	dc400117 	ldw	r17,4(sp)
    4114:	dc000017 	ldw	r16,0(sp)
    4118:	dec00304 	addi	sp,sp,12
    411c:	f800283a 	ret
    4120:	80800517 	ldw	r2,20(r16)
    4124:	80000215 	stw	zero,8(r16)
    4128:	0085c83a 	sub	r2,zero,r2
    412c:	80800615 	stw	r2,24(r16)
    4130:	183ff51e 	bne	r3,zero,4108 <__swsetup_r+0x60>
    4134:	80c0030b 	ldhu	r3,12(r16)
    4138:	0005883a 	mov	r2,zero
    413c:	1900200c 	andi	r4,r3,128
    4140:	203ff226 	beq	r4,zero,410c <__swsetup_r+0x64>
    4144:	18c01014 	ori	r3,r3,64
    4148:	80c0030d 	sth	r3,12(r16)
    414c:	00bfffc4 	movi	r2,-1
    4150:	003fee06 	br	410c <__swsetup_r+0x64>
    4154:	1009883a 	mov	r4,r2
    4158:	00009ac0 	call	9ac <__sinit>
    415c:	8080030b 	ldhu	r2,12(r16)
    4160:	10c0020c 	andi	r3,r2,8
    4164:	1009883a 	mov	r4,r2
    4168:	183fde1e 	bne	r3,zero,40e4 <__swsetup_r+0x3c>
    416c:	2080040c 	andi	r2,r4,16
    4170:	10001f26 	beq	r2,zero,41f0 <__swsetup_r+0x148>
    4174:	2080010c 	andi	r2,r4,4
    4178:	10000f1e 	bne	r2,zero,41b8 <__swsetup_r+0x110>
    417c:	80c00417 	ldw	r3,16(r16)
    4180:	20800214 	ori	r2,r4,8
    4184:	8080030d 	sth	r2,12(r16)
    4188:	183fd81e 	bne	r3,zero,40ec <__swsetup_r+0x44>
    418c:	1100a00c 	andi	r4,r2,640
    4190:	21008020 	cmpeqi	r4,r4,512
    4194:	203fd51e 	bne	r4,zero,40ec <__swsetup_r+0x44>
    4198:	800b883a 	mov	r5,r16
    419c:	8809883a 	mov	r4,r17
    41a0:	000691c0 	call	691c <__smakebuf_r>
    41a4:	8080030b 	ldhu	r2,12(r16)
    41a8:	80c00417 	ldw	r3,16(r16)
    41ac:	003fcf06 	br	40ec <__swsetup_r+0x44>
    41b0:	0005883a 	mov	r2,zero
    41b4:	003fd206 	br	4100 <__swsetup_r+0x58>
    41b8:	81400c17 	ldw	r5,48(r16)
    41bc:	28000626 	beq	r5,zero,41d8 <__swsetup_r+0x130>
    41c0:	80801004 	addi	r2,r16,64
    41c4:	28800326 	beq	r5,r2,41d4 <__swsetup_r+0x12c>
    41c8:	8809883a 	mov	r4,r17
    41cc:	00060300 	call	6030 <_free_r>
    41d0:	8100030b 	ldhu	r4,12(r16)
    41d4:	80000c15 	stw	zero,48(r16)
    41d8:	80c00417 	ldw	r3,16(r16)
    41dc:	00bff6c4 	movi	r2,-37
    41e0:	1108703a 	and	r4,r2,r4
    41e4:	80000115 	stw	zero,4(r16)
    41e8:	80c00015 	stw	r3,0(r16)
    41ec:	003fe406 	br	4180 <__swsetup_r+0xd8>
    41f0:	00800244 	movi	r2,9
    41f4:	88800015 	stw	r2,0(r17)
    41f8:	20801014 	ori	r2,r4,64
    41fc:	8080030d 	sth	r2,12(r16)
    4200:	00bfffc4 	movi	r2,-1
    4204:	003fc106 	br	410c <__swsetup_r+0x64>

00004208 <_close_r>:
    4208:	defffe04 	addi	sp,sp,-8
    420c:	dc000015 	stw	r16,0(sp)
    4210:	00800074 	movhi	r2,1
    4214:	2021883a 	mov	r16,r4
    4218:	2809883a 	mov	r4,r5
    421c:	dfc00115 	stw	ra,4(sp)
    4220:	100ea715 	stw	zero,15004(r2)
    4224:	000d5d80 	call	d5d8 <close>
    4228:	10ffffd8 	cmpnei	r3,r2,-1
    422c:	18000426 	beq	r3,zero,4240 <_close_r+0x38>
    4230:	dfc00117 	ldw	ra,4(sp)
    4234:	dc000017 	ldw	r16,0(sp)
    4238:	dec00204 	addi	sp,sp,8
    423c:	f800283a 	ret
    4240:	00c00074 	movhi	r3,1
    4244:	18cea717 	ldw	r3,15004(r3)
    4248:	183ff926 	beq	r3,zero,4230 <_close_r+0x28>
    424c:	80c00015 	stw	r3,0(r16)
    4250:	dfc00117 	ldw	ra,4(sp)
    4254:	dc000017 	ldw	r16,0(sp)
    4258:	dec00204 	addi	sp,sp,8
    425c:	f800283a 	ret

00004260 <quorem>:
    4260:	defff204 	addi	sp,sp,-56
    4264:	dc000415 	stw	r16,16(sp)
    4268:	20800417 	ldw	r2,16(r4)
    426c:	2c000417 	ldw	r16,16(r5)
    4270:	dfc00d15 	stw	ra,52(sp)
    4274:	df000c15 	stw	fp,48(sp)
    4278:	ddc00b15 	stw	r23,44(sp)
    427c:	dd800a15 	stw	r22,40(sp)
    4280:	dd400915 	stw	r21,36(sp)
    4284:	dd000815 	stw	r20,32(sp)
    4288:	dcc00715 	stw	r19,28(sp)
    428c:	dc800615 	stw	r18,24(sp)
    4290:	dc400515 	stw	r17,20(sp)
    4294:	14007d16 	blt	r2,r16,448c <quorem+0x22c>
    4298:	843fffc4 	addi	r16,r16,-1
    429c:	802c90ba 	slli	r22,r16,2
    42a0:	2f000504 	addi	fp,r5,20
    42a4:	24c00504 	addi	r19,r4,20
    42a8:	e5a5883a 	add	r18,fp,r22
    42ac:	9d85883a 	add	r2,r19,r22
    42b0:	95c00017 	ldw	r23,0(r18)
    42b4:	15000017 	ldw	r20,0(r2)
    42b8:	d9400215 	stw	r5,8(sp)
    42bc:	bdc00044 	addi	r23,r23,1
    42c0:	d9000115 	stw	r4,4(sp)
    42c4:	b80b883a 	mov	r5,r23
    42c8:	a009883a 	mov	r4,r20
    42cc:	dcc00015 	stw	r19,0(sp)
    42d0:	d8800315 	stw	r2,12(sp)
    42d4:	000ab780 	call	ab78 <__udivsi3>
    42d8:	1023883a 	mov	r17,r2
    42dc:	a5c03236 	bltu	r20,r23,43a8 <quorem+0x148>
    42e0:	e02d883a 	mov	r22,fp
    42e4:	9829883a 	mov	r20,r19
    42e8:	002b883a 	mov	r21,zero
    42ec:	002f883a 	mov	r23,zero
    42f0:	b5800104 	addi	r22,r22,4
    42f4:	b4ffff17 	ldw	r19,-4(r22)
    42f8:	880b883a 	mov	r5,r17
    42fc:	a5000104 	addi	r20,r20,4
    4300:	993fffcc 	andi	r4,r19,65535
    4304:	000ac380 	call	ac38 <__mulsi3>
    4308:	9808d43a 	srli	r4,r19,16
    430c:	880b883a 	mov	r5,r17
    4310:	156b883a 	add	r21,r2,r21
    4314:	000ac380 	call	ac38 <__mulsi3>
    4318:	a0ffff17 	ldw	r3,-4(r20)
    431c:	a80ad43a 	srli	r5,r21,16
    4320:	a93fffcc 	andi	r4,r21,65535
    4324:	b909c83a 	sub	r4,r23,r4
    4328:	19bfffcc 	andi	r6,r3,65535
    432c:	2189883a 	add	r4,r4,r6
    4330:	1806d43a 	srli	r3,r3,16
    4334:	116b883a 	add	r21,r2,r5
    4338:	2005d43a 	srai	r2,r4,16
    433c:	a97fffcc 	andi	r5,r21,65535
    4340:	1947c83a 	sub	r3,r3,r5
    4344:	1887883a 	add	r3,r3,r2
    4348:	1804943a 	slli	r2,r3,16
    434c:	213fffcc 	andi	r4,r4,65535
    4350:	a82ad43a 	srli	r21,r21,16
    4354:	1108b03a 	or	r4,r2,r4
    4358:	a13fff15 	stw	r4,-4(r20)
    435c:	182fd43a 	srai	r23,r3,16
    4360:	95bfe32e 	bgeu	r18,r22,42f0 <quorem+0x90>
    4364:	d8c00317 	ldw	r3,12(sp)
    4368:	18800017 	ldw	r2,0(r3)
    436c:	10000e1e 	bne	r2,zero,43a8 <quorem+0x148>
    4370:	d9000017 	ldw	r4,0(sp)
    4374:	18bfff04 	addi	r2,r3,-4
    4378:	2080092e 	bgeu	r4,r2,43a0 <quorem+0x140>
    437c:	18ffff17 	ldw	r3,-4(r3)
    4380:	18000326 	beq	r3,zero,4390 <quorem+0x130>
    4384:	00000606 	br	43a0 <quorem+0x140>
    4388:	10c00017 	ldw	r3,0(r2)
    438c:	1800041e 	bne	r3,zero,43a0 <quorem+0x140>
    4390:	d8c00017 	ldw	r3,0(sp)
    4394:	10bfff04 	addi	r2,r2,-4
    4398:	843fffc4 	addi	r16,r16,-1
    439c:	18bffa36 	bltu	r3,r2,4388 <quorem+0x128>
    43a0:	d8800117 	ldw	r2,4(sp)
    43a4:	14000415 	stw	r16,16(r2)
    43a8:	d9400217 	ldw	r5,8(sp)
    43ac:	d9000117 	ldw	r4,4(sp)
    43b0:	00074840 	call	7484 <__mcmp>
    43b4:	10002816 	blt	r2,zero,4458 <quorem+0x1f8>
    43b8:	d9800017 	ldw	r6,0(sp)
    43bc:	8c400044 	addi	r17,r17,1
    43c0:	0007883a 	mov	r3,zero
    43c4:	e7000104 	addi	fp,fp,4
    43c8:	e13fff17 	ldw	r4,-4(fp)
    43cc:	31400017 	ldw	r5,0(r6)
    43d0:	31800104 	addi	r6,r6,4
    43d4:	20bfffcc 	andi	r2,r4,65535
    43d8:	1887c83a 	sub	r3,r3,r2
    43dc:	28bfffcc 	andi	r2,r5,65535
    43e0:	1885883a 	add	r2,r3,r2
    43e4:	2008d43a 	srli	r4,r4,16
    43e8:	2806d43a 	srli	r3,r5,16
    43ec:	100fd43a 	srai	r7,r2,16
    43f0:	117fffcc 	andi	r5,r2,65535
    43f4:	1907c83a 	sub	r3,r3,r4
    43f8:	19c7883a 	add	r3,r3,r7
    43fc:	1804943a 	slli	r2,r3,16
    4400:	1807d43a 	srai	r3,r3,16
    4404:	1144b03a 	or	r2,r2,r5
    4408:	30bfff15 	stw	r2,-4(r6)
    440c:	973fed2e 	bgeu	r18,fp,43c4 <quorem+0x164>
    4410:	800690ba 	slli	r3,r16,2
    4414:	d9000017 	ldw	r4,0(sp)
    4418:	20c7883a 	add	r3,r4,r3
    441c:	18800017 	ldw	r2,0(r3)
    4420:	10000d1e 	bne	r2,zero,4458 <quorem+0x1f8>
    4424:	18bfff04 	addi	r2,r3,-4
    4428:	2080092e 	bgeu	r4,r2,4450 <quorem+0x1f0>
    442c:	18ffff17 	ldw	r3,-4(r3)
    4430:	18000326 	beq	r3,zero,4440 <quorem+0x1e0>
    4434:	00000606 	br	4450 <quorem+0x1f0>
    4438:	10c00017 	ldw	r3,0(r2)
    443c:	1800041e 	bne	r3,zero,4450 <quorem+0x1f0>
    4440:	d8c00017 	ldw	r3,0(sp)
    4444:	10bfff04 	addi	r2,r2,-4
    4448:	843fffc4 	addi	r16,r16,-1
    444c:	18bffa36 	bltu	r3,r2,4438 <quorem+0x1d8>
    4450:	d8800117 	ldw	r2,4(sp)
    4454:	14000415 	stw	r16,16(r2)
    4458:	8805883a 	mov	r2,r17
    445c:	dfc00d17 	ldw	ra,52(sp)
    4460:	df000c17 	ldw	fp,48(sp)
    4464:	ddc00b17 	ldw	r23,44(sp)
    4468:	dd800a17 	ldw	r22,40(sp)
    446c:	dd400917 	ldw	r21,36(sp)
    4470:	dd000817 	ldw	r20,32(sp)
    4474:	dcc00717 	ldw	r19,28(sp)
    4478:	dc800617 	ldw	r18,24(sp)
    447c:	dc400517 	ldw	r17,20(sp)
    4480:	dc000417 	ldw	r16,16(sp)
    4484:	dec00e04 	addi	sp,sp,56
    4488:	f800283a 	ret
    448c:	0005883a 	mov	r2,zero
    4490:	003ff206 	br	445c <quorem+0x1fc>

00004494 <_dtoa_r>:
    4494:	20801017 	ldw	r2,64(r4)
    4498:	deffe204 	addi	sp,sp,-120
    449c:	df001c15 	stw	fp,112(sp)
    44a0:	dcc01715 	stw	r19,92(sp)
    44a4:	dc401515 	stw	r17,84(sp)
    44a8:	dc001415 	stw	r16,80(sp)
    44ac:	dfc01d15 	stw	ra,116(sp)
    44b0:	ddc01b15 	stw	r23,108(sp)
    44b4:	dd801a15 	stw	r22,104(sp)
    44b8:	dd401915 	stw	r21,100(sp)
    44bc:	dd001815 	stw	r20,96(sp)
    44c0:	dc801615 	stw	r18,88(sp)
    44c4:	d9400115 	stw	r5,4(sp)
    44c8:	d9c00215 	stw	r7,8(sp)
    44cc:	2039883a 	mov	fp,r4
    44d0:	3027883a 	mov	r19,r6
    44d4:	dc002017 	ldw	r16,128(sp)
    44d8:	3023883a 	mov	r17,r6
    44dc:	10000826 	beq	r2,zero,4500 <_dtoa_r+0x6c>
    44e0:	21801117 	ldw	r6,68(r4)
    44e4:	00c00044 	movi	r3,1
    44e8:	100b883a 	mov	r5,r2
    44ec:	1986983a 	sll	r3,r3,r6
    44f0:	11800115 	stw	r6,4(r2)
    44f4:	10c00215 	stw	r3,8(r2)
    44f8:	0006c280 	call	6c28 <_Bfree>
    44fc:	e0001015 	stw	zero,64(fp)
    4500:	98018116 	blt	r19,zero,4b08 <_dtoa_r+0x674>
    4504:	80000015 	stw	zero,0(r16)
    4508:	989ffc2c 	andhi	r2,r19,32752
    450c:	00dffc34 	movhi	r3,32752
    4510:	10c18626 	beq	r2,r3,4b2c <_dtoa_r+0x698>
    4514:	d9000117 	ldw	r4,4(sp)
    4518:	000d883a 	mov	r6,zero
    451c:	000f883a 	mov	r7,zero
    4520:	880b883a 	mov	r5,r17
    4524:	000bf640 	call	bf64 <__eqdf2>
    4528:	1000191e 	bne	r2,zero,4590 <_dtoa_r+0xfc>
    452c:	d8c01f17 	ldw	r3,124(sp)
    4530:	00800044 	movi	r2,1
    4534:	18800015 	stw	r2,0(r3)
    4538:	d8802117 	ldw	r2,132(sp)
    453c:	10032426 	beq	r2,zero,51d0 <_dtoa_r+0xd3c>
    4540:	d9002117 	ldw	r4,132(sp)
    4544:	00800074 	movhi	r2,1
    4548:	10bf1f44 	addi	r2,r2,-899
    454c:	00c00074 	movhi	r3,1
    4550:	20800015 	stw	r2,0(r4)
    4554:	18bf1f04 	addi	r2,r3,-900
    4558:	d8800315 	stw	r2,12(sp)
    455c:	d8800317 	ldw	r2,12(sp)
    4560:	dfc01d17 	ldw	ra,116(sp)
    4564:	df001c17 	ldw	fp,112(sp)
    4568:	ddc01b17 	ldw	r23,108(sp)
    456c:	dd801a17 	ldw	r22,104(sp)
    4570:	dd401917 	ldw	r21,100(sp)
    4574:	dd001817 	ldw	r20,96(sp)
    4578:	dcc01717 	ldw	r19,92(sp)
    457c:	dc801617 	ldw	r18,88(sp)
    4580:	dc401517 	ldw	r17,84(sp)
    4584:	dc001417 	ldw	r16,80(sp)
    4588:	dec01e04 	addi	sp,sp,120
    458c:	f800283a 	ret
    4590:	dc800117 	ldw	r18,4(sp)
    4594:	d8801204 	addi	r2,sp,72
    4598:	9820d53a 	srli	r16,r19,20
    459c:	d8800015 	stw	r2,0(sp)
    45a0:	d9c01304 	addi	r7,sp,76
    45a4:	900b883a 	mov	r5,r18
    45a8:	880d883a 	mov	r6,r17
    45ac:	e009883a 	mov	r4,fp
    45b0:	00077f80 	call	77f8 <__d2b>
    45b4:	102b883a 	mov	r21,r2
    45b8:	8001701e 	bne	r16,zero,4b7c <_dtoa_r+0x6e8>
    45bc:	dc801217 	ldw	r18,72(sp)
    45c0:	dc001317 	ldw	r16,76(sp)
    45c4:	9421883a 	add	r16,r18,r16
    45c8:	80810c84 	addi	r2,r16,1074
    45cc:	10c00850 	cmplti	r3,r2,33
    45d0:	18030f1e 	bne	r3,zero,5210 <_dtoa_r+0xd7c>
    45d4:	01001004 	movi	r4,64
    45d8:	2085c83a 	sub	r2,r4,r2
    45dc:	98a6983a 	sll	r19,r19,r2
    45e0:	d8800117 	ldw	r2,4(sp)
    45e4:	81010484 	addi	r4,r16,1042
    45e8:	1108d83a 	srl	r4,r2,r4
    45ec:	9908b03a 	or	r4,r19,r4
    45f0:	000d4ac0 	call	d4ac <__floatunsidf>
    45f4:	1009883a 	mov	r4,r2
    45f8:	017f8434 	movhi	r5,65040
    45fc:	00800044 	movi	r2,1
    4600:	194b883a 	add	r5,r3,r5
    4604:	843fffc4 	addi	r16,r16,-1
    4608:	d8800a15 	stw	r2,40(sp)
    460c:	000d883a 	mov	r6,zero
    4610:	01cffe34 	movhi	r7,16376
    4614:	000c9a40 	call	c9a4 <__subdf3>
    4618:	0198dbf4 	movhi	r6,25455
    461c:	01cff4f4 	movhi	r7,16339
    4620:	3190d844 	addi	r6,r6,17249
    4624:	39e1e9c4 	addi	r7,r7,-30809
    4628:	1009883a 	mov	r4,r2
    462c:	180b883a 	mov	r5,r3
    4630:	000c1c40 	call	c1c4 <__muldf3>
    4634:	01a2d874 	movhi	r6,35681
    4638:	01cff1f4 	movhi	r7,16327
    463c:	31b22cc4 	addi	r6,r6,-14157
    4640:	39e28a04 	addi	r7,r7,-30168
    4644:	180b883a 	mov	r5,r3
    4648:	1009883a 	mov	r4,r2
    464c:	000ac600 	call	ac60 <__adddf3>
    4650:	8009883a 	mov	r4,r16
    4654:	1029883a 	mov	r20,r2
    4658:	1827883a 	mov	r19,r3
    465c:	000d3e40 	call	d3e4 <__floatsidf>
    4660:	019427f4 	movhi	r6,20639
    4664:	01cff4f4 	movhi	r7,16339
    4668:	319e7ec4 	addi	r6,r6,31227
    466c:	39d104c4 	addi	r7,r7,17427
    4670:	1009883a 	mov	r4,r2
    4674:	180b883a 	mov	r5,r3
    4678:	000c1c40 	call	c1c4 <__muldf3>
    467c:	100d883a 	mov	r6,r2
    4680:	180f883a 	mov	r7,r3
    4684:	a009883a 	mov	r4,r20
    4688:	980b883a 	mov	r5,r19
    468c:	000ac600 	call	ac60 <__adddf3>
    4690:	1009883a 	mov	r4,r2
    4694:	180b883a 	mov	r5,r3
    4698:	1029883a 	mov	r20,r2
    469c:	1827883a 	mov	r19,r3
    46a0:	000d3640 	call	d364 <__fixdfsi>
    46a4:	000d883a 	mov	r6,zero
    46a8:	000f883a 	mov	r7,zero
    46ac:	a009883a 	mov	r4,r20
    46b0:	980b883a 	mov	r5,r19
    46b4:	102d883a 	mov	r22,r2
    46b8:	000c0d40 	call	c0d4 <__ledf2>
    46bc:	1002ba16 	blt	r2,zero,51a8 <_dtoa_r+0xd14>
    46c0:	9421c83a 	sub	r16,r18,r16
    46c4:	b08005e8 	cmpgeui	r2,r22,23
    46c8:	853fffc4 	addi	r20,r16,-1
    46cc:	1002ae1e 	bne	r2,zero,5188 <_dtoa_r+0xcf4>
    46d0:	b00690fa 	slli	r3,r22,3
    46d4:	00800074 	movhi	r2,1
    46d8:	10bfe304 	addi	r2,r2,-116
    46dc:	10c5883a 	add	r2,r2,r3
    46e0:	11800017 	ldw	r6,0(r2)
    46e4:	11c00117 	ldw	r7,4(r2)
    46e8:	d9000117 	ldw	r4,4(sp)
    46ec:	880b883a 	mov	r5,r17
    46f0:	000c0d40 	call	c0d4 <__ledf2>
    46f4:	10026f0e 	bge	r2,zero,50b4 <_dtoa_r+0xc20>
    46f8:	d8000915 	stw	zero,36(sp)
    46fc:	b5bfffc4 	addi	r22,r22,-1
    4700:	a002a416 	blt	r20,zero,5194 <_dtoa_r+0xd00>
    4704:	d8000515 	stw	zero,20(sp)
    4708:	b0026d0e 	bge	r22,zero,50c0 <_dtoa_r+0xc2c>
    470c:	d8800517 	ldw	r2,20(sp)
    4710:	d8c00217 	ldw	r3,8(sp)
    4714:	dd800415 	stw	r22,16(sp)
    4718:	1585c83a 	sub	r2,r2,r22
    471c:	d8800515 	stw	r2,20(sp)
    4720:	0585c83a 	sub	r2,zero,r22
    4724:	d8800815 	stw	r2,32(sp)
    4728:	188002a8 	cmpgeui	r2,r3,10
    472c:	002d883a 	mov	r22,zero
    4730:	1002691e 	bne	r2,zero,50d8 <_dtoa_r+0xc44>
    4734:	18800190 	cmplti	r2,r3,6
    4738:	1002ba1e 	bne	r2,zero,5224 <_dtoa_r+0xd90>
    473c:	18bfff04 	addi	r2,r3,-4
    4740:	d8800215 	stw	r2,8(sp)
    4744:	0021883a 	mov	r16,zero
    4748:	d8c00217 	ldw	r3,8(sp)
    474c:	188000e0 	cmpeqi	r2,r3,3
    4750:	10039d1e 	bne	r2,zero,55c8 <_dtoa_r+0x1134>
    4754:	18800108 	cmpgei	r2,r3,4
    4758:	10027a26 	beq	r2,zero,5144 <_dtoa_r+0xcb0>
    475c:	d8c00217 	ldw	r3,8(sp)
    4760:	18800120 	cmpeqi	r2,r3,4
    4764:	10026926 	beq	r2,zero,510c <_dtoa_r+0xc78>
    4768:	00800044 	movi	r2,1
    476c:	d8800715 	stw	r2,28(sp)
    4770:	d8801e17 	ldw	r2,120(sp)
    4774:	0083670e 	bge	zero,r2,5514 <_dtoa_r+0x1080>
    4778:	d8800b15 	stw	r2,44(sp)
    477c:	d8800615 	stw	r2,24(sp)
    4780:	100d883a 	mov	r6,r2
    4784:	e0001115 	stw	zero,68(fp)
    4788:	30800610 	cmplti	r2,r6,24
    478c:	dc800617 	ldw	r18,24(sp)
    4790:	1004eb1e 	bne	r2,zero,5b40 <_dtoa_r+0x16ac>
    4794:	00c00044 	movi	r3,1
    4798:	00800104 	movi	r2,4
    479c:	1085883a 	add	r2,r2,r2
    47a0:	11000504 	addi	r4,r2,20
    47a4:	180b883a 	mov	r5,r3
    47a8:	18c00044 	addi	r3,r3,1
    47ac:	313ffb2e 	bgeu	r6,r4,479c <_dtoa_r+0x308>
    47b0:	e1401115 	stw	r5,68(fp)
    47b4:	e009883a 	mov	r4,fp
    47b8:	0006b840 	call	6b84 <_Balloc>
    47bc:	d8800315 	stw	r2,12(sp)
    47c0:	e0801015 	stw	r2,64(fp)
    47c4:	948003e8 	cmpgeui	r18,r18,15
    47c8:	9000fe1e 	bne	r18,zero,4bc4 <_dtoa_r+0x730>
    47cc:	8000fd26 	beq	r16,zero,4bc4 <_dtoa_r+0x730>
    47d0:	d9000417 	ldw	r4,16(sp)
    47d4:	0103c60e 	bge	zero,r4,56f0 <_dtoa_r+0x125c>
    47d8:	208003cc 	andi	r2,r4,15
    47dc:	100690fa 	slli	r3,r2,3
    47e0:	202fd13a 	srai	r23,r4,4
    47e4:	00800074 	movhi	r2,1
    47e8:	10bfe304 	addi	r2,r2,-116
    47ec:	10c5883a 	add	r2,r2,r3
    47f0:	b8c0040c 	andi	r3,r23,16
    47f4:	12800017 	ldw	r10,0(r2)
    47f8:	12400117 	ldw	r9,4(r2)
    47fc:	1803621e 	bne	r3,zero,5588 <_dtoa_r+0x10f4>
    4800:	d8800117 	ldw	r2,4(sp)
    4804:	8827883a 	mov	r19,r17
    4808:	04000084 	movi	r16,2
    480c:	d8800c15 	stw	r2,48(sp)
    4810:	04800074 	movhi	r18,1
    4814:	94bfd904 	addi	r18,r18,-156
    4818:	b8000f26 	beq	r23,zero,4858 <_dtoa_r+0x3c4>
    481c:	5005883a 	mov	r2,r10
    4820:	4807883a 	mov	r3,r9
    4824:	b980004c 	andi	r6,r23,1
    4828:	1009883a 	mov	r4,r2
    482c:	b82fd07a 	srai	r23,r23,1
    4830:	180b883a 	mov	r5,r3
    4834:	30000426 	beq	r6,zero,4848 <_dtoa_r+0x3b4>
    4838:	91800017 	ldw	r6,0(r18)
    483c:	91c00117 	ldw	r7,4(r18)
    4840:	84000044 	addi	r16,r16,1
    4844:	000c1c40 	call	c1c4 <__muldf3>
    4848:	94800204 	addi	r18,r18,8
    484c:	b83ff51e 	bne	r23,zero,4824 <_dtoa_r+0x390>
    4850:	1015883a 	mov	r10,r2
    4854:	1813883a 	mov	r9,r3
    4858:	d9000c17 	ldw	r4,48(sp)
    485c:	980b883a 	mov	r5,r19
    4860:	500d883a 	mov	r6,r10
    4864:	480f883a 	mov	r7,r9
    4868:	000b6000 	call	b600 <__divdf3>
    486c:	1025883a 	mov	r18,r2
    4870:	1827883a 	mov	r19,r3
    4874:	d8800917 	ldw	r2,36(sp)
    4878:	10000626 	beq	r2,zero,4894 <_dtoa_r+0x400>
    487c:	000d883a 	mov	r6,zero
    4880:	01cffc34 	movhi	r7,16368
    4884:	9009883a 	mov	r4,r18
    4888:	980b883a 	mov	r5,r19
    488c:	000c0d40 	call	c0d4 <__ledf2>
    4890:	10042616 	blt	r2,zero,592c <_dtoa_r+0x1498>
    4894:	8009883a 	mov	r4,r16
    4898:	000d3e40 	call	d3e4 <__floatsidf>
    489c:	900d883a 	mov	r6,r18
    48a0:	980f883a 	mov	r7,r19
    48a4:	1009883a 	mov	r4,r2
    48a8:	180b883a 	mov	r5,r3
    48ac:	000c1c40 	call	c1c4 <__muldf3>
    48b0:	000d883a 	mov	r6,zero
    48b4:	01d00734 	movhi	r7,16412
    48b8:	1009883a 	mov	r4,r2
    48bc:	180b883a 	mov	r5,r3
    48c0:	000ac600 	call	ac60 <__adddf3>
    48c4:	d8800c15 	stw	r2,48(sp)
    48c8:	00bf3034 	movhi	r2,64704
    48cc:	1885883a 	add	r2,r3,r2
    48d0:	d8800d15 	stw	r2,52(sp)
    48d4:	d8800617 	ldw	r2,24(sp)
    48d8:	10036d26 	beq	r2,zero,5690 <_dtoa_r+0x11fc>
    48dc:	d8800417 	ldw	r2,16(sp)
    48e0:	d8800f15 	stw	r2,60(sp)
    48e4:	d8800617 	ldw	r2,24(sp)
    48e8:	d8800e15 	stw	r2,56(sp)
    48ec:	980b883a 	mov	r5,r19
    48f0:	9009883a 	mov	r4,r18
    48f4:	000d3640 	call	d364 <__fixdfsi>
    48f8:	1009883a 	mov	r4,r2
    48fc:	102f883a 	mov	r23,r2
    4900:	000d3e40 	call	d3e4 <__floatsidf>
    4904:	100d883a 	mov	r6,r2
    4908:	180f883a 	mov	r7,r3
    490c:	9009883a 	mov	r4,r18
    4910:	980b883a 	mov	r5,r19
    4914:	000c9a40 	call	c9a4 <__subdf3>
    4918:	1025883a 	mov	r18,r2
    491c:	d8800e17 	ldw	r2,56(sp)
    4920:	1821883a 	mov	r16,r3
    4924:	ba400c04 	addi	r9,r23,48
    4928:	10bfffc4 	addi	r2,r2,-1
    492c:	100690fa 	slli	r3,r2,3
    4930:	00800074 	movhi	r2,1
    4934:	10bfe304 	addi	r2,r2,-116
    4938:	10c5883a 	add	r2,r2,r3
    493c:	11800017 	ldw	r6,0(r2)
    4940:	d8c00317 	ldw	r3,12(sp)
    4944:	11c00117 	ldw	r7,4(r2)
    4948:	d8800717 	ldw	r2,28(sp)
    494c:	4811883a 	mov	r8,r9
    4950:	da001015 	stw	r8,64(sp)
    4954:	1dc00044 	addi	r23,r3,1
    4958:	1003a226 	beq	r2,zero,57e4 <_dtoa_r+0x1350>
    495c:	0009883a 	mov	r4,zero
    4960:	014ff834 	movhi	r5,16352
    4964:	da401115 	stw	r9,68(sp)
    4968:	000b6000 	call	b600 <__divdf3>
    496c:	d9800c17 	ldw	r6,48(sp)
    4970:	d9c00d17 	ldw	r7,52(sp)
    4974:	1009883a 	mov	r4,r2
    4978:	180b883a 	mov	r5,r3
    497c:	000c9a40 	call	c9a4 <__subdf3>
    4980:	1827883a 	mov	r19,r3
    4984:	da401117 	ldw	r9,68(sp)
    4988:	d8c00317 	ldw	r3,12(sp)
    498c:	900d883a 	mov	r6,r18
    4990:	800f883a 	mov	r7,r16
    4994:	1a400005 	stb	r9,0(r3)
    4998:	1009883a 	mov	r4,r2
    499c:	980b883a 	mov	r5,r19
    49a0:	d8800c15 	stw	r2,48(sp)
    49a4:	000bfe40 	call	bfe4 <__gedf2>
    49a8:	da001017 	ldw	r8,64(sp)
    49ac:	00804816 	blt	zero,r2,4ad0 <_dtoa_r+0x63c>
    49b0:	900d883a 	mov	r6,r18
    49b4:	800f883a 	mov	r7,r16
    49b8:	0009883a 	mov	r4,zero
    49bc:	014ffc34 	movhi	r5,16368
    49c0:	da000d15 	stw	r8,52(sp)
    49c4:	000c9a40 	call	c9a4 <__subdf3>
    49c8:	d9000c17 	ldw	r4,48(sp)
    49cc:	100d883a 	mov	r6,r2
    49d0:	180f883a 	mov	r7,r3
    49d4:	980b883a 	mov	r5,r19
    49d8:	000bfe40 	call	bfe4 <__gedf2>
    49dc:	da000d17 	ldw	r8,52(sp)
    49e0:	00844e16 	blt	zero,r2,5b1c <_dtoa_r+0x1688>
    49e4:	d8c00e17 	ldw	r3,56(sp)
    49e8:	18800060 	cmpeqi	r2,r3,1
    49ec:	1000751e 	bne	r2,zero,4bc4 <_dtoa_r+0x730>
    49f0:	d8800317 	ldw	r2,12(sp)
    49f4:	dd800d15 	stw	r22,52(sp)
    49f8:	dd000e15 	stw	r20,56(sp)
    49fc:	10c5883a 	add	r2,r2,r3
    4a00:	dd000c17 	ldw	r20,48(sp)
    4a04:	102d883a 	mov	r22,r2
    4a08:	dc400c15 	stw	r17,48(sp)
    4a0c:	00000806 	br	4a30 <_dtoa_r+0x59c>
    4a10:	000c9a40 	call	c9a4 <__subdf3>
    4a14:	a00d883a 	mov	r6,r20
    4a18:	980f883a 	mov	r7,r19
    4a1c:	1009883a 	mov	r4,r2
    4a20:	180b883a 	mov	r5,r3
    4a24:	000c0d40 	call	c0d4 <__ledf2>
    4a28:	10042316 	blt	r2,zero,5ab8 <_dtoa_r+0x1624>
    4a2c:	bd806226 	beq	r23,r22,4bb8 <_dtoa_r+0x724>
    4a30:	a009883a 	mov	r4,r20
    4a34:	980b883a 	mov	r5,r19
    4a38:	000d883a 	mov	r6,zero
    4a3c:	01d00934 	movhi	r7,16420
    4a40:	000c1c40 	call	c1c4 <__muldf3>
    4a44:	000d883a 	mov	r6,zero
    4a48:	01d00934 	movhi	r7,16420
    4a4c:	9009883a 	mov	r4,r18
    4a50:	800b883a 	mov	r5,r16
    4a54:	1029883a 	mov	r20,r2
    4a58:	1827883a 	mov	r19,r3
    4a5c:	000c1c40 	call	c1c4 <__muldf3>
    4a60:	180b883a 	mov	r5,r3
    4a64:	1009883a 	mov	r4,r2
    4a68:	1821883a 	mov	r16,r3
    4a6c:	1025883a 	mov	r18,r2
    4a70:	000d3640 	call	d364 <__fixdfsi>
    4a74:	1009883a 	mov	r4,r2
    4a78:	1023883a 	mov	r17,r2
    4a7c:	000d3e40 	call	d3e4 <__floatsidf>
    4a80:	9009883a 	mov	r4,r18
    4a84:	800b883a 	mov	r5,r16
    4a88:	100d883a 	mov	r6,r2
    4a8c:	180f883a 	mov	r7,r3
    4a90:	000c9a40 	call	c9a4 <__subdf3>
    4a94:	bdc00044 	addi	r23,r23,1
    4a98:	8c400c04 	addi	r17,r17,48
    4a9c:	a00d883a 	mov	r6,r20
    4aa0:	980f883a 	mov	r7,r19
    4aa4:	1009883a 	mov	r4,r2
    4aa8:	180b883a 	mov	r5,r3
    4aac:	bc7fffc5 	stb	r17,-1(r23)
    4ab0:	1025883a 	mov	r18,r2
    4ab4:	1821883a 	mov	r16,r3
    4ab8:	000c0d40 	call	c0d4 <__ledf2>
    4abc:	900d883a 	mov	r6,r18
    4ac0:	800f883a 	mov	r7,r16
    4ac4:	0009883a 	mov	r4,zero
    4ac8:	014ffc34 	movhi	r5,16368
    4acc:	103fd00e 	bge	r2,zero,4a10 <_dtoa_r+0x57c>
    4ad0:	d8800f17 	ldw	r2,60(sp)
    4ad4:	10800044 	addi	r2,r2,1
    4ad8:	d8800415 	stw	r2,16(sp)
    4adc:	a80b883a 	mov	r5,r21
    4ae0:	e009883a 	mov	r4,fp
    4ae4:	0006c280 	call	6c28 <_Bfree>
    4ae8:	d8801f17 	ldw	r2,124(sp)
    4aec:	d8c00417 	ldw	r3,16(sp)
    4af0:	b8000005 	stb	zero,0(r23)
    4af4:	10c00015 	stw	r3,0(r2)
    4af8:	d8802117 	ldw	r2,132(sp)
    4afc:	103e9726 	beq	r2,zero,455c <_dtoa_r+0xc8>
    4b00:	15c00015 	stw	r23,0(r2)
    4b04:	003e9506 	br	455c <_dtoa_r+0xc8>
    4b08:	04600034 	movhi	r17,32768
    4b0c:	8c7fffc4 	addi	r17,r17,-1
    4b10:	9c62703a 	and	r17,r19,r17
    4b14:	00800044 	movi	r2,1
    4b18:	8827883a 	mov	r19,r17
    4b1c:	80800015 	stw	r2,0(r16)
    4b20:	00dffc34 	movhi	r3,32752
    4b24:	989ffc2c 	andhi	r2,r19,32752
    4b28:	10fe7a1e 	bne	r2,r3,4514 <_dtoa_r+0x80>
    4b2c:	00800434 	movhi	r2,16
    4b30:	d8c01f17 	ldw	r3,124(sp)
    4b34:	10bfffc4 	addi	r2,r2,-1
    4b38:	98a6703a 	and	r19,r19,r2
    4b3c:	0089c3c4 	movi	r2,9999
    4b40:	18800015 	stw	r2,0(r3)
    4b44:	d8800117 	ldw	r2,4(sp)
    4b48:	98aab03a 	or	r21,r19,r2
    4b4c:	a800141e 	bne	r21,zero,4ba0 <_dtoa_r+0x70c>
    4b50:	d8802117 	ldw	r2,132(sp)
    4b54:	1003f626 	beq	r2,zero,5b30 <_dtoa_r+0x169c>
    4b58:	00800074 	movhi	r2,1
    4b5c:	1007883a 	mov	r3,r2
    4b60:	18ffc904 	addi	r3,r3,-220
    4b64:	00800074 	movhi	r2,1
    4b68:	d8c00315 	stw	r3,12(sp)
    4b6c:	10bfcb04 	addi	r2,r2,-212
    4b70:	d8c02117 	ldw	r3,132(sp)
    4b74:	18800015 	stw	r2,0(r3)
    4b78:	003e7806 	br	455c <_dtoa_r+0xc8>
    4b7c:	01400434 	movhi	r5,16
    4b80:	297fffc4 	addi	r5,r5,-1
    4b84:	894a703a 	and	r5,r17,r5
    4b88:	9009883a 	mov	r4,r18
    4b8c:	294ffc34 	orhi	r5,r5,16368
    4b90:	843f0044 	addi	r16,r16,-1023
    4b94:	dc801217 	ldw	r18,72(sp)
    4b98:	d8000a15 	stw	zero,40(sp)
    4b9c:	003e9b06 	br	460c <_dtoa_r+0x178>
    4ba0:	d8802117 	ldw	r2,132(sp)
    4ba4:	1002461e 	bne	r2,zero,54c0 <_dtoa_r+0x102c>
    4ba8:	00800074 	movhi	r2,1
    4bac:	10bfc804 	addi	r2,r2,-224
    4bb0:	d8800315 	stw	r2,12(sp)
    4bb4:	003e6906 	br	455c <_dtoa_r+0xc8>
    4bb8:	dd800d17 	ldw	r22,52(sp)
    4bbc:	dd000e17 	ldw	r20,56(sp)
    4bc0:	dc400c17 	ldw	r17,48(sp)
    4bc4:	d8801317 	ldw	r2,76(sp)
    4bc8:	10009f16 	blt	r2,zero,4e48 <_dtoa_r+0x9b4>
    4bcc:	d9000417 	ldw	r4,16(sp)
    4bd0:	20c003c8 	cmpgei	r3,r4,15
    4bd4:	18009c1e 	bne	r3,zero,4e48 <_dtoa_r+0x9b4>
    4bd8:	200690fa 	slli	r3,r4,3
    4bdc:	00800074 	movhi	r2,1
    4be0:	10bfe304 	addi	r2,r2,-116
    4be4:	10c5883a 	add	r2,r2,r3
    4be8:	14000017 	ldw	r16,0(r2)
    4bec:	14800117 	ldw	r18,4(r2)
    4bf0:	d8801e17 	ldw	r2,120(sp)
    4bf4:	1000140e 	bge	r2,zero,4c48 <_dtoa_r+0x7b4>
    4bf8:	d8800617 	ldw	r2,24(sp)
    4bfc:	00801216 	blt	zero,r2,4c48 <_dtoa_r+0x7b4>
    4c00:	1002b81e 	bne	r2,zero,56e4 <_dtoa_r+0x1250>
    4c04:	8009883a 	mov	r4,r16
    4c08:	900b883a 	mov	r5,r18
    4c0c:	000d883a 	mov	r6,zero
    4c10:	01d00534 	movhi	r7,16404
    4c14:	000c1c40 	call	c1c4 <__muldf3>
    4c18:	d9800117 	ldw	r6,4(sp)
    4c1c:	880f883a 	mov	r7,r17
    4c20:	1009883a 	mov	r4,r2
    4c24:	180b883a 	mov	r5,r3
    4c28:	000bfe40 	call	bfe4 <__gedf2>
    4c2c:	0025883a 	mov	r18,zero
    4c30:	0021883a 	mov	r16,zero
    4c34:	1001fd16 	blt	r2,zero,542c <_dtoa_r+0xf98>
    4c38:	d8801e17 	ldw	r2,120(sp)
    4c3c:	ddc00317 	ldw	r23,12(sp)
    4c40:	00a2303a 	nor	r17,zero,r2
    4c44:	0001ff06 	br	5444 <_dtoa_r+0xfb0>
    4c48:	dcc00117 	ldw	r19,4(sp)
    4c4c:	800d883a 	mov	r6,r16
    4c50:	900f883a 	mov	r7,r18
    4c54:	880b883a 	mov	r5,r17
    4c58:	9809883a 	mov	r4,r19
    4c5c:	000b6000 	call	b600 <__divdf3>
    4c60:	180b883a 	mov	r5,r3
    4c64:	1009883a 	mov	r4,r2
    4c68:	000d3640 	call	d364 <__fixdfsi>
    4c6c:	1009883a 	mov	r4,r2
    4c70:	102d883a 	mov	r22,r2
    4c74:	000d3e40 	call	d3e4 <__floatsidf>
    4c78:	800d883a 	mov	r6,r16
    4c7c:	900f883a 	mov	r7,r18
    4c80:	1009883a 	mov	r4,r2
    4c84:	180b883a 	mov	r5,r3
    4c88:	000c1c40 	call	c1c4 <__muldf3>
    4c8c:	880b883a 	mov	r5,r17
    4c90:	100d883a 	mov	r6,r2
    4c94:	180f883a 	mov	r7,r3
    4c98:	9809883a 	mov	r4,r19
    4c9c:	000c9a40 	call	c9a4 <__subdf3>
    4ca0:	dc400317 	ldw	r17,12(sp)
    4ca4:	1009883a 	mov	r4,r2
    4ca8:	d9c00417 	ldw	r7,16(sp)
    4cac:	b0800c04 	addi	r2,r22,48
    4cb0:	88800005 	stb	r2,0(r17)
    4cb4:	d8800617 	ldw	r2,24(sp)
    4cb8:	39c00044 	addi	r7,r7,1
    4cbc:	d9c00415 	stw	r7,16(sp)
    4cc0:	11800060 	cmpeqi	r6,r2,1
    4cc4:	180b883a 	mov	r5,r3
    4cc8:	2005883a 	mov	r2,r4
    4ccc:	8dc00044 	addi	r23,r17,1
    4cd0:	3000391e 	bne	r6,zero,4db8 <_dtoa_r+0x924>
    4cd4:	01d00934 	movhi	r7,16420
    4cd8:	000c1c40 	call	c1c4 <__muldf3>
    4cdc:	000d883a 	mov	r6,zero
    4ce0:	000f883a 	mov	r7,zero
    4ce4:	1009883a 	mov	r4,r2
    4ce8:	180b883a 	mov	r5,r3
    4cec:	1027883a 	mov	r19,r2
    4cf0:	1829883a 	mov	r20,r3
    4cf4:	000bf640 	call	bf64 <__eqdf2>
    4cf8:	103f7826 	beq	r2,zero,4adc <_dtoa_r+0x648>
    4cfc:	d8c00617 	ldw	r3,24(sp)
    4d00:	8805883a 	mov	r2,r17
    4d04:	dd400115 	stw	r21,4(sp)
    4d08:	8c400084 	addi	r17,r17,2
    4d0c:	10ed883a 	add	r22,r2,r3
    4d10:	00000a06 	br	4d3c <_dtoa_r+0x8a8>
    4d14:	000c1c40 	call	c1c4 <__muldf3>
    4d18:	000d883a 	mov	r6,zero
    4d1c:	000f883a 	mov	r7,zero
    4d20:	1009883a 	mov	r4,r2
    4d24:	180b883a 	mov	r5,r3
    4d28:	1027883a 	mov	r19,r2
    4d2c:	1829883a 	mov	r20,r3
    4d30:	8c400044 	addi	r17,r17,1
    4d34:	000bf640 	call	bf64 <__eqdf2>
    4d38:	10029d26 	beq	r2,zero,57b0 <_dtoa_r+0x131c>
    4d3c:	800d883a 	mov	r6,r16
    4d40:	900f883a 	mov	r7,r18
    4d44:	9809883a 	mov	r4,r19
    4d48:	a00b883a 	mov	r5,r20
    4d4c:	000b6000 	call	b600 <__divdf3>
    4d50:	180b883a 	mov	r5,r3
    4d54:	1009883a 	mov	r4,r2
    4d58:	000d3640 	call	d364 <__fixdfsi>
    4d5c:	1009883a 	mov	r4,r2
    4d60:	102b883a 	mov	r21,r2
    4d64:	000d3e40 	call	d3e4 <__floatsidf>
    4d68:	800d883a 	mov	r6,r16
    4d6c:	900f883a 	mov	r7,r18
    4d70:	1009883a 	mov	r4,r2
    4d74:	180b883a 	mov	r5,r3
    4d78:	000c1c40 	call	c1c4 <__muldf3>
    4d7c:	100d883a 	mov	r6,r2
    4d80:	180f883a 	mov	r7,r3
    4d84:	9809883a 	mov	r4,r19
    4d88:	a00b883a 	mov	r5,r20
    4d8c:	000c9a40 	call	c9a4 <__subdf3>
    4d90:	aa400c04 	addi	r9,r21,48
    4d94:	8a7fffc5 	stb	r9,-1(r17)
    4d98:	000d883a 	mov	r6,zero
    4d9c:	01d00934 	movhi	r7,16420
    4da0:	1009883a 	mov	r4,r2
    4da4:	180b883a 	mov	r5,r3
    4da8:	882f883a 	mov	r23,r17
    4dac:	b47fd91e 	bne	r22,r17,4d14 <_dtoa_r+0x880>
    4db0:	a82d883a 	mov	r22,r21
    4db4:	dd400117 	ldw	r21,4(sp)
    4db8:	100d883a 	mov	r6,r2
    4dbc:	180f883a 	mov	r7,r3
    4dc0:	1009883a 	mov	r4,r2
    4dc4:	180b883a 	mov	r5,r3
    4dc8:	000ac600 	call	ac60 <__adddf3>
    4dcc:	800d883a 	mov	r6,r16
    4dd0:	900f883a 	mov	r7,r18
    4dd4:	1009883a 	mov	r4,r2
    4dd8:	180b883a 	mov	r5,r3
    4ddc:	1027883a 	mov	r19,r2
    4de0:	1823883a 	mov	r17,r3
    4de4:	000bfe40 	call	bfe4 <__gedf2>
    4de8:	00800816 	blt	zero,r2,4e0c <_dtoa_r+0x978>
    4dec:	800d883a 	mov	r6,r16
    4df0:	900f883a 	mov	r7,r18
    4df4:	9809883a 	mov	r4,r19
    4df8:	880b883a 	mov	r5,r17
    4dfc:	000bf640 	call	bf64 <__eqdf2>
    4e00:	103f361e 	bne	r2,zero,4adc <_dtoa_r+0x648>
    4e04:	b580004c 	andi	r22,r22,1
    4e08:	b03f3426 	beq	r22,zero,4adc <_dtoa_r+0x648>
    4e0c:	ba3fffc3 	ldbu	r8,-1(r23)
    4e10:	d9000317 	ldw	r4,12(sp)
    4e14:	00000306 	br	4e24 <_dtoa_r+0x990>
    4e18:	20c30e26 	beq	r4,r3,5a54 <_dtoa_r+0x15c0>
    4e1c:	1a3fffc3 	ldbu	r8,-1(r3)
    4e20:	182f883a 	mov	r23,r3
    4e24:	40803fcc 	andi	r2,r8,255
    4e28:	1080201c 	xori	r2,r2,128
    4e2c:	10bfe004 	addi	r2,r2,-128
    4e30:	10800e60 	cmpeqi	r2,r2,57
    4e34:	b8ffffc4 	addi	r3,r23,-1
    4e38:	103ff71e 	bne	r2,zero,4e18 <_dtoa_r+0x984>
    4e3c:	42000044 	addi	r8,r8,1
    4e40:	1a000005 	stb	r8,0(r3)
    4e44:	003f2506 	br	4adc <_dtoa_r+0x648>
    4e48:	d8c00717 	ldw	r3,28(sp)
    4e4c:	1800e426 	beq	r3,zero,51e0 <_dtoa_r+0xd4c>
    4e50:	d8c00217 	ldw	r3,8(sp)
    4e54:	18c00088 	cmpgei	r3,r3,2
    4e58:	1801ec26 	beq	r3,zero,560c <_dtoa_r+0x1178>
    4e5c:	d8800617 	ldw	r2,24(sp)
    4e60:	14bfffc4 	addi	r18,r2,-1
    4e64:	d8800817 	ldw	r2,32(sp)
    4e68:	1481c50e 	bge	r2,r18,5580 <_dtoa_r+0x10ec>
    4e6c:	d8800817 	ldw	r2,32(sp)
    4e70:	dc800815 	stw	r18,32(sp)
    4e74:	9085c83a 	sub	r2,r18,r2
    4e78:	b0ad883a 	add	r22,r22,r2
    4e7c:	0025883a 	mov	r18,zero
    4e80:	d8800617 	ldw	r2,24(sp)
    4e84:	10024c16 	blt	r2,zero,57b8 <_dtoa_r+0x1324>
    4e88:	d8c00517 	ldw	r3,20(sp)
    4e8c:	a0a9883a 	add	r20,r20,r2
    4e90:	1885883a 	add	r2,r3,r2
    4e94:	1827883a 	mov	r19,r3
    4e98:	d8800515 	stw	r2,20(sp)
    4e9c:	01400044 	movi	r5,1
    4ea0:	e009883a 	mov	r4,fp
    4ea4:	0006fac0 	call	6fac <__i2b>
    4ea8:	1021883a 	mov	r16,r2
    4eac:	04c0080e 	bge	zero,r19,4ed0 <_dtoa_r+0xa3c>
    4eb0:	0500070e 	bge	zero,r20,4ed0 <_dtoa_r+0xa3c>
    4eb4:	9805883a 	mov	r2,r19
    4eb8:	a4c1a916 	blt	r20,r19,5560 <_dtoa_r+0x10cc>
    4ebc:	d8c00517 	ldw	r3,20(sp)
    4ec0:	98a7c83a 	sub	r19,r19,r2
    4ec4:	a0a9c83a 	sub	r20,r20,r2
    4ec8:	1887c83a 	sub	r3,r3,r2
    4ecc:	d8c00515 	stw	r3,20(sp)
    4ed0:	d8800817 	ldw	r2,32(sp)
    4ed4:	10001426 	beq	r2,zero,4f28 <_dtoa_r+0xa94>
    4ed8:	d8800717 	ldw	r2,28(sp)
    4edc:	10017226 	beq	r2,zero,54a8 <_dtoa_r+0x1014>
    4ee0:	04800e0e 	bge	zero,r18,4f1c <_dtoa_r+0xa88>
    4ee4:	800b883a 	mov	r5,r16
    4ee8:	900d883a 	mov	r6,r18
    4eec:	e009883a 	mov	r4,fp
    4ef0:	00072200 	call	7220 <__pow5mult>
    4ef4:	a80d883a 	mov	r6,r21
    4ef8:	100b883a 	mov	r5,r2
    4efc:	e009883a 	mov	r4,fp
    4f00:	1021883a 	mov	r16,r2
    4f04:	0006fe00 	call	6fe0 <__multiply>
    4f08:	102f883a 	mov	r23,r2
    4f0c:	a80b883a 	mov	r5,r21
    4f10:	e009883a 	mov	r4,fp
    4f14:	0006c280 	call	6c28 <_Bfree>
    4f18:	b82b883a 	mov	r21,r23
    4f1c:	d8800817 	ldw	r2,32(sp)
    4f20:	148dc83a 	sub	r6,r2,r18
    4f24:	3001611e 	bne	r6,zero,54ac <_dtoa_r+0x1018>
    4f28:	01400044 	movi	r5,1
    4f2c:	e009883a 	mov	r4,fp
    4f30:	0006fac0 	call	6fac <__i2b>
    4f34:	1025883a 	mov	r18,r2
    4f38:	0580bc16 	blt	zero,r22,522c <_dtoa_r+0xd98>
    4f3c:	d8800217 	ldw	r2,8(sp)
    4f40:	10800088 	cmpgei	r2,r2,2
    4f44:	10016526 	beq	r2,zero,54dc <_dtoa_r+0x1048>
    4f48:	0023883a 	mov	r17,zero
    4f4c:	00800044 	movi	r2,1
    4f50:	b000bf1e 	bne	r22,zero,5250 <_dtoa_r+0xdbc>
    4f54:	1505883a 	add	r2,r2,r20
    4f58:	108007cc 	andi	r2,r2,31
    4f5c:	1000aa26 	beq	r2,zero,5208 <_dtoa_r+0xd74>
    4f60:	00c00804 	movi	r3,32
    4f64:	1887c83a 	sub	r3,r3,r2
    4f68:	19000150 	cmplti	r4,r3,5
    4f6c:	2002f61e 	bne	r4,zero,5b48 <_dtoa_r+0x16b4>
    4f70:	00c00704 	movi	r3,28
    4f74:	1885c83a 	sub	r2,r3,r2
    4f78:	d8c00517 	ldw	r3,20(sp)
    4f7c:	98a7883a 	add	r19,r19,r2
    4f80:	a0a9883a 	add	r20,r20,r2
    4f84:	1887883a 	add	r3,r3,r2
    4f88:	d8c00515 	stw	r3,20(sp)
    4f8c:	d8800517 	ldw	r2,20(sp)
    4f90:	00809716 	blt	zero,r2,51f0 <_dtoa_r+0xd5c>
    4f94:	0500050e 	bge	zero,r20,4fac <_dtoa_r+0xb18>
    4f98:	900b883a 	mov	r5,r18
    4f9c:	a00d883a 	mov	r6,r20
    4fa0:	e009883a 	mov	r4,fp
    4fa4:	00073480 	call	7348 <__lshift>
    4fa8:	1025883a 	mov	r18,r2
    4fac:	d8800917 	ldw	r2,36(sp)
    4fb0:	10012b1e 	bne	r2,zero,5460 <_dtoa_r+0xfcc>
    4fb4:	d8800617 	ldw	r2,24(sp)
    4fb8:	00810d0e 	bge	zero,r2,53f0 <_dtoa_r+0xf5c>
    4fbc:	d8800417 	ldw	r2,16(sp)
    4fc0:	10800044 	addi	r2,r2,1
    4fc4:	d8800415 	stw	r2,16(sp)
    4fc8:	d8800717 	ldw	r2,28(sp)
    4fcc:	1000b21e 	bne	r2,zero,5298 <_dtoa_r+0xe04>
    4fd0:	ddc00317 	ldw	r23,12(sp)
    4fd4:	04400044 	movi	r17,1
    4fd8:	dcc00617 	ldw	r19,24(sp)
    4fdc:	00000306 	br	4fec <_dtoa_r+0xb58>
    4fe0:	0006c4c0 	call	6c4c <__multadd>
    4fe4:	102b883a 	mov	r21,r2
    4fe8:	8c400044 	addi	r17,r17,1
    4fec:	900b883a 	mov	r5,r18
    4ff0:	a809883a 	mov	r4,r21
    4ff4:	00042600 	call	4260 <quorem>
    4ff8:	10800c04 	addi	r2,r2,48
    4ffc:	bdc00044 	addi	r23,r23,1
    5000:	b8bfffc5 	stb	r2,-1(r23)
    5004:	000f883a 	mov	r7,zero
    5008:	01800284 	movi	r6,10
    500c:	a80b883a 	mov	r5,r21
    5010:	e009883a 	mov	r4,fp
    5014:	8cfff216 	blt	r17,r19,4fe0 <_dtoa_r+0xb4c>
    5018:	1011883a 	mov	r8,r2
    501c:	0029883a 	mov	r20,zero
    5020:	a80b883a 	mov	r5,r21
    5024:	01800044 	movi	r6,1
    5028:	e009883a 	mov	r4,fp
    502c:	da000115 	stw	r8,4(sp)
    5030:	00073480 	call	7348 <__lshift>
    5034:	900b883a 	mov	r5,r18
    5038:	1009883a 	mov	r4,r2
    503c:	102b883a 	mov	r21,r2
    5040:	00074840 	call	7484 <__mcmp>
    5044:	b8ffffc3 	ldbu	r3,-1(r23)
    5048:	0081610e 	bge	zero,r2,55d0 <_dtoa_r+0x113c>
    504c:	d9400317 	ldw	r5,12(sp)
    5050:	00000306 	br	5060 <_dtoa_r+0xbcc>
    5054:	29017726 	beq	r5,r4,5634 <_dtoa_r+0x11a0>
    5058:	20ffffc3 	ldbu	r3,-1(r4)
    505c:	202f883a 	mov	r23,r4
    5060:	18803fcc 	andi	r2,r3,255
    5064:	1080201c 	xori	r2,r2,128
    5068:	10bfe004 	addi	r2,r2,-128
    506c:	10800e60 	cmpeqi	r2,r2,57
    5070:	b93fffc4 	addi	r4,r23,-1
    5074:	103ff71e 	bne	r2,zero,5054 <_dtoa_r+0xbc0>
    5078:	18c00044 	addi	r3,r3,1
    507c:	20c00005 	stb	r3,0(r4)
    5080:	900b883a 	mov	r5,r18
    5084:	e009883a 	mov	r4,fp
    5088:	0006c280 	call	6c28 <_Bfree>
    508c:	803e9326 	beq	r16,zero,4adc <_dtoa_r+0x648>
    5090:	a0000426 	beq	r20,zero,50a4 <_dtoa_r+0xc10>
    5094:	a4000326 	beq	r20,r16,50a4 <_dtoa_r+0xc10>
    5098:	a00b883a 	mov	r5,r20
    509c:	e009883a 	mov	r4,fp
    50a0:	0006c280 	call	6c28 <_Bfree>
    50a4:	800b883a 	mov	r5,r16
    50a8:	e009883a 	mov	r4,fp
    50ac:	0006c280 	call	6c28 <_Bfree>
    50b0:	003e8a06 	br	4adc <_dtoa_r+0x648>
    50b4:	d8000915 	stw	zero,36(sp)
    50b8:	a0003616 	blt	r20,zero,5194 <_dtoa_r+0xd00>
    50bc:	d8000515 	stw	zero,20(sp)
    50c0:	d8c00217 	ldw	r3,8(sp)
    50c4:	dd800415 	stw	r22,16(sp)
    50c8:	d8000815 	stw	zero,32(sp)
    50cc:	188002a8 	cmpgeui	r2,r3,10
    50d0:	a5a9883a 	add	r20,r20,r22
    50d4:	103d9726 	beq	r2,zero,4734 <_dtoa_r+0x2a0>
    50d8:	00800044 	movi	r2,1
    50dc:	d8800715 	stw	r2,28(sp)
    50e0:	00bfffc4 	movi	r2,-1
    50e4:	04bfffc4 	movi	r18,-1
    50e8:	04000044 	movi	r16,1
    50ec:	d8000215 	stw	zero,8(sp)
    50f0:	d8800615 	stw	r2,24(sp)
    50f4:	d8001e15 	stw	zero,120(sp)
    50f8:	d8800617 	ldw	r2,24(sp)
    50fc:	e0001115 	stw	zero,68(fp)
    5100:	000b883a 	mov	r5,zero
    5104:	d8800b15 	stw	r2,44(sp)
    5108:	003daa06 	br	47b4 <_dtoa_r+0x320>
    510c:	18800160 	cmpeqi	r2,r3,5
    5110:	00c00044 	movi	r3,1
    5114:	d8c00715 	stw	r3,28(sp)
    5118:	10000d26 	beq	r2,zero,5150 <_dtoa_r+0xcbc>
    511c:	d8801e17 	ldw	r2,120(sp)
    5120:	d8c00417 	ldw	r3,16(sp)
    5124:	10c5883a 	add	r2,r2,r3
    5128:	d8800b15 	stw	r2,44(sp)
    512c:	10800044 	addi	r2,r2,1
    5130:	d8800615 	stw	r2,24(sp)
    5134:	100d883a 	mov	r6,r2
    5138:	00bd9216 	blt	zero,r2,4784 <_dtoa_r+0x2f0>
    513c:	01800044 	movi	r6,1
    5140:	003d9006 	br	4784 <_dtoa_r+0x2f0>
    5144:	188000a0 	cmpeqi	r2,r3,2
    5148:	d8000715 	stw	zero,28(sp)
    514c:	103d881e 	bne	r2,zero,4770 <_dtoa_r+0x2dc>
    5150:	e0001115 	stw	zero,68(fp)
    5154:	000b883a 	mov	r5,zero
    5158:	e009883a 	mov	r4,fp
    515c:	0006b840 	call	6b84 <_Balloc>
    5160:	d8800315 	stw	r2,12(sp)
    5164:	e0801015 	stw	r2,64(fp)
    5168:	00bfffc4 	movi	r2,-1
    516c:	d8800b15 	stw	r2,44(sp)
    5170:	00800044 	movi	r2,1
    5174:	d8800715 	stw	r2,28(sp)
    5178:	00bfffc4 	movi	r2,-1
    517c:	d8001e15 	stw	zero,120(sp)
    5180:	d8800615 	stw	r2,24(sp)
    5184:	003e8f06 	br	4bc4 <_dtoa_r+0x730>
    5188:	00800044 	movi	r2,1
    518c:	d8800915 	stw	r2,36(sp)
    5190:	a03d5c0e 	bge	r20,zero,4704 <_dtoa_r+0x270>
    5194:	04800044 	movi	r18,1
    5198:	9405c83a 	sub	r2,r18,r16
    519c:	d8800515 	stw	r2,20(sp)
    51a0:	0029883a 	mov	r20,zero
    51a4:	003d5806 	br	4708 <_dtoa_r+0x274>
    51a8:	b009883a 	mov	r4,r22
    51ac:	000d3e40 	call	d3e4 <__floatsidf>
    51b0:	a00d883a 	mov	r6,r20
    51b4:	980f883a 	mov	r7,r19
    51b8:	1009883a 	mov	r4,r2
    51bc:	180b883a 	mov	r5,r3
    51c0:	000bf640 	call	bf64 <__eqdf2>
    51c4:	103d3e26 	beq	r2,zero,46c0 <_dtoa_r+0x22c>
    51c8:	b5bfffc4 	addi	r22,r22,-1
    51cc:	003d3c06 	br	46c0 <_dtoa_r+0x22c>
    51d0:	00800074 	movhi	r2,1
    51d4:	10bf1f04 	addi	r2,r2,-900
    51d8:	d8800315 	stw	r2,12(sp)
    51dc:	003cdf06 	br	455c <_dtoa_r+0xc8>
    51e0:	dc800817 	ldw	r18,32(sp)
    51e4:	dcc00517 	ldw	r19,20(sp)
    51e8:	0021883a 	mov	r16,zero
    51ec:	003f2f06 	br	4eac <_dtoa_r+0xa18>
    51f0:	a80b883a 	mov	r5,r21
    51f4:	100d883a 	mov	r6,r2
    51f8:	e009883a 	mov	r4,fp
    51fc:	00073480 	call	7348 <__lshift>
    5200:	102b883a 	mov	r21,r2
    5204:	003f6306 	br	4f94 <_dtoa_r+0xb00>
    5208:	00800704 	movi	r2,28
    520c:	003f5a06 	br	4f78 <_dtoa_r+0xae4>
    5210:	01000804 	movi	r4,32
    5214:	2089c83a 	sub	r4,r4,r2
    5218:	d8800117 	ldw	r2,4(sp)
    521c:	1108983a 	sll	r4,r2,r4
    5220:	003cf306 	br	45f0 <_dtoa_r+0x15c>
    5224:	04000044 	movi	r16,1
    5228:	003d4706 	br	4748 <_dtoa_r+0x2b4>
    522c:	b00d883a 	mov	r6,r22
    5230:	100b883a 	mov	r5,r2
    5234:	e009883a 	mov	r4,fp
    5238:	00072200 	call	7220 <__pow5mult>
    523c:	1025883a 	mov	r18,r2
    5240:	d8800217 	ldw	r2,8(sp)
    5244:	10800090 	cmplti	r2,r2,2
    5248:	10012f1e 	bne	r2,zero,5708 <_dtoa_r+0x1274>
    524c:	0023883a 	mov	r17,zero
    5250:	90800417 	ldw	r2,16(r18)
    5254:	10800104 	addi	r2,r2,4
    5258:	100490ba 	slli	r2,r2,2
    525c:	9085883a 	add	r2,r18,r2
    5260:	11000017 	ldw	r4,0(r2)
    5264:	0006e980 	call	6e98 <__hi0bits>
    5268:	00c00804 	movi	r3,32
    526c:	1885c83a 	sub	r2,r3,r2
    5270:	003f3806 	br	4f54 <_dtoa_r+0xac0>
    5274:	800b883a 	mov	r5,r16
    5278:	000f883a 	mov	r7,zero
    527c:	01800284 	movi	r6,10
    5280:	e009883a 	mov	r4,fp
    5284:	0006c4c0 	call	6c4c <__multadd>
    5288:	1021883a 	mov	r16,r2
    528c:	d8800b17 	ldw	r2,44(sp)
    5290:	00821b0e 	bge	zero,r2,5b00 <_dtoa_r+0x166c>
    5294:	d8800615 	stw	r2,24(sp)
    5298:	04c0b316 	blt	zero,r19,5568 <_dtoa_r+0x10d4>
    529c:	8801341e 	bne	r17,zero,5770 <_dtoa_r+0x12dc>
    52a0:	8027883a 	mov	r19,r16
    52a4:	dc400317 	ldw	r17,12(sp)
    52a8:	d8c00617 	ldw	r3,24(sp)
    52ac:	d8800117 	ldw	r2,4(sp)
    52b0:	8dffffc4 	addi	r23,r17,-1
    52b4:	b8c7883a 	add	r3,r23,r3
    52b8:	d8c00615 	stw	r3,24(sp)
    52bc:	d8c00217 	ldw	r3,8(sp)
    52c0:	1080004c 	andi	r2,r2,1
    52c4:	d8800815 	stw	r2,32(sp)
    52c8:	10c4b03a 	or	r2,r2,r3
    52cc:	d8800715 	stw	r2,28(sp)
    52d0:	00002c06 	br	5384 <_dtoa_r+0xef0>
    52d4:	b80b883a 	mov	r5,r23
    52d8:	a809883a 	mov	r4,r21
    52dc:	da000515 	stw	r8,20(sp)
    52e0:	00074840 	call	7484 <__mcmp>
    52e4:	b80b883a 	mov	r5,r23
    52e8:	e009883a 	mov	r4,fp
    52ec:	d8800115 	stw	r2,4(sp)
    52f0:	0006c280 	call	6c28 <_Bfree>
    52f4:	d8800117 	ldw	r2,4(sp)
    52f8:	da000517 	ldw	r8,20(sp)
    52fc:	1000021e 	bne	r2,zero,5308 <_dtoa_r+0xe74>
    5300:	d8c00717 	ldw	r3,28(sp)
    5304:	1801f226 	beq	r3,zero,5ad0 <_dtoa_r+0x163c>
    5308:	8dc00044 	addi	r23,r17,1
    530c:	a0010516 	blt	r20,zero,5724 <_dtoa_r+0x1290>
    5310:	d8c00217 	ldw	r3,8(sp)
    5314:	a0e8b03a 	or	r20,r20,r3
    5318:	d8c00817 	ldw	r3,32(sp)
    531c:	1d28b03a 	or	r20,r3,r20
    5320:	a0010026 	beq	r20,zero,5724 <_dtoa_r+0x1290>
    5324:	00812816 	blt	zero,r2,57c8 <_dtoa_r+0x1334>
    5328:	d8800617 	ldw	r2,24(sp)
    532c:	8a000005 	stb	r8,0(r17)
    5330:	14412926 	beq	r2,r17,57d8 <_dtoa_r+0x1344>
    5334:	a80b883a 	mov	r5,r21
    5338:	000f883a 	mov	r7,zero
    533c:	01800284 	movi	r6,10
    5340:	e009883a 	mov	r4,fp
    5344:	0006c4c0 	call	6c4c <__multadd>
    5348:	102b883a 	mov	r21,r2
    534c:	000f883a 	mov	r7,zero
    5350:	01800284 	movi	r6,10
    5354:	800b883a 	mov	r5,r16
    5358:	e009883a 	mov	r4,fp
    535c:	84c02026 	beq	r16,r19,53e0 <_dtoa_r+0xf4c>
    5360:	0006c4c0 	call	6c4c <__multadd>
    5364:	980b883a 	mov	r5,r19
    5368:	000f883a 	mov	r7,zero
    536c:	01800284 	movi	r6,10
    5370:	e009883a 	mov	r4,fp
    5374:	1021883a 	mov	r16,r2
    5378:	0006c4c0 	call	6c4c <__multadd>
    537c:	1027883a 	mov	r19,r2
    5380:	b823883a 	mov	r17,r23
    5384:	900b883a 	mov	r5,r18
    5388:	a809883a 	mov	r4,r21
    538c:	00042600 	call	4260 <quorem>
    5390:	800b883a 	mov	r5,r16
    5394:	a809883a 	mov	r4,r21
    5398:	102d883a 	mov	r22,r2
    539c:	00074840 	call	7484 <__mcmp>
    53a0:	980d883a 	mov	r6,r19
    53a4:	900b883a 	mov	r5,r18
    53a8:	e009883a 	mov	r4,fp
    53ac:	1029883a 	mov	r20,r2
    53b0:	00074dc0 	call	74dc <__mdiff>
    53b4:	102f883a 	mov	r23,r2
    53b8:	10800317 	ldw	r2,12(r2)
    53bc:	b2000c04 	addi	r8,r22,48
    53c0:	103fc426 	beq	r2,zero,52d4 <_dtoa_r+0xe40>
    53c4:	b80b883a 	mov	r5,r23
    53c8:	e009883a 	mov	r4,fp
    53cc:	da000115 	stw	r8,4(sp)
    53d0:	0006c280 	call	6c28 <_Bfree>
    53d4:	00800044 	movi	r2,1
    53d8:	da000117 	ldw	r8,4(sp)
    53dc:	003fca06 	br	5308 <_dtoa_r+0xe74>
    53e0:	0006c4c0 	call	6c4c <__multadd>
    53e4:	1021883a 	mov	r16,r2
    53e8:	1027883a 	mov	r19,r2
    53ec:	003fe406 	br	5380 <_dtoa_r+0xeec>
    53f0:	d8800217 	ldw	r2,8(sp)
    53f4:	108000d0 	cmplti	r2,r2,3
    53f8:	10004b1e 	bne	r2,zero,5528 <_dtoa_r+0x1094>
    53fc:	d8800617 	ldw	r2,24(sp)
    5400:	103e0d1e 	bne	r2,zero,4c38 <_dtoa_r+0x7a4>
    5404:	900b883a 	mov	r5,r18
    5408:	e009883a 	mov	r4,fp
    540c:	000f883a 	mov	r7,zero
    5410:	01800144 	movi	r6,5
    5414:	0006c4c0 	call	6c4c <__multadd>
    5418:	100b883a 	mov	r5,r2
    541c:	a809883a 	mov	r4,r21
    5420:	1025883a 	mov	r18,r2
    5424:	00074840 	call	7484 <__mcmp>
    5428:	00be030e 	bge	zero,r2,4c38 <_dtoa_r+0x7a4>
    542c:	d8c00317 	ldw	r3,12(sp)
    5430:	00800c44 	movi	r2,49
    5434:	18800005 	stb	r2,0(r3)
    5438:	d8800417 	ldw	r2,16(sp)
    543c:	1dc00044 	addi	r23,r3,1
    5440:	14400044 	addi	r17,r2,1
    5444:	900b883a 	mov	r5,r18
    5448:	e009883a 	mov	r4,fp
    544c:	0006c280 	call	6c28 <_Bfree>
    5450:	88800044 	addi	r2,r17,1
    5454:	d8800415 	stw	r2,16(sp)
    5458:	803f121e 	bne	r16,zero,50a4 <_dtoa_r+0xc10>
    545c:	003d9f06 	br	4adc <_dtoa_r+0x648>
    5460:	900b883a 	mov	r5,r18
    5464:	a809883a 	mov	r4,r21
    5468:	00074840 	call	7484 <__mcmp>
    546c:	103ed10e 	bge	r2,zero,4fb4 <_dtoa_r+0xb20>
    5470:	a80b883a 	mov	r5,r21
    5474:	000f883a 	mov	r7,zero
    5478:	01800284 	movi	r6,10
    547c:	e009883a 	mov	r4,fp
    5480:	0006c4c0 	call	6c4c <__multadd>
    5484:	102b883a 	mov	r21,r2
    5488:	d8800417 	ldw	r2,16(sp)
    548c:	153fffc4 	addi	r20,r2,-1
    5490:	d8800717 	ldw	r2,28(sp)
    5494:	103f771e 	bne	r2,zero,5274 <_dtoa_r+0xde0>
    5498:	d8800b17 	ldw	r2,44(sp)
    549c:	0081910e 	bge	zero,r2,5ae4 <_dtoa_r+0x1650>
    54a0:	d8800615 	stw	r2,24(sp)
    54a4:	003eca06 	br	4fd0 <_dtoa_r+0xb3c>
    54a8:	d9800817 	ldw	r6,32(sp)
    54ac:	a80b883a 	mov	r5,r21
    54b0:	e009883a 	mov	r4,fp
    54b4:	00072200 	call	7220 <__pow5mult>
    54b8:	102b883a 	mov	r21,r2
    54bc:	003e9a06 	br	4f28 <_dtoa_r+0xa94>
    54c0:	00800074 	movhi	r2,1
    54c4:	1007883a 	mov	r3,r2
    54c8:	18ffc804 	addi	r3,r3,-224
    54cc:	00800074 	movhi	r2,1
    54d0:	d8c00315 	stw	r3,12(sp)
    54d4:	10bfc8c4 	addi	r2,r2,-221
    54d8:	003da506 	br	4b70 <_dtoa_r+0x6dc>
    54dc:	d8800117 	ldw	r2,4(sp)
    54e0:	103e991e 	bne	r2,zero,4f48 <_dtoa_r+0xab4>
    54e4:	00800434 	movhi	r2,16
    54e8:	10bfffc4 	addi	r2,r2,-1
    54ec:	8884703a 	and	r2,r17,r2
    54f0:	103e951e 	bne	r2,zero,4f48 <_dtoa_r+0xab4>
    54f4:	8c5ffc2c 	andhi	r17,r17,32752
    54f8:	883e9326 	beq	r17,zero,4f48 <_dtoa_r+0xab4>
    54fc:	d8800517 	ldw	r2,20(sp)
    5500:	a5000044 	addi	r20,r20,1
    5504:	04400044 	movi	r17,1
    5508:	10800044 	addi	r2,r2,1
    550c:	d8800515 	stw	r2,20(sp)
    5510:	003e8e06 	br	4f4c <_dtoa_r+0xab8>
    5514:	00800044 	movi	r2,1
    5518:	04800044 	movi	r18,1
    551c:	d8800615 	stw	r2,24(sp)
    5520:	d8801e15 	stw	r2,120(sp)
    5524:	003ef406 	br	50f8 <_dtoa_r+0xc64>
    5528:	d8800417 	ldw	r2,16(sp)
    552c:	10800044 	addi	r2,r2,1
    5530:	d8800415 	stw	r2,16(sp)
    5534:	d8800717 	ldw	r2,28(sp)
    5538:	103f571e 	bne	r2,zero,5298 <_dtoa_r+0xe04>
    553c:	900b883a 	mov	r5,r18
    5540:	a809883a 	mov	r4,r21
    5544:	00042600 	call	4260 <quorem>
    5548:	12000c04 	addi	r8,r2,48
    554c:	d8800317 	ldw	r2,12(sp)
    5550:	0029883a 	mov	r20,zero
    5554:	15c00044 	addi	r23,r2,1
    5558:	12000005 	stb	r8,0(r2)
    555c:	003eb006 	br	5020 <_dtoa_r+0xb8c>
    5560:	a005883a 	mov	r2,r20
    5564:	003e5506 	br	4ebc <_dtoa_r+0xa28>
    5568:	800b883a 	mov	r5,r16
    556c:	980d883a 	mov	r6,r19
    5570:	e009883a 	mov	r4,fp
    5574:	00073480 	call	7348 <__lshift>
    5578:	1021883a 	mov	r16,r2
    557c:	003f4706 	br	529c <_dtoa_r+0xe08>
    5580:	14a5c83a 	sub	r18,r2,r18
    5584:	003e3e06 	br	4e80 <_dtoa_r+0x9ec>
    5588:	00800074 	movhi	r2,1
    558c:	10bfd904 	addi	r2,r2,-156
    5590:	11800817 	ldw	r6,32(r2)
    5594:	11c00917 	ldw	r7,36(r2)
    5598:	d9000117 	ldw	r4,4(sp)
    559c:	880b883a 	mov	r5,r17
    55a0:	da400e15 	stw	r9,56(sp)
    55a4:	da800d15 	stw	r10,52(sp)
    55a8:	000b6000 	call	b600 <__divdf3>
    55ac:	d8800c15 	stw	r2,48(sp)
    55b0:	1827883a 	mov	r19,r3
    55b4:	bdc003cc 	andi	r23,r23,15
    55b8:	040000c4 	movi	r16,3
    55bc:	da800d17 	ldw	r10,52(sp)
    55c0:	da400e17 	ldw	r9,56(sp)
    55c4:	003c9206 	br	4810 <_dtoa_r+0x37c>
    55c8:	d8000715 	stw	zero,28(sp)
    55cc:	003ed306 	br	511c <_dtoa_r+0xc88>
    55d0:	1000031e 	bne	r2,zero,55e0 <_dtoa_r+0x114c>
    55d4:	da000117 	ldw	r8,4(sp)
    55d8:	4200004c 	andi	r8,r8,1
    55dc:	403e9b1e 	bne	r8,zero,504c <_dtoa_r+0xbb8>
    55e0:	1805883a 	mov	r2,r3
    55e4:	00000206 	br	55f0 <_dtoa_r+0x115c>
    55e8:	b8bfff83 	ldbu	r2,-2(r23)
    55ec:	182f883a 	mov	r23,r3
    55f0:	10803fcc 	andi	r2,r2,255
    55f4:	1080201c 	xori	r2,r2,128
    55f8:	10bfe004 	addi	r2,r2,-128
    55fc:	10800c18 	cmpnei	r2,r2,48
    5600:	b8ffffc4 	addi	r3,r23,-1
    5604:	103ff826 	beq	r2,zero,55e8 <_dtoa_r+0x1154>
    5608:	003e9d06 	br	5080 <_dtoa_r+0xbec>
    560c:	d8c00a17 	ldw	r3,40(sp)
    5610:	1800bc26 	beq	r3,zero,5904 <_dtoa_r+0x1470>
    5614:	d8c00517 	ldw	r3,20(sp)
    5618:	10810cc4 	addi	r2,r2,1075
    561c:	a0a9883a 	add	r20,r20,r2
    5620:	1885883a 	add	r2,r3,r2
    5624:	1827883a 	mov	r19,r3
    5628:	dc800817 	ldw	r18,32(sp)
    562c:	d8800515 	stw	r2,20(sp)
    5630:	003e1a06 	br	4e9c <_dtoa_r+0xa08>
    5634:	d8c00317 	ldw	r3,12(sp)
    5638:	00800c44 	movi	r2,49
    563c:	18800005 	stb	r2,0(r3)
    5640:	d8800417 	ldw	r2,16(sp)
    5644:	10800044 	addi	r2,r2,1
    5648:	d8800415 	stw	r2,16(sp)
    564c:	003e8c06 	br	5080 <_dtoa_r+0xbec>
    5650:	8009883a 	mov	r4,r16
    5654:	000d3e40 	call	d3e4 <__floatsidf>
    5658:	900d883a 	mov	r6,r18
    565c:	980f883a 	mov	r7,r19
    5660:	1009883a 	mov	r4,r2
    5664:	180b883a 	mov	r5,r3
    5668:	000c1c40 	call	c1c4 <__muldf3>
    566c:	000d883a 	mov	r6,zero
    5670:	01d00734 	movhi	r7,16412
    5674:	1009883a 	mov	r4,r2
    5678:	180b883a 	mov	r5,r3
    567c:	000ac600 	call	ac60 <__adddf3>
    5680:	d8800c15 	stw	r2,48(sp)
    5684:	00bf3034 	movhi	r2,64704
    5688:	1885883a 	add	r2,r3,r2
    568c:	d8800d15 	stw	r2,52(sp)
    5690:	9009883a 	mov	r4,r18
    5694:	980b883a 	mov	r5,r19
    5698:	000d883a 	mov	r6,zero
    569c:	01d00534 	movhi	r7,16404
    56a0:	000c9a40 	call	c9a4 <__subdf3>
    56a4:	ddc00c17 	ldw	r23,48(sp)
    56a8:	dcc00d17 	ldw	r19,52(sp)
    56ac:	1009883a 	mov	r4,r2
    56b0:	b80d883a 	mov	r6,r23
    56b4:	980f883a 	mov	r7,r19
    56b8:	180b883a 	mov	r5,r3
    56bc:	1025883a 	mov	r18,r2
    56c0:	1821883a 	mov	r16,r3
    56c4:	000bfe40 	call	bfe4 <__gedf2>
    56c8:	0080ee16 	blt	zero,r2,5a84 <_dtoa_r+0x15f0>
    56cc:	99e0003c 	xorhi	r7,r19,32768
    56d0:	b80d883a 	mov	r6,r23
    56d4:	9009883a 	mov	r4,r18
    56d8:	800b883a 	mov	r5,r16
    56dc:	000c0d40 	call	c0d4 <__ledf2>
    56e0:	103d380e 	bge	r2,zero,4bc4 <_dtoa_r+0x730>
    56e4:	0025883a 	mov	r18,zero
    56e8:	0021883a 	mov	r16,zero
    56ec:	003d5206 	br	4c38 <_dtoa_r+0x7a4>
    56f0:	d8800417 	ldw	r2,16(sp)
    56f4:	1000ad1e 	bne	r2,zero,59ac <_dtoa_r+0x1518>
    56f8:	dc800117 	ldw	r18,4(sp)
    56fc:	8827883a 	mov	r19,r17
    5700:	04000084 	movi	r16,2
    5704:	003c5b06 	br	4874 <_dtoa_r+0x3e0>
    5708:	d8800117 	ldw	r2,4(sp)
    570c:	103ecf1e 	bne	r2,zero,524c <_dtoa_r+0xdb8>
    5710:	00800434 	movhi	r2,16
    5714:	10bfffc4 	addi	r2,r2,-1
    5718:	8884703a 	and	r2,r17,r2
    571c:	103f7526 	beq	r2,zero,54f4 <_dtoa_r+0x1060>
    5720:	003eca06 	br	524c <_dtoa_r+0xdb8>
    5724:	00800e0e 	bge	zero,r2,5760 <_dtoa_r+0x12cc>
    5728:	a80b883a 	mov	r5,r21
    572c:	01800044 	movi	r6,1
    5730:	e009883a 	mov	r4,fp
    5734:	da000115 	stw	r8,4(sp)
    5738:	00073480 	call	7348 <__lshift>
    573c:	900b883a 	mov	r5,r18
    5740:	1009883a 	mov	r4,r2
    5744:	102b883a 	mov	r21,r2
    5748:	00074840 	call	7484 <__mcmp>
    574c:	da000117 	ldw	r8,4(sp)
    5750:	0080d50e 	bge	zero,r2,5aa8 <_dtoa_r+0x1614>
    5754:	42000e60 	cmpeqi	r8,r8,57
    5758:	4000c31e 	bne	r8,zero,5a68 <_dtoa_r+0x15d4>
    575c:	b2000c44 	addi	r8,r22,49
    5760:	8029883a 	mov	r20,r16
    5764:	8a000005 	stb	r8,0(r17)
    5768:	9821883a 	mov	r16,r19
    576c:	003e4406 	br	5080 <_dtoa_r+0xbec>
    5770:	81400117 	ldw	r5,4(r16)
    5774:	e009883a 	mov	r4,fp
    5778:	0006b840 	call	6b84 <_Balloc>
    577c:	81800417 	ldw	r6,16(r16)
    5780:	81400304 	addi	r5,r16,12
    5784:	11000304 	addi	r4,r2,12
    5788:	31800084 	addi	r6,r6,2
    578c:	300c90ba 	slli	r6,r6,2
    5790:	1023883a 	mov	r17,r2
    5794:	00014280 	call	1428 <memcpy>
    5798:	01800044 	movi	r6,1
    579c:	880b883a 	mov	r5,r17
    57a0:	e009883a 	mov	r4,fp
    57a4:	00073480 	call	7348 <__lshift>
    57a8:	1027883a 	mov	r19,r2
    57ac:	003ebd06 	br	52a4 <_dtoa_r+0xe10>
    57b0:	dd400117 	ldw	r21,4(sp)
    57b4:	003cc906 	br	4adc <_dtoa_r+0x648>
    57b8:	d8800517 	ldw	r2,20(sp)
    57bc:	d8c00617 	ldw	r3,24(sp)
    57c0:	10e7c83a 	sub	r19,r2,r3
    57c4:	003db506 	br	4e9c <_dtoa_r+0xa08>
    57c8:	40800e58 	cmpnei	r2,r8,57
    57cc:	1000a626 	beq	r2,zero,5a68 <_dtoa_r+0x15d4>
    57d0:	42000044 	addi	r8,r8,1
    57d4:	003fe206 	br	5760 <_dtoa_r+0x12cc>
    57d8:	8029883a 	mov	r20,r16
    57dc:	9821883a 	mov	r16,r19
    57e0:	003e0f06 	br	5020 <_dtoa_r+0xb8c>
    57e4:	d9000c17 	ldw	r4,48(sp)
    57e8:	d9400d17 	ldw	r5,52(sp)
    57ec:	da401015 	stw	r9,64(sp)
    57f0:	000c1c40 	call	c1c4 <__muldf3>
    57f4:	d9000e17 	ldw	r4,56(sp)
    57f8:	d8c00d15 	stw	r3,52(sp)
    57fc:	da401017 	ldw	r9,64(sp)
    5800:	d8c00317 	ldw	r3,12(sp)
    5804:	d8800c15 	stw	r2,48(sp)
    5808:	20800058 	cmpnei	r2,r4,1
    580c:	1a400005 	stb	r9,0(r3)
    5810:	1907883a 	add	r3,r3,r4
    5814:	1809883a 	mov	r4,r3
    5818:	10001d26 	beq	r2,zero,5890 <_dtoa_r+0x13fc>
    581c:	8007883a 	mov	r3,r16
    5820:	9005883a 	mov	r2,r18
    5824:	dc400e15 	stw	r17,56(sp)
    5828:	2021883a 	mov	r16,r4
    582c:	000d883a 	mov	r6,zero
    5830:	01d00934 	movhi	r7,16420
    5834:	1009883a 	mov	r4,r2
    5838:	180b883a 	mov	r5,r3
    583c:	000c1c40 	call	c1c4 <__muldf3>
    5840:	180b883a 	mov	r5,r3
    5844:	1009883a 	mov	r4,r2
    5848:	1825883a 	mov	r18,r3
    584c:	1023883a 	mov	r17,r2
    5850:	000d3640 	call	d364 <__fixdfsi>
    5854:	1009883a 	mov	r4,r2
    5858:	1027883a 	mov	r19,r2
    585c:	000d3e40 	call	d3e4 <__floatsidf>
    5860:	100d883a 	mov	r6,r2
    5864:	180f883a 	mov	r7,r3
    5868:	8809883a 	mov	r4,r17
    586c:	900b883a 	mov	r5,r18
    5870:	bdc00044 	addi	r23,r23,1
    5874:	9cc00c04 	addi	r19,r19,48
    5878:	000c9a40 	call	c9a4 <__subdf3>
    587c:	bcffffc5 	stb	r19,-1(r23)
    5880:	bc3fea1e 	bne	r23,r16,582c <_dtoa_r+0x1398>
    5884:	dc400e17 	ldw	r17,56(sp)
    5888:	1025883a 	mov	r18,r2
    588c:	1821883a 	mov	r16,r3
    5890:	d9000c17 	ldw	r4,48(sp)
    5894:	d9400d17 	ldw	r5,52(sp)
    5898:	000d883a 	mov	r6,zero
    589c:	01cff834 	movhi	r7,16352
    58a0:	000ac600 	call	ac60 <__adddf3>
    58a4:	100d883a 	mov	r6,r2
    58a8:	180f883a 	mov	r7,r3
    58ac:	9009883a 	mov	r4,r18
    58b0:	800b883a 	mov	r5,r16
    58b4:	000bfe40 	call	bfe4 <__gedf2>
    58b8:	00807516 	blt	zero,r2,5a90 <_dtoa_r+0x15fc>
    58bc:	d9800c17 	ldw	r6,48(sp)
    58c0:	d9c00d17 	ldw	r7,52(sp)
    58c4:	0009883a 	mov	r4,zero
    58c8:	014ff834 	movhi	r5,16352
    58cc:	000c9a40 	call	c9a4 <__subdf3>
    58d0:	100d883a 	mov	r6,r2
    58d4:	180f883a 	mov	r7,r3
    58d8:	9009883a 	mov	r4,r18
    58dc:	800b883a 	mov	r5,r16
    58e0:	000c0d40 	call	c0d4 <__ledf2>
    58e4:	103cb70e 	bge	r2,zero,4bc4 <_dtoa_r+0x730>
    58e8:	00000106 	br	58f0 <_dtoa_r+0x145c>
    58ec:	182f883a 	mov	r23,r3
    58f0:	b8bfffc7 	ldb	r2,-1(r23)
    58f4:	b8ffffc4 	addi	r3,r23,-1
    58f8:	10800c20 	cmpeqi	r2,r2,48
    58fc:	103ffb1e 	bne	r2,zero,58ec <_dtoa_r+0x1458>
    5900:	003c7306 	br	4ad0 <_dtoa_r+0x63c>
    5904:	d8c01217 	ldw	r3,72(sp)
    5908:	d9000517 	ldw	r4,20(sp)
    590c:	00800d84 	movi	r2,54
    5910:	10c5c83a 	sub	r2,r2,r3
    5914:	a0a9883a 	add	r20,r20,r2
    5918:	2085883a 	add	r2,r4,r2
    591c:	2027883a 	mov	r19,r4
    5920:	dc800817 	ldw	r18,32(sp)
    5924:	d8800515 	stw	r2,20(sp)
    5928:	003d5c06 	br	4e9c <_dtoa_r+0xa08>
    592c:	d8800617 	ldw	r2,24(sp)
    5930:	103f4726 	beq	r2,zero,5650 <_dtoa_r+0x11bc>
    5934:	ddc00b17 	ldw	r23,44(sp)
    5938:	05fca20e 	bge	zero,r23,4bc4 <_dtoa_r+0x730>
    593c:	980b883a 	mov	r5,r19
    5940:	000d883a 	mov	r6,zero
    5944:	01d00934 	movhi	r7,16420
    5948:	9009883a 	mov	r4,r18
    594c:	000c1c40 	call	c1c4 <__muldf3>
    5950:	81000044 	addi	r4,r16,1
    5954:	1025883a 	mov	r18,r2
    5958:	1827883a 	mov	r19,r3
    595c:	000d3e40 	call	d3e4 <__floatsidf>
    5960:	900d883a 	mov	r6,r18
    5964:	980f883a 	mov	r7,r19
    5968:	1009883a 	mov	r4,r2
    596c:	180b883a 	mov	r5,r3
    5970:	000c1c40 	call	c1c4 <__muldf3>
    5974:	000d883a 	mov	r6,zero
    5978:	01d00734 	movhi	r7,16412
    597c:	1009883a 	mov	r4,r2
    5980:	180b883a 	mov	r5,r3
    5984:	000ac600 	call	ac60 <__adddf3>
    5988:	d8800c15 	stw	r2,48(sp)
    598c:	d8800417 	ldw	r2,16(sp)
    5990:	ddc00e15 	stw	r23,56(sp)
    5994:	10bfffc4 	addi	r2,r2,-1
    5998:	d8800f15 	stw	r2,60(sp)
    599c:	00bf3034 	movhi	r2,64704
    59a0:	1885883a 	add	r2,r3,r2
    59a4:	d8800d15 	stw	r2,52(sp)
    59a8:	003bd006 	br	48ec <_dtoa_r+0x458>
    59ac:	d8800417 	ldw	r2,16(sp)
    59b0:	d9000117 	ldw	r4,4(sp)
    59b4:	880b883a 	mov	r5,r17
    59b8:	00afc83a 	sub	r23,zero,r2
    59bc:	b88003cc 	andi	r2,r23,15
    59c0:	100690fa 	slli	r3,r2,3
    59c4:	00800074 	movhi	r2,1
    59c8:	10bfe304 	addi	r2,r2,-116
    59cc:	10c5883a 	add	r2,r2,r3
    59d0:	11800017 	ldw	r6,0(r2)
    59d4:	11c00117 	ldw	r7,4(r2)
    59d8:	b82fd13a 	srai	r23,r23,4
    59dc:	000c1c40 	call	c1c4 <__muldf3>
    59e0:	1025883a 	mov	r18,r2
    59e4:	1827883a 	mov	r19,r3
    59e8:	b8004a26 	beq	r23,zero,5b14 <_dtoa_r+0x1680>
    59ec:	02000074 	movhi	r8,1
    59f0:	04000084 	movi	r16,2
    59f4:	423fd904 	addi	r8,r8,-156
    59f8:	dc400c15 	stw	r17,48(sp)
    59fc:	000f883a 	mov	r7,zero
    5a00:	8023883a 	mov	r17,r16
    5a04:	4021883a 	mov	r16,r8
    5a08:	b980004c 	andi	r6,r23,1
    5a0c:	1009883a 	mov	r4,r2
    5a10:	b82fd07a 	srai	r23,r23,1
    5a14:	180b883a 	mov	r5,r3
    5a18:	30000526 	beq	r6,zero,5a30 <_dtoa_r+0x159c>
    5a1c:	81c00117 	ldw	r7,4(r16)
    5a20:	81800017 	ldw	r6,0(r16)
    5a24:	8c400044 	addi	r17,r17,1
    5a28:	000c1c40 	call	c1c4 <__muldf3>
    5a2c:	01c00044 	movi	r7,1
    5a30:	84000204 	addi	r16,r16,8
    5a34:	b83ff41e 	bne	r23,zero,5a08 <_dtoa_r+0x1574>
    5a38:	39c03fcc 	andi	r7,r7,255
    5a3c:	8821883a 	mov	r16,r17
    5a40:	dc400c17 	ldw	r17,48(sp)
    5a44:	383b8b26 	beq	r7,zero,4874 <_dtoa_r+0x3e0>
    5a48:	1025883a 	mov	r18,r2
    5a4c:	1827883a 	mov	r19,r3
    5a50:	003b8806 	br	4874 <_dtoa_r+0x3e0>
    5a54:	d8800417 	ldw	r2,16(sp)
    5a58:	02000c44 	movi	r8,49
    5a5c:	10800044 	addi	r2,r2,1
    5a60:	d8800415 	stw	r2,16(sp)
    5a64:	003cf606 	br	4e40 <_dtoa_r+0x9ac>
    5a68:	00800e44 	movi	r2,57
    5a6c:	8029883a 	mov	r20,r16
    5a70:	88800005 	stb	r2,0(r17)
    5a74:	9821883a 	mov	r16,r19
    5a78:	00c00e44 	movi	r3,57
    5a7c:	d9400317 	ldw	r5,12(sp)
    5a80:	003d7706 	br	5060 <_dtoa_r+0xbcc>
    5a84:	0025883a 	mov	r18,zero
    5a88:	0021883a 	mov	r16,zero
    5a8c:	003e6706 	br	542c <_dtoa_r+0xf98>
    5a90:	d8800f17 	ldw	r2,60(sp)
    5a94:	ba3fffc3 	ldbu	r8,-1(r23)
    5a98:	d9000317 	ldw	r4,12(sp)
    5a9c:	10800044 	addi	r2,r2,1
    5aa0:	d8800415 	stw	r2,16(sp)
    5aa4:	003cdf06 	br	4e24 <_dtoa_r+0x990>
    5aa8:	103f2d1e 	bne	r2,zero,5760 <_dtoa_r+0x12cc>
    5aac:	4080004c 	andi	r2,r8,1
    5ab0:	103f281e 	bne	r2,zero,5754 <_dtoa_r+0x12c0>
    5ab4:	003f2a06 	br	5760 <_dtoa_r+0x12cc>
    5ab8:	d8800f17 	ldw	r2,60(sp)
    5abc:	8811883a 	mov	r8,r17
    5ac0:	d9000317 	ldw	r4,12(sp)
    5ac4:	10800044 	addi	r2,r2,1
    5ac8:	d8800415 	stw	r2,16(sp)
    5acc:	003cd506 	br	4e24 <_dtoa_r+0x990>
    5ad0:	40800e60 	cmpeqi	r2,r8,57
    5ad4:	8dc00044 	addi	r23,r17,1
    5ad8:	103fe31e 	bne	r2,zero,5a68 <_dtoa_r+0x15d4>
    5adc:	053f1f16 	blt	zero,r20,575c <_dtoa_r+0x12c8>
    5ae0:	003f1f06 	br	5760 <_dtoa_r+0x12cc>
    5ae4:	d8800217 	ldw	r2,8(sp)
    5ae8:	108000c8 	cmpgei	r2,r2,3
    5aec:	103e9326 	beq	r2,zero,553c <_dtoa_r+0x10a8>
    5af0:	d8800b17 	ldw	r2,44(sp)
    5af4:	dd000415 	stw	r20,16(sp)
    5af8:	d8800615 	stw	r2,24(sp)
    5afc:	003e3f06 	br	53fc <_dtoa_r+0xf68>
    5b00:	d8800217 	ldw	r2,8(sp)
    5b04:	108000c8 	cmpgei	r2,r2,3
    5b08:	103ff91e 	bne	r2,zero,5af0 <_dtoa_r+0x165c>
    5b0c:	d8800b17 	ldw	r2,44(sp)
    5b10:	003de006 	br	5294 <_dtoa_r+0xe00>
    5b14:	04000084 	movi	r16,2
    5b18:	003b5606 	br	4874 <_dtoa_r+0x3e0>
    5b1c:	d8800f17 	ldw	r2,60(sp)
    5b20:	d9000317 	ldw	r4,12(sp)
    5b24:	10800044 	addi	r2,r2,1
    5b28:	d8800415 	stw	r2,16(sp)
    5b2c:	003cbd06 	br	4e24 <_dtoa_r+0x990>
    5b30:	00800074 	movhi	r2,1
    5b34:	10bfc904 	addi	r2,r2,-220
    5b38:	d8800315 	stw	r2,12(sp)
    5b3c:	003a8706 	br	455c <_dtoa_r+0xc8>
    5b40:	000b883a 	mov	r5,zero
    5b44:	003b1b06 	br	47b4 <_dtoa_r+0x320>
    5b48:	18c00120 	cmpeqi	r3,r3,4
    5b4c:	183d0f1e 	bne	r3,zero,4f8c <_dtoa_r+0xaf8>
    5b50:	00c00f04 	movi	r3,60
    5b54:	1885c83a 	sub	r2,r3,r2
    5b58:	003d0706 	br	4f78 <_dtoa_r+0xae4>

00005b5c <_fclose_r>:
    5b5c:	defffc04 	addi	sp,sp,-16
    5b60:	dfc00315 	stw	ra,12(sp)
    5b64:	dc800215 	stw	r18,8(sp)
    5b68:	dc400115 	stw	r17,4(sp)
    5b6c:	dc000015 	stw	r16,0(sp)
    5b70:	28000726 	beq	r5,zero,5b90 <_fclose_r+0x34>
    5b74:	2023883a 	mov	r17,r4
    5b78:	2821883a 	mov	r16,r5
    5b7c:	20000226 	beq	r4,zero,5b88 <_fclose_r+0x2c>
    5b80:	20800e17 	ldw	r2,56(r4)
    5b84:	10002726 	beq	r2,zero,5c24 <_fclose_r+0xc8>
    5b88:	8080030f 	ldh	r2,12(r16)
    5b8c:	1000081e 	bne	r2,zero,5bb0 <_fclose_r+0x54>
    5b90:	0025883a 	mov	r18,zero
    5b94:	9005883a 	mov	r2,r18
    5b98:	dfc00317 	ldw	ra,12(sp)
    5b9c:	dc800217 	ldw	r18,8(sp)
    5ba0:	dc400117 	ldw	r17,4(sp)
    5ba4:	dc000017 	ldw	r16,0(sp)
    5ba8:	dec00404 	addi	sp,sp,16
    5bac:	f800283a 	ret
    5bb0:	800b883a 	mov	r5,r16
    5bb4:	8809883a 	mov	r4,r17
    5bb8:	0005c640 	call	5c64 <__sflush_r>
    5bbc:	1025883a 	mov	r18,r2
    5bc0:	80800b17 	ldw	r2,44(r16)
    5bc4:	10000426 	beq	r2,zero,5bd8 <_fclose_r+0x7c>
    5bc8:	81400717 	ldw	r5,28(r16)
    5bcc:	8809883a 	mov	r4,r17
    5bd0:	103ee83a 	callr	r2
    5bd4:	10001716 	blt	r2,zero,5c34 <_fclose_r+0xd8>
    5bd8:	8080030b 	ldhu	r2,12(r16)
    5bdc:	1080200c 	andi	r2,r2,128
    5be0:	1000181e 	bne	r2,zero,5c44 <_fclose_r+0xe8>
    5be4:	81400c17 	ldw	r5,48(r16)
    5be8:	28000526 	beq	r5,zero,5c00 <_fclose_r+0xa4>
    5bec:	80801004 	addi	r2,r16,64
    5bf0:	28800226 	beq	r5,r2,5bfc <_fclose_r+0xa0>
    5bf4:	8809883a 	mov	r4,r17
    5bf8:	00060300 	call	6030 <_free_r>
    5bfc:	80000c15 	stw	zero,48(r16)
    5c00:	81401117 	ldw	r5,68(r16)
    5c04:	28000326 	beq	r5,zero,5c14 <_fclose_r+0xb8>
    5c08:	8809883a 	mov	r4,r17
    5c0c:	00060300 	call	6030 <_free_r>
    5c10:	80001115 	stw	zero,68(r16)
    5c14:	00009bc0 	call	9bc <__sfp_lock_acquire>
    5c18:	8000030d 	sth	zero,12(r16)
    5c1c:	00009c00 	call	9c0 <__sfp_lock_release>
    5c20:	003fdc06 	br	5b94 <_fclose_r+0x38>
    5c24:	00009ac0 	call	9ac <__sinit>
    5c28:	8080030f 	ldh	r2,12(r16)
    5c2c:	103fd826 	beq	r2,zero,5b90 <_fclose_r+0x34>
    5c30:	003fdf06 	br	5bb0 <_fclose_r+0x54>
    5c34:	8080030b 	ldhu	r2,12(r16)
    5c38:	04bfffc4 	movi	r18,-1
    5c3c:	1080200c 	andi	r2,r2,128
    5c40:	103fe826 	beq	r2,zero,5be4 <_fclose_r+0x88>
    5c44:	81400417 	ldw	r5,16(r16)
    5c48:	8809883a 	mov	r4,r17
    5c4c:	00060300 	call	6030 <_free_r>
    5c50:	003fe406 	br	5be4 <_fclose_r+0x88>

00005c54 <fclose>:
    5c54:	00800074 	movhi	r2,1
    5c58:	200b883a 	mov	r5,r4
    5c5c:	11077c17 	ldw	r4,7664(r2)
    5c60:	0005b5c1 	jmpi	5b5c <_fclose_r>

00005c64 <__sflush_r>:
    5c64:	2880030b 	ldhu	r2,12(r5)
    5c68:	defffb04 	addi	sp,sp,-20
    5c6c:	dcc00315 	stw	r19,12(sp)
    5c70:	dc000015 	stw	r16,0(sp)
    5c74:	dfc00415 	stw	ra,16(sp)
    5c78:	dc800215 	stw	r18,8(sp)
    5c7c:	dc400115 	stw	r17,4(sp)
    5c80:	10c0020c 	andi	r3,r2,8
    5c84:	2821883a 	mov	r16,r5
    5c88:	2027883a 	mov	r19,r4
    5c8c:	18003f1e 	bne	r3,zero,5d8c <__sflush_r+0x128>
    5c90:	28c00117 	ldw	r3,4(r5)
    5c94:	10820014 	ori	r2,r2,2048
    5c98:	2880030d 	sth	r2,12(r5)
    5c9c:	00c0550e 	bge	zero,r3,5df4 <__sflush_r+0x190>
    5ca0:	82000a17 	ldw	r8,40(r16)
    5ca4:	40003126 	beq	r8,zero,5d6c <__sflush_r+0x108>
    5ca8:	9c400017 	ldw	r17,0(r19)
    5cac:	1104000c 	andi	r4,r2,4096
    5cb0:	98000015 	stw	zero,0(r19)
    5cb4:	1007883a 	mov	r3,r2
    5cb8:	81400717 	ldw	r5,28(r16)
    5cbc:	2000521e 	bne	r4,zero,5e08 <__sflush_r+0x1a4>
    5cc0:	01c00044 	movi	r7,1
    5cc4:	000d883a 	mov	r6,zero
    5cc8:	9809883a 	mov	r4,r19
    5ccc:	403ee83a 	callr	r8
    5cd0:	10ffffd8 	cmpnei	r3,r2,-1
    5cd4:	18005826 	beq	r3,zero,5e38 <__sflush_r+0x1d4>
    5cd8:	80c0030b 	ldhu	r3,12(r16)
    5cdc:	82000a17 	ldw	r8,40(r16)
    5ce0:	81400717 	ldw	r5,28(r16)
    5ce4:	18c0010c 	andi	r3,r3,4
    5ce8:	18000626 	beq	r3,zero,5d04 <__sflush_r+0xa0>
    5cec:	81000117 	ldw	r4,4(r16)
    5cf0:	80c00c17 	ldw	r3,48(r16)
    5cf4:	1105c83a 	sub	r2,r2,r4
    5cf8:	18000226 	beq	r3,zero,5d04 <__sflush_r+0xa0>
    5cfc:	80c00f17 	ldw	r3,60(r16)
    5d00:	10c5c83a 	sub	r2,r2,r3
    5d04:	000f883a 	mov	r7,zero
    5d08:	100d883a 	mov	r6,r2
    5d0c:	9809883a 	mov	r4,r19
    5d10:	403ee83a 	callr	r8
    5d14:	10ffffd8 	cmpnei	r3,r2,-1
    5d18:	18003d1e 	bne	r3,zero,5e10 <__sflush_r+0x1ac>
    5d1c:	99000017 	ldw	r4,0(r19)
    5d20:	80c0030b 	ldhu	r3,12(r16)
    5d24:	20004e26 	beq	r4,zero,5e60 <__sflush_r+0x1fc>
    5d28:	21400760 	cmpeqi	r5,r4,29
    5d2c:	2800021e 	bne	r5,zero,5d38 <__sflush_r+0xd4>
    5d30:	210005a0 	cmpeqi	r4,r4,22
    5d34:	20002c26 	beq	r4,zero,5de8 <__sflush_r+0x184>
    5d38:	80800417 	ldw	r2,16(r16)
    5d3c:	18fdffcc 	andi	r3,r3,63487
    5d40:	80c0030d 	sth	r3,12(r16)
    5d44:	80000115 	stw	zero,4(r16)
    5d48:	80800015 	stw	r2,0(r16)
    5d4c:	81400c17 	ldw	r5,48(r16)
    5d50:	9c400015 	stw	r17,0(r19)
    5d54:	28000526 	beq	r5,zero,5d6c <__sflush_r+0x108>
    5d58:	80801004 	addi	r2,r16,64
    5d5c:	28800226 	beq	r5,r2,5d68 <__sflush_r+0x104>
    5d60:	9809883a 	mov	r4,r19
    5d64:	00060300 	call	6030 <_free_r>
    5d68:	80000c15 	stw	zero,48(r16)
    5d6c:	0005883a 	mov	r2,zero
    5d70:	dfc00417 	ldw	ra,16(sp)
    5d74:	dcc00317 	ldw	r19,12(sp)
    5d78:	dc800217 	ldw	r18,8(sp)
    5d7c:	dc400117 	ldw	r17,4(sp)
    5d80:	dc000017 	ldw	r16,0(sp)
    5d84:	dec00504 	addi	sp,sp,20
    5d88:	f800283a 	ret
    5d8c:	2c800417 	ldw	r18,16(r5)
    5d90:	903ff626 	beq	r18,zero,5d6c <__sflush_r+0x108>
    5d94:	2c400017 	ldw	r17,0(r5)
    5d98:	108000cc 	andi	r2,r2,3
    5d9c:	2c800015 	stw	r18,0(r5)
    5da0:	8ca3c83a 	sub	r17,r17,r18
    5da4:	1000161e 	bne	r2,zero,5e00 <__sflush_r+0x19c>
    5da8:	28800517 	ldw	r2,20(r5)
    5dac:	80800215 	stw	r2,8(r16)
    5db0:	04400316 	blt	zero,r17,5dc0 <__sflush_r+0x15c>
    5db4:	003fed06 	br	5d6c <__sflush_r+0x108>
    5db8:	90a5883a 	add	r18,r18,r2
    5dbc:	047feb0e 	bge	zero,r17,5d6c <__sflush_r+0x108>
    5dc0:	80800917 	ldw	r2,36(r16)
    5dc4:	81400717 	ldw	r5,28(r16)
    5dc8:	880f883a 	mov	r7,r17
    5dcc:	900d883a 	mov	r6,r18
    5dd0:	9809883a 	mov	r4,r19
    5dd4:	103ee83a 	callr	r2
    5dd8:	88a3c83a 	sub	r17,r17,r2
    5ddc:	00bff616 	blt	zero,r2,5db8 <__sflush_r+0x154>
    5de0:	80c0030b 	ldhu	r3,12(r16)
    5de4:	00bfffc4 	movi	r2,-1
    5de8:	18c01014 	ori	r3,r3,64
    5dec:	80c0030d 	sth	r3,12(r16)
    5df0:	003fdf06 	br	5d70 <__sflush_r+0x10c>
    5df4:	28c00f17 	ldw	r3,60(r5)
    5df8:	00ffa916 	blt	zero,r3,5ca0 <__sflush_r+0x3c>
    5dfc:	003fdb06 	br	5d6c <__sflush_r+0x108>
    5e00:	0005883a 	mov	r2,zero
    5e04:	003fe906 	br	5dac <__sflush_r+0x148>
    5e08:	80801417 	ldw	r2,80(r16)
    5e0c:	003fb506 	br	5ce4 <__sflush_r+0x80>
    5e10:	80c0030b 	ldhu	r3,12(r16)
    5e14:	81000417 	ldw	r4,16(r16)
    5e18:	80000115 	stw	zero,4(r16)
    5e1c:	197dffcc 	andi	r5,r3,63487
    5e20:	8140030d 	sth	r5,12(r16)
    5e24:	81000015 	stw	r4,0(r16)
    5e28:	18c4000c 	andi	r3,r3,4096
    5e2c:	183fc726 	beq	r3,zero,5d4c <__sflush_r+0xe8>
    5e30:	80801415 	stw	r2,80(r16)
    5e34:	003fc506 	br	5d4c <__sflush_r+0xe8>
    5e38:	98c00017 	ldw	r3,0(r19)
    5e3c:	183fa626 	beq	r3,zero,5cd8 <__sflush_r+0x74>
    5e40:	19000760 	cmpeqi	r4,r3,29
    5e44:	20000e1e 	bne	r4,zero,5e80 <__sflush_r+0x21c>
    5e48:	18c00598 	cmpnei	r3,r3,22
    5e4c:	18000c26 	beq	r3,zero,5e80 <__sflush_r+0x21c>
    5e50:	80c0030b 	ldhu	r3,12(r16)
    5e54:	18c01014 	ori	r3,r3,64
    5e58:	80c0030d 	sth	r3,12(r16)
    5e5c:	003fc406 	br	5d70 <__sflush_r+0x10c>
    5e60:	81000417 	ldw	r4,16(r16)
    5e64:	197dffcc 	andi	r5,r3,63487
    5e68:	8140030d 	sth	r5,12(r16)
    5e6c:	80000115 	stw	zero,4(r16)
    5e70:	81000015 	stw	r4,0(r16)
    5e74:	18c4000c 	andi	r3,r3,4096
    5e78:	183fb426 	beq	r3,zero,5d4c <__sflush_r+0xe8>
    5e7c:	003fec06 	br	5e30 <__sflush_r+0x1cc>
    5e80:	9c400015 	stw	r17,0(r19)
    5e84:	0005883a 	mov	r2,zero
    5e88:	003fb906 	br	5d70 <__sflush_r+0x10c>

00005e8c <_fflush_r>:
    5e8c:	defffd04 	addi	sp,sp,-12
    5e90:	dc000115 	stw	r16,4(sp)
    5e94:	dfc00215 	stw	ra,8(sp)
    5e98:	2021883a 	mov	r16,r4
    5e9c:	20000226 	beq	r4,zero,5ea8 <_fflush_r+0x1c>
    5ea0:	20800e17 	ldw	r2,56(r4)
    5ea4:	10000726 	beq	r2,zero,5ec4 <_fflush_r+0x38>
    5ea8:	2880030f 	ldh	r2,12(r5)
    5eac:	10000a1e 	bne	r2,zero,5ed8 <_fflush_r+0x4c>
    5eb0:	0005883a 	mov	r2,zero
    5eb4:	dfc00217 	ldw	ra,8(sp)
    5eb8:	dc000117 	ldw	r16,4(sp)
    5ebc:	dec00304 	addi	sp,sp,12
    5ec0:	f800283a 	ret
    5ec4:	d9400015 	stw	r5,0(sp)
    5ec8:	00009ac0 	call	9ac <__sinit>
    5ecc:	d9400017 	ldw	r5,0(sp)
    5ed0:	2880030f 	ldh	r2,12(r5)
    5ed4:	103ff626 	beq	r2,zero,5eb0 <_fflush_r+0x24>
    5ed8:	8009883a 	mov	r4,r16
    5edc:	dfc00217 	ldw	ra,8(sp)
    5ee0:	dc000117 	ldw	r16,4(sp)
    5ee4:	dec00304 	addi	sp,sp,12
    5ee8:	0005c641 	jmpi	5c64 <__sflush_r>

00005eec <fflush>:
    5eec:	200b883a 	mov	r5,r4
    5ef0:	20000326 	beq	r4,zero,5f00 <fflush+0x14>
    5ef4:	00800074 	movhi	r2,1
    5ef8:	11077c17 	ldw	r4,7664(r2)
    5efc:	0005e8c1 	jmpi	5e8c <_fflush_r>
    5f00:	00800074 	movhi	r2,1
    5f04:	11077b17 	ldw	r4,7660(r2)
    5f08:	01400034 	movhi	r5,0
    5f0c:	2957a304 	addi	r5,r5,24204
    5f10:	0000a981 	jmpi	a98 <_fwalk_reent>

00005f14 <_malloc_trim_r>:
    5f14:	defffb04 	addi	sp,sp,-20
    5f18:	dcc00315 	stw	r19,12(sp)
    5f1c:	04c00074 	movhi	r19,1
    5f20:	dc800215 	stw	r18,8(sp)
    5f24:	dc400115 	stw	r17,4(sp)
    5f28:	dc000015 	stw	r16,0(sp)
    5f2c:	dfc00415 	stw	ra,16(sp)
    5f30:	2821883a 	mov	r16,r5
    5f34:	9cc19704 	addi	r19,r19,1628
    5f38:	2025883a 	mov	r18,r4
    5f3c:	000db480 	call	db48 <__malloc_lock>
    5f40:	98800217 	ldw	r2,8(r19)
    5f44:	14400117 	ldw	r17,4(r2)
    5f48:	00bfff04 	movi	r2,-4
    5f4c:	88a2703a 	and	r17,r17,r2
    5f50:	8c21c83a 	sub	r16,r17,r16
    5f54:	8403fbc4 	addi	r16,r16,4079
    5f58:	8020d33a 	srli	r16,r16,12
    5f5c:	843fffc4 	addi	r16,r16,-1
    5f60:	8020933a 	slli	r16,r16,12
    5f64:	80840008 	cmpgei	r2,r16,4096
    5f68:	10000626 	beq	r2,zero,5f84 <_malloc_trim_r+0x70>
    5f6c:	000b883a 	mov	r5,zero
    5f70:	9009883a 	mov	r4,r18
    5f74:	00019440 	call	1944 <_sbrk_r>
    5f78:	98c00217 	ldw	r3,8(r19)
    5f7c:	1c47883a 	add	r3,r3,r17
    5f80:	10c00a26 	beq	r2,r3,5fac <_malloc_trim_r+0x98>
    5f84:	9009883a 	mov	r4,r18
    5f88:	000db6c0 	call	db6c <__malloc_unlock>
    5f8c:	0005883a 	mov	r2,zero
    5f90:	dfc00417 	ldw	ra,16(sp)
    5f94:	dcc00317 	ldw	r19,12(sp)
    5f98:	dc800217 	ldw	r18,8(sp)
    5f9c:	dc400117 	ldw	r17,4(sp)
    5fa0:	dc000017 	ldw	r16,0(sp)
    5fa4:	dec00504 	addi	sp,sp,20
    5fa8:	f800283a 	ret
    5fac:	040bc83a 	sub	r5,zero,r16
    5fb0:	9009883a 	mov	r4,r18
    5fb4:	00019440 	call	1944 <_sbrk_r>
    5fb8:	10bfffd8 	cmpnei	r2,r2,-1
    5fbc:	10000d26 	beq	r2,zero,5ff4 <_malloc_trim_r+0xe0>
    5fc0:	00800074 	movhi	r2,1
    5fc4:	108eb417 	ldw	r2,15056(r2)
    5fc8:	98c00217 	ldw	r3,8(r19)
    5fcc:	8c23c83a 	sub	r17,r17,r16
    5fd0:	8c400054 	ori	r17,r17,1
    5fd4:	1421c83a 	sub	r16,r2,r16
    5fd8:	1c400115 	stw	r17,4(r3)
    5fdc:	00800074 	movhi	r2,1
    5fe0:	9009883a 	mov	r4,r18
    5fe4:	140eb415 	stw	r16,15056(r2)
    5fe8:	000db6c0 	call	db6c <__malloc_unlock>
    5fec:	00800044 	movi	r2,1
    5ff0:	003fe706 	br	5f90 <_malloc_trim_r+0x7c>
    5ff4:	000b883a 	mov	r5,zero
    5ff8:	9009883a 	mov	r4,r18
    5ffc:	00019440 	call	1944 <_sbrk_r>
    6000:	99000217 	ldw	r4,8(r19)
    6004:	1107c83a 	sub	r3,r2,r4
    6008:	19400410 	cmplti	r5,r3,16
    600c:	283fdd1e 	bne	r5,zero,5f84 <_malloc_trim_r+0x70>
    6010:	01400074 	movhi	r5,1
    6014:	29477d17 	ldw	r5,7668(r5)
    6018:	18c00054 	ori	r3,r3,1
    601c:	20c00115 	stw	r3,4(r4)
    6020:	1145c83a 	sub	r2,r2,r5
    6024:	01400074 	movhi	r5,1
    6028:	288eb415 	stw	r2,15056(r5)
    602c:	003fd506 	br	5f84 <_malloc_trim_r+0x70>

00006030 <_free_r>:
    6030:	28004f26 	beq	r5,zero,6170 <_free_r+0x140>
    6034:	defffd04 	addi	sp,sp,-12
    6038:	dc400115 	stw	r17,4(sp)
    603c:	dc000015 	stw	r16,0(sp)
    6040:	2023883a 	mov	r17,r4
    6044:	2821883a 	mov	r16,r5
    6048:	dfc00215 	stw	ra,8(sp)
    604c:	000db480 	call	db48 <__malloc_lock>
    6050:	81ffff17 	ldw	r7,-4(r16)
    6054:	00bfff84 	movi	r2,-2
    6058:	80fffe04 	addi	r3,r16,-8
    605c:	3884703a 	and	r2,r7,r2
    6060:	01800074 	movhi	r6,1
    6064:	1889883a 	add	r4,r3,r2
    6068:	31819704 	addi	r6,r6,1628
    606c:	21400117 	ldw	r5,4(r4)
    6070:	32000217 	ldw	r8,8(r6)
    6074:	027fff04 	movi	r9,-4
    6078:	2a4a703a 	and	r5,r5,r9
    607c:	41006426 	beq	r8,r4,6210 <_free_r+0x1e0>
    6080:	21400115 	stw	r5,4(r4)
    6084:	39c0004c 	andi	r7,r7,1
    6088:	2151883a 	add	r8,r4,r5
    608c:	3800281e 	bne	r7,zero,6130 <_free_r+0x100>
    6090:	82bffe17 	ldw	r10,-8(r16)
    6094:	42000117 	ldw	r8,4(r8)
    6098:	01c00074 	movhi	r7,1
    609c:	1a87c83a 	sub	r3,r3,r10
    60a0:	1a400217 	ldw	r9,8(r3)
    60a4:	39c19904 	addi	r7,r7,1636
    60a8:	1285883a 	add	r2,r2,r10
    60ac:	4200004c 	andi	r8,r8,1
    60b0:	49c04c26 	beq	r9,r7,61e4 <_free_r+0x1b4>
    60b4:	1a800317 	ldw	r10,12(r3)
    60b8:	4a800315 	stw	r10,12(r9)
    60bc:	52400215 	stw	r9,8(r10)
    60c0:	40007126 	beq	r8,zero,6288 <_free_r+0x258>
    60c4:	11400054 	ori	r5,r2,1
    60c8:	19400115 	stw	r5,4(r3)
    60cc:	20800015 	stw	r2,0(r4)
    60d0:	11008028 	cmpgeui	r4,r2,512
    60d4:	20002c1e 	bne	r4,zero,6188 <_free_r+0x158>
    60d8:	1008d0fa 	srli	r4,r2,3
    60dc:	31c00117 	ldw	r7,4(r6)
    60e0:	20800044 	addi	r2,r4,1
    60e4:	200bd0ba 	srai	r5,r4,2
    60e8:	100490fa 	slli	r2,r2,3
    60ec:	01000044 	movi	r4,1
    60f0:	2148983a 	sll	r4,r4,r5
    60f4:	3085883a 	add	r2,r6,r2
    60f8:	11400017 	ldw	r5,0(r2)
    60fc:	21c8b03a 	or	r4,r4,r7
    6100:	11fffe04 	addi	r7,r2,-8
    6104:	19c00315 	stw	r7,12(r3)
    6108:	19400215 	stw	r5,8(r3)
    610c:	31000115 	stw	r4,4(r6)
    6110:	10c00015 	stw	r3,0(r2)
    6114:	28c00315 	stw	r3,12(r5)
    6118:	8809883a 	mov	r4,r17
    611c:	dfc00217 	ldw	ra,8(sp)
    6120:	dc400117 	ldw	r17,4(sp)
    6124:	dc000017 	ldw	r16,0(sp)
    6128:	dec00304 	addi	sp,sp,12
    612c:	000db6c1 	jmpi	db6c <__malloc_unlock>
    6130:	41c00117 	ldw	r7,4(r8)
    6134:	39c0004c 	andi	r7,r7,1
    6138:	38000e1e 	bne	r7,zero,6174 <_free_r+0x144>
    613c:	01c00074 	movhi	r7,1
    6140:	1145883a 	add	r2,r2,r5
    6144:	39c19904 	addi	r7,r7,1636
    6148:	21400217 	ldw	r5,8(r4)
    614c:	12400054 	ori	r9,r2,1
    6150:	1891883a 	add	r8,r3,r2
    6154:	29c05226 	beq	r5,r7,62a0 <_free_r+0x270>
    6158:	21000317 	ldw	r4,12(r4)
    615c:	29000315 	stw	r4,12(r5)
    6160:	21400215 	stw	r5,8(r4)
    6164:	1a400115 	stw	r9,4(r3)
    6168:	40800015 	stw	r2,0(r8)
    616c:	003fd806 	br	60d0 <_free_r+0xa0>
    6170:	f800283a 	ret
    6174:	11400054 	ori	r5,r2,1
    6178:	817fff15 	stw	r5,-4(r16)
    617c:	20800015 	stw	r2,0(r4)
    6180:	11008028 	cmpgeui	r4,r2,512
    6184:	203fd426 	beq	r4,zero,60d8 <_free_r+0xa8>
    6188:	1008d27a 	srli	r4,r2,9
    618c:	21400168 	cmpgeui	r5,r4,5
    6190:	2800341e 	bne	r5,zero,6264 <_free_r+0x234>
    6194:	1008d1ba 	srli	r4,r2,6
    6198:	21c00e44 	addi	r7,r4,57
    619c:	380e90fa 	slli	r7,r7,3
    61a0:	21400e04 	addi	r5,r4,56
    61a4:	31cf883a 	add	r7,r6,r7
    61a8:	39000017 	ldw	r4,0(r7)
    61ac:	39fffe04 	addi	r7,r7,-8
    61b0:	39004226 	beq	r7,r4,62bc <_free_r+0x28c>
    61b4:	01bfff04 	movi	r6,-4
    61b8:	21400117 	ldw	r5,4(r4)
    61bc:	298a703a 	and	r5,r5,r6
    61c0:	1140022e 	bgeu	r2,r5,61cc <_free_r+0x19c>
    61c4:	21000217 	ldw	r4,8(r4)
    61c8:	393ffb1e 	bne	r7,r4,61b8 <_free_r+0x188>
    61cc:	21c00317 	ldw	r7,12(r4)
    61d0:	19c00315 	stw	r7,12(r3)
    61d4:	19000215 	stw	r4,8(r3)
    61d8:	38c00215 	stw	r3,8(r7)
    61dc:	20c00315 	stw	r3,12(r4)
    61e0:	003fcd06 	br	6118 <_free_r+0xe8>
    61e4:	40004d1e 	bne	r8,zero,631c <_free_r+0x2ec>
    61e8:	21800317 	ldw	r6,12(r4)
    61ec:	21000217 	ldw	r4,8(r4)
    61f0:	2885883a 	add	r2,r5,r2
    61f4:	11400054 	ori	r5,r2,1
    61f8:	21800315 	stw	r6,12(r4)
    61fc:	31000215 	stw	r4,8(r6)
    6200:	19400115 	stw	r5,4(r3)
    6204:	1887883a 	add	r3,r3,r2
    6208:	18800015 	stw	r2,0(r3)
    620c:	003fc206 	br	6118 <_free_r+0xe8>
    6210:	39c0004c 	andi	r7,r7,1
    6214:	1145883a 	add	r2,r2,r5
    6218:	3800071e 	bne	r7,zero,6238 <_free_r+0x208>
    621c:	81fffe17 	ldw	r7,-8(r16)
    6220:	19c7c83a 	sub	r3,r3,r7
    6224:	19000317 	ldw	r4,12(r3)
    6228:	19400217 	ldw	r5,8(r3)
    622c:	11c5883a 	add	r2,r2,r7
    6230:	29000315 	stw	r4,12(r5)
    6234:	21400215 	stw	r5,8(r4)
    6238:	01000074 	movhi	r4,1
    623c:	11400054 	ori	r5,r2,1
    6240:	21077e17 	ldw	r4,7672(r4)
    6244:	19400115 	stw	r5,4(r3)
    6248:	30c00215 	stw	r3,8(r6)
    624c:	113fb236 	bltu	r2,r4,6118 <_free_r+0xe8>
    6250:	00800074 	movhi	r2,1
    6254:	114ea617 	ldw	r5,15000(r2)
    6258:	8809883a 	mov	r4,r17
    625c:	0005f140 	call	5f14 <_malloc_trim_r>
    6260:	003fad06 	br	6118 <_free_r+0xe8>
    6264:	21400568 	cmpgeui	r5,r4,21
    6268:	28000926 	beq	r5,zero,6290 <_free_r+0x260>
    626c:	21401568 	cmpgeui	r5,r4,85
    6270:	2800191e 	bne	r5,zero,62d8 <_free_r+0x2a8>
    6274:	1008d33a 	srli	r4,r2,12
    6278:	21c01bc4 	addi	r7,r4,111
    627c:	21401b84 	addi	r5,r4,110
    6280:	380e90fa 	slli	r7,r7,3
    6284:	003fc706 	br	61a4 <_free_r+0x174>
    6288:	1145883a 	add	r2,r2,r5
    628c:	003fae06 	br	6148 <_free_r+0x118>
    6290:	21c01704 	addi	r7,r4,92
    6294:	214016c4 	addi	r5,r4,91
    6298:	380e90fa 	slli	r7,r7,3
    629c:	003fc106 	br	61a4 <_free_r+0x174>
    62a0:	30c00515 	stw	r3,20(r6)
    62a4:	30c00415 	stw	r3,16(r6)
    62a8:	19c00315 	stw	r7,12(r3)
    62ac:	19c00215 	stw	r7,8(r3)
    62b0:	1a400115 	stw	r9,4(r3)
    62b4:	40800015 	stw	r2,0(r8)
    62b8:	003f9706 	br	6118 <_free_r+0xe8>
    62bc:	280bd0ba 	srai	r5,r5,2
    62c0:	00800044 	movi	r2,1
    62c4:	32000117 	ldw	r8,4(r6)
    62c8:	114a983a 	sll	r5,r2,r5
    62cc:	2a0ab03a 	or	r5,r5,r8
    62d0:	31400115 	stw	r5,4(r6)
    62d4:	003fbe06 	br	61d0 <_free_r+0x1a0>
    62d8:	21405568 	cmpgeui	r5,r4,341
    62dc:	2800051e 	bne	r5,zero,62f4 <_free_r+0x2c4>
    62e0:	1008d3fa 	srli	r4,r2,15
    62e4:	21c01e04 	addi	r7,r4,120
    62e8:	21401dc4 	addi	r5,r4,119
    62ec:	380e90fa 	slli	r7,r7,3
    62f0:	003fac06 	br	61a4 <_free_r+0x174>
    62f4:	21015568 	cmpgeui	r4,r4,1365
    62f8:	2000051e 	bne	r4,zero,6310 <_free_r+0x2e0>
    62fc:	1008d4ba 	srli	r4,r2,18
    6300:	21c01f44 	addi	r7,r4,125
    6304:	21401f04 	addi	r5,r4,124
    6308:	380e90fa 	slli	r7,r7,3
    630c:	003fa506 	br	61a4 <_free_r+0x174>
    6310:	01c0fe04 	movi	r7,1016
    6314:	01401f84 	movi	r5,126
    6318:	003fa206 	br	61a4 <_free_r+0x174>
    631c:	11400054 	ori	r5,r2,1
    6320:	19400115 	stw	r5,4(r3)
    6324:	20800015 	stw	r2,0(r4)
    6328:	003f7b06 	br	6118 <_free_r+0xe8>

0000632c <__sfvwrite_r>:
    632c:	30800217 	ldw	r2,8(r6)
    6330:	1000ca26 	beq	r2,zero,665c <__sfvwrite_r+0x330>
    6334:	2880030b 	ldhu	r2,12(r5)
    6338:	defff304 	addi	sp,sp,-52
    633c:	dd000715 	stw	r20,28(sp)
    6340:	dc000315 	stw	r16,12(sp)
    6344:	dfc00c15 	stw	ra,48(sp)
    6348:	df000b15 	stw	fp,44(sp)
    634c:	ddc00a15 	stw	r23,40(sp)
    6350:	dd800915 	stw	r22,36(sp)
    6354:	dd400815 	stw	r21,32(sp)
    6358:	dcc00615 	stw	r19,24(sp)
    635c:	dc800515 	stw	r18,20(sp)
    6360:	dc400415 	stw	r17,16(sp)
    6364:	d9000015 	stw	r4,0(sp)
    6368:	10c0020c 	andi	r3,r2,8
    636c:	2821883a 	mov	r16,r5
    6370:	3029883a 	mov	r20,r6
    6374:	18002426 	beq	r3,zero,6408 <__sfvwrite_r+0xdc>
    6378:	28c00417 	ldw	r3,16(r5)
    637c:	18002226 	beq	r3,zero,6408 <__sfvwrite_r+0xdc>
    6380:	10c0008c 	andi	r3,r2,2
    6384:	a4400017 	ldw	r17,0(r20)
    6388:	18002726 	beq	r3,zero,6428 <__sfvwrite_r+0xfc>
    638c:	80c00917 	ldw	r3,36(r16)
    6390:	80800717 	ldw	r2,28(r16)
    6394:	05600034 	movhi	r21,32768
    6398:	0027883a 	mov	r19,zero
    639c:	0025883a 	mov	r18,zero
    63a0:	ad7f0004 	addi	r21,r21,-1024
    63a4:	980d883a 	mov	r6,r19
    63a8:	100b883a 	mov	r5,r2
    63ac:	d9000017 	ldw	r4,0(sp)
    63b0:	90001126 	beq	r18,zero,63f8 <__sfvwrite_r+0xcc>
    63b4:	900f883a 	mov	r7,r18
    63b8:	ac80012e 	bgeu	r21,r18,63c0 <__sfvwrite_r+0x94>
    63bc:	a80f883a 	mov	r7,r21
    63c0:	183ee83a 	callr	r3
    63c4:	0080a00e 	bge	zero,r2,6648 <__sfvwrite_r+0x31c>
    63c8:	a0c00217 	ldw	r3,8(r20)
    63cc:	98a7883a 	add	r19,r19,r2
    63d0:	90a5c83a 	sub	r18,r18,r2
    63d4:	1885c83a 	sub	r2,r3,r2
    63d8:	a0800215 	stw	r2,8(r20)
    63dc:	10006426 	beq	r2,zero,6570 <__sfvwrite_r+0x244>
    63e0:	80800717 	ldw	r2,28(r16)
    63e4:	80c00917 	ldw	r3,36(r16)
    63e8:	980d883a 	mov	r6,r19
    63ec:	100b883a 	mov	r5,r2
    63f0:	d9000017 	ldw	r4,0(sp)
    63f4:	903fef1e 	bne	r18,zero,63b4 <__sfvwrite_r+0x88>
    63f8:	8cc00017 	ldw	r19,0(r17)
    63fc:	8c800117 	ldw	r18,4(r17)
    6400:	8c400204 	addi	r17,r17,8
    6404:	003fe706 	br	63a4 <__sfvwrite_r+0x78>
    6408:	d9000017 	ldw	r4,0(sp)
    640c:	800b883a 	mov	r5,r16
    6410:	00040a80 	call	40a8 <__swsetup_r>
    6414:	1000f81e 	bne	r2,zero,67f8 <__sfvwrite_r+0x4cc>
    6418:	8080030b 	ldhu	r2,12(r16)
    641c:	a4400017 	ldw	r17,0(r20)
    6420:	10c0008c 	andi	r3,r2,2
    6424:	183fd91e 	bne	r3,zero,638c <__sfvwrite_r+0x60>
    6428:	10c0004c 	andi	r3,r2,1
    642c:	84800217 	ldw	r18,8(r16)
    6430:	87000017 	ldw	fp,0(r16)
    6434:	18008b1e 	bne	r3,zero,6664 <__sfvwrite_r+0x338>
    6438:	00e00034 	movhi	r3,32768
    643c:	18ffff84 	addi	r3,r3,-2
    6440:	01200034 	movhi	r4,32768
    6444:	d8c00115 	stw	r3,4(sp)
    6448:	20ffffc4 	addi	r3,r4,-1
    644c:	002d883a 	mov	r22,zero
    6450:	002f883a 	mov	r23,zero
    6454:	d8c00215 	stw	r3,8(sp)
    6458:	b8004126 	beq	r23,zero,6560 <__sfvwrite_r+0x234>
    645c:	1100800c 	andi	r4,r2,512
    6460:	20009126 	beq	r4,zero,66a8 <__sfvwrite_r+0x37c>
    6464:	902b883a 	mov	r21,r18
    6468:	bc80b836 	bltu	r23,r18,674c <__sfvwrite_r+0x420>
    646c:	1101200c 	andi	r4,r2,1152
    6470:	20002626 	beq	r4,zero,650c <__sfvwrite_r+0x1e0>
    6474:	84800517 	ldw	r18,20(r16)
    6478:	81400417 	ldw	r5,16(r16)
    647c:	b9000044 	addi	r4,r23,1
    6480:	948d883a 	add	r6,r18,r18
    6484:	348d883a 	add	r6,r6,r18
    6488:	3024d7fa 	srli	r18,r6,31
    648c:	e167c83a 	sub	r19,fp,r5
    6490:	24c9883a 	add	r4,r4,r19
    6494:	91a5883a 	add	r18,r18,r6
    6498:	9025d07a 	srai	r18,r18,1
    649c:	900d883a 	mov	r6,r18
    64a0:	9100022e 	bgeu	r18,r4,64ac <__sfvwrite_r+0x180>
    64a4:	2025883a 	mov	r18,r4
    64a8:	200d883a 	mov	r6,r4
    64ac:	1081000c 	andi	r2,r2,1024
    64b0:	1000bf26 	beq	r2,zero,67b0 <__sfvwrite_r+0x484>
    64b4:	d9000017 	ldw	r4,0(sp)
    64b8:	300b883a 	mov	r5,r6
    64bc:	0000b4c0 	call	b4c <_malloc_r>
    64c0:	1000c826 	beq	r2,zero,67e4 <__sfvwrite_r+0x4b8>
    64c4:	81400417 	ldw	r5,16(r16)
    64c8:	980d883a 	mov	r6,r19
    64cc:	1009883a 	mov	r4,r2
    64d0:	00014280 	call	1428 <memcpy>
    64d4:	100f883a 	mov	r7,r2
    64d8:	8080030b 	ldhu	r2,12(r16)
    64dc:	00fedfc4 	movi	r3,-1153
    64e0:	10c4703a 	and	r2,r2,r3
    64e4:	10802014 	ori	r2,r2,128
    64e8:	8080030d 	sth	r2,12(r16)
    64ec:	94c5c83a 	sub	r2,r18,r19
    64f0:	3cf9883a 	add	fp,r7,r19
    64f4:	84800515 	stw	r18,20(r16)
    64f8:	81c00415 	stw	r7,16(r16)
    64fc:	87000015 	stw	fp,0(r16)
    6500:	b825883a 	mov	r18,r23
    6504:	80800215 	stw	r2,8(r16)
    6508:	b82b883a 	mov	r21,r23
    650c:	a80d883a 	mov	r6,r21
    6510:	b00b883a 	mov	r5,r22
    6514:	e009883a 	mov	r4,fp
    6518:	0006a580 	call	6a58 <memmove>
    651c:	80800217 	ldw	r2,8(r16)
    6520:	81800017 	ldw	r6,0(r16)
    6524:	b827883a 	mov	r19,r23
    6528:	14a5c83a 	sub	r18,r2,r18
    652c:	354d883a 	add	r6,r6,r21
    6530:	84800215 	stw	r18,8(r16)
    6534:	81800015 	stw	r6,0(r16)
    6538:	002f883a 	mov	r23,zero
    653c:	a0800217 	ldw	r2,8(r20)
    6540:	b4ed883a 	add	r22,r22,r19
    6544:	14e7c83a 	sub	r19,r2,r19
    6548:	a4c00215 	stw	r19,8(r20)
    654c:	98000826 	beq	r19,zero,6570 <__sfvwrite_r+0x244>
    6550:	8080030b 	ldhu	r2,12(r16)
    6554:	84800217 	ldw	r18,8(r16)
    6558:	87000017 	ldw	fp,0(r16)
    655c:	b83fbf1e 	bne	r23,zero,645c <__sfvwrite_r+0x130>
    6560:	8d800017 	ldw	r22,0(r17)
    6564:	8dc00117 	ldw	r23,4(r17)
    6568:	8c400204 	addi	r17,r17,8
    656c:	003fba06 	br	6458 <__sfvwrite_r+0x12c>
    6570:	0005883a 	mov	r2,zero
    6574:	dfc00c17 	ldw	ra,48(sp)
    6578:	df000b17 	ldw	fp,44(sp)
    657c:	ddc00a17 	ldw	r23,40(sp)
    6580:	dd800917 	ldw	r22,36(sp)
    6584:	dd400817 	ldw	r21,32(sp)
    6588:	dd000717 	ldw	r20,28(sp)
    658c:	dcc00617 	ldw	r19,24(sp)
    6590:	dc800517 	ldw	r18,20(sp)
    6594:	dc400417 	ldw	r17,16(sp)
    6598:	dc000317 	ldw	r16,12(sp)
    659c:	dec00d04 	addi	sp,sp,52
    65a0:	f800283a 	ret
    65a4:	b1c07116 	blt	r22,r7,676c <__sfvwrite_r+0x440>
    65a8:	80800917 	ldw	r2,36(r16)
    65ac:	81400717 	ldw	r5,28(r16)
    65b0:	d9000017 	ldw	r4,0(sp)
    65b4:	b80d883a 	mov	r6,r23
    65b8:	103ee83a 	callr	r2
    65bc:	1025883a 	mov	r18,r2
    65c0:	0080210e 	bge	zero,r2,6648 <__sfvwrite_r+0x31c>
    65c4:	acabc83a 	sub	r21,r21,r18
    65c8:	a8006326 	beq	r21,zero,6758 <__sfvwrite_r+0x42c>
    65cc:	00800044 	movi	r2,1
    65d0:	a0c00217 	ldw	r3,8(r20)
    65d4:	bcaf883a 	add	r23,r23,r18
    65d8:	9ca7c83a 	sub	r19,r19,r18
    65dc:	1ca5c83a 	sub	r18,r3,r18
    65e0:	a4800215 	stw	r18,8(r20)
    65e4:	903fe226 	beq	r18,zero,6570 <__sfvwrite_r+0x244>
    65e8:	84800217 	ldw	r18,8(r16)
    65ec:	87000017 	ldw	fp,0(r16)
    65f0:	98002126 	beq	r19,zero,6678 <__sfvwrite_r+0x34c>
    65f4:	10002426 	beq	r2,zero,6688 <__sfvwrite_r+0x35c>
    65f8:	a805883a 	mov	r2,r21
    65fc:	982d883a 	mov	r22,r19
    6600:	14c0012e 	bgeu	r2,r19,6608 <__sfvwrite_r+0x2dc>
    6604:	102d883a 	mov	r22,r2
    6608:	80800417 	ldw	r2,16(r16)
    660c:	81c00517 	ldw	r7,20(r16)
    6610:	173fe42e 	bgeu	r2,fp,65a4 <__sfvwrite_r+0x278>
    6614:	3ca5883a 	add	r18,r7,r18
    6618:	95bfe20e 	bge	r18,r22,65a4 <__sfvwrite_r+0x278>
    661c:	b80b883a 	mov	r5,r23
    6620:	e009883a 	mov	r4,fp
    6624:	900d883a 	mov	r6,r18
    6628:	0006a580 	call	6a58 <memmove>
    662c:	80800017 	ldw	r2,0(r16)
    6630:	d9000017 	ldw	r4,0(sp)
    6634:	800b883a 	mov	r5,r16
    6638:	1485883a 	add	r2,r2,r18
    663c:	80800015 	stw	r2,0(r16)
    6640:	0005e8c0 	call	5e8c <_fflush_r>
    6644:	103fdf26 	beq	r2,zero,65c4 <__sfvwrite_r+0x298>
    6648:	8080030b 	ldhu	r2,12(r16)
    664c:	10801014 	ori	r2,r2,64
    6650:	8080030d 	sth	r2,12(r16)
    6654:	00bfffc4 	movi	r2,-1
    6658:	003fc606 	br	6574 <__sfvwrite_r+0x248>
    665c:	0005883a 	mov	r2,zero
    6660:	f800283a 	ret
    6664:	0027883a 	mov	r19,zero
    6668:	002b883a 	mov	r21,zero
    666c:	0005883a 	mov	r2,zero
    6670:	002f883a 	mov	r23,zero
    6674:	983fdf1e 	bne	r19,zero,65f4 <__sfvwrite_r+0x2c8>
    6678:	8cc00117 	ldw	r19,4(r17)
    667c:	8dc00017 	ldw	r23,0(r17)
    6680:	8c400204 	addi	r17,r17,8
    6684:	983ffc26 	beq	r19,zero,6678 <__sfvwrite_r+0x34c>
    6688:	980d883a 	mov	r6,r19
    668c:	01400284 	movi	r5,10
    6690:	b809883a 	mov	r4,r23
    6694:	00013400 	call	1340 <memchr>
    6698:	10004226 	beq	r2,zero,67a4 <__sfvwrite_r+0x478>
    669c:	10800044 	addi	r2,r2,1
    66a0:	15ebc83a 	sub	r21,r2,r23
    66a4:	003fd406 	br	65f8 <__sfvwrite_r+0x2cc>
    66a8:	80800417 	ldw	r2,16(r16)
    66ac:	17001436 	bltu	r2,fp,6700 <__sfvwrite_r+0x3d4>
    66b0:	84c00517 	ldw	r19,20(r16)
    66b4:	bcc01236 	bltu	r23,r19,6700 <__sfvwrite_r+0x3d4>
    66b8:	d8800117 	ldw	r2,4(sp)
    66bc:	15c0372e 	bgeu	r2,r23,679c <__sfvwrite_r+0x470>
    66c0:	d9000217 	ldw	r4,8(sp)
    66c4:	980b883a 	mov	r5,r19
    66c8:	000aa800 	call	aa80 <__divsi3>
    66cc:	980b883a 	mov	r5,r19
    66d0:	1009883a 	mov	r4,r2
    66d4:	000ac380 	call	ac38 <__mulsi3>
    66d8:	81400717 	ldw	r5,28(r16)
    66dc:	82800917 	ldw	r10,36(r16)
    66e0:	d9000017 	ldw	r4,0(sp)
    66e4:	100f883a 	mov	r7,r2
    66e8:	b00d883a 	mov	r6,r22
    66ec:	503ee83a 	callr	r10
    66f0:	00bfd50e 	bge	zero,r2,6648 <__sfvwrite_r+0x31c>
    66f4:	1027883a 	mov	r19,r2
    66f8:	bcefc83a 	sub	r23,r23,r19
    66fc:	003f8f06 	br	653c <__sfvwrite_r+0x210>
    6700:	9027883a 	mov	r19,r18
    6704:	bc80012e 	bgeu	r23,r18,670c <__sfvwrite_r+0x3e0>
    6708:	b827883a 	mov	r19,r23
    670c:	e009883a 	mov	r4,fp
    6710:	980d883a 	mov	r6,r19
    6714:	b00b883a 	mov	r5,r22
    6718:	0006a580 	call	6a58 <memmove>
    671c:	80800217 	ldw	r2,8(r16)
    6720:	81000017 	ldw	r4,0(r16)
    6724:	14c5c83a 	sub	r2,r2,r19
    6728:	24c9883a 	add	r4,r4,r19
    672c:	80800215 	stw	r2,8(r16)
    6730:	81000015 	stw	r4,0(r16)
    6734:	103ff01e 	bne	r2,zero,66f8 <__sfvwrite_r+0x3cc>
    6738:	d9000017 	ldw	r4,0(sp)
    673c:	800b883a 	mov	r5,r16
    6740:	0005e8c0 	call	5e8c <_fflush_r>
    6744:	103fec26 	beq	r2,zero,66f8 <__sfvwrite_r+0x3cc>
    6748:	003fbf06 	br	6648 <__sfvwrite_r+0x31c>
    674c:	b825883a 	mov	r18,r23
    6750:	b82b883a 	mov	r21,r23
    6754:	003f6d06 	br	650c <__sfvwrite_r+0x1e0>
    6758:	d9000017 	ldw	r4,0(sp)
    675c:	800b883a 	mov	r5,r16
    6760:	0005e8c0 	call	5e8c <_fflush_r>
    6764:	103f9a26 	beq	r2,zero,65d0 <__sfvwrite_r+0x2a4>
    6768:	003fb706 	br	6648 <__sfvwrite_r+0x31c>
    676c:	b00d883a 	mov	r6,r22
    6770:	b80b883a 	mov	r5,r23
    6774:	e009883a 	mov	r4,fp
    6778:	0006a580 	call	6a58 <memmove>
    677c:	80c00217 	ldw	r3,8(r16)
    6780:	80800017 	ldw	r2,0(r16)
    6784:	b025883a 	mov	r18,r22
    6788:	1d87c83a 	sub	r3,r3,r22
    678c:	15ad883a 	add	r22,r2,r22
    6790:	80c00215 	stw	r3,8(r16)
    6794:	85800015 	stw	r22,0(r16)
    6798:	003f8a06 	br	65c4 <__sfvwrite_r+0x298>
    679c:	b809883a 	mov	r4,r23
    67a0:	003fc806 	br	66c4 <__sfvwrite_r+0x398>
    67a4:	98800044 	addi	r2,r19,1
    67a8:	102b883a 	mov	r21,r2
    67ac:	003f9306 	br	65fc <__sfvwrite_r+0x2d0>
    67b0:	d9000017 	ldw	r4,0(sp)
    67b4:	0007b9c0 	call	7b9c <_realloc_r>
    67b8:	100f883a 	mov	r7,r2
    67bc:	103f4b1e 	bne	r2,zero,64ec <__sfvwrite_r+0x1c0>
    67c0:	dc400017 	ldw	r17,0(sp)
    67c4:	81400417 	ldw	r5,16(r16)
    67c8:	8809883a 	mov	r4,r17
    67cc:	00060300 	call	6030 <_free_r>
    67d0:	8080030b 	ldhu	r2,12(r16)
    67d4:	00c00304 	movi	r3,12
    67d8:	88c00015 	stw	r3,0(r17)
    67dc:	10bfdfcc 	andi	r2,r2,65407
    67e0:	003f9a06 	br	664c <__sfvwrite_r+0x320>
    67e4:	d8c00017 	ldw	r3,0(sp)
    67e8:	00800304 	movi	r2,12
    67ec:	18800015 	stw	r2,0(r3)
    67f0:	8080030b 	ldhu	r2,12(r16)
    67f4:	003f9506 	br	664c <__sfvwrite_r+0x320>
    67f8:	00bfffc4 	movi	r2,-1
    67fc:	003f5d06 	br	6574 <__sfvwrite_r+0x248>

00006800 <__localeconv_l>:
    6800:	20803c04 	addi	r2,r4,240
    6804:	f800283a 	ret

00006808 <_localeconv_r>:
    6808:	00800074 	movhi	r2,1
    680c:	1082d504 	addi	r2,r2,2900
    6810:	f800283a 	ret

00006814 <localeconv>:
    6814:	00800074 	movhi	r2,1
    6818:	1082d504 	addi	r2,r2,2900
    681c:	f800283a 	ret

00006820 <_lseek_r>:
    6820:	defffe04 	addi	sp,sp,-8
    6824:	2805883a 	mov	r2,r5
    6828:	dc000015 	stw	r16,0(sp)
    682c:	300b883a 	mov	r5,r6
    6830:	2021883a 	mov	r16,r4
    6834:	380d883a 	mov	r6,r7
    6838:	1009883a 	mov	r4,r2
    683c:	00800074 	movhi	r2,1
    6840:	dfc00115 	stw	ra,4(sp)
    6844:	100ea715 	stw	zero,15004(r2)
    6848:	000d9ec0 	call	d9ec <lseek>
    684c:	10ffffd8 	cmpnei	r3,r2,-1
    6850:	18000426 	beq	r3,zero,6864 <_lseek_r+0x44>
    6854:	dfc00117 	ldw	ra,4(sp)
    6858:	dc000017 	ldw	r16,0(sp)
    685c:	dec00204 	addi	sp,sp,8
    6860:	f800283a 	ret
    6864:	00c00074 	movhi	r3,1
    6868:	18cea717 	ldw	r3,15004(r3)
    686c:	183ff926 	beq	r3,zero,6854 <_lseek_r+0x34>
    6870:	80c00015 	stw	r3,0(r16)
    6874:	dfc00117 	ldw	ra,4(sp)
    6878:	dc000017 	ldw	r16,0(sp)
    687c:	dec00204 	addi	sp,sp,8
    6880:	f800283a 	ret

00006884 <__swhatbuf_r>:
    6884:	deffea04 	addi	sp,sp,-88
    6888:	dc001215 	stw	r16,72(sp)
    688c:	2821883a 	mov	r16,r5
    6890:	2940038f 	ldh	r5,14(r5)
    6894:	dc801415 	stw	r18,80(sp)
    6898:	dc401315 	stw	r17,76(sp)
    689c:	dfc01515 	stw	ra,84(sp)
    68a0:	3023883a 	mov	r17,r6
    68a4:	3825883a 	mov	r18,r7
    68a8:	28001016 	blt	r5,zero,68ec <__swhatbuf_r+0x68>
    68ac:	d80d883a 	mov	r6,sp
    68b0:	00099a40 	call	99a4 <_fstat_r>
    68b4:	10000d16 	blt	r2,zero,68ec <__swhatbuf_r+0x68>
    68b8:	d8c00117 	ldw	r3,4(sp)
    68bc:	00820004 	movi	r2,2048
    68c0:	18fc000c 	andi	r3,r3,61440
    68c4:	18c80020 	cmpeqi	r3,r3,8192
    68c8:	90c00015 	stw	r3,0(r18)
    68cc:	00c10004 	movi	r3,1024
    68d0:	88c00015 	stw	r3,0(r17)
    68d4:	dfc01517 	ldw	ra,84(sp)
    68d8:	dc801417 	ldw	r18,80(sp)
    68dc:	dc401317 	ldw	r17,76(sp)
    68e0:	dc001217 	ldw	r16,72(sp)
    68e4:	dec01604 	addi	sp,sp,88
    68e8:	f800283a 	ret
    68ec:	8080030b 	ldhu	r2,12(r16)
    68f0:	90000015 	stw	zero,0(r18)
    68f4:	1080200c 	andi	r2,r2,128
    68f8:	10000426 	beq	r2,zero,690c <__swhatbuf_r+0x88>
    68fc:	00801004 	movi	r2,64
    6900:	88800015 	stw	r2,0(r17)
    6904:	0005883a 	mov	r2,zero
    6908:	003ff206 	br	68d4 <__swhatbuf_r+0x50>
    690c:	00810004 	movi	r2,1024
    6910:	88800015 	stw	r2,0(r17)
    6914:	0005883a 	mov	r2,zero
    6918:	003fee06 	br	68d4 <__swhatbuf_r+0x50>

0000691c <__smakebuf_r>:
    691c:	28c0030b 	ldhu	r3,12(r5)
    6920:	defffa04 	addi	sp,sp,-24
    6924:	dc000215 	stw	r16,8(sp)
    6928:	dfc00515 	stw	ra,20(sp)
    692c:	dc800415 	stw	r18,16(sp)
    6930:	dc400315 	stw	r17,12(sp)
    6934:	18c0008c 	andi	r3,r3,2
    6938:	2821883a 	mov	r16,r5
    693c:	18000b26 	beq	r3,zero,696c <__smakebuf_r+0x50>
    6940:	28c010c4 	addi	r3,r5,67
    6944:	28c00015 	stw	r3,0(r5)
    6948:	28c00415 	stw	r3,16(r5)
    694c:	00c00044 	movi	r3,1
    6950:	28c00515 	stw	r3,20(r5)
    6954:	dfc00517 	ldw	ra,20(sp)
    6958:	dc800417 	ldw	r18,16(sp)
    695c:	dc400317 	ldw	r17,12(sp)
    6960:	dc000217 	ldw	r16,8(sp)
    6964:	dec00604 	addi	sp,sp,24
    6968:	f800283a 	ret
    696c:	d9c00104 	addi	r7,sp,4
    6970:	d80d883a 	mov	r6,sp
    6974:	2023883a 	mov	r17,r4
    6978:	00068840 	call	6884 <__swhatbuf_r>
    697c:	1025883a 	mov	r18,r2
    6980:	d8800117 	ldw	r2,4(sp)
    6984:	1000131e 	bne	r2,zero,69d4 <__smakebuf_r+0xb8>
    6988:	d9400017 	ldw	r5,0(sp)
    698c:	8809883a 	mov	r4,r17
    6990:	0000b4c0 	call	b4c <_malloc_r>
    6994:	10001c26 	beq	r2,zero,6a08 <__smakebuf_r+0xec>
    6998:	01000034 	movhi	r4,0
    699c:	2101aa04 	addi	r4,r4,1704
    69a0:	80c0030b 	ldhu	r3,12(r16)
    69a4:	89000f15 	stw	r4,60(r17)
    69a8:	80800015 	stw	r2,0(r16)
    69ac:	80800415 	stw	r2,16(r16)
    69b0:	d8800017 	ldw	r2,0(sp)
    69b4:	d9400117 	ldw	r5,4(sp)
    69b8:	18c02014 	ori	r3,r3,128
    69bc:	80c0030d 	sth	r3,12(r16)
    69c0:	80800515 	stw	r2,20(r16)
    69c4:	28001c1e 	bne	r5,zero,6a38 <__smakebuf_r+0x11c>
    69c8:	90c6b03a 	or	r3,r18,r3
    69cc:	80c0030d 	sth	r3,12(r16)
    69d0:	003fe006 	br	6954 <__smakebuf_r+0x38>
    69d4:	8140038f 	ldh	r5,14(r16)
    69d8:	8809883a 	mov	r4,r17
    69dc:	0009a040 	call	9a04 <_isatty_r>
    69e0:	103fe926 	beq	r2,zero,6988 <__smakebuf_r+0x6c>
    69e4:	8080030b 	ldhu	r2,12(r16)
    69e8:	80c010c4 	addi	r3,r16,67
    69ec:	80c00015 	stw	r3,0(r16)
    69f0:	10800054 	ori	r2,r2,1
    69f4:	8080030d 	sth	r2,12(r16)
    69f8:	00800044 	movi	r2,1
    69fc:	80c00415 	stw	r3,16(r16)
    6a00:	80800515 	stw	r2,20(r16)
    6a04:	003fe006 	br	6988 <__smakebuf_r+0x6c>
    6a08:	8080030b 	ldhu	r2,12(r16)
    6a0c:	10c0800c 	andi	r3,r2,512
    6a10:	183fd01e 	bne	r3,zero,6954 <__smakebuf_r+0x38>
    6a14:	10bfff0c 	andi	r2,r2,65532
    6a18:	10800094 	ori	r2,r2,2
    6a1c:	80c010c4 	addi	r3,r16,67
    6a20:	8080030d 	sth	r2,12(r16)
    6a24:	00800044 	movi	r2,1
    6a28:	80c00015 	stw	r3,0(r16)
    6a2c:	80c00415 	stw	r3,16(r16)
    6a30:	80800515 	stw	r2,20(r16)
    6a34:	003fc706 	br	6954 <__smakebuf_r+0x38>
    6a38:	8140038f 	ldh	r5,14(r16)
    6a3c:	8809883a 	mov	r4,r17
    6a40:	0009a040 	call	9a04 <_isatty_r>
    6a44:	80c0030b 	ldhu	r3,12(r16)
    6a48:	103fdf26 	beq	r2,zero,69c8 <__smakebuf_r+0xac>
    6a4c:	18ffff0c 	andi	r3,r3,65532
    6a50:	18c00054 	ori	r3,r3,1
    6a54:	003fdc06 	br	69c8 <__smakebuf_r+0xac>

00006a58 <memmove>:
    6a58:	2005883a 	mov	r2,r4
    6a5c:	29000a2e 	bgeu	r5,r4,6a88 <memmove+0x30>
    6a60:	2989883a 	add	r4,r5,r6
    6a64:	1100082e 	bgeu	r2,r4,6a88 <memmove+0x30>
    6a68:	1187883a 	add	r3,r2,r6
    6a6c:	30003e26 	beq	r6,zero,6b68 <memmove+0x110>
    6a70:	213fffc4 	addi	r4,r4,-1
    6a74:	21400003 	ldbu	r5,0(r4)
    6a78:	18ffffc4 	addi	r3,r3,-1
    6a7c:	19400005 	stb	r5,0(r3)
    6a80:	10fffb1e 	bne	r2,r3,6a70 <memmove+0x18>
    6a84:	f800283a 	ret
    6a88:	30c00430 	cmpltui	r3,r6,16
    6a8c:	18000b26 	beq	r3,zero,6abc <memmove+0x64>
    6a90:	1007883a 	mov	r3,r2
    6a94:	31ffffc4 	addi	r7,r6,-1
    6a98:	30003726 	beq	r6,zero,6b78 <memmove+0x120>
    6a9c:	39c00044 	addi	r7,r7,1
    6aa0:	29cf883a 	add	r7,r5,r7
    6aa4:	29400044 	addi	r5,r5,1
    6aa8:	29bfffc3 	ldbu	r6,-1(r5)
    6aac:	18c00044 	addi	r3,r3,1
    6ab0:	19bfffc5 	stb	r6,-1(r3)
    6ab4:	29fffb1e 	bne	r5,r7,6aa4 <memmove+0x4c>
    6ab8:	f800283a 	ret
    6abc:	2886b03a 	or	r3,r5,r2
    6ac0:	18c000cc 	andi	r3,r3,3
    6ac4:	1800291e 	bne	r3,zero,6b6c <memmove+0x114>
    6ac8:	327ffc04 	addi	r9,r6,-16
    6acc:	4812d13a 	srli	r9,r9,4
    6ad0:	280f883a 	mov	r7,r5
    6ad4:	1007883a 	mov	r3,r2
    6ad8:	4a400044 	addi	r9,r9,1
    6adc:	4812913a 	slli	r9,r9,4
    6ae0:	1251883a 	add	r8,r2,r9
    6ae4:	39000017 	ldw	r4,0(r7)
    6ae8:	18c00404 	addi	r3,r3,16
    6aec:	39c00404 	addi	r7,r7,16
    6af0:	193ffc15 	stw	r4,-16(r3)
    6af4:	393ffd17 	ldw	r4,-12(r7)
    6af8:	193ffd15 	stw	r4,-12(r3)
    6afc:	393ffe17 	ldw	r4,-8(r7)
    6b00:	193ffe15 	stw	r4,-8(r3)
    6b04:	393fff17 	ldw	r4,-4(r7)
    6b08:	193fff15 	stw	r4,-4(r3)
    6b0c:	40fff51e 	bne	r8,r3,6ae4 <memmove+0x8c>
    6b10:	3100030c 	andi	r4,r6,12
    6b14:	2a4b883a 	add	r5,r5,r9
    6b18:	320003cc 	andi	r8,r6,15
    6b1c:	20001726 	beq	r4,zero,6b7c <memmove+0x124>
    6b20:	2813883a 	mov	r9,r5
    6b24:	180f883a 	mov	r7,r3
    6b28:	4a400104 	addi	r9,r9,4
    6b2c:	39c00104 	addi	r7,r7,4
    6b30:	4abfff17 	ldw	r10,-4(r9)
    6b34:	41c9c83a 	sub	r4,r8,r7
    6b38:	1909883a 	add	r4,r3,r4
    6b3c:	3abfff15 	stw	r10,-4(r7)
    6b40:	21000128 	cmpgeui	r4,r4,4
    6b44:	203ff81e 	bne	r4,zero,6b28 <memmove+0xd0>
    6b48:	413fff04 	addi	r4,r8,-4
    6b4c:	2008d0ba 	srli	r4,r4,2
    6b50:	318000cc 	andi	r6,r6,3
    6b54:	21000044 	addi	r4,r4,1
    6b58:	200890ba 	slli	r4,r4,2
    6b5c:	1907883a 	add	r3,r3,r4
    6b60:	290b883a 	add	r5,r5,r4
    6b64:	003fcb06 	br	6a94 <memmove+0x3c>
    6b68:	f800283a 	ret
    6b6c:	31ffffc4 	addi	r7,r6,-1
    6b70:	1007883a 	mov	r3,r2
    6b74:	003fc906 	br	6a9c <memmove+0x44>
    6b78:	f800283a 	ret
    6b7c:	400d883a 	mov	r6,r8
    6b80:	003fc406 	br	6a94 <memmove+0x3c>

00006b84 <_Balloc>:
    6b84:	20801317 	ldw	r2,76(r4)
    6b88:	defffc04 	addi	sp,sp,-16
    6b8c:	dc400115 	stw	r17,4(sp)
    6b90:	dc000015 	stw	r16,0(sp)
    6b94:	dfc00315 	stw	ra,12(sp)
    6b98:	dc800215 	stw	r18,8(sp)
    6b9c:	2021883a 	mov	r16,r4
    6ba0:	2823883a 	mov	r17,r5
    6ba4:	10000e26 	beq	r2,zero,6be0 <_Balloc+0x5c>
    6ba8:	880690ba 	slli	r3,r17,2
    6bac:	10c7883a 	add	r3,r2,r3
    6bb0:	18800017 	ldw	r2,0(r3)
    6bb4:	10001126 	beq	r2,zero,6bfc <_Balloc+0x78>
    6bb8:	11000017 	ldw	r4,0(r2)
    6bbc:	19000015 	stw	r4,0(r3)
    6bc0:	10000415 	stw	zero,16(r2)
    6bc4:	10000315 	stw	zero,12(r2)
    6bc8:	dfc00317 	ldw	ra,12(sp)
    6bcc:	dc800217 	ldw	r18,8(sp)
    6bd0:	dc400117 	ldw	r17,4(sp)
    6bd4:	dc000017 	ldw	r16,0(sp)
    6bd8:	dec00404 	addi	sp,sp,16
    6bdc:	f800283a 	ret
    6be0:	01800844 	movi	r6,33
    6be4:	01400104 	movi	r5,4
    6be8:	00096e80 	call	96e8 <_calloc_r>
    6bec:	80801315 	stw	r2,76(r16)
    6bf0:	103fed1e 	bne	r2,zero,6ba8 <_Balloc+0x24>
    6bf4:	0005883a 	mov	r2,zero
    6bf8:	003ff306 	br	6bc8 <_Balloc+0x44>
    6bfc:	04800044 	movi	r18,1
    6c00:	9464983a 	sll	r18,r18,r17
    6c04:	01400044 	movi	r5,1
    6c08:	8009883a 	mov	r4,r16
    6c0c:	91800144 	addi	r6,r18,5
    6c10:	300c90ba 	slli	r6,r6,2
    6c14:	00096e80 	call	96e8 <_calloc_r>
    6c18:	103ff626 	beq	r2,zero,6bf4 <_Balloc+0x70>
    6c1c:	14400115 	stw	r17,4(r2)
    6c20:	14800215 	stw	r18,8(r2)
    6c24:	003fe606 	br	6bc0 <_Balloc+0x3c>

00006c28 <_Bfree>:
    6c28:	28000726 	beq	r5,zero,6c48 <_Bfree+0x20>
    6c2c:	28c00117 	ldw	r3,4(r5)
    6c30:	20801317 	ldw	r2,76(r4)
    6c34:	180690ba 	slli	r3,r3,2
    6c38:	10c5883a 	add	r2,r2,r3
    6c3c:	10c00017 	ldw	r3,0(r2)
    6c40:	28c00015 	stw	r3,0(r5)
    6c44:	11400015 	stw	r5,0(r2)
    6c48:	f800283a 	ret

00006c4c <__multadd>:
    6c4c:	defff704 	addi	sp,sp,-36
    6c50:	dcc00315 	stw	r19,12(sp)
    6c54:	2cc00417 	ldw	r19,16(r5)
    6c58:	ddc00715 	stw	r23,28(sp)
    6c5c:	dd800615 	stw	r22,24(sp)
    6c60:	dd400515 	stw	r21,20(sp)
    6c64:	dd000415 	stw	r20,16(sp)
    6c68:	dc800215 	stw	r18,8(sp)
    6c6c:	dc400115 	stw	r17,4(sp)
    6c70:	dfc00815 	stw	ra,32(sp)
    6c74:	dc000015 	stw	r16,0(sp)
    6c78:	2829883a 	mov	r20,r5
    6c7c:	202b883a 	mov	r21,r4
    6c80:	3025883a 	mov	r18,r6
    6c84:	3823883a 	mov	r17,r7
    6c88:	2d800504 	addi	r22,r5,20
    6c8c:	002f883a 	mov	r23,zero
    6c90:	b4000017 	ldw	r16,0(r22)
    6c94:	900b883a 	mov	r5,r18
    6c98:	b5800104 	addi	r22,r22,4
    6c9c:	813fffcc 	andi	r4,r16,65535
    6ca0:	000ac380 	call	ac38 <__mulsi3>
    6ca4:	8008d43a 	srli	r4,r16,16
    6ca8:	900b883a 	mov	r5,r18
    6cac:	1461883a 	add	r16,r2,r17
    6cb0:	000ac380 	call	ac38 <__mulsi3>
    6cb4:	800ed43a 	srli	r7,r16,16
    6cb8:	843fffcc 	andi	r16,r16,65535
    6cbc:	bdc00044 	addi	r23,r23,1
    6cc0:	11c5883a 	add	r2,r2,r7
    6cc4:	1006943a 	slli	r3,r2,16
    6cc8:	1022d43a 	srli	r17,r2,16
    6ccc:	1c21883a 	add	r16,r3,r16
    6cd0:	b43fff15 	stw	r16,-4(r22)
    6cd4:	bcffee16 	blt	r23,r19,6c90 <__multadd+0x44>
    6cd8:	88000826 	beq	r17,zero,6cfc <__multadd+0xb0>
    6cdc:	a0800217 	ldw	r2,8(r20)
    6ce0:	9880120e 	bge	r19,r2,6d2c <__multadd+0xe0>
    6ce4:	98800144 	addi	r2,r19,5
    6ce8:	100490ba 	slli	r2,r2,2
    6cec:	9cc00044 	addi	r19,r19,1
    6cf0:	a085883a 	add	r2,r20,r2
    6cf4:	14400015 	stw	r17,0(r2)
    6cf8:	a4c00415 	stw	r19,16(r20)
    6cfc:	a005883a 	mov	r2,r20
    6d00:	dfc00817 	ldw	ra,32(sp)
    6d04:	ddc00717 	ldw	r23,28(sp)
    6d08:	dd800617 	ldw	r22,24(sp)
    6d0c:	dd400517 	ldw	r21,20(sp)
    6d10:	dd000417 	ldw	r20,16(sp)
    6d14:	dcc00317 	ldw	r19,12(sp)
    6d18:	dc800217 	ldw	r18,8(sp)
    6d1c:	dc400117 	ldw	r17,4(sp)
    6d20:	dc000017 	ldw	r16,0(sp)
    6d24:	dec00904 	addi	sp,sp,36
    6d28:	f800283a 	ret
    6d2c:	a1400117 	ldw	r5,4(r20)
    6d30:	a809883a 	mov	r4,r21
    6d34:	29400044 	addi	r5,r5,1
    6d38:	0006b840 	call	6b84 <_Balloc>
    6d3c:	a1800417 	ldw	r6,16(r20)
    6d40:	a1400304 	addi	r5,r20,12
    6d44:	11000304 	addi	r4,r2,12
    6d48:	31800084 	addi	r6,r6,2
    6d4c:	300c90ba 	slli	r6,r6,2
    6d50:	1021883a 	mov	r16,r2
    6d54:	00014280 	call	1428 <memcpy>
    6d58:	a0000926 	beq	r20,zero,6d80 <__multadd+0x134>
    6d5c:	a0c00117 	ldw	r3,4(r20)
    6d60:	a8801317 	ldw	r2,76(r21)
    6d64:	180690ba 	slli	r3,r3,2
    6d68:	10c5883a 	add	r2,r2,r3
    6d6c:	10c00017 	ldw	r3,0(r2)
    6d70:	a0c00015 	stw	r3,0(r20)
    6d74:	15000015 	stw	r20,0(r2)
    6d78:	8029883a 	mov	r20,r16
    6d7c:	003fd906 	br	6ce4 <__multadd+0x98>
    6d80:	8029883a 	mov	r20,r16
    6d84:	003fd706 	br	6ce4 <__multadd+0x98>

00006d88 <__s2b>:
    6d88:	defff904 	addi	sp,sp,-28
    6d8c:	dc800215 	stw	r18,8(sp)
    6d90:	dc000015 	stw	r16,0(sp)
    6d94:	2025883a 	mov	r18,r4
    6d98:	2821883a 	mov	r16,r5
    6d9c:	39000204 	addi	r4,r7,8
    6da0:	01400244 	movi	r5,9
    6da4:	dcc00315 	stw	r19,12(sp)
    6da8:	dc400115 	stw	r17,4(sp)
    6dac:	dfc00615 	stw	ra,24(sp)
    6db0:	3823883a 	mov	r17,r7
    6db4:	dd400515 	stw	r21,20(sp)
    6db8:	dd000415 	stw	r20,16(sp)
    6dbc:	3027883a 	mov	r19,r6
    6dc0:	000aa800 	call	aa80 <__divsi3>
    6dc4:	88c00290 	cmplti	r3,r17,10
    6dc8:	1800311e 	bne	r3,zero,6e90 <__s2b+0x108>
    6dcc:	00c00044 	movi	r3,1
    6dd0:	000b883a 	mov	r5,zero
    6dd4:	18c7883a 	add	r3,r3,r3
    6dd8:	29400044 	addi	r5,r5,1
    6ddc:	18bffd16 	blt	r3,r2,6dd4 <__s2b+0x4c>
    6de0:	9009883a 	mov	r4,r18
    6de4:	0006b840 	call	6b84 <_Balloc>
    6de8:	d8c00717 	ldw	r3,28(sp)
    6dec:	10c00515 	stw	r3,20(r2)
    6df0:	00c00044 	movi	r3,1
    6df4:	10c00415 	stw	r3,16(r2)
    6df8:	98c00290 	cmplti	r3,r19,10
    6dfc:	1800211e 	bne	r3,zero,6e84 <__s2b+0xfc>
    6e00:	85400244 	addi	r21,r16,9
    6e04:	84e9883a 	add	r20,r16,r19
    6e08:	a821883a 	mov	r16,r21
    6e0c:	84000044 	addi	r16,r16,1
    6e10:	81ffffc7 	ldb	r7,-1(r16)
    6e14:	01800284 	movi	r6,10
    6e18:	100b883a 	mov	r5,r2
    6e1c:	39fff404 	addi	r7,r7,-48
    6e20:	9009883a 	mov	r4,r18
    6e24:	0006c4c0 	call	6c4c <__multadd>
    6e28:	a43ff81e 	bne	r20,r16,6e0c <__s2b+0x84>
    6e2c:	9c3ffe04 	addi	r16,r19,-8
    6e30:	ac21883a 	add	r16,r21,r16
    6e34:	9c400a0e 	bge	r19,r17,6e60 <__s2b+0xd8>
    6e38:	8ce3c83a 	sub	r17,r17,r19
    6e3c:	8463883a 	add	r17,r16,r17
    6e40:	84000044 	addi	r16,r16,1
    6e44:	81ffffc7 	ldb	r7,-1(r16)
    6e48:	01800284 	movi	r6,10
    6e4c:	100b883a 	mov	r5,r2
    6e50:	39fff404 	addi	r7,r7,-48
    6e54:	9009883a 	mov	r4,r18
    6e58:	0006c4c0 	call	6c4c <__multadd>
    6e5c:	8c3ff81e 	bne	r17,r16,6e40 <__s2b+0xb8>
    6e60:	dfc00617 	ldw	ra,24(sp)
    6e64:	dd400517 	ldw	r21,20(sp)
    6e68:	dd000417 	ldw	r20,16(sp)
    6e6c:	dcc00317 	ldw	r19,12(sp)
    6e70:	dc800217 	ldw	r18,8(sp)
    6e74:	dc400117 	ldw	r17,4(sp)
    6e78:	dc000017 	ldw	r16,0(sp)
    6e7c:	dec00704 	addi	sp,sp,28
    6e80:	f800283a 	ret
    6e84:	84000284 	addi	r16,r16,10
    6e88:	04c00244 	movi	r19,9
    6e8c:	003fe906 	br	6e34 <__s2b+0xac>
    6e90:	000b883a 	mov	r5,zero
    6e94:	003fd206 	br	6de0 <__s2b+0x58>

00006e98 <__hi0bits>:
    6e98:	20bfffec 	andhi	r2,r4,65535
    6e9c:	1000131e 	bne	r2,zero,6eec <__hi0bits+0x54>
    6ea0:	2008943a 	slli	r4,r4,16
    6ea4:	00800404 	movi	r2,16
    6ea8:	20ffc02c 	andhi	r3,r4,65280
    6eac:	1800021e 	bne	r3,zero,6eb8 <__hi0bits+0x20>
    6eb0:	2008923a 	slli	r4,r4,8
    6eb4:	10800204 	addi	r2,r2,8
    6eb8:	20fc002c 	andhi	r3,r4,61440
    6ebc:	1800021e 	bne	r3,zero,6ec8 <__hi0bits+0x30>
    6ec0:	2008913a 	slli	r4,r4,4
    6ec4:	10800104 	addi	r2,r2,4
    6ec8:	20f0002c 	andhi	r3,r4,49152
    6ecc:	1800021e 	bne	r3,zero,6ed8 <__hi0bits+0x40>
    6ed0:	200890ba 	slli	r4,r4,2
    6ed4:	10800084 	addi	r2,r2,2
    6ed8:	20000316 	blt	r4,zero,6ee8 <__hi0bits+0x50>
    6edc:	2110002c 	andhi	r4,r4,16384
    6ee0:	10800044 	addi	r2,r2,1
    6ee4:	20000326 	beq	r4,zero,6ef4 <__hi0bits+0x5c>
    6ee8:	f800283a 	ret
    6eec:	0005883a 	mov	r2,zero
    6ef0:	003fed06 	br	6ea8 <__hi0bits+0x10>
    6ef4:	00800804 	movi	r2,32
    6ef8:	f800283a 	ret

00006efc <__lo0bits>:
    6efc:	20c00017 	ldw	r3,0(r4)
    6f00:	188001cc 	andi	r2,r3,7
    6f04:	10000826 	beq	r2,zero,6f28 <__lo0bits+0x2c>
    6f08:	1880004c 	andi	r2,r3,1
    6f0c:	10001f1e 	bne	r2,zero,6f8c <__lo0bits+0x90>
    6f10:	1880008c 	andi	r2,r3,2
    6f14:	10002126 	beq	r2,zero,6f9c <__lo0bits+0xa0>
    6f18:	1806d07a 	srli	r3,r3,1
    6f1c:	00800044 	movi	r2,1
    6f20:	20c00015 	stw	r3,0(r4)
    6f24:	f800283a 	ret
    6f28:	18bfffcc 	andi	r2,r3,65535
    6f2c:	1000151e 	bne	r2,zero,6f84 <__lo0bits+0x88>
    6f30:	1806d43a 	srli	r3,r3,16
    6f34:	00800404 	movi	r2,16
    6f38:	19403fcc 	andi	r5,r3,255
    6f3c:	2800021e 	bne	r5,zero,6f48 <__lo0bits+0x4c>
    6f40:	1806d23a 	srli	r3,r3,8
    6f44:	10800204 	addi	r2,r2,8
    6f48:	194003cc 	andi	r5,r3,15
    6f4c:	2800021e 	bne	r5,zero,6f58 <__lo0bits+0x5c>
    6f50:	1806d13a 	srli	r3,r3,4
    6f54:	10800104 	addi	r2,r2,4
    6f58:	194000cc 	andi	r5,r3,3
    6f5c:	2800021e 	bne	r5,zero,6f68 <__lo0bits+0x6c>
    6f60:	1806d0ba 	srli	r3,r3,2
    6f64:	10800084 	addi	r2,r2,2
    6f68:	1940004c 	andi	r5,r3,1
    6f6c:	2800031e 	bne	r5,zero,6f7c <__lo0bits+0x80>
    6f70:	1806d07a 	srli	r3,r3,1
    6f74:	10800044 	addi	r2,r2,1
    6f78:	18000626 	beq	r3,zero,6f94 <__lo0bits+0x98>
    6f7c:	20c00015 	stw	r3,0(r4)
    6f80:	f800283a 	ret
    6f84:	0005883a 	mov	r2,zero
    6f88:	003feb06 	br	6f38 <__lo0bits+0x3c>
    6f8c:	0005883a 	mov	r2,zero
    6f90:	f800283a 	ret
    6f94:	00800804 	movi	r2,32
    6f98:	f800283a 	ret
    6f9c:	1806d0ba 	srli	r3,r3,2
    6fa0:	00800084 	movi	r2,2
    6fa4:	20c00015 	stw	r3,0(r4)
    6fa8:	f800283a 	ret

00006fac <__i2b>:
    6fac:	defffe04 	addi	sp,sp,-8
    6fb0:	dc000015 	stw	r16,0(sp)
    6fb4:	2821883a 	mov	r16,r5
    6fb8:	01400044 	movi	r5,1
    6fbc:	dfc00115 	stw	ra,4(sp)
    6fc0:	0006b840 	call	6b84 <_Balloc>
    6fc4:	01000044 	movi	r4,1
    6fc8:	14000515 	stw	r16,20(r2)
    6fcc:	11000415 	stw	r4,16(r2)
    6fd0:	dfc00117 	ldw	ra,4(sp)
    6fd4:	dc000017 	ldw	r16,0(sp)
    6fd8:	dec00204 	addi	sp,sp,8
    6fdc:	f800283a 	ret

00006fe0 <__multiply>:
    6fe0:	defff104 	addi	sp,sp,-60
    6fe4:	dd800b15 	stw	r22,44(sp)
    6fe8:	dc400615 	stw	r17,24(sp)
    6fec:	2d800417 	ldw	r22,16(r5)
    6ff0:	34400417 	ldw	r17,16(r6)
    6ff4:	ddc00c15 	stw	r23,48(sp)
    6ff8:	dc800715 	stw	r18,28(sp)
    6ffc:	dfc00e15 	stw	ra,56(sp)
    7000:	df000d15 	stw	fp,52(sp)
    7004:	dd400a15 	stw	r21,40(sp)
    7008:	dd000915 	stw	r20,36(sp)
    700c:	dcc00815 	stw	r19,32(sp)
    7010:	dc000515 	stw	r16,20(sp)
    7014:	2825883a 	mov	r18,r5
    7018:	302f883a 	mov	r23,r6
    701c:	b4400516 	blt	r22,r17,7034 <__multiply+0x54>
    7020:	8807883a 	mov	r3,r17
    7024:	282f883a 	mov	r23,r5
    7028:	b023883a 	mov	r17,r22
    702c:	3025883a 	mov	r18,r6
    7030:	182d883a 	mov	r22,r3
    7034:	b8800217 	ldw	r2,8(r23)
    7038:	8da9883a 	add	r20,r17,r22
    703c:	b9400117 	ldw	r5,4(r23)
    7040:	1500010e 	bge	r2,r20,7048 <__multiply+0x68>
    7044:	29400044 	addi	r5,r5,1
    7048:	a02690ba 	slli	r19,r20,2
    704c:	0006b840 	call	6b84 <_Balloc>
    7050:	10c00504 	addi	r3,r2,20
    7054:	1cc9883a 	add	r4,r3,r19
    7058:	d8800415 	stw	r2,16(sp)
    705c:	d8c00015 	stw	r3,0(sp)
    7060:	d9000115 	stw	r4,4(sp)
    7064:	1805883a 	mov	r2,r3
    7068:	1900042e 	bgeu	r3,r4,707c <__multiply+0x9c>
    706c:	d8c00117 	ldw	r3,4(sp)
    7070:	10000015 	stw	zero,0(r2)
    7074:	10800104 	addi	r2,r2,4
    7078:	10fffc36 	bltu	r2,r3,706c <__multiply+0x8c>
    707c:	b02c90ba 	slli	r22,r22,2
    7080:	882290ba 	slli	r17,r17,2
    7084:	94800504 	addi	r18,r18,20
    7088:	b8800504 	addi	r2,r23,20
    708c:	9587883a 	add	r3,r18,r22
    7090:	d8800315 	stw	r2,12(sp)
    7094:	d8c00215 	stw	r3,8(sp)
    7098:	1463883a 	add	r17,r2,r17
    709c:	90c00936 	bltu	r18,r3,70c4 <__multiply+0xe4>
    70a0:	00004606 	br	71bc <__multiply+0x1dc>
    70a4:	8020d43a 	srli	r16,r16,16
    70a8:	8000271e 	bne	r16,zero,7148 <__multiply+0x168>
    70ac:	d8800017 	ldw	r2,0(sp)
    70b0:	94800104 	addi	r18,r18,4
    70b4:	10800104 	addi	r2,r2,4
    70b8:	d8800015 	stw	r2,0(sp)
    70bc:	d8800217 	ldw	r2,8(sp)
    70c0:	90803e2e 	bgeu	r18,r2,71bc <__multiply+0x1dc>
    70c4:	94000017 	ldw	r16,0(r18)
    70c8:	873fffcc 	andi	fp,r16,65535
    70cc:	e03ff526 	beq	fp,zero,70a4 <__multiply+0xc4>
    70d0:	dcc00017 	ldw	r19,0(sp)
    70d4:	dd800317 	ldw	r22,12(sp)
    70d8:	002b883a 	mov	r21,zero
    70dc:	b5c00017 	ldw	r23,0(r22)
    70e0:	9c000017 	ldw	r16,0(r19)
    70e4:	e00b883a 	mov	r5,fp
    70e8:	b93fffcc 	andi	r4,r23,65535
    70ec:	000ac380 	call	ac38 <__mulsi3>
    70f0:	b808d43a 	srli	r4,r23,16
    70f4:	80ffffcc 	andi	r3,r16,65535
    70f8:	10c5883a 	add	r2,r2,r3
    70fc:	e00b883a 	mov	r5,fp
    7100:	156b883a 	add	r21,r2,r21
    7104:	8020d43a 	srli	r16,r16,16
    7108:	000ac380 	call	ac38 <__mulsi3>
    710c:	a808d43a 	srli	r4,r21,16
    7110:	1405883a 	add	r2,r2,r16
    7114:	a8ffffcc 	andi	r3,r21,65535
    7118:	1105883a 	add	r2,r2,r4
    711c:	1008943a 	slli	r4,r2,16
    7120:	9cc00104 	addi	r19,r19,4
    7124:	b5800104 	addi	r22,r22,4
    7128:	20c6b03a 	or	r3,r4,r3
    712c:	98ffff15 	stw	r3,-4(r19)
    7130:	102ad43a 	srli	r21,r2,16
    7134:	b47fe936 	bltu	r22,r17,70dc <__multiply+0xfc>
    7138:	9d400015 	stw	r21,0(r19)
    713c:	94000017 	ldw	r16,0(r18)
    7140:	8020d43a 	srli	r16,r16,16
    7144:	803fd926 	beq	r16,zero,70ac <__multiply+0xcc>
    7148:	ddc00017 	ldw	r23,0(sp)
    714c:	dd400317 	ldw	r21,12(sp)
    7150:	0027883a 	mov	r19,zero
    7154:	bd800017 	ldw	r22,0(r23)
    7158:	b039883a 	mov	fp,r22
    715c:	a900000b 	ldhu	r4,0(r21)
    7160:	e038d43a 	srli	fp,fp,16
    7164:	800b883a 	mov	r5,r16
    7168:	000ac380 	call	ac38 <__mulsi3>
    716c:	1739883a 	add	fp,r2,fp
    7170:	e4e7883a 	add	r19,fp,r19
    7174:	9804943a 	slli	r2,r19,16
    7178:	b0ffffcc 	andi	r3,r22,65535
    717c:	bdc00104 	addi	r23,r23,4
    7180:	10c6b03a 	or	r3,r2,r3
    7184:	b8ffff15 	stw	r3,-4(r23)
    7188:	ad400104 	addi	r21,r21,4
    718c:	a93fff8b 	ldhu	r4,-2(r21)
    7190:	bf000017 	ldw	fp,0(r23)
    7194:	800b883a 	mov	r5,r16
    7198:	000ac380 	call	ac38 <__mulsi3>
    719c:	980cd43a 	srli	r6,r19,16
    71a0:	e0ffffcc 	andi	r3,fp,65535
    71a4:	10c7883a 	add	r3,r2,r3
    71a8:	19ad883a 	add	r22,r3,r6
    71ac:	b026d43a 	srli	r19,r22,16
    71b0:	ac7fea36 	bltu	r21,r17,715c <__multiply+0x17c>
    71b4:	bd800015 	stw	r22,0(r23)
    71b8:	003fbc06 	br	70ac <__multiply+0xcc>
    71bc:	05000a0e 	bge	zero,r20,71e8 <__multiply+0x208>
    71c0:	d8c00117 	ldw	r3,4(sp)
    71c4:	18bfff17 	ldw	r2,-4(r3)
    71c8:	1cffff04 	addi	r19,r3,-4
    71cc:	10000326 	beq	r2,zero,71dc <__multiply+0x1fc>
    71d0:	00000506 	br	71e8 <__multiply+0x208>
    71d4:	98800017 	ldw	r2,0(r19)
    71d8:	1000031e 	bne	r2,zero,71e8 <__multiply+0x208>
    71dc:	a53fffc4 	addi	r20,r20,-1
    71e0:	9cffff04 	addi	r19,r19,-4
    71e4:	a03ffb1e 	bne	r20,zero,71d4 <__multiply+0x1f4>
    71e8:	d8800417 	ldw	r2,16(sp)
    71ec:	15000415 	stw	r20,16(r2)
    71f0:	dfc00e17 	ldw	ra,56(sp)
    71f4:	df000d17 	ldw	fp,52(sp)
    71f8:	ddc00c17 	ldw	r23,48(sp)
    71fc:	dd800b17 	ldw	r22,44(sp)
    7200:	dd400a17 	ldw	r21,40(sp)
    7204:	dd000917 	ldw	r20,36(sp)
    7208:	dcc00817 	ldw	r19,32(sp)
    720c:	dc800717 	ldw	r18,28(sp)
    7210:	dc400617 	ldw	r17,24(sp)
    7214:	dc000517 	ldw	r16,20(sp)
    7218:	dec00f04 	addi	sp,sp,60
    721c:	f800283a 	ret

00007220 <__pow5mult>:
    7220:	defffb04 	addi	sp,sp,-20
    7224:	dcc00315 	stw	r19,12(sp)
    7228:	dc000015 	stw	r16,0(sp)
    722c:	dfc00415 	stw	ra,16(sp)
    7230:	dc800215 	stw	r18,8(sp)
    7234:	dc400115 	stw	r17,4(sp)
    7238:	308000cc 	andi	r2,r6,3
    723c:	3021883a 	mov	r16,r6
    7240:	2027883a 	mov	r19,r4
    7244:	10002d1e 	bne	r2,zero,72fc <__pow5mult+0xdc>
    7248:	2825883a 	mov	r18,r5
    724c:	8021d0ba 	srai	r16,r16,2
    7250:	80001926 	beq	r16,zero,72b8 <__pow5mult+0x98>
    7254:	9c401217 	ldw	r17,72(r19)
    7258:	8800061e 	bne	r17,zero,7274 <__pow5mult+0x54>
    725c:	00002f06 	br	731c <__pow5mult+0xfc>
    7260:	8021d07a 	srai	r16,r16,1
    7264:	80001426 	beq	r16,zero,72b8 <__pow5mult+0x98>
    7268:	88800017 	ldw	r2,0(r17)
    726c:	10001a26 	beq	r2,zero,72d8 <__pow5mult+0xb8>
    7270:	1023883a 	mov	r17,r2
    7274:	8080004c 	andi	r2,r16,1
    7278:	103ff926 	beq	r2,zero,7260 <__pow5mult+0x40>
    727c:	880d883a 	mov	r6,r17
    7280:	900b883a 	mov	r5,r18
    7284:	9809883a 	mov	r4,r19
    7288:	0006fe00 	call	6fe0 <__multiply>
    728c:	90001926 	beq	r18,zero,72f4 <__pow5mult+0xd4>
    7290:	91000117 	ldw	r4,4(r18)
    7294:	98c01317 	ldw	r3,76(r19)
    7298:	8021d07a 	srai	r16,r16,1
    729c:	200890ba 	slli	r4,r4,2
    72a0:	1907883a 	add	r3,r3,r4
    72a4:	19000017 	ldw	r4,0(r3)
    72a8:	91000015 	stw	r4,0(r18)
    72ac:	1c800015 	stw	r18,0(r3)
    72b0:	1025883a 	mov	r18,r2
    72b4:	803fec1e 	bne	r16,zero,7268 <__pow5mult+0x48>
    72b8:	9005883a 	mov	r2,r18
    72bc:	dfc00417 	ldw	ra,16(sp)
    72c0:	dcc00317 	ldw	r19,12(sp)
    72c4:	dc800217 	ldw	r18,8(sp)
    72c8:	dc400117 	ldw	r17,4(sp)
    72cc:	dc000017 	ldw	r16,0(sp)
    72d0:	dec00504 	addi	sp,sp,20
    72d4:	f800283a 	ret
    72d8:	880d883a 	mov	r6,r17
    72dc:	880b883a 	mov	r5,r17
    72e0:	9809883a 	mov	r4,r19
    72e4:	0006fe00 	call	6fe0 <__multiply>
    72e8:	88800015 	stw	r2,0(r17)
    72ec:	10000015 	stw	zero,0(r2)
    72f0:	003fdf06 	br	7270 <__pow5mult+0x50>
    72f4:	1025883a 	mov	r18,r2
    72f8:	003fd906 	br	7260 <__pow5mult+0x40>
    72fc:	100490ba 	slli	r2,r2,2
    7300:	00c00074 	movhi	r3,1
    7304:	000f883a 	mov	r7,zero
    7308:	10c7883a 	add	r3,r2,r3
    730c:	19bfcb17 	ldw	r6,-212(r3)
    7310:	0006c4c0 	call	6c4c <__multadd>
    7314:	1025883a 	mov	r18,r2
    7318:	003fcc06 	br	724c <__pow5mult+0x2c>
    731c:	01400044 	movi	r5,1
    7320:	9809883a 	mov	r4,r19
    7324:	0006b840 	call	6b84 <_Balloc>
    7328:	1023883a 	mov	r17,r2
    732c:	00809c44 	movi	r2,625
    7330:	88800515 	stw	r2,20(r17)
    7334:	00800044 	movi	r2,1
    7338:	88800415 	stw	r2,16(r17)
    733c:	9c401215 	stw	r17,72(r19)
    7340:	88000015 	stw	zero,0(r17)
    7344:	003fcb06 	br	7274 <__pow5mult+0x54>

00007348 <__lshift>:
    7348:	defff904 	addi	sp,sp,-28
    734c:	dcc00315 	stw	r19,12(sp)
    7350:	dc400115 	stw	r17,4(sp)
    7354:	2cc00417 	ldw	r19,16(r5)
    7358:	3023d17a 	srai	r17,r6,5
    735c:	28800217 	ldw	r2,8(r5)
    7360:	dd400515 	stw	r21,20(sp)
    7364:	8ce7883a 	add	r19,r17,r19
    7368:	dd000415 	stw	r20,16(sp)
    736c:	dc800215 	stw	r18,8(sp)
    7370:	dc000015 	stw	r16,0(sp)
    7374:	dfc00615 	stw	ra,24(sp)
    7378:	9c000044 	addi	r16,r19,1
    737c:	2825883a 	mov	r18,r5
    7380:	302b883a 	mov	r21,r6
    7384:	2029883a 	mov	r20,r4
    7388:	29400117 	ldw	r5,4(r5)
    738c:	1400030e 	bge	r2,r16,739c <__lshift+0x54>
    7390:	1085883a 	add	r2,r2,r2
    7394:	29400044 	addi	r5,r5,1
    7398:	143ffd16 	blt	r2,r16,7390 <__lshift+0x48>
    739c:	a009883a 	mov	r4,r20
    73a0:	0006b840 	call	6b84 <_Balloc>
    73a4:	11000504 	addi	r4,r2,20
    73a8:	0440090e 	bge	zero,r17,73d0 <__lshift+0x88>
    73ac:	8c400144 	addi	r17,r17,5
    73b0:	882290ba 	slli	r17,r17,2
    73b4:	2007883a 	mov	r3,r4
    73b8:	144b883a 	add	r5,r2,r17
    73bc:	18c00104 	addi	r3,r3,4
    73c0:	183fff15 	stw	zero,-4(r3)
    73c4:	28fffd1e 	bne	r5,r3,73bc <__lshift+0x74>
    73c8:	8c7ffb04 	addi	r17,r17,-20
    73cc:	2449883a 	add	r4,r4,r17
    73d0:	92000417 	ldw	r8,16(r18)
    73d4:	90c00504 	addi	r3,r18,20
    73d8:	a98007cc 	andi	r6,r21,31
    73dc:	401090ba 	slli	r8,r8,2
    73e0:	1a11883a 	add	r8,r3,r8
    73e4:	30002126 	beq	r6,zero,746c <__lshift+0x124>
    73e8:	02400804 	movi	r9,32
    73ec:	4993c83a 	sub	r9,r9,r6
    73f0:	000f883a 	mov	r7,zero
    73f4:	19400017 	ldw	r5,0(r3)
    73f8:	21000104 	addi	r4,r4,4
    73fc:	18c00104 	addi	r3,r3,4
    7400:	298a983a 	sll	r5,r5,r6
    7404:	29cab03a 	or	r5,r5,r7
    7408:	217fff15 	stw	r5,-4(r4)
    740c:	197fff17 	ldw	r5,-4(r3)
    7410:	2a4ed83a 	srl	r7,r5,r9
    7414:	1a3ff736 	bltu	r3,r8,73f4 <__lshift+0xac>
    7418:	21c00015 	stw	r7,0(r4)
    741c:	38000126 	beq	r7,zero,7424 <__lshift+0xdc>
    7420:	8027883a 	mov	r19,r16
    7424:	14c00415 	stw	r19,16(r2)
    7428:	90000726 	beq	r18,zero,7448 <__lshift+0x100>
    742c:	91000117 	ldw	r4,4(r18)
    7430:	a0c01317 	ldw	r3,76(r20)
    7434:	200890ba 	slli	r4,r4,2
    7438:	1907883a 	add	r3,r3,r4
    743c:	19000017 	ldw	r4,0(r3)
    7440:	91000015 	stw	r4,0(r18)
    7444:	1c800015 	stw	r18,0(r3)
    7448:	dfc00617 	ldw	ra,24(sp)
    744c:	dd400517 	ldw	r21,20(sp)
    7450:	dd000417 	ldw	r20,16(sp)
    7454:	dcc00317 	ldw	r19,12(sp)
    7458:	dc800217 	ldw	r18,8(sp)
    745c:	dc400117 	ldw	r17,4(sp)
    7460:	dc000017 	ldw	r16,0(sp)
    7464:	dec00704 	addi	sp,sp,28
    7468:	f800283a 	ret
    746c:	18c00104 	addi	r3,r3,4
    7470:	197fff17 	ldw	r5,-4(r3)
    7474:	21000104 	addi	r4,r4,4
    7478:	217fff15 	stw	r5,-4(r4)
    747c:	1a3ffb36 	bltu	r3,r8,746c <__lshift+0x124>
    7480:	003fe806 	br	7424 <__lshift+0xdc>

00007484 <__mcmp>:
    7484:	20800417 	ldw	r2,16(r4)
    7488:	28c00417 	ldw	r3,16(r5)
    748c:	10c5c83a 	sub	r2,r2,r3
    7490:	10000e1e 	bne	r2,zero,74cc <__mcmp+0x48>
    7494:	180c90ba 	slli	r6,r3,2
    7498:	21000504 	addi	r4,r4,20
    749c:	29400504 	addi	r5,r5,20
    74a0:	2187883a 	add	r3,r4,r6
    74a4:	298b883a 	add	r5,r5,r6
    74a8:	00000106 	br	74b0 <__mcmp+0x2c>
    74ac:	20c0082e 	bgeu	r4,r3,74d0 <__mcmp+0x4c>
    74b0:	18ffff04 	addi	r3,r3,-4
    74b4:	297fff04 	addi	r5,r5,-4
    74b8:	19c00017 	ldw	r7,0(r3)
    74bc:	29800017 	ldw	r6,0(r5)
    74c0:	39bffa26 	beq	r7,r6,74ac <__mcmp+0x28>
    74c4:	3980032e 	bgeu	r7,r6,74d4 <__mcmp+0x50>
    74c8:	00bfffc4 	movi	r2,-1
    74cc:	f800283a 	ret
    74d0:	f800283a 	ret
    74d4:	00800044 	movi	r2,1
    74d8:	f800283a 	ret

000074dc <__mdiff>:
    74dc:	defffa04 	addi	sp,sp,-24
    74e0:	dc800215 	stw	r18,8(sp)
    74e4:	30c00417 	ldw	r3,16(r6)
    74e8:	2c800417 	ldw	r18,16(r5)
    74ec:	dd000415 	stw	r20,16(sp)
    74f0:	dcc00315 	stw	r19,12(sp)
    74f4:	dc400115 	stw	r17,4(sp)
    74f8:	dc000015 	stw	r16,0(sp)
    74fc:	dfc00515 	stw	ra,20(sp)
    7500:	90e5c83a 	sub	r18,r18,r3
    7504:	2827883a 	mov	r19,r5
    7508:	3029883a 	mov	r20,r6
    750c:	2c000504 	addi	r16,r5,20
    7510:	34400504 	addi	r17,r6,20
    7514:	9000131e 	bne	r18,zero,7564 <__mdiff+0x88>
    7518:	180690ba 	slli	r3,r3,2
    751c:	80c5883a 	add	r2,r16,r3
    7520:	88c7883a 	add	r3,r17,r3
    7524:	00000106 	br	752c <__mdiff+0x50>
    7528:	8080552e 	bgeu	r16,r2,7680 <__mdiff+0x1a4>
    752c:	10bfff04 	addi	r2,r2,-4
    7530:	18ffff04 	addi	r3,r3,-4
    7534:	11c00017 	ldw	r7,0(r2)
    7538:	19400017 	ldw	r5,0(r3)
    753c:	397ffa26 	beq	r7,r5,7528 <__mdiff+0x4c>
    7540:	39400a2e 	bgeu	r7,r5,756c <__mdiff+0x90>
    7544:	8007883a 	mov	r3,r16
    7548:	9805883a 	mov	r2,r19
    754c:	8821883a 	mov	r16,r17
    7550:	a027883a 	mov	r19,r20
    7554:	1823883a 	mov	r17,r3
    7558:	1029883a 	mov	r20,r2
    755c:	04800044 	movi	r18,1
    7560:	00000206 	br	756c <__mdiff+0x90>
    7564:	903ff716 	blt	r18,zero,7544 <__mdiff+0x68>
    7568:	0025883a 	mov	r18,zero
    756c:	99400117 	ldw	r5,4(r19)
    7570:	0006b840 	call	6b84 <_Balloc>
    7574:	9a400417 	ldw	r9,16(r19)
    7578:	a2c00417 	ldw	r11,16(r20)
    757c:	12800504 	addi	r10,r2,20
    7580:	481090ba 	slli	r8,r9,2
    7584:	581690ba 	slli	r11,r11,2
    7588:	14800315 	stw	r18,12(r2)
    758c:	8211883a 	add	r8,r16,r8
    7590:	8ad7883a 	add	r11,r17,r11
    7594:	0007883a 	mov	r3,zero
    7598:	00000106 	br	75a0 <__mdiff+0xc4>
    759c:	3815883a 	mov	r10,r7
    75a0:	81000017 	ldw	r4,0(r16)
    75a4:	89800017 	ldw	r6,0(r17)
    75a8:	51c00104 	addi	r7,r10,4
    75ac:	217fffcc 	andi	r5,r4,65535
    75b0:	28cb883a 	add	r5,r5,r3
    75b4:	30ffffcc 	andi	r3,r6,65535
    75b8:	28cbc83a 	sub	r5,r5,r3
    75bc:	300cd43a 	srli	r6,r6,16
    75c0:	2006d43a 	srli	r3,r4,16
    75c4:	2809d43a 	srai	r4,r5,16
    75c8:	297fffcc 	andi	r5,r5,65535
    75cc:	1987c83a 	sub	r3,r3,r6
    75d0:	1907883a 	add	r3,r3,r4
    75d4:	1808943a 	slli	r4,r3,16
    75d8:	8c400104 	addi	r17,r17,4
    75dc:	84000104 	addi	r16,r16,4
    75e0:	214ab03a 	or	r5,r4,r5
    75e4:	397fff15 	stw	r5,-4(r7)
    75e8:	1807d43a 	srai	r3,r3,16
    75ec:	8affeb36 	bltu	r17,r11,759c <__mdiff+0xc0>
    75f0:	8200152e 	bgeu	r16,r8,7648 <__mdiff+0x16c>
    75f4:	3815883a 	mov	r10,r7
    75f8:	800d883a 	mov	r6,r16
    75fc:	31000017 	ldw	r4,0(r6)
    7600:	52800104 	addi	r10,r10,4
    7604:	31800104 	addi	r6,r6,4
    7608:	217fffcc 	andi	r5,r4,65535
    760c:	28cb883a 	add	r5,r5,r3
    7610:	2817d43a 	srai	r11,r5,16
    7614:	2006d43a 	srli	r3,r4,16
    7618:	293fffcc 	andi	r4,r5,65535
    761c:	1ac7883a 	add	r3,r3,r11
    7620:	180a943a 	slli	r5,r3,16
    7624:	1807d43a 	srai	r3,r3,16
    7628:	290ab03a 	or	r5,r5,r4
    762c:	517fff15 	stw	r5,-4(r10)
    7630:	323ff236 	bltu	r6,r8,75fc <__mdiff+0x120>
    7634:	42bfffc4 	addi	r10,r8,-1
    7638:	5415c83a 	sub	r10,r10,r16
    763c:	5014d0ba 	srli	r10,r10,2
    7640:	501490ba 	slli	r10,r10,2
    7644:	3a95883a 	add	r10,r7,r10
    7648:	2800041e 	bne	r5,zero,765c <__mdiff+0x180>
    764c:	52bfff04 	addi	r10,r10,-4
    7650:	50c00017 	ldw	r3,0(r10)
    7654:	4a7fffc4 	addi	r9,r9,-1
    7658:	183ffc26 	beq	r3,zero,764c <__mdiff+0x170>
    765c:	12400415 	stw	r9,16(r2)
    7660:	dfc00517 	ldw	ra,20(sp)
    7664:	dd000417 	ldw	r20,16(sp)
    7668:	dcc00317 	ldw	r19,12(sp)
    766c:	dc800217 	ldw	r18,8(sp)
    7670:	dc400117 	ldw	r17,4(sp)
    7674:	dc000017 	ldw	r16,0(sp)
    7678:	dec00604 	addi	sp,sp,24
    767c:	f800283a 	ret
    7680:	000b883a 	mov	r5,zero
    7684:	0006b840 	call	6b84 <_Balloc>
    7688:	00c00044 	movi	r3,1
    768c:	10c00415 	stw	r3,16(r2)
    7690:	10000515 	stw	zero,20(r2)
    7694:	003ff206 	br	7660 <__mdiff+0x184>

00007698 <__ulp>:
    7698:	295ffc2c 	andhi	r5,r5,32752
    769c:	00ff3034 	movhi	r3,64704
    76a0:	28c7883a 	add	r3,r5,r3
    76a4:	00c0020e 	bge	zero,r3,76b0 <__ulp+0x18>
    76a8:	0005883a 	mov	r2,zero
    76ac:	f800283a 	ret
    76b0:	00c7c83a 	sub	r3,zero,r3
    76b4:	1807d53a 	srai	r3,r3,20
    76b8:	18800508 	cmpgei	r2,r3,20
    76bc:	1000041e 	bne	r2,zero,76d0 <__ulp+0x38>
    76c0:	01400234 	movhi	r5,8
    76c4:	28c7d83a 	sra	r3,r5,r3
    76c8:	0005883a 	mov	r2,zero
    76cc:	f800283a 	ret
    76d0:	193ffb04 	addi	r4,r3,-20
    76d4:	208007c8 	cmpgei	r2,r4,31
    76d8:	0007883a 	mov	r3,zero
    76dc:	1000031e 	bne	r2,zero,76ec <__ulp+0x54>
    76e0:	00a00034 	movhi	r2,32768
    76e4:	1104d83a 	srl	r2,r2,r4
    76e8:	f800283a 	ret
    76ec:	00800044 	movi	r2,1
    76f0:	f800283a 	ret

000076f4 <__b2d>:
    76f4:	defffa04 	addi	sp,sp,-24
    76f8:	dc000015 	stw	r16,0(sp)
    76fc:	24000417 	ldw	r16,16(r4)
    7700:	dc800215 	stw	r18,8(sp)
    7704:	24800504 	addi	r18,r4,20
    7708:	802090ba 	slli	r16,r16,2
    770c:	dc400115 	stw	r17,4(sp)
    7710:	dd000415 	stw	r20,16(sp)
    7714:	9421883a 	add	r16,r18,r16
    7718:	847fff17 	ldw	r17,-4(r16)
    771c:	dcc00315 	stw	r19,12(sp)
    7720:	2829883a 	mov	r20,r5
    7724:	8809883a 	mov	r4,r17
    7728:	dfc00515 	stw	ra,20(sp)
    772c:	0006e980 	call	6e98 <__hi0bits>
    7730:	01000804 	movi	r4,32
    7734:	2087c83a 	sub	r3,r4,r2
    7738:	a0c00015 	stw	r3,0(r20)
    773c:	10c002c8 	cmpgei	r3,r2,11
    7740:	84ffff04 	addi	r19,r16,-4
    7744:	18001f26 	beq	r3,zero,77c4 <__b2d+0xd0>
    7748:	10fffd44 	addi	r3,r2,-11
    774c:	94c00e2e 	bgeu	r18,r19,7788 <__b2d+0x94>
    7750:	80bffe17 	ldw	r2,-8(r16)
    7754:	18001226 	beq	r3,zero,77a0 <__b2d+0xac>
    7758:	20c9c83a 	sub	r4,r4,r3
    775c:	110cd83a 	srl	r6,r2,r4
    7760:	88e2983a 	sll	r17,r17,r3
    7764:	10c4983a 	sll	r2,r2,r3
    7768:	817ffe04 	addi	r5,r16,-8
    776c:	8986b03a 	or	r3,r17,r6
    7770:	18cffc34 	orhi	r3,r3,16368
    7774:	91400b2e 	bgeu	r18,r5,77a4 <__b2d+0xb0>
    7778:	817ffd17 	ldw	r5,-12(r16)
    777c:	2908d83a 	srl	r4,r5,r4
    7780:	1104b03a 	or	r2,r2,r4
    7784:	00000706 	br	77a4 <__b2d+0xb0>
    7788:	18000426 	beq	r3,zero,779c <__b2d+0xa8>
    778c:	88c6983a 	sll	r3,r17,r3
    7790:	0005883a 	mov	r2,zero
    7794:	18cffc34 	orhi	r3,r3,16368
    7798:	00000206 	br	77a4 <__b2d+0xb0>
    779c:	0005883a 	mov	r2,zero
    77a0:	88cffc34 	orhi	r3,r17,16368
    77a4:	dfc00517 	ldw	ra,20(sp)
    77a8:	dd000417 	ldw	r20,16(sp)
    77ac:	dcc00317 	ldw	r19,12(sp)
    77b0:	dc800217 	ldw	r18,8(sp)
    77b4:	dc400117 	ldw	r17,4(sp)
    77b8:	dc000017 	ldw	r16,0(sp)
    77bc:	dec00604 	addi	sp,sp,24
    77c0:	f800283a 	ret
    77c4:	014002c4 	movi	r5,11
    77c8:	2889c83a 	sub	r4,r5,r2
    77cc:	8906d83a 	srl	r3,r17,r4
    77d0:	18cffc34 	orhi	r3,r3,16368
    77d4:	94c00536 	bltu	r18,r19,77ec <__b2d+0xf8>
    77d8:	000b883a 	mov	r5,zero
    77dc:	10800544 	addi	r2,r2,21
    77e0:	8884983a 	sll	r2,r17,r2
    77e4:	1144b03a 	or	r2,r2,r5
    77e8:	003fee06 	br	77a4 <__b2d+0xb0>
    77ec:	817ffe17 	ldw	r5,-8(r16)
    77f0:	290ad83a 	srl	r5,r5,r4
    77f4:	003ff906 	br	77dc <__b2d+0xe8>

000077f8 <__d2b>:
    77f8:	defff804 	addi	sp,sp,-32
    77fc:	dc400315 	stw	r17,12(sp)
    7800:	3023883a 	mov	r17,r6
    7804:	dd000615 	stw	r20,24(sp)
    7808:	dc000215 	stw	r16,8(sp)
    780c:	2829883a 	mov	r20,r5
    7810:	8820d53a 	srli	r16,r17,20
    7814:	01400044 	movi	r5,1
    7818:	dcc00515 	stw	r19,20(sp)
    781c:	dc800415 	stw	r18,16(sp)
    7820:	dfc00715 	stw	ra,28(sp)
    7824:	3825883a 	mov	r18,r7
    7828:	0006b840 	call	6b84 <_Balloc>
    782c:	01800434 	movhi	r6,16
    7830:	31bfffc4 	addi	r6,r6,-1
    7834:	8401ffcc 	andi	r16,r16,2047
    7838:	1027883a 	mov	r19,r2
    783c:	89a2703a 	and	r17,r17,r6
    7840:	80000126 	beq	r16,zero,7848 <__d2b+0x50>
    7844:	8c400434 	orhi	r17,r17,16
    7848:	dc400115 	stw	r17,4(sp)
    784c:	a0002826 	beq	r20,zero,78f0 <__d2b+0xf8>
    7850:	d809883a 	mov	r4,sp
    7854:	dd000015 	stw	r20,0(sp)
    7858:	0006efc0 	call	6efc <__lo0bits>
    785c:	d8c00117 	ldw	r3,4(sp)
    7860:	1000171e 	bne	r2,zero,78c0 <__d2b+0xc8>
    7864:	d9000017 	ldw	r4,0(sp)
    7868:	98c00615 	stw	r3,24(r19)
    786c:	99000515 	stw	r4,20(r19)
    7870:	18001d1e 	bne	r3,zero,78e8 <__d2b+0xf0>
    7874:	04400044 	movi	r17,1
    7878:	9c400415 	stw	r17,16(r19)
    787c:	80002526 	beq	r16,zero,7914 <__d2b+0x11c>
    7880:	00c00d44 	movi	r3,53
    7884:	843ef344 	addi	r16,r16,-1075
    7888:	80a1883a 	add	r16,r16,r2
    788c:	1885c83a 	sub	r2,r3,r2
    7890:	d8c00817 	ldw	r3,32(sp)
    7894:	94000015 	stw	r16,0(r18)
    7898:	18800015 	stw	r2,0(r3)
    789c:	9805883a 	mov	r2,r19
    78a0:	dfc00717 	ldw	ra,28(sp)
    78a4:	dd000617 	ldw	r20,24(sp)
    78a8:	dcc00517 	ldw	r19,20(sp)
    78ac:	dc800417 	ldw	r18,16(sp)
    78b0:	dc400317 	ldw	r17,12(sp)
    78b4:	dc000217 	ldw	r16,8(sp)
    78b8:	dec00804 	addi	sp,sp,32
    78bc:	f800283a 	ret
    78c0:	01000804 	movi	r4,32
    78c4:	2089c83a 	sub	r4,r4,r2
    78c8:	1908983a 	sll	r4,r3,r4
    78cc:	d9400017 	ldw	r5,0(sp)
    78d0:	1886d83a 	srl	r3,r3,r2
    78d4:	2148b03a 	or	r4,r4,r5
    78d8:	99000515 	stw	r4,20(r19)
    78dc:	d8c00115 	stw	r3,4(sp)
    78e0:	98c00615 	stw	r3,24(r19)
    78e4:	183fe326 	beq	r3,zero,7874 <__d2b+0x7c>
    78e8:	04400084 	movi	r17,2
    78ec:	003fe206 	br	7878 <__d2b+0x80>
    78f0:	d9000104 	addi	r4,sp,4
    78f4:	0006efc0 	call	6efc <__lo0bits>
    78f8:	00c00044 	movi	r3,1
    78fc:	98c00415 	stw	r3,16(r19)
    7900:	d8c00117 	ldw	r3,4(sp)
    7904:	10800804 	addi	r2,r2,32
    7908:	04400044 	movi	r17,1
    790c:	98c00515 	stw	r3,20(r19)
    7910:	803fdb1e 	bne	r16,zero,7880 <__d2b+0x88>
    7914:	880690ba 	slli	r3,r17,2
    7918:	10bef384 	addi	r2,r2,-1074
    791c:	8822917a 	slli	r17,r17,5
    7920:	98c7883a 	add	r3,r19,r3
    7924:	19000417 	ldw	r4,16(r3)
    7928:	90800015 	stw	r2,0(r18)
    792c:	0006e980 	call	6e98 <__hi0bits>
    7930:	88a3c83a 	sub	r17,r17,r2
    7934:	d8800817 	ldw	r2,32(sp)
    7938:	14400015 	stw	r17,0(r2)
    793c:	003fd706 	br	789c <__d2b+0xa4>

00007940 <__ratio>:
    7940:	defff904 	addi	sp,sp,-28
    7944:	dc400315 	stw	r17,12(sp)
    7948:	2823883a 	mov	r17,r5
    794c:	d80b883a 	mov	r5,sp
    7950:	dfc00615 	stw	ra,24(sp)
    7954:	dcc00515 	stw	r19,20(sp)
    7958:	dc800415 	stw	r18,16(sp)
    795c:	2027883a 	mov	r19,r4
    7960:	dc000215 	stw	r16,8(sp)
    7964:	00076f40 	call	76f4 <__b2d>
    7968:	d9400104 	addi	r5,sp,4
    796c:	8809883a 	mov	r4,r17
    7970:	1025883a 	mov	r18,r2
    7974:	1821883a 	mov	r16,r3
    7978:	00076f40 	call	76f4 <__b2d>
    797c:	89400417 	ldw	r5,16(r17)
    7980:	99000417 	ldw	r4,16(r19)
    7984:	d9800117 	ldw	r6,4(sp)
    7988:	2149c83a 	sub	r4,r4,r5
    798c:	d9400017 	ldw	r5,0(sp)
    7990:	2008917a 	slli	r4,r4,5
    7994:	298bc83a 	sub	r5,r5,r6
    7998:	2149883a 	add	r4,r4,r5
    799c:	01000e0e 	bge	zero,r4,79d8 <__ratio+0x98>
    79a0:	2008953a 	slli	r4,r4,20
    79a4:	2421883a 	add	r16,r4,r16
    79a8:	100d883a 	mov	r6,r2
    79ac:	180f883a 	mov	r7,r3
    79b0:	9009883a 	mov	r4,r18
    79b4:	800b883a 	mov	r5,r16
    79b8:	000b6000 	call	b600 <__divdf3>
    79bc:	dfc00617 	ldw	ra,24(sp)
    79c0:	dcc00517 	ldw	r19,20(sp)
    79c4:	dc800417 	ldw	r18,16(sp)
    79c8:	dc400317 	ldw	r17,12(sp)
    79cc:	dc000217 	ldw	r16,8(sp)
    79d0:	dec00704 	addi	sp,sp,28
    79d4:	f800283a 	ret
    79d8:	2008953a 	slli	r4,r4,20
    79dc:	1907c83a 	sub	r3,r3,r4
    79e0:	003ff106 	br	79a8 <__ratio+0x68>

000079e4 <_mprec_log10>:
    79e4:	defffe04 	addi	sp,sp,-8
    79e8:	dc000015 	stw	r16,0(sp)
    79ec:	dfc00115 	stw	ra,4(sp)
    79f0:	20800608 	cmpgei	r2,r4,24
    79f4:	2021883a 	mov	r16,r4
    79f8:	10000d26 	beq	r2,zero,7a30 <_mprec_log10+0x4c>
    79fc:	0005883a 	mov	r2,zero
    7a00:	00cffc34 	movhi	r3,16368
    7a04:	843fffc4 	addi	r16,r16,-1
    7a08:	000d883a 	mov	r6,zero
    7a0c:	01d00934 	movhi	r7,16420
    7a10:	1009883a 	mov	r4,r2
    7a14:	180b883a 	mov	r5,r3
    7a18:	000c1c40 	call	c1c4 <__muldf3>
    7a1c:	803ff91e 	bne	r16,zero,7a04 <_mprec_log10+0x20>
    7a20:	dfc00117 	ldw	ra,4(sp)
    7a24:	dc000017 	ldw	r16,0(sp)
    7a28:	dec00204 	addi	sp,sp,8
    7a2c:	f800283a 	ret
    7a30:	202090fa 	slli	r16,r4,3
    7a34:	00800074 	movhi	r2,1
    7a38:	10bfe304 	addi	r2,r2,-116
    7a3c:	1421883a 	add	r16,r2,r16
    7a40:	80800017 	ldw	r2,0(r16)
    7a44:	80c00117 	ldw	r3,4(r16)
    7a48:	dfc00117 	ldw	ra,4(sp)
    7a4c:	dc000017 	ldw	r16,0(sp)
    7a50:	dec00204 	addi	sp,sp,8
    7a54:	f800283a 	ret

00007a58 <__copybits>:
    7a58:	29ffffc4 	addi	r7,r5,-1
    7a5c:	380fd17a 	srai	r7,r7,5
    7a60:	31400417 	ldw	r5,16(r6)
    7a64:	30800504 	addi	r2,r6,20
    7a68:	39c00044 	addi	r7,r7,1
    7a6c:	280a90ba 	slli	r5,r5,2
    7a70:	380e90ba 	slli	r7,r7,2
    7a74:	114b883a 	add	r5,r2,r5
    7a78:	21cf883a 	add	r7,r4,r7
    7a7c:	11400c2e 	bgeu	r2,r5,7ab0 <__copybits+0x58>
    7a80:	2007883a 	mov	r3,r4
    7a84:	10800104 	addi	r2,r2,4
    7a88:	123fff17 	ldw	r8,-4(r2)
    7a8c:	18c00104 	addi	r3,r3,4
    7a90:	1a3fff15 	stw	r8,-4(r3)
    7a94:	117ffb36 	bltu	r2,r5,7a84 <__copybits+0x2c>
    7a98:	2985c83a 	sub	r2,r5,r6
    7a9c:	10bffac4 	addi	r2,r2,-21
    7aa0:	1004d0ba 	srli	r2,r2,2
    7aa4:	10800044 	addi	r2,r2,1
    7aa8:	100490ba 	slli	r2,r2,2
    7aac:	2089883a 	add	r4,r4,r2
    7ab0:	21c0032e 	bgeu	r4,r7,7ac0 <__copybits+0x68>
    7ab4:	21000104 	addi	r4,r4,4
    7ab8:	203fff15 	stw	zero,-4(r4)
    7abc:	21fffd36 	bltu	r4,r7,7ab4 <__copybits+0x5c>
    7ac0:	f800283a 	ret

00007ac4 <__any_on>:
    7ac4:	20800417 	ldw	r2,16(r4)
    7ac8:	280dd17a 	srai	r6,r5,5
    7acc:	21000504 	addi	r4,r4,20
    7ad0:	11800c0e 	bge	r2,r6,7b04 <__any_on+0x40>
    7ad4:	100690ba 	slli	r3,r2,2
    7ad8:	20c7883a 	add	r3,r4,r3
    7adc:	20c0142e 	bgeu	r4,r3,7b30 <__any_on+0x6c>
    7ae0:	18bfff17 	ldw	r2,-4(r3)
    7ae4:	18ffff04 	addi	r3,r3,-4
    7ae8:	1000041e 	bne	r2,zero,7afc <__any_on+0x38>
    7aec:	20c00f2e 	bgeu	r4,r3,7b2c <__any_on+0x68>
    7af0:	18ffff04 	addi	r3,r3,-4
    7af4:	19400017 	ldw	r5,0(r3)
    7af8:	283ffc26 	beq	r5,zero,7aec <__any_on+0x28>
    7afc:	00800044 	movi	r2,1
    7b00:	f800283a 	ret
    7b04:	300690ba 	slli	r3,r6,2
    7b08:	20c7883a 	add	r3,r4,r3
    7b0c:	30bff30e 	bge	r6,r2,7adc <__any_on+0x18>
    7b10:	294007cc 	andi	r5,r5,31
    7b14:	283ff126 	beq	r5,zero,7adc <__any_on+0x18>
    7b18:	19800017 	ldw	r6,0(r3)
    7b1c:	3144d83a 	srl	r2,r6,r5
    7b20:	114a983a 	sll	r5,r2,r5
    7b24:	317ff51e 	bne	r6,r5,7afc <__any_on+0x38>
    7b28:	003fec06 	br	7adc <__any_on+0x18>
    7b2c:	f800283a 	ret
    7b30:	0005883a 	mov	r2,zero
    7b34:	f800283a 	ret

00007b38 <_read_r>:
    7b38:	defffe04 	addi	sp,sp,-8
    7b3c:	2805883a 	mov	r2,r5
    7b40:	dc000015 	stw	r16,0(sp)
    7b44:	300b883a 	mov	r5,r6
    7b48:	2021883a 	mov	r16,r4
    7b4c:	380d883a 	mov	r6,r7
    7b50:	1009883a 	mov	r4,r2
    7b54:	00800074 	movhi	r2,1
    7b58:	dfc00115 	stw	ra,4(sp)
    7b5c:	100ea715 	stw	zero,15004(r2)
    7b60:	000dbcc0 	call	dbcc <read>
    7b64:	10ffffd8 	cmpnei	r3,r2,-1
    7b68:	18000426 	beq	r3,zero,7b7c <_read_r+0x44>
    7b6c:	dfc00117 	ldw	ra,4(sp)
    7b70:	dc000017 	ldw	r16,0(sp)
    7b74:	dec00204 	addi	sp,sp,8
    7b78:	f800283a 	ret
    7b7c:	00c00074 	movhi	r3,1
    7b80:	18cea717 	ldw	r3,15004(r3)
    7b84:	183ff926 	beq	r3,zero,7b6c <_read_r+0x34>
    7b88:	80c00015 	stw	r3,0(r16)
    7b8c:	dfc00117 	ldw	ra,4(sp)
    7b90:	dc000017 	ldw	r16,0(sp)
    7b94:	dec00204 	addi	sp,sp,8
    7b98:	f800283a 	ret

00007b9c <_realloc_r>:
    7b9c:	defff504 	addi	sp,sp,-44
    7ba0:	dcc00415 	stw	r19,16(sp)
    7ba4:	dfc00a15 	stw	ra,40(sp)
    7ba8:	df000915 	stw	fp,36(sp)
    7bac:	ddc00815 	stw	r23,32(sp)
    7bb0:	dd800715 	stw	r22,28(sp)
    7bb4:	dd400615 	stw	r21,24(sp)
    7bb8:	dd000515 	stw	r20,20(sp)
    7bbc:	dc800315 	stw	r18,12(sp)
    7bc0:	dc400215 	stw	r17,8(sp)
    7bc4:	dc000115 	stw	r16,4(sp)
    7bc8:	3027883a 	mov	r19,r6
    7bcc:	28008b26 	beq	r5,zero,7dfc <_realloc_r+0x260>
    7bd0:	282d883a 	mov	r22,r5
    7bd4:	202b883a 	mov	r21,r4
    7bd8:	9c0002c4 	addi	r16,r19,11
    7bdc:	000db480 	call	db48 <__malloc_lock>
    7be0:	808005f0 	cmpltui	r2,r16,23
    7be4:	1000521e 	bne	r2,zero,7d30 <_realloc_r+0x194>
    7be8:	017ffe04 	movi	r5,-8
    7bec:	8160703a 	and	r16,r16,r5
    7bf0:	8007883a 	mov	r3,r16
    7bf4:	80005116 	blt	r16,zero,7d3c <_realloc_r+0x1a0>
    7bf8:	84c05036 	bltu	r16,r19,7d3c <_realloc_r+0x1a0>
    7bfc:	b0bfff17 	ldw	r2,-4(r22)
    7c00:	017fff04 	movi	r5,-4
    7c04:	b4bffe04 	addi	r18,r22,-8
    7c08:	1162703a 	and	r17,r2,r5
    7c0c:	9469883a 	add	r20,r18,r17
    7c10:	88c0390e 	bge	r17,r3,7cf8 <_realloc_r+0x15c>
    7c14:	07000074 	movhi	fp,1
    7c18:	e7019704 	addi	fp,fp,1628
    7c1c:	e2000217 	ldw	r8,8(fp)
    7c20:	a1000117 	ldw	r4,4(r20)
    7c24:	45008e26 	beq	r8,r20,7e60 <_realloc_r+0x2c4>
    7c28:	01bfff84 	movi	r6,-2
    7c2c:	218c703a 	and	r6,r4,r6
    7c30:	a18d883a 	add	r6,r20,r6
    7c34:	31800117 	ldw	r6,4(r6)
    7c38:	3180004c 	andi	r6,r6,1
    7c3c:	30004f1e 	bne	r6,zero,7d7c <_realloc_r+0x1e0>
    7c40:	2148703a 	and	r4,r4,r5
    7c44:	890b883a 	add	r5,r17,r4
    7c48:	28c0cb0e 	bge	r5,r3,7f78 <_realloc_r+0x3dc>
    7c4c:	1080004c 	andi	r2,r2,1
    7c50:	10004c1e 	bne	r2,zero,7d84 <_realloc_r+0x1e8>
    7c54:	b1fffe17 	ldw	r7,-8(r22)
    7c58:	00bfff04 	movi	r2,-4
    7c5c:	91cfc83a 	sub	r7,r18,r7
    7c60:	39400117 	ldw	r5,4(r7)
    7c64:	288a703a 	and	r5,r5,r2
    7c68:	a0000426 	beq	r20,zero,7c7c <_realloc_r+0xe0>
    7c6c:	896f883a 	add	r23,r17,r5
    7c70:	b92f883a 	add	r23,r23,r4
    7c74:	4500cb26 	beq	r8,r20,7fa4 <_realloc_r+0x408>
    7c78:	b8c0930e 	bge	r23,r3,7ec8 <_realloc_r+0x32c>
    7c7c:	38004126 	beq	r7,zero,7d84 <_realloc_r+0x1e8>
    7c80:	896f883a 	add	r23,r17,r5
    7c84:	b8c03f16 	blt	r23,r3,7d84 <_realloc_r+0x1e8>
    7c88:	38c00217 	ldw	r3,8(r7)
    7c8c:	38800317 	ldw	r2,12(r7)
    7c90:	89bfff04 	addi	r6,r17,-4
    7c94:	31000968 	cmpgeui	r4,r6,37
    7c98:	18800315 	stw	r2,12(r3)
    7c9c:	10c00215 	stw	r3,8(r2)
    7ca0:	3de9883a 	add	r20,r7,r23
    7ca4:	38c00204 	addi	r3,r7,8
    7ca8:	2000f81e 	bne	r4,zero,808c <_realloc_r+0x4f0>
    7cac:	30800530 	cmpltui	r2,r6,20
    7cb0:	b1000017 	ldw	r4,0(r22)
    7cb4:	1000eb1e 	bne	r2,zero,8064 <_realloc_r+0x4c8>
    7cb8:	39000215 	stw	r4,8(r7)
    7cbc:	b1000117 	ldw	r4,4(r22)
    7cc0:	30800728 	cmpgeui	r2,r6,28
    7cc4:	39000315 	stw	r4,12(r7)
    7cc8:	1001041e 	bne	r2,zero,80dc <_realloc_r+0x540>
    7ccc:	b1000217 	ldw	r4,8(r22)
    7cd0:	38800404 	addi	r2,r7,16
    7cd4:	b5800204 	addi	r22,r22,8
    7cd8:	11000015 	stw	r4,0(r2)
    7cdc:	b1000117 	ldw	r4,4(r22)
    7ce0:	b823883a 	mov	r17,r23
    7ce4:	3825883a 	mov	r18,r7
    7ce8:	11000115 	stw	r4,4(r2)
    7cec:	b1000217 	ldw	r4,8(r22)
    7cf0:	182d883a 	mov	r22,r3
    7cf4:	11000215 	stw	r4,8(r2)
    7cf8:	91800117 	ldw	r6,4(r18)
    7cfc:	8c05c83a 	sub	r2,r17,r16
    7d00:	10c00430 	cmpltui	r3,r2,16
    7d04:	3180004c 	andi	r6,r6,1
    7d08:	18004926 	beq	r3,zero,7e30 <_realloc_r+0x294>
    7d0c:	898cb03a 	or	r6,r17,r6
    7d10:	91800115 	stw	r6,4(r18)
    7d14:	a0800117 	ldw	r2,4(r20)
    7d18:	10800054 	ori	r2,r2,1
    7d1c:	a0800115 	stw	r2,4(r20)
    7d20:	a809883a 	mov	r4,r21
    7d24:	000db6c0 	call	db6c <__malloc_unlock>
    7d28:	b027883a 	mov	r19,r22
    7d2c:	00000606 	br	7d48 <_realloc_r+0x1ac>
    7d30:	04000404 	movi	r16,16
    7d34:	00c00404 	movi	r3,16
    7d38:	84ffb02e 	bgeu	r16,r19,7bfc <_realloc_r+0x60>
    7d3c:	00800304 	movi	r2,12
    7d40:	a8800015 	stw	r2,0(r21)
    7d44:	0027883a 	mov	r19,zero
    7d48:	9805883a 	mov	r2,r19
    7d4c:	dfc00a17 	ldw	ra,40(sp)
    7d50:	df000917 	ldw	fp,36(sp)
    7d54:	ddc00817 	ldw	r23,32(sp)
    7d58:	dd800717 	ldw	r22,28(sp)
    7d5c:	dd400617 	ldw	r21,24(sp)
    7d60:	dd000517 	ldw	r20,20(sp)
    7d64:	dcc00417 	ldw	r19,16(sp)
    7d68:	dc800317 	ldw	r18,12(sp)
    7d6c:	dc400217 	ldw	r17,8(sp)
    7d70:	dc000117 	ldw	r16,4(sp)
    7d74:	dec00b04 	addi	sp,sp,44
    7d78:	f800283a 	ret
    7d7c:	1080004c 	andi	r2,r2,1
    7d80:	10007826 	beq	r2,zero,7f64 <_realloc_r+0x3c8>
    7d84:	980b883a 	mov	r5,r19
    7d88:	a809883a 	mov	r4,r21
    7d8c:	0000b4c0 	call	b4c <_malloc_r>
    7d90:	1027883a 	mov	r19,r2
    7d94:	10001626 	beq	r2,zero,7df0 <_realloc_r+0x254>
    7d98:	b0bfff17 	ldw	r2,-4(r22)
    7d9c:	013fff84 	movi	r4,-2
    7da0:	98fffe04 	addi	r3,r19,-8
    7da4:	1104703a 	and	r2,r2,r4
    7da8:	9085883a 	add	r2,r18,r2
    7dac:	10c06726 	beq	r2,r3,7f4c <_realloc_r+0x3b0>
    7db0:	89bfff04 	addi	r6,r17,-4
    7db4:	30800968 	cmpgeui	r2,r6,37
    7db8:	1000761e 	bne	r2,zero,7f94 <_realloc_r+0x3f8>
    7dbc:	30800530 	cmpltui	r2,r6,20
    7dc0:	b1000017 	ldw	r4,0(r22)
    7dc4:	10003726 	beq	r2,zero,7ea4 <_realloc_r+0x308>
    7dc8:	9805883a 	mov	r2,r19
    7dcc:	b007883a 	mov	r3,r22
    7dd0:	11000015 	stw	r4,0(r2)
    7dd4:	19000117 	ldw	r4,4(r3)
    7dd8:	11000115 	stw	r4,4(r2)
    7ddc:	18c00217 	ldw	r3,8(r3)
    7de0:	10c00215 	stw	r3,8(r2)
    7de4:	b00b883a 	mov	r5,r22
    7de8:	a809883a 	mov	r4,r21
    7dec:	00060300 	call	6030 <_free_r>
    7df0:	a809883a 	mov	r4,r21
    7df4:	000db6c0 	call	db6c <__malloc_unlock>
    7df8:	003fd306 	br	7d48 <_realloc_r+0x1ac>
    7dfc:	300b883a 	mov	r5,r6
    7e00:	dfc00a17 	ldw	ra,40(sp)
    7e04:	df000917 	ldw	fp,36(sp)
    7e08:	ddc00817 	ldw	r23,32(sp)
    7e0c:	dd800717 	ldw	r22,28(sp)
    7e10:	dd400617 	ldw	r21,24(sp)
    7e14:	dd000517 	ldw	r20,20(sp)
    7e18:	dcc00417 	ldw	r19,16(sp)
    7e1c:	dc800317 	ldw	r18,12(sp)
    7e20:	dc400217 	ldw	r17,8(sp)
    7e24:	dc000117 	ldw	r16,4(sp)
    7e28:	dec00b04 	addi	sp,sp,44
    7e2c:	0000b4c1 	jmpi	b4c <_malloc_r>
    7e30:	340cb03a 	or	r6,r6,r16
    7e34:	91800115 	stw	r6,4(r18)
    7e38:	940b883a 	add	r5,r18,r16
    7e3c:	10800054 	ori	r2,r2,1
    7e40:	28800115 	stw	r2,4(r5)
    7e44:	a0800117 	ldw	r2,4(r20)
    7e48:	29400204 	addi	r5,r5,8
    7e4c:	a809883a 	mov	r4,r21
    7e50:	10800054 	ori	r2,r2,1
    7e54:	a0800115 	stw	r2,4(r20)
    7e58:	00060300 	call	6030 <_free_r>
    7e5c:	003fb006 	br	7d20 <_realloc_r+0x184>
    7e60:	2148703a 	and	r4,r4,r5
    7e64:	890b883a 	add	r5,r17,r4
    7e68:	81800404 	addi	r6,r16,16
    7e6c:	29bf7716 	blt	r5,r6,7c4c <_realloc_r+0xb0>
    7e70:	9425883a 	add	r18,r18,r16
    7e74:	2c05c83a 	sub	r2,r5,r16
    7e78:	e4800215 	stw	r18,8(fp)
    7e7c:	10800054 	ori	r2,r2,1
    7e80:	90800115 	stw	r2,4(r18)
    7e84:	b0bfff17 	ldw	r2,-4(r22)
    7e88:	a809883a 	mov	r4,r21
    7e8c:	b027883a 	mov	r19,r22
    7e90:	1080004c 	andi	r2,r2,1
    7e94:	1420b03a 	or	r16,r2,r16
    7e98:	b43fff15 	stw	r16,-4(r22)
    7e9c:	000db6c0 	call	db6c <__malloc_unlock>
    7ea0:	003fa906 	br	7d48 <_realloc_r+0x1ac>
    7ea4:	99000015 	stw	r4,0(r19)
    7ea8:	b0c00117 	ldw	r3,4(r22)
    7eac:	30800728 	cmpgeui	r2,r6,28
    7eb0:	98c00115 	stw	r3,4(r19)
    7eb4:	1000611e 	bne	r2,zero,803c <_realloc_r+0x4a0>
    7eb8:	b0c00204 	addi	r3,r22,8
    7ebc:	98800204 	addi	r2,r19,8
    7ec0:	b1000217 	ldw	r4,8(r22)
    7ec4:	003fc206 	br	7dd0 <_realloc_r+0x234>
    7ec8:	a0800317 	ldw	r2,12(r20)
    7ecc:	a0c00217 	ldw	r3,8(r20)
    7ed0:	89bfff04 	addi	r6,r17,-4
    7ed4:	31000968 	cmpgeui	r4,r6,37
    7ed8:	18800315 	stw	r2,12(r3)
    7edc:	10c00215 	stw	r3,8(r2)
    7ee0:	38c00217 	ldw	r3,8(r7)
    7ee4:	38800317 	ldw	r2,12(r7)
    7ee8:	3a000204 	addi	r8,r7,8
    7eec:	3de9883a 	add	r20,r7,r23
    7ef0:	18800315 	stw	r2,12(r3)
    7ef4:	10c00215 	stw	r3,8(r2)
    7ef8:	20006f1e 	bne	r4,zero,80b8 <_realloc_r+0x51c>
    7efc:	30800530 	cmpltui	r2,r6,20
    7f00:	b0c00017 	ldw	r3,0(r22)
    7f04:	10006a1e 	bne	r2,zero,80b0 <_realloc_r+0x514>
    7f08:	38c00215 	stw	r3,8(r7)
    7f0c:	b0c00117 	ldw	r3,4(r22)
    7f10:	30800728 	cmpgeui	r2,r6,28
    7f14:	38c00315 	stw	r3,12(r7)
    7f18:	10007a1e 	bne	r2,zero,8104 <_realloc_r+0x568>
    7f1c:	b0c00217 	ldw	r3,8(r22)
    7f20:	38800404 	addi	r2,r7,16
    7f24:	b5800204 	addi	r22,r22,8
    7f28:	10c00015 	stw	r3,0(r2)
    7f2c:	b0c00117 	ldw	r3,4(r22)
    7f30:	b823883a 	mov	r17,r23
    7f34:	3825883a 	mov	r18,r7
    7f38:	10c00115 	stw	r3,4(r2)
    7f3c:	b0c00217 	ldw	r3,8(r22)
    7f40:	402d883a 	mov	r22,r8
    7f44:	10c00215 	stw	r3,8(r2)
    7f48:	003f6b06 	br	7cf8 <_realloc_r+0x15c>
    7f4c:	98bfff17 	ldw	r2,-4(r19)
    7f50:	00ffff04 	movi	r3,-4
    7f54:	10c4703a 	and	r2,r2,r3
    7f58:	88a3883a 	add	r17,r17,r2
    7f5c:	9469883a 	add	r20,r18,r17
    7f60:	003f6506 	br	7cf8 <_realloc_r+0x15c>
    7f64:	b1fffe17 	ldw	r7,-8(r22)
    7f68:	91cfc83a 	sub	r7,r18,r7
    7f6c:	39000117 	ldw	r4,4(r7)
    7f70:	214a703a 	and	r5,r4,r5
    7f74:	003f4106 	br	7c7c <_realloc_r+0xe0>
    7f78:	a0800317 	ldw	r2,12(r20)
    7f7c:	a0c00217 	ldw	r3,8(r20)
    7f80:	2823883a 	mov	r17,r5
    7f84:	9169883a 	add	r20,r18,r5
    7f88:	18800315 	stw	r2,12(r3)
    7f8c:	10c00215 	stw	r3,8(r2)
    7f90:	003f5906 	br	7cf8 <_realloc_r+0x15c>
    7f94:	b00b883a 	mov	r5,r22
    7f98:	9809883a 	mov	r4,r19
    7f9c:	0006a580 	call	6a58 <memmove>
    7fa0:	003f9006 	br	7de4 <_realloc_r+0x248>
    7fa4:	80800404 	addi	r2,r16,16
    7fa8:	b8bf3416 	blt	r23,r2,7c7c <_realloc_r+0xe0>
    7fac:	38800317 	ldw	r2,12(r7)
    7fb0:	38c00217 	ldw	r3,8(r7)
    7fb4:	89bfff04 	addi	r6,r17,-4
    7fb8:	31000968 	cmpgeui	r4,r6,37
    7fbc:	18800315 	stw	r2,12(r3)
    7fc0:	10c00215 	stw	r3,8(r2)
    7fc4:	3cc00204 	addi	r19,r7,8
    7fc8:	20005a1e 	bne	r4,zero,8134 <_realloc_r+0x598>
    7fcc:	30800530 	cmpltui	r2,r6,20
    7fd0:	b0c00017 	ldw	r3,0(r22)
    7fd4:	1000551e 	bne	r2,zero,812c <_realloc_r+0x590>
    7fd8:	38c00215 	stw	r3,8(r7)
    7fdc:	b0c00117 	ldw	r3,4(r22)
    7fe0:	30800728 	cmpgeui	r2,r6,28
    7fe4:	38c00315 	stw	r3,12(r7)
    7fe8:	1000661e 	bne	r2,zero,8184 <_realloc_r+0x5e8>
    7fec:	b0c00217 	ldw	r3,8(r22)
    7ff0:	38800404 	addi	r2,r7,16
    7ff4:	b5800204 	addi	r22,r22,8
    7ff8:	10c00015 	stw	r3,0(r2)
    7ffc:	b0c00117 	ldw	r3,4(r22)
    8000:	10c00115 	stw	r3,4(r2)
    8004:	b0c00217 	ldw	r3,8(r22)
    8008:	10c00215 	stw	r3,8(r2)
    800c:	3c07883a 	add	r3,r7,r16
    8010:	bc05c83a 	sub	r2,r23,r16
    8014:	e0c00215 	stw	r3,8(fp)
    8018:	10800054 	ori	r2,r2,1
    801c:	18800115 	stw	r2,4(r3)
    8020:	38800117 	ldw	r2,4(r7)
    8024:	a809883a 	mov	r4,r21
    8028:	1080004c 	andi	r2,r2,1
    802c:	1420b03a 	or	r16,r2,r16
    8030:	3c000115 	stw	r16,4(r7)
    8034:	000db6c0 	call	db6c <__malloc_unlock>
    8038:	003f4306 	br	7d48 <_realloc_r+0x1ac>
    803c:	b0800217 	ldw	r2,8(r22)
    8040:	31800920 	cmpeqi	r6,r6,36
    8044:	98800215 	stw	r2,8(r19)
    8048:	b0800317 	ldw	r2,12(r22)
    804c:	98800315 	stw	r2,12(r19)
    8050:	3000061e 	bne	r6,zero,806c <_realloc_r+0x4d0>
    8054:	b0c00404 	addi	r3,r22,16
    8058:	98800404 	addi	r2,r19,16
    805c:	b1000417 	ldw	r4,16(r22)
    8060:	003f5b06 	br	7dd0 <_realloc_r+0x234>
    8064:	1805883a 	mov	r2,r3
    8068:	003f1b06 	br	7cd8 <_realloc_r+0x13c>
    806c:	b1000417 	ldw	r4,16(r22)
    8070:	b0c00604 	addi	r3,r22,24
    8074:	98800604 	addi	r2,r19,24
    8078:	99000415 	stw	r4,16(r19)
    807c:	b1000517 	ldw	r4,20(r22)
    8080:	99000515 	stw	r4,20(r19)
    8084:	b1000617 	ldw	r4,24(r22)
    8088:	003f5106 	br	7dd0 <_realloc_r+0x234>
    808c:	b00b883a 	mov	r5,r22
    8090:	1809883a 	mov	r4,r3
    8094:	d9c00015 	stw	r7,0(sp)
    8098:	0006a580 	call	6a58 <memmove>
    809c:	d9c00017 	ldw	r7,0(sp)
    80a0:	102d883a 	mov	r22,r2
    80a4:	b823883a 	mov	r17,r23
    80a8:	3825883a 	mov	r18,r7
    80ac:	003f1206 	br	7cf8 <_realloc_r+0x15c>
    80b0:	4005883a 	mov	r2,r8
    80b4:	003f9c06 	br	7f28 <_realloc_r+0x38c>
    80b8:	b00b883a 	mov	r5,r22
    80bc:	4009883a 	mov	r4,r8
    80c0:	d9c00015 	stw	r7,0(sp)
    80c4:	0006a580 	call	6a58 <memmove>
    80c8:	d9c00017 	ldw	r7,0(sp)
    80cc:	102d883a 	mov	r22,r2
    80d0:	b823883a 	mov	r17,r23
    80d4:	3825883a 	mov	r18,r7
    80d8:	003f0706 	br	7cf8 <_realloc_r+0x15c>
    80dc:	b0800217 	ldw	r2,8(r22)
    80e0:	31800920 	cmpeqi	r6,r6,36
    80e4:	38800415 	stw	r2,16(r7)
    80e8:	b0800317 	ldw	r2,12(r22)
    80ec:	38800515 	stw	r2,20(r7)
    80f0:	b1000417 	ldw	r4,16(r22)
    80f4:	3000151e 	bne	r6,zero,814c <_realloc_r+0x5b0>
    80f8:	38800604 	addi	r2,r7,24
    80fc:	b5800404 	addi	r22,r22,16
    8100:	003ef506 	br	7cd8 <_realloc_r+0x13c>
    8104:	b0800217 	ldw	r2,8(r22)
    8108:	31800920 	cmpeqi	r6,r6,36
    810c:	38800415 	stw	r2,16(r7)
    8110:	b0800317 	ldw	r2,12(r22)
    8114:	38800515 	stw	r2,20(r7)
    8118:	b0c00417 	ldw	r3,16(r22)
    811c:	3000121e 	bne	r6,zero,8168 <_realloc_r+0x5cc>
    8120:	38800604 	addi	r2,r7,24
    8124:	b5800404 	addi	r22,r22,16
    8128:	003f7f06 	br	7f28 <_realloc_r+0x38c>
    812c:	9805883a 	mov	r2,r19
    8130:	003fb106 	br	7ff8 <_realloc_r+0x45c>
    8134:	b00b883a 	mov	r5,r22
    8138:	9809883a 	mov	r4,r19
    813c:	d9c00015 	stw	r7,0(sp)
    8140:	0006a580 	call	6a58 <memmove>
    8144:	d9c00017 	ldw	r7,0(sp)
    8148:	003fb006 	br	800c <_realloc_r+0x470>
    814c:	b5800604 	addi	r22,r22,24
    8150:	39000615 	stw	r4,24(r7)
    8154:	b13fff17 	ldw	r4,-4(r22)
    8158:	38800804 	addi	r2,r7,32
    815c:	39000715 	stw	r4,28(r7)
    8160:	b1000017 	ldw	r4,0(r22)
    8164:	003edc06 	br	7cd8 <_realloc_r+0x13c>
    8168:	b5800604 	addi	r22,r22,24
    816c:	38c00615 	stw	r3,24(r7)
    8170:	b0ffff17 	ldw	r3,-4(r22)
    8174:	38800804 	addi	r2,r7,32
    8178:	38c00715 	stw	r3,28(r7)
    817c:	b0c00017 	ldw	r3,0(r22)
    8180:	003f6906 	br	7f28 <_realloc_r+0x38c>
    8184:	b0800217 	ldw	r2,8(r22)
    8188:	31800920 	cmpeqi	r6,r6,36
    818c:	38800415 	stw	r2,16(r7)
    8190:	b0800317 	ldw	r2,12(r22)
    8194:	38800515 	stw	r2,20(r7)
    8198:	b0c00417 	ldw	r3,16(r22)
    819c:	3000031e 	bne	r6,zero,81ac <_realloc_r+0x610>
    81a0:	38800604 	addi	r2,r7,24
    81a4:	b5800404 	addi	r22,r22,16
    81a8:	003f9306 	br	7ff8 <_realloc_r+0x45c>
    81ac:	b5800604 	addi	r22,r22,24
    81b0:	38c00615 	stw	r3,24(r7)
    81b4:	b0ffff17 	ldw	r3,-4(r22)
    81b8:	38800804 	addi	r2,r7,32
    81bc:	38c00715 	stw	r3,28(r7)
    81c0:	b0c00017 	ldw	r3,0(r22)
    81c4:	003f8c06 	br	7ff8 <_realloc_r+0x45c>

000081c8 <__sprint_r.part.0>:
    81c8:	28801917 	ldw	r2,100(r5)
    81cc:	defff604 	addi	sp,sp,-40
    81d0:	dd000415 	stw	r20,16(sp)
    81d4:	dfc00915 	stw	ra,36(sp)
    81d8:	df000815 	stw	fp,32(sp)
    81dc:	ddc00715 	stw	r23,28(sp)
    81e0:	dd800615 	stw	r22,24(sp)
    81e4:	dd400515 	stw	r21,20(sp)
    81e8:	dcc00315 	stw	r19,12(sp)
    81ec:	dc800215 	stw	r18,8(sp)
    81f0:	dc400115 	stw	r17,4(sp)
    81f4:	dc000015 	stw	r16,0(sp)
    81f8:	1088000c 	andi	r2,r2,8192
    81fc:	3029883a 	mov	r20,r6
    8200:	10002c26 	beq	r2,zero,82b4 <__sprint_r.part.0+0xec>
    8204:	30800217 	ldw	r2,8(r6)
    8208:	2823883a 	mov	r17,r5
    820c:	2027883a 	mov	r19,r4
    8210:	35400017 	ldw	r21,0(r6)
    8214:	05ffff04 	movi	r23,-4
    8218:	10002426 	beq	r2,zero,82ac <__sprint_r.part.0+0xe4>
    821c:	ad800117 	ldw	r22,4(r21)
    8220:	ac000017 	ldw	r16,0(r21)
    8224:	b024d0ba 	srli	r18,r22,2
    8228:	90001b26 	beq	r18,zero,8298 <__sprint_r.part.0+0xd0>
    822c:	0039883a 	mov	fp,zero
    8230:	00000206 	br	823c <__sprint_r.part.0+0x74>
    8234:	84000104 	addi	r16,r16,4
    8238:	97001626 	beq	r18,fp,8294 <__sprint_r.part.0+0xcc>
    823c:	81400017 	ldw	r5,0(r16)
    8240:	880d883a 	mov	r6,r17
    8244:	9809883a 	mov	r4,r19
    8248:	00099040 	call	9904 <_fputwc_r>
    824c:	10bfffe0 	cmpeqi	r2,r2,-1
    8250:	e7000044 	addi	fp,fp,1
    8254:	103ff726 	beq	r2,zero,8234 <__sprint_r.part.0+0x6c>
    8258:	00bfffc4 	movi	r2,-1
    825c:	a0000215 	stw	zero,8(r20)
    8260:	a0000115 	stw	zero,4(r20)
    8264:	dfc00917 	ldw	ra,36(sp)
    8268:	df000817 	ldw	fp,32(sp)
    826c:	ddc00717 	ldw	r23,28(sp)
    8270:	dd800617 	ldw	r22,24(sp)
    8274:	dd400517 	ldw	r21,20(sp)
    8278:	dd000417 	ldw	r20,16(sp)
    827c:	dcc00317 	ldw	r19,12(sp)
    8280:	dc800217 	ldw	r18,8(sp)
    8284:	dc400117 	ldw	r17,4(sp)
    8288:	dc000017 	ldw	r16,0(sp)
    828c:	dec00a04 	addi	sp,sp,40
    8290:	f800283a 	ret
    8294:	a0800217 	ldw	r2,8(r20)
    8298:	b5ec703a 	and	r22,r22,r23
    829c:	1585c83a 	sub	r2,r2,r22
    82a0:	a0800215 	stw	r2,8(r20)
    82a4:	ad400204 	addi	r21,r21,8
    82a8:	103fdc1e 	bne	r2,zero,821c <__sprint_r.part.0+0x54>
    82ac:	0005883a 	mov	r2,zero
    82b0:	003fea06 	br	825c <__sprint_r.part.0+0x94>
    82b4:	000632c0 	call	632c <__sfvwrite_r>
    82b8:	003fe806 	br	825c <__sprint_r.part.0+0x94>

000082bc <__sprint_r>:
    82bc:	30c00217 	ldw	r3,8(r6)
    82c0:	18000126 	beq	r3,zero,82c8 <__sprint_r+0xc>
    82c4:	00081c81 	jmpi	81c8 <__sprint_r.part.0>
    82c8:	30000115 	stw	zero,4(r6)
    82cc:	0005883a 	mov	r2,zero
    82d0:	f800283a 	ret

000082d4 <___vfiprintf_internal_r>:
    82d4:	deffd004 	addi	sp,sp,-192
    82d8:	df002e15 	stw	fp,184(sp)
    82dc:	dcc02915 	stw	r19,164(sp)
    82e0:	dc802815 	stw	r18,160(sp)
    82e4:	dfc02f15 	stw	ra,188(sp)
    82e8:	ddc02d15 	stw	r23,180(sp)
    82ec:	dd802c15 	stw	r22,176(sp)
    82f0:	dd402b15 	stw	r21,172(sp)
    82f4:	dd002a15 	stw	r20,168(sp)
    82f8:	dc402715 	stw	r17,156(sp)
    82fc:	dc002615 	stw	r16,152(sp)
    8300:	d9c00315 	stw	r7,12(sp)
    8304:	2027883a 	mov	r19,r4
    8308:	2825883a 	mov	r18,r5
    830c:	3039883a 	mov	fp,r6
    8310:	20000226 	beq	r4,zero,831c <___vfiprintf_internal_r+0x48>
    8314:	20800e17 	ldw	r2,56(r4)
    8318:	1002ba26 	beq	r2,zero,8e04 <___vfiprintf_internal_r+0xb30>
    831c:	9080030b 	ldhu	r2,12(r18)
    8320:	10c8000c 	andi	r3,r2,8192
    8324:	1800061e 	bne	r3,zero,8340 <___vfiprintf_internal_r+0x6c>
    8328:	90c01917 	ldw	r3,100(r18)
    832c:	0137ffc4 	movi	r4,-8193
    8330:	10880014 	ori	r2,r2,8192
    8334:	1906703a 	and	r3,r3,r4
    8338:	9080030d 	sth	r2,12(r18)
    833c:	90c01915 	stw	r3,100(r18)
    8340:	10c0020c 	andi	r3,r2,8
    8344:	18009426 	beq	r3,zero,8598 <___vfiprintf_internal_r+0x2c4>
    8348:	90c00417 	ldw	r3,16(r18)
    834c:	18009226 	beq	r3,zero,8598 <___vfiprintf_internal_r+0x2c4>
    8350:	1080068c 	andi	r2,r2,26
    8354:	10800298 	cmpnei	r2,r2,10
    8358:	10009726 	beq	r2,zero,85b8 <___vfiprintf_internal_r+0x2e4>
    835c:	dc401604 	addi	r17,sp,88
    8360:	dc400915 	stw	r17,36(sp)
    8364:	d8000b15 	stw	zero,44(sp)
    8368:	d8000a15 	stw	zero,40(sp)
    836c:	8811883a 	mov	r8,r17
    8370:	d8000415 	stw	zero,16(sp)
    8374:	d8000015 	stw	zero,0(sp)
    8378:	e0800007 	ldb	r2,0(fp)
    837c:	1000a226 	beq	r2,zero,8608 <___vfiprintf_internal_r+0x334>
    8380:	10800960 	cmpeqi	r2,r2,37
    8384:	1003eb1e 	bne	r2,zero,9334 <___vfiprintf_internal_r+0x1060>
    8388:	e021883a 	mov	r16,fp
    838c:	00000206 	br	8398 <___vfiprintf_internal_r+0xc4>
    8390:	18009226 	beq	r3,zero,85dc <___vfiprintf_internal_r+0x308>
    8394:	a021883a 	mov	r16,r20
    8398:	80800047 	ldb	r2,1(r16)
    839c:	85000044 	addi	r20,r16,1
    83a0:	10c00958 	cmpnei	r3,r2,37
    83a4:	103ffa1e 	bne	r2,zero,8390 <___vfiprintf_internal_r+0xbc>
    83a8:	a72bc83a 	sub	r21,r20,fp
    83ac:	a8009626 	beq	r21,zero,8608 <___vfiprintf_internal_r+0x334>
    83b0:	d8c00b17 	ldw	r3,44(sp)
    83b4:	d8800a17 	ldw	r2,40(sp)
    83b8:	47000015 	stw	fp,0(r8)
    83bc:	a8c7883a 	add	r3,r21,r3
    83c0:	10800044 	addi	r2,r2,1
    83c4:	d8800a15 	stw	r2,40(sp)
    83c8:	45400115 	stw	r21,4(r8)
    83cc:	d8c00b15 	stw	r3,44(sp)
    83d0:	10800208 	cmpgei	r2,r2,8
    83d4:	1000841e 	bne	r2,zero,85e8 <___vfiprintf_internal_r+0x314>
    83d8:	42000204 	addi	r8,r8,8
    83dc:	d8c00017 	ldw	r3,0(sp)
    83e0:	80800047 	ldb	r2,1(r16)
    83e4:	1d47883a 	add	r3,r3,r21
    83e8:	d8c00015 	stw	r3,0(sp)
    83ec:	10008626 	beq	r2,zero,8608 <___vfiprintf_internal_r+0x334>
    83f0:	a0800047 	ldb	r2,1(r20)
    83f4:	a7000044 	addi	fp,r20,1
    83f8:	d8000845 	stb	zero,33(sp)
    83fc:	000b883a 	mov	r5,zero
    8400:	000d883a 	mov	r6,zero
    8404:	027fffc4 	movi	r9,-1
    8408:	0021883a 	mov	r16,zero
    840c:	0019883a 	mov	r12,zero
    8410:	e7000044 	addi	fp,fp,1
    8414:	10fff804 	addi	r3,r2,-32
    8418:	19001668 	cmpgeui	r4,r3,89
    841c:	20009e1e 	bne	r4,zero,8698 <___vfiprintf_internal_r+0x3c4>
    8420:	180690ba 	slli	r3,r3,2
    8424:	01000074 	movhi	r4,1
    8428:	1909883a 	add	r4,r3,r4
    842c:	20e10d17 	ldw	r3,-31692(r4)
    8430:	1800683a 	jmp	r3
    8434:	00008770 	cmpltui	zero,zero,541
    8438:	00008698 	cmpnei	zero,zero,538
    843c:	00008698 	cmpnei	zero,zero,538
    8440:	00008764 	muli	zero,zero,541
    8444:	00008698 	cmpnei	zero,zero,538
    8448:	00008698 	cmpnei	zero,zero,538
    844c:	00008698 	cmpnei	zero,zero,538
    8450:	00008698 	cmpnei	zero,zero,538
    8454:	00008698 	cmpnei	zero,zero,538
    8458:	00008698 	cmpnei	zero,zero,538
    845c:	0000873c 	xorhi	zero,zero,540
    8460:	0000872c 	andhi	zero,zero,540
    8464:	00008698 	cmpnei	zero,zero,538
    8468:	00008714 	movui	zero,540
    846c:	000086c8 	cmpgei	zero,zero,539
    8470:	00008698 	cmpnei	zero,zero,538
    8474:	000086bc 	xorhi	zero,zero,538
    8478:	00008660 	cmpeqi	zero,zero,537
    847c:	00008660 	cmpeqi	zero,zero,537
    8480:	00008660 	cmpeqi	zero,zero,537
    8484:	00008660 	cmpeqi	zero,zero,537
    8488:	00008660 	cmpeqi	zero,zero,537
    848c:	00008660 	cmpeqi	zero,zero,537
    8490:	00008660 	cmpeqi	zero,zero,537
    8494:	00008660 	cmpeqi	zero,zero,537
    8498:	00008660 	cmpeqi	zero,zero,537
    849c:	00008698 	cmpnei	zero,zero,538
    84a0:	00008698 	cmpnei	zero,zero,538
    84a4:	00008698 	cmpnei	zero,zero,538
    84a8:	00008698 	cmpnei	zero,zero,538
    84ac:	00008698 	cmpnei	zero,zero,538
    84b0:	00008698 	cmpnei	zero,zero,538
    84b4:	00008698 	cmpnei	zero,zero,538
    84b8:	00008698 	cmpnei	zero,zero,538
    84bc:	00008698 	cmpnei	zero,zero,538
    84c0:	00008698 	cmpnei	zero,zero,538
    84c4:	00008d2c 	andhi	zero,zero,564
    84c8:	00008698 	cmpnei	zero,zero,538
    84cc:	00008698 	cmpnei	zero,zero,538
    84d0:	00008698 	cmpnei	zero,zero,538
    84d4:	00008698 	cmpnei	zero,zero,538
    84d8:	00008698 	cmpnei	zero,zero,538
    84dc:	00008698 	cmpnei	zero,zero,538
    84e0:	00008698 	cmpnei	zero,zero,538
    84e4:	00008698 	cmpnei	zero,zero,538
    84e8:	00008698 	cmpnei	zero,zero,538
    84ec:	00008698 	cmpnei	zero,zero,538
    84f0:	00008cc4 	movi	zero,563
    84f4:	00008698 	cmpnei	zero,zero,538
    84f8:	00008698 	cmpnei	zero,zero,538
    84fc:	00008698 	cmpnei	zero,zero,538
    8500:	00008698 	cmpnei	zero,zero,538
    8504:	00008698 	cmpnei	zero,zero,538
    8508:	00008cf8 	rdprs	zero,zero,563
    850c:	00008698 	cmpnei	zero,zero,538
    8510:	00008698 	cmpnei	zero,zero,538
    8514:	000088c8 	cmpgei	zero,zero,547
    8518:	00008698 	cmpnei	zero,zero,538
    851c:	00008698 	cmpnei	zero,zero,538
    8520:	00008698 	cmpnei	zero,zero,538
    8524:	00008698 	cmpnei	zero,zero,538
    8528:	00008698 	cmpnei	zero,zero,538
    852c:	00008698 	cmpnei	zero,zero,538
    8530:	00008698 	cmpnei	zero,zero,538
    8534:	00008698 	cmpnei	zero,zero,538
    8538:	00008698 	cmpnei	zero,zero,538
    853c:	00008698 	cmpnei	zero,zero,538
    8540:	00008a64 	muli	zero,zero,553
    8544:	000089f0 	cmpltui	zero,zero,551
    8548:	00008698 	cmpnei	zero,zero,538
    854c:	00008698 	cmpnei	zero,zero,538
    8550:	00008698 	cmpnei	zero,zero,538
    8554:	000087f8 	rdprs	zero,zero,543
    8558:	000089f0 	cmpltui	zero,zero,551
    855c:	00008698 	cmpnei	zero,zero,538
    8560:	00008698 	cmpnei	zero,zero,538
    8564:	000087e4 	muli	zero,zero,543
    8568:	00008698 	cmpnei	zero,zero,538
    856c:	000089b0 	cmpltui	zero,zero,550
    8570:	00008888 	cmpgei	zero,zero,546
    8574:	00008810 	cmplti	zero,zero,544
    8578:	00008804 	movi	zero,544
    857c:	00008698 	cmpnei	zero,zero,538
    8580:	00008950 	cmplti	zero,zero,549
    8584:	00008698 	cmpnei	zero,zero,538
    8588:	00008910 	cmplti	zero,zero,548
    858c:	00008698 	cmpnei	zero,zero,538
    8590:	00008698 	cmpnei	zero,zero,538
    8594:	0000879c 	xori	zero,zero,542
    8598:	900b883a 	mov	r5,r18
    859c:	9809883a 	mov	r4,r19
    85a0:	00040a80 	call	40a8 <__swsetup_r>
    85a4:	10040b1e 	bne	r2,zero,95d4 <___vfiprintf_internal_r+0x1300>
    85a8:	9080030b 	ldhu	r2,12(r18)
    85ac:	1080068c 	andi	r2,r2,26
    85b0:	10800298 	cmpnei	r2,r2,10
    85b4:	103f691e 	bne	r2,zero,835c <___vfiprintf_internal_r+0x88>
    85b8:	9080038f 	ldh	r2,14(r18)
    85bc:	103f6716 	blt	r2,zero,835c <___vfiprintf_internal_r+0x88>
    85c0:	d9c00317 	ldw	r7,12(sp)
    85c4:	e00d883a 	mov	r6,fp
    85c8:	900b883a 	mov	r5,r18
    85cc:	9809883a 	mov	r4,r19
    85d0:	00096280 	call	9628 <__sbprintf>
    85d4:	d8800015 	stw	r2,0(sp)
    85d8:	00001406 	br	862c <___vfiprintf_internal_r+0x358>
    85dc:	a72bc83a 	sub	r21,r20,fp
    85e0:	a83f8326 	beq	r21,zero,83f0 <___vfiprintf_internal_r+0x11c>
    85e4:	003f7206 	br	83b0 <___vfiprintf_internal_r+0xdc>
    85e8:	18032f26 	beq	r3,zero,92a8 <___vfiprintf_internal_r+0xfd4>
    85ec:	d9800904 	addi	r6,sp,36
    85f0:	900b883a 	mov	r5,r18
    85f4:	9809883a 	mov	r4,r19
    85f8:	00081c80 	call	81c8 <__sprint_r.part.0>
    85fc:	1000081e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8600:	8811883a 	mov	r8,r17
    8604:	003f7506 	br	83dc <___vfiprintf_internal_r+0x108>
    8608:	d8800b17 	ldw	r2,44(sp)
    860c:	10000426 	beq	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8610:	d9800904 	addi	r6,sp,36
    8614:	900b883a 	mov	r5,r18
    8618:	9809883a 	mov	r4,r19
    861c:	00081c80 	call	81c8 <__sprint_r.part.0>
    8620:	9080030b 	ldhu	r2,12(r18)
    8624:	1080100c 	andi	r2,r2,64
    8628:	1003ea1e 	bne	r2,zero,95d4 <___vfiprintf_internal_r+0x1300>
    862c:	d8800017 	ldw	r2,0(sp)
    8630:	dfc02f17 	ldw	ra,188(sp)
    8634:	df002e17 	ldw	fp,184(sp)
    8638:	ddc02d17 	ldw	r23,180(sp)
    863c:	dd802c17 	ldw	r22,176(sp)
    8640:	dd402b17 	ldw	r21,172(sp)
    8644:	dd002a17 	ldw	r20,168(sp)
    8648:	dcc02917 	ldw	r19,164(sp)
    864c:	dc802817 	ldw	r18,160(sp)
    8650:	dc402717 	ldw	r17,156(sp)
    8654:	dc002617 	ldw	r16,152(sp)
    8658:	dec03004 	addi	sp,sp,192
    865c:	f800283a 	ret
    8660:	0021883a 	mov	r16,zero
    8664:	113ff404 	addi	r4,r2,-48
    8668:	800690ba 	slli	r3,r16,2
    866c:	e7000044 	addi	fp,fp,1
    8670:	e0bfffc7 	ldb	r2,-1(fp)
    8674:	1c21883a 	add	r16,r3,r16
    8678:	8421883a 	add	r16,r16,r16
    867c:	2421883a 	add	r16,r4,r16
    8680:	113ff404 	addi	r4,r2,-48
    8684:	20c002b0 	cmpltui	r3,r4,10
    8688:	183ff71e 	bne	r3,zero,8668 <___vfiprintf_internal_r+0x394>
    868c:	10fff804 	addi	r3,r2,-32
    8690:	19001668 	cmpgeui	r4,r3,89
    8694:	203f6226 	beq	r4,zero,8420 <___vfiprintf_internal_r+0x14c>
    8698:	29403fcc 	andi	r5,r5,255
    869c:	2803ab1e 	bne	r5,zero,954c <___vfiprintf_internal_r+0x1278>
    86a0:	103fd926 	beq	r2,zero,8608 <___vfiprintf_internal_r+0x334>
    86a4:	d8800c05 	stb	r2,48(sp)
    86a8:	d8000845 	stb	zero,33(sp)
    86ac:	05400044 	movi	r21,1
    86b0:	05800044 	movi	r22,1
    86b4:	ddc00c04 	addi	r23,sp,48
    86b8:	0000f306 	br	8a88 <___vfiprintf_internal_r+0x7b4>
    86bc:	63002014 	ori	r12,r12,128
    86c0:	e0800007 	ldb	r2,0(fp)
    86c4:	003f5206 	br	8410 <___vfiprintf_internal_r+0x13c>
    86c8:	e0800007 	ldb	r2,0(fp)
    86cc:	e0c00044 	addi	r3,fp,1
    86d0:	11000aa0 	cmpeqi	r4,r2,42
    86d4:	2003c21e 	bne	r4,zero,95e0 <___vfiprintf_internal_r+0x130c>
    86d8:	113ff404 	addi	r4,r2,-48
    86dc:	21c002b0 	cmpltui	r7,r4,10
    86e0:	1839883a 	mov	fp,r3
    86e4:	0013883a 	mov	r9,zero
    86e8:	383f4a26 	beq	r7,zero,8414 <___vfiprintf_internal_r+0x140>
    86ec:	480690ba 	slli	r3,r9,2
    86f0:	e7000044 	addi	fp,fp,1
    86f4:	e0bfffc7 	ldb	r2,-1(fp)
    86f8:	1a53883a 	add	r9,r3,r9
    86fc:	4a53883a 	add	r9,r9,r9
    8700:	4913883a 	add	r9,r9,r4
    8704:	113ff404 	addi	r4,r2,-48
    8708:	20c002b0 	cmpltui	r3,r4,10
    870c:	183ff71e 	bne	r3,zero,86ec <___vfiprintf_internal_r+0x418>
    8710:	003f4006 	br	8414 <___vfiprintf_internal_r+0x140>
    8714:	e0800003 	ldbu	r2,0(fp)
    8718:	10803fcc 	andi	r2,r2,255
    871c:	1080201c 	xori	r2,r2,128
    8720:	63000114 	ori	r12,r12,4
    8724:	10bfe004 	addi	r2,r2,-128
    8728:	003f3906 	br	8410 <___vfiprintf_internal_r+0x13c>
    872c:	01400044 	movi	r5,1
    8730:	01800ac4 	movi	r6,43
    8734:	e0800007 	ldb	r2,0(fp)
    8738:	003f3506 	br	8410 <___vfiprintf_internal_r+0x13c>
    873c:	d8800317 	ldw	r2,12(sp)
    8740:	14000017 	ldw	r16,0(r2)
    8744:	15c00104 	addi	r23,r2,4
    8748:	e0800003 	ldbu	r2,0(fp)
    874c:	80031416 	blt	r16,zero,93a0 <___vfiprintf_internal_r+0x10cc>
    8750:	ddc00315 	stw	r23,12(sp)
    8754:	10803fcc 	andi	r2,r2,255
    8758:	1080201c 	xori	r2,r2,128
    875c:	10bfe004 	addi	r2,r2,-128
    8760:	003f2b06 	br	8410 <___vfiprintf_internal_r+0x13c>
    8764:	63000054 	ori	r12,r12,1
    8768:	e0800007 	ldb	r2,0(fp)
    876c:	003f2806 	br	8410 <___vfiprintf_internal_r+0x13c>
    8770:	30c03fcc 	andi	r3,r6,255
    8774:	18c0201c 	xori	r3,r3,128
    8778:	18ffe004 	addi	r3,r3,-128
    877c:	e0800003 	ldbu	r2,0(fp)
    8780:	183ff41e 	bne	r3,zero,8754 <___vfiprintf_internal_r+0x480>
    8784:	10803fcc 	andi	r2,r2,255
    8788:	1080201c 	xori	r2,r2,128
    878c:	01400044 	movi	r5,1
    8790:	01800804 	movi	r6,32
    8794:	10bfe004 	addi	r2,r2,-128
    8798:	003f1d06 	br	8410 <___vfiprintf_internal_r+0x13c>
    879c:	29403fcc 	andi	r5,r5,255
    87a0:	2803741e 	bne	r5,zero,9574 <___vfiprintf_internal_r+0x12a0>
    87a4:	00c00074 	movhi	r3,1
    87a8:	18ff1804 	addi	r3,r3,-928
    87ac:	d8c00415 	stw	r3,16(sp)
    87b0:	60c0080c 	andi	r3,r12,32
    87b4:	18004b26 	beq	r3,zero,88e4 <___vfiprintf_internal_r+0x610>
    87b8:	d8c00317 	ldw	r3,12(sp)
    87bc:	1d400017 	ldw	r21,0(r3)
    87c0:	1d800117 	ldw	r22,4(r3)
    87c4:	18c00204 	addi	r3,r3,8
    87c8:	d8c00315 	stw	r3,12(sp)
    87cc:	60c0004c 	andi	r3,r12,1
    87d0:	18000226 	beq	r3,zero,87dc <___vfiprintf_internal_r+0x508>
    87d4:	ad86b03a 	or	r3,r21,r22
    87d8:	1802df1e 	bne	r3,zero,9358 <___vfiprintf_internal_r+0x1084>
    87dc:	00800084 	movi	r2,2
    87e0:	00001906 	br	8848 <___vfiprintf_internal_r+0x574>
    87e4:	e0800007 	ldb	r2,0(fp)
    87e8:	10c01b18 	cmpnei	r3,r2,108
    87ec:	18033026 	beq	r3,zero,94b0 <___vfiprintf_internal_r+0x11dc>
    87f0:	63000414 	ori	r12,r12,16
    87f4:	003f0606 	br	8410 <___vfiprintf_internal_r+0x13c>
    87f8:	63001014 	ori	r12,r12,64
    87fc:	e0800007 	ldb	r2,0(fp)
    8800:	003f0306 	br	8410 <___vfiprintf_internal_r+0x13c>
    8804:	63000814 	ori	r12,r12,32
    8808:	e0800007 	ldb	r2,0(fp)
    880c:	003f0006 	br	8410 <___vfiprintf_internal_r+0x13c>
    8810:	d8c00317 	ldw	r3,12(sp)
    8814:	00800c04 	movi	r2,48
    8818:	d8800885 	stb	r2,34(sp)
    881c:	00801e04 	movi	r2,120
    8820:	01000074 	movhi	r4,1
    8824:	d88008c5 	stb	r2,35(sp)
    8828:	1d400017 	ldw	r21,0(r3)
    882c:	18800104 	addi	r2,r3,4
    8830:	d8800315 	stw	r2,12(sp)
    8834:	20bf1804 	addi	r2,r4,-928
    8838:	d8800415 	stw	r2,16(sp)
    883c:	002d883a 	mov	r22,zero
    8840:	63000094 	ori	r12,r12,2
    8844:	00800084 	movi	r2,2
    8848:	d8000845 	stb	zero,33(sp)
    884c:	48ffffe0 	cmpeqi	r3,r9,-1
    8850:	001b883a 	mov	r13,zero
    8854:	18014c1e 	bne	r3,zero,8d88 <___vfiprintf_internal_r+0xab4>
    8858:	053fdfc4 	movi	r20,-129
    885c:	ad86b03a 	or	r3,r21,r22
    8860:	6528703a 	and	r20,r12,r20
    8864:	1802411e 	bne	r3,zero,916c <___vfiprintf_internal_r+0xe98>
    8868:	48030d1e 	bne	r9,zero,94a0 <___vfiprintf_internal_r+0x11cc>
    886c:	1000791e 	bne	r2,zero,8a54 <___vfiprintf_internal_r+0x780>
    8870:	6580004c 	andi	r22,r12,1
    8874:	b002b126 	beq	r22,zero,933c <___vfiprintf_internal_r+0x1068>
    8878:	00800c04 	movi	r2,48
    887c:	d88015c5 	stb	r2,87(sp)
    8880:	ddc015c4 	addi	r23,sp,87
    8884:	00017e06 	br	8e80 <___vfiprintf_internal_r+0xbac>
    8888:	29403fcc 	andi	r5,r5,255
    888c:	2803461e 	bne	r5,zero,95a8 <___vfiprintf_internal_r+0x12d4>
    8890:	6080080c 	andi	r2,r12,32
    8894:	10016b1e 	bne	r2,zero,8e44 <___vfiprintf_internal_r+0xb70>
    8898:	d8800317 	ldw	r2,12(sp)
    889c:	60c0040c 	andi	r3,r12,16
    88a0:	15400017 	ldw	r21,0(r2)
    88a4:	10800104 	addi	r2,r2,4
    88a8:	18010d1e 	bne	r3,zero,8ce0 <___vfiprintf_internal_r+0xa0c>
    88ac:	60c0100c 	andi	r3,r12,64
    88b0:	18031326 	beq	r3,zero,9500 <___vfiprintf_internal_r+0x122c>
    88b4:	d8800315 	stw	r2,12(sp)
    88b8:	ad7fffcc 	andi	r21,r21,65535
    88bc:	002d883a 	mov	r22,zero
    88c0:	0005883a 	mov	r2,zero
    88c4:	003fe006 	br	8848 <___vfiprintf_internal_r+0x574>
    88c8:	29403fcc 	andi	r5,r5,255
    88cc:	2803251e 	bne	r5,zero,9564 <___vfiprintf_internal_r+0x1290>
    88d0:	00c00074 	movhi	r3,1
    88d4:	18ff1304 	addi	r3,r3,-948
    88d8:	d8c00415 	stw	r3,16(sp)
    88dc:	60c0080c 	andi	r3,r12,32
    88e0:	183fb51e 	bne	r3,zero,87b8 <___vfiprintf_internal_r+0x4e4>
    88e4:	d9000317 	ldw	r4,12(sp)
    88e8:	60c0040c 	andi	r3,r12,16
    88ec:	25400017 	ldw	r21,0(r4)
    88f0:	21000104 	addi	r4,r4,4
    88f4:	d9000315 	stw	r4,12(sp)
    88f8:	18026e1e 	bne	r3,zero,92b4 <___vfiprintf_internal_r+0xfe0>
    88fc:	60c0100c 	andi	r3,r12,64
    8900:	18026c26 	beq	r3,zero,92b4 <___vfiprintf_internal_r+0xfe0>
    8904:	ad7fffcc 	andi	r21,r21,65535
    8908:	002d883a 	mov	r22,zero
    890c:	003faf06 	br	87cc <___vfiprintf_internal_r+0x4f8>
    8910:	29403fcc 	andi	r5,r5,255
    8914:	2803151e 	bne	r5,zero,956c <___vfiprintf_internal_r+0x1298>
    8918:	6080080c 	andi	r2,r12,32
    891c:	10013b1e 	bne	r2,zero,8e0c <___vfiprintf_internal_r+0xb38>
    8920:	d8800317 	ldw	r2,12(sp)
    8924:	60c0040c 	andi	r3,r12,16
    8928:	15400017 	ldw	r21,0(r2)
    892c:	10800104 	addi	r2,r2,4
    8930:	1800f81e 	bne	r3,zero,8d14 <___vfiprintf_internal_r+0xa40>
    8934:	60c0100c 	andi	r3,r12,64
    8938:	1802ed26 	beq	r3,zero,94f0 <___vfiprintf_internal_r+0x121c>
    893c:	d8800315 	stw	r2,12(sp)
    8940:	ad7fffcc 	andi	r21,r21,65535
    8944:	002d883a 	mov	r22,zero
    8948:	00800044 	movi	r2,1
    894c:	003fbe06 	br	8848 <___vfiprintf_internal_r+0x574>
    8950:	d8800317 	ldw	r2,12(sp)
    8954:	d8000845 	stb	zero,33(sp)
    8958:	15c00017 	ldw	r23,0(r2)
    895c:	15000104 	addi	r20,r2,4
    8960:	b802da26 	beq	r23,zero,94cc <___vfiprintf_internal_r+0x11f8>
    8964:	48bfffe0 	cmpeqi	r2,r9,-1
    8968:	1002901e 	bne	r2,zero,93ac <___vfiprintf_internal_r+0x10d8>
    896c:	480d883a 	mov	r6,r9
    8970:	000b883a 	mov	r5,zero
    8974:	b809883a 	mov	r4,r23
    8978:	da000315 	stw	r8,12(sp)
    897c:	db000215 	stw	r12,8(sp)
    8980:	da400115 	stw	r9,4(sp)
    8984:	00013400 	call	1340 <memchr>
    8988:	da400117 	ldw	r9,4(sp)
    898c:	db000217 	ldw	r12,8(sp)
    8990:	da000317 	ldw	r8,12(sp)
    8994:	1002ef26 	beq	r2,zero,9554 <___vfiprintf_internal_r+0x1280>
    8998:	15edc83a 	sub	r22,r2,r23
    899c:	b02b883a 	mov	r21,r22
    89a0:	b000010e 	bge	r22,zero,89a8 <___vfiprintf_internal_r+0x6d4>
    89a4:	002b883a 	mov	r21,zero
    89a8:	dd000315 	stw	r20,12(sp)
    89ac:	00003606 	br	8a88 <___vfiprintf_internal_r+0x7b4>
    89b0:	29403fcc 	andi	r5,r5,255
    89b4:	2802fa1e 	bne	r5,zero,95a0 <___vfiprintf_internal_r+0x12cc>
    89b8:	d9000317 	ldw	r4,12(sp)
    89bc:	6080080c 	andi	r2,r12,32
    89c0:	20c00104 	addi	r3,r4,4
    89c4:	10026a1e 	bne	r2,zero,9370 <___vfiprintf_internal_r+0x109c>
    89c8:	6080040c 	andi	r2,r12,16
    89cc:	1002891e 	bne	r2,zero,93f4 <___vfiprintf_internal_r+0x1120>
    89d0:	6300100c 	andi	r12,r12,64
    89d4:	60028726 	beq	r12,zero,93f4 <___vfiprintf_internal_r+0x1120>
    89d8:	d8800317 	ldw	r2,12(sp)
    89dc:	d8c00315 	stw	r3,12(sp)
    89e0:	d8c00017 	ldw	r3,0(sp)
    89e4:	10800017 	ldw	r2,0(r2)
    89e8:	10c0000d 	sth	r3,0(r2)
    89ec:	003e6206 	br	8378 <___vfiprintf_internal_r+0xa4>
    89f0:	29403fcc 	andi	r5,r5,255
    89f4:	2802e81e 	bne	r5,zero,9598 <___vfiprintf_internal_r+0x12c4>
    89f8:	6080080c 	andi	r2,r12,32
    89fc:	10010a1e 	bne	r2,zero,8e28 <___vfiprintf_internal_r+0xb54>
    8a00:	d8800317 	ldw	r2,12(sp)
    8a04:	60c0040c 	andi	r3,r12,16
    8a08:	10800104 	addi	r2,r2,4
    8a0c:	1800ce1e 	bne	r3,zero,8d48 <___vfiprintf_internal_r+0xa74>
    8a10:	60c0100c 	andi	r3,r12,64
    8a14:	1800cc26 	beq	r3,zero,8d48 <___vfiprintf_internal_r+0xa74>
    8a18:	d8c00317 	ldw	r3,12(sp)
    8a1c:	d8800315 	stw	r2,12(sp)
    8a20:	1d40000f 	ldh	r21,0(r3)
    8a24:	a82dd7fa 	srai	r22,r21,31
    8a28:	b005883a 	mov	r2,r22
    8a2c:	1000cc16 	blt	r2,zero,8d60 <___vfiprintf_internal_r+0xa8c>
    8a30:	48bfffd8 	cmpnei	r2,r9,-1
    8a34:	db400843 	ldbu	r13,33(sp)
    8a38:	10010926 	beq	r2,zero,8e60 <___vfiprintf_internal_r+0xb8c>
    8a3c:	00ffdfc4 	movi	r3,-129
    8a40:	ad84b03a 	or	r2,r21,r22
    8a44:	60d8703a 	and	r12,r12,r3
    8a48:	1001051e 	bne	r2,zero,8e60 <___vfiprintf_internal_r+0xb8c>
    8a4c:	4801071e 	bne	r9,zero,8e6c <___vfiprintf_internal_r+0xb98>
    8a50:	6029883a 	mov	r20,r12
    8a54:	0013883a 	mov	r9,zero
    8a58:	002d883a 	mov	r22,zero
    8a5c:	882f883a 	mov	r23,r17
    8a60:	00010706 	br	8e80 <___vfiprintf_internal_r+0xbac>
    8a64:	d8c00317 	ldw	r3,12(sp)
    8a68:	d8000845 	stb	zero,33(sp)
    8a6c:	05400044 	movi	r21,1
    8a70:	18800017 	ldw	r2,0(r3)
    8a74:	18c00104 	addi	r3,r3,4
    8a78:	d8c00315 	stw	r3,12(sp)
    8a7c:	d8800c05 	stb	r2,48(sp)
    8a80:	05800044 	movi	r22,1
    8a84:	ddc00c04 	addi	r23,sp,48
    8a88:	6029883a 	mov	r20,r12
    8a8c:	0013883a 	mov	r9,zero
    8a90:	a340008c 	andi	r13,r20,2
    8a94:	68000126 	beq	r13,zero,8a9c <___vfiprintf_internal_r+0x7c8>
    8a98:	ad400084 	addi	r21,r21,2
    8a9c:	d9000a17 	ldw	r4,40(sp)
    8aa0:	a300210c 	andi	r12,r20,132
    8aa4:	d8800b17 	ldw	r2,44(sp)
    8aa8:	21800044 	addi	r6,r4,1
    8aac:	300b883a 	mov	r5,r6
    8ab0:	6000021e 	bne	r12,zero,8abc <___vfiprintf_internal_r+0x7e8>
    8ab4:	8547c83a 	sub	r3,r16,r21
    8ab8:	00c1ae16 	blt	zero,r3,9174 <___vfiprintf_internal_r+0xea0>
    8abc:	d9800847 	ldb	r6,33(sp)
    8ac0:	40c00204 	addi	r3,r8,8
    8ac4:	30000d26 	beq	r6,zero,8afc <___vfiprintf_internal_r+0x828>
    8ac8:	d9000844 	addi	r4,sp,33
    8acc:	10800044 	addi	r2,r2,1
    8ad0:	41000015 	stw	r4,0(r8)
    8ad4:	01000044 	movi	r4,1
    8ad8:	41000115 	stw	r4,4(r8)
    8adc:	d8800b15 	stw	r2,44(sp)
    8ae0:	d9400a15 	stw	r5,40(sp)
    8ae4:	29000208 	cmpgei	r4,r5,8
    8ae8:	2001831e 	bne	r4,zero,90f8 <___vfiprintf_internal_r+0xe24>
    8aec:	2809883a 	mov	r4,r5
    8af0:	1811883a 	mov	r8,r3
    8af4:	29400044 	addi	r5,r5,1
    8af8:	18c00204 	addi	r3,r3,8
    8afc:	68001826 	beq	r13,zero,8b60 <___vfiprintf_internal_r+0x88c>
    8b00:	d9000884 	addi	r4,sp,34
    8b04:	10800084 	addi	r2,r2,2
    8b08:	41000015 	stw	r4,0(r8)
    8b0c:	01000084 	movi	r4,2
    8b10:	41000115 	stw	r4,4(r8)
    8b14:	d8800b15 	stw	r2,44(sp)
    8b18:	d9400a15 	stw	r5,40(sp)
    8b1c:	29000208 	cmpgei	r4,r5,8
    8b20:	20018d26 	beq	r4,zero,9158 <___vfiprintf_internal_r+0xe84>
    8b24:	1001ed26 	beq	r2,zero,92dc <___vfiprintf_internal_r+0x1008>
    8b28:	d9800904 	addi	r6,sp,36
    8b2c:	900b883a 	mov	r5,r18
    8b30:	9809883a 	mov	r4,r19
    8b34:	da400215 	stw	r9,8(sp)
    8b38:	db000115 	stw	r12,4(sp)
    8b3c:	00081c80 	call	81c8 <__sprint_r.part.0>
    8b40:	103eb71e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8b44:	d9000a17 	ldw	r4,40(sp)
    8b48:	d8800b17 	ldw	r2,44(sp)
    8b4c:	da400217 	ldw	r9,8(sp)
    8b50:	db000117 	ldw	r12,4(sp)
    8b54:	d8c01804 	addi	r3,sp,96
    8b58:	21400044 	addi	r5,r4,1
    8b5c:	8811883a 	mov	r8,r17
    8b60:	63002018 	cmpnei	r12,r12,128
    8b64:	6000e326 	beq	r12,zero,8ef4 <___vfiprintf_internal_r+0xc20>
    8b68:	4d93c83a 	sub	r9,r9,r22
    8b6c:	02412216 	blt	zero,r9,8ff8 <___vfiprintf_internal_r+0xd24>
    8b70:	b085883a 	add	r2,r22,r2
    8b74:	d9400a15 	stw	r5,40(sp)
    8b78:	45c00015 	stw	r23,0(r8)
    8b7c:	45800115 	stw	r22,4(r8)
    8b80:	d8800b15 	stw	r2,44(sp)
    8b84:	29400210 	cmplti	r5,r5,8
    8b88:	2800081e 	bne	r5,zero,8bac <___vfiprintf_internal_r+0x8d8>
    8b8c:	10001426 	beq	r2,zero,8be0 <___vfiprintf_internal_r+0x90c>
    8b90:	d9800904 	addi	r6,sp,36
    8b94:	900b883a 	mov	r5,r18
    8b98:	9809883a 	mov	r4,r19
    8b9c:	00081c80 	call	81c8 <__sprint_r.part.0>
    8ba0:	103e9f1e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8ba4:	d8800b17 	ldw	r2,44(sp)
    8ba8:	8807883a 	mov	r3,r17
    8bac:	a500010c 	andi	r20,r20,4
    8bb0:	a0000226 	beq	r20,zero,8bbc <___vfiprintf_internal_r+0x8e8>
    8bb4:	8569c83a 	sub	r20,r16,r21
    8bb8:	05000f16 	blt	zero,r20,8bf8 <___vfiprintf_internal_r+0x924>
    8bbc:	8540010e 	bge	r16,r21,8bc4 <___vfiprintf_internal_r+0x8f0>
    8bc0:	a821883a 	mov	r16,r21
    8bc4:	d8c00017 	ldw	r3,0(sp)
    8bc8:	1c07883a 	add	r3,r3,r16
    8bcc:	d8c00015 	stw	r3,0(sp)
    8bd0:	10013f1e 	bne	r2,zero,90d0 <___vfiprintf_internal_r+0xdfc>
    8bd4:	d8000a15 	stw	zero,40(sp)
    8bd8:	8811883a 	mov	r8,r17
    8bdc:	003de606 	br	8378 <___vfiprintf_internal_r+0xa4>
    8be0:	d8000a15 	stw	zero,40(sp)
    8be4:	a500010c 	andi	r20,r20,4
    8be8:	a0019d26 	beq	r20,zero,9260 <___vfiprintf_internal_r+0xf8c>
    8bec:	8569c83a 	sub	r20,r16,r21
    8bf0:	05019b0e 	bge	zero,r20,9260 <___vfiprintf_internal_r+0xf8c>
    8bf4:	8807883a 	mov	r3,r17
    8bf8:	a1000450 	cmplti	r4,r20,17
    8bfc:	01c00074 	movhi	r7,1
    8c00:	d9400a17 	ldw	r5,40(sp)
    8c04:	20026c1e 	bne	r4,zero,95b8 <___vfiprintf_internal_r+0x12e4>
    8c08:	39c01904 	addi	r7,r7,100
    8c0c:	05800404 	movi	r22,16
    8c10:	00000606 	br	8c2c <___vfiprintf_internal_r+0x958>
    8c14:	29800084 	addi	r6,r5,2
    8c18:	18c00204 	addi	r3,r3,8
    8c1c:	200b883a 	mov	r5,r4
    8c20:	a53ffc04 	addi	r20,r20,-16
    8c24:	a1000448 	cmpgei	r4,r20,17
    8c28:	20001726 	beq	r4,zero,8c88 <___vfiprintf_internal_r+0x9b4>
    8c2c:	29000044 	addi	r4,r5,1
    8c30:	10800404 	addi	r2,r2,16
    8c34:	19c00015 	stw	r7,0(r3)
    8c38:	1d800115 	stw	r22,4(r3)
    8c3c:	d8800b15 	stw	r2,44(sp)
    8c40:	d9000a15 	stw	r4,40(sp)
    8c44:	21800208 	cmpgei	r6,r4,8
    8c48:	303ff226 	beq	r6,zero,8c14 <___vfiprintf_internal_r+0x940>
    8c4c:	d9800904 	addi	r6,sp,36
    8c50:	900b883a 	mov	r5,r18
    8c54:	9809883a 	mov	r4,r19
    8c58:	1000a226 	beq	r2,zero,8ee4 <___vfiprintf_internal_r+0xc10>
    8c5c:	d9c00115 	stw	r7,4(sp)
    8c60:	00081c80 	call	81c8 <__sprint_r.part.0>
    8c64:	103e6e1e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8c68:	d9400a17 	ldw	r5,40(sp)
    8c6c:	a53ffc04 	addi	r20,r20,-16
    8c70:	a1000448 	cmpgei	r4,r20,17
    8c74:	d8800b17 	ldw	r2,44(sp)
    8c78:	8807883a 	mov	r3,r17
    8c7c:	29800044 	addi	r6,r5,1
    8c80:	d9c00117 	ldw	r7,4(sp)
    8c84:	203fe91e 	bne	r4,zero,8c2c <___vfiprintf_internal_r+0x958>
    8c88:	1505883a 	add	r2,r2,r20
    8c8c:	d9800a15 	stw	r6,40(sp)
    8c90:	19c00015 	stw	r7,0(r3)
    8c94:	1d000115 	stw	r20,4(r3)
    8c98:	d8800b15 	stw	r2,44(sp)
    8c9c:	31800210 	cmplti	r6,r6,8
    8ca0:	303fc61e 	bne	r6,zero,8bbc <___vfiprintf_internal_r+0x8e8>
    8ca4:	10016e26 	beq	r2,zero,9260 <___vfiprintf_internal_r+0xf8c>
    8ca8:	d9800904 	addi	r6,sp,36
    8cac:	900b883a 	mov	r5,r18
    8cb0:	9809883a 	mov	r4,r19
    8cb4:	00081c80 	call	81c8 <__sprint_r.part.0>
    8cb8:	103e591e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8cbc:	d8800b17 	ldw	r2,44(sp)
    8cc0:	003fbe06 	br	8bbc <___vfiprintf_internal_r+0x8e8>
    8cc4:	29403fcc 	andi	r5,r5,255
    8cc8:	28022c1e 	bne	r5,zero,957c <___vfiprintf_internal_r+0x12a8>
    8ccc:	6080080c 	andi	r2,r12,32
    8cd0:	63000414 	ori	r12,r12,16
    8cd4:	10005b1e 	bne	r2,zero,8e44 <___vfiprintf_internal_r+0xb70>
    8cd8:	d8800317 	ldw	r2,12(sp)
    8cdc:	10800104 	addi	r2,r2,4
    8ce0:	d8c00317 	ldw	r3,12(sp)
    8ce4:	002d883a 	mov	r22,zero
    8ce8:	d8800315 	stw	r2,12(sp)
    8cec:	1d400017 	ldw	r21,0(r3)
    8cf0:	0005883a 	mov	r2,zero
    8cf4:	003ed406 	br	8848 <___vfiprintf_internal_r+0x574>
    8cf8:	29403fcc 	andi	r5,r5,255
    8cfc:	2802211e 	bne	r5,zero,9584 <___vfiprintf_internal_r+0x12b0>
    8d00:	6080080c 	andi	r2,r12,32
    8d04:	63000414 	ori	r12,r12,16
    8d08:	1000401e 	bne	r2,zero,8e0c <___vfiprintf_internal_r+0xb38>
    8d0c:	d8800317 	ldw	r2,12(sp)
    8d10:	10800104 	addi	r2,r2,4
    8d14:	d8c00317 	ldw	r3,12(sp)
    8d18:	002d883a 	mov	r22,zero
    8d1c:	d8800315 	stw	r2,12(sp)
    8d20:	1d400017 	ldw	r21,0(r3)
    8d24:	00800044 	movi	r2,1
    8d28:	003ec706 	br	8848 <___vfiprintf_internal_r+0x574>
    8d2c:	29403fcc 	andi	r5,r5,255
    8d30:	28021f1e 	bne	r5,zero,95b0 <___vfiprintf_internal_r+0x12dc>
    8d34:	6080080c 	andi	r2,r12,32
    8d38:	63000414 	ori	r12,r12,16
    8d3c:	10003a1e 	bne	r2,zero,8e28 <___vfiprintf_internal_r+0xb54>
    8d40:	d8800317 	ldw	r2,12(sp)
    8d44:	10800104 	addi	r2,r2,4
    8d48:	d8c00317 	ldw	r3,12(sp)
    8d4c:	1d400017 	ldw	r21,0(r3)
    8d50:	d8800315 	stw	r2,12(sp)
    8d54:	a82dd7fa 	srai	r22,r21,31
    8d58:	b005883a 	mov	r2,r22
    8d5c:	103f340e 	bge	r2,zero,8a30 <___vfiprintf_internal_r+0x75c>
    8d60:	056bc83a 	sub	r21,zero,r21
    8d64:	a804c03a 	cmpne	r2,r21,zero
    8d68:	05adc83a 	sub	r22,zero,r22
    8d6c:	b0adc83a 	sub	r22,r22,r2
    8d70:	00800b44 	movi	r2,45
    8d74:	d8800845 	stb	r2,33(sp)
    8d78:	48ffffe0 	cmpeqi	r3,r9,-1
    8d7c:	03400b44 	movi	r13,45
    8d80:	00800044 	movi	r2,1
    8d84:	183eb426 	beq	r3,zero,8858 <___vfiprintf_internal_r+0x584>
    8d88:	10c00060 	cmpeqi	r3,r2,1
    8d8c:	1800341e 	bne	r3,zero,8e60 <___vfiprintf_internal_r+0xb8c>
    8d90:	108000a0 	cmpeqi	r2,r2,2
    8d94:	1000431e 	bne	r2,zero,8ea4 <___vfiprintf_internal_r+0xbd0>
    8d98:	8807883a 	mov	r3,r17
    8d9c:	00000106 	br	8da4 <___vfiprintf_internal_r+0xad0>
    8da0:	b807883a 	mov	r3,r23
    8da4:	a808d0fa 	srli	r4,r21,3
    8da8:	b00a977a 	slli	r5,r22,29
    8dac:	b02cd0fa 	srli	r22,r22,3
    8db0:	ad4001cc 	andi	r21,r21,7
    8db4:	a8800c04 	addi	r2,r21,48
    8db8:	292ab03a 	or	r21,r5,r4
    8dbc:	18bfffc5 	stb	r2,-1(r3)
    8dc0:	ad88b03a 	or	r4,r21,r22
    8dc4:	1dffffc4 	addi	r23,r3,-1
    8dc8:	203ff51e 	bne	r4,zero,8da0 <___vfiprintf_internal_r+0xacc>
    8dcc:	6100004c 	andi	r4,r12,1
    8dd0:	20004126 	beq	r4,zero,8ed8 <___vfiprintf_internal_r+0xc04>
    8dd4:	10803fcc 	andi	r2,r2,255
    8dd8:	1080201c 	xori	r2,r2,128
    8ddc:	10bfe004 	addi	r2,r2,-128
    8de0:	10800c18 	cmpnei	r2,r2,48
    8de4:	10003c26 	beq	r2,zero,8ed8 <___vfiprintf_internal_r+0xc04>
    8de8:	18ffff84 	addi	r3,r3,-2
    8dec:	00800c04 	movi	r2,48
    8df0:	b8bfffc5 	stb	r2,-1(r23)
    8df4:	88edc83a 	sub	r22,r17,r3
    8df8:	6029883a 	mov	r20,r12
    8dfc:	182f883a 	mov	r23,r3
    8e00:	00001f06 	br	8e80 <___vfiprintf_internal_r+0xbac>
    8e04:	00009ac0 	call	9ac <__sinit>
    8e08:	003d4406 	br	831c <___vfiprintf_internal_r+0x48>
    8e0c:	d8c00317 	ldw	r3,12(sp)
    8e10:	00800044 	movi	r2,1
    8e14:	1d400017 	ldw	r21,0(r3)
    8e18:	1d800117 	ldw	r22,4(r3)
    8e1c:	18c00204 	addi	r3,r3,8
    8e20:	d8c00315 	stw	r3,12(sp)
    8e24:	003e8806 	br	8848 <___vfiprintf_internal_r+0x574>
    8e28:	d8c00317 	ldw	r3,12(sp)
    8e2c:	18800117 	ldw	r2,4(r3)
    8e30:	1d400017 	ldw	r21,0(r3)
    8e34:	18c00204 	addi	r3,r3,8
    8e38:	d8c00315 	stw	r3,12(sp)
    8e3c:	102d883a 	mov	r22,r2
    8e40:	003efa06 	br	8a2c <___vfiprintf_internal_r+0x758>
    8e44:	d8c00317 	ldw	r3,12(sp)
    8e48:	0005883a 	mov	r2,zero
    8e4c:	1d400017 	ldw	r21,0(r3)
    8e50:	1d800117 	ldw	r22,4(r3)
    8e54:	18c00204 	addi	r3,r3,8
    8e58:	d8c00315 	stw	r3,12(sp)
    8e5c:	003e7a06 	br	8848 <___vfiprintf_internal_r+0x574>
    8e60:	b0016a1e 	bne	r22,zero,940c <___vfiprintf_internal_r+0x1138>
    8e64:	a88002a8 	cmpgeui	r2,r21,10
    8e68:	1001681e 	bne	r2,zero,940c <___vfiprintf_internal_r+0x1138>
    8e6c:	ad400c04 	addi	r21,r21,48
    8e70:	dd4015c5 	stb	r21,87(sp)
    8e74:	6029883a 	mov	r20,r12
    8e78:	05800044 	movi	r22,1
    8e7c:	ddc015c4 	addi	r23,sp,87
    8e80:	482b883a 	mov	r21,r9
    8e84:	4d80010e 	bge	r9,r22,8e8c <___vfiprintf_internal_r+0xbb8>
    8e88:	b02b883a 	mov	r21,r22
    8e8c:	6b403fcc 	andi	r13,r13,255
    8e90:	6b40201c 	xori	r13,r13,128
    8e94:	6b7fe004 	addi	r13,r13,-128
    8e98:	683efd26 	beq	r13,zero,8a90 <___vfiprintf_internal_r+0x7bc>
    8e9c:	ad400044 	addi	r21,r21,1
    8ea0:	003efb06 	br	8a90 <___vfiprintf_internal_r+0x7bc>
    8ea4:	882f883a 	mov	r23,r17
    8ea8:	d9000417 	ldw	r4,16(sp)
    8eac:	a88003cc 	andi	r2,r21,15
    8eb0:	b006973a 	slli	r3,r22,28
    8eb4:	2085883a 	add	r2,r4,r2
    8eb8:	a82ad13a 	srli	r21,r21,4
    8ebc:	10800003 	ldbu	r2,0(r2)
    8ec0:	b02cd13a 	srli	r22,r22,4
    8ec4:	bdffffc4 	addi	r23,r23,-1
    8ec8:	1d6ab03a 	or	r21,r3,r21
    8ecc:	b8800005 	stb	r2,0(r23)
    8ed0:	ad84b03a 	or	r2,r21,r22
    8ed4:	103ff41e 	bne	r2,zero,8ea8 <___vfiprintf_internal_r+0xbd4>
    8ed8:	8dedc83a 	sub	r22,r17,r23
    8edc:	6029883a 	mov	r20,r12
    8ee0:	003fe706 	br	8e80 <___vfiprintf_internal_r+0xbac>
    8ee4:	01800044 	movi	r6,1
    8ee8:	000b883a 	mov	r5,zero
    8eec:	8807883a 	mov	r3,r17
    8ef0:	003f4b06 	br	8c20 <___vfiprintf_internal_r+0x94c>
    8ef4:	8559c83a 	sub	r12,r16,r21
    8ef8:	033f1b0e 	bge	zero,r12,8b68 <___vfiprintf_internal_r+0x894>
    8efc:	61800450 	cmplti	r6,r12,17
    8f00:	01c00074 	movhi	r7,1
    8f04:	3001af1e 	bne	r6,zero,95c4 <___vfiprintf_internal_r+0x12f0>
    8f08:	39c01504 	addi	r7,r7,84
    8f0c:	03400404 	movi	r13,16
    8f10:	00000606 	br	8f2c <___vfiprintf_internal_r+0xc58>
    8f14:	21800084 	addi	r6,r4,2
    8f18:	42000204 	addi	r8,r8,8
    8f1c:	1809883a 	mov	r4,r3
    8f20:	633ffc04 	addi	r12,r12,-16
    8f24:	60c00448 	cmpgei	r3,r12,17
    8f28:	18001c26 	beq	r3,zero,8f9c <___vfiprintf_internal_r+0xcc8>
    8f2c:	20c00044 	addi	r3,r4,1
    8f30:	10800404 	addi	r2,r2,16
    8f34:	41c00015 	stw	r7,0(r8)
    8f38:	43400115 	stw	r13,4(r8)
    8f3c:	d8800b15 	stw	r2,44(sp)
    8f40:	d8c00a15 	stw	r3,40(sp)
    8f44:	19400208 	cmpgei	r5,r3,8
    8f48:	283ff226 	beq	r5,zero,8f14 <___vfiprintf_internal_r+0xc40>
    8f4c:	d9800904 	addi	r6,sp,36
    8f50:	900b883a 	mov	r5,r18
    8f54:	9809883a 	mov	r4,r19
    8f58:	10006326 	beq	r2,zero,90e8 <___vfiprintf_internal_r+0xe14>
    8f5c:	d9c00515 	stw	r7,20(sp)
    8f60:	db000215 	stw	r12,8(sp)
    8f64:	da400115 	stw	r9,4(sp)
    8f68:	00081c80 	call	81c8 <__sprint_r.part.0>
    8f6c:	103dac1e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8f70:	db000217 	ldw	r12,8(sp)
    8f74:	d9000a17 	ldw	r4,40(sp)
    8f78:	d8800b17 	ldw	r2,44(sp)
    8f7c:	633ffc04 	addi	r12,r12,-16
    8f80:	60c00448 	cmpgei	r3,r12,17
    8f84:	8811883a 	mov	r8,r17
    8f88:	21800044 	addi	r6,r4,1
    8f8c:	d9c00517 	ldw	r7,20(sp)
    8f90:	03400404 	movi	r13,16
    8f94:	da400117 	ldw	r9,4(sp)
    8f98:	183fe41e 	bne	r3,zero,8f2c <___vfiprintf_internal_r+0xc58>
    8f9c:	43400204 	addi	r13,r8,8
    8fa0:	1305883a 	add	r2,r2,r12
    8fa4:	41c00015 	stw	r7,0(r8)
    8fa8:	43000115 	stw	r12,4(r8)
    8fac:	d8800b15 	stw	r2,44(sp)
    8fb0:	d9800a15 	stw	r6,40(sp)
    8fb4:	30c00208 	cmpgei	r3,r6,8
    8fb8:	1800e226 	beq	r3,zero,9344 <___vfiprintf_internal_r+0x1070>
    8fbc:	10015726 	beq	r2,zero,951c <___vfiprintf_internal_r+0x1248>
    8fc0:	d9800904 	addi	r6,sp,36
    8fc4:	900b883a 	mov	r5,r18
    8fc8:	9809883a 	mov	r4,r19
    8fcc:	da400115 	stw	r9,4(sp)
    8fd0:	00081c80 	call	81c8 <__sprint_r.part.0>
    8fd4:	103d921e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    8fd8:	da400117 	ldw	r9,4(sp)
    8fdc:	d9000a17 	ldw	r4,40(sp)
    8fe0:	d8800b17 	ldw	r2,44(sp)
    8fe4:	4d93c83a 	sub	r9,r9,r22
    8fe8:	d8c01804 	addi	r3,sp,96
    8fec:	21400044 	addi	r5,r4,1
    8ff0:	8811883a 	mov	r8,r17
    8ff4:	027ede0e 	bge	zero,r9,8b70 <___vfiprintf_internal_r+0x89c>
    8ff8:	49800450 	cmplti	r6,r9,17
    8ffc:	01c00074 	movhi	r7,1
    9000:	3001431e 	bne	r6,zero,9510 <___vfiprintf_internal_r+0x123c>
    9004:	39c01504 	addi	r7,r7,84
    9008:	03000404 	movi	r12,16
    900c:	00000606 	br	9028 <___vfiprintf_internal_r+0xd54>
    9010:	21400084 	addi	r5,r4,2
    9014:	42000204 	addi	r8,r8,8
    9018:	1809883a 	mov	r4,r3
    901c:	4a7ffc04 	addi	r9,r9,-16
    9020:	48c00448 	cmpgei	r3,r9,17
    9024:	18001a26 	beq	r3,zero,9090 <___vfiprintf_internal_r+0xdbc>
    9028:	20c00044 	addi	r3,r4,1
    902c:	10800404 	addi	r2,r2,16
    9030:	41c00015 	stw	r7,0(r8)
    9034:	43000115 	stw	r12,4(r8)
    9038:	d8800b15 	stw	r2,44(sp)
    903c:	d8c00a15 	stw	r3,40(sp)
    9040:	19400208 	cmpgei	r5,r3,8
    9044:	283ff226 	beq	r5,zero,9010 <___vfiprintf_internal_r+0xd3c>
    9048:	d9800904 	addi	r6,sp,36
    904c:	900b883a 	mov	r5,r18
    9050:	9809883a 	mov	r4,r19
    9054:	10001a26 	beq	r2,zero,90c0 <___vfiprintf_internal_r+0xdec>
    9058:	d9c00215 	stw	r7,8(sp)
    905c:	da400115 	stw	r9,4(sp)
    9060:	00081c80 	call	81c8 <__sprint_r.part.0>
    9064:	103d6e1e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    9068:	da400117 	ldw	r9,4(sp)
    906c:	d9000a17 	ldw	r4,40(sp)
    9070:	d8800b17 	ldw	r2,44(sp)
    9074:	4a7ffc04 	addi	r9,r9,-16
    9078:	48c00448 	cmpgei	r3,r9,17
    907c:	8811883a 	mov	r8,r17
    9080:	21400044 	addi	r5,r4,1
    9084:	d9c00217 	ldw	r7,8(sp)
    9088:	03000404 	movi	r12,16
    908c:	183fe61e 	bne	r3,zero,9028 <___vfiprintf_internal_r+0xd54>
    9090:	41000204 	addi	r4,r8,8
    9094:	1245883a 	add	r2,r2,r9
    9098:	41c00015 	stw	r7,0(r8)
    909c:	42400115 	stw	r9,4(r8)
    90a0:	d8800b15 	stw	r2,44(sp)
    90a4:	d9400a15 	stw	r5,40(sp)
    90a8:	28c00208 	cmpgei	r3,r5,8
    90ac:	1800721e 	bne	r3,zero,9278 <___vfiprintf_internal_r+0xfa4>
    90b0:	29400044 	addi	r5,r5,1
    90b4:	20c00204 	addi	r3,r4,8
    90b8:	2011883a 	mov	r8,r4
    90bc:	003eac06 	br	8b70 <___vfiprintf_internal_r+0x89c>
    90c0:	01400044 	movi	r5,1
    90c4:	0009883a 	mov	r4,zero
    90c8:	8811883a 	mov	r8,r17
    90cc:	003fd306 	br	901c <___vfiprintf_internal_r+0xd48>
    90d0:	d9800904 	addi	r6,sp,36
    90d4:	900b883a 	mov	r5,r18
    90d8:	9809883a 	mov	r4,r19
    90dc:	00081c80 	call	81c8 <__sprint_r.part.0>
    90e0:	103ebc26 	beq	r2,zero,8bd4 <___vfiprintf_internal_r+0x900>
    90e4:	003d4e06 	br	8620 <___vfiprintf_internal_r+0x34c>
    90e8:	01800044 	movi	r6,1
    90ec:	0009883a 	mov	r4,zero
    90f0:	8811883a 	mov	r8,r17
    90f4:	003f8a06 	br	8f20 <___vfiprintf_internal_r+0xc4c>
    90f8:	10007026 	beq	r2,zero,92bc <___vfiprintf_internal_r+0xfe8>
    90fc:	d9800904 	addi	r6,sp,36
    9100:	900b883a 	mov	r5,r18
    9104:	9809883a 	mov	r4,r19
    9108:	da400515 	stw	r9,20(sp)
    910c:	db000215 	stw	r12,8(sp)
    9110:	db400115 	stw	r13,4(sp)
    9114:	00081c80 	call	81c8 <__sprint_r.part.0>
    9118:	103d411e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    911c:	d9000a17 	ldw	r4,40(sp)
    9120:	d8800b17 	ldw	r2,44(sp)
    9124:	d8c01804 	addi	r3,sp,96
    9128:	21400044 	addi	r5,r4,1
    912c:	8811883a 	mov	r8,r17
    9130:	da400517 	ldw	r9,20(sp)
    9134:	db000217 	ldw	r12,8(sp)
    9138:	db400117 	ldw	r13,4(sp)
    913c:	003e6f06 	br	8afc <___vfiprintf_internal_r+0x828>
    9140:	d8800884 	addi	r2,sp,34
    9144:	d8801615 	stw	r2,88(sp)
    9148:	00800084 	movi	r2,2
    914c:	d8801715 	stw	r2,92(sp)
    9150:	d8c01804 	addi	r3,sp,96
    9154:	01400044 	movi	r5,1
    9158:	1811883a 	mov	r8,r3
    915c:	2809883a 	mov	r4,r5
    9160:	21400044 	addi	r5,r4,1
    9164:	40c00204 	addi	r3,r8,8
    9168:	003e7d06 	br	8b60 <___vfiprintf_internal_r+0x88c>
    916c:	a019883a 	mov	r12,r20
    9170:	003f0506 	br	8d88 <___vfiprintf_internal_r+0xab4>
    9174:	19400450 	cmplti	r5,r3,17
    9178:	01c00074 	movhi	r7,1
    917c:	2801031e 	bne	r5,zero,958c <___vfiprintf_internal_r+0x12b8>
    9180:	39c01904 	addi	r7,r7,100
    9184:	03800404 	movi	r14,16
    9188:	00000706 	br	91a8 <___vfiprintf_internal_r+0xed4>
    918c:	23c00084 	addi	r15,r4,2
    9190:	42000204 	addi	r8,r8,8
    9194:	3009883a 	mov	r4,r6
    9198:	18fffc04 	addi	r3,r3,-16
    919c:	19400448 	cmpgei	r5,r3,17
    91a0:	28002026 	beq	r5,zero,9224 <___vfiprintf_internal_r+0xf50>
    91a4:	21800044 	addi	r6,r4,1
    91a8:	10800404 	addi	r2,r2,16
    91ac:	41c00015 	stw	r7,0(r8)
    91b0:	43800115 	stw	r14,4(r8)
    91b4:	d8800b15 	stw	r2,44(sp)
    91b8:	d9800a15 	stw	r6,40(sp)
    91bc:	31400208 	cmpgei	r5,r6,8
    91c0:	283ff226 	beq	r5,zero,918c <___vfiprintf_internal_r+0xeb8>
    91c4:	d9800904 	addi	r6,sp,36
    91c8:	900b883a 	mov	r5,r18
    91cc:	9809883a 	mov	r4,r19
    91d0:	10001f26 	beq	r2,zero,9250 <___vfiprintf_internal_r+0xf7c>
    91d4:	d9c00715 	stw	r7,28(sp)
    91d8:	d8c00615 	stw	r3,24(sp)
    91dc:	da400515 	stw	r9,20(sp)
    91e0:	db000215 	stw	r12,8(sp)
    91e4:	db400115 	stw	r13,4(sp)
    91e8:	00081c80 	call	81c8 <__sprint_r.part.0>
    91ec:	103d0c1e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    91f0:	d8c00617 	ldw	r3,24(sp)
    91f4:	d9000a17 	ldw	r4,40(sp)
    91f8:	d8800b17 	ldw	r2,44(sp)
    91fc:	18fffc04 	addi	r3,r3,-16
    9200:	19400448 	cmpgei	r5,r3,17
    9204:	8811883a 	mov	r8,r17
    9208:	23c00044 	addi	r15,r4,1
    920c:	d9c00717 	ldw	r7,28(sp)
    9210:	03800404 	movi	r14,16
    9214:	da400517 	ldw	r9,20(sp)
    9218:	db000217 	ldw	r12,8(sp)
    921c:	db400117 	ldw	r13,4(sp)
    9220:	283fe01e 	bne	r5,zero,91a4 <___vfiprintf_internal_r+0xed0>
    9224:	10c5883a 	add	r2,r2,r3
    9228:	40c00115 	stw	r3,4(r8)
    922c:	41c00015 	stw	r7,0(r8)
    9230:	d8800b15 	stw	r2,44(sp)
    9234:	dbc00a15 	stw	r15,40(sp)
    9238:	78c00208 	cmpgei	r3,r15,8
    923c:	18002c1e 	bne	r3,zero,92f0 <___vfiprintf_internal_r+0x101c>
    9240:	42000204 	addi	r8,r8,8
    9244:	79400044 	addi	r5,r15,1
    9248:	7809883a 	mov	r4,r15
    924c:	003e1b06 	br	8abc <___vfiprintf_internal_r+0x7e8>
    9250:	0009883a 	mov	r4,zero
    9254:	03c00044 	movi	r15,1
    9258:	8811883a 	mov	r8,r17
    925c:	003fce06 	br	9198 <___vfiprintf_internal_r+0xec4>
    9260:	8540010e 	bge	r16,r21,9268 <___vfiprintf_internal_r+0xf94>
    9264:	a821883a 	mov	r16,r21
    9268:	d8800017 	ldw	r2,0(sp)
    926c:	1405883a 	add	r2,r2,r16
    9270:	d8800015 	stw	r2,0(sp)
    9274:	003e5706 	br	8bd4 <___vfiprintf_internal_r+0x900>
    9278:	10008126 	beq	r2,zero,9480 <___vfiprintf_internal_r+0x11ac>
    927c:	d9800904 	addi	r6,sp,36
    9280:	900b883a 	mov	r5,r18
    9284:	9809883a 	mov	r4,r19
    9288:	00081c80 	call	81c8 <__sprint_r.part.0>
    928c:	103ce41e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    9290:	d9400a17 	ldw	r5,40(sp)
    9294:	d8800b17 	ldw	r2,44(sp)
    9298:	d8c01804 	addi	r3,sp,96
    929c:	29400044 	addi	r5,r5,1
    92a0:	8811883a 	mov	r8,r17
    92a4:	003e3206 	br	8b70 <___vfiprintf_internal_r+0x89c>
    92a8:	d8000a15 	stw	zero,40(sp)
    92ac:	8811883a 	mov	r8,r17
    92b0:	003c4a06 	br	83dc <___vfiprintf_internal_r+0x108>
    92b4:	002d883a 	mov	r22,zero
    92b8:	003d4406 	br	87cc <___vfiprintf_internal_r+0x4f8>
    92bc:	68003326 	beq	r13,zero,938c <___vfiprintf_internal_r+0x10b8>
    92c0:	d8800884 	addi	r2,sp,34
    92c4:	d8801615 	stw	r2,88(sp)
    92c8:	00800084 	movi	r2,2
    92cc:	d8801715 	stw	r2,92(sp)
    92d0:	da001804 	addi	r8,sp,96
    92d4:	01000044 	movi	r4,1
    92d8:	003fa106 	br	9160 <___vfiprintf_internal_r+0xe8c>
    92dc:	d8c01804 	addi	r3,sp,96
    92e0:	01400044 	movi	r5,1
    92e4:	0009883a 	mov	r4,zero
    92e8:	8811883a 	mov	r8,r17
    92ec:	003e1c06 	br	8b60 <___vfiprintf_internal_r+0x88c>
    92f0:	10003826 	beq	r2,zero,93d4 <___vfiprintf_internal_r+0x1100>
    92f4:	d9800904 	addi	r6,sp,36
    92f8:	900b883a 	mov	r5,r18
    92fc:	9809883a 	mov	r4,r19
    9300:	da400515 	stw	r9,20(sp)
    9304:	db000215 	stw	r12,8(sp)
    9308:	db400115 	stw	r13,4(sp)
    930c:	00081c80 	call	81c8 <__sprint_r.part.0>
    9310:	103cc31e 	bne	r2,zero,8620 <___vfiprintf_internal_r+0x34c>
    9314:	d9000a17 	ldw	r4,40(sp)
    9318:	d8800b17 	ldw	r2,44(sp)
    931c:	8811883a 	mov	r8,r17
    9320:	21400044 	addi	r5,r4,1
    9324:	da400517 	ldw	r9,20(sp)
    9328:	db000217 	ldw	r12,8(sp)
    932c:	db400117 	ldw	r13,4(sp)
    9330:	003de206 	br	8abc <___vfiprintf_internal_r+0x7e8>
    9334:	e029883a 	mov	r20,fp
    9338:	003c2d06 	br	83f0 <___vfiprintf_internal_r+0x11c>
    933c:	882f883a 	mov	r23,r17
    9340:	003ecf06 	br	8e80 <___vfiprintf_internal_r+0xbac>
    9344:	31400044 	addi	r5,r6,1
    9348:	68c00204 	addi	r3,r13,8
    934c:	3009883a 	mov	r4,r6
    9350:	6811883a 	mov	r8,r13
    9354:	003e0406 	br	8b68 <___vfiprintf_internal_r+0x894>
    9358:	00c00c04 	movi	r3,48
    935c:	d88008c5 	stb	r2,35(sp)
    9360:	d8c00885 	stb	r3,34(sp)
    9364:	63000094 	ori	r12,r12,2
    9368:	00800084 	movi	r2,2
    936c:	003d3606 	br	8848 <___vfiprintf_internal_r+0x574>
    9370:	d9400017 	ldw	r5,0(sp)
    9374:	20800017 	ldw	r2,0(r4)
    9378:	d8c00315 	stw	r3,12(sp)
    937c:	2809d7fa 	srai	r4,r5,31
    9380:	11400015 	stw	r5,0(r2)
    9384:	11000115 	stw	r4,4(r2)
    9388:	003bfb06 	br	8378 <___vfiprintf_internal_r+0xa4>
    938c:	0009883a 	mov	r4,zero
    9390:	d8c01804 	addi	r3,sp,96
    9394:	01400044 	movi	r5,1
    9398:	8811883a 	mov	r8,r17
    939c:	003df006 	br	8b60 <___vfiprintf_internal_r+0x88c>
    93a0:	0421c83a 	sub	r16,zero,r16
    93a4:	ddc00315 	stw	r23,12(sp)
    93a8:	003cdb06 	br	8718 <___vfiprintf_internal_r+0x444>
    93ac:	b809883a 	mov	r4,r23
    93b0:	da000215 	stw	r8,8(sp)
    93b4:	db000115 	stw	r12,4(sp)
    93b8:	0001adc0 	call	1adc <strlen>
    93bc:	102d883a 	mov	r22,r2
    93c0:	102b883a 	mov	r21,r2
    93c4:	dd000315 	stw	r20,12(sp)
    93c8:	db000117 	ldw	r12,4(sp)
    93cc:	da000217 	ldw	r8,8(sp)
    93d0:	003dad06 	br	8a88 <___vfiprintf_internal_r+0x7b4>
    93d4:	d8c00847 	ldb	r3,33(sp)
    93d8:	1800551e 	bne	r3,zero,9530 <___vfiprintf_internal_r+0x125c>
    93dc:	683f581e 	bne	r13,zero,9140 <___vfiprintf_internal_r+0xe6c>
    93e0:	0009883a 	mov	r4,zero
    93e4:	d8c01804 	addi	r3,sp,96
    93e8:	01400044 	movi	r5,1
    93ec:	8811883a 	mov	r8,r17
    93f0:	003ddd06 	br	8b68 <___vfiprintf_internal_r+0x894>
    93f4:	d8800317 	ldw	r2,12(sp)
    93f8:	10800017 	ldw	r2,0(r2)
    93fc:	d8c00315 	stw	r3,12(sp)
    9400:	d8c00017 	ldw	r3,0(sp)
    9404:	10c00015 	stw	r3,0(r2)
    9408:	003bdb06 	br	8378 <___vfiprintf_internal_r+0xa4>
    940c:	882f883a 	mov	r23,r17
    9410:	00000206 	br	941c <___vfiprintf_internal_r+0x1148>
    9414:	102b883a 	mov	r21,r2
    9418:	182d883a 	mov	r22,r3
    941c:	a809883a 	mov	r4,r21
    9420:	b00b883a 	mov	r5,r22
    9424:	01800284 	movi	r6,10
    9428:	000f883a 	mov	r7,zero
    942c:	db400615 	stw	r13,24(sp)
    9430:	da000515 	stw	r8,20(sp)
    9434:	da400215 	stw	r9,8(sp)
    9438:	db000115 	stw	r12,4(sp)
    943c:	000a4b80 	call	a4b8 <__umoddi3>
    9440:	10800c04 	addi	r2,r2,48
    9444:	bdffffc4 	addi	r23,r23,-1
    9448:	a809883a 	mov	r4,r21
    944c:	b00b883a 	mov	r5,r22
    9450:	b8800005 	stb	r2,0(r23)
    9454:	01800284 	movi	r6,10
    9458:	000f883a 	mov	r7,zero
    945c:	0009e9c0 	call	9e9c <__udivdi3>
    9460:	db000117 	ldw	r12,4(sp)
    9464:	da400217 	ldw	r9,8(sp)
    9468:	da000517 	ldw	r8,20(sp)
    946c:	db400617 	ldw	r13,24(sp)
    9470:	b03fe81e 	bne	r22,zero,9414 <___vfiprintf_internal_r+0x1140>
    9474:	ad4002a8 	cmpgeui	r21,r21,10
    9478:	a83fe61e 	bne	r21,zero,9414 <___vfiprintf_internal_r+0x1140>
    947c:	003e9606 	br	8ed8 <___vfiprintf_internal_r+0xc04>
    9480:	00c00044 	movi	r3,1
    9484:	d8c00a15 	stw	r3,40(sp)
    9488:	b005883a 	mov	r2,r22
    948c:	ddc01615 	stw	r23,88(sp)
    9490:	dd801715 	stw	r22,92(sp)
    9494:	dd800b15 	stw	r22,44(sp)
    9498:	d8c01804 	addi	r3,sp,96
    949c:	003dc306 	br	8bac <___vfiprintf_internal_r+0x8d8>
    94a0:	10c00060 	cmpeqi	r3,r2,1
    94a4:	a019883a 	mov	r12,r20
    94a8:	183e3926 	beq	r3,zero,8d90 <___vfiprintf_internal_r+0xabc>
    94ac:	003e6f06 	br	8e6c <___vfiprintf_internal_r+0xb98>
    94b0:	e0800043 	ldbu	r2,1(fp)
    94b4:	63000814 	ori	r12,r12,32
    94b8:	e7000044 	addi	fp,fp,1
    94bc:	10803fcc 	andi	r2,r2,255
    94c0:	1080201c 	xori	r2,r2,128
    94c4:	10bfe004 	addi	r2,r2,-128
    94c8:	003bd106 	br	8410 <___vfiprintf_internal_r+0x13c>
    94cc:	488001f0 	cmpltui	r2,r9,7
    94d0:	482d883a 	mov	r22,r9
    94d4:	1000011e 	bne	r2,zero,94dc <___vfiprintf_internal_r+0x1208>
    94d8:	05800184 	movi	r22,6
    94dc:	05c00074 	movhi	r23,1
    94e0:	b02b883a 	mov	r21,r22
    94e4:	dd000315 	stw	r20,12(sp)
    94e8:	bdff1d04 	addi	r23,r23,-908
    94ec:	003d6606 	br	8a88 <___vfiprintf_internal_r+0x7b4>
    94f0:	d8800315 	stw	r2,12(sp)
    94f4:	002d883a 	mov	r22,zero
    94f8:	00800044 	movi	r2,1
    94fc:	003cd206 	br	8848 <___vfiprintf_internal_r+0x574>
    9500:	d8800315 	stw	r2,12(sp)
    9504:	002d883a 	mov	r22,zero
    9508:	0005883a 	mov	r2,zero
    950c:	003cce06 	br	8848 <___vfiprintf_internal_r+0x574>
    9510:	1809883a 	mov	r4,r3
    9514:	39c01504 	addi	r7,r7,84
    9518:	003ede06 	br	9094 <___vfiprintf_internal_r+0xdc0>
    951c:	d8c01804 	addi	r3,sp,96
    9520:	01400044 	movi	r5,1
    9524:	0009883a 	mov	r4,zero
    9528:	8811883a 	mov	r8,r17
    952c:	003d8e06 	br	8b68 <___vfiprintf_internal_r+0x894>
    9530:	d8800844 	addi	r2,sp,33
    9534:	d8801615 	stw	r2,88(sp)
    9538:	00800044 	movi	r2,1
    953c:	d8801715 	stw	r2,92(sp)
    9540:	d8c01804 	addi	r3,sp,96
    9544:	01400044 	movi	r5,1
    9548:	003d6806 	br	8aec <___vfiprintf_internal_r+0x818>
    954c:	d9800845 	stb	r6,33(sp)
    9550:	003c5306 	br	86a0 <___vfiprintf_internal_r+0x3cc>
    9554:	482b883a 	mov	r21,r9
    9558:	dd000315 	stw	r20,12(sp)
    955c:	482d883a 	mov	r22,r9
    9560:	003d4906 	br	8a88 <___vfiprintf_internal_r+0x7b4>
    9564:	d9800845 	stb	r6,33(sp)
    9568:	003cd906 	br	88d0 <___vfiprintf_internal_r+0x5fc>
    956c:	d9800845 	stb	r6,33(sp)
    9570:	003ce906 	br	8918 <___vfiprintf_internal_r+0x644>
    9574:	d9800845 	stb	r6,33(sp)
    9578:	003c8a06 	br	87a4 <___vfiprintf_internal_r+0x4d0>
    957c:	d9800845 	stb	r6,33(sp)
    9580:	003dd206 	br	8ccc <___vfiprintf_internal_r+0x9f8>
    9584:	d9800845 	stb	r6,33(sp)
    9588:	003ddd06 	br	8d00 <___vfiprintf_internal_r+0xa2c>
    958c:	301f883a 	mov	r15,r6
    9590:	39c01904 	addi	r7,r7,100
    9594:	003f2306 	br	9224 <___vfiprintf_internal_r+0xf50>
    9598:	d9800845 	stb	r6,33(sp)
    959c:	003d1606 	br	89f8 <___vfiprintf_internal_r+0x724>
    95a0:	d9800845 	stb	r6,33(sp)
    95a4:	003d0406 	br	89b8 <___vfiprintf_internal_r+0x6e4>
    95a8:	d9800845 	stb	r6,33(sp)
    95ac:	003cb806 	br	8890 <___vfiprintf_internal_r+0x5bc>
    95b0:	d9800845 	stb	r6,33(sp)
    95b4:	003ddf06 	br	8d34 <___vfiprintf_internal_r+0xa60>
    95b8:	29800044 	addi	r6,r5,1
    95bc:	39c01904 	addi	r7,r7,100
    95c0:	003db106 	br	8c88 <___vfiprintf_internal_r+0x9b4>
    95c4:	181b883a 	mov	r13,r3
    95c8:	280d883a 	mov	r6,r5
    95cc:	39c01504 	addi	r7,r7,84
    95d0:	003e7306 	br	8fa0 <___vfiprintf_internal_r+0xccc>
    95d4:	00bfffc4 	movi	r2,-1
    95d8:	d8800015 	stw	r2,0(sp)
    95dc:	003c1306 	br	862c <___vfiprintf_internal_r+0x358>
    95e0:	d8800317 	ldw	r2,12(sp)
    95e4:	12400017 	ldw	r9,0(r2)
    95e8:	15c00104 	addi	r23,r2,4
    95ec:	4800010e 	bge	r9,zero,95f4 <___vfiprintf_internal_r+0x1320>
    95f0:	027fffc4 	movi	r9,-1
    95f4:	e0800043 	ldbu	r2,1(fp)
    95f8:	ddc00315 	stw	r23,12(sp)
    95fc:	1839883a 	mov	fp,r3
    9600:	10803fcc 	andi	r2,r2,255
    9604:	1080201c 	xori	r2,r2,128
    9608:	10bfe004 	addi	r2,r2,-128
    960c:	003b8006 	br	8410 <___vfiprintf_internal_r+0x13c>

00009610 <__vfiprintf_internal>:
    9610:	00800074 	movhi	r2,1
    9614:	300f883a 	mov	r7,r6
    9618:	280d883a 	mov	r6,r5
    961c:	200b883a 	mov	r5,r4
    9620:	11077c17 	ldw	r4,7664(r2)
    9624:	00082d41 	jmpi	82d4 <___vfiprintf_internal_r>

00009628 <__sbprintf>:
    9628:	2880030b 	ldhu	r2,12(r5)
    962c:	2b001917 	ldw	r12,100(r5)
    9630:	2ac0038b 	ldhu	r11,14(r5)
    9634:	2a800717 	ldw	r10,28(r5)
    9638:	2a400917 	ldw	r9,36(r5)
    963c:	defee204 	addi	sp,sp,-1144
    9640:	da001a04 	addi	r8,sp,104
    9644:	00c10004 	movi	r3,1024
    9648:	dc011a15 	stw	r16,1128(sp)
    964c:	10bfff4c 	andi	r2,r2,65533
    9650:	2821883a 	mov	r16,r5
    9654:	d80b883a 	mov	r5,sp
    9658:	dc811c15 	stw	r18,1136(sp)
    965c:	dc411b15 	stw	r17,1132(sp)
    9660:	dfc11d15 	stw	ra,1140(sp)
    9664:	2025883a 	mov	r18,r4
    9668:	d880030d 	sth	r2,12(sp)
    966c:	db001915 	stw	r12,100(sp)
    9670:	dac0038d 	sth	r11,14(sp)
    9674:	da800715 	stw	r10,28(sp)
    9678:	da400915 	stw	r9,36(sp)
    967c:	da000015 	stw	r8,0(sp)
    9680:	da000415 	stw	r8,16(sp)
    9684:	d8c00215 	stw	r3,8(sp)
    9688:	d8c00515 	stw	r3,20(sp)
    968c:	d8000615 	stw	zero,24(sp)
    9690:	00082d40 	call	82d4 <___vfiprintf_internal_r>
    9694:	1023883a 	mov	r17,r2
    9698:	10000d0e 	bge	r2,zero,96d0 <__sbprintf+0xa8>
    969c:	d880030b 	ldhu	r2,12(sp)
    96a0:	1080100c 	andi	r2,r2,64
    96a4:	10000326 	beq	r2,zero,96b4 <__sbprintf+0x8c>
    96a8:	8080030b 	ldhu	r2,12(r16)
    96ac:	10801014 	ori	r2,r2,64
    96b0:	8080030d 	sth	r2,12(r16)
    96b4:	8805883a 	mov	r2,r17
    96b8:	dfc11d17 	ldw	ra,1140(sp)
    96bc:	dc811c17 	ldw	r18,1136(sp)
    96c0:	dc411b17 	ldw	r17,1132(sp)
    96c4:	dc011a17 	ldw	r16,1128(sp)
    96c8:	dec11e04 	addi	sp,sp,1144
    96cc:	f800283a 	ret
    96d0:	d80b883a 	mov	r5,sp
    96d4:	9009883a 	mov	r4,r18
    96d8:	0005e8c0 	call	5e8c <_fflush_r>
    96dc:	103fef26 	beq	r2,zero,969c <__sbprintf+0x74>
    96e0:	047fffc4 	movi	r17,-1
    96e4:	003fed06 	br	969c <__sbprintf+0x74>

000096e8 <_calloc_r>:
    96e8:	defffe04 	addi	sp,sp,-8
    96ec:	2805883a 	mov	r2,r5
    96f0:	dc000015 	stw	r16,0(sp)
    96f4:	300b883a 	mov	r5,r6
    96f8:	2021883a 	mov	r16,r4
    96fc:	1009883a 	mov	r4,r2
    9700:	dfc00115 	stw	ra,4(sp)
    9704:	000ac380 	call	ac38 <__mulsi3>
    9708:	100b883a 	mov	r5,r2
    970c:	8009883a 	mov	r4,r16
    9710:	0000b4c0 	call	b4c <_malloc_r>
    9714:	1007883a 	mov	r3,r2
    9718:	10000c26 	beq	r2,zero,974c <_calloc_r+0x64>
    971c:	11bfff17 	ldw	r6,-4(r2)
    9720:	00bfff04 	movi	r2,-4
    9724:	308c703a 	and	r6,r6,r2
    9728:	31bfff04 	addi	r6,r6,-4
    972c:	30800968 	cmpgeui	r2,r6,37
    9730:	1000151e 	bne	r2,zero,9788 <_calloc_r+0xa0>
    9734:	30800530 	cmpltui	r2,r6,20
    9738:	10000926 	beq	r2,zero,9760 <_calloc_r+0x78>
    973c:	1805883a 	mov	r2,r3
    9740:	10000015 	stw	zero,0(r2)
    9744:	10000115 	stw	zero,4(r2)
    9748:	10000215 	stw	zero,8(r2)
    974c:	1805883a 	mov	r2,r3
    9750:	dfc00117 	ldw	ra,4(sp)
    9754:	dc000017 	ldw	r16,0(sp)
    9758:	dec00204 	addi	sp,sp,8
    975c:	f800283a 	ret
    9760:	18000015 	stw	zero,0(r3)
    9764:	18000115 	stw	zero,4(r3)
    9768:	30800728 	cmpgeui	r2,r6,28
    976c:	10000b26 	beq	r2,zero,979c <_calloc_r+0xb4>
    9770:	18000215 	stw	zero,8(r3)
    9774:	18000315 	stw	zero,12(r3)
    9778:	31800920 	cmpeqi	r6,r6,36
    977c:	3000091e 	bne	r6,zero,97a4 <_calloc_r+0xbc>
    9780:	18800404 	addi	r2,r3,16
    9784:	003fee06 	br	9740 <_calloc_r+0x58>
    9788:	1809883a 	mov	r4,r3
    978c:	000b883a 	mov	r5,zero
    9790:	00015280 	call	1528 <memset>
    9794:	1007883a 	mov	r3,r2
    9798:	003fec06 	br	974c <_calloc_r+0x64>
    979c:	18800204 	addi	r2,r3,8
    97a0:	003fe706 	br	9740 <_calloc_r+0x58>
    97a4:	18000415 	stw	zero,16(r3)
    97a8:	18800604 	addi	r2,r3,24
    97ac:	18000515 	stw	zero,20(r3)
    97b0:	003fe306 	br	9740 <_calloc_r+0x58>

000097b4 <__fputwc>:
    97b4:	defff904 	addi	sp,sp,-28
    97b8:	dcc00415 	stw	r19,16(sp)
    97bc:	dc800315 	stw	r18,12(sp)
    97c0:	dc000115 	stw	r16,4(sp)
    97c4:	dfc00615 	stw	ra,24(sp)
    97c8:	dd000515 	stw	r20,20(sp)
    97cc:	dc400215 	stw	r17,8(sp)
    97d0:	2025883a 	mov	r18,r4
    97d4:	2827883a 	mov	r19,r5
    97d8:	3021883a 	mov	r16,r6
    97dc:	0009acc0 	call	9acc <__locale_mb_cur_max>
    97e0:	10800058 	cmpnei	r2,r2,1
    97e4:	1000071e 	bne	r2,zero,9804 <__fputwc+0x50>
    97e8:	98bfffc4 	addi	r2,r19,-1
    97ec:	10803fe8 	cmpgeui	r2,r2,255
    97f0:	1000041e 	bne	r2,zero,9804 <__fputwc+0x50>
    97f4:	980b883a 	mov	r5,r19
    97f8:	dcc000c5 	stb	r19,3(sp)
    97fc:	05000044 	movi	r20,1
    9800:	00000a06 	br	982c <__fputwc+0x78>
    9804:	81c01704 	addi	r7,r16,92
    9808:	980d883a 	mov	r6,r19
    980c:	d94000c4 	addi	r5,sp,3
    9810:	9009883a 	mov	r4,r18
    9814:	0009d700 	call	9d70 <_wcrtomb_r>
    9818:	1029883a 	mov	r20,r2
    981c:	10bfffd8 	cmpnei	r2,r2,-1
    9820:	10003426 	beq	r2,zero,98f4 <__fputwc+0x140>
    9824:	a0002926 	beq	r20,zero,98cc <__fputwc+0x118>
    9828:	d94000c3 	ldbu	r5,3(sp)
    982c:	0023883a 	mov	r17,zero
    9830:	00000a06 	br	985c <__fputwc+0xa8>
    9834:	80800017 	ldw	r2,0(r16)
    9838:	11400005 	stb	r5,0(r2)
    983c:	80800017 	ldw	r2,0(r16)
    9840:	10800044 	addi	r2,r2,1
    9844:	80800015 	stw	r2,0(r16)
    9848:	8c400044 	addi	r17,r17,1
    984c:	d88000c4 	addi	r2,sp,3
    9850:	1445883a 	add	r2,r2,r17
    9854:	8d001d2e 	bgeu	r17,r20,98cc <__fputwc+0x118>
    9858:	11400003 	ldbu	r5,0(r2)
    985c:	80800217 	ldw	r2,8(r16)
    9860:	10bfffc4 	addi	r2,r2,-1
    9864:	80800215 	stw	r2,8(r16)
    9868:	103ff20e 	bge	r2,zero,9834 <__fputwc+0x80>
    986c:	80c00617 	ldw	r3,24(r16)
    9870:	10c01016 	blt	r2,r3,98b4 <__fputwc+0x100>
    9874:	80800017 	ldw	r2,0(r16)
    9878:	11400005 	stb	r5,0(r2)
    987c:	80800017 	ldw	r2,0(r16)
    9880:	10c00003 	ldbu	r3,0(r2)
    9884:	10800044 	addi	r2,r2,1
    9888:	18c002a0 	cmpeqi	r3,r3,10
    988c:	183fed26 	beq	r3,zero,9844 <__fputwc+0x90>
    9890:	800d883a 	mov	r6,r16
    9894:	01400284 	movi	r5,10
    9898:	9009883a 	mov	r4,r18
    989c:	0009c140 	call	9c14 <__swbuf_r>
    98a0:	10bfffe0 	cmpeqi	r2,r2,-1
    98a4:	10803fcc 	andi	r2,r2,255
    98a8:	103fe726 	beq	r2,zero,9848 <__fputwc+0x94>
    98ac:	053fffc4 	movi	r20,-1
    98b0:	00000706 	br	98d0 <__fputwc+0x11c>
    98b4:	29403fcc 	andi	r5,r5,255
    98b8:	800d883a 	mov	r6,r16
    98bc:	9009883a 	mov	r4,r18
    98c0:	0009c140 	call	9c14 <__swbuf_r>
    98c4:	10bfffe0 	cmpeqi	r2,r2,-1
    98c8:	003ff606 	br	98a4 <__fputwc+0xf0>
    98cc:	9829883a 	mov	r20,r19
    98d0:	a005883a 	mov	r2,r20
    98d4:	dfc00617 	ldw	ra,24(sp)
    98d8:	dd000517 	ldw	r20,20(sp)
    98dc:	dcc00417 	ldw	r19,16(sp)
    98e0:	dc800317 	ldw	r18,12(sp)
    98e4:	dc400217 	ldw	r17,8(sp)
    98e8:	dc000117 	ldw	r16,4(sp)
    98ec:	dec00704 	addi	sp,sp,28
    98f0:	f800283a 	ret
    98f4:	8080030b 	ldhu	r2,12(r16)
    98f8:	10801014 	ori	r2,r2,64
    98fc:	8080030d 	sth	r2,12(r16)
    9900:	003ff306 	br	98d0 <__fputwc+0x11c>

00009904 <_fputwc_r>:
    9904:	3080030b 	ldhu	r2,12(r6)
    9908:	10c8000c 	andi	r3,r2,8192
    990c:	1800051e 	bne	r3,zero,9924 <_fputwc_r+0x20>
    9910:	30c01917 	ldw	r3,100(r6)
    9914:	10880014 	ori	r2,r2,8192
    9918:	3080030d 	sth	r2,12(r6)
    991c:	18880014 	ori	r2,r3,8192
    9920:	30801915 	stw	r2,100(r6)
    9924:	00097b41 	jmpi	97b4 <__fputwc>

00009928 <fputwc>:
    9928:	defffc04 	addi	sp,sp,-16
    992c:	00800074 	movhi	r2,1
    9930:	dc000115 	stw	r16,4(sp)
    9934:	14077c17 	ldw	r16,7664(r2)
    9938:	dc400215 	stw	r17,8(sp)
    993c:	dfc00315 	stw	ra,12(sp)
    9940:	2023883a 	mov	r17,r4
    9944:	80000226 	beq	r16,zero,9950 <fputwc+0x28>
    9948:	80800e17 	ldw	r2,56(r16)
    994c:	10001026 	beq	r2,zero,9990 <fputwc+0x68>
    9950:	2880030b 	ldhu	r2,12(r5)
    9954:	10c8000c 	andi	r3,r2,8192
    9958:	1800051e 	bne	r3,zero,9970 <fputwc+0x48>
    995c:	28c01917 	ldw	r3,100(r5)
    9960:	10880014 	ori	r2,r2,8192
    9964:	2880030d 	sth	r2,12(r5)
    9968:	18880014 	ori	r2,r3,8192
    996c:	28801915 	stw	r2,100(r5)
    9970:	280d883a 	mov	r6,r5
    9974:	8009883a 	mov	r4,r16
    9978:	880b883a 	mov	r5,r17
    997c:	dfc00317 	ldw	ra,12(sp)
    9980:	dc400217 	ldw	r17,8(sp)
    9984:	dc000117 	ldw	r16,4(sp)
    9988:	dec00404 	addi	sp,sp,16
    998c:	00097b41 	jmpi	97b4 <__fputwc>
    9990:	8009883a 	mov	r4,r16
    9994:	d9400015 	stw	r5,0(sp)
    9998:	00009ac0 	call	9ac <__sinit>
    999c:	d9400017 	ldw	r5,0(sp)
    99a0:	003feb06 	br	9950 <fputwc+0x28>

000099a4 <_fstat_r>:
    99a4:	defffe04 	addi	sp,sp,-8
    99a8:	2805883a 	mov	r2,r5
    99ac:	dc000015 	stw	r16,0(sp)
    99b0:	300b883a 	mov	r5,r6
    99b4:	2021883a 	mov	r16,r4
    99b8:	1009883a 	mov	r4,r2
    99bc:	00800074 	movhi	r2,1
    99c0:	dfc00115 	stw	ra,4(sp)
    99c4:	100ea715 	stw	zero,15004(r2)
    99c8:	000d71c0 	call	d71c <fstat>
    99cc:	10ffffd8 	cmpnei	r3,r2,-1
    99d0:	18000426 	beq	r3,zero,99e4 <_fstat_r+0x40>
    99d4:	dfc00117 	ldw	ra,4(sp)
    99d8:	dc000017 	ldw	r16,0(sp)
    99dc:	dec00204 	addi	sp,sp,8
    99e0:	f800283a 	ret
    99e4:	00c00074 	movhi	r3,1
    99e8:	18cea717 	ldw	r3,15004(r3)
    99ec:	183ff926 	beq	r3,zero,99d4 <_fstat_r+0x30>
    99f0:	80c00015 	stw	r3,0(r16)
    99f4:	dfc00117 	ldw	ra,4(sp)
    99f8:	dc000017 	ldw	r16,0(sp)
    99fc:	dec00204 	addi	sp,sp,8
    9a00:	f800283a 	ret

00009a04 <_isatty_r>:
    9a04:	defffe04 	addi	sp,sp,-8
    9a08:	dc000015 	stw	r16,0(sp)
    9a0c:	00800074 	movhi	r2,1
    9a10:	2021883a 	mov	r16,r4
    9a14:	2809883a 	mov	r4,r5
    9a18:	dfc00115 	stw	ra,4(sp)
    9a1c:	100ea715 	stw	zero,15004(r2)
    9a20:	000d8140 	call	d814 <isatty>
    9a24:	10ffffd8 	cmpnei	r3,r2,-1
    9a28:	18000426 	beq	r3,zero,9a3c <_isatty_r+0x38>
    9a2c:	dfc00117 	ldw	ra,4(sp)
    9a30:	dc000017 	ldw	r16,0(sp)
    9a34:	dec00204 	addi	sp,sp,8
    9a38:	f800283a 	ret
    9a3c:	00c00074 	movhi	r3,1
    9a40:	18cea717 	ldw	r3,15004(r3)
    9a44:	183ff926 	beq	r3,zero,9a2c <_isatty_r+0x28>
    9a48:	80c00015 	stw	r3,0(r16)
    9a4c:	dfc00117 	ldw	ra,4(sp)
    9a50:	dc000017 	ldw	r16,0(sp)
    9a54:	dec00204 	addi	sp,sp,8
    9a58:	f800283a 	ret

00009a5c <_setlocale_r>:
    9a5c:	30001826 	beq	r6,zero,9ac0 <_setlocale_r+0x64>
    9a60:	01400074 	movhi	r5,1
    9a64:	defffe04 	addi	sp,sp,-8
    9a68:	29401e04 	addi	r5,r5,120
    9a6c:	3009883a 	mov	r4,r6
    9a70:	dc000015 	stw	r16,0(sp)
    9a74:	dfc00115 	stw	ra,4(sp)
    9a78:	3021883a 	mov	r16,r6
    9a7c:	0009b3c0 	call	9b3c <strcmp>
    9a80:	1000061e 	bne	r2,zero,9a9c <_setlocale_r+0x40>
    9a84:	00800074 	movhi	r2,1
    9a88:	10801d04 	addi	r2,r2,116
    9a8c:	dfc00117 	ldw	ra,4(sp)
    9a90:	dc000017 	ldw	r16,0(sp)
    9a94:	dec00204 	addi	sp,sp,8
    9a98:	f800283a 	ret
    9a9c:	01400074 	movhi	r5,1
    9aa0:	29401d04 	addi	r5,r5,116
    9aa4:	8009883a 	mov	r4,r16
    9aa8:	0009b3c0 	call	9b3c <strcmp>
    9aac:	103ff526 	beq	r2,zero,9a84 <_setlocale_r+0x28>
    9ab0:	80800003 	ldbu	r2,0(r16)
    9ab4:	103ff326 	beq	r2,zero,9a84 <_setlocale_r+0x28>
    9ab8:	0005883a 	mov	r2,zero
    9abc:	003ff306 	br	9a8c <_setlocale_r+0x30>
    9ac0:	00800074 	movhi	r2,1
    9ac4:	10801d04 	addi	r2,r2,116
    9ac8:	f800283a 	ret

00009acc <__locale_mb_cur_max>:
    9acc:	00800074 	movhi	r2,1
    9ad0:	1082e307 	ldb	r2,2956(r2)
    9ad4:	f800283a 	ret

00009ad8 <setlocale>:
    9ad8:	00800074 	movhi	r2,1
    9adc:	280d883a 	mov	r6,r5
    9ae0:	200b883a 	mov	r5,r4
    9ae4:	11077c17 	ldw	r4,7664(r2)
    9ae8:	0009a5c1 	jmpi	9a5c <_setlocale_r>

00009aec <_mbtowc_r>:
    9aec:	00800074 	movhi	r2,1
    9af0:	1082d217 	ldw	r2,2888(r2)
    9af4:	1000683a 	jmp	r2

00009af8 <__ascii_mbtowc>:
    9af8:	deffff04 	addi	sp,sp,-4
    9afc:	28000826 	beq	r5,zero,9b20 <__ascii_mbtowc+0x28>
    9b00:	30000926 	beq	r6,zero,9b28 <__ascii_mbtowc+0x30>
    9b04:	38000b26 	beq	r7,zero,9b34 <__ascii_mbtowc+0x3c>
    9b08:	30800003 	ldbu	r2,0(r6)
    9b0c:	28800015 	stw	r2,0(r5)
    9b10:	30800003 	ldbu	r2,0(r6)
    9b14:	1004c03a 	cmpne	r2,r2,zero
    9b18:	dec00104 	addi	sp,sp,4
    9b1c:	f800283a 	ret
    9b20:	d80b883a 	mov	r5,sp
    9b24:	303ff71e 	bne	r6,zero,9b04 <__ascii_mbtowc+0xc>
    9b28:	0005883a 	mov	r2,zero
    9b2c:	dec00104 	addi	sp,sp,4
    9b30:	f800283a 	ret
    9b34:	00bfff84 	movi	r2,-2
    9b38:	003ff706 	br	9b18 <__ascii_mbtowc+0x20>

00009b3c <strcmp>:
    9b3c:	2144b03a 	or	r2,r4,r5
    9b40:	108000cc 	andi	r2,r2,3
    9b44:	1000171e 	bne	r2,zero,9ba4 <strcmp+0x68>
    9b48:	20800017 	ldw	r2,0(r4)
    9b4c:	28c00017 	ldw	r3,0(r5)
    9b50:	10c0141e 	bne	r2,r3,9ba4 <strcmp+0x68>
    9b54:	027fbff4 	movhi	r9,65279
    9b58:	4a7fbfc4 	addi	r9,r9,-257
    9b5c:	1247883a 	add	r3,r2,r9
    9b60:	02202074 	movhi	r8,32897
    9b64:	0084303a 	nor	r2,zero,r2
    9b68:	1884703a 	and	r2,r3,r2
    9b6c:	42202004 	addi	r8,r8,-32640
    9b70:	1204703a 	and	r2,r2,r8
    9b74:	10000226 	beq	r2,zero,9b80 <strcmp+0x44>
    9b78:	00002406 	br	9c0c <strcmp+0xd0>
    9b7c:	1000231e 	bne	r2,zero,9c0c <strcmp+0xd0>
    9b80:	21000104 	addi	r4,r4,4
    9b84:	20c00017 	ldw	r3,0(r4)
    9b88:	29400104 	addi	r5,r5,4
    9b8c:	29800017 	ldw	r6,0(r5)
    9b90:	1a45883a 	add	r2,r3,r9
    9b94:	00ce303a 	nor	r7,zero,r3
    9b98:	11c4703a 	and	r2,r2,r7
    9b9c:	1204703a 	and	r2,r2,r8
    9ba0:	19bff626 	beq	r3,r6,9b7c <strcmp+0x40>
    9ba4:	20800003 	ldbu	r2,0(r4)
    9ba8:	10c03fcc 	andi	r3,r2,255
    9bac:	18c0201c 	xori	r3,r3,128
    9bb0:	18ffe004 	addi	r3,r3,-128
    9bb4:	18000d26 	beq	r3,zero,9bec <strcmp+0xb0>
    9bb8:	29800007 	ldb	r6,0(r5)
    9bbc:	10803fcc 	andi	r2,r2,255
    9bc0:	19800326 	beq	r3,r6,9bd0 <strcmp+0x94>
    9bc4:	00000a06 	br	9bf0 <strcmp+0xb4>
    9bc8:	29800007 	ldb	r6,0(r5)
    9bcc:	11800b1e 	bne	r2,r6,9bfc <strcmp+0xc0>
    9bd0:	21000044 	addi	r4,r4,1
    9bd4:	20c00003 	ldbu	r3,0(r4)
    9bd8:	29400044 	addi	r5,r5,1
    9bdc:	18803fcc 	andi	r2,r3,255
    9be0:	1080201c 	xori	r2,r2,128
    9be4:	10bfe004 	addi	r2,r2,-128
    9be8:	103ff71e 	bne	r2,zero,9bc8 <strcmp+0x8c>
    9bec:	0005883a 	mov	r2,zero
    9bf0:	28c00003 	ldbu	r3,0(r5)
    9bf4:	10c5c83a 	sub	r2,r2,r3
    9bf8:	f800283a 	ret
    9bfc:	18803fcc 	andi	r2,r3,255
    9c00:	28c00003 	ldbu	r3,0(r5)
    9c04:	10c5c83a 	sub	r2,r2,r3
    9c08:	f800283a 	ret
    9c0c:	0005883a 	mov	r2,zero
    9c10:	f800283a 	ret

00009c14 <__swbuf_r>:
    9c14:	defffb04 	addi	sp,sp,-20
    9c18:	dc800215 	stw	r18,8(sp)
    9c1c:	dc400115 	stw	r17,4(sp)
    9c20:	dc000015 	stw	r16,0(sp)
    9c24:	dfc00415 	stw	ra,16(sp)
    9c28:	dcc00315 	stw	r19,12(sp)
    9c2c:	2023883a 	mov	r17,r4
    9c30:	2825883a 	mov	r18,r5
    9c34:	3021883a 	mov	r16,r6
    9c38:	20000226 	beq	r4,zero,9c44 <__swbuf_r+0x30>
    9c3c:	20800e17 	ldw	r2,56(r4)
    9c40:	10003e26 	beq	r2,zero,9d3c <__swbuf_r+0x128>
    9c44:	80800617 	ldw	r2,24(r16)
    9c48:	80c0030b 	ldhu	r3,12(r16)
    9c4c:	80800215 	stw	r2,8(r16)
    9c50:	1880020c 	andi	r2,r3,8
    9c54:	10001f26 	beq	r2,zero,9cd4 <__swbuf_r+0xc0>
    9c58:	80800417 	ldw	r2,16(r16)
    9c5c:	10001d26 	beq	r2,zero,9cd4 <__swbuf_r+0xc0>
    9c60:	1908000c 	andi	r4,r3,8192
    9c64:	94c03fcc 	andi	r19,r18,255
    9c68:	20002326 	beq	r4,zero,9cf8 <__swbuf_r+0xe4>
    9c6c:	80c00017 	ldw	r3,0(r16)
    9c70:	81000517 	ldw	r4,20(r16)
    9c74:	1885c83a 	sub	r2,r3,r2
    9c78:	1100290e 	bge	r2,r4,9d20 <__swbuf_r+0x10c>
    9c7c:	10800044 	addi	r2,r2,1
    9c80:	81000217 	ldw	r4,8(r16)
    9c84:	19400044 	addi	r5,r3,1
    9c88:	81400015 	stw	r5,0(r16)
    9c8c:	213fffc4 	addi	r4,r4,-1
    9c90:	81000215 	stw	r4,8(r16)
    9c94:	1c800005 	stb	r18,0(r3)
    9c98:	80c00517 	ldw	r3,20(r16)
    9c9c:	18802926 	beq	r3,r2,9d44 <__swbuf_r+0x130>
    9ca0:	8080030b 	ldhu	r2,12(r16)
    9ca4:	1080004c 	andi	r2,r2,1
    9ca8:	10000226 	beq	r2,zero,9cb4 <__swbuf_r+0xa0>
    9cac:	98800298 	cmpnei	r2,r19,10
    9cb0:	10002426 	beq	r2,zero,9d44 <__swbuf_r+0x130>
    9cb4:	9805883a 	mov	r2,r19
    9cb8:	dfc00417 	ldw	ra,16(sp)
    9cbc:	dcc00317 	ldw	r19,12(sp)
    9cc0:	dc800217 	ldw	r18,8(sp)
    9cc4:	dc400117 	ldw	r17,4(sp)
    9cc8:	dc000017 	ldw	r16,0(sp)
    9ccc:	dec00504 	addi	sp,sp,20
    9cd0:	f800283a 	ret
    9cd4:	800b883a 	mov	r5,r16
    9cd8:	8809883a 	mov	r4,r17
    9cdc:	00040a80 	call	40a8 <__swsetup_r>
    9ce0:	10001c1e 	bne	r2,zero,9d54 <__swbuf_r+0x140>
    9ce4:	80c0030b 	ldhu	r3,12(r16)
    9ce8:	80800417 	ldw	r2,16(r16)
    9cec:	94c03fcc 	andi	r19,r18,255
    9cf0:	1908000c 	andi	r4,r3,8192
    9cf4:	203fdd1e 	bne	r4,zero,9c6c <__swbuf_r+0x58>
    9cf8:	81001917 	ldw	r4,100(r16)
    9cfc:	18c80014 	ori	r3,r3,8192
    9d00:	0177ffc4 	movi	r5,-8193
    9d04:	2148703a 	and	r4,r4,r5
    9d08:	80c0030d 	sth	r3,12(r16)
    9d0c:	80c00017 	ldw	r3,0(r16)
    9d10:	81001915 	stw	r4,100(r16)
    9d14:	81000517 	ldw	r4,20(r16)
    9d18:	1885c83a 	sub	r2,r3,r2
    9d1c:	113fd716 	blt	r2,r4,9c7c <__swbuf_r+0x68>
    9d20:	800b883a 	mov	r5,r16
    9d24:	8809883a 	mov	r4,r17
    9d28:	0005e8c0 	call	5e8c <_fflush_r>
    9d2c:	1000091e 	bne	r2,zero,9d54 <__swbuf_r+0x140>
    9d30:	80c00017 	ldw	r3,0(r16)
    9d34:	00800044 	movi	r2,1
    9d38:	003fd106 	br	9c80 <__swbuf_r+0x6c>
    9d3c:	00009ac0 	call	9ac <__sinit>
    9d40:	003fc006 	br	9c44 <__swbuf_r+0x30>
    9d44:	800b883a 	mov	r5,r16
    9d48:	8809883a 	mov	r4,r17
    9d4c:	0005e8c0 	call	5e8c <_fflush_r>
    9d50:	103fd826 	beq	r2,zero,9cb4 <__swbuf_r+0xa0>
    9d54:	04ffffc4 	movi	r19,-1
    9d58:	003fd606 	br	9cb4 <__swbuf_r+0xa0>

00009d5c <__swbuf>:
    9d5c:	00800074 	movhi	r2,1
    9d60:	280d883a 	mov	r6,r5
    9d64:	200b883a 	mov	r5,r4
    9d68:	11077c17 	ldw	r4,7664(r2)
    9d6c:	0009c141 	jmpi	9c14 <__swbuf_r>

00009d70 <_wcrtomb_r>:
    9d70:	defffa04 	addi	sp,sp,-24
    9d74:	dc400415 	stw	r17,16(sp)
    9d78:	dc000315 	stw	r16,12(sp)
    9d7c:	00800074 	movhi	r2,1
    9d80:	dfc00515 	stw	ra,20(sp)
    9d84:	2021883a 	mov	r16,r4
    9d88:	3823883a 	mov	r17,r7
    9d8c:	1082d117 	ldw	r2,2884(r2)
    9d90:	28000826 	beq	r5,zero,9db4 <_wcrtomb_r+0x44>
    9d94:	103ee83a 	callr	r2
    9d98:	10ffffd8 	cmpnei	r3,r2,-1
    9d9c:	18000a26 	beq	r3,zero,9dc8 <_wcrtomb_r+0x58>
    9da0:	dfc00517 	ldw	ra,20(sp)
    9da4:	dc400417 	ldw	r17,16(sp)
    9da8:	dc000317 	ldw	r16,12(sp)
    9dac:	dec00604 	addi	sp,sp,24
    9db0:	f800283a 	ret
    9db4:	000d883a 	mov	r6,zero
    9db8:	d9400084 	addi	r5,sp,2
    9dbc:	103ee83a 	callr	r2
    9dc0:	10ffffd8 	cmpnei	r3,r2,-1
    9dc4:	183ff61e 	bne	r3,zero,9da0 <_wcrtomb_r+0x30>
    9dc8:	00802284 	movi	r2,138
    9dcc:	88000015 	stw	zero,0(r17)
    9dd0:	80800015 	stw	r2,0(r16)
    9dd4:	00bfffc4 	movi	r2,-1
    9dd8:	003ff106 	br	9da0 <_wcrtomb_r+0x30>

00009ddc <wcrtomb>:
    9ddc:	defffa04 	addi	sp,sp,-24
    9de0:	00800074 	movhi	r2,1
    9de4:	dc400415 	stw	r17,16(sp)
    9de8:	dc000315 	stw	r16,12(sp)
    9dec:	dfc00515 	stw	ra,20(sp)
    9df0:	14077c17 	ldw	r16,7664(r2)
    9df4:	00800074 	movhi	r2,1
    9df8:	3023883a 	mov	r17,r6
    9dfc:	1082d117 	ldw	r2,2884(r2)
    9e00:	300f883a 	mov	r7,r6
    9e04:	20000b26 	beq	r4,zero,9e34 <wcrtomb+0x58>
    9e08:	280d883a 	mov	r6,r5
    9e0c:	200b883a 	mov	r5,r4
    9e10:	8009883a 	mov	r4,r16
    9e14:	103ee83a 	callr	r2
    9e18:	10ffffd8 	cmpnei	r3,r2,-1
    9e1c:	18000b26 	beq	r3,zero,9e4c <wcrtomb+0x70>
    9e20:	dfc00517 	ldw	ra,20(sp)
    9e24:	dc400417 	ldw	r17,16(sp)
    9e28:	dc000317 	ldw	r16,12(sp)
    9e2c:	dec00604 	addi	sp,sp,24
    9e30:	f800283a 	ret
    9e34:	000d883a 	mov	r6,zero
    9e38:	d9400084 	addi	r5,sp,2
    9e3c:	8009883a 	mov	r4,r16
    9e40:	103ee83a 	callr	r2
    9e44:	10ffffd8 	cmpnei	r3,r2,-1
    9e48:	183ff51e 	bne	r3,zero,9e20 <wcrtomb+0x44>
    9e4c:	00802284 	movi	r2,138
    9e50:	88000015 	stw	zero,0(r17)
    9e54:	80800015 	stw	r2,0(r16)
    9e58:	00bfffc4 	movi	r2,-1
    9e5c:	003ff006 	br	9e20 <wcrtomb+0x44>

00009e60 <_wctomb_r>:
    9e60:	00800074 	movhi	r2,1
    9e64:	1082d117 	ldw	r2,2884(r2)
    9e68:	1000683a 	jmp	r2

00009e6c <__ascii_wctomb>:
    9e6c:	28000926 	beq	r5,zero,9e94 <__ascii_wctomb+0x28>
    9e70:	30804030 	cmpltui	r2,r6,256
    9e74:	10000326 	beq	r2,zero,9e84 <__ascii_wctomb+0x18>
    9e78:	29800005 	stb	r6,0(r5)
    9e7c:	00800044 	movi	r2,1
    9e80:	f800283a 	ret
    9e84:	00802284 	movi	r2,138
    9e88:	20800015 	stw	r2,0(r4)
    9e8c:	00bfffc4 	movi	r2,-1
    9e90:	f800283a 	ret
    9e94:	0005883a 	mov	r2,zero
    9e98:	f800283a 	ret

00009e9c <__udivdi3>:
    9e9c:	defff504 	addi	sp,sp,-44
    9ea0:	dd000515 	stw	r20,20(sp)
    9ea4:	dc000115 	stw	r16,4(sp)
    9ea8:	dfc00a15 	stw	ra,40(sp)
    9eac:	df000915 	stw	fp,36(sp)
    9eb0:	ddc00815 	stw	r23,32(sp)
    9eb4:	dd800715 	stw	r22,28(sp)
    9eb8:	dd400615 	stw	r21,24(sp)
    9ebc:	dcc00415 	stw	r19,16(sp)
    9ec0:	dc800315 	stw	r18,12(sp)
    9ec4:	dc400215 	stw	r17,8(sp)
    9ec8:	2029883a 	mov	r20,r4
    9ecc:	2821883a 	mov	r16,r5
    9ed0:	38008c1e 	bne	r7,zero,a104 <__udivdi3+0x268>
    9ed4:	3827883a 	mov	r19,r7
    9ed8:	3023883a 	mov	r17,r6
    9edc:	2025883a 	mov	r18,r4
    9ee0:	2980422e 	bgeu	r5,r6,9fec <__udivdi3+0x150>
    9ee4:	00bfffd4 	movui	r2,65535
    9ee8:	282f883a 	mov	r23,r5
    9eec:	1180af2e 	bgeu	r2,r6,a1ac <__udivdi3+0x310>
    9ef0:	00804034 	movhi	r2,256
    9ef4:	30815936 	bltu	r6,r2,a45c <__udivdi3+0x5c0>
    9ef8:	3006d63a 	srli	r3,r6,24
    9efc:	04c00604 	movi	r19,24
    9f00:	00800074 	movhi	r2,1
    9f04:	1885883a 	add	r2,r3,r2
    9f08:	10802103 	ldbu	r2,132(r2)
    9f0c:	14e7883a 	add	r19,r2,r19
    9f10:	00800804 	movi	r2,32
    9f14:	14c5c83a 	sub	r2,r2,r19
    9f18:	10000526 	beq	r2,zero,9f30 <__udivdi3+0x94>
    9f1c:	80a0983a 	sll	r16,r16,r2
    9f20:	a4e6d83a 	srl	r19,r20,r19
    9f24:	30a2983a 	sll	r17,r6,r2
    9f28:	a0a4983a 	sll	r18,r20,r2
    9f2c:	9c2eb03a 	or	r23,r19,r16
    9f30:	882ad43a 	srli	r21,r17,16
    9f34:	b809883a 	mov	r4,r23
    9f38:	8dbfffcc 	andi	r22,r17,65535
    9f3c:	a80b883a 	mov	r5,r21
    9f40:	000abdc0 	call	abdc <__umodsi3>
    9f44:	a80b883a 	mov	r5,r21
    9f48:	b809883a 	mov	r4,r23
    9f4c:	1029883a 	mov	r20,r2
    9f50:	000ab780 	call	ab78 <__udivsi3>
    9f54:	100b883a 	mov	r5,r2
    9f58:	b009883a 	mov	r4,r22
    9f5c:	1021883a 	mov	r16,r2
    9f60:	000ac380 	call	ac38 <__mulsi3>
    9f64:	a028943a 	slli	r20,r20,16
    9f68:	9006d43a 	srli	r3,r18,16
    9f6c:	a0c6b03a 	or	r3,r20,r3
    9f70:	1880052e 	bgeu	r3,r2,9f88 <__udivdi3+0xec>
    9f74:	1c47883a 	add	r3,r3,r17
    9f78:	813fffc4 	addi	r4,r16,-1
    9f7c:	1c400136 	bltu	r3,r17,9f84 <__udivdi3+0xe8>
    9f80:	18814736 	bltu	r3,r2,a4a0 <__udivdi3+0x604>
    9f84:	2021883a 	mov	r16,r4
    9f88:	18a7c83a 	sub	r19,r3,r2
    9f8c:	9809883a 	mov	r4,r19
    9f90:	a80b883a 	mov	r5,r21
    9f94:	000abdc0 	call	abdc <__umodsi3>
    9f98:	1029883a 	mov	r20,r2
    9f9c:	9809883a 	mov	r4,r19
    9fa0:	a80b883a 	mov	r5,r21
    9fa4:	a028943a 	slli	r20,r20,16
    9fa8:	000ab780 	call	ab78 <__udivsi3>
    9fac:	100b883a 	mov	r5,r2
    9fb0:	b009883a 	mov	r4,r22
    9fb4:	94bfffcc 	andi	r18,r18,65535
    9fb8:	1027883a 	mov	r19,r2
    9fbc:	a4a4b03a 	or	r18,r20,r18
    9fc0:	000ac380 	call	ac38 <__mulsi3>
    9fc4:	9080052e 	bgeu	r18,r2,9fdc <__udivdi3+0x140>
    9fc8:	8ca5883a 	add	r18,r17,r18
    9fcc:	98ffffc4 	addi	r3,r19,-1
    9fd0:	94400136 	bltu	r18,r17,9fd8 <__udivdi3+0x13c>
    9fd4:	90813036 	bltu	r18,r2,a498 <__udivdi3+0x5fc>
    9fd8:	1827883a 	mov	r19,r3
    9fdc:	8004943a 	slli	r2,r16,16
    9fe0:	0007883a 	mov	r3,zero
    9fe4:	14c4b03a 	or	r2,r2,r19
    9fe8:	00005a06 	br	a154 <__udivdi3+0x2b8>
    9fec:	3000041e 	bne	r6,zero,a000 <__udivdi3+0x164>
    9ff0:	000b883a 	mov	r5,zero
    9ff4:	01000044 	movi	r4,1
    9ff8:	000ab780 	call	ab78 <__udivsi3>
    9ffc:	1023883a 	mov	r17,r2
    a000:	00bfffd4 	movui	r2,65535
    a004:	1440642e 	bgeu	r2,r17,a198 <__udivdi3+0x2fc>
    a008:	00804034 	movhi	r2,256
    a00c:	88811036 	bltu	r17,r2,a450 <__udivdi3+0x5b4>
    a010:	8806d63a 	srli	r3,r17,24
    a014:	04c00604 	movi	r19,24
    a018:	00800074 	movhi	r2,1
    a01c:	1885883a 	add	r2,r3,r2
    a020:	10802103 	ldbu	r2,132(r2)
    a024:	00c00804 	movi	r3,32
    a028:	14e7883a 	add	r19,r2,r19
    a02c:	1cc7c83a 	sub	r3,r3,r19
    a030:	1800631e 	bne	r3,zero,a1c0 <__udivdi3+0x324>
    a034:	882ad43a 	srli	r21,r17,16
    a038:	8461c83a 	sub	r16,r16,r17
    a03c:	8dbfffcc 	andi	r22,r17,65535
    a040:	00c00044 	movi	r3,1
    a044:	8009883a 	mov	r4,r16
    a048:	a80b883a 	mov	r5,r21
    a04c:	d8c00015 	stw	r3,0(sp)
    a050:	000abdc0 	call	abdc <__umodsi3>
    a054:	8009883a 	mov	r4,r16
    a058:	a80b883a 	mov	r5,r21
    a05c:	1029883a 	mov	r20,r2
    a060:	000ab780 	call	ab78 <__udivsi3>
    a064:	1009883a 	mov	r4,r2
    a068:	b00b883a 	mov	r5,r22
    a06c:	1021883a 	mov	r16,r2
    a070:	000ac380 	call	ac38 <__mulsi3>
    a074:	a028943a 	slli	r20,r20,16
    a078:	9008d43a 	srli	r4,r18,16
    a07c:	d8c00017 	ldw	r3,0(sp)
    a080:	a108b03a 	or	r4,r20,r4
    a084:	2080052e 	bgeu	r4,r2,a09c <__udivdi3+0x200>
    a088:	2449883a 	add	r4,r4,r17
    a08c:	817fffc4 	addi	r5,r16,-1
    a090:	24400136 	bltu	r4,r17,a098 <__udivdi3+0x1fc>
    a094:	20810536 	bltu	r4,r2,a4ac <__udivdi3+0x610>
    a098:	2821883a 	mov	r16,r5
    a09c:	20a7c83a 	sub	r19,r4,r2
    a0a0:	9809883a 	mov	r4,r19
    a0a4:	a80b883a 	mov	r5,r21
    a0a8:	d8c00015 	stw	r3,0(sp)
    a0ac:	000abdc0 	call	abdc <__umodsi3>
    a0b0:	1029883a 	mov	r20,r2
    a0b4:	9809883a 	mov	r4,r19
    a0b8:	a80b883a 	mov	r5,r21
    a0bc:	a028943a 	slli	r20,r20,16
    a0c0:	000ab780 	call	ab78 <__udivsi3>
    a0c4:	b00b883a 	mov	r5,r22
    a0c8:	1009883a 	mov	r4,r2
    a0cc:	94bfffcc 	andi	r18,r18,65535
    a0d0:	1027883a 	mov	r19,r2
    a0d4:	a4a4b03a 	or	r18,r20,r18
    a0d8:	000ac380 	call	ac38 <__mulsi3>
    a0dc:	d8c00017 	ldw	r3,0(sp)
    a0e0:	9080052e 	bgeu	r18,r2,a0f8 <__udivdi3+0x25c>
    a0e4:	8ca5883a 	add	r18,r17,r18
    a0e8:	993fffc4 	addi	r4,r19,-1
    a0ec:	94400136 	bltu	r18,r17,a0f4 <__udivdi3+0x258>
    a0f0:	9080e736 	bltu	r18,r2,a490 <__udivdi3+0x5f4>
    a0f4:	2027883a 	mov	r19,r4
    a0f8:	8004943a 	slli	r2,r16,16
    a0fc:	14c4b03a 	or	r2,r2,r19
    a100:	00001406 	br	a154 <__udivdi3+0x2b8>
    a104:	29c01136 	bltu	r5,r7,a14c <__udivdi3+0x2b0>
    a108:	00bfffd4 	movui	r2,65535
    a10c:	11c01d2e 	bgeu	r2,r7,a184 <__udivdi3+0x2e8>
    a110:	00804034 	movhi	r2,256
    a114:	3880c336 	bltu	r7,r2,a424 <__udivdi3+0x588>
    a118:	3808d63a 	srli	r4,r7,24
    a11c:	00c00604 	movi	r3,24
    a120:	00800074 	movhi	r2,1
    a124:	2085883a 	add	r2,r4,r2
    a128:	11002103 	ldbu	r4,132(r2)
    a12c:	20c9883a 	add	r4,r4,r3
    a130:	00c00804 	movi	r3,32
    a134:	192fc83a 	sub	r23,r3,r4
    a138:	b800581e 	bne	r23,zero,a29c <__udivdi3+0x400>
    a13c:	3c00bc36 	bltu	r7,r16,a430 <__udivdi3+0x594>
    a140:	a185403a 	cmpgeu	r2,r20,r6
    a144:	0007883a 	mov	r3,zero
    a148:	00000206 	br	a154 <__udivdi3+0x2b8>
    a14c:	0007883a 	mov	r3,zero
    a150:	0005883a 	mov	r2,zero
    a154:	dfc00a17 	ldw	ra,40(sp)
    a158:	df000917 	ldw	fp,36(sp)
    a15c:	ddc00817 	ldw	r23,32(sp)
    a160:	dd800717 	ldw	r22,28(sp)
    a164:	dd400617 	ldw	r21,24(sp)
    a168:	dd000517 	ldw	r20,20(sp)
    a16c:	dcc00417 	ldw	r19,16(sp)
    a170:	dc800317 	ldw	r18,12(sp)
    a174:	dc400217 	ldw	r17,8(sp)
    a178:	dc000117 	ldw	r16,4(sp)
    a17c:	dec00b04 	addi	sp,sp,44
    a180:	f800283a 	ret
    a184:	38804030 	cmpltui	r2,r7,256
    a188:	1000ac1e 	bne	r2,zero,a43c <__udivdi3+0x5a0>
    a18c:	3808d23a 	srli	r4,r7,8
    a190:	00c00204 	movi	r3,8
    a194:	003fe206 	br	a120 <__udivdi3+0x284>
    a198:	88804030 	cmpltui	r2,r17,256
    a19c:	1000b21e 	bne	r2,zero,a468 <__udivdi3+0x5cc>
    a1a0:	8806d23a 	srli	r3,r17,8
    a1a4:	04c00204 	movi	r19,8
    a1a8:	003f9b06 	br	a018 <__udivdi3+0x17c>
    a1ac:	30804030 	cmpltui	r2,r6,256
    a1b0:	1000a51e 	bne	r2,zero,a448 <__udivdi3+0x5ac>
    a1b4:	3006d23a 	srli	r3,r6,8
    a1b8:	04c00204 	movi	r19,8
    a1bc:	003f5006 	br	9f00 <__udivdi3+0x64>
    a1c0:	88e2983a 	sll	r17,r17,r3
    a1c4:	84eed83a 	srl	r23,r16,r19
    a1c8:	a0e4983a 	sll	r18,r20,r3
    a1cc:	882ad43a 	srli	r21,r17,16
    a1d0:	b809883a 	mov	r4,r23
    a1d4:	80e0983a 	sll	r16,r16,r3
    a1d8:	a80b883a 	mov	r5,r21
    a1dc:	000abdc0 	call	abdc <__umodsi3>
    a1e0:	b809883a 	mov	r4,r23
    a1e4:	a4e6d83a 	srl	r19,r20,r19
    a1e8:	a80b883a 	mov	r5,r21
    a1ec:	1029883a 	mov	r20,r2
    a1f0:	8dbfffcc 	andi	r22,r17,65535
    a1f4:	000ab780 	call	ab78 <__udivsi3>
    a1f8:	b009883a 	mov	r4,r22
    a1fc:	100b883a 	mov	r5,r2
    a200:	9c26b03a 	or	r19,r19,r16
    a204:	102f883a 	mov	r23,r2
    a208:	000ac380 	call	ac38 <__mulsi3>
    a20c:	a028943a 	slli	r20,r20,16
    a210:	9808d43a 	srli	r4,r19,16
    a214:	a108b03a 	or	r4,r20,r4
    a218:	2080062e 	bgeu	r4,r2,a234 <__udivdi3+0x398>
    a21c:	2449883a 	add	r4,r4,r17
    a220:	b8ffffc4 	addi	r3,r23,-1
    a224:	24409836 	bltu	r4,r17,a488 <__udivdi3+0x5ec>
    a228:	2080972e 	bgeu	r4,r2,a488 <__udivdi3+0x5ec>
    a22c:	bdffff84 	addi	r23,r23,-2
    a230:	2449883a 	add	r4,r4,r17
    a234:	20a1c83a 	sub	r16,r4,r2
    a238:	8009883a 	mov	r4,r16
    a23c:	a80b883a 	mov	r5,r21
    a240:	000abdc0 	call	abdc <__umodsi3>
    a244:	1029883a 	mov	r20,r2
    a248:	8009883a 	mov	r4,r16
    a24c:	a80b883a 	mov	r5,r21
    a250:	a020943a 	slli	r16,r20,16
    a254:	000ab780 	call	ab78 <__udivsi3>
    a258:	100b883a 	mov	r5,r2
    a25c:	b009883a 	mov	r4,r22
    a260:	9cffffcc 	andi	r19,r19,65535
    a264:	1039883a 	mov	fp,r2
    a268:	84e0b03a 	or	r16,r16,r19
    a26c:	000ac380 	call	ac38 <__mulsi3>
    a270:	8080062e 	bgeu	r16,r2,a28c <__udivdi3+0x3f0>
    a274:	8461883a 	add	r16,r16,r17
    a278:	e0ffffc4 	addi	r3,fp,-1
    a27c:	84407e36 	bltu	r16,r17,a478 <__udivdi3+0x5dc>
    a280:	80807d2e 	bgeu	r16,r2,a478 <__udivdi3+0x5dc>
    a284:	e73fff84 	addi	fp,fp,-2
    a288:	8461883a 	add	r16,r16,r17
    a28c:	b806943a 	slli	r3,r23,16
    a290:	80a1c83a 	sub	r16,r16,r2
    a294:	1f06b03a 	or	r3,r3,fp
    a298:	003f6a06 	br	a044 <__udivdi3+0x1a8>
    a29c:	3106d83a 	srl	r3,r6,r4
    a2a0:	3dce983a 	sll	r7,r7,r23
    a2a4:	8122d83a 	srl	r17,r16,r4
    a2a8:	a104d83a 	srl	r2,r20,r4
    a2ac:	19ecb03a 	or	r22,r3,r7
    a2b0:	b024d43a 	srli	r18,r22,16
    a2b4:	85e0983a 	sll	r16,r16,r23
    a2b8:	8809883a 	mov	r4,r17
    a2bc:	900b883a 	mov	r5,r18
    a2c0:	1420b03a 	or	r16,r2,r16
    a2c4:	b0bfffcc 	andi	r2,r22,65535
    a2c8:	35ea983a 	sll	r21,r6,r23
    a2cc:	d8800015 	stw	r2,0(sp)
    a2d0:	000abdc0 	call	abdc <__umodsi3>
    a2d4:	900b883a 	mov	r5,r18
    a2d8:	8809883a 	mov	r4,r17
    a2dc:	1027883a 	mov	r19,r2
    a2e0:	000ab780 	call	ab78 <__udivsi3>
    a2e4:	b13fffcc 	andi	r4,r22,65535
    a2e8:	100b883a 	mov	r5,r2
    a2ec:	1039883a 	mov	fp,r2
    a2f0:	000ac380 	call	ac38 <__mulsi3>
    a2f4:	9826943a 	slli	r19,r19,16
    a2f8:	8008d43a 	srli	r4,r16,16
    a2fc:	9908b03a 	or	r4,r19,r4
    a300:	2080062e 	bgeu	r4,r2,a31c <__udivdi3+0x480>
    a304:	2589883a 	add	r4,r4,r22
    a308:	e0ffffc4 	addi	r3,fp,-1
    a30c:	25805c36 	bltu	r4,r22,a480 <__udivdi3+0x5e4>
    a310:	20805b2e 	bgeu	r4,r2,a480 <__udivdi3+0x5e4>
    a314:	e73fff84 	addi	fp,fp,-2
    a318:	2589883a 	add	r4,r4,r22
    a31c:	20a3c83a 	sub	r17,r4,r2
    a320:	8809883a 	mov	r4,r17
    a324:	900b883a 	mov	r5,r18
    a328:	000abdc0 	call	abdc <__umodsi3>
    a32c:	1027883a 	mov	r19,r2
    a330:	8809883a 	mov	r4,r17
    a334:	900b883a 	mov	r5,r18
    a338:	9826943a 	slli	r19,r19,16
    a33c:	000ab780 	call	ab78 <__udivsi3>
    a340:	100b883a 	mov	r5,r2
    a344:	b13fffcc 	andi	r4,r22,65535
    a348:	843fffcc 	andi	r16,r16,65535
    a34c:	1023883a 	mov	r17,r2
    a350:	9c20b03a 	or	r16,r19,r16
    a354:	000ac380 	call	ac38 <__mulsi3>
    a358:	8080062e 	bgeu	r16,r2,a374 <__udivdi3+0x4d8>
    a35c:	85a1883a 	add	r16,r16,r22
    a360:	88ffffc4 	addi	r3,r17,-1
    a364:	85804236 	bltu	r16,r22,a470 <__udivdi3+0x5d4>
    a368:	8080412e 	bgeu	r16,r2,a470 <__udivdi3+0x5d4>
    a36c:	8c7fff84 	addi	r17,r17,-2
    a370:	85a1883a 	add	r16,r16,r22
    a374:	e038943a 	slli	fp,fp,16
    a378:	adbfffcc 	andi	r22,r21,65535
    a37c:	b00b883a 	mov	r5,r22
    a380:	e478b03a 	or	fp,fp,r17
    a384:	e024d43a 	srli	r18,fp,16
    a388:	e4ffffcc 	andi	r19,fp,65535
    a38c:	9809883a 	mov	r4,r19
    a390:	a82ad43a 	srli	r21,r21,16
    a394:	80a1c83a 	sub	r16,r16,r2
    a398:	000ac380 	call	ac38 <__mulsi3>
    a39c:	9009883a 	mov	r4,r18
    a3a0:	b00b883a 	mov	r5,r22
    a3a4:	d8800015 	stw	r2,0(sp)
    a3a8:	000ac380 	call	ac38 <__mulsi3>
    a3ac:	9009883a 	mov	r4,r18
    a3b0:	a80b883a 	mov	r5,r21
    a3b4:	1023883a 	mov	r17,r2
    a3b8:	000ac380 	call	ac38 <__mulsi3>
    a3bc:	a80b883a 	mov	r5,r21
    a3c0:	9809883a 	mov	r4,r19
    a3c4:	1025883a 	mov	r18,r2
    a3c8:	000ac380 	call	ac38 <__mulsi3>
    a3cc:	d9800017 	ldw	r6,0(sp)
    a3d0:	1445883a 	add	r2,r2,r17
    a3d4:	3006d43a 	srli	r3,r6,16
    a3d8:	1885883a 	add	r2,r3,r2
    a3dc:	1440022e 	bgeu	r2,r17,a3e8 <__udivdi3+0x54c>
    a3e0:	00c00074 	movhi	r3,1
    a3e4:	90e5883a 	add	r18,r18,r3
    a3e8:	1006d43a 	srli	r3,r2,16
    a3ec:	1c87883a 	add	r3,r3,r18
    a3f0:	80c00936 	bltu	r16,r3,a418 <__udivdi3+0x57c>
    a3f4:	80c00326 	beq	r16,r3,a404 <__udivdi3+0x568>
    a3f8:	e005883a 	mov	r2,fp
    a3fc:	0007883a 	mov	r3,zero
    a400:	003f5406 	br	a154 <__udivdi3+0x2b8>
    a404:	1004943a 	slli	r2,r2,16
    a408:	a5c6983a 	sll	r3,r20,r23
    a40c:	31bfffcc 	andi	r6,r6,65535
    a410:	1185883a 	add	r2,r2,r6
    a414:	18bff82e 	bgeu	r3,r2,a3f8 <__udivdi3+0x55c>
    a418:	e0bfffc4 	addi	r2,fp,-1
    a41c:	0007883a 	mov	r3,zero
    a420:	003f4c06 	br	a154 <__udivdi3+0x2b8>
    a424:	3808d43a 	srli	r4,r7,16
    a428:	00c00404 	movi	r3,16
    a42c:	003f3c06 	br	a120 <__udivdi3+0x284>
    a430:	0007883a 	mov	r3,zero
    a434:	00800044 	movi	r2,1
    a438:	003f4606 	br	a154 <__udivdi3+0x2b8>
    a43c:	3809883a 	mov	r4,r7
    a440:	0007883a 	mov	r3,zero
    a444:	003f3606 	br	a120 <__udivdi3+0x284>
    a448:	3007883a 	mov	r3,r6
    a44c:	003eac06 	br	9f00 <__udivdi3+0x64>
    a450:	8806d43a 	srli	r3,r17,16
    a454:	04c00404 	movi	r19,16
    a458:	003eef06 	br	a018 <__udivdi3+0x17c>
    a45c:	3006d43a 	srli	r3,r6,16
    a460:	04c00404 	movi	r19,16
    a464:	003ea606 	br	9f00 <__udivdi3+0x64>
    a468:	8807883a 	mov	r3,r17
    a46c:	003eea06 	br	a018 <__udivdi3+0x17c>
    a470:	1823883a 	mov	r17,r3
    a474:	003fbf06 	br	a374 <__udivdi3+0x4d8>
    a478:	1839883a 	mov	fp,r3
    a47c:	003f8306 	br	a28c <__udivdi3+0x3f0>
    a480:	1839883a 	mov	fp,r3
    a484:	003fa506 	br	a31c <__udivdi3+0x480>
    a488:	182f883a 	mov	r23,r3
    a48c:	003f6906 	br	a234 <__udivdi3+0x398>
    a490:	9cffff84 	addi	r19,r19,-2
    a494:	003f1806 	br	a0f8 <__udivdi3+0x25c>
    a498:	9cffff84 	addi	r19,r19,-2
    a49c:	003ecf06 	br	9fdc <__udivdi3+0x140>
    a4a0:	843fff84 	addi	r16,r16,-2
    a4a4:	1c47883a 	add	r3,r3,r17
    a4a8:	003eb706 	br	9f88 <__udivdi3+0xec>
    a4ac:	843fff84 	addi	r16,r16,-2
    a4b0:	2449883a 	add	r4,r4,r17
    a4b4:	003ef906 	br	a09c <__udivdi3+0x200>

0000a4b8 <__umoddi3>:
    a4b8:	defff304 	addi	sp,sp,-52
    a4bc:	dc400415 	stw	r17,16(sp)
    a4c0:	dc000315 	stw	r16,12(sp)
    a4c4:	dfc00c15 	stw	ra,48(sp)
    a4c8:	df000b15 	stw	fp,44(sp)
    a4cc:	ddc00a15 	stw	r23,40(sp)
    a4d0:	dd800915 	stw	r22,36(sp)
    a4d4:	dd400815 	stw	r21,32(sp)
    a4d8:	dd000715 	stw	r20,28(sp)
    a4dc:	dcc00615 	stw	r19,24(sp)
    a4e0:	dc800515 	stw	r18,20(sp)
    a4e4:	2823883a 	mov	r17,r5
    a4e8:	2021883a 	mov	r16,r4
    a4ec:	3800781e 	bne	r7,zero,a6d0 <__umoddi3+0x218>
    a4f0:	3825883a 	mov	r18,r7
    a4f4:	3027883a 	mov	r19,r6
    a4f8:	2029883a 	mov	r20,r4
    a4fc:	29803d2e 	bgeu	r5,r6,a5f4 <__umoddi3+0x13c>
    a500:	00bfffd4 	movui	r2,65535
    a504:	2839883a 	mov	fp,r5
    a508:	11809f36 	bltu	r2,r6,a788 <__umoddi3+0x2d0>
    a50c:	30804030 	cmpltui	r2,r6,256
    a510:	1001451e 	bne	r2,zero,aa28 <__umoddi3+0x570>
    a514:	3006d23a 	srli	r3,r6,8
    a518:	04800204 	movi	r18,8
    a51c:	00800074 	movhi	r2,1
    a520:	1885883a 	add	r2,r3,r2
    a524:	11002103 	ldbu	r4,132(r2)
    a528:	00800804 	movi	r2,32
    a52c:	2489883a 	add	r4,r4,r18
    a530:	1125c83a 	sub	r18,r2,r4
    a534:	90000526 	beq	r18,zero,a54c <__umoddi3+0x94>
    a538:	8ca2983a 	sll	r17,r17,r18
    a53c:	8108d83a 	srl	r4,r16,r4
    a540:	34a6983a 	sll	r19,r6,r18
    a544:	84a8983a 	sll	r20,r16,r18
    a548:	2478b03a 	or	fp,r4,r17
    a54c:	982cd43a 	srli	r22,r19,16
    a550:	e009883a 	mov	r4,fp
    a554:	9dffffcc 	andi	r23,r19,65535
    a558:	b00b883a 	mov	r5,r22
    a55c:	000abdc0 	call	abdc <__umodsi3>
    a560:	b00b883a 	mov	r5,r22
    a564:	e009883a 	mov	r4,fp
    a568:	102b883a 	mov	r21,r2
    a56c:	000ab780 	call	ab78 <__udivsi3>
    a570:	100b883a 	mov	r5,r2
    a574:	b809883a 	mov	r4,r23
    a578:	000ac380 	call	ac38 <__mulsi3>
    a57c:	a82a943a 	slli	r21,r21,16
    a580:	a006d43a 	srli	r3,r20,16
    a584:	a8c6b03a 	or	r3,r21,r3
    a588:	1880032e 	bgeu	r3,r2,a598 <__umoddi3+0xe0>
    a58c:	1cc7883a 	add	r3,r3,r19
    a590:	1cc00136 	bltu	r3,r19,a598 <__umoddi3+0xe0>
    a594:	18813836 	bltu	r3,r2,aa78 <__umoddi3+0x5c0>
    a598:	18a1c83a 	sub	r16,r3,r2
    a59c:	b00b883a 	mov	r5,r22
    a5a0:	8009883a 	mov	r4,r16
    a5a4:	000abdc0 	call	abdc <__umodsi3>
    a5a8:	b00b883a 	mov	r5,r22
    a5ac:	8009883a 	mov	r4,r16
    a5b0:	1023883a 	mov	r17,r2
    a5b4:	000ab780 	call	ab78 <__udivsi3>
    a5b8:	100b883a 	mov	r5,r2
    a5bc:	b809883a 	mov	r4,r23
    a5c0:	8822943a 	slli	r17,r17,16
    a5c4:	000ac380 	call	ac38 <__mulsi3>
    a5c8:	a0ffffcc 	andi	r3,r20,65535
    a5cc:	88c6b03a 	or	r3,r17,r3
    a5d0:	1880042e 	bgeu	r3,r2,a5e4 <__umoddi3+0x12c>
    a5d4:	1cc7883a 	add	r3,r3,r19
    a5d8:	1cc00236 	bltu	r3,r19,a5e4 <__umoddi3+0x12c>
    a5dc:	1880012e 	bgeu	r3,r2,a5e4 <__umoddi3+0x12c>
    a5e0:	1cc7883a 	add	r3,r3,r19
    a5e4:	1885c83a 	sub	r2,r3,r2
    a5e8:	1484d83a 	srl	r2,r2,r18
    a5ec:	0007883a 	mov	r3,zero
    a5f0:	00003a06 	br	a6dc <__umoddi3+0x224>
    a5f4:	3000041e 	bne	r6,zero,a608 <__umoddi3+0x150>
    a5f8:	000b883a 	mov	r5,zero
    a5fc:	01000044 	movi	r4,1
    a600:	000ab780 	call	ab78 <__udivsi3>
    a604:	1027883a 	mov	r19,r2
    a608:	00bfffd4 	movui	r2,65535
    a60c:	14c0592e 	bgeu	r2,r19,a774 <__umoddi3+0x2bc>
    a610:	00804034 	movhi	r2,256
    a614:	98810c36 	bltu	r19,r2,aa48 <__umoddi3+0x590>
    a618:	9806d63a 	srli	r3,r19,24
    a61c:	04800604 	movi	r18,24
    a620:	00800074 	movhi	r2,1
    a624:	1885883a 	add	r2,r3,r2
    a628:	10c02103 	ldbu	r3,132(r2)
    a62c:	00800804 	movi	r2,32
    a630:	1c87883a 	add	r3,r3,r18
    a634:	10e5c83a 	sub	r18,r2,r3
    a638:	9000c51e 	bne	r18,zero,a950 <__umoddi3+0x498>
    a63c:	982ad43a 	srli	r21,r19,16
    a640:	8ce3c83a 	sub	r17,r17,r19
    a644:	9dbfffcc 	andi	r22,r19,65535
    a648:	a80b883a 	mov	r5,r21
    a64c:	8809883a 	mov	r4,r17
    a650:	000abdc0 	call	abdc <__umodsi3>
    a654:	a80b883a 	mov	r5,r21
    a658:	8809883a 	mov	r4,r17
    a65c:	102f883a 	mov	r23,r2
    a660:	000ab780 	call	ab78 <__udivsi3>
    a664:	b00b883a 	mov	r5,r22
    a668:	1009883a 	mov	r4,r2
    a66c:	000ac380 	call	ac38 <__mulsi3>
    a670:	b82e943a 	slli	r23,r23,16
    a674:	a006d43a 	srli	r3,r20,16
    a678:	b8c6b03a 	or	r3,r23,r3
    a67c:	1880042e 	bgeu	r3,r2,a690 <__umoddi3+0x1d8>
    a680:	1cc7883a 	add	r3,r3,r19
    a684:	1cc00236 	bltu	r3,r19,a690 <__umoddi3+0x1d8>
    a688:	1880012e 	bgeu	r3,r2,a690 <__umoddi3+0x1d8>
    a68c:	1cc7883a 	add	r3,r3,r19
    a690:	18a1c83a 	sub	r16,r3,r2
    a694:	a80b883a 	mov	r5,r21
    a698:	8009883a 	mov	r4,r16
    a69c:	000abdc0 	call	abdc <__umodsi3>
    a6a0:	1023883a 	mov	r17,r2
    a6a4:	a80b883a 	mov	r5,r21
    a6a8:	8009883a 	mov	r4,r16
    a6ac:	000ab780 	call	ab78 <__udivsi3>
    a6b0:	8822943a 	slli	r17,r17,16
    a6b4:	b00b883a 	mov	r5,r22
    a6b8:	1009883a 	mov	r4,r2
    a6bc:	000ac380 	call	ac38 <__mulsi3>
    a6c0:	a53fffcc 	andi	r20,r20,65535
    a6c4:	8d06b03a 	or	r3,r17,r20
    a6c8:	18bfc62e 	bgeu	r3,r2,a5e4 <__umoddi3+0x12c>
    a6cc:	003fc106 	br	a5d4 <__umoddi3+0x11c>
    a6d0:	2005883a 	mov	r2,r4
    a6d4:	29c00d2e 	bgeu	r5,r7,a70c <__umoddi3+0x254>
    a6d8:	2807883a 	mov	r3,r5
    a6dc:	dfc00c17 	ldw	ra,48(sp)
    a6e0:	df000b17 	ldw	fp,44(sp)
    a6e4:	ddc00a17 	ldw	r23,40(sp)
    a6e8:	dd800917 	ldw	r22,36(sp)
    a6ec:	dd400817 	ldw	r21,32(sp)
    a6f0:	dd000717 	ldw	r20,28(sp)
    a6f4:	dcc00617 	ldw	r19,24(sp)
    a6f8:	dc800517 	ldw	r18,20(sp)
    a6fc:	dc400417 	ldw	r17,16(sp)
    a700:	dc000317 	ldw	r16,12(sp)
    a704:	dec00d04 	addi	sp,sp,52
    a708:	f800283a 	ret
    a70c:	013fffd4 	movui	r4,65535
    a710:	2807883a 	mov	r3,r5
    a714:	21c0122e 	bgeu	r4,r7,a760 <__umoddi3+0x2a8>
    a718:	01004034 	movhi	r4,256
    a71c:	3900c736 	bltu	r7,r4,aa3c <__umoddi3+0x584>
    a720:	3810d63a 	srli	r8,r7,24
    a724:	01400604 	movi	r5,24
    a728:	01000074 	movhi	r4,1
    a72c:	4109883a 	add	r4,r8,r4
    a730:	25002103 	ldbu	r20,132(r4)
    a734:	05400804 	movi	r21,32
    a738:	a169883a 	add	r20,r20,r5
    a73c:	ad2bc83a 	sub	r21,r21,r20
    a740:	a800161e 	bne	r21,zero,a79c <__umoddi3+0x2e4>
    a744:	3c400136 	bltu	r7,r17,a74c <__umoddi3+0x294>
    a748:	81bfe436 	bltu	r16,r6,a6dc <__umoddi3+0x224>
    a74c:	8185c83a 	sub	r2,r16,r6
    a750:	89cfc83a 	sub	r7,r17,r7
    a754:	8087803a 	cmpltu	r3,r16,r2
    a758:	38c7c83a 	sub	r3,r7,r3
    a75c:	003fdf06 	br	a6dc <__umoddi3+0x224>
    a760:	39004030 	cmpltui	r4,r7,256
    a764:	2000b21e 	bne	r4,zero,aa30 <__umoddi3+0x578>
    a768:	3810d23a 	srli	r8,r7,8
    a76c:	01400204 	movi	r5,8
    a770:	003fed06 	br	a728 <__umoddi3+0x270>
    a774:	98804030 	cmpltui	r2,r19,256
    a778:	1000b61e 	bne	r2,zero,aa54 <__umoddi3+0x59c>
    a77c:	9806d23a 	srli	r3,r19,8
    a780:	04800204 	movi	r18,8
    a784:	003fa606 	br	a620 <__umoddi3+0x168>
    a788:	00804034 	movhi	r2,256
    a78c:	3080b336 	bltu	r6,r2,aa5c <__umoddi3+0x5a4>
    a790:	3006d63a 	srli	r3,r6,24
    a794:	04800604 	movi	r18,24
    a798:	003f6006 	br	a51c <__umoddi3+0x64>
    a79c:	3508d83a 	srl	r4,r6,r20
    a7a0:	3d4e983a 	sll	r7,r7,r21
    a7a4:	8d38d83a 	srl	fp,r17,r20
    a7a8:	8504d83a 	srl	r2,r16,r20
    a7ac:	21e4b03a 	or	r18,r4,r7
    a7b0:	902cd43a 	srli	r22,r18,16
    a7b4:	8d62983a 	sll	r17,r17,r21
    a7b8:	e009883a 	mov	r4,fp
    a7bc:	b00b883a 	mov	r5,r22
    a7c0:	3566983a 	sll	r19,r6,r21
    a7c4:	1462b03a 	or	r17,r2,r17
    a7c8:	000abdc0 	call	abdc <__umodsi3>
    a7cc:	e009883a 	mov	r4,fp
    a7d0:	b00b883a 	mov	r5,r22
    a7d4:	95ffffcc 	andi	r23,r18,65535
    a7d8:	d8800015 	stw	r2,0(sp)
    a7dc:	000ab780 	call	ab78 <__udivsi3>
    a7e0:	100b883a 	mov	r5,r2
    a7e4:	b809883a 	mov	r4,r23
    a7e8:	1039883a 	mov	fp,r2
    a7ec:	000ac380 	call	ac38 <__mulsi3>
    a7f0:	d9800017 	ldw	r6,0(sp)
    a7f4:	8806d43a 	srli	r3,r17,16
    a7f8:	8560983a 	sll	r16,r16,r21
    a7fc:	300c943a 	slli	r6,r6,16
    a800:	30c6b03a 	or	r3,r6,r3
    a804:	1880062e 	bgeu	r3,r2,a820 <__umoddi3+0x368>
    a808:	1c87883a 	add	r3,r3,r18
    a80c:	e13fffc4 	addi	r4,fp,-1
    a810:	1c809736 	bltu	r3,r18,aa70 <__umoddi3+0x5b8>
    a814:	1880962e 	bgeu	r3,r2,aa70 <__umoddi3+0x5b8>
    a818:	e73fff84 	addi	fp,fp,-2
    a81c:	1c87883a 	add	r3,r3,r18
    a820:	1887c83a 	sub	r3,r3,r2
    a824:	b00b883a 	mov	r5,r22
    a828:	1809883a 	mov	r4,r3
    a82c:	d8c00115 	stw	r3,4(sp)
    a830:	000abdc0 	call	abdc <__umodsi3>
    a834:	d8c00117 	ldw	r3,4(sp)
    a838:	b00b883a 	mov	r5,r22
    a83c:	d8800015 	stw	r2,0(sp)
    a840:	1809883a 	mov	r4,r3
    a844:	000ab780 	call	ab78 <__udivsi3>
    a848:	100b883a 	mov	r5,r2
    a84c:	b809883a 	mov	r4,r23
    a850:	102d883a 	mov	r22,r2
    a854:	000ac380 	call	ac38 <__mulsi3>
    a858:	d9800017 	ldw	r6,0(sp)
    a85c:	8c7fffcc 	andi	r17,r17,65535
    a860:	300c943a 	slli	r6,r6,16
    a864:	3462b03a 	or	r17,r6,r17
    a868:	8880062e 	bgeu	r17,r2,a884 <__umoddi3+0x3cc>
    a86c:	8ca3883a 	add	r17,r17,r18
    a870:	b0ffffc4 	addi	r3,r22,-1
    a874:	8c807c36 	bltu	r17,r18,aa68 <__umoddi3+0x5b0>
    a878:	88807b2e 	bgeu	r17,r2,aa68 <__umoddi3+0x5b0>
    a87c:	b5bfff84 	addi	r22,r22,-2
    a880:	8ca3883a 	add	r17,r17,r18
    a884:	e038943a 	slli	fp,fp,16
    a888:	980cd43a 	srli	r6,r19,16
    a88c:	98ffffcc 	andi	r3,r19,65535
    a890:	e5b8b03a 	or	fp,fp,r22
    a894:	e02cd43a 	srli	r22,fp,16
    a898:	e73fffcc 	andi	fp,fp,65535
    a89c:	180b883a 	mov	r5,r3
    a8a0:	e009883a 	mov	r4,fp
    a8a4:	d9800215 	stw	r6,8(sp)
    a8a8:	d8c00015 	stw	r3,0(sp)
    a8ac:	88a3c83a 	sub	r17,r17,r2
    a8b0:	000ac380 	call	ac38 <__mulsi3>
    a8b4:	d8c00017 	ldw	r3,0(sp)
    a8b8:	b009883a 	mov	r4,r22
    a8bc:	102f883a 	mov	r23,r2
    a8c0:	180b883a 	mov	r5,r3
    a8c4:	000ac380 	call	ac38 <__mulsi3>
    a8c8:	d9800217 	ldw	r6,8(sp)
    a8cc:	b009883a 	mov	r4,r22
    a8d0:	d8800115 	stw	r2,4(sp)
    a8d4:	300b883a 	mov	r5,r6
    a8d8:	d9800015 	stw	r6,0(sp)
    a8dc:	000ac380 	call	ac38 <__mulsi3>
    a8e0:	d9800017 	ldw	r6,0(sp)
    a8e4:	e009883a 	mov	r4,fp
    a8e8:	102d883a 	mov	r22,r2
    a8ec:	300b883a 	mov	r5,r6
    a8f0:	000ac380 	call	ac38 <__mulsi3>
    a8f4:	d9c00117 	ldw	r7,4(sp)
    a8f8:	b808d43a 	srli	r4,r23,16
    a8fc:	11c5883a 	add	r2,r2,r7
    a900:	2085883a 	add	r2,r4,r2
    a904:	11c0022e 	bgeu	r2,r7,a910 <__umoddi3+0x458>
    a908:	00c00074 	movhi	r3,1
    a90c:	b0ed883a 	add	r22,r22,r3
    a910:	1006d43a 	srli	r3,r2,16
    a914:	1004943a 	slli	r2,r2,16
    a918:	bdffffcc 	andi	r23,r23,65535
    a91c:	1d87883a 	add	r3,r3,r22
    a920:	15c5883a 	add	r2,r2,r23
    a924:	88c03a36 	bltu	r17,r3,aa10 <__umoddi3+0x558>
    a928:	88c03826 	beq	r17,r3,aa0c <__umoddi3+0x554>
    a92c:	8085c83a 	sub	r2,r16,r2
    a930:	80a1803a 	cmpltu	r16,r16,r2
    a934:	88c7c83a 	sub	r3,r17,r3
    a938:	1c07c83a 	sub	r3,r3,r16
    a93c:	1d20983a 	sll	r16,r3,r20
    a940:	1544d83a 	srl	r2,r2,r21
    a944:	1d46d83a 	srl	r3,r3,r21
    a948:	8084b03a 	or	r2,r16,r2
    a94c:	003f6306 	br	a6dc <__umoddi3+0x224>
    a950:	9ca6983a 	sll	r19,r19,r18
    a954:	88f8d83a 	srl	fp,r17,r3
    a958:	80c6d83a 	srl	r3,r16,r3
    a95c:	982ad43a 	srli	r21,r19,16
    a960:	8ca2983a 	sll	r17,r17,r18
    a964:	e009883a 	mov	r4,fp
    a968:	a80b883a 	mov	r5,r21
    a96c:	1c6eb03a 	or	r23,r3,r17
    a970:	000abdc0 	call	abdc <__umodsi3>
    a974:	a80b883a 	mov	r5,r21
    a978:	e009883a 	mov	r4,fp
    a97c:	1029883a 	mov	r20,r2
    a980:	9dbfffcc 	andi	r22,r19,65535
    a984:	000ab780 	call	ab78 <__udivsi3>
    a988:	b009883a 	mov	r4,r22
    a98c:	100b883a 	mov	r5,r2
    a990:	000ac380 	call	ac38 <__mulsi3>
    a994:	a006943a 	slli	r3,r20,16
    a998:	b808d43a 	srli	r4,r23,16
    a99c:	84a8983a 	sll	r20,r16,r18
    a9a0:	1906b03a 	or	r3,r3,r4
    a9a4:	1880042e 	bgeu	r3,r2,a9b8 <__umoddi3+0x500>
    a9a8:	1cc7883a 	add	r3,r3,r19
    a9ac:	1cc00236 	bltu	r3,r19,a9b8 <__umoddi3+0x500>
    a9b0:	1880012e 	bgeu	r3,r2,a9b8 <__umoddi3+0x500>
    a9b4:	1cc7883a 	add	r3,r3,r19
    a9b8:	18a3c83a 	sub	r17,r3,r2
    a9bc:	8809883a 	mov	r4,r17
    a9c0:	a80b883a 	mov	r5,r21
    a9c4:	000abdc0 	call	abdc <__umodsi3>
    a9c8:	1021883a 	mov	r16,r2
    a9cc:	8809883a 	mov	r4,r17
    a9d0:	a80b883a 	mov	r5,r21
    a9d4:	8022943a 	slli	r17,r16,16
    a9d8:	000ab780 	call	ab78 <__udivsi3>
    a9dc:	100b883a 	mov	r5,r2
    a9e0:	b009883a 	mov	r4,r22
    a9e4:	bdffffcc 	andi	r23,r23,65535
    a9e8:	000ac380 	call	ac38 <__mulsi3>
    a9ec:	8de2b03a 	or	r17,r17,r23
    a9f0:	8880042e 	bgeu	r17,r2,aa04 <__umoddi3+0x54c>
    a9f4:	8ce3883a 	add	r17,r17,r19
    a9f8:	8cc00236 	bltu	r17,r19,aa04 <__umoddi3+0x54c>
    a9fc:	8880012e 	bgeu	r17,r2,aa04 <__umoddi3+0x54c>
    aa00:	8ce3883a 	add	r17,r17,r19
    aa04:	88a3c83a 	sub	r17,r17,r2
    aa08:	003f0f06 	br	a648 <__umoddi3+0x190>
    aa0c:	80bfc72e 	bgeu	r16,r2,a92c <__umoddi3+0x474>
    aa10:	14e7c83a 	sub	r19,r2,r19
    aa14:	14c5803a 	cmpltu	r2,r2,r19
    aa18:	1489883a 	add	r4,r2,r18
    aa1c:	1907c83a 	sub	r3,r3,r4
    aa20:	9805883a 	mov	r2,r19
    aa24:	003fc106 	br	a92c <__umoddi3+0x474>
    aa28:	3007883a 	mov	r3,r6
    aa2c:	003ebb06 	br	a51c <__umoddi3+0x64>
    aa30:	3811883a 	mov	r8,r7
    aa34:	000b883a 	mov	r5,zero
    aa38:	003f3b06 	br	a728 <__umoddi3+0x270>
    aa3c:	3810d43a 	srli	r8,r7,16
    aa40:	01400404 	movi	r5,16
    aa44:	003f3806 	br	a728 <__umoddi3+0x270>
    aa48:	9806d43a 	srli	r3,r19,16
    aa4c:	04800404 	movi	r18,16
    aa50:	003ef306 	br	a620 <__umoddi3+0x168>
    aa54:	9807883a 	mov	r3,r19
    aa58:	003ef106 	br	a620 <__umoddi3+0x168>
    aa5c:	3006d43a 	srli	r3,r6,16
    aa60:	04800404 	movi	r18,16
    aa64:	003ead06 	br	a51c <__umoddi3+0x64>
    aa68:	182d883a 	mov	r22,r3
    aa6c:	003f8506 	br	a884 <__umoddi3+0x3cc>
    aa70:	2039883a 	mov	fp,r4
    aa74:	003f6a06 	br	a820 <__umoddi3+0x368>
    aa78:	1cc7883a 	add	r3,r3,r19
    aa7c:	003ec606 	br	a598 <__umoddi3+0xe0>

0000aa80 <__divsi3>:
    aa80:	20001a16 	blt	r4,zero,aaec <__divsi3+0x6c>
    aa84:	000f883a 	mov	r7,zero
    aa88:	2800020e 	bge	r5,zero,aa94 <__divsi3+0x14>
    aa8c:	014bc83a 	sub	r5,zero,r5
    aa90:	39c0005c 	xori	r7,r7,1
    aa94:	200d883a 	mov	r6,r4
    aa98:	00c00044 	movi	r3,1
    aa9c:	2900092e 	bgeu	r5,r4,aac4 <__divsi3+0x44>
    aaa0:	00800804 	movi	r2,32
    aaa4:	00c00044 	movi	r3,1
    aaa8:	00000106 	br	aab0 <__divsi3+0x30>
    aaac:	10001226 	beq	r2,zero,aaf8 <__divsi3+0x78>
    aab0:	294b883a 	add	r5,r5,r5
    aab4:	10bfffc4 	addi	r2,r2,-1
    aab8:	18c7883a 	add	r3,r3,r3
    aabc:	293ffb36 	bltu	r5,r4,aaac <__divsi3+0x2c>
    aac0:	18000d26 	beq	r3,zero,aaf8 <__divsi3+0x78>
    aac4:	0005883a 	mov	r2,zero
    aac8:	31400236 	bltu	r6,r5,aad4 <__divsi3+0x54>
    aacc:	314dc83a 	sub	r6,r6,r5
    aad0:	10c4b03a 	or	r2,r2,r3
    aad4:	1806d07a 	srli	r3,r3,1
    aad8:	280ad07a 	srli	r5,r5,1
    aadc:	183ffa1e 	bne	r3,zero,aac8 <__divsi3+0x48>
    aae0:	38000126 	beq	r7,zero,aae8 <__divsi3+0x68>
    aae4:	0085c83a 	sub	r2,zero,r2
    aae8:	f800283a 	ret
    aaec:	0109c83a 	sub	r4,zero,r4
    aaf0:	01c00044 	movi	r7,1
    aaf4:	003fe406 	br	aa88 <__divsi3+0x8>
    aaf8:	0005883a 	mov	r2,zero
    aafc:	003ff806 	br	aae0 <__divsi3+0x60>

0000ab00 <__modsi3>:
    ab00:	20001a16 	blt	r4,zero,ab6c <__modsi3+0x6c>
    ab04:	000f883a 	mov	r7,zero
    ab08:	2005883a 	mov	r2,r4
    ab0c:	2800010e 	bge	r5,zero,ab14 <__modsi3+0x14>
    ab10:	014bc83a 	sub	r5,zero,r5
    ab14:	00c00044 	movi	r3,1
    ab18:	2900092e 	bgeu	r5,r4,ab40 <__modsi3+0x40>
    ab1c:	01800804 	movi	r6,32
    ab20:	00c00044 	movi	r3,1
    ab24:	00000106 	br	ab2c <__modsi3+0x2c>
    ab28:	30000d26 	beq	r6,zero,ab60 <__modsi3+0x60>
    ab2c:	294b883a 	add	r5,r5,r5
    ab30:	31bfffc4 	addi	r6,r6,-1
    ab34:	18c7883a 	add	r3,r3,r3
    ab38:	293ffb36 	bltu	r5,r4,ab28 <__modsi3+0x28>
    ab3c:	18000826 	beq	r3,zero,ab60 <__modsi3+0x60>
    ab40:	1806d07a 	srli	r3,r3,1
    ab44:	11400136 	bltu	r2,r5,ab4c <__modsi3+0x4c>
    ab48:	1145c83a 	sub	r2,r2,r5
    ab4c:	280ad07a 	srli	r5,r5,1
    ab50:	183ffb1e 	bne	r3,zero,ab40 <__modsi3+0x40>
    ab54:	38000126 	beq	r7,zero,ab5c <__modsi3+0x5c>
    ab58:	0085c83a 	sub	r2,zero,r2
    ab5c:	f800283a 	ret
    ab60:	2005883a 	mov	r2,r4
    ab64:	383ffd26 	beq	r7,zero,ab5c <__modsi3+0x5c>
    ab68:	003ffb06 	br	ab58 <__modsi3+0x58>
    ab6c:	0109c83a 	sub	r4,zero,r4
    ab70:	01c00044 	movi	r7,1
    ab74:	003fe406 	br	ab08 <__modsi3+0x8>

0000ab78 <__udivsi3>:
    ab78:	200d883a 	mov	r6,r4
    ab7c:	2900152e 	bgeu	r5,r4,abd4 <__udivsi3+0x5c>
    ab80:	28001416 	blt	r5,zero,abd4 <__udivsi3+0x5c>
    ab84:	00800804 	movi	r2,32
    ab88:	00c00044 	movi	r3,1
    ab8c:	00000206 	br	ab98 <__udivsi3+0x20>
    ab90:	10000e26 	beq	r2,zero,abcc <__udivsi3+0x54>
    ab94:	28000516 	blt	r5,zero,abac <__udivsi3+0x34>
    ab98:	294b883a 	add	r5,r5,r5
    ab9c:	10bfffc4 	addi	r2,r2,-1
    aba0:	18c7883a 	add	r3,r3,r3
    aba4:	293ffa36 	bltu	r5,r4,ab90 <__udivsi3+0x18>
    aba8:	18000826 	beq	r3,zero,abcc <__udivsi3+0x54>
    abac:	0005883a 	mov	r2,zero
    abb0:	31400236 	bltu	r6,r5,abbc <__udivsi3+0x44>
    abb4:	314dc83a 	sub	r6,r6,r5
    abb8:	10c4b03a 	or	r2,r2,r3
    abbc:	1806d07a 	srli	r3,r3,1
    abc0:	280ad07a 	srli	r5,r5,1
    abc4:	183ffa1e 	bne	r3,zero,abb0 <__udivsi3+0x38>
    abc8:	f800283a 	ret
    abcc:	0005883a 	mov	r2,zero
    abd0:	f800283a 	ret
    abd4:	00c00044 	movi	r3,1
    abd8:	003ff406 	br	abac <__udivsi3+0x34>

0000abdc <__umodsi3>:
    abdc:	2005883a 	mov	r2,r4
    abe0:	2900132e 	bgeu	r5,r4,ac30 <__umodsi3+0x54>
    abe4:	28001216 	blt	r5,zero,ac30 <__umodsi3+0x54>
    abe8:	01800804 	movi	r6,32
    abec:	00c00044 	movi	r3,1
    abf0:	00000206 	br	abfc <__umodsi3+0x20>
    abf4:	30000c26 	beq	r6,zero,ac28 <__umodsi3+0x4c>
    abf8:	28000516 	blt	r5,zero,ac10 <__umodsi3+0x34>
    abfc:	294b883a 	add	r5,r5,r5
    ac00:	31bfffc4 	addi	r6,r6,-1
    ac04:	18c7883a 	add	r3,r3,r3
    ac08:	293ffa36 	bltu	r5,r4,abf4 <__umodsi3+0x18>
    ac0c:	18000626 	beq	r3,zero,ac28 <__umodsi3+0x4c>
    ac10:	1806d07a 	srli	r3,r3,1
    ac14:	11400136 	bltu	r2,r5,ac1c <__umodsi3+0x40>
    ac18:	1145c83a 	sub	r2,r2,r5
    ac1c:	280ad07a 	srli	r5,r5,1
    ac20:	183ffb1e 	bne	r3,zero,ac10 <__umodsi3+0x34>
    ac24:	f800283a 	ret
    ac28:	2005883a 	mov	r2,r4
    ac2c:	f800283a 	ret
    ac30:	00c00044 	movi	r3,1
    ac34:	003ff606 	br	ac10 <__umodsi3+0x34>

0000ac38 <__mulsi3>:
    ac38:	0005883a 	mov	r2,zero
    ac3c:	20000726 	beq	r4,zero,ac5c <__mulsi3+0x24>
    ac40:	20c0004c 	andi	r3,r4,1
    ac44:	2008d07a 	srli	r4,r4,1
    ac48:	18000126 	beq	r3,zero,ac50 <__mulsi3+0x18>
    ac4c:	1145883a 	add	r2,r2,r5
    ac50:	294b883a 	add	r5,r5,r5
    ac54:	203ffa1e 	bne	r4,zero,ac40 <__mulsi3+0x8>
    ac58:	f800283a 	ret
    ac5c:	f800283a 	ret

0000ac60 <__adddf3>:
    ac60:	02000434 	movhi	r8,16
    ac64:	defffb04 	addi	sp,sp,-20
    ac68:	423fffc4 	addi	r8,r8,-1
    ac6c:	2a12703a 	and	r9,r5,r8
    ac70:	3a06703a 	and	r3,r7,r8
    ac74:	3804d53a 	srli	r2,r7,20
    ac78:	dc000015 	stw	r16,0(sp)
    ac7c:	2820d53a 	srli	r16,r5,20
    ac80:	2016d77a 	srli	r11,r4,29
    ac84:	3014d77a 	srli	r10,r6,29
    ac88:	280ad7fa 	srli	r5,r5,31
    ac8c:	481290fa 	slli	r9,r9,3
    ac90:	180690fa 	slli	r3,r3,3
    ac94:	380ed7fa 	srli	r7,r7,31
    ac98:	dc400115 	stw	r17,4(sp)
    ac9c:	8401ffcc 	andi	r16,r16,2047
    aca0:	1081ffcc 	andi	r2,r2,2047
    aca4:	dfc00415 	stw	ra,16(sp)
    aca8:	dcc00315 	stw	r19,12(sp)
    acac:	dc800215 	stw	r18,8(sp)
    acb0:	5a52b03a 	or	r9,r11,r9
    acb4:	50c6b03a 	or	r3,r10,r3
    acb8:	2823883a 	mov	r17,r5
    acbc:	201890fa 	slli	r12,r4,3
    acc0:	301690fa 	slli	r11,r6,3
    acc4:	8095c83a 	sub	r10,r16,r2
    acc8:	29c06a26 	beq	r5,r7,ae74 <__adddf3+0x214>
    accc:	0280590e 	bge	zero,r10,ae34 <__adddf3+0x1d4>
    acd0:	10007c26 	beq	r2,zero,aec4 <__adddf3+0x264>
    acd4:	8081ffd8 	cmpnei	r2,r16,2047
    acd8:	10010726 	beq	r2,zero,b0f8 <__adddf3+0x498>
    acdc:	18c02034 	orhi	r3,r3,128
    ace0:	50800e48 	cmpgei	r2,r10,57
    ace4:	1000ed1e 	bne	r2,zero,b09c <__adddf3+0x43c>
    ace8:	50800808 	cmpgei	r2,r10,32
    acec:	1001541e 	bne	r2,zero,b240 <__adddf3+0x5e0>
    acf0:	01000804 	movi	r4,32
    acf4:	2289c83a 	sub	r4,r4,r10
    acf8:	1926983a 	sll	r19,r3,r4
    acfc:	5a84d83a 	srl	r2,r11,r10
    ad00:	5908983a 	sll	r4,r11,r4
    ad04:	1a86d83a 	srl	r3,r3,r10
    ad08:	98a6b03a 	or	r19,r19,r2
    ad0c:	2016c03a 	cmpne	r11,r4,zero
    ad10:	9ae6b03a 	or	r19,r19,r11
    ad14:	48d3c83a 	sub	r9,r9,r3
    ad18:	64e7c83a 	sub	r19,r12,r19
    ad1c:	64c9803a 	cmpltu	r4,r12,r19
    ad20:	4909c83a 	sub	r4,r9,r4
    ad24:	2080202c 	andhi	r2,r4,128
    ad28:	10008726 	beq	r2,zero,af48 <__adddf3+0x2e8>
    ad2c:	02402034 	movhi	r9,128
    ad30:	4a7fffc4 	addi	r9,r9,-1
    ad34:	2264703a 	and	r18,r4,r9
    ad38:	9000cf26 	beq	r18,zero,b078 <__adddf3+0x418>
    ad3c:	9009883a 	mov	r4,r18
    ad40:	000d5480 	call	d548 <__clzsi2>
    ad44:	10fffe04 	addi	r3,r2,-8
    ad48:	01000804 	movi	r4,32
    ad4c:	20c9c83a 	sub	r4,r4,r3
    ad50:	990ad83a 	srl	r5,r19,r4
    ad54:	90c8983a 	sll	r4,r18,r3
    ad58:	98e6983a 	sll	r19,r19,r3
    ad5c:	2908b03a 	or	r4,r5,r4
    ad60:	1c00be16 	blt	r3,r16,b05c <__adddf3+0x3fc>
    ad64:	1c21c83a 	sub	r16,r3,r16
    ad68:	81400044 	addi	r5,r16,1
    ad6c:	28800808 	cmpgei	r2,r5,32
    ad70:	10011b1e 	bne	r2,zero,b1e0 <__adddf3+0x580>
    ad74:	00800804 	movi	r2,32
    ad78:	1145c83a 	sub	r2,r2,r5
    ad7c:	9946d83a 	srl	r3,r19,r5
    ad80:	98a6983a 	sll	r19,r19,r2
    ad84:	2084983a 	sll	r2,r4,r2
    ad88:	2148d83a 	srl	r4,r4,r5
    ad8c:	9826c03a 	cmpne	r19,r19,zero
    ad90:	10c4b03a 	or	r2,r2,r3
    ad94:	14e6b03a 	or	r19,r2,r19
    ad98:	0021883a 	mov	r16,zero
    ad9c:	988001cc 	andi	r2,r19,7
    ada0:	10000726 	beq	r2,zero,adc0 <__adddf3+0x160>
    ada4:	988003cc 	andi	r2,r19,15
    ada8:	10800120 	cmpeqi	r2,r2,4
    adac:	1000041e 	bne	r2,zero,adc0 <__adddf3+0x160>
    adb0:	99400104 	addi	r5,r19,4
    adb4:	2ce7803a 	cmpltu	r19,r5,r19
    adb8:	24c9883a 	add	r4,r4,r19
    adbc:	2827883a 	mov	r19,r5
    adc0:	2080202c 	andhi	r2,r4,128
    adc4:	10006226 	beq	r2,zero,af50 <__adddf3+0x2f0>
    adc8:	84000044 	addi	r16,r16,1
    adcc:	8081ffe0 	cmpeqi	r2,r16,2047
    add0:	8401ffcc 	andi	r16,r16,2047
    add4:	1000731e 	bne	r2,zero,afa4 <__adddf3+0x344>
    add8:	017fe034 	movhi	r5,65408
    addc:	297fffc4 	addi	r5,r5,-1
    ade0:	214a703a 	and	r5,r4,r5
    ade4:	2804977a 	slli	r2,r5,29
    ade8:	280a927a 	slli	r5,r5,9
    adec:	9826d0fa 	srli	r19,r19,3
    adf0:	2808d33a 	srli	r4,r5,12
    adf4:	14c4b03a 	or	r2,r2,r19
    adf8:	8020953a 	slli	r16,r16,20
    adfc:	00c00434 	movhi	r3,16
    ae00:	8c403fcc 	andi	r17,r17,255
    ae04:	882297fa 	slli	r17,r17,31
    ae08:	18ffffc4 	addi	r3,r3,-1
    ae0c:	20c6703a 	and	r3,r4,r3
    ae10:	1c06b03a 	or	r3,r3,r16
    ae14:	1c46b03a 	or	r3,r3,r17
    ae18:	dfc00417 	ldw	ra,16(sp)
    ae1c:	dcc00317 	ldw	r19,12(sp)
    ae20:	dc800217 	ldw	r18,8(sp)
    ae24:	dc400117 	ldw	r17,4(sp)
    ae28:	dc000017 	ldw	r16,0(sp)
    ae2c:	dec00504 	addi	sp,sp,20
    ae30:	f800283a 	ret
    ae34:	50002b1e 	bne	r10,zero,aee4 <__adddf3+0x284>
    ae38:	80800044 	addi	r2,r16,1
    ae3c:	1081ff8c 	andi	r2,r2,2046
    ae40:	1000a11e 	bne	r2,zero,b0c8 <__adddf3+0x468>
    ae44:	4b0ab03a 	or	r5,r9,r12
    ae48:	1ac4b03a 	or	r2,r3,r11
    ae4c:	80015c1e 	bne	r16,zero,b3c0 <__adddf3+0x760>
    ae50:	28012826 	beq	r5,zero,b2f4 <__adddf3+0x694>
    ae54:	1001671e 	bne	r2,zero,b3f4 <__adddf3+0x794>
    ae58:	4826977a 	slli	r19,r9,29
    ae5c:	00c80034 	movhi	r3,8192
    ae60:	18ffffc4 	addi	r3,r3,-1
    ae64:	20c4703a 	and	r2,r4,r3
    ae68:	9884b03a 	or	r2,r19,r2
    ae6c:	4812d0fa 	srli	r9,r9,3
    ae70:	00003d06 	br	af68 <__adddf3+0x308>
    ae74:	02804f0e 	bge	zero,r10,afb4 <__adddf3+0x354>
    ae78:	10002426 	beq	r2,zero,af0c <__adddf3+0x2ac>
    ae7c:	8081ffd8 	cmpnei	r2,r16,2047
    ae80:	10009d26 	beq	r2,zero,b0f8 <__adddf3+0x498>
    ae84:	18c02034 	orhi	r3,r3,128
    ae88:	50800e48 	cmpgei	r2,r10,57
    ae8c:	10003b1e 	bne	r2,zero,af7c <__adddf3+0x31c>
    ae90:	50800808 	cmpgei	r2,r10,32
    ae94:	10010326 	beq	r2,zero,b2a4 <__adddf3+0x644>
    ae98:	54fff804 	addi	r19,r10,-32
    ae9c:	51000820 	cmpeqi	r4,r10,32
    aea0:	1cc4d83a 	srl	r2,r3,r19
    aea4:	2000041e 	bne	r4,zero,aeb8 <__adddf3+0x258>
    aea8:	01001004 	movi	r4,64
    aeac:	2295c83a 	sub	r10,r4,r10
    aeb0:	1a86983a 	sll	r3,r3,r10
    aeb4:	58d6b03a 	or	r11,r11,r3
    aeb8:	5826c03a 	cmpne	r19,r11,zero
    aebc:	98a6b03a 	or	r19,r19,r2
    aec0:	00003006 	br	af84 <__adddf3+0x324>
    aec4:	1ac4b03a 	or	r2,r3,r11
    aec8:	10007726 	beq	r2,zero,b0a8 <__adddf3+0x448>
    aecc:	50bfffc4 	addi	r2,r10,-1
    aed0:	10011926 	beq	r2,zero,b338 <__adddf3+0x6d8>
    aed4:	5281ffd8 	cmpnei	r10,r10,2047
    aed8:	50012026 	beq	r10,zero,b35c <__adddf3+0x6fc>
    aedc:	1015883a 	mov	r10,r2
    aee0:	003f7f06 	br	ace0 <__adddf3+0x80>
    aee4:	1409c83a 	sub	r4,r2,r16
    aee8:	8000a61e 	bne	r16,zero,b184 <__adddf3+0x524>
    aeec:	4b0ab03a 	or	r5,r9,r12
    aef0:	2800f726 	beq	r5,zero,b2d0 <__adddf3+0x670>
    aef4:	217fffc4 	addi	r5,r4,-1
    aef8:	28017f26 	beq	r5,zero,b4f8 <__adddf3+0x898>
    aefc:	2101ffd8 	cmpnei	r4,r4,2047
    af00:	2001a326 	beq	r4,zero,b590 <__adddf3+0x930>
    af04:	2809883a 	mov	r4,r5
    af08:	0000a106 	br	b190 <__adddf3+0x530>
    af0c:	1ac4b03a 	or	r2,r3,r11
    af10:	10006526 	beq	r2,zero,b0a8 <__adddf3+0x448>
    af14:	50bfffc4 	addi	r2,r10,-1
    af18:	10000426 	beq	r2,zero,af2c <__adddf3+0x2cc>
    af1c:	5281ffd8 	cmpnei	r10,r10,2047
    af20:	50014326 	beq	r10,zero,b430 <__adddf3+0x7d0>
    af24:	1015883a 	mov	r10,r2
    af28:	003fd706 	br	ae88 <__adddf3+0x228>
    af2c:	62e7883a 	add	r19,r12,r11
    af30:	48d3883a 	add	r9,r9,r3
    af34:	9b09803a 	cmpltu	r4,r19,r12
    af38:	4909883a 	add	r4,r9,r4
    af3c:	2080202c 	andhi	r2,r4,128
    af40:	1000b41e 	bne	r2,zero,b214 <__adddf3+0x5b4>
    af44:	04000044 	movi	r16,1
    af48:	988001cc 	andi	r2,r19,7
    af4c:	103f951e 	bne	r2,zero,ada4 <__adddf3+0x144>
    af50:	9826d0fa 	srli	r19,r19,3
    af54:	2004977a 	slli	r2,r4,29
    af58:	2012d0fa 	srli	r9,r4,3
    af5c:	9884b03a 	or	r2,r19,r2
    af60:	80c1ffe0 	cmpeqi	r3,r16,2047
    af64:	1800351e 	bne	r3,zero,b03c <__adddf3+0x3dc>
    af68:	01000434 	movhi	r4,16
    af6c:	213fffc4 	addi	r4,r4,-1
    af70:	4908703a 	and	r4,r9,r4
    af74:	8401ffcc 	andi	r16,r16,2047
    af78:	003f9f06 	br	adf8 <__adddf3+0x198>
    af7c:	1ac8b03a 	or	r4,r3,r11
    af80:	2026c03a 	cmpne	r19,r4,zero
    af84:	9b27883a 	add	r19,r19,r12
    af88:	9b09803a 	cmpltu	r4,r19,r12
    af8c:	2249883a 	add	r4,r4,r9
    af90:	2080202c 	andhi	r2,r4,128
    af94:	103fec26 	beq	r2,zero,af48 <__adddf3+0x2e8>
    af98:	84000044 	addi	r16,r16,1
    af9c:	8081ffe0 	cmpeqi	r2,r16,2047
    afa0:	10009d26 	beq	r2,zero,b218 <__adddf3+0x5b8>
    afa4:	0401ffc4 	movi	r16,2047
    afa8:	0009883a 	mov	r4,zero
    afac:	0005883a 	mov	r2,zero
    afb0:	003f9106 	br	adf8 <__adddf3+0x198>
    afb4:	5000571e 	bne	r10,zero,b114 <__adddf3+0x4b4>
    afb8:	80800044 	addi	r2,r16,1
    afbc:	1141ff8c 	andi	r5,r2,2046
    afc0:	2800ed1e 	bne	r5,zero,b378 <__adddf3+0x718>
    afc4:	4b04b03a 	or	r2,r9,r12
    afc8:	8000a826 	beq	r16,zero,b26c <__adddf3+0x60c>
    afcc:	10010226 	beq	r2,zero,b3d8 <__adddf3+0x778>
    afd0:	1ad6b03a 	or	r11,r3,r11
    afd4:	480a977a 	slli	r5,r9,29
    afd8:	4812d0fa 	srli	r9,r9,3
    afdc:	58015f26 	beq	r11,zero,b55c <__adddf3+0x8fc>
    afe0:	02080034 	movhi	r8,8192
    afe4:	423fffc4 	addi	r8,r8,-1
    afe8:	2204703a 	and	r2,r4,r8
    afec:	4900022c 	andhi	r4,r9,8
    aff0:	114ab03a 	or	r5,r2,r5
    aff4:	20000826 	beq	r4,zero,b018 <__adddf3+0x3b8>
    aff8:	1808d0fa 	srli	r4,r3,3
    affc:	2080022c 	andhi	r2,r4,8
    b000:	1000051e 	bne	r2,zero,b018 <__adddf3+0x3b8>
    b004:	1806977a 	slli	r3,r3,29
    b008:	3204703a 	and	r2,r6,r8
    b00c:	3823883a 	mov	r17,r7
    b010:	10cab03a 	or	r5,r2,r3
    b014:	2013883a 	mov	r9,r4
    b018:	2804d77a 	srli	r2,r5,29
    b01c:	480890fa 	slli	r4,r9,3
    b020:	00c80034 	movhi	r3,8192
    b024:	18ffffc4 	addi	r3,r3,-1
    b028:	1108b03a 	or	r4,r2,r4
    b02c:	2004977a 	slli	r2,r4,29
    b030:	2012d0fa 	srli	r9,r4,3
    b034:	28ca703a 	and	r5,r5,r3
    b038:	1144b03a 	or	r2,r2,r5
    b03c:	4886b03a 	or	r3,r9,r2
    b040:	18016b26 	beq	r3,zero,b5f0 <__adddf3+0x990>
    b044:	00c00434 	movhi	r3,16
    b048:	49000234 	orhi	r4,r9,8
    b04c:	18ffffc4 	addi	r3,r3,-1
    b050:	20c8703a 	and	r4,r4,r3
    b054:	0401ffc4 	movi	r16,2047
    b058:	003f6706 	br	adf8 <__adddf3+0x198>
    b05c:	017fe034 	movhi	r5,65408
    b060:	297fffc4 	addi	r5,r5,-1
    b064:	988001cc 	andi	r2,r19,7
    b068:	80e1c83a 	sub	r16,r16,r3
    b06c:	2148703a 	and	r4,r4,r5
    b070:	103f4c1e 	bne	r2,zero,ada4 <__adddf3+0x144>
    b074:	003fb606 	br	af50 <__adddf3+0x2f0>
    b078:	9809883a 	mov	r4,r19
    b07c:	000d5480 	call	d548 <__clzsi2>
    b080:	10c00604 	addi	r3,r2,24
    b084:	19000808 	cmpgei	r4,r3,32
    b088:	203f2f26 	beq	r4,zero,ad48 <__adddf3+0xe8>
    b08c:	113ffe04 	addi	r4,r2,-8
    b090:	9908983a 	sll	r4,r19,r4
    b094:	0027883a 	mov	r19,zero
    b098:	003f3106 	br	ad60 <__adddf3+0x100>
    b09c:	1ac8b03a 	or	r4,r3,r11
    b0a0:	2026c03a 	cmpne	r19,r4,zero
    b0a4:	003f1c06 	br	ad18 <__adddf3+0xb8>
    b0a8:	4826977a 	slli	r19,r9,29
    b0ac:	00c80034 	movhi	r3,8192
    b0b0:	18ffffc4 	addi	r3,r3,-1
    b0b4:	20c4703a 	and	r2,r4,r3
    b0b8:	14c4b03a 	or	r2,r2,r19
    b0bc:	4812d0fa 	srli	r9,r9,3
    b0c0:	5021883a 	mov	r16,r10
    b0c4:	003fa606 	br	af60 <__adddf3+0x300>
    b0c8:	62e7c83a 	sub	r19,r12,r11
    b0cc:	48e5c83a 	sub	r18,r9,r3
    b0d0:	64c9803a 	cmpltu	r4,r12,r19
    b0d4:	9125c83a 	sub	r18,r18,r4
    b0d8:	9080202c 	andhi	r2,r18,128
    b0dc:	1000b21e 	bne	r2,zero,b3a8 <__adddf3+0x748>
    b0e0:	9c84b03a 	or	r2,r19,r18
    b0e4:	103f141e 	bne	r2,zero,ad38 <__adddf3+0xd8>
    b0e8:	0013883a 	mov	r9,zero
    b0ec:	0021883a 	mov	r16,zero
    b0f0:	0023883a 	mov	r17,zero
    b0f4:	003f9c06 	br	af68 <__adddf3+0x308>
    b0f8:	4826977a 	slli	r19,r9,29
    b0fc:	00c80034 	movhi	r3,8192
    b100:	18ffffc4 	addi	r3,r3,-1
    b104:	20c4703a 	and	r2,r4,r3
    b108:	14c4b03a 	or	r2,r2,r19
    b10c:	4812d0fa 	srli	r9,r9,3
    b110:	003fca06 	br	b03c <__adddf3+0x3dc>
    b114:	1409c83a 	sub	r4,r2,r16
    b118:	80005e1e 	bne	r16,zero,b294 <__adddf3+0x634>
    b11c:	4b0ab03a 	or	r5,r9,r12
    b120:	28011326 	beq	r5,zero,b570 <__adddf3+0x910>
    b124:	217fffc4 	addi	r5,r4,-1
    b128:	28012c26 	beq	r5,zero,b5dc <__adddf3+0x97c>
    b12c:	2101ffd8 	cmpnei	r4,r4,2047
    b130:	2000a926 	beq	r4,zero,b3d8 <__adddf3+0x778>
    b134:	2809883a 	mov	r4,r5
    b138:	21400e48 	cmpgei	r5,r4,57
    b13c:	2800b91e 	bne	r5,zero,b424 <__adddf3+0x7c4>
    b140:	21400808 	cmpgei	r5,r4,32
    b144:	28011a1e 	bne	r5,zero,b5b0 <__adddf3+0x950>
    b148:	01400804 	movi	r5,32
    b14c:	290bc83a 	sub	r5,r5,r4
    b150:	4966983a 	sll	r19,r9,r5
    b154:	610cd83a 	srl	r6,r12,r4
    b158:	614a983a 	sll	r5,r12,r5
    b15c:	4912d83a 	srl	r9,r9,r4
    b160:	99a6b03a 	or	r19,r19,r6
    b164:	280ac03a 	cmpne	r5,r5,zero
    b168:	9966b03a 	or	r19,r19,r5
    b16c:	1a47883a 	add	r3,r3,r9
    b170:	9ae7883a 	add	r19,r19,r11
    b174:	9ac9803a 	cmpltu	r4,r19,r11
    b178:	20c9883a 	add	r4,r4,r3
    b17c:	1021883a 	mov	r16,r2
    b180:	003f8306 	br	af90 <__adddf3+0x330>
    b184:	1141ffd8 	cmpnei	r5,r2,2047
    b188:	28006326 	beq	r5,zero,b318 <__adddf3+0x6b8>
    b18c:	4a402034 	orhi	r9,r9,128
    b190:	21400e48 	cmpgei	r5,r4,57
    b194:	28006e1e 	bne	r5,zero,b350 <__adddf3+0x6f0>
    b198:	21400808 	cmpgei	r5,r4,32
    b19c:	2800ab1e 	bne	r5,zero,b44c <__adddf3+0x7ec>
    b1a0:	01400804 	movi	r5,32
    b1a4:	290bc83a 	sub	r5,r5,r4
    b1a8:	4966983a 	sll	r19,r9,r5
    b1ac:	610cd83a 	srl	r6,r12,r4
    b1b0:	614a983a 	sll	r5,r12,r5
    b1b4:	4912d83a 	srl	r9,r9,r4
    b1b8:	99a6b03a 	or	r19,r19,r6
    b1bc:	280ac03a 	cmpne	r5,r5,zero
    b1c0:	9966b03a 	or	r19,r19,r5
    b1c4:	1a47c83a 	sub	r3,r3,r9
    b1c8:	5ce7c83a 	sub	r19,r11,r19
    b1cc:	5cc9803a 	cmpltu	r4,r11,r19
    b1d0:	1909c83a 	sub	r4,r3,r4
    b1d4:	3823883a 	mov	r17,r7
    b1d8:	1021883a 	mov	r16,r2
    b1dc:	003ed106 	br	ad24 <__adddf3+0xc4>
    b1e0:	843ff844 	addi	r16,r16,-31
    b1e4:	28800820 	cmpeqi	r2,r5,32
    b1e8:	2420d83a 	srl	r16,r4,r16
    b1ec:	1000041e 	bne	r2,zero,b200 <__adddf3+0x5a0>
    b1f0:	00801004 	movi	r2,64
    b1f4:	114bc83a 	sub	r5,r2,r5
    b1f8:	2148983a 	sll	r4,r4,r5
    b1fc:	9926b03a 	or	r19,r19,r4
    b200:	9826c03a 	cmpne	r19,r19,zero
    b204:	9c26b03a 	or	r19,r19,r16
    b208:	0009883a 	mov	r4,zero
    b20c:	0021883a 	mov	r16,zero
    b210:	003f4d06 	br	af48 <__adddf3+0x2e8>
    b214:	04000084 	movi	r16,2
    b218:	00bfe034 	movhi	r2,65408
    b21c:	10bfffc4 	addi	r2,r2,-1
    b220:	208a703a 	and	r5,r4,r2
    b224:	9804d07a 	srli	r2,r19,1
    b228:	280697fa 	slli	r3,r5,31
    b22c:	9cc0004c 	andi	r19,r19,1
    b230:	14e6b03a 	or	r19,r2,r19
    b234:	2808d07a 	srli	r4,r5,1
    b238:	1ce6b03a 	or	r19,r3,r19
    b23c:	003ed706 	br	ad9c <__adddf3+0x13c>
    b240:	54fff804 	addi	r19,r10,-32
    b244:	50800820 	cmpeqi	r2,r10,32
    b248:	1ce6d83a 	srl	r19,r3,r19
    b24c:	1000041e 	bne	r2,zero,b260 <__adddf3+0x600>
    b250:	00801004 	movi	r2,64
    b254:	1295c83a 	sub	r10,r2,r10
    b258:	1a86983a 	sll	r3,r3,r10
    b25c:	58d6b03a 	or	r11,r11,r3
    b260:	5808c03a 	cmpne	r4,r11,zero
    b264:	24e6b03a 	or	r19,r4,r19
    b268:	003eab06 	br	ad18 <__adddf3+0xb8>
    b26c:	1000a926 	beq	r2,zero,b514 <__adddf3+0x8b4>
    b270:	1ac4b03a 	or	r2,r3,r11
    b274:	1000ae1e 	bne	r2,zero,b530 <__adddf3+0x8d0>
    b278:	4806977a 	slli	r3,r9,29
    b27c:	00880034 	movhi	r2,8192
    b280:	10bfffc4 	addi	r2,r2,-1
    b284:	2084703a 	and	r2,r4,r2
    b288:	10c4b03a 	or	r2,r2,r3
    b28c:	4812d0fa 	srli	r9,r9,3
    b290:	003f3506 	br	af68 <__adddf3+0x308>
    b294:	1141ffd8 	cmpnei	r5,r2,2047
    b298:	28004f26 	beq	r5,zero,b3d8 <__adddf3+0x778>
    b29c:	4a402034 	orhi	r9,r9,128
    b2a0:	003fa506 	br	b138 <__adddf3+0x4d8>
    b2a4:	01000804 	movi	r4,32
    b2a8:	2289c83a 	sub	r4,r4,r10
    b2ac:	1926983a 	sll	r19,r3,r4
    b2b0:	5a84d83a 	srl	r2,r11,r10
    b2b4:	5908983a 	sll	r4,r11,r4
    b2b8:	1a86d83a 	srl	r3,r3,r10
    b2bc:	98a6b03a 	or	r19,r19,r2
    b2c0:	2016c03a 	cmpne	r11,r4,zero
    b2c4:	9ae6b03a 	or	r19,r19,r11
    b2c8:	48d3883a 	add	r9,r9,r3
    b2cc:	003f2d06 	br	af84 <__adddf3+0x324>
    b2d0:	01480034 	movhi	r5,8192
    b2d4:	1826977a 	slli	r19,r3,29
    b2d8:	297fffc4 	addi	r5,r5,-1
    b2dc:	3144703a 	and	r2,r6,r5
    b2e0:	14c4b03a 	or	r2,r2,r19
    b2e4:	1812d0fa 	srli	r9,r3,3
    b2e8:	3823883a 	mov	r17,r7
    b2ec:	2021883a 	mov	r16,r4
    b2f0:	003f1b06 	br	af60 <__adddf3+0x300>
    b2f4:	10007d26 	beq	r2,zero,b4ec <__adddf3+0x88c>
    b2f8:	00880034 	movhi	r2,8192
    b2fc:	1808977a 	slli	r4,r3,29
    b300:	10bfffc4 	addi	r2,r2,-1
    b304:	3084703a 	and	r2,r6,r2
    b308:	1104b03a 	or	r2,r2,r4
    b30c:	1812d0fa 	srli	r9,r3,3
    b310:	3823883a 	mov	r17,r7
    b314:	003f1406 	br	af68 <__adddf3+0x308>
    b318:	180a977a 	slli	r5,r3,29
    b31c:	01080034 	movhi	r4,8192
    b320:	213fffc4 	addi	r4,r4,-1
    b324:	3104703a 	and	r2,r6,r4
    b328:	2884b03a 	or	r2,r5,r2
    b32c:	1812d0fa 	srli	r9,r3,3
    b330:	3823883a 	mov	r17,r7
    b334:	003f4106 	br	b03c <__adddf3+0x3dc>
    b338:	62e7c83a 	sub	r19,r12,r11
    b33c:	48d3c83a 	sub	r9,r9,r3
    b340:	64c9803a 	cmpltu	r4,r12,r19
    b344:	4909c83a 	sub	r4,r9,r4
    b348:	04000044 	movi	r16,1
    b34c:	003e7506 	br	ad24 <__adddf3+0xc4>
    b350:	4b12b03a 	or	r9,r9,r12
    b354:	4826c03a 	cmpne	r19,r9,zero
    b358:	003f9b06 	br	b1c8 <__adddf3+0x568>
    b35c:	4826977a 	slli	r19,r9,29
    b360:	00c80034 	movhi	r3,8192
    b364:	18ffffc4 	addi	r3,r3,-1
    b368:	20c4703a 	and	r2,r4,r3
    b36c:	9884b03a 	or	r2,r19,r2
    b370:	4812d0fa 	srli	r9,r9,3
    b374:	003f3106 	br	b03c <__adddf3+0x3dc>
    b378:	1101ffe0 	cmpeqi	r4,r2,2047
    b37c:	203f091e 	bne	r4,zero,afa4 <__adddf3+0x344>
    b380:	62d7883a 	add	r11,r12,r11
    b384:	5b09803a 	cmpltu	r4,r11,r12
    b388:	48d3883a 	add	r9,r9,r3
    b38c:	490b883a 	add	r5,r9,r4
    b390:	282697fa 	slli	r19,r5,31
    b394:	5816d07a 	srli	r11,r11,1
    b398:	2808d07a 	srli	r4,r5,1
    b39c:	1021883a 	mov	r16,r2
    b3a0:	9ae6b03a 	or	r19,r19,r11
    b3a4:	003ee806 	br	af48 <__adddf3+0x2e8>
    b3a8:	5b27c83a 	sub	r19,r11,r12
    b3ac:	1a53c83a 	sub	r9,r3,r9
    b3b0:	5cc9803a 	cmpltu	r4,r11,r19
    b3b4:	4925c83a 	sub	r18,r9,r4
    b3b8:	3823883a 	mov	r17,r7
    b3bc:	003e5e06 	br	ad38 <__adddf3+0xd8>
    b3c0:	28002d1e 	bne	r5,zero,b478 <__adddf3+0x818>
    b3c4:	103fd41e 	bne	r2,zero,b318 <__adddf3+0x6b8>
    b3c8:	00bfffc4 	movi	r2,-1
    b3cc:	0023883a 	mov	r17,zero
    b3d0:	4013883a 	mov	r9,r8
    b3d4:	003f1b06 	br	b044 <__adddf3+0x3e4>
    b3d8:	00880034 	movhi	r2,8192
    b3dc:	1808977a 	slli	r4,r3,29
    b3e0:	10bfffc4 	addi	r2,r2,-1
    b3e4:	3084703a 	and	r2,r6,r2
    b3e8:	1104b03a 	or	r2,r2,r4
    b3ec:	1812d0fa 	srli	r9,r3,3
    b3f0:	003f1206 	br	b03c <__adddf3+0x3dc>
    b3f4:	62e7c83a 	sub	r19,r12,r11
    b3f8:	48cbc83a 	sub	r5,r9,r3
    b3fc:	64c9803a 	cmpltu	r4,r12,r19
    b400:	2909c83a 	sub	r4,r5,r4
    b404:	2080202c 	andhi	r2,r4,128
    b408:	10003626 	beq	r2,zero,b4e4 <__adddf3+0x884>
    b40c:	5b27c83a 	sub	r19,r11,r12
    b410:	1a53c83a 	sub	r9,r3,r9
    b414:	5cc9803a 	cmpltu	r4,r11,r19
    b418:	4909c83a 	sub	r4,r9,r4
    b41c:	3823883a 	mov	r17,r7
    b420:	003e5e06 	br	ad9c <__adddf3+0x13c>
    b424:	4b12b03a 	or	r9,r9,r12
    b428:	4826c03a 	cmpne	r19,r9,zero
    b42c:	003f5006 	br	b170 <__adddf3+0x510>
    b430:	4806977a 	slli	r3,r9,29
    b434:	00880034 	movhi	r2,8192
    b438:	10bfffc4 	addi	r2,r2,-1
    b43c:	2084703a 	and	r2,r4,r2
    b440:	10c4b03a 	or	r2,r2,r3
    b444:	4812d0fa 	srli	r9,r9,3
    b448:	003efc06 	br	b03c <__adddf3+0x3dc>
    b44c:	217ff804 	addi	r5,r4,-32
    b450:	21800820 	cmpeqi	r6,r4,32
    b454:	494ad83a 	srl	r5,r9,r5
    b458:	3000041e 	bne	r6,zero,b46c <__adddf3+0x80c>
    b45c:	01801004 	movi	r6,64
    b460:	3109c83a 	sub	r4,r6,r4
    b464:	4912983a 	sll	r9,r9,r4
    b468:	6258b03a 	or	r12,r12,r9
    b46c:	6026c03a 	cmpne	r19,r12,zero
    b470:	9966b03a 	or	r19,r19,r5
    b474:	003f5406 	br	b1c8 <__adddf3+0x568>
    b478:	480a977a 	slli	r5,r9,29
    b47c:	4812d0fa 	srli	r9,r9,3
    b480:	10003626 	beq	r2,zero,b55c <__adddf3+0x8fc>
    b484:	02080034 	movhi	r8,8192
    b488:	423fffc4 	addi	r8,r8,-1
    b48c:	2204703a 	and	r2,r4,r8
    b490:	4900022c 	andhi	r4,r9,8
    b494:	114ab03a 	or	r5,r2,r5
    b498:	20000826 	beq	r4,zero,b4bc <__adddf3+0x85c>
    b49c:	1808d0fa 	srli	r4,r3,3
    b4a0:	2080022c 	andhi	r2,r4,8
    b4a4:	1000051e 	bne	r2,zero,b4bc <__adddf3+0x85c>
    b4a8:	1806977a 	slli	r3,r3,29
    b4ac:	3204703a 	and	r2,r6,r8
    b4b0:	3823883a 	mov	r17,r7
    b4b4:	10cab03a 	or	r5,r2,r3
    b4b8:	2013883a 	mov	r9,r4
    b4bc:	480890fa 	slli	r4,r9,3
    b4c0:	2804d77a 	srli	r2,r5,29
    b4c4:	00c80034 	movhi	r3,8192
    b4c8:	18ffffc4 	addi	r3,r3,-1
    b4cc:	1108b03a 	or	r4,r2,r4
    b4d0:	200c977a 	slli	r6,r4,29
    b4d4:	28c4703a 	and	r2,r5,r3
    b4d8:	2012d0fa 	srli	r9,r4,3
    b4dc:	3084b03a 	or	r2,r6,r2
    b4e0:	003ed606 	br	b03c <__adddf3+0x3dc>
    b4e4:	9904b03a 	or	r2,r19,r4
    b4e8:	103e971e 	bne	r2,zero,af48 <__adddf3+0x2e8>
    b4ec:	0013883a 	mov	r9,zero
    b4f0:	0023883a 	mov	r17,zero
    b4f4:	003e9c06 	br	af68 <__adddf3+0x308>
    b4f8:	5b27c83a 	sub	r19,r11,r12
    b4fc:	1a53c83a 	sub	r9,r3,r9
    b500:	5cc9803a 	cmpltu	r4,r11,r19
    b504:	4909c83a 	sub	r4,r9,r4
    b508:	3823883a 	mov	r17,r7
    b50c:	04000044 	movi	r16,1
    b510:	003e0406 	br	ad24 <__adddf3+0xc4>
    b514:	180a977a 	slli	r5,r3,29
    b518:	01080034 	movhi	r4,8192
    b51c:	213fffc4 	addi	r4,r4,-1
    b520:	3104703a 	and	r2,r6,r4
    b524:	2884b03a 	or	r2,r5,r2
    b528:	1812d0fa 	srli	r9,r3,3
    b52c:	003e8e06 	br	af68 <__adddf3+0x308>
    b530:	62e7883a 	add	r19,r12,r11
    b534:	48d3883a 	add	r9,r9,r3
    b538:	9b09803a 	cmpltu	r4,r19,r12
    b53c:	4909883a 	add	r4,r9,r4
    b540:	2080202c 	andhi	r2,r4,128
    b544:	103e8026 	beq	r2,zero,af48 <__adddf3+0x2e8>
    b548:	00bfe034 	movhi	r2,65408
    b54c:	10bfffc4 	addi	r2,r2,-1
    b550:	2088703a 	and	r4,r4,r2
    b554:	04000044 	movi	r16,1
    b558:	003e7b06 	br	af48 <__adddf3+0x2e8>
    b55c:	00880034 	movhi	r2,8192
    b560:	10bfffc4 	addi	r2,r2,-1
    b564:	2084703a 	and	r2,r4,r2
    b568:	1144b03a 	or	r2,r2,r5
    b56c:	003eb306 	br	b03c <__adddf3+0x3dc>
    b570:	180e977a 	slli	r7,r3,29
    b574:	01480034 	movhi	r5,8192
    b578:	297fffc4 	addi	r5,r5,-1
    b57c:	3144703a 	and	r2,r6,r5
    b580:	3884b03a 	or	r2,r7,r2
    b584:	1812d0fa 	srli	r9,r3,3
    b588:	2021883a 	mov	r16,r4
    b58c:	003e7406 	br	af60 <__adddf3+0x300>
    b590:	00880034 	movhi	r2,8192
    b594:	1808977a 	slli	r4,r3,29
    b598:	10bfffc4 	addi	r2,r2,-1
    b59c:	3084703a 	and	r2,r6,r2
    b5a0:	1104b03a 	or	r2,r2,r4
    b5a4:	1812d0fa 	srli	r9,r3,3
    b5a8:	3823883a 	mov	r17,r7
    b5ac:	003ea306 	br	b03c <__adddf3+0x3dc>
    b5b0:	217ff804 	addi	r5,r4,-32
    b5b4:	21800820 	cmpeqi	r6,r4,32
    b5b8:	494ad83a 	srl	r5,r9,r5
    b5bc:	3000041e 	bne	r6,zero,b5d0 <__adddf3+0x970>
    b5c0:	01801004 	movi	r6,64
    b5c4:	3109c83a 	sub	r4,r6,r4
    b5c8:	4912983a 	sll	r9,r9,r4
    b5cc:	6258b03a 	or	r12,r12,r9
    b5d0:	6026c03a 	cmpne	r19,r12,zero
    b5d4:	9966b03a 	or	r19,r19,r5
    b5d8:	003ee506 	br	b170 <__adddf3+0x510>
    b5dc:	62e7883a 	add	r19,r12,r11
    b5e0:	48d3883a 	add	r9,r9,r3
    b5e4:	9ac9803a 	cmpltu	r4,r19,r11
    b5e8:	4909883a 	add	r4,r9,r4
    b5ec:	003e5306 	br	af3c <__adddf3+0x2dc>
    b5f0:	0005883a 	mov	r2,zero
    b5f4:	0401ffc4 	movi	r16,2047
    b5f8:	0009883a 	mov	r4,zero
    b5fc:	003dfe06 	br	adf8 <__adddf3+0x198>

0000b600 <__divdf3>:
    b600:	deffef04 	addi	sp,sp,-68
    b604:	2804d53a 	srli	r2,r5,20
    b608:	dd000b15 	stw	r20,44(sp)
    b60c:	2828d7fa 	srli	r20,r5,31
    b610:	dc400815 	stw	r17,32(sp)
    b614:	04400434 	movhi	r17,16
    b618:	dd800d15 	stw	r22,52(sp)
    b61c:	dcc00a15 	stw	r19,40(sp)
    b620:	8c7fffc4 	addi	r17,r17,-1
    b624:	dfc01015 	stw	ra,64(sp)
    b628:	df000f15 	stw	fp,60(sp)
    b62c:	ddc00e15 	stw	r23,56(sp)
    b630:	dd400c15 	stw	r21,48(sp)
    b634:	dc800915 	stw	r18,36(sp)
    b638:	dc000715 	stw	r16,28(sp)
    b63c:	1081ffcc 	andi	r2,r2,2047
    b640:	2027883a 	mov	r19,r4
    b644:	2c62703a 	and	r17,r5,r17
    b648:	a02d883a 	mov	r22,r20
    b64c:	10008726 	beq	r2,zero,b86c <__divdf3+0x26c>
    b650:	10c1ffe0 	cmpeqi	r3,r2,2047
    b654:	18009d1e 	bne	r3,zero,b8cc <__divdf3+0x2cc>
    b658:	880a90fa 	slli	r5,r17,3
    b65c:	2008d77a 	srli	r4,r4,29
    b660:	982690fa 	slli	r19,r19,3
    b664:	14bf0044 	addi	r18,r2,-1023
    b668:	2148b03a 	or	r4,r4,r5
    b66c:	24002034 	orhi	r16,r4,128
    b670:	0023883a 	mov	r17,zero
    b674:	002f883a 	mov	r23,zero
    b678:	3806d53a 	srli	r3,r7,20
    b67c:	01000434 	movhi	r4,16
    b680:	213fffc4 	addi	r4,r4,-1
    b684:	18c1ffcc 	andi	r3,r3,2047
    b688:	392a703a 	and	r21,r7,r4
    b68c:	3838d7fa 	srli	fp,r7,31
    b690:	18006326 	beq	r3,zero,b820 <__divdf3+0x220>
    b694:	1881ffe0 	cmpeqi	r2,r3,2047
    b698:	1000201e 	bne	r2,zero,b71c <__divdf3+0x11c>
    b69c:	a80890fa 	slli	r4,r21,3
    b6a0:	300ed77a 	srli	r7,r6,29
    b6a4:	300a90fa 	slli	r5,r6,3
    b6a8:	18ff0044 	addi	r3,r3,-1023
    b6ac:	3908b03a 	or	r4,r7,r4
    b6b0:	90e5c83a 	sub	r18,r18,r3
    b6b4:	25402034 	orhi	r21,r4,128
    b6b8:	0007883a 	mov	r3,zero
    b6bc:	88800428 	cmpgeui	r2,r17,16
    b6c0:	a70cf03a 	xor	r6,r20,fp
    b6c4:	1000ab1e 	bne	r2,zero,b974 <__divdf3+0x374>
    b6c8:	882290ba 	slli	r17,r17,2
    b6cc:	00800074 	movhi	r2,1
    b6d0:	8885883a 	add	r2,r17,r2
    b6d4:	10adb717 	ldw	r2,-18724(r2)
    b6d8:	1000683a 	jmp	r2
    b6dc:	0000b974 	movhi	zero,741
    b6e0:	0000b810 	cmplti	zero,zero,736
    b6e4:	0000b7b4 	movhi	zero,734
    b6e8:	0000b738 	rdprs	zero,zero,732
    b6ec:	0000b7b4 	movhi	zero,734
    b6f0:	0000b930 	cmpltui	zero,zero,740
    b6f4:	0000b7b4 	movhi	zero,734
    b6f8:	0000b738 	rdprs	zero,zero,732
    b6fc:	0000b810 	cmplti	zero,zero,736
    b700:	0000b810 	cmplti	zero,zero,736
    b704:	0000b930 	cmpltui	zero,zero,740
    b708:	0000b738 	rdprs	zero,zero,732
    b70c:	0000b748 	cmpgei	zero,zero,733
    b710:	0000b748 	cmpgei	zero,zero,733
    b714:	0000b748 	cmpgei	zero,zero,733
    b718:	0000b948 	cmpgei	zero,zero,741
    b71c:	a98ab03a 	or	r5,r21,r6
    b720:	94be0044 	addi	r18,r18,-2047
    b724:	28007e1e 	bne	r5,zero,b920 <__divdf3+0x320>
    b728:	8c400094 	ori	r17,r17,2
    b72c:	002b883a 	mov	r21,zero
    b730:	00c00084 	movi	r3,2
    b734:	003fe106 	br	b6bc <__divdf3+0xbc>
    b738:	e02d883a 	mov	r22,fp
    b73c:	a821883a 	mov	r16,r21
    b740:	2827883a 	mov	r19,r5
    b744:	182f883a 	mov	r23,r3
    b748:	b88000a0 	cmpeqi	r2,r23,2
    b74c:	1001ab1e 	bne	r2,zero,bdfc <__divdf3+0x7fc>
    b750:	b88000e0 	cmpeqi	r2,r23,3
    b754:	1001f91e 	bne	r2,zero,bf3c <__divdf3+0x93c>
    b758:	b8800060 	cmpeqi	r2,r23,1
    b75c:	1000141e 	bne	r2,zero,b7b0 <__divdf3+0x1b0>
    b760:	9500ffc4 	addi	r20,r18,1023
    b764:	b00d883a 	mov	r6,r22
    b768:	0501870e 	bge	zero,r20,bd88 <__divdf3+0x788>
    b76c:	988001cc 	andi	r2,r19,7
    b770:	1001c11e 	bne	r2,zero,be78 <__divdf3+0x878>
    b774:	9826d0fa 	srli	r19,r19,3
    b778:	8080402c 	andhi	r2,r16,256
    b77c:	10000426 	beq	r2,zero,b790 <__divdf3+0x190>
    b780:	00bfc034 	movhi	r2,65280
    b784:	10bfffc4 	addi	r2,r2,-1
    b788:	80a0703a 	and	r16,r16,r2
    b78c:	95010004 	addi	r20,r18,1024
    b790:	a081ffc8 	cmpgei	r2,r20,2047
    b794:	10001e1e 	bne	r2,zero,b810 <__divdf3+0x210>
    b798:	8006977a 	slli	r3,r16,29
    b79c:	8008927a 	slli	r4,r16,9
    b7a0:	a081ffcc 	andi	r2,r20,2047
    b7a4:	1ce6b03a 	or	r19,r3,r19
    b7a8:	2008d33a 	srli	r4,r4,12
    b7ac:	00000406 	br	b7c0 <__divdf3+0x1c0>
    b7b0:	b00d883a 	mov	r6,r22
    b7b4:	0005883a 	mov	r2,zero
    b7b8:	0009883a 	mov	r4,zero
    b7bc:	0027883a 	mov	r19,zero
    b7c0:	1004953a 	slli	r2,r2,20
    b7c4:	00c00434 	movhi	r3,16
    b7c8:	300c97fa 	slli	r6,r6,31
    b7cc:	18ffffc4 	addi	r3,r3,-1
    b7d0:	20c6703a 	and	r3,r4,r3
    b7d4:	1886b03a 	or	r3,r3,r2
    b7d8:	1986b03a 	or	r3,r3,r6
    b7dc:	9805883a 	mov	r2,r19
    b7e0:	dfc01017 	ldw	ra,64(sp)
    b7e4:	df000f17 	ldw	fp,60(sp)
    b7e8:	ddc00e17 	ldw	r23,56(sp)
    b7ec:	dd800d17 	ldw	r22,52(sp)
    b7f0:	dd400c17 	ldw	r21,48(sp)
    b7f4:	dd000b17 	ldw	r20,44(sp)
    b7f8:	dcc00a17 	ldw	r19,40(sp)
    b7fc:	dc800917 	ldw	r18,36(sp)
    b800:	dc400817 	ldw	r17,32(sp)
    b804:	dc000717 	ldw	r16,28(sp)
    b808:	dec01104 	addi	sp,sp,68
    b80c:	f800283a 	ret
    b810:	0081ffc4 	movi	r2,2047
    b814:	0009883a 	mov	r4,zero
    b818:	0027883a 	mov	r19,zero
    b81c:	003fe806 	br	b7c0 <__divdf3+0x1c0>
    b820:	a98ab03a 	or	r5,r21,r6
    b824:	28003a26 	beq	r5,zero,b910 <__divdf3+0x310>
    b828:	a8014926 	beq	r21,zero,bd50 <__divdf3+0x750>
    b82c:	a809883a 	mov	r4,r21
    b830:	d9800015 	stw	r6,0(sp)
    b834:	000d5480 	call	d548 <__clzsi2>
    b838:	d9800017 	ldw	r6,0(sp)
    b83c:	11fffd44 	addi	r7,r2,-11
    b840:	00c00744 	movi	r3,29
    b844:	117ffe04 	addi	r5,r2,-8
    b848:	19c7c83a 	sub	r3,r3,r7
    b84c:	a948983a 	sll	r4,r21,r5
    b850:	30c6d83a 	srl	r3,r6,r3
    b854:	314a983a 	sll	r5,r6,r5
    b858:	192ab03a 	or	r21,r3,r4
    b85c:	1485883a 	add	r2,r2,r18
    b860:	1480fcc4 	addi	r18,r2,1011
    b864:	0007883a 	mov	r3,zero
    b868:	003f9406 	br	b6bc <__divdf3+0xbc>
    b86c:	2460b03a 	or	r16,r4,r17
    b870:	202b883a 	mov	r21,r4
    b874:	80002126 	beq	r16,zero,b8fc <__divdf3+0x2fc>
    b878:	d9c00115 	stw	r7,4(sp)
    b87c:	d9800015 	stw	r6,0(sp)
    b880:	88012826 	beq	r17,zero,bd24 <__divdf3+0x724>
    b884:	8809883a 	mov	r4,r17
    b888:	000d5480 	call	d548 <__clzsi2>
    b88c:	d9800017 	ldw	r6,0(sp)
    b890:	d9c00117 	ldw	r7,4(sp)
    b894:	1025883a 	mov	r18,r2
    b898:	143ffd44 	addi	r16,r2,-11
    b89c:	01000744 	movi	r4,29
    b8a0:	94fffe04 	addi	r19,r18,-8
    b8a4:	2409c83a 	sub	r4,r4,r16
    b8a8:	8cca983a 	sll	r5,r17,r19
    b8ac:	a908d83a 	srl	r4,r21,r4
    b8b0:	ace6983a 	sll	r19,r21,r19
    b8b4:	2160b03a 	or	r16,r4,r5
    b8b8:	00bf0344 	movi	r2,-1011
    b8bc:	14a5c83a 	sub	r18,r2,r18
    b8c0:	0023883a 	mov	r17,zero
    b8c4:	002f883a 	mov	r23,zero
    b8c8:	003f6b06 	br	b678 <__divdf3+0x78>
    b8cc:	2460b03a 	or	r16,r4,r17
    b8d0:	8000051e 	bne	r16,zero,b8e8 <__divdf3+0x2e8>
    b8d4:	0027883a 	mov	r19,zero
    b8d8:	04400204 	movi	r17,8
    b8dc:	0481ffc4 	movi	r18,2047
    b8e0:	05c00084 	movi	r23,2
    b8e4:	003f6406 	br	b678 <__divdf3+0x78>
    b8e8:	8821883a 	mov	r16,r17
    b8ec:	0481ffc4 	movi	r18,2047
    b8f0:	04400304 	movi	r17,12
    b8f4:	05c000c4 	movi	r23,3
    b8f8:	003f5f06 	br	b678 <__divdf3+0x78>
    b8fc:	0027883a 	mov	r19,zero
    b900:	04400104 	movi	r17,4
    b904:	0025883a 	mov	r18,zero
    b908:	05c00044 	movi	r23,1
    b90c:	003f5a06 	br	b678 <__divdf3+0x78>
    b910:	8c400054 	ori	r17,r17,1
    b914:	002b883a 	mov	r21,zero
    b918:	00c00044 	movi	r3,1
    b91c:	003f6706 	br	b6bc <__divdf3+0xbc>
    b920:	8c4000d4 	ori	r17,r17,3
    b924:	300b883a 	mov	r5,r6
    b928:	00c000c4 	movi	r3,3
    b92c:	003f6306 	br	b6bc <__divdf3+0xbc>
    b930:	01000434 	movhi	r4,16
    b934:	000d883a 	mov	r6,zero
    b938:	213fffc4 	addi	r4,r4,-1
    b93c:	04ffffc4 	movi	r19,-1
    b940:	0081ffc4 	movi	r2,2047
    b944:	003f9e06 	br	b7c0 <__divdf3+0x1c0>
    b948:	8080022c 	andhi	r2,r16,8
    b94c:	1000d426 	beq	r2,zero,bca0 <__divdf3+0x6a0>
    b950:	a880022c 	andhi	r2,r21,8
    b954:	1000d21e 	bne	r2,zero,bca0 <__divdf3+0x6a0>
    b958:	00800434 	movhi	r2,16
    b95c:	a9000234 	orhi	r4,r21,8
    b960:	10bfffc4 	addi	r2,r2,-1
    b964:	2088703a 	and	r4,r4,r2
    b968:	e00d883a 	mov	r6,fp
    b96c:	2827883a 	mov	r19,r5
    b970:	003ff306 	br	b940 <__divdf3+0x340>
    b974:	ac00e536 	bltu	r21,r16,bd0c <__divdf3+0x70c>
    b978:	ac00e326 	beq	r21,r16,bd08 <__divdf3+0x708>
    b97c:	94bfffc4 	addi	r18,r18,-1
    b980:	0029883a 	mov	r20,zero
    b984:	280ed63a 	srli	r7,r5,24
    b988:	a82a923a 	slli	r21,r21,8
    b98c:	2804923a 	slli	r2,r5,8
    b990:	8009883a 	mov	r4,r16
    b994:	3d62b03a 	or	r17,r7,r21
    b998:	882ad43a 	srli	r21,r17,16
    b99c:	d9800115 	stw	r6,4(sp)
    b9a0:	d8800015 	stw	r2,0(sp)
    b9a4:	a80b883a 	mov	r5,r21
    b9a8:	000ab780 	call	ab78 <__udivsi3>
    b9ac:	8f3fffcc 	andi	fp,r17,65535
    b9b0:	100b883a 	mov	r5,r2
    b9b4:	e009883a 	mov	r4,fp
    b9b8:	102f883a 	mov	r23,r2
    b9bc:	000ac380 	call	ac38 <__mulsi3>
    b9c0:	a80b883a 	mov	r5,r21
    b9c4:	8009883a 	mov	r4,r16
    b9c8:	102d883a 	mov	r22,r2
    b9cc:	000abdc0 	call	abdc <__umodsi3>
    b9d0:	1006943a 	slli	r3,r2,16
    b9d4:	9804d43a 	srli	r2,r19,16
    b9d8:	d9800117 	ldw	r6,4(sp)
    b9dc:	10c4b03a 	or	r2,r2,r3
    b9e0:	1580042e 	bgeu	r2,r22,b9f4 <__divdf3+0x3f4>
    b9e4:	1445883a 	add	r2,r2,r17
    b9e8:	b8ffffc4 	addi	r3,r23,-1
    b9ec:	1441102e 	bgeu	r2,r17,be30 <__divdf3+0x830>
    b9f0:	182f883a 	mov	r23,r3
    b9f4:	15adc83a 	sub	r22,r2,r22
    b9f8:	a80b883a 	mov	r5,r21
    b9fc:	b009883a 	mov	r4,r22
    ba00:	d9800215 	stw	r6,8(sp)
    ba04:	000ab780 	call	ab78 <__udivsi3>
    ba08:	100b883a 	mov	r5,r2
    ba0c:	e009883a 	mov	r4,fp
    ba10:	1021883a 	mov	r16,r2
    ba14:	000ac380 	call	ac38 <__mulsi3>
    ba18:	a80b883a 	mov	r5,r21
    ba1c:	b009883a 	mov	r4,r22
    ba20:	d8800115 	stw	r2,4(sp)
    ba24:	000abdc0 	call	abdc <__umodsi3>
    ba28:	1004943a 	slli	r2,r2,16
    ba2c:	da000117 	ldw	r8,4(sp)
    ba30:	9cffffcc 	andi	r19,r19,65535
    ba34:	9884b03a 	or	r2,r19,r2
    ba38:	d9800217 	ldw	r6,8(sp)
    ba3c:	1200042e 	bgeu	r2,r8,ba50 <__divdf3+0x450>
    ba40:	1445883a 	add	r2,r2,r17
    ba44:	80ffffc4 	addi	r3,r16,-1
    ba48:	1440f52e 	bgeu	r2,r17,be20 <__divdf3+0x820>
    ba4c:	1821883a 	mov	r16,r3
    ba50:	b808943a 	slli	r4,r23,16
    ba54:	d8c00017 	ldw	r3,0(sp)
    ba58:	1211c83a 	sub	r8,r2,r8
    ba5c:	2420b03a 	or	r16,r4,r16
    ba60:	182cd43a 	srli	r22,r3,16
    ba64:	1dffffcc 	andi	r23,r3,65535
    ba68:	8026d43a 	srli	r19,r16,16
    ba6c:	80ffffcc 	andi	r3,r16,65535
    ba70:	180b883a 	mov	r5,r3
    ba74:	b809883a 	mov	r4,r23
    ba78:	d9800615 	stw	r6,24(sp)
    ba7c:	da000415 	stw	r8,16(sp)
    ba80:	d8c00515 	stw	r3,20(sp)
    ba84:	000ac380 	call	ac38 <__mulsi3>
    ba88:	b80b883a 	mov	r5,r23
    ba8c:	9809883a 	mov	r4,r19
    ba90:	d8800315 	stw	r2,12(sp)
    ba94:	000ac380 	call	ac38 <__mulsi3>
    ba98:	b00b883a 	mov	r5,r22
    ba9c:	9809883a 	mov	r4,r19
    baa0:	d8800215 	stw	r2,8(sp)
    baa4:	000ac380 	call	ac38 <__mulsi3>
    baa8:	d8c00517 	ldw	r3,20(sp)
    baac:	b009883a 	mov	r4,r22
    bab0:	d8800115 	stw	r2,4(sp)
    bab4:	180b883a 	mov	r5,r3
    bab8:	000ac380 	call	ac38 <__mulsi3>
    babc:	da400317 	ldw	r9,12(sp)
    bac0:	dac00217 	ldw	r11,8(sp)
    bac4:	da800117 	ldw	r10,4(sp)
    bac8:	4806d43a 	srli	r3,r9,16
    bacc:	12c5883a 	add	r2,r2,r11
    bad0:	da000417 	ldw	r8,16(sp)
    bad4:	1887883a 	add	r3,r3,r2
    bad8:	d9800617 	ldw	r6,24(sp)
    badc:	1ac0022e 	bgeu	r3,r11,bae8 <__divdf3+0x4e8>
    bae0:	00800074 	movhi	r2,1
    bae4:	5095883a 	add	r10,r10,r2
    bae8:	1826d43a 	srli	r19,r3,16
    baec:	1806943a 	slli	r3,r3,16
    baf0:	4a7fffcc 	andi	r9,r9,65535
    baf4:	9aa7883a 	add	r19,r19,r10
    baf8:	1a47883a 	add	r3,r3,r9
    bafc:	44c07736 	bltu	r8,r19,bcdc <__divdf3+0x6dc>
    bb00:	44c07526 	beq	r8,r19,bcd8 <__divdf3+0x6d8>
    bb04:	a0c7c83a 	sub	r3,r20,r3
    bb08:	44c5c83a 	sub	r2,r8,r19
    bb0c:	a0e7803a 	cmpltu	r19,r20,r3
    bb10:	d8c00115 	stw	r3,4(sp)
    bb14:	14e7c83a 	sub	r19,r2,r19
    bb18:	9500ffc4 	addi	r20,r18,1023
    bb1c:	8cc0cd26 	beq	r17,r19,be54 <__divdf3+0x854>
    bb20:	a80b883a 	mov	r5,r21
    bb24:	9809883a 	mov	r4,r19
    bb28:	d9800415 	stw	r6,16(sp)
    bb2c:	000ab780 	call	ab78 <__udivsi3>
    bb30:	100b883a 	mov	r5,r2
    bb34:	e009883a 	mov	r4,fp
    bb38:	d8800315 	stw	r2,12(sp)
    bb3c:	000ac380 	call	ac38 <__mulsi3>
    bb40:	9809883a 	mov	r4,r19
    bb44:	a80b883a 	mov	r5,r21
    bb48:	d8800215 	stw	r2,8(sp)
    bb4c:	000abdc0 	call	abdc <__umodsi3>
    bb50:	d8c00117 	ldw	r3,4(sp)
    bb54:	1008943a 	slli	r4,r2,16
    bb58:	da400217 	ldw	r9,8(sp)
    bb5c:	1804d43a 	srli	r2,r3,16
    bb60:	da000317 	ldw	r8,12(sp)
    bb64:	d9800417 	ldw	r6,16(sp)
    bb68:	1104b03a 	or	r2,r2,r4
    bb6c:	1240062e 	bgeu	r2,r9,bb88 <__divdf3+0x588>
    bb70:	1445883a 	add	r2,r2,r17
    bb74:	413fffc4 	addi	r4,r8,-1
    bb78:	1440bd36 	bltu	r2,r17,be70 <__divdf3+0x870>
    bb7c:	1240bc2e 	bgeu	r2,r9,be70 <__divdf3+0x870>
    bb80:	423fff84 	addi	r8,r8,-2
    bb84:	1445883a 	add	r2,r2,r17
    bb88:	1267c83a 	sub	r19,r2,r9
    bb8c:	a80b883a 	mov	r5,r21
    bb90:	9809883a 	mov	r4,r19
    bb94:	d8c00415 	stw	r3,16(sp)
    bb98:	d9800315 	stw	r6,12(sp)
    bb9c:	da000215 	stw	r8,8(sp)
    bba0:	000ab780 	call	ab78 <__udivsi3>
    bba4:	e009883a 	mov	r4,fp
    bba8:	100b883a 	mov	r5,r2
    bbac:	d8800115 	stw	r2,4(sp)
    bbb0:	000ac380 	call	ac38 <__mulsi3>
    bbb4:	a80b883a 	mov	r5,r21
    bbb8:	9809883a 	mov	r4,r19
    bbbc:	1039883a 	mov	fp,r2
    bbc0:	000abdc0 	call	abdc <__umodsi3>
    bbc4:	d8c00417 	ldw	r3,16(sp)
    bbc8:	1004943a 	slli	r2,r2,16
    bbcc:	da400117 	ldw	r9,4(sp)
    bbd0:	18ffffcc 	andi	r3,r3,65535
    bbd4:	1886b03a 	or	r3,r3,r2
    bbd8:	da000217 	ldw	r8,8(sp)
    bbdc:	d9800317 	ldw	r6,12(sp)
    bbe0:	1f00062e 	bgeu	r3,fp,bbfc <__divdf3+0x5fc>
    bbe4:	1c47883a 	add	r3,r3,r17
    bbe8:	48bfffc4 	addi	r2,r9,-1
    bbec:	1c409e36 	bltu	r3,r17,be68 <__divdf3+0x868>
    bbf0:	1f009d2e 	bgeu	r3,fp,be68 <__divdf3+0x868>
    bbf4:	4a7fff84 	addi	r9,r9,-2
    bbf8:	1c47883a 	add	r3,r3,r17
    bbfc:	4010943a 	slli	r8,r8,16
    bc00:	1f2bc83a 	sub	r21,r3,fp
    bc04:	b80b883a 	mov	r5,r23
    bc08:	4266b03a 	or	r19,r8,r9
    bc0c:	98ffffcc 	andi	r3,r19,65535
    bc10:	9838d43a 	srli	fp,r19,16
    bc14:	1809883a 	mov	r4,r3
    bc18:	d9800415 	stw	r6,16(sp)
    bc1c:	d8c00315 	stw	r3,12(sp)
    bc20:	000ac380 	call	ac38 <__mulsi3>
    bc24:	b80b883a 	mov	r5,r23
    bc28:	e009883a 	mov	r4,fp
    bc2c:	d8800215 	stw	r2,8(sp)
    bc30:	000ac380 	call	ac38 <__mulsi3>
    bc34:	e00b883a 	mov	r5,fp
    bc38:	b009883a 	mov	r4,r22
    bc3c:	d8800115 	stw	r2,4(sp)
    bc40:	000ac380 	call	ac38 <__mulsi3>
    bc44:	d8c00317 	ldw	r3,12(sp)
    bc48:	b009883a 	mov	r4,r22
    bc4c:	102f883a 	mov	r23,r2
    bc50:	180b883a 	mov	r5,r3
    bc54:	000ac380 	call	ac38 <__mulsi3>
    bc58:	da000217 	ldw	r8,8(sp)
    bc5c:	da400117 	ldw	r9,4(sp)
    bc60:	d9800417 	ldw	r6,16(sp)
    bc64:	4006d43a 	srli	r3,r8,16
    bc68:	1245883a 	add	r2,r2,r9
    bc6c:	1885883a 	add	r2,r3,r2
    bc70:	1240022e 	bgeu	r2,r9,bc7c <__divdf3+0x67c>
    bc74:	00c00074 	movhi	r3,1
    bc78:	b8ef883a 	add	r23,r23,r3
    bc7c:	1008d43a 	srli	r4,r2,16
    bc80:	1004943a 	slli	r2,r2,16
    bc84:	423fffcc 	andi	r8,r8,65535
    bc88:	25c9883a 	add	r4,r4,r23
    bc8c:	1205883a 	add	r2,r2,r8
    bc90:	a9000a36 	bltu	r21,r4,bcbc <__divdf3+0x6bc>
    bc94:	a9000826 	beq	r21,r4,bcb8 <__divdf3+0x6b8>
    bc98:	9cc00054 	ori	r19,r19,1
    bc9c:	003eb206 	br	b768 <__divdf3+0x168>
    bca0:	00800434 	movhi	r2,16
    bca4:	81000234 	orhi	r4,r16,8
    bca8:	10bfffc4 	addi	r2,r2,-1
    bcac:	2088703a 	and	r4,r4,r2
    bcb0:	a00d883a 	mov	r6,r20
    bcb4:	003f2206 	br	b940 <__divdf3+0x340>
    bcb8:	103eab26 	beq	r2,zero,b768 <__divdf3+0x168>
    bcbc:	8d47883a 	add	r3,r17,r21
    bcc0:	997fffc4 	addi	r5,r19,-1
    bcc4:	1c405e36 	bltu	r3,r17,be40 <__divdf3+0x840>
    bcc8:	19007b36 	bltu	r3,r4,beb8 <__divdf3+0x8b8>
    bccc:	1900a126 	beq	r3,r4,bf54 <__divdf3+0x954>
    bcd0:	2827883a 	mov	r19,r5
    bcd4:	003ff006 	br	bc98 <__divdf3+0x698>
    bcd8:	a0ff8a2e 	bgeu	r20,r3,bb04 <__divdf3+0x504>
    bcdc:	d8800017 	ldw	r2,0(sp)
    bce0:	a0a9883a 	add	r20,r20,r2
    bce4:	a085803a 	cmpltu	r2,r20,r2
    bce8:	1445883a 	add	r2,r2,r17
    bcec:	4091883a 	add	r8,r8,r2
    bcf0:	80bfffc4 	addi	r2,r16,-1
    bcf4:	8a00462e 	bgeu	r17,r8,be10 <__divdf3+0x810>
    bcf8:	44c06836 	bltu	r8,r19,be9c <__divdf3+0x89c>
    bcfc:	9a006626 	beq	r19,r8,be98 <__divdf3+0x898>
    bd00:	1021883a 	mov	r16,r2
    bd04:	003f7f06 	br	bb04 <__divdf3+0x504>
    bd08:	997f1c36 	bltu	r19,r5,b97c <__divdf3+0x37c>
    bd0c:	800697fa 	slli	r3,r16,31
    bd10:	9804d07a 	srli	r2,r19,1
    bd14:	982897fa 	slli	r20,r19,31
    bd18:	8020d07a 	srli	r16,r16,1
    bd1c:	18a6b03a 	or	r19,r3,r2
    bd20:	003f1806 	br	b984 <__divdf3+0x384>
    bd24:	000d5480 	call	d548 <__clzsi2>
    bd28:	14000544 	addi	r16,r2,21
    bd2c:	81000748 	cmpgei	r4,r16,29
    bd30:	14800804 	addi	r18,r2,32
    bd34:	d9800017 	ldw	r6,0(sp)
    bd38:	d9c00117 	ldw	r7,4(sp)
    bd3c:	203ed726 	beq	r4,zero,b89c <__divdf3+0x29c>
    bd40:	113ffe04 	addi	r4,r2,-8
    bd44:	9920983a 	sll	r16,r19,r4
    bd48:	0027883a 	mov	r19,zero
    bd4c:	003eda06 	br	b8b8 <__divdf3+0x2b8>
    bd50:	3009883a 	mov	r4,r6
    bd54:	d9800015 	stw	r6,0(sp)
    bd58:	000d5480 	call	d548 <__clzsi2>
    bd5c:	11c00544 	addi	r7,r2,21
    bd60:	38c00748 	cmpgei	r3,r7,29
    bd64:	1009883a 	mov	r4,r2
    bd68:	d9800017 	ldw	r6,0(sp)
    bd6c:	10800804 	addi	r2,r2,32
    bd70:	183eb326 	beq	r3,zero,b840 <__divdf3+0x240>
    bd74:	213ffe04 	addi	r4,r4,-8
    bd78:	312a983a 	sll	r21,r6,r4
    bd7c:	000b883a 	mov	r5,zero
    bd80:	003eb606 	br	b85c <__divdf3+0x25c>
    bd84:	04ffffc4 	movi	r19,-1
    bd88:	01000044 	movi	r4,1
    bd8c:	2509c83a 	sub	r4,r4,r20
    bd90:	20800e48 	cmpgei	r2,r4,57
    bd94:	103e871e 	bne	r2,zero,b7b4 <__divdf3+0x1b4>
    bd98:	20800808 	cmpgei	r2,r4,32
    bd9c:	10004e1e 	bne	r2,zero,bed8 <__divdf3+0x8d8>
    bda0:	90810784 	addi	r2,r18,1054
    bda4:	8086983a 	sll	r3,r16,r2
    bda8:	990ad83a 	srl	r5,r19,r4
    bdac:	9884983a 	sll	r2,r19,r2
    bdb0:	8108d83a 	srl	r4,r16,r4
    bdb4:	1966b03a 	or	r19,r3,r5
    bdb8:	1004c03a 	cmpne	r2,r2,zero
    bdbc:	98a6b03a 	or	r19,r19,r2
    bdc0:	988001cc 	andi	r2,r19,7
    bdc4:	10000726 	beq	r2,zero,bde4 <__divdf3+0x7e4>
    bdc8:	988003cc 	andi	r2,r19,15
    bdcc:	10800120 	cmpeqi	r2,r2,4
    bdd0:	1000041e 	bne	r2,zero,bde4 <__divdf3+0x7e4>
    bdd4:	98800104 	addi	r2,r19,4
    bdd8:	14e7803a 	cmpltu	r19,r2,r19
    bddc:	24c9883a 	add	r4,r4,r19
    bde0:	1027883a 	mov	r19,r2
    bde4:	2080202c 	andhi	r2,r4,128
    bde8:	10005026 	beq	r2,zero,bf2c <__divdf3+0x92c>
    bdec:	00800044 	movi	r2,1
    bdf0:	0009883a 	mov	r4,zero
    bdf4:	0027883a 	mov	r19,zero
    bdf8:	003e7106 	br	b7c0 <__divdf3+0x1c0>
    bdfc:	b00d883a 	mov	r6,r22
    be00:	0081ffc4 	movi	r2,2047
    be04:	0009883a 	mov	r4,zero
    be08:	0027883a 	mov	r19,zero
    be0c:	003e6c06 	br	b7c0 <__divdf3+0x1c0>
    be10:	8a3fbb1e 	bne	r17,r8,bd00 <__divdf3+0x700>
    be14:	d9000017 	ldw	r4,0(sp)
    be18:	a13fb936 	bltu	r20,r4,bd00 <__divdf3+0x700>
    be1c:	003fb606 	br	bcf8 <__divdf3+0x6f8>
    be20:	123f0a2e 	bgeu	r2,r8,ba4c <__divdf3+0x44c>
    be24:	843fff84 	addi	r16,r16,-2
    be28:	1445883a 	add	r2,r2,r17
    be2c:	003f0806 	br	ba50 <__divdf3+0x450>
    be30:	15beef2e 	bgeu	r2,r22,b9f0 <__divdf3+0x3f0>
    be34:	bdffff84 	addi	r23,r23,-2
    be38:	1445883a 	add	r2,r2,r17
    be3c:	003eed06 	br	b9f4 <__divdf3+0x3f4>
    be40:	2827883a 	mov	r19,r5
    be44:	193f941e 	bne	r3,r4,bc98 <__divdf3+0x698>
    be48:	d8c00017 	ldw	r3,0(sp)
    be4c:	18bf921e 	bne	r3,r2,bc98 <__divdf3+0x698>
    be50:	003e4506 	br	b768 <__divdf3+0x168>
    be54:	053fcb0e 	bge	zero,r20,bd84 <__divdf3+0x784>
    be58:	0027883a 	mov	r19,zero
    be5c:	00c00044 	movi	r3,1
    be60:	80e1883a 	add	r16,r16,r3
    be64:	003e4406 	br	b778 <__divdf3+0x178>
    be68:	1013883a 	mov	r9,r2
    be6c:	003f6306 	br	bbfc <__divdf3+0x5fc>
    be70:	2011883a 	mov	r8,r4
    be74:	003f4406 	br	bb88 <__divdf3+0x588>
    be78:	988003cc 	andi	r2,r19,15
    be7c:	10800118 	cmpnei	r2,r2,4
    be80:	103e3c26 	beq	r2,zero,b774 <__divdf3+0x174>
    be84:	98800104 	addi	r2,r19,4
    be88:	00fffec4 	movi	r3,-5
    be8c:	1cc7803a 	cmpltu	r3,r3,r19
    be90:	1026d0fa 	srli	r19,r2,3
    be94:	003ff206 	br	be60 <__divdf3+0x860>
    be98:	a0ff992e 	bgeu	r20,r3,bd00 <__divdf3+0x700>
    be9c:	d8800017 	ldw	r2,0(sp)
    bea0:	843fff84 	addi	r16,r16,-2
    bea4:	a0a9883a 	add	r20,r20,r2
    bea8:	a085803a 	cmpltu	r2,r20,r2
    beac:	1445883a 	add	r2,r2,r17
    beb0:	4091883a 	add	r8,r8,r2
    beb4:	003f1306 	br	bb04 <__divdf3+0x504>
    beb8:	d9c00017 	ldw	r7,0(sp)
    bebc:	9cffff84 	addi	r19,r19,-2
    bec0:	39cb883a 	add	r5,r7,r7
    bec4:	29cf803a 	cmpltu	r7,r5,r7
    bec8:	3c4f883a 	add	r7,r7,r17
    becc:	19c7883a 	add	r3,r3,r7
    bed0:	d9400015 	stw	r5,0(sp)
    bed4:	003fdb06 	br	be44 <__divdf3+0x844>
    bed8:	00bff844 	movi	r2,-31
    bedc:	1529c83a 	sub	r20,r2,r20
    bee0:	21000820 	cmpeqi	r4,r4,32
    bee4:	8528d83a 	srl	r20,r16,r20
    bee8:	2000031e 	bne	r4,zero,bef8 <__divdf3+0x8f8>
    beec:	90810f84 	addi	r2,r18,1086
    bef0:	8088983a 	sll	r4,r16,r2
    bef4:	9926b03a 	or	r19,r19,r4
    bef8:	9826c03a 	cmpne	r19,r19,zero
    befc:	9d26b03a 	or	r19,r19,r20
    bf00:	9c0001cc 	andi	r16,r19,7
    bf04:	8000051e 	bne	r16,zero,bf1c <__divdf3+0x91c>
    bf08:	0009883a 	mov	r4,zero
    bf0c:	9826d0fa 	srli	r19,r19,3
    bf10:	0005883a 	mov	r2,zero
    bf14:	9c26b03a 	or	r19,r19,r16
    bf18:	003e2906 	br	b7c0 <__divdf3+0x1c0>
    bf1c:	988003cc 	andi	r2,r19,15
    bf20:	10800118 	cmpnei	r2,r2,4
    bf24:	0009883a 	mov	r4,zero
    bf28:	103faa1e 	bne	r2,zero,bdd4 <__divdf3+0x7d4>
    bf2c:	2004927a 	slli	r2,r4,9
    bf30:	2020977a 	slli	r16,r4,29
    bf34:	1008d33a 	srli	r4,r2,12
    bf38:	003ff406 	br	bf0c <__divdf3+0x90c>
    bf3c:	00800434 	movhi	r2,16
    bf40:	81000234 	orhi	r4,r16,8
    bf44:	10bfffc4 	addi	r2,r2,-1
    bf48:	2088703a 	and	r4,r4,r2
    bf4c:	b00d883a 	mov	r6,r22
    bf50:	003e7b06 	br	b940 <__divdf3+0x340>
    bf54:	d9c00017 	ldw	r7,0(sp)
    bf58:	38bfd736 	bltu	r7,r2,beb8 <__divdf3+0x8b8>
    bf5c:	2827883a 	mov	r19,r5
    bf60:	003fb906 	br	be48 <__divdf3+0x848>

0000bf64 <__eqdf2>:
    bf64:	2810d53a 	srli	r8,r5,20
    bf68:	3806d53a 	srli	r3,r7,20
    bf6c:	00800434 	movhi	r2,16
    bf70:	4201ffcc 	andi	r8,r8,2047
    bf74:	10bfffc4 	addi	r2,r2,-1
    bf78:	4281ffd8 	cmpnei	r10,r8,2047
    bf7c:	2892703a 	and	r9,r5,r2
    bf80:	18c1ffcc 	andi	r3,r3,2047
    bf84:	3884703a 	and	r2,r7,r2
    bf88:	280ad7fa 	srli	r5,r5,31
    bf8c:	380ed7fa 	srli	r7,r7,31
    bf90:	50000626 	beq	r10,zero,bfac <__eqdf2+0x48>
    bf94:	1a81ffe0 	cmpeqi	r10,r3,2047
    bf98:	5000021e 	bne	r10,zero,bfa4 <__eqdf2+0x40>
    bf9c:	40c0011e 	bne	r8,r3,bfa4 <__eqdf2+0x40>
    bfa0:	48800826 	beq	r9,r2,bfc4 <__eqdf2+0x60>
    bfa4:	00800044 	movi	r2,1
    bfa8:	f800283a 	ret
    bfac:	4914b03a 	or	r10,r9,r4
    bfb0:	503ffc1e 	bne	r10,zero,bfa4 <__eqdf2+0x40>
    bfb4:	18c1ffd8 	cmpnei	r3,r3,2047
    bfb8:	183ffa1e 	bne	r3,zero,bfa4 <__eqdf2+0x40>
    bfbc:	1184b03a 	or	r2,r2,r6
    bfc0:	103ff81e 	bne	r2,zero,bfa4 <__eqdf2+0x40>
    bfc4:	21bff71e 	bne	r4,r6,bfa4 <__eqdf2+0x40>
    bfc8:	29c00426 	beq	r5,r7,bfdc <__eqdf2+0x78>
    bfcc:	403ff51e 	bne	r8,zero,bfa4 <__eqdf2+0x40>
    bfd0:	4904b03a 	or	r2,r9,r4
    bfd4:	1004c03a 	cmpne	r2,r2,zero
    bfd8:	f800283a 	ret
    bfdc:	0005883a 	mov	r2,zero
    bfe0:	f800283a 	ret

0000bfe4 <__gedf2>:
    bfe4:	2810d53a 	srli	r8,r5,20
    bfe8:	3812d53a 	srli	r9,r7,20
    bfec:	00800434 	movhi	r2,16
    bff0:	4201ffcc 	andi	r8,r8,2047
    bff4:	10bfffc4 	addi	r2,r2,-1
    bff8:	4281ffd8 	cmpnei	r10,r8,2047
    bffc:	2896703a 	and	r11,r5,r2
    c000:	3886703a 	and	r3,r7,r2
    c004:	280ad7fa 	srli	r5,r5,31
    c008:	4a41ffcc 	andi	r9,r9,2047
    c00c:	3804d7fa 	srli	r2,r7,31
    c010:	50000b26 	beq	r10,zero,c040 <__gedf2+0x5c>
    c014:	49c1ffd8 	cmpnei	r7,r9,2047
    c018:	38000d26 	beq	r7,zero,c050 <__gedf2+0x6c>
    c01c:	4000191e 	bne	r8,zero,c084 <__gedf2+0xa0>
    c020:	5914b03a 	or	r10,r11,r4
    c024:	500f003a 	cmpeq	r7,r10,zero
    c028:	4800131e 	bne	r9,zero,c078 <__gedf2+0x94>
    c02c:	1998b03a 	or	r12,r3,r6
    c030:	6000111e 	bne	r12,zero,c078 <__gedf2+0x94>
    c034:	50000a1e 	bne	r10,zero,c060 <__gedf2+0x7c>
    c038:	0005883a 	mov	r2,zero
    c03c:	f800283a 	ret
    c040:	590eb03a 	or	r7,r11,r4
    c044:	38001e1e 	bne	r7,zero,c0c0 <__gedf2+0xdc>
    c048:	49c1ffe0 	cmpeqi	r7,r9,2047
    c04c:	38000d26 	beq	r7,zero,c084 <__gedf2+0xa0>
    c050:	198eb03a 	or	r7,r3,r6
    c054:	38001a1e 	bne	r7,zero,c0c0 <__gedf2+0xdc>
    c058:	40000526 	beq	r8,zero,c070 <__gedf2+0x8c>
    c05c:	28800d26 	beq	r5,r2,c094 <__gedf2+0xb0>
    c060:	00800044 	movi	r2,1
    c064:	28000626 	beq	r5,zero,c080 <__gedf2+0x9c>
    c068:	00bfffc4 	movi	r2,-1
    c06c:	f800283a 	ret
    c070:	590eb03a 	or	r7,r11,r4
    c074:	380f003a 	cmpeq	r7,r7,zero
    c078:	383ff826 	beq	r7,zero,c05c <__gedf2+0x78>
    c07c:	103ffa26 	beq	r2,zero,c068 <__gedf2+0x84>
    c080:	f800283a 	ret
    c084:	483ff51e 	bne	r9,zero,c05c <__gedf2+0x78>
    c088:	198eb03a 	or	r7,r3,r6
    c08c:	383ff31e 	bne	r7,zero,c05c <__gedf2+0x78>
    c090:	003ff306 	br	c060 <__gedf2+0x7c>
    c094:	4a000716 	blt	r9,r8,c0b4 <__gedf2+0xd0>
    c098:	427ff816 	blt	r8,r9,c07c <__gedf2+0x98>
    c09c:	1afff036 	bltu	r3,r11,c060 <__gedf2+0x7c>
    c0a0:	58c00926 	beq	r11,r3,c0c8 <__gedf2+0xe4>
    c0a4:	58ffe42e 	bgeu	r11,r3,c038 <__gedf2+0x54>
    c0a8:	283fef26 	beq	r5,zero,c068 <__gedf2+0x84>
    c0ac:	2805883a 	mov	r2,r5
    c0b0:	f800283a 	ret
    c0b4:	103fec1e 	bne	r2,zero,c068 <__gedf2+0x84>
    c0b8:	00800044 	movi	r2,1
    c0bc:	f800283a 	ret
    c0c0:	00bfff84 	movi	r2,-2
    c0c4:	f800283a 	ret
    c0c8:	313fe536 	bltu	r6,r4,c060 <__gedf2+0x7c>
    c0cc:	21bfda2e 	bgeu	r4,r6,c038 <__gedf2+0x54>
    c0d0:	003ff506 	br	c0a8 <__gedf2+0xc4>

0000c0d4 <__ledf2>:
    c0d4:	2810d53a 	srli	r8,r5,20
    c0d8:	3812d53a 	srli	r9,r7,20
    c0dc:	00800434 	movhi	r2,16
    c0e0:	4201ffcc 	andi	r8,r8,2047
    c0e4:	10bfffc4 	addi	r2,r2,-1
    c0e8:	4281ffd8 	cmpnei	r10,r8,2047
    c0ec:	2896703a 	and	r11,r5,r2
    c0f0:	3886703a 	and	r3,r7,r2
    c0f4:	280ad7fa 	srli	r5,r5,31
    c0f8:	4a41ffcc 	andi	r9,r9,2047
    c0fc:	3804d7fa 	srli	r2,r7,31
    c100:	50000b26 	beq	r10,zero,c130 <__ledf2+0x5c>
    c104:	49c1ffd8 	cmpnei	r7,r9,2047
    c108:	38000d26 	beq	r7,zero,c140 <__ledf2+0x6c>
    c10c:	40001b1e 	bne	r8,zero,c17c <__ledf2+0xa8>
    c110:	5914b03a 	or	r10,r11,r4
    c114:	500f003a 	cmpeq	r7,r10,zero
    c118:	48000e1e 	bne	r9,zero,c154 <__ledf2+0x80>
    c11c:	1998b03a 	or	r12,r3,r6
    c120:	60000c1e 	bne	r12,zero,c154 <__ledf2+0x80>
    c124:	50000d1e 	bne	r10,zero,c15c <__ledf2+0x88>
    c128:	0005883a 	mov	r2,zero
    c12c:	f800283a 	ret
    c130:	590eb03a 	or	r7,r11,r4
    c134:	38000d1e 	bne	r7,zero,c16c <__ledf2+0x98>
    c138:	49c1ffe0 	cmpeqi	r7,r9,2047
    c13c:	38000f26 	beq	r7,zero,c17c <__ledf2+0xa8>
    c140:	198eb03a 	or	r7,r3,r6
    c144:	3800091e 	bne	r7,zero,c16c <__ledf2+0x98>
    c148:	4000031e 	bne	r8,zero,c158 <__ledf2+0x84>
    c14c:	590eb03a 	or	r7,r11,r4
    c150:	380f003a 	cmpeq	r7,r7,zero
    c154:	3800071e 	bne	r7,zero,c174 <__ledf2+0xa0>
    c158:	28800c26 	beq	r5,r2,c18c <__ledf2+0xb8>
    c15c:	00800044 	movi	r2,1
    c160:	28000526 	beq	r5,zero,c178 <__ledf2+0xa4>
    c164:	00bfffc4 	movi	r2,-1
    c168:	f800283a 	ret
    c16c:	00800084 	movi	r2,2
    c170:	f800283a 	ret
    c174:	103ffb26 	beq	r2,zero,c164 <__ledf2+0x90>
    c178:	f800283a 	ret
    c17c:	483ff61e 	bne	r9,zero,c158 <__ledf2+0x84>
    c180:	198eb03a 	or	r7,r3,r6
    c184:	383ff41e 	bne	r7,zero,c158 <__ledf2+0x84>
    c188:	003ff406 	br	c15c <__ledf2+0x88>
    c18c:	4a00030e 	bge	r9,r8,c19c <__ledf2+0xc8>
    c190:	103ff41e 	bne	r2,zero,c164 <__ledf2+0x90>
    c194:	00800044 	movi	r2,1
    c198:	f800283a 	ret
    c19c:	427ff516 	blt	r8,r9,c174 <__ledf2+0xa0>
    c1a0:	1affee36 	bltu	r3,r11,c15c <__ledf2+0x88>
    c1a4:	58c00426 	beq	r11,r3,c1b8 <__ledf2+0xe4>
    c1a8:	58ffdf2e 	bgeu	r11,r3,c128 <__ledf2+0x54>
    c1ac:	283fed26 	beq	r5,zero,c164 <__ledf2+0x90>
    c1b0:	2805883a 	mov	r2,r5
    c1b4:	f800283a 	ret
    c1b8:	313fe836 	bltu	r6,r4,c15c <__ledf2+0x88>
    c1bc:	21bfda2e 	bgeu	r4,r6,c128 <__ledf2+0x54>
    c1c0:	003ffa06 	br	c1ac <__ledf2+0xd8>

0000c1c4 <__muldf3>:
    c1c4:	2810d53a 	srli	r8,r5,20
    c1c8:	deffef04 	addi	sp,sp,-68
    c1cc:	dc000715 	stw	r16,28(sp)
    c1d0:	04000434 	movhi	r16,16
    c1d4:	dd000b15 	stw	r20,44(sp)
    c1d8:	dc800915 	stw	r18,36(sp)
    c1dc:	843fffc4 	addi	r16,r16,-1
    c1e0:	dfc01015 	stw	ra,64(sp)
    c1e4:	df000f15 	stw	fp,60(sp)
    c1e8:	ddc00e15 	stw	r23,56(sp)
    c1ec:	dd800d15 	stw	r22,52(sp)
    c1f0:	dd400c15 	stw	r21,48(sp)
    c1f4:	dcc00a15 	stw	r19,40(sp)
    c1f8:	dc400815 	stw	r17,32(sp)
    c1fc:	4201ffcc 	andi	r8,r8,2047
    c200:	2025883a 	mov	r18,r4
    c204:	2c20703a 	and	r16,r5,r16
    c208:	2828d7fa 	srli	r20,r5,31
    c20c:	40005d26 	beq	r8,zero,c384 <__muldf3+0x1c0>
    c210:	4081ffe0 	cmpeqi	r2,r8,2047
    c214:	1000721e 	bne	r2,zero,c3e0 <__muldf3+0x21c>
    c218:	802090fa 	slli	r16,r16,3
    c21c:	2006d77a 	srli	r3,r4,29
    c220:	202c90fa 	slli	r22,r4,3
    c224:	423f0044 	addi	r8,r8,-1023
    c228:	1c20b03a 	or	r16,r3,r16
    c22c:	84002034 	orhi	r16,r16,128
    c230:	0027883a 	mov	r19,zero
    c234:	002f883a 	mov	r23,zero
    c238:	3806d53a 	srli	r3,r7,20
    c23c:	04400434 	movhi	r17,16
    c240:	8c7fffc4 	addi	r17,r17,-1
    c244:	18c1ffcc 	andi	r3,r3,2047
    c248:	3c62703a 	and	r17,r7,r17
    c24c:	382ad7fa 	srli	r21,r7,31
    c250:	18006a26 	beq	r3,zero,c3fc <__muldf3+0x238>
    c254:	1881ffe0 	cmpeqi	r2,r3,2047
    c258:	1000211e 	bne	r2,zero,c2e0 <__muldf3+0x11c>
    c25c:	882290fa 	slli	r17,r17,3
    c260:	3008d77a 	srli	r4,r6,29
    c264:	302490fa 	slli	r18,r6,3
    c268:	18ff0044 	addi	r3,r3,-1023
    c26c:	2462b03a 	or	r17,r4,r17
    c270:	40d1883a 	add	r8,r8,r3
    c274:	8c402034 	orhi	r17,r17,128
    c278:	0007883a 	mov	r3,zero
    c27c:	98800428 	cmpgeui	r2,r19,16
    c280:	a54cf03a 	xor	r6,r20,r21
    c284:	42400044 	addi	r9,r8,1
    c288:	10009b1e 	bne	r2,zero,c4f8 <__muldf3+0x334>
    c28c:	982690ba 	slli	r19,r19,2
    c290:	00800074 	movhi	r2,1
    c294:	9885883a 	add	r2,r19,r2
    c298:	10b0a817 	ldw	r2,-15712(r2)
    c29c:	1000683a 	jmp	r2
    c2a0:	0000c4f8 	rdprs	zero,zero,787
    c2a4:	0000c300 	call	c30 <_malloc_r+0xe4>
    c2a8:	0000c300 	call	c30 <_malloc_r+0xe4>
    c2ac:	0000c2fc 	xorhi	zero,zero,779
    c2b0:	0000c30c 	andi	zero,zero,780
    c2b4:	0000c30c 	andi	zero,zero,780
    c2b8:	0000c4b4 	movhi	zero,786
    c2bc:	0000c2fc 	xorhi	zero,zero,779
    c2c0:	0000c30c 	andi	zero,zero,780
    c2c4:	0000c4b4 	movhi	zero,786
    c2c8:	0000c30c 	andi	zero,zero,780
    c2cc:	0000c2fc 	xorhi	zero,zero,779
    c2d0:	0000c4ac 	andhi	zero,zero,786
    c2d4:	0000c4ac 	andhi	zero,zero,786
    c2d8:	0000c4ac 	andhi	zero,zero,786
    c2dc:	0000c4cc 	andi	zero,zero,787
    c2e0:	3464b03a 	or	r18,r6,r17
    c2e4:	4201ffc4 	addi	r8,r8,2047
    c2e8:	90006c1e 	bne	r18,zero,c49c <__muldf3+0x2d8>
    c2ec:	9cc00094 	ori	r19,r19,2
    c2f0:	0023883a 	mov	r17,zero
    c2f4:	00c00084 	movi	r3,2
    c2f8:	003fe006 	br	c27c <__muldf3+0xb8>
    c2fc:	a80d883a 	mov	r6,r21
    c300:	8821883a 	mov	r16,r17
    c304:	902d883a 	mov	r22,r18
    c308:	182f883a 	mov	r23,r3
    c30c:	b88000a0 	cmpeqi	r2,r23,2
    c310:	1000501e 	bne	r2,zero,c454 <__muldf3+0x290>
    c314:	b88000e0 	cmpeqi	r2,r23,3
    c318:	10019d1e 	bne	r2,zero,c990 <__muldf3+0x7cc>
    c31c:	b8800060 	cmpeqi	r2,r23,1
    c320:	10012a26 	beq	r2,zero,c7cc <__muldf3+0x608>
    c324:	0007883a 	mov	r3,zero
    c328:	0021883a 	mov	r16,zero
    c32c:	002d883a 	mov	r22,zero
    c330:	04400434 	movhi	r17,16
    c334:	1806953a 	slli	r3,r3,20
    c338:	31803fcc 	andi	r6,r6,255
    c33c:	8c7fffc4 	addi	r17,r17,-1
    c340:	300c97fa 	slli	r6,r6,31
    c344:	8460703a 	and	r16,r16,r17
    c348:	80c6b03a 	or	r3,r16,r3
    c34c:	1986b03a 	or	r3,r3,r6
    c350:	b005883a 	mov	r2,r22
    c354:	dfc01017 	ldw	ra,64(sp)
    c358:	df000f17 	ldw	fp,60(sp)
    c35c:	ddc00e17 	ldw	r23,56(sp)
    c360:	dd800d17 	ldw	r22,52(sp)
    c364:	dd400c17 	ldw	r21,48(sp)
    c368:	dd000b17 	ldw	r20,44(sp)
    c36c:	dcc00a17 	ldw	r19,40(sp)
    c370:	dc800917 	ldw	r18,36(sp)
    c374:	dc400817 	ldw	r17,32(sp)
    c378:	dc000717 	ldw	r16,28(sp)
    c37c:	dec01104 	addi	sp,sp,68
    c380:	f800283a 	ret
    c384:	812cb03a 	or	r22,r16,r4
    c388:	b0003f26 	beq	r22,zero,c488 <__muldf3+0x2c4>
    c38c:	d9c00115 	stw	r7,4(sp)
    c390:	d9800015 	stw	r6,0(sp)
    c394:	80013b26 	beq	r16,zero,c884 <__muldf3+0x6c0>
    c398:	8009883a 	mov	r4,r16
    c39c:	000d5480 	call	d548 <__clzsi2>
    c3a0:	d9800017 	ldw	r6,0(sp)
    c3a4:	d9c00117 	ldw	r7,4(sp)
    c3a8:	1007883a 	mov	r3,r2
    c3ac:	117ffd44 	addi	r5,r2,-11
    c3b0:	01000744 	movi	r4,29
    c3b4:	1dbffe04 	addi	r22,r3,-8
    c3b8:	2149c83a 	sub	r4,r4,r5
    c3bc:	85a0983a 	sll	r16,r16,r22
    c3c0:	9108d83a 	srl	r4,r18,r4
    c3c4:	95ac983a 	sll	r22,r18,r22
    c3c8:	2420b03a 	or	r16,r4,r16
    c3cc:	023f0344 	movi	r8,-1011
    c3d0:	40d1c83a 	sub	r8,r8,r3
    c3d4:	0027883a 	mov	r19,zero
    c3d8:	002f883a 	mov	r23,zero
    c3dc:	003f9606 	br	c238 <__muldf3+0x74>
    c3e0:	812cb03a 	or	r22,r16,r4
    c3e4:	b000231e 	bne	r22,zero,c474 <__muldf3+0x2b0>
    c3e8:	0021883a 	mov	r16,zero
    c3ec:	04c00204 	movi	r19,8
    c3f0:	0201ffc4 	movi	r8,2047
    c3f4:	05c00084 	movi	r23,2
    c3f8:	003f8f06 	br	c238 <__muldf3+0x74>
    c3fc:	3464b03a 	or	r18,r6,r17
    c400:	90001826 	beq	r18,zero,c464 <__muldf3+0x2a0>
    c404:	88011126 	beq	r17,zero,c84c <__muldf3+0x688>
    c408:	8809883a 	mov	r4,r17
    c40c:	d9800115 	stw	r6,4(sp)
    c410:	da000015 	stw	r8,0(sp)
    c414:	000d5480 	call	d548 <__clzsi2>
    c418:	da000017 	ldw	r8,0(sp)
    c41c:	d9800117 	ldw	r6,4(sp)
    c420:	1007883a 	mov	r3,r2
    c424:	117ffd44 	addi	r5,r2,-11
    c428:	01000744 	movi	r4,29
    c42c:	1cbffe04 	addi	r18,r3,-8
    c430:	2149c83a 	sub	r4,r4,r5
    c434:	8ca2983a 	sll	r17,r17,r18
    c438:	3108d83a 	srl	r4,r6,r4
    c43c:	34a4983a 	sll	r18,r6,r18
    c440:	2462b03a 	or	r17,r4,r17
    c444:	40d1c83a 	sub	r8,r8,r3
    c448:	423f0344 	addi	r8,r8,-1011
    c44c:	0007883a 	mov	r3,zero
    c450:	003f8a06 	br	c27c <__muldf3+0xb8>
    c454:	00c1ffc4 	movi	r3,2047
    c458:	0021883a 	mov	r16,zero
    c45c:	002d883a 	mov	r22,zero
    c460:	003fb306 	br	c330 <__muldf3+0x16c>
    c464:	9cc00054 	ori	r19,r19,1
    c468:	0023883a 	mov	r17,zero
    c46c:	00c00044 	movi	r3,1
    c470:	003f8206 	br	c27c <__muldf3+0xb8>
    c474:	202d883a 	mov	r22,r4
    c478:	04c00304 	movi	r19,12
    c47c:	0201ffc4 	movi	r8,2047
    c480:	05c000c4 	movi	r23,3
    c484:	003f6c06 	br	c238 <__muldf3+0x74>
    c488:	0021883a 	mov	r16,zero
    c48c:	04c00104 	movi	r19,4
    c490:	0011883a 	mov	r8,zero
    c494:	05c00044 	movi	r23,1
    c498:	003f6706 	br	c238 <__muldf3+0x74>
    c49c:	9cc000d4 	ori	r19,r19,3
    c4a0:	3025883a 	mov	r18,r6
    c4a4:	00c000c4 	movi	r3,3
    c4a8:	003f7406 	br	c27c <__muldf3+0xb8>
    c4ac:	a00d883a 	mov	r6,r20
    c4b0:	003f9606 	br	c30c <__muldf3+0x148>
    c4b4:	04000434 	movhi	r16,16
    c4b8:	000d883a 	mov	r6,zero
    c4bc:	843fffc4 	addi	r16,r16,-1
    c4c0:	05bfffc4 	movi	r22,-1
    c4c4:	00c1ffc4 	movi	r3,2047
    c4c8:	003f9906 	br	c330 <__muldf3+0x16c>
    c4cc:	8080022c 	andhi	r2,r16,8
    c4d0:	1000d826 	beq	r2,zero,c834 <__muldf3+0x670>
    c4d4:	8880022c 	andhi	r2,r17,8
    c4d8:	1000d61e 	bne	r2,zero,c834 <__muldf3+0x670>
    c4dc:	00800434 	movhi	r2,16
    c4e0:	8c000234 	orhi	r16,r17,8
    c4e4:	10bfffc4 	addi	r2,r2,-1
    c4e8:	80a0703a 	and	r16,r16,r2
    c4ec:	a80d883a 	mov	r6,r21
    c4f0:	902d883a 	mov	r22,r18
    c4f4:	003ff306 	br	c4c4 <__muldf3+0x300>
    c4f8:	b028d43a 	srli	r20,r22,16
    c4fc:	902ed43a 	srli	r23,r18,16
    c500:	b5bfffcc 	andi	r22,r22,65535
    c504:	94bfffcc 	andi	r18,r18,65535
    c508:	b00b883a 	mov	r5,r22
    c50c:	9009883a 	mov	r4,r18
    c510:	d9800215 	stw	r6,8(sp)
    c514:	da000115 	stw	r8,4(sp)
    c518:	da400015 	stw	r9,0(sp)
    c51c:	000ac380 	call	ac38 <__mulsi3>
    c520:	900b883a 	mov	r5,r18
    c524:	a009883a 	mov	r4,r20
    c528:	1027883a 	mov	r19,r2
    c52c:	000ac380 	call	ac38 <__mulsi3>
    c530:	b80b883a 	mov	r5,r23
    c534:	a009883a 	mov	r4,r20
    c538:	102b883a 	mov	r21,r2
    c53c:	000ac380 	call	ac38 <__mulsi3>
    c540:	b00b883a 	mov	r5,r22
    c544:	b809883a 	mov	r4,r23
    c548:	1039883a 	mov	fp,r2
    c54c:	000ac380 	call	ac38 <__mulsi3>
    c550:	9806d43a 	srli	r3,r19,16
    c554:	1545883a 	add	r2,r2,r21
    c558:	da400017 	ldw	r9,0(sp)
    c55c:	1885883a 	add	r2,r3,r2
    c560:	da000117 	ldw	r8,4(sp)
    c564:	d9800217 	ldw	r6,8(sp)
    c568:	1540022e 	bgeu	r2,r21,c574 <__muldf3+0x3b0>
    c56c:	00c00074 	movhi	r3,1
    c570:	e0f9883a 	add	fp,fp,r3
    c574:	1006943a 	slli	r3,r2,16
    c578:	1004d43a 	srli	r2,r2,16
    c57c:	882ad43a 	srli	r21,r17,16
    c580:	9cffffcc 	andi	r19,r19,65535
    c584:	8c7fffcc 	andi	r17,r17,65535
    c588:	b00b883a 	mov	r5,r22
    c58c:	8809883a 	mov	r4,r17
    c590:	d8800015 	stw	r2,0(sp)
    c594:	1cc5883a 	add	r2,r3,r19
    c598:	d9800515 	stw	r6,20(sp)
    c59c:	da000415 	stw	r8,16(sp)
    c5a0:	da400315 	stw	r9,12(sp)
    c5a4:	d8800115 	stw	r2,4(sp)
    c5a8:	000ac380 	call	ac38 <__mulsi3>
    c5ac:	a009883a 	mov	r4,r20
    c5b0:	880b883a 	mov	r5,r17
    c5b4:	d8800215 	stw	r2,8(sp)
    c5b8:	000ac380 	call	ac38 <__mulsi3>
    c5bc:	a009883a 	mov	r4,r20
    c5c0:	a80b883a 	mov	r5,r21
    c5c4:	1027883a 	mov	r19,r2
    c5c8:	000ac380 	call	ac38 <__mulsi3>
    c5cc:	b00b883a 	mov	r5,r22
    c5d0:	a809883a 	mov	r4,r21
    c5d4:	1029883a 	mov	r20,r2
    c5d8:	000ac380 	call	ac38 <__mulsi3>
    c5dc:	d9c00217 	ldw	r7,8(sp)
    c5e0:	14c5883a 	add	r2,r2,r19
    c5e4:	da400317 	ldw	r9,12(sp)
    c5e8:	3806d43a 	srli	r3,r7,16
    c5ec:	da000417 	ldw	r8,16(sp)
    c5f0:	d9800517 	ldw	r6,20(sp)
    c5f4:	1885883a 	add	r2,r3,r2
    c5f8:	14c0022e 	bgeu	r2,r19,c604 <__muldf3+0x440>
    c5fc:	00c00074 	movhi	r3,1
    c600:	a0e9883a 	add	r20,r20,r3
    c604:	1006d43a 	srli	r3,r2,16
    c608:	1004943a 	slli	r2,r2,16
    c60c:	802cd43a 	srli	r22,r16,16
    c610:	843fffcc 	andi	r16,r16,65535
    c614:	3cffffcc 	andi	r19,r7,65535
    c618:	9009883a 	mov	r4,r18
    c61c:	800b883a 	mov	r5,r16
    c620:	d9800615 	stw	r6,24(sp)
    c624:	da000515 	stw	r8,20(sp)
    c628:	da400415 	stw	r9,16(sp)
    c62c:	1d29883a 	add	r20,r3,r20
    c630:	14e7883a 	add	r19,r2,r19
    c634:	000ac380 	call	ac38 <__mulsi3>
    c638:	900b883a 	mov	r5,r18
    c63c:	b009883a 	mov	r4,r22
    c640:	d8800315 	stw	r2,12(sp)
    c644:	000ac380 	call	ac38 <__mulsi3>
    c648:	b00b883a 	mov	r5,r22
    c64c:	b809883a 	mov	r4,r23
    c650:	1025883a 	mov	r18,r2
    c654:	000ac380 	call	ac38 <__mulsi3>
    c658:	800b883a 	mov	r5,r16
    c65c:	b809883a 	mov	r4,r23
    c660:	d8800215 	stw	r2,8(sp)
    c664:	000ac380 	call	ac38 <__mulsi3>
    c668:	d8c00317 	ldw	r3,12(sp)
    c66c:	d9400017 	ldw	r5,0(sp)
    c670:	1485883a 	add	r2,r2,r18
    c674:	1808d43a 	srli	r4,r3,16
    c678:	2ccf883a 	add	r7,r5,r19
    c67c:	da800217 	ldw	r10,8(sp)
    c680:	2085883a 	add	r2,r4,r2
    c684:	da400417 	ldw	r9,16(sp)
    c688:	da000517 	ldw	r8,20(sp)
    c68c:	d9800617 	ldw	r6,24(sp)
    c690:	1480022e 	bgeu	r2,r18,c69c <__muldf3+0x4d8>
    c694:	01000074 	movhi	r4,1
    c698:	5115883a 	add	r10,r10,r4
    c69c:	1024d43a 	srli	r18,r2,16
    c6a0:	1004943a 	slli	r2,r2,16
    c6a4:	1dffffcc 	andi	r23,r3,65535
    c6a8:	8809883a 	mov	r4,r17
    c6ac:	800b883a 	mov	r5,r16
    c6b0:	d9800615 	stw	r6,24(sp)
    c6b4:	da000515 	stw	r8,20(sp)
    c6b8:	da400415 	stw	r9,16(sp)
    c6bc:	d9c00315 	stw	r7,12(sp)
    c6c0:	92a5883a 	add	r18,r18,r10
    c6c4:	15ef883a 	add	r23,r2,r23
    c6c8:	000ac380 	call	ac38 <__mulsi3>
    c6cc:	880b883a 	mov	r5,r17
    c6d0:	b009883a 	mov	r4,r22
    c6d4:	d8800215 	stw	r2,8(sp)
    c6d8:	000ac380 	call	ac38 <__mulsi3>
    c6dc:	b00b883a 	mov	r5,r22
    c6e0:	a809883a 	mov	r4,r21
    c6e4:	d8800015 	stw	r2,0(sp)
    c6e8:	000ac380 	call	ac38 <__mulsi3>
    c6ec:	800b883a 	mov	r5,r16
    c6f0:	a809883a 	mov	r4,r21
    c6f4:	1023883a 	mov	r17,r2
    c6f8:	000ac380 	call	ac38 <__mulsi3>
    c6fc:	da800217 	ldw	r10,8(sp)
    c700:	d8c00017 	ldw	r3,0(sp)
    c704:	d9c00317 	ldw	r7,12(sp)
    c708:	500ad43a 	srli	r5,r10,16
    c70c:	10c5883a 	add	r2,r2,r3
    c710:	da400417 	ldw	r9,16(sp)
    c714:	288b883a 	add	r5,r5,r2
    c718:	da000517 	ldw	r8,20(sp)
    c71c:	d9800617 	ldw	r6,24(sp)
    c720:	28c0022e 	bgeu	r5,r3,c72c <__muldf3+0x568>
    c724:	00800074 	movhi	r2,1
    c728:	88a3883a 	add	r17,r17,r2
    c72c:	2806943a 	slli	r3,r5,16
    c730:	52bfffcc 	andi	r10,r10,65535
    c734:	3f39883a 	add	fp,r7,fp
    c738:	1a87883a 	add	r3,r3,r10
    c73c:	e4e7803a 	cmpltu	r19,fp,r19
    c740:	1d07883a 	add	r3,r3,r20
    c744:	e5f9883a 	add	fp,fp,r23
    c748:	1ce1883a 	add	r16,r3,r19
    c74c:	e5c9803a 	cmpltu	r4,fp,r23
    c750:	848f883a 	add	r7,r16,r18
    c754:	280ad43a 	srli	r5,r5,16
    c758:	3915883a 	add	r10,r7,r4
    c75c:	1d29803a 	cmpltu	r20,r3,r20
    c760:	84e1803a 	cmpltu	r16,r16,r19
    c764:	5109803a 	cmpltu	r4,r10,r4
    c768:	a420b03a 	or	r16,r20,r16
    c76c:	3ca5803a 	cmpltu	r18,r7,r18
    c770:	8161883a 	add	r16,r16,r5
    c774:	9108b03a 	or	r4,r18,r4
    c778:	8121883a 	add	r16,r16,r4
    c77c:	e02c927a 	slli	r22,fp,9
    c780:	8461883a 	add	r16,r16,r17
    c784:	d8c00117 	ldw	r3,4(sp)
    c788:	5004d5fa 	srli	r2,r10,23
    c78c:	8020927a 	slli	r16,r16,9
    c790:	e038d5fa 	srli	fp,fp,23
    c794:	b0ecb03a 	or	r22,r22,r3
    c798:	5014927a 	slli	r10,r10,9
    c79c:	80a0b03a 	or	r16,r16,r2
    c7a0:	b02cc03a 	cmpne	r22,r22,zero
    c7a4:	b72cb03a 	or	r22,r22,fp
    c7a8:	8080402c 	andhi	r2,r16,256
    c7ac:	b2acb03a 	or	r22,r22,r10
    c7b0:	10005c26 	beq	r2,zero,c924 <__muldf3+0x760>
    c7b4:	b004d07a 	srli	r2,r22,1
    c7b8:	800697fa 	slli	r3,r16,31
    c7bc:	b580004c 	andi	r22,r22,1
    c7c0:	8020d07a 	srli	r16,r16,1
    c7c4:	15acb03a 	or	r22,r2,r22
    c7c8:	b0ecb03a 	or	r22,r22,r3
    c7cc:	48c0ffc4 	addi	r3,r9,1023
    c7d0:	00c0370e 	bge	zero,r3,c8b0 <__muldf3+0x6ec>
    c7d4:	b08001cc 	andi	r2,r22,7
    c7d8:	10000726 	beq	r2,zero,c7f8 <__muldf3+0x634>
    c7dc:	b08003cc 	andi	r2,r22,15
    c7e0:	10800120 	cmpeqi	r2,r2,4
    c7e4:	1000041e 	bne	r2,zero,c7f8 <__muldf3+0x634>
    c7e8:	b0800104 	addi	r2,r22,4
    c7ec:	15ad803a 	cmpltu	r22,r2,r22
    c7f0:	85a1883a 	add	r16,r16,r22
    c7f4:	102d883a 	mov	r22,r2
    c7f8:	8080402c 	andhi	r2,r16,256
    c7fc:	10000426 	beq	r2,zero,c810 <__muldf3+0x64c>
    c800:	00bfc034 	movhi	r2,65280
    c804:	10bfffc4 	addi	r2,r2,-1
    c808:	80a0703a 	and	r16,r16,r2
    c80c:	48c10004 	addi	r3,r9,1024
    c810:	1881ffc8 	cmpgei	r2,r3,2047
    c814:	103f0f1e 	bne	r2,zero,c454 <__muldf3+0x290>
    c818:	8004977a 	slli	r2,r16,29
    c81c:	b02cd0fa 	srli	r22,r22,3
    c820:	8020927a 	slli	r16,r16,9
    c824:	18c1ffcc 	andi	r3,r3,2047
    c828:	15acb03a 	or	r22,r2,r22
    c82c:	8020d33a 	srli	r16,r16,12
    c830:	003ebf06 	br	c330 <__muldf3+0x16c>
    c834:	00800434 	movhi	r2,16
    c838:	84000234 	orhi	r16,r16,8
    c83c:	10bfffc4 	addi	r2,r2,-1
    c840:	80a0703a 	and	r16,r16,r2
    c844:	a00d883a 	mov	r6,r20
    c848:	003f1e06 	br	c4c4 <__muldf3+0x300>
    c84c:	3009883a 	mov	r4,r6
    c850:	da000115 	stw	r8,4(sp)
    c854:	d9800015 	stw	r6,0(sp)
    c858:	000d5480 	call	d548 <__clzsi2>
    c85c:	11400544 	addi	r5,r2,21
    c860:	29000748 	cmpgei	r4,r5,29
    c864:	10c00804 	addi	r3,r2,32
    c868:	d9800017 	ldw	r6,0(sp)
    c86c:	da000117 	ldw	r8,4(sp)
    c870:	203eed26 	beq	r4,zero,c428 <__muldf3+0x264>
    c874:	147ffe04 	addi	r17,r2,-8
    c878:	3462983a 	sll	r17,r6,r17
    c87c:	0025883a 	mov	r18,zero
    c880:	003ef006 	br	c444 <__muldf3+0x280>
    c884:	000d5480 	call	d548 <__clzsi2>
    c888:	11400544 	addi	r5,r2,21
    c88c:	29000748 	cmpgei	r4,r5,29
    c890:	10c00804 	addi	r3,r2,32
    c894:	d9800017 	ldw	r6,0(sp)
    c898:	d9c00117 	ldw	r7,4(sp)
    c89c:	203ec426 	beq	r4,zero,c3b0 <__muldf3+0x1ec>
    c8a0:	143ffe04 	addi	r16,r2,-8
    c8a4:	9420983a 	sll	r16,r18,r16
    c8a8:	002d883a 	mov	r22,zero
    c8ac:	003ec706 	br	c3cc <__muldf3+0x208>
    c8b0:	00800044 	movi	r2,1
    c8b4:	10c5c83a 	sub	r2,r2,r3
    c8b8:	11000e48 	cmpgei	r4,r2,57
    c8bc:	203e991e 	bne	r4,zero,c324 <__muldf3+0x160>
    c8c0:	11000808 	cmpgei	r4,r2,32
    c8c4:	2000191e 	bne	r4,zero,c92c <__muldf3+0x768>
    c8c8:	4a410784 	addi	r9,r9,1054
    c8cc:	8246983a 	sll	r3,r16,r9
    c8d0:	b088d83a 	srl	r4,r22,r2
    c8d4:	b26c983a 	sll	r22,r22,r9
    c8d8:	80a0d83a 	srl	r16,r16,r2
    c8dc:	1904b03a 	or	r2,r3,r4
    c8e0:	b02cc03a 	cmpne	r22,r22,zero
    c8e4:	1584b03a 	or	r2,r2,r22
    c8e8:	10c001cc 	andi	r3,r2,7
    c8ec:	18000726 	beq	r3,zero,c90c <__muldf3+0x748>
    c8f0:	10c003cc 	andi	r3,r2,15
    c8f4:	18c00120 	cmpeqi	r3,r3,4
    c8f8:	1800041e 	bne	r3,zero,c90c <__muldf3+0x748>
    c8fc:	10c00104 	addi	r3,r2,4
    c900:	1885803a 	cmpltu	r2,r3,r2
    c904:	80a1883a 	add	r16,r16,r2
    c908:	1805883a 	mov	r2,r3
    c90c:	80c0202c 	andhi	r3,r16,128
    c910:	18001b26 	beq	r3,zero,c980 <__muldf3+0x7bc>
    c914:	00c00044 	movi	r3,1
    c918:	0021883a 	mov	r16,zero
    c91c:	002d883a 	mov	r22,zero
    c920:	003e8306 	br	c330 <__muldf3+0x16c>
    c924:	4013883a 	mov	r9,r8
    c928:	003fa806 	br	c7cc <__muldf3+0x608>
    c92c:	013ff844 	movi	r4,-31
    c930:	20c7c83a 	sub	r3,r4,r3
    c934:	10800820 	cmpeqi	r2,r2,32
    c938:	80c6d83a 	srl	r3,r16,r3
    c93c:	1000031e 	bne	r2,zero,c94c <__muldf3+0x788>
    c940:	4a410f84 	addi	r9,r9,1086
    c944:	8260983a 	sll	r16,r16,r9
    c948:	b42cb03a 	or	r22,r22,r16
    c94c:	b02cc03a 	cmpne	r22,r22,zero
    c950:	b0c4b03a 	or	r2,r22,r3
    c954:	158001cc 	andi	r22,r2,7
    c958:	b000051e 	bne	r22,zero,c970 <__muldf3+0x7ac>
    c95c:	0021883a 	mov	r16,zero
    c960:	1004d0fa 	srli	r2,r2,3
    c964:	0007883a 	mov	r3,zero
    c968:	15acb03a 	or	r22,r2,r22
    c96c:	003e7006 	br	c330 <__muldf3+0x16c>
    c970:	10c003cc 	andi	r3,r2,15
    c974:	18c00118 	cmpnei	r3,r3,4
    c978:	0021883a 	mov	r16,zero
    c97c:	183fdf1e 	bne	r3,zero,c8fc <__muldf3+0x738>
    c980:	8006927a 	slli	r3,r16,9
    c984:	802c977a 	slli	r22,r16,29
    c988:	1820d33a 	srli	r16,r3,12
    c98c:	003ff406 	br	c960 <__muldf3+0x79c>
    c990:	00800434 	movhi	r2,16
    c994:	84000234 	orhi	r16,r16,8
    c998:	10bfffc4 	addi	r2,r2,-1
    c99c:	80a0703a 	and	r16,r16,r2
    c9a0:	003ec806 	br	c4c4 <__muldf3+0x300>

0000c9a4 <__subdf3>:
    c9a4:	00800434 	movhi	r2,16
    c9a8:	3812d53a 	srli	r9,r7,20
    c9ac:	10bfffc4 	addi	r2,r2,-1
    c9b0:	defffb04 	addi	sp,sp,-20
    c9b4:	2890703a 	and	r8,r5,r2
    c9b8:	3884703a 	and	r2,r7,r2
    c9bc:	2806d7fa 	srli	r3,r5,31
    c9c0:	dcc00315 	stw	r19,12(sp)
    c9c4:	dc400115 	stw	r17,4(sp)
    c9c8:	280ad53a 	srli	r5,r5,20
    c9cc:	401090fa 	slli	r8,r8,3
    c9d0:	2026d77a 	srli	r19,r4,29
    c9d4:	100490fa 	slli	r2,r2,3
    c9d8:	3022d77a 	srli	r17,r6,29
    c9dc:	4a81ffcc 	andi	r10,r9,2047
    c9e0:	dc800215 	stw	r18,8(sp)
    c9e4:	dc000015 	stw	r16,0(sp)
    c9e8:	dfc00415 	stw	ra,16(sp)
    c9ec:	5241ffe0 	cmpeqi	r9,r10,2047
    c9f0:	1825883a 	mov	r18,r3
    c9f4:	2c01ffcc 	andi	r16,r5,2047
    c9f8:	18c03fcc 	andi	r3,r3,255
    c9fc:	9a18b03a 	or	r12,r19,r8
    ca00:	201a90fa 	slli	r13,r4,3
    ca04:	380ed7fa 	srli	r7,r7,31
    ca08:	8896b03a 	or	r11,r17,r2
    ca0c:	301c90fa 	slli	r14,r6,3
    ca10:	4800711e 	bne	r9,zero,cbd8 <__subdf3+0x234>
    ca14:	39c0005c 	xori	r7,r7,1
    ca18:	8291c83a 	sub	r8,r16,r10
    ca1c:	19c05a26 	beq	r3,r7,cb88 <__subdf3+0x1e4>
    ca20:	0200720e 	bge	zero,r8,cbec <__subdf3+0x248>
    ca24:	50008126 	beq	r10,zero,cc2c <__subdf3+0x288>
    ca28:	8081ffd8 	cmpnei	r2,r16,2047
    ca2c:	10011626 	beq	r2,zero,ce88 <__subdf3+0x4e4>
    ca30:	5ac02034 	orhi	r11,r11,128
    ca34:	40800e48 	cmpgei	r2,r8,57
    ca38:	1000fe1e 	bne	r2,zero,ce34 <__subdf3+0x490>
    ca3c:	40800808 	cmpgei	r2,r8,32
    ca40:	10015e1e 	bne	r2,zero,cfbc <__subdf3+0x618>
    ca44:	00800804 	movi	r2,32
    ca48:	1205c83a 	sub	r2,r2,r8
    ca4c:	58a2983a 	sll	r17,r11,r2
    ca50:	7206d83a 	srl	r3,r14,r8
    ca54:	709c983a 	sll	r14,r14,r2
    ca58:	5a04d83a 	srl	r2,r11,r8
    ca5c:	88e2b03a 	or	r17,r17,r3
    ca60:	701cc03a 	cmpne	r14,r14,zero
    ca64:	8ba2b03a 	or	r17,r17,r14
    ca68:	6099c83a 	sub	r12,r12,r2
    ca6c:	6c63c83a 	sub	r17,r13,r17
    ca70:	6c49803a 	cmpltu	r4,r13,r17
    ca74:	6109c83a 	sub	r4,r12,r4
    ca78:	2080202c 	andhi	r2,r4,128
    ca7c:	10009f26 	beq	r2,zero,ccfc <__subdf3+0x358>
    ca80:	04c02034 	movhi	r19,128
    ca84:	9cffffc4 	addi	r19,r19,-1
    ca88:	24e6703a 	and	r19,r4,r19
    ca8c:	9800e026 	beq	r19,zero,ce10 <__subdf3+0x46c>
    ca90:	9809883a 	mov	r4,r19
    ca94:	000d5480 	call	d548 <__clzsi2>
    ca98:	123ffe04 	addi	r8,r2,-8
    ca9c:	01000804 	movi	r4,32
    caa0:	2209c83a 	sub	r4,r4,r8
    caa4:	8906d83a 	srl	r3,r17,r4
    caa8:	9a08983a 	sll	r4,r19,r8
    caac:	8a22983a 	sll	r17,r17,r8
    cab0:	1908b03a 	or	r4,r3,r4
    cab4:	4400cf16 	blt	r8,r16,cdf4 <__subdf3+0x450>
    cab8:	4411c83a 	sub	r8,r8,r16
    cabc:	40800044 	addi	r2,r8,1
    cac0:	10c00808 	cmpgei	r3,r2,32
    cac4:	1801251e 	bne	r3,zero,cf5c <__subdf3+0x5b8>
    cac8:	00c00804 	movi	r3,32
    cacc:	1887c83a 	sub	r3,r3,r2
    cad0:	888ad83a 	srl	r5,r17,r2
    cad4:	88e2983a 	sll	r17,r17,r3
    cad8:	20c6983a 	sll	r3,r4,r3
    cadc:	2088d83a 	srl	r4,r4,r2
    cae0:	8822c03a 	cmpne	r17,r17,zero
    cae4:	1946b03a 	or	r3,r3,r5
    cae8:	1c62b03a 	or	r17,r3,r17
    caec:	0021883a 	mov	r16,zero
    caf0:	888001cc 	andi	r2,r17,7
    caf4:	10000726 	beq	r2,zero,cb14 <__subdf3+0x170>
    caf8:	888003cc 	andi	r2,r17,15
    cafc:	10800120 	cmpeqi	r2,r2,4
    cb00:	1000041e 	bne	r2,zero,cb14 <__subdf3+0x170>
    cb04:	88c00104 	addi	r3,r17,4
    cb08:	1c63803a 	cmpltu	r17,r3,r17
    cb0c:	2449883a 	add	r4,r4,r17
    cb10:	1823883a 	mov	r17,r3
    cb14:	2080202c 	andhi	r2,r4,128
    cb18:	10007a26 	beq	r2,zero,cd04 <__subdf3+0x360>
    cb1c:	82000044 	addi	r8,r16,1
    cb20:	4081ffe0 	cmpeqi	r2,r8,2047
    cb24:	4201ffcc 	andi	r8,r8,2047
    cb28:	10008c1e 	bne	r2,zero,cd5c <__subdf3+0x3b8>
    cb2c:	00bfe034 	movhi	r2,65408
    cb30:	10bfffc4 	addi	r2,r2,-1
    cb34:	2084703a 	and	r2,r4,r2
    cb38:	1008927a 	slli	r4,r2,9
    cb3c:	8822d0fa 	srli	r17,r17,3
    cb40:	100c977a 	slli	r6,r2,29
    cb44:	2008d33a 	srli	r4,r4,12
    cb48:	3444b03a 	or	r2,r6,r17
    cb4c:	4010953a 	slli	r8,r8,20
    cb50:	00c00434 	movhi	r3,16
    cb54:	94803fcc 	andi	r18,r18,255
    cb58:	902497fa 	slli	r18,r18,31
    cb5c:	18ffffc4 	addi	r3,r3,-1
    cb60:	20c6703a 	and	r3,r4,r3
    cb64:	1a06b03a 	or	r3,r3,r8
    cb68:	1c86b03a 	or	r3,r3,r18
    cb6c:	dfc00417 	ldw	ra,16(sp)
    cb70:	dcc00317 	ldw	r19,12(sp)
    cb74:	dc800217 	ldw	r18,8(sp)
    cb78:	dc400117 	ldw	r17,4(sp)
    cb7c:	dc000017 	ldw	r16,0(sp)
    cb80:	dec00504 	addi	sp,sp,20
    cb84:	f800283a 	ret
    cb88:	0200320e 	bge	zero,r8,cc54 <__subdf3+0x2b0>
    cb8c:	50004c26 	beq	r10,zero,ccc0 <__subdf3+0x31c>
    cb90:	8081ffd8 	cmpnei	r2,r16,2047
    cb94:	1000bc26 	beq	r2,zero,ce88 <__subdf3+0x4e4>
    cb98:	5ac02034 	orhi	r11,r11,128
    cb9c:	40800e48 	cmpgei	r2,r8,57
    cba0:	1000641e 	bne	r2,zero,cd34 <__subdf3+0x390>
    cba4:	40800808 	cmpgei	r2,r8,32
    cba8:	10011726 	beq	r2,zero,d008 <__subdf3+0x664>
    cbac:	447ff804 	addi	r17,r8,-32
    cbb0:	40800820 	cmpeqi	r2,r8,32
    cbb4:	5c46d83a 	srl	r3,r11,r17
    cbb8:	1000041e 	bne	r2,zero,cbcc <__subdf3+0x228>
    cbbc:	00801004 	movi	r2,64
    cbc0:	1205c83a 	sub	r2,r2,r8
    cbc4:	5884983a 	sll	r2,r11,r2
    cbc8:	709cb03a 	or	r14,r14,r2
    cbcc:	7022c03a 	cmpne	r17,r14,zero
    cbd0:	88e2b03a 	or	r17,r17,r3
    cbd4:	00005906 	br	cd3c <__subdf3+0x398>
    cbd8:	5b8ab03a 	or	r5,r11,r14
    cbdc:	823e0044 	addi	r8,r16,-2047
    cbe0:	28001a1e 	bne	r5,zero,cc4c <__subdf3+0x2a8>
    cbe4:	39c0005c 	xori	r7,r7,1
    cbe8:	19c01a26 	beq	r3,r7,cc54 <__subdf3+0x2b0>
    cbec:	4000291e 	bne	r8,zero,cc94 <__subdf3+0x2f0>
    cbf0:	80800044 	addi	r2,r16,1
    cbf4:	1081ff8c 	andi	r2,r2,2046
    cbf8:	1000911e 	bne	r2,zero,ce40 <__subdf3+0x49c>
    cbfc:	6346b03a 	or	r3,r12,r13
    cc00:	5b84b03a 	or	r2,r11,r14
    cc04:	8001551e 	bne	r16,zero,d15c <__subdf3+0x7b8>
    cc08:	18011b26 	beq	r3,zero,d078 <__subdf3+0x6d4>
    cc0c:	1001641e 	bne	r2,zero,d1a0 <__subdf3+0x7fc>
    cc10:	00880034 	movhi	r2,8192
    cc14:	6022977a 	slli	r17,r12,29
    cc18:	10bfffc4 	addi	r2,r2,-1
    cc1c:	2088703a 	and	r4,r4,r2
    cc20:	2444b03a 	or	r2,r4,r17
    cc24:	6026d0fa 	srli	r19,r12,3
    cc28:	00003d06 	br	cd20 <__subdf3+0x37c>
    cc2c:	5b84b03a 	or	r2,r11,r14
    cc30:	10008e26 	beq	r2,zero,ce6c <__subdf3+0x4c8>
    cc34:	40bfffc4 	addi	r2,r8,-1
    cc38:	10011f26 	beq	r2,zero,d0b8 <__subdf3+0x714>
    cc3c:	4201ffd8 	cmpnei	r8,r8,2047
    cc40:	40012d26 	beq	r8,zero,d0f8 <__subdf3+0x754>
    cc44:	1011883a 	mov	r8,r2
    cc48:	003f7a06 	br	ca34 <__subdf3+0x90>
    cc4c:	39c03fcc 	andi	r7,r7,255
    cc50:	19ffe61e 	bne	r3,r7,cbec <__subdf3+0x248>
    cc54:	4000931e 	bne	r8,zero,cea4 <__subdf3+0x500>
    cc58:	80c00044 	addi	r3,r16,1
    cc5c:	1881ff8c 	andi	r2,r3,2046
    cc60:	10012c1e 	bne	r2,zero,d114 <__subdf3+0x770>
    cc64:	6344b03a 	or	r2,r12,r13
    cc68:	8000f91e 	bne	r16,zero,d050 <__subdf3+0x6ac>
    cc6c:	10017326 	beq	r2,zero,d23c <__subdf3+0x898>
    cc70:	5b84b03a 	or	r2,r11,r14
    cc74:	1001781e 	bne	r2,zero,d258 <__subdf3+0x8b4>
    cc78:	6004977a 	slli	r2,r12,29
    cc7c:	00c80034 	movhi	r3,8192
    cc80:	18ffffc4 	addi	r3,r3,-1
    cc84:	20c6703a 	and	r3,r4,r3
    cc88:	10c4b03a 	or	r2,r2,r3
    cc8c:	6026d0fa 	srli	r19,r12,3
    cc90:	00002306 	br	cd20 <__subdf3+0x37c>
    cc94:	5411c83a 	sub	r8,r10,r16
    cc98:	3825883a 	mov	r18,r7
    cc9c:	8000991e 	bne	r16,zero,cf04 <__subdf3+0x560>
    cca0:	6344b03a 	or	r2,r12,r13
    cca4:	1000e326 	beq	r2,zero,d034 <__subdf3+0x690>
    cca8:	40bfffc4 	addi	r2,r8,-1
    ccac:	10015d26 	beq	r2,zero,d224 <__subdf3+0x880>
    ccb0:	4201ffd8 	cmpnei	r8,r8,2047
    ccb4:	4000f926 	beq	r8,zero,d09c <__subdf3+0x6f8>
    ccb8:	1011883a 	mov	r8,r2
    ccbc:	00009406 	br	cf10 <__subdf3+0x56c>
    ccc0:	5b84b03a 	or	r2,r11,r14
    ccc4:	10010226 	beq	r2,zero,d0d0 <__subdf3+0x72c>
    ccc8:	40bfffc4 	addi	r2,r8,-1
    cccc:	10000426 	beq	r2,zero,cce0 <__subdf3+0x33c>
    ccd0:	4201ffd8 	cmpnei	r8,r8,2047
    ccd4:	40014126 	beq	r8,zero,d1dc <__subdf3+0x838>
    ccd8:	1011883a 	mov	r8,r2
    ccdc:	003faf06 	br	cb9c <__subdf3+0x1f8>
    cce0:	6ba3883a 	add	r17,r13,r14
    cce4:	62c9883a 	add	r4,r12,r11
    cce8:	8b5b803a 	cmpltu	r13,r17,r13
    ccec:	2349883a 	add	r4,r4,r13
    ccf0:	2080202c 	andhi	r2,r4,128
    ccf4:	1000a61e 	bne	r2,zero,cf90 <__subdf3+0x5ec>
    ccf8:	04000044 	movi	r16,1
    ccfc:	888001cc 	andi	r2,r17,7
    cd00:	103f7d1e 	bne	r2,zero,caf8 <__subdf3+0x154>
    cd04:	8822d0fa 	srli	r17,r17,3
    cd08:	2004977a 	slli	r2,r4,29
    cd0c:	2026d0fa 	srli	r19,r4,3
    cd10:	8011883a 	mov	r8,r16
    cd14:	8884b03a 	or	r2,r17,r2
    cd18:	40c1ffe0 	cmpeqi	r3,r8,2047
    cd1c:	18002d1e 	bne	r3,zero,cdd4 <__subdf3+0x430>
    cd20:	01000434 	movhi	r4,16
    cd24:	213fffc4 	addi	r4,r4,-1
    cd28:	9908703a 	and	r4,r19,r4
    cd2c:	4201ffcc 	andi	r8,r8,2047
    cd30:	003f8606 	br	cb4c <__subdf3+0x1a8>
    cd34:	5ba2b03a 	or	r17,r11,r14
    cd38:	8822c03a 	cmpne	r17,r17,zero
    cd3c:	8b63883a 	add	r17,r17,r13
    cd40:	8b49803a 	cmpltu	r4,r17,r13
    cd44:	2309883a 	add	r4,r4,r12
    cd48:	2080202c 	andhi	r2,r4,128
    cd4c:	103feb26 	beq	r2,zero,ccfc <__subdf3+0x358>
    cd50:	84000044 	addi	r16,r16,1
    cd54:	8081ffe0 	cmpeqi	r2,r16,2047
    cd58:	10008e26 	beq	r2,zero,cf94 <__subdf3+0x5f0>
    cd5c:	0201ffc4 	movi	r8,2047
    cd60:	0009883a 	mov	r4,zero
    cd64:	0005883a 	mov	r2,zero
    cd68:	003f7806 	br	cb4c <__subdf3+0x1a8>
    cd6c:	6010977a 	slli	r8,r12,29
    cd70:	6026d0fa 	srli	r19,r12,3
    cd74:	1000bb26 	beq	r2,zero,d064 <__subdf3+0x6c0>
    cd78:	01480034 	movhi	r5,8192
    cd7c:	297fffc4 	addi	r5,r5,-1
    cd80:	2146703a 	and	r3,r4,r5
    cd84:	9880022c 	andhi	r2,r19,8
    cd88:	1a06b03a 	or	r3,r3,r8
    cd8c:	10000826 	beq	r2,zero,cdb0 <__subdf3+0x40c>
    cd90:	5808d0fa 	srli	r4,r11,3
    cd94:	2080022c 	andhi	r2,r4,8
    cd98:	1000051e 	bne	r2,zero,cdb0 <__subdf3+0x40c>
    cd9c:	5804977a 	slli	r2,r11,29
    cda0:	3146703a 	and	r3,r6,r5
    cda4:	3825883a 	mov	r18,r7
    cda8:	1886b03a 	or	r3,r3,r2
    cdac:	2027883a 	mov	r19,r4
    cdb0:	1804d77a 	srli	r2,r3,29
    cdb4:	980890fa 	slli	r4,r19,3
    cdb8:	01480034 	movhi	r5,8192
    cdbc:	297fffc4 	addi	r5,r5,-1
    cdc0:	1108b03a 	or	r4,r2,r4
    cdc4:	2004977a 	slli	r2,r4,29
    cdc8:	2026d0fa 	srli	r19,r4,3
    cdcc:	1946703a 	and	r3,r3,r5
    cdd0:	10c4b03a 	or	r2,r2,r3
    cdd4:	14c6b03a 	or	r3,r2,r19
    cdd8:	18014926 	beq	r3,zero,d300 <__subdf3+0x95c>
    cddc:	00c00434 	movhi	r3,16
    cde0:	99000234 	orhi	r4,r19,8
    cde4:	18ffffc4 	addi	r3,r3,-1
    cde8:	20c8703a 	and	r4,r4,r3
    cdec:	0201ffc4 	movi	r8,2047
    cdf0:	003f5606 	br	cb4c <__subdf3+0x1a8>
    cdf4:	00bfe034 	movhi	r2,65408
    cdf8:	10bfffc4 	addi	r2,r2,-1
    cdfc:	2088703a 	and	r4,r4,r2
    ce00:	888001cc 	andi	r2,r17,7
    ce04:	8221c83a 	sub	r16,r16,r8
    ce08:	103f3b1e 	bne	r2,zero,caf8 <__subdf3+0x154>
    ce0c:	003fbd06 	br	cd04 <__subdf3+0x360>
    ce10:	8809883a 	mov	r4,r17
    ce14:	000d5480 	call	d548 <__clzsi2>
    ce18:	12000604 	addi	r8,r2,24
    ce1c:	40c00808 	cmpgei	r3,r8,32
    ce20:	183f1e26 	beq	r3,zero,ca9c <__subdf3+0xf8>
    ce24:	113ffe04 	addi	r4,r2,-8
    ce28:	8908983a 	sll	r4,r17,r4
    ce2c:	0023883a 	mov	r17,zero
    ce30:	003f2006 	br	cab4 <__subdf3+0x110>
    ce34:	5ba2b03a 	or	r17,r11,r14
    ce38:	8822c03a 	cmpne	r17,r17,zero
    ce3c:	003f0b06 	br	ca6c <__subdf3+0xc8>
    ce40:	6ba3c83a 	sub	r17,r13,r14
    ce44:	62e7c83a 	sub	r19,r12,r11
    ce48:	6c49803a 	cmpltu	r4,r13,r17
    ce4c:	9927c83a 	sub	r19,r19,r4
    ce50:	9880202c 	andhi	r2,r19,128
    ce54:	1000bb1e 	bne	r2,zero,d144 <__subdf3+0x7a0>
    ce58:	8cc4b03a 	or	r2,r17,r19
    ce5c:	103f0b1e 	bne	r2,zero,ca8c <__subdf3+0xe8>
    ce60:	0027883a 	mov	r19,zero
    ce64:	0025883a 	mov	r18,zero
    ce68:	003fad06 	br	cd20 <__subdf3+0x37c>
    ce6c:	00880034 	movhi	r2,8192
    ce70:	6022977a 	slli	r17,r12,29
    ce74:	10bfffc4 	addi	r2,r2,-1
    ce78:	2088703a 	and	r4,r4,r2
    ce7c:	2444b03a 	or	r2,r4,r17
    ce80:	6026d0fa 	srli	r19,r12,3
    ce84:	003fa406 	br	cd18 <__subdf3+0x374>
    ce88:	00880034 	movhi	r2,8192
    ce8c:	6022977a 	slli	r17,r12,29
    ce90:	10bfffc4 	addi	r2,r2,-1
    ce94:	2088703a 	and	r4,r4,r2
    ce98:	2444b03a 	or	r2,r4,r17
    ce9c:	6026d0fa 	srli	r19,r12,3
    cea0:	003fcc06 	br	cdd4 <__subdf3+0x430>
    cea4:	5411c83a 	sub	r8,r10,r16
    cea8:	80004f26 	beq	r16,zero,cfe8 <__subdf3+0x644>
    ceac:	5081ffd8 	cmpnei	r2,r10,2047
    ceb0:	1000b426 	beq	r2,zero,d184 <__subdf3+0x7e0>
    ceb4:	63002034 	orhi	r12,r12,128
    ceb8:	40800e48 	cmpgei	r2,r8,57
    cebc:	1000c41e 	bne	r2,zero,d1d0 <__subdf3+0x82c>
    cec0:	40800808 	cmpgei	r2,r8,32
    cec4:	1000f91e 	bne	r2,zero,d2ac <__subdf3+0x908>
    cec8:	00800804 	movi	r2,32
    cecc:	1205c83a 	sub	r2,r2,r8
    ced0:	60a2983a 	sll	r17,r12,r2
    ced4:	6a06d83a 	srl	r3,r13,r8
    ced8:	6884983a 	sll	r2,r13,r2
    cedc:	6210d83a 	srl	r8,r12,r8
    cee0:	88e2b03a 	or	r17,r17,r3
    cee4:	1004c03a 	cmpne	r2,r2,zero
    cee8:	88a2b03a 	or	r17,r17,r2
    ceec:	5a17883a 	add	r11,r11,r8
    cef0:	8ba3883a 	add	r17,r17,r14
    cef4:	8b85803a 	cmpltu	r2,r17,r14
    cef8:	12c9883a 	add	r4,r2,r11
    cefc:	5021883a 	mov	r16,r10
    cf00:	003f9106 	br	cd48 <__subdf3+0x3a4>
    cf04:	5081ffd8 	cmpnei	r2,r10,2047
    cf08:	10006426 	beq	r2,zero,d09c <__subdf3+0x6f8>
    cf0c:	63002034 	orhi	r12,r12,128
    cf10:	40800e48 	cmpgei	r2,r8,57
    cf14:	1000751e 	bne	r2,zero,d0ec <__subdf3+0x748>
    cf18:	40800808 	cmpgei	r2,r8,32
    cf1c:	1000b61e 	bne	r2,zero,d1f8 <__subdf3+0x854>
    cf20:	00800804 	movi	r2,32
    cf24:	1205c83a 	sub	r2,r2,r8
    cf28:	60a2983a 	sll	r17,r12,r2
    cf2c:	6a06d83a 	srl	r3,r13,r8
    cf30:	6884983a 	sll	r2,r13,r2
    cf34:	6210d83a 	srl	r8,r12,r8
    cf38:	88e2b03a 	or	r17,r17,r3
    cf3c:	1004c03a 	cmpne	r2,r2,zero
    cf40:	88a2b03a 	or	r17,r17,r2
    cf44:	5a17c83a 	sub	r11,r11,r8
    cf48:	7463c83a 	sub	r17,r14,r17
    cf4c:	7445803a 	cmpltu	r2,r14,r17
    cf50:	5889c83a 	sub	r4,r11,r2
    cf54:	5021883a 	mov	r16,r10
    cf58:	003ec706 	br	ca78 <__subdf3+0xd4>
    cf5c:	423ff844 	addi	r8,r8,-31
    cf60:	10c00820 	cmpeqi	r3,r2,32
    cf64:	2210d83a 	srl	r8,r4,r8
    cf68:	1800041e 	bne	r3,zero,cf7c <__subdf3+0x5d8>
    cf6c:	00c01004 	movi	r3,64
    cf70:	1885c83a 	sub	r2,r3,r2
    cf74:	2088983a 	sll	r4,r4,r2
    cf78:	8922b03a 	or	r17,r17,r4
    cf7c:	8822c03a 	cmpne	r17,r17,zero
    cf80:	8a22b03a 	or	r17,r17,r8
    cf84:	0009883a 	mov	r4,zero
    cf88:	0021883a 	mov	r16,zero
    cf8c:	003f5b06 	br	ccfc <__subdf3+0x358>
    cf90:	04000084 	movi	r16,2
    cf94:	00bfe034 	movhi	r2,65408
    cf98:	10bfffc4 	addi	r2,r2,-1
    cf9c:	2084703a 	and	r2,r4,r2
    cfa0:	8806d07a 	srli	r3,r17,1
    cfa4:	100a97fa 	slli	r5,r2,31
    cfa8:	8c40004c 	andi	r17,r17,1
    cfac:	1c62b03a 	or	r17,r3,r17
    cfb0:	1008d07a 	srli	r4,r2,1
    cfb4:	2c62b03a 	or	r17,r5,r17
    cfb8:	003ecd06 	br	caf0 <__subdf3+0x14c>
    cfbc:	447ff804 	addi	r17,r8,-32
    cfc0:	40800820 	cmpeqi	r2,r8,32
    cfc4:	5c46d83a 	srl	r3,r11,r17
    cfc8:	1000041e 	bne	r2,zero,cfdc <__subdf3+0x638>
    cfcc:	00801004 	movi	r2,64
    cfd0:	1205c83a 	sub	r2,r2,r8
    cfd4:	5884983a 	sll	r2,r11,r2
    cfd8:	709cb03a 	or	r14,r14,r2
    cfdc:	7022c03a 	cmpne	r17,r14,zero
    cfe0:	88e2b03a 	or	r17,r17,r3
    cfe4:	003ea106 	br	ca6c <__subdf3+0xc8>
    cfe8:	6344b03a 	or	r2,r12,r13
    cfec:	1000a526 	beq	r2,zero,d284 <__subdf3+0x8e0>
    cff0:	40bfffc4 	addi	r2,r8,-1
    cff4:	1000bd26 	beq	r2,zero,d2ec <__subdf3+0x948>
    cff8:	4201ffd8 	cmpnei	r8,r8,2047
    cffc:	40006126 	beq	r8,zero,d184 <__subdf3+0x7e0>
    d000:	1011883a 	mov	r8,r2
    d004:	003fac06 	br	ceb8 <__subdf3+0x514>
    d008:	00800804 	movi	r2,32
    d00c:	1205c83a 	sub	r2,r2,r8
    d010:	58a2983a 	sll	r17,r11,r2
    d014:	7206d83a 	srl	r3,r14,r8
    d018:	709c983a 	sll	r14,r14,r2
    d01c:	5a04d83a 	srl	r2,r11,r8
    d020:	88e2b03a 	or	r17,r17,r3
    d024:	701cc03a 	cmpne	r14,r14,zero
    d028:	8ba2b03a 	or	r17,r17,r14
    d02c:	6099883a 	add	r12,r12,r2
    d030:	003f4206 	br	cd3c <__subdf3+0x398>
    d034:	5808977a 	slli	r4,r11,29
    d038:	00c80034 	movhi	r3,8192
    d03c:	18ffffc4 	addi	r3,r3,-1
    d040:	30cc703a 	and	r6,r6,r3
    d044:	2184b03a 	or	r2,r4,r6
    d048:	5826d0fa 	srli	r19,r11,3
    d04c:	003f3206 	br	cd18 <__subdf3+0x374>
    d050:	10004c26 	beq	r2,zero,d184 <__subdf3+0x7e0>
    d054:	5b9cb03a 	or	r14,r11,r14
    d058:	6010977a 	slli	r8,r12,29
    d05c:	6026d0fa 	srli	r19,r12,3
    d060:	703f451e 	bne	r14,zero,cd78 <__subdf3+0x3d4>
    d064:	00880034 	movhi	r2,8192
    d068:	10bfffc4 	addi	r2,r2,-1
    d06c:	2084703a 	and	r2,r4,r2
    d070:	1204b03a 	or	r2,r2,r8
    d074:	003f5706 	br	cdd4 <__subdf3+0x430>
    d078:	103f7926 	beq	r2,zero,ce60 <__subdf3+0x4bc>
    d07c:	5804977a 	slli	r2,r11,29
    d080:	00c80034 	movhi	r3,8192
    d084:	18ffffc4 	addi	r3,r3,-1
    d088:	30c6703a 	and	r3,r6,r3
    d08c:	10c4b03a 	or	r2,r2,r3
    d090:	5826d0fa 	srli	r19,r11,3
    d094:	3825883a 	mov	r18,r7
    d098:	003f2106 	br	cd20 <__subdf3+0x37c>
    d09c:	5804977a 	slli	r2,r11,29
    d0a0:	00c80034 	movhi	r3,8192
    d0a4:	18ffffc4 	addi	r3,r3,-1
    d0a8:	30c6703a 	and	r3,r6,r3
    d0ac:	10c4b03a 	or	r2,r2,r3
    d0b0:	5826d0fa 	srli	r19,r11,3
    d0b4:	003f4706 	br	cdd4 <__subdf3+0x430>
    d0b8:	6ba3c83a 	sub	r17,r13,r14
    d0bc:	62c9c83a 	sub	r4,r12,r11
    d0c0:	6c5b803a 	cmpltu	r13,r13,r17
    d0c4:	2349c83a 	sub	r4,r4,r13
    d0c8:	04000044 	movi	r16,1
    d0cc:	003e6a06 	br	ca78 <__subdf3+0xd4>
    d0d0:	6004977a 	slli	r2,r12,29
    d0d4:	00c80034 	movhi	r3,8192
    d0d8:	18ffffc4 	addi	r3,r3,-1
    d0dc:	20c8703a 	and	r4,r4,r3
    d0e0:	1104b03a 	or	r2,r2,r4
    d0e4:	6026d0fa 	srli	r19,r12,3
    d0e8:	003f0b06 	br	cd18 <__subdf3+0x374>
    d0ec:	6366b03a 	or	r19,r12,r13
    d0f0:	9822c03a 	cmpne	r17,r19,zero
    d0f4:	003f9406 	br	cf48 <__subdf3+0x5a4>
    d0f8:	6004977a 	slli	r2,r12,29
    d0fc:	00c80034 	movhi	r3,8192
    d100:	18ffffc4 	addi	r3,r3,-1
    d104:	20c8703a 	and	r4,r4,r3
    d108:	1104b03a 	or	r2,r2,r4
    d10c:	6026d0fa 	srli	r19,r12,3
    d110:	003f3006 	br	cdd4 <__subdf3+0x430>
    d114:	1881ffe0 	cmpeqi	r2,r3,2047
    d118:	103f101e 	bne	r2,zero,cd5c <__subdf3+0x3b8>
    d11c:	6b9d883a 	add	r14,r13,r14
    d120:	62c9883a 	add	r4,r12,r11
    d124:	7345803a 	cmpltu	r2,r14,r13
    d128:	2085883a 	add	r2,r4,r2
    d12c:	102297fa 	slli	r17,r2,31
    d130:	701cd07a 	srli	r14,r14,1
    d134:	1008d07a 	srli	r4,r2,1
    d138:	1821883a 	mov	r16,r3
    d13c:	8ba2b03a 	or	r17,r17,r14
    d140:	003eee06 	br	ccfc <__subdf3+0x358>
    d144:	7363c83a 	sub	r17,r14,r13
    d148:	5b09c83a 	sub	r4,r11,r12
    d14c:	7467803a 	cmpltu	r19,r14,r17
    d150:	24e7c83a 	sub	r19,r4,r19
    d154:	3825883a 	mov	r18,r7
    d158:	003e4c06 	br	ca8c <__subdf3+0xe8>
    d15c:	183f031e 	bne	r3,zero,cd6c <__subdf3+0x3c8>
    d160:	10005d26 	beq	r2,zero,d2d8 <__subdf3+0x934>
    d164:	00880034 	movhi	r2,8192
    d168:	5806977a 	slli	r3,r11,29
    d16c:	10bfffc4 	addi	r2,r2,-1
    d170:	3084703a 	and	r2,r6,r2
    d174:	10c4b03a 	or	r2,r2,r3
    d178:	5826d0fa 	srli	r19,r11,3
    d17c:	3825883a 	mov	r18,r7
    d180:	003f1406 	br	cdd4 <__subdf3+0x430>
    d184:	00880034 	movhi	r2,8192
    d188:	5806977a 	slli	r3,r11,29
    d18c:	10bfffc4 	addi	r2,r2,-1
    d190:	3084703a 	and	r2,r6,r2
    d194:	10c4b03a 	or	r2,r2,r3
    d198:	5826d0fa 	srli	r19,r11,3
    d19c:	003f0d06 	br	cdd4 <__subdf3+0x430>
    d1a0:	6ba3c83a 	sub	r17,r13,r14
    d1a4:	62c5c83a 	sub	r2,r12,r11
    d1a8:	6c49803a 	cmpltu	r4,r13,r17
    d1ac:	1109c83a 	sub	r4,r2,r4
    d1b0:	2080202c 	andhi	r2,r4,128
    d1b4:	10003a26 	beq	r2,zero,d2a0 <__subdf3+0x8fc>
    d1b8:	7363c83a 	sub	r17,r14,r13
    d1bc:	5b09c83a 	sub	r4,r11,r12
    d1c0:	745d803a 	cmpltu	r14,r14,r17
    d1c4:	2389c83a 	sub	r4,r4,r14
    d1c8:	3825883a 	mov	r18,r7
    d1cc:	003e4806 	br	caf0 <__subdf3+0x14c>
    d1d0:	6362b03a 	or	r17,r12,r13
    d1d4:	8822c03a 	cmpne	r17,r17,zero
    d1d8:	003f4506 	br	cef0 <__subdf3+0x54c>
    d1dc:	6004977a 	slli	r2,r12,29
    d1e0:	00c80034 	movhi	r3,8192
    d1e4:	18ffffc4 	addi	r3,r3,-1
    d1e8:	20c6703a 	and	r3,r4,r3
    d1ec:	10c4b03a 	or	r2,r2,r3
    d1f0:	6026d0fa 	srli	r19,r12,3
    d1f4:	003ef706 	br	cdd4 <__subdf3+0x430>
    d1f8:	40bff804 	addi	r2,r8,-32
    d1fc:	40c00820 	cmpeqi	r3,r8,32
    d200:	6084d83a 	srl	r2,r12,r2
    d204:	1800041e 	bne	r3,zero,d218 <__subdf3+0x874>
    d208:	04c01004 	movi	r19,64
    d20c:	9a11c83a 	sub	r8,r19,r8
    d210:	6226983a 	sll	r19,r12,r8
    d214:	6cdab03a 	or	r13,r13,r19
    d218:	6822c03a 	cmpne	r17,r13,zero
    d21c:	88a2b03a 	or	r17,r17,r2
    d220:	003f4906 	br	cf48 <__subdf3+0x5a4>
    d224:	7363c83a 	sub	r17,r14,r13
    d228:	5b09c83a 	sub	r4,r11,r12
    d22c:	745d803a 	cmpltu	r14,r14,r17
    d230:	2389c83a 	sub	r4,r4,r14
    d234:	04000044 	movi	r16,1
    d238:	003e0f06 	br	ca78 <__subdf3+0xd4>
    d23c:	00880034 	movhi	r2,8192
    d240:	5806977a 	slli	r3,r11,29
    d244:	10bfffc4 	addi	r2,r2,-1
    d248:	3084703a 	and	r2,r6,r2
    d24c:	10c4b03a 	or	r2,r2,r3
    d250:	5826d0fa 	srli	r19,r11,3
    d254:	003eb206 	br	cd20 <__subdf3+0x37c>
    d258:	6ba3883a 	add	r17,r13,r14
    d25c:	62c9883a 	add	r4,r12,r11
    d260:	8b5b803a 	cmpltu	r13,r17,r13
    d264:	2349883a 	add	r4,r4,r13
    d268:	2080202c 	andhi	r2,r4,128
    d26c:	103ea326 	beq	r2,zero,ccfc <__subdf3+0x358>
    d270:	00bfe034 	movhi	r2,65408
    d274:	10bfffc4 	addi	r2,r2,-1
    d278:	2088703a 	and	r4,r4,r2
    d27c:	04000044 	movi	r16,1
    d280:	003e9e06 	br	ccfc <__subdf3+0x358>
    d284:	00880034 	movhi	r2,8192
    d288:	5806977a 	slli	r3,r11,29
    d28c:	10bfffc4 	addi	r2,r2,-1
    d290:	3084703a 	and	r2,r6,r2
    d294:	10c4b03a 	or	r2,r2,r3
    d298:	5826d0fa 	srli	r19,r11,3
    d29c:	003e9e06 	br	cd18 <__subdf3+0x374>
    d2a0:	8904b03a 	or	r2,r17,r4
    d2a4:	103eee26 	beq	r2,zero,ce60 <__subdf3+0x4bc>
    d2a8:	003e9406 	br	ccfc <__subdf3+0x358>
    d2ac:	40bff804 	addi	r2,r8,-32
    d2b0:	40c00820 	cmpeqi	r3,r8,32
    d2b4:	6084d83a 	srl	r2,r12,r2
    d2b8:	1800041e 	bne	r3,zero,d2cc <__subdf3+0x928>
    d2bc:	04c01004 	movi	r19,64
    d2c0:	9a11c83a 	sub	r8,r19,r8
    d2c4:	6226983a 	sll	r19,r12,r8
    d2c8:	6cdab03a 	or	r13,r13,r19
    d2cc:	6822c03a 	cmpne	r17,r13,zero
    d2d0:	88a2b03a 	or	r17,r17,r2
    d2d4:	003f0606 	br	cef0 <__subdf3+0x54c>
    d2d8:	04c00434 	movhi	r19,16
    d2dc:	9cffffc4 	addi	r19,r19,-1
    d2e0:	0025883a 	mov	r18,zero
    d2e4:	00bfffc4 	movi	r2,-1
    d2e8:	003ebc06 	br	cddc <__subdf3+0x438>
    d2ec:	6ba3883a 	add	r17,r13,r14
    d2f0:	62c9883a 	add	r4,r12,r11
    d2f4:	8b9d803a 	cmpltu	r14,r17,r14
    d2f8:	2389883a 	add	r4,r4,r14
    d2fc:	003e7c06 	br	ccf0 <__subdf3+0x34c>
    d300:	0005883a 	mov	r2,zero
    d304:	0201ffc4 	movi	r8,2047
    d308:	0009883a 	mov	r4,zero
    d30c:	003e0f06 	br	cb4c <__subdf3+0x1a8>

0000d310 <__unorddf2>:
    d310:	2806d53a 	srli	r3,r5,20
    d314:	3810d53a 	srli	r8,r7,20
    d318:	00800434 	movhi	r2,16
    d31c:	18c1ffcc 	andi	r3,r3,2047
    d320:	10bfffc4 	addi	r2,r2,-1
    d324:	18c1ffd8 	cmpnei	r3,r3,2047
    d328:	288a703a 	and	r5,r5,r2
    d32c:	388e703a 	and	r7,r7,r2
    d330:	4201ffcc 	andi	r8,r8,2047
    d334:	18000426 	beq	r3,zero,d348 <__unorddf2+0x38>
    d338:	4201ffd8 	cmpnei	r8,r8,2047
    d33c:	40000626 	beq	r8,zero,d358 <__unorddf2+0x48>
    d340:	0005883a 	mov	r2,zero
    d344:	f800283a 	ret
    d348:	214ab03a 	or	r5,r4,r5
    d34c:	283ffa26 	beq	r5,zero,d338 <__unorddf2+0x28>
    d350:	00800044 	movi	r2,1
    d354:	f800283a 	ret
    d358:	398eb03a 	or	r7,r7,r6
    d35c:	3804c03a 	cmpne	r2,r7,zero
    d360:	f800283a 	ret

0000d364 <__fixdfsi>:
    d364:	280cd53a 	srli	r6,r5,20
    d368:	00c00434 	movhi	r3,16
    d36c:	18ffffc4 	addi	r3,r3,-1
    d370:	3181ffcc 	andi	r6,r6,2047
    d374:	31c0ffd0 	cmplti	r7,r6,1023
    d378:	28c6703a 	and	r3,r5,r3
    d37c:	280ad7fa 	srli	r5,r5,31
    d380:	3800061e 	bne	r7,zero,d39c <__fixdfsi+0x38>
    d384:	30810790 	cmplti	r2,r6,1054
    d388:	1000061e 	bne	r2,zero,d3a4 <__fixdfsi+0x40>
    d38c:	00a00034 	movhi	r2,32768
    d390:	10bfffc4 	addi	r2,r2,-1
    d394:	2885883a 	add	r2,r5,r2
    d398:	f800283a 	ret
    d39c:	0005883a 	mov	r2,zero
    d3a0:	f800283a 	ret
    d3a4:	00810cc4 	movi	r2,1075
    d3a8:	118fc83a 	sub	r7,r2,r6
    d3ac:	38800808 	cmpgei	r2,r7,32
    d3b0:	18c00434 	orhi	r3,r3,16
    d3b4:	1000071e 	bne	r2,zero,d3d4 <__fixdfsi+0x70>
    d3b8:	30befb44 	addi	r2,r6,-1043
    d3bc:	1886983a 	sll	r3,r3,r2
    d3c0:	21c4d83a 	srl	r2,r4,r7
    d3c4:	1884b03a 	or	r2,r3,r2
    d3c8:	283ff526 	beq	r5,zero,d3a0 <__fixdfsi+0x3c>
    d3cc:	0085c83a 	sub	r2,zero,r2
    d3d0:	f800283a 	ret
    d3d4:	008104c4 	movi	r2,1043
    d3d8:	1185c83a 	sub	r2,r2,r6
    d3dc:	1884d83a 	srl	r2,r3,r2
    d3e0:	003ff906 	br	d3c8 <__fixdfsi+0x64>

0000d3e4 <__floatsidf>:
    d3e4:	defffd04 	addi	sp,sp,-12
    d3e8:	dfc00215 	stw	ra,8(sp)
    d3ec:	dc400115 	stw	r17,4(sp)
    d3f0:	dc000015 	stw	r16,0(sp)
    d3f4:	20001326 	beq	r4,zero,d444 <__floatsidf+0x60>
    d3f8:	2021883a 	mov	r16,r4
    d3fc:	2022d7fa 	srli	r17,r4,31
    d400:	20002116 	blt	r4,zero,d488 <__floatsidf+0xa4>
    d404:	8009883a 	mov	r4,r16
    d408:	000d5480 	call	d548 <__clzsi2>
    d40c:	01010784 	movi	r4,1054
    d410:	2089c83a 	sub	r4,r4,r2
    d414:	10c002c8 	cmpgei	r3,r2,11
    d418:	2101ffcc 	andi	r4,r4,2047
    d41c:	18001c1e 	bne	r3,zero,d490 <__floatsidf+0xac>
    d420:	018002c4 	movi	r6,11
    d424:	308dc83a 	sub	r6,r6,r2
    d428:	818ad83a 	srl	r5,r16,r6
    d42c:	00c00434 	movhi	r3,16
    d430:	10800544 	addi	r2,r2,21
    d434:	18ffffc4 	addi	r3,r3,-1
    d438:	8084983a 	sll	r2,r16,r2
    d43c:	28ca703a 	and	r5,r5,r3
    d440:	00000406 	br	d454 <__floatsidf+0x70>
    d444:	0023883a 	mov	r17,zero
    d448:	0009883a 	mov	r4,zero
    d44c:	000b883a 	mov	r5,zero
    d450:	0005883a 	mov	r2,zero
    d454:	2008953a 	slli	r4,r4,20
    d458:	8c403fcc 	andi	r17,r17,255
    d45c:	01800434 	movhi	r6,16
    d460:	31bfffc4 	addi	r6,r6,-1
    d464:	880697fa 	slli	r3,r17,31
    d468:	298a703a 	and	r5,r5,r6
    d46c:	290ab03a 	or	r5,r5,r4
    d470:	28c6b03a 	or	r3,r5,r3
    d474:	dfc00217 	ldw	ra,8(sp)
    d478:	dc400117 	ldw	r17,4(sp)
    d47c:	dc000017 	ldw	r16,0(sp)
    d480:	dec00304 	addi	sp,sp,12
    d484:	f800283a 	ret
    d488:	0121c83a 	sub	r16,zero,r4
    d48c:	003fdd06 	br	d404 <__floatsidf+0x20>
    d490:	10bffd44 	addi	r2,r2,-11
    d494:	808a983a 	sll	r5,r16,r2
    d498:	00800434 	movhi	r2,16
    d49c:	10bfffc4 	addi	r2,r2,-1
    d4a0:	288a703a 	and	r5,r5,r2
    d4a4:	0005883a 	mov	r2,zero
    d4a8:	003fea06 	br	d454 <__floatsidf+0x70>

0000d4ac <__floatunsidf>:
    d4ac:	defffe04 	addi	sp,sp,-8
    d4b0:	dc000015 	stw	r16,0(sp)
    d4b4:	dfc00115 	stw	ra,4(sp)
    d4b8:	2021883a 	mov	r16,r4
    d4bc:	20000f26 	beq	r4,zero,d4fc <__floatunsidf+0x50>
    d4c0:	000d5480 	call	d548 <__clzsi2>
    d4c4:	01010784 	movi	r4,1054
    d4c8:	2089c83a 	sub	r4,r4,r2
    d4cc:	10c002c8 	cmpgei	r3,r2,11
    d4d0:	2101ffcc 	andi	r4,r4,2047
    d4d4:	1800151e 	bne	r3,zero,d52c <__floatunsidf+0x80>
    d4d8:	00c002c4 	movi	r3,11
    d4dc:	1887c83a 	sub	r3,r3,r2
    d4e0:	80c6d83a 	srl	r3,r16,r3
    d4e4:	01400434 	movhi	r5,16
    d4e8:	10800544 	addi	r2,r2,21
    d4ec:	297fffc4 	addi	r5,r5,-1
    d4f0:	80a0983a 	sll	r16,r16,r2
    d4f4:	1944703a 	and	r2,r3,r5
    d4f8:	00000206 	br	d504 <__floatunsidf+0x58>
    d4fc:	0009883a 	mov	r4,zero
    d500:	0005883a 	mov	r2,zero
    d504:	2008953a 	slli	r4,r4,20
    d508:	00c00434 	movhi	r3,16
    d50c:	18ffffc4 	addi	r3,r3,-1
    d510:	10c6703a 	and	r3,r2,r3
    d514:	1906b03a 	or	r3,r3,r4
    d518:	8005883a 	mov	r2,r16
    d51c:	dfc00117 	ldw	ra,4(sp)
    d520:	dc000017 	ldw	r16,0(sp)
    d524:	dec00204 	addi	sp,sp,8
    d528:	f800283a 	ret
    d52c:	10bffd44 	addi	r2,r2,-11
    d530:	8084983a 	sll	r2,r16,r2
    d534:	00c00434 	movhi	r3,16
    d538:	18ffffc4 	addi	r3,r3,-1
    d53c:	10c4703a 	and	r2,r2,r3
    d540:	0021883a 	mov	r16,zero
    d544:	003fef06 	br	d504 <__floatunsidf+0x58>

0000d548 <__clzsi2>:
    d548:	00bfffd4 	movui	r2,65535
    d54c:	11000b36 	bltu	r2,r4,d57c <__clzsi2+0x34>
    d550:	20804030 	cmpltui	r2,r4,256
    d554:	1000071e 	bne	r2,zero,d574 <__clzsi2+0x2c>
    d558:	2008d23a 	srli	r4,r4,8
    d55c:	01400604 	movi	r5,24
    d560:	00c00074 	movhi	r3,1
    d564:	20c7883a 	add	r3,r4,r3
    d568:	18802103 	ldbu	r2,132(r3)
    d56c:	2885c83a 	sub	r2,r5,r2
    d570:	f800283a 	ret
    d574:	01400804 	movi	r5,32
    d578:	003ff906 	br	d560 <__clzsi2+0x18>
    d57c:	00804034 	movhi	r2,256
    d580:	20800336 	bltu	r4,r2,d590 <__clzsi2+0x48>
    d584:	2008d63a 	srli	r4,r4,24
    d588:	01400204 	movi	r5,8
    d58c:	003ff406 	br	d560 <__clzsi2+0x18>
    d590:	2008d43a 	srli	r4,r4,16
    d594:	01400404 	movi	r5,16
    d598:	003ff106 	br	d560 <__clzsi2+0x18>

0000d59c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d59c:	defffe04 	addi	sp,sp,-8
    d5a0:	dfc00115 	stw	ra,4(sp)
    d5a4:	df000015 	stw	fp,0(sp)
    d5a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d5ac:	d0a00e17 	ldw	r2,-32712(gp)
    d5b0:	10000326 	beq	r2,zero,d5c0 <alt_get_errno+0x24>
    d5b4:	d0a00e17 	ldw	r2,-32712(gp)
    d5b8:	103ee83a 	callr	r2
    d5bc:	00000106 	br	d5c4 <alt_get_errno+0x28>
    d5c0:	d0a73104 	addi	r2,gp,-25404
}
    d5c4:	e037883a 	mov	sp,fp
    d5c8:	dfc00117 	ldw	ra,4(sp)
    d5cc:	df000017 	ldw	fp,0(sp)
    d5d0:	dec00204 	addi	sp,sp,8
    d5d4:	f800283a 	ret

0000d5d8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d5d8:	defffb04 	addi	sp,sp,-20
    d5dc:	dfc00415 	stw	ra,16(sp)
    d5e0:	df000315 	stw	fp,12(sp)
    d5e4:	df000304 	addi	fp,sp,12
    d5e8:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d5ec:	e0bffd17 	ldw	r2,-12(fp)
    d5f0:	10000916 	blt	r2,zero,d618 <close+0x40>
    d5f4:	e0fffd17 	ldw	r3,-12(fp)
    d5f8:	1805883a 	mov	r2,r3
    d5fc:	1085883a 	add	r2,r2,r2
    d600:	10c5883a 	add	r2,r2,r3
    d604:	100490ba 	slli	r2,r2,2
    d608:	00c00074 	movhi	r3,1
    d60c:	18c2fe04 	addi	r3,r3,3064
    d610:	10c5883a 	add	r2,r2,r3
    d614:	00000106 	br	d61c <close+0x44>
    d618:	0005883a 	mov	r2,zero
    d61c:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
    d620:	e0bfff17 	ldw	r2,-4(fp)
    d624:	10001926 	beq	r2,zero,d68c <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d628:	e0bfff17 	ldw	r2,-4(fp)
    d62c:	10800017 	ldw	r2,0(r2)
    d630:	10800417 	ldw	r2,16(r2)
    d634:	10000626 	beq	r2,zero,d650 <close+0x78>
    d638:	e0bfff17 	ldw	r2,-4(fp)
    d63c:	10800017 	ldw	r2,0(r2)
    d640:	10800417 	ldw	r2,16(r2)
    d644:	e13fff17 	ldw	r4,-4(fp)
    d648:	103ee83a 	callr	r2
    d64c:	00000106 	br	d654 <close+0x7c>
    d650:	0005883a 	mov	r2,zero
    d654:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d658:	e13ffd17 	ldw	r4,-12(fp)
    d65c:	000dcd40 	call	dcd4 <alt_release_fd>
    if (rval < 0)
    d660:	e0bffe17 	ldw	r2,-8(fp)
    d664:	1000070e 	bge	r2,zero,d684 <close+0xac>
    {
      ALT_ERRNO = -rval;
    d668:	000d59c0 	call	d59c <alt_get_errno>
    d66c:	1007883a 	mov	r3,r2
    d670:	e0bffe17 	ldw	r2,-8(fp)
    d674:	0085c83a 	sub	r2,zero,r2
    d678:	18800015 	stw	r2,0(r3)
      return -1;
    d67c:	00bfffc4 	movi	r2,-1
    d680:	00000706 	br	d6a0 <close+0xc8>
    }
    return 0;
    d684:	0005883a 	mov	r2,zero
    d688:	00000506 	br	d6a0 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d68c:	000d59c0 	call	d59c <alt_get_errno>
    d690:	1007883a 	mov	r3,r2
    d694:	00801444 	movi	r2,81
    d698:	18800015 	stw	r2,0(r3)
    return -1;
    d69c:	00bfffc4 	movi	r2,-1
  }
}
    d6a0:	e037883a 	mov	sp,fp
    d6a4:	dfc00117 	ldw	ra,4(sp)
    d6a8:	df000017 	ldw	fp,0(sp)
    d6ac:	dec00204 	addi	sp,sp,8
    d6b0:	f800283a 	ret

0000d6b4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d6b4:	defffc04 	addi	sp,sp,-16
    d6b8:	df000315 	stw	fp,12(sp)
    d6bc:	df000304 	addi	fp,sp,12
    d6c0:	e13fff15 	stw	r4,-4(fp)
    d6c4:	e17ffe15 	stw	r5,-8(fp)
    d6c8:	e1bffd15 	stw	r6,-12(fp)
  return len;
    d6cc:	e0bffd17 	ldw	r2,-12(fp)
}
    d6d0:	e037883a 	mov	sp,fp
    d6d4:	df000017 	ldw	fp,0(sp)
    d6d8:	dec00104 	addi	sp,sp,4
    d6dc:	f800283a 	ret

0000d6e0 <alt_get_errno>:
{
    d6e0:	defffe04 	addi	sp,sp,-8
    d6e4:	dfc00115 	stw	ra,4(sp)
    d6e8:	df000015 	stw	fp,0(sp)
    d6ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d6f0:	d0a00e17 	ldw	r2,-32712(gp)
    d6f4:	10000326 	beq	r2,zero,d704 <alt_get_errno+0x24>
    d6f8:	d0a00e17 	ldw	r2,-32712(gp)
    d6fc:	103ee83a 	callr	r2
    d700:	00000106 	br	d708 <alt_get_errno+0x28>
    d704:	d0a73104 	addi	r2,gp,-25404
}
    d708:	e037883a 	mov	sp,fp
    d70c:	dfc00117 	ldw	ra,4(sp)
    d710:	df000017 	ldw	fp,0(sp)
    d714:	dec00204 	addi	sp,sp,8
    d718:	f800283a 	ret

0000d71c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d71c:	defffb04 	addi	sp,sp,-20
    d720:	dfc00415 	stw	ra,16(sp)
    d724:	df000315 	stw	fp,12(sp)
    d728:	df000304 	addi	fp,sp,12
    d72c:	e13ffe15 	stw	r4,-8(fp)
    d730:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d734:	e0bffe17 	ldw	r2,-8(fp)
    d738:	10000916 	blt	r2,zero,d760 <fstat+0x44>
    d73c:	e0fffe17 	ldw	r3,-8(fp)
    d740:	1805883a 	mov	r2,r3
    d744:	1085883a 	add	r2,r2,r2
    d748:	10c5883a 	add	r2,r2,r3
    d74c:	100490ba 	slli	r2,r2,2
    d750:	00c00074 	movhi	r3,1
    d754:	18c2fe04 	addi	r3,r3,3064
    d758:	10c5883a 	add	r2,r2,r3
    d75c:	00000106 	br	d764 <fstat+0x48>
    d760:	0005883a 	mov	r2,zero
    d764:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d768:	e0bfff17 	ldw	r2,-4(fp)
    d76c:	10001026 	beq	r2,zero,d7b0 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d770:	e0bfff17 	ldw	r2,-4(fp)
    d774:	10800017 	ldw	r2,0(r2)
    d778:	10800817 	ldw	r2,32(r2)
    d77c:	10000726 	beq	r2,zero,d79c <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
    d780:	e0bfff17 	ldw	r2,-4(fp)
    d784:	10800017 	ldw	r2,0(r2)
    d788:	10800817 	ldw	r2,32(r2)
    d78c:	e17ffd17 	ldw	r5,-12(fp)
    d790:	e13fff17 	ldw	r4,-4(fp)
    d794:	103ee83a 	callr	r2
    d798:	00000a06 	br	d7c4 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d79c:	e0bffd17 	ldw	r2,-12(fp)
    d7a0:	00c80004 	movi	r3,8192
    d7a4:	10c00115 	stw	r3,4(r2)
      return 0;
    d7a8:	0005883a 	mov	r2,zero
    d7ac:	00000506 	br	d7c4 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d7b0:	000d6e00 	call	d6e0 <alt_get_errno>
    d7b4:	1007883a 	mov	r3,r2
    d7b8:	00801444 	movi	r2,81
    d7bc:	18800015 	stw	r2,0(r3)
    return -1;
    d7c0:	00bfffc4 	movi	r2,-1
  }
}
    d7c4:	e037883a 	mov	sp,fp
    d7c8:	dfc00117 	ldw	ra,4(sp)
    d7cc:	df000017 	ldw	fp,0(sp)
    d7d0:	dec00204 	addi	sp,sp,8
    d7d4:	f800283a 	ret

0000d7d8 <alt_get_errno>:
{
    d7d8:	defffe04 	addi	sp,sp,-8
    d7dc:	dfc00115 	stw	ra,4(sp)
    d7e0:	df000015 	stw	fp,0(sp)
    d7e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d7e8:	d0a00e17 	ldw	r2,-32712(gp)
    d7ec:	10000326 	beq	r2,zero,d7fc <alt_get_errno+0x24>
    d7f0:	d0a00e17 	ldw	r2,-32712(gp)
    d7f4:	103ee83a 	callr	r2
    d7f8:	00000106 	br	d800 <alt_get_errno+0x28>
    d7fc:	d0a73104 	addi	r2,gp,-25404
}
    d800:	e037883a 	mov	sp,fp
    d804:	dfc00117 	ldw	ra,4(sp)
    d808:	df000017 	ldw	fp,0(sp)
    d80c:	dec00204 	addi	sp,sp,8
    d810:	f800283a 	ret

0000d814 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d814:	deffea04 	addi	sp,sp,-88
    d818:	dfc01515 	stw	ra,84(sp)
    d81c:	df001415 	stw	fp,80(sp)
    d820:	df001404 	addi	fp,sp,80
    d824:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d828:	e0bfec17 	ldw	r2,-80(fp)
    d82c:	10000916 	blt	r2,zero,d854 <isatty+0x40>
    d830:	e0ffec17 	ldw	r3,-80(fp)
    d834:	1805883a 	mov	r2,r3
    d838:	1085883a 	add	r2,r2,r2
    d83c:	10c5883a 	add	r2,r2,r3
    d840:	100490ba 	slli	r2,r2,2
    d844:	00c00074 	movhi	r3,1
    d848:	18c2fe04 	addi	r3,r3,3064
    d84c:	10c5883a 	add	r2,r2,r3
    d850:	00000106 	br	d858 <isatty+0x44>
    d854:	0005883a 	mov	r2,zero
    d858:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d85c:	e0bfff17 	ldw	r2,-4(fp)
    d860:	10000e26 	beq	r2,zero,d89c <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d864:	e0bfff17 	ldw	r2,-4(fp)
    d868:	10800017 	ldw	r2,0(r2)
    d86c:	10800817 	ldw	r2,32(r2)
    d870:	1000021e 	bne	r2,zero,d87c <isatty+0x68>
    {
      return 1;
    d874:	00800044 	movi	r2,1
    d878:	00000d06 	br	d8b0 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d87c:	e0bfed04 	addi	r2,fp,-76
    d880:	100b883a 	mov	r5,r2
    d884:	e13fec17 	ldw	r4,-80(fp)
    d888:	000d71c0 	call	d71c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d88c:	e0bfee17 	ldw	r2,-72(fp)
    d890:	10880020 	cmpeqi	r2,r2,8192
    d894:	10803fcc 	andi	r2,r2,255
    d898:	00000506 	br	d8b0 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d89c:	000d7d80 	call	d7d8 <alt_get_errno>
    d8a0:	1007883a 	mov	r3,r2
    d8a4:	00801444 	movi	r2,81
    d8a8:	18800015 	stw	r2,0(r3)
    return 0;
    d8ac:	0005883a 	mov	r2,zero
  }
}
    d8b0:	e037883a 	mov	sp,fp
    d8b4:	dfc00117 	ldw	ra,4(sp)
    d8b8:	df000017 	ldw	fp,0(sp)
    d8bc:	dec00204 	addi	sp,sp,8
    d8c0:	f800283a 	ret

0000d8c4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d8c4:	defffc04 	addi	sp,sp,-16
    d8c8:	df000315 	stw	fp,12(sp)
    d8cc:	df000304 	addi	fp,sp,12
    d8d0:	e13fff15 	stw	r4,-4(fp)
    d8d4:	e17ffe15 	stw	r5,-8(fp)
    d8d8:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
    d8dc:	e0fffe17 	ldw	r3,-8(fp)
    d8e0:	e0bfff17 	ldw	r2,-4(fp)
    d8e4:	18800c26 	beq	r3,r2,d918 <alt_load_section+0x54>
  {
    while( to != end )
    d8e8:	00000806 	br	d90c <alt_load_section+0x48>
    {
      *to++ = *from++;
    d8ec:	e0ffff17 	ldw	r3,-4(fp)
    d8f0:	18800104 	addi	r2,r3,4
    d8f4:	e0bfff15 	stw	r2,-4(fp)
    d8f8:	e0bffe17 	ldw	r2,-8(fp)
    d8fc:	11000104 	addi	r4,r2,4
    d900:	e13ffe15 	stw	r4,-8(fp)
    d904:	18c00017 	ldw	r3,0(r3)
    d908:	10c00015 	stw	r3,0(r2)
    while( to != end )
    d90c:	e0fffe17 	ldw	r3,-8(fp)
    d910:	e0bffd17 	ldw	r2,-12(fp)
    d914:	18bff51e 	bne	r3,r2,d8ec <alt_load_section+0x28>
    }
  }
}
    d918:	0001883a 	nop
    d91c:	e037883a 	mov	sp,fp
    d920:	df000017 	ldw	fp,0(sp)
    d924:	dec00104 	addi	sp,sp,4
    d928:	f800283a 	ret

0000d92c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d92c:	defffe04 	addi	sp,sp,-8
    d930:	dfc00115 	stw	ra,4(sp)
    d934:	df000015 	stw	fp,0(sp)
    d938:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d93c:	01800074 	movhi	r6,1
    d940:	31878904 	addi	r6,r6,7716
    d944:	01400074 	movhi	r5,1
    d948:	29406e04 	addi	r5,r5,440
    d94c:	01000074 	movhi	r4,1
    d950:	21078904 	addi	r4,r4,7716
    d954:	000d8c40 	call	d8c4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d958:	01800034 	movhi	r6,0
    d95c:	31808904 	addi	r6,r6,548
    d960:	01400034 	movhi	r5,0
    d964:	29400804 	addi	r5,r5,32
    d968:	01000034 	movhi	r4,0
    d96c:	21000804 	addi	r4,r4,32
    d970:	000d8c40 	call	d8c4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d974:	01800074 	movhi	r6,1
    d978:	31806e04 	addi	r6,r6,440
    d97c:	01400074 	movhi	r5,1
    d980:	297ec504 	addi	r5,r5,-1260
    d984:	01000074 	movhi	r4,1
    d988:	213ec504 	addi	r4,r4,-1260
    d98c:	000d8c40 	call	d8c4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d990:	000eb780 	call	eb78 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d994:	000ed380 	call	ed38 <alt_icache_flush_all>
}
    d998:	0001883a 	nop
    d99c:	e037883a 	mov	sp,fp
    d9a0:	dfc00117 	ldw	ra,4(sp)
    d9a4:	df000017 	ldw	fp,0(sp)
    d9a8:	dec00204 	addi	sp,sp,8
    d9ac:	f800283a 	ret

0000d9b0 <alt_get_errno>:
{
    d9b0:	defffe04 	addi	sp,sp,-8
    d9b4:	dfc00115 	stw	ra,4(sp)
    d9b8:	df000015 	stw	fp,0(sp)
    d9bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d9c0:	d0a00e17 	ldw	r2,-32712(gp)
    d9c4:	10000326 	beq	r2,zero,d9d4 <alt_get_errno+0x24>
    d9c8:	d0a00e17 	ldw	r2,-32712(gp)
    d9cc:	103ee83a 	callr	r2
    d9d0:	00000106 	br	d9d8 <alt_get_errno+0x28>
    d9d4:	d0a73104 	addi	r2,gp,-25404
}
    d9d8:	e037883a 	mov	sp,fp
    d9dc:	dfc00117 	ldw	ra,4(sp)
    d9e0:	df000017 	ldw	fp,0(sp)
    d9e4:	dec00204 	addi	sp,sp,8
    d9e8:	f800283a 	ret

0000d9ec <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d9ec:	defff904 	addi	sp,sp,-28
    d9f0:	dfc00615 	stw	ra,24(sp)
    d9f4:	df000515 	stw	fp,20(sp)
    d9f8:	df000504 	addi	fp,sp,20
    d9fc:	e13ffd15 	stw	r4,-12(fp)
    da00:	e17ffc15 	stw	r5,-16(fp)
    da04:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    da08:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    da0c:	e0bffd17 	ldw	r2,-12(fp)
    da10:	10000916 	blt	r2,zero,da38 <lseek+0x4c>
    da14:	e0fffd17 	ldw	r3,-12(fp)
    da18:	1805883a 	mov	r2,r3
    da1c:	1085883a 	add	r2,r2,r2
    da20:	10c5883a 	add	r2,r2,r3
    da24:	100490ba 	slli	r2,r2,2
    da28:	00c00074 	movhi	r3,1
    da2c:	18c2fe04 	addi	r3,r3,3064
    da30:	10c5883a 	add	r2,r2,r3
    da34:	00000106 	br	da3c <lseek+0x50>
    da38:	0005883a 	mov	r2,zero
    da3c:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
    da40:	e0bffe17 	ldw	r2,-8(fp)
    da44:	10001026 	beq	r2,zero,da88 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    da48:	e0bffe17 	ldw	r2,-8(fp)
    da4c:	10800017 	ldw	r2,0(r2)
    da50:	10800717 	ldw	r2,28(r2)
    da54:	10000926 	beq	r2,zero,da7c <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    da58:	e0bffe17 	ldw	r2,-8(fp)
    da5c:	10800017 	ldw	r2,0(r2)
    da60:	10800717 	ldw	r2,28(r2)
    da64:	e1bffb17 	ldw	r6,-20(fp)
    da68:	e17ffc17 	ldw	r5,-16(fp)
    da6c:	e13ffe17 	ldw	r4,-8(fp)
    da70:	103ee83a 	callr	r2
    da74:	e0bfff15 	stw	r2,-4(fp)
    da78:	00000506 	br	da90 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    da7c:	00bfde84 	movi	r2,-134
    da80:	e0bfff15 	stw	r2,-4(fp)
    da84:	00000206 	br	da90 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
    da88:	00bfebc4 	movi	r2,-81
    da8c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
    da90:	e0bfff17 	ldw	r2,-4(fp)
    da94:	1000070e 	bge	r2,zero,dab4 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
    da98:	000d9b00 	call	d9b0 <alt_get_errno>
    da9c:	1007883a 	mov	r3,r2
    daa0:	e0bfff17 	ldw	r2,-4(fp)
    daa4:	0085c83a 	sub	r2,zero,r2
    daa8:	18800015 	stw	r2,0(r3)
    rc = -1;
    daac:	00bfffc4 	movi	r2,-1
    dab0:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
    dab4:	e0bfff17 	ldw	r2,-4(fp)
}
    dab8:	e037883a 	mov	sp,fp
    dabc:	dfc00117 	ldw	ra,4(sp)
    dac0:	df000017 	ldw	fp,0(sp)
    dac4:	dec00204 	addi	sp,sp,8
    dac8:	f800283a 	ret

0000dacc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    dacc:	defffd04 	addi	sp,sp,-12
    dad0:	dfc00215 	stw	ra,8(sp)
    dad4:	df000115 	stw	fp,4(sp)
    dad8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    dadc:	0009883a 	mov	r4,zero
    dae0:	000df680 	call	df68 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    dae4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    dae8:	000dfa00 	call	dfa0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    daec:	01800074 	movhi	r6,1
    daf0:	31806404 	addi	r6,r6,400
    daf4:	01400074 	movhi	r5,1
    daf8:	29406404 	addi	r5,r5,400
    dafc:	01000074 	movhi	r4,1
    db00:	21006404 	addi	r4,r4,400
    db04:	000f0c00 	call	f0c0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    db08:	000ec780 	call	ec78 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    db0c:	01000074 	movhi	r4,1
    db10:	213b3604 	addi	r4,r4,-4904
    db14:	000f8640 	call	f864 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    db18:	d0a73317 	ldw	r2,-25396(gp)
    db1c:	d0e73417 	ldw	r3,-25392(gp)
    db20:	d1273517 	ldw	r4,-25388(gp)
    db24:	200d883a 	mov	r6,r4
    db28:	180b883a 	mov	r5,r3
    db2c:	1009883a 	mov	r4,r2
    db30:	00004200 	call	420 <main>
    db34:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    db38:	01000044 	movi	r4,1
    db3c:	000d5d80 	call	d5d8 <close>
  exit (result);
    db40:	e13fff17 	ldw	r4,-4(fp)
    db44:	000f8780 	call	f878 <exit>

0000db48 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    db48:	defffe04 	addi	sp,sp,-8
    db4c:	df000115 	stw	fp,4(sp)
    db50:	df000104 	addi	fp,sp,4
    db54:	e13fff15 	stw	r4,-4(fp)
}
    db58:	0001883a 	nop
    db5c:	e037883a 	mov	sp,fp
    db60:	df000017 	ldw	fp,0(sp)
    db64:	dec00104 	addi	sp,sp,4
    db68:	f800283a 	ret

0000db6c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    db6c:	defffe04 	addi	sp,sp,-8
    db70:	df000115 	stw	fp,4(sp)
    db74:	df000104 	addi	fp,sp,4
    db78:	e13fff15 	stw	r4,-4(fp)
}
    db7c:	0001883a 	nop
    db80:	e037883a 	mov	sp,fp
    db84:	df000017 	ldw	fp,0(sp)
    db88:	dec00104 	addi	sp,sp,4
    db8c:	f800283a 	ret

0000db90 <alt_get_errno>:
{
    db90:	defffe04 	addi	sp,sp,-8
    db94:	dfc00115 	stw	ra,4(sp)
    db98:	df000015 	stw	fp,0(sp)
    db9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dba0:	d0a00e17 	ldw	r2,-32712(gp)
    dba4:	10000326 	beq	r2,zero,dbb4 <alt_get_errno+0x24>
    dba8:	d0a00e17 	ldw	r2,-32712(gp)
    dbac:	103ee83a 	callr	r2
    dbb0:	00000106 	br	dbb8 <alt_get_errno+0x28>
    dbb4:	d0a73104 	addi	r2,gp,-25404
}
    dbb8:	e037883a 	mov	sp,fp
    dbbc:	dfc00117 	ldw	ra,4(sp)
    dbc0:	df000017 	ldw	fp,0(sp)
    dbc4:	dec00204 	addi	sp,sp,8
    dbc8:	f800283a 	ret

0000dbcc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    dbcc:	defff904 	addi	sp,sp,-28
    dbd0:	dfc00615 	stw	ra,24(sp)
    dbd4:	df000515 	stw	fp,20(sp)
    dbd8:	df000504 	addi	fp,sp,20
    dbdc:	e13ffd15 	stw	r4,-12(fp)
    dbe0:	e17ffc15 	stw	r5,-16(fp)
    dbe4:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dbe8:	e0bffd17 	ldw	r2,-12(fp)
    dbec:	10000916 	blt	r2,zero,dc14 <read+0x48>
    dbf0:	e0fffd17 	ldw	r3,-12(fp)
    dbf4:	1805883a 	mov	r2,r3
    dbf8:	1085883a 	add	r2,r2,r2
    dbfc:	10c5883a 	add	r2,r2,r3
    dc00:	100490ba 	slli	r2,r2,2
    dc04:	00c00074 	movhi	r3,1
    dc08:	18c2fe04 	addi	r3,r3,3064
    dc0c:	10c5883a 	add	r2,r2,r3
    dc10:	00000106 	br	dc18 <read+0x4c>
    dc14:	0005883a 	mov	r2,zero
    dc18:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    dc1c:	e0bfff17 	ldw	r2,-4(fp)
    dc20:	10002226 	beq	r2,zero,dcac <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    dc24:	e0bfff17 	ldw	r2,-4(fp)
    dc28:	10800217 	ldw	r2,8(r2)
    dc2c:	108000cc 	andi	r2,r2,3
    dc30:	10800060 	cmpeqi	r2,r2,1
    dc34:	1000181e 	bne	r2,zero,dc98 <read+0xcc>
        (fd->dev->read))
    dc38:	e0bfff17 	ldw	r2,-4(fp)
    dc3c:	10800017 	ldw	r2,0(r2)
    dc40:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    dc44:	10001426 	beq	r2,zero,dc98 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    dc48:	e0bfff17 	ldw	r2,-4(fp)
    dc4c:	10800017 	ldw	r2,0(r2)
    dc50:	10800517 	ldw	r2,20(r2)
    dc54:	e0fffb17 	ldw	r3,-20(fp)
    dc58:	180d883a 	mov	r6,r3
    dc5c:	e17ffc17 	ldw	r5,-16(fp)
    dc60:	e13fff17 	ldw	r4,-4(fp)
    dc64:	103ee83a 	callr	r2
    dc68:	e0bffe15 	stw	r2,-8(fp)
    dc6c:	e0bffe17 	ldw	r2,-8(fp)
    dc70:	1000070e 	bge	r2,zero,dc90 <read+0xc4>
        {
          ALT_ERRNO = -rval;
    dc74:	000db900 	call	db90 <alt_get_errno>
    dc78:	1007883a 	mov	r3,r2
    dc7c:	e0bffe17 	ldw	r2,-8(fp)
    dc80:	0085c83a 	sub	r2,zero,r2
    dc84:	18800015 	stw	r2,0(r3)
          return -1;
    dc88:	00bfffc4 	movi	r2,-1
    dc8c:	00000c06 	br	dcc0 <read+0xf4>
        }
        return rval;
    dc90:	e0bffe17 	ldw	r2,-8(fp)
    dc94:	00000a06 	br	dcc0 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
    dc98:	000db900 	call	db90 <alt_get_errno>
    dc9c:	1007883a 	mov	r3,r2
    dca0:	00800344 	movi	r2,13
    dca4:	18800015 	stw	r2,0(r3)
    dca8:	00000406 	br	dcbc <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    dcac:	000db900 	call	db90 <alt_get_errno>
    dcb0:	1007883a 	mov	r3,r2
    dcb4:	00801444 	movi	r2,81
    dcb8:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dcbc:	00bfffc4 	movi	r2,-1
}
    dcc0:	e037883a 	mov	sp,fp
    dcc4:	dfc00117 	ldw	ra,4(sp)
    dcc8:	df000017 	ldw	fp,0(sp)
    dccc:	dec00204 	addi	sp,sp,8
    dcd0:	f800283a 	ret

0000dcd4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    dcd4:	defffe04 	addi	sp,sp,-8
    dcd8:	df000115 	stw	fp,4(sp)
    dcdc:	df000104 	addi	fp,sp,4
    dce0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    dce4:	e0bfff17 	ldw	r2,-4(fp)
    dce8:	108000d0 	cmplti	r2,r2,3
    dcec:	1000101e 	bne	r2,zero,dd30 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
    dcf0:	e0ffff17 	ldw	r3,-4(fp)
    dcf4:	1805883a 	mov	r2,r3
    dcf8:	1085883a 	add	r2,r2,r2
    dcfc:	10c5883a 	add	r2,r2,r3
    dd00:	100490ba 	slli	r2,r2,2
    dd04:	00c00074 	movhi	r3,1
    dd08:	10c7883a 	add	r3,r2,r3
    dd0c:	18030015 	stw	zero,3072(r3)
    alt_fd_list[fd].dev      = 0;
    dd10:	e0ffff17 	ldw	r3,-4(fp)
    dd14:	1805883a 	mov	r2,r3
    dd18:	1085883a 	add	r2,r2,r2
    dd1c:	10c5883a 	add	r2,r2,r3
    dd20:	100490ba 	slli	r2,r2,2
    dd24:	00c00074 	movhi	r3,1
    dd28:	10c7883a 	add	r3,r2,r3
    dd2c:	1802fe15 	stw	zero,3064(r3)
  }
}
    dd30:	0001883a 	nop
    dd34:	e037883a 	mov	sp,fp
    dd38:	df000017 	ldw	fp,0(sp)
    dd3c:	dec00104 	addi	sp,sp,4
    dd40:	f800283a 	ret

0000dd44 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    dd44:	defff904 	addi	sp,sp,-28
    dd48:	df000615 	stw	fp,24(sp)
    dd4c:	df000604 	addi	fp,sp,24
    dd50:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
    dd54:	0005303a 	rdctl	r2,status
    dd58:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dd5c:	e0fffd17 	ldw	r3,-12(fp)
    dd60:	00bfff84 	movi	r2,-2
    dd64:	1884703a 	and	r2,r3,r2
    dd68:	1001703a 	wrctl	status,r2
  return context;
    dd6c:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    dd70:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    dd74:	d0a00f17 	ldw	r2,-32708(gp)
    dd78:	10c000c4 	addi	r3,r2,3
    dd7c:	00bfff04 	movi	r2,-4
    dd80:	1884703a 	and	r2,r3,r2
    dd84:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    dd88:	d0e00f17 	ldw	r3,-32708(gp)
    dd8c:	e0bffa17 	ldw	r2,-24(fp)
    dd90:	1887883a 	add	r3,r3,r2
    dd94:	008000b4 	movhi	r2,2
    dd98:	10bd0004 	addi	r2,r2,-3072
    dd9c:	10c0062e 	bgeu	r2,r3,ddb8 <sbrk+0x74>
    dda0:	e0bfff17 	ldw	r2,-4(fp)
    dda4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    dda8:	e0bffc17 	ldw	r2,-16(fp)
    ddac:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    ddb0:	00bfffc4 	movi	r2,-1
    ddb4:	00000b06 	br	dde4 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    ddb8:	d0a00f17 	ldw	r2,-32708(gp)
    ddbc:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
    ddc0:	d0e00f17 	ldw	r3,-32708(gp)
    ddc4:	e0bffa17 	ldw	r2,-24(fp)
    ddc8:	1885883a 	add	r2,r3,r2
    ddcc:	d0a00f15 	stw	r2,-32708(gp)
    ddd0:	e0bfff17 	ldw	r2,-4(fp)
    ddd4:	e0bffb15 	stw	r2,-20(fp)
    ddd8:	e0bffb17 	ldw	r2,-20(fp)
    dddc:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    dde0:	e0bffe17 	ldw	r2,-8(fp)
} 
    dde4:	e037883a 	mov	sp,fp
    dde8:	df000017 	ldw	fp,0(sp)
    ddec:	dec00104 	addi	sp,sp,4
    ddf0:	f800283a 	ret

0000ddf4 <alt_get_errno>:
{
    ddf4:	defffe04 	addi	sp,sp,-8
    ddf8:	dfc00115 	stw	ra,4(sp)
    ddfc:	df000015 	stw	fp,0(sp)
    de00:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    de04:	d0a00e17 	ldw	r2,-32712(gp)
    de08:	10000326 	beq	r2,zero,de18 <alt_get_errno+0x24>
    de0c:	d0a00e17 	ldw	r2,-32712(gp)
    de10:	103ee83a 	callr	r2
    de14:	00000106 	br	de1c <alt_get_errno+0x28>
    de18:	d0a73104 	addi	r2,gp,-25404
}
    de1c:	e037883a 	mov	sp,fp
    de20:	dfc00117 	ldw	ra,4(sp)
    de24:	df000017 	ldw	fp,0(sp)
    de28:	dec00204 	addi	sp,sp,8
    de2c:	f800283a 	ret

0000de30 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    de30:	defff904 	addi	sp,sp,-28
    de34:	dfc00615 	stw	ra,24(sp)
    de38:	df000515 	stw	fp,20(sp)
    de3c:	df000504 	addi	fp,sp,20
    de40:	e13ffd15 	stw	r4,-12(fp)
    de44:	e17ffc15 	stw	r5,-16(fp)
    de48:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    de4c:	e0bffd17 	ldw	r2,-12(fp)
    de50:	10000916 	blt	r2,zero,de78 <write+0x48>
    de54:	e0fffd17 	ldw	r3,-12(fp)
    de58:	1805883a 	mov	r2,r3
    de5c:	1085883a 	add	r2,r2,r2
    de60:	10c5883a 	add	r2,r2,r3
    de64:	100490ba 	slli	r2,r2,2
    de68:	00c00074 	movhi	r3,1
    de6c:	18c2fe04 	addi	r3,r3,3064
    de70:	10c5883a 	add	r2,r2,r3
    de74:	00000106 	br	de7c <write+0x4c>
    de78:	0005883a 	mov	r2,zero
    de7c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    de80:	e0bfff17 	ldw	r2,-4(fp)
    de84:	10002126 	beq	r2,zero,df0c <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    de88:	e0bfff17 	ldw	r2,-4(fp)
    de8c:	10800217 	ldw	r2,8(r2)
    de90:	108000cc 	andi	r2,r2,3
    de94:	10001826 	beq	r2,zero,def8 <write+0xc8>
    de98:	e0bfff17 	ldw	r2,-4(fp)
    de9c:	10800017 	ldw	r2,0(r2)
    dea0:	10800617 	ldw	r2,24(r2)
    dea4:	10001426 	beq	r2,zero,def8 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dea8:	e0bfff17 	ldw	r2,-4(fp)
    deac:	10800017 	ldw	r2,0(r2)
    deb0:	10800617 	ldw	r2,24(r2)
    deb4:	e0fffb17 	ldw	r3,-20(fp)
    deb8:	180d883a 	mov	r6,r3
    debc:	e17ffc17 	ldw	r5,-16(fp)
    dec0:	e13fff17 	ldw	r4,-4(fp)
    dec4:	103ee83a 	callr	r2
    dec8:	e0bffe15 	stw	r2,-8(fp)
    decc:	e0bffe17 	ldw	r2,-8(fp)
    ded0:	1000070e 	bge	r2,zero,def0 <write+0xc0>
      {
        ALT_ERRNO = -rval;
    ded4:	000ddf40 	call	ddf4 <alt_get_errno>
    ded8:	1007883a 	mov	r3,r2
    dedc:	e0bffe17 	ldw	r2,-8(fp)
    dee0:	0085c83a 	sub	r2,zero,r2
    dee4:	18800015 	stw	r2,0(r3)
        return -1;
    dee8:	00bfffc4 	movi	r2,-1
    deec:	00000c06 	br	df20 <write+0xf0>
      }
      return rval;
    def0:	e0bffe17 	ldw	r2,-8(fp)
    def4:	00000a06 	br	df20 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
    def8:	000ddf40 	call	ddf4 <alt_get_errno>
    defc:	1007883a 	mov	r3,r2
    df00:	00800344 	movi	r2,13
    df04:	18800015 	stw	r2,0(r3)
    df08:	00000406 	br	df1c <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    df0c:	000ddf40 	call	ddf4 <alt_get_errno>
    df10:	1007883a 	mov	r3,r2
    df14:	00801444 	movi	r2,81
    df18:	18800015 	stw	r2,0(r3)
  }
  return -1;
    df1c:	00bfffc4 	movi	r2,-1
}
    df20:	e037883a 	mov	sp,fp
    df24:	dfc00117 	ldw	ra,4(sp)
    df28:	df000017 	ldw	fp,0(sp)
    df2c:	dec00204 	addi	sp,sp,8
    df30:	f800283a 	ret

0000df34 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    df34:	defffd04 	addi	sp,sp,-12
    df38:	dfc00215 	stw	ra,8(sp)
    df3c:	df000115 	stw	fp,4(sp)
    df40:	df000104 	addi	fp,sp,4
    df44:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    df48:	d1600b04 	addi	r5,gp,-32724
    df4c:	e13fff17 	ldw	r4,-4(fp)
    df50:	000ebd40 	call	ebd4 <alt_dev_llist_insert>
}
    df54:	e037883a 	mov	sp,fp
    df58:	dfc00117 	ldw	ra,4(sp)
    df5c:	df000017 	ldw	fp,0(sp)
    df60:	dec00204 	addi	sp,sp,8
    df64:	f800283a 	ret

0000df68 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    df68:	defffd04 	addi	sp,sp,-12
    df6c:	dfc00215 	stw	ra,8(sp)
    df70:	df000115 	stw	fp,4(sp)
    df74:	df000104 	addi	fp,sp,4
    df78:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    df7c:	000f5580 	call	f558 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    df80:	00800044 	movi	r2,1
    df84:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    df88:	0001883a 	nop
    df8c:	e037883a 	mov	sp,fp
    df90:	dfc00117 	ldw	ra,4(sp)
    df94:	df000017 	ldw	fp,0(sp)
    df98:	dec00204 	addi	sp,sp,8
    df9c:	f800283a 	ret

0000dfa0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    dfa0:	defffe04 	addi	sp,sp,-8
    dfa4:	dfc00115 	stw	ra,4(sp)
    dfa8:	df000015 	stw	fp,0(sp)
    dfac:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    dfb0:	000d883a 	mov	r6,zero
    dfb4:	000b883a 	mov	r5,zero
    dfb8:	01000074 	movhi	r4,1
    dfbc:	21036804 	addi	r4,r4,3488
    dfc0:	000e14c0 	call	e14c <altera_avalon_jtag_uart_init>
    dfc4:	01000074 	movhi	r4,1
    dfc8:	21035e04 	addi	r4,r4,3448
    dfcc:	000df340 	call	df34 <alt_dev_reg>
}
    dfd0:	0001883a 	nop
    dfd4:	e037883a 	mov	sp,fp
    dfd8:	dfc00117 	ldw	ra,4(sp)
    dfdc:	df000017 	ldw	fp,0(sp)
    dfe0:	dec00204 	addi	sp,sp,8
    dfe4:	f800283a 	ret

0000dfe8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    dfe8:	defffa04 	addi	sp,sp,-24
    dfec:	dfc00515 	stw	ra,20(sp)
    dff0:	df000415 	stw	fp,16(sp)
    dff4:	df000404 	addi	fp,sp,16
    dff8:	e13ffe15 	stw	r4,-8(fp)
    dffc:	e17ffd15 	stw	r5,-12(fp)
    e000:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e004:	e0bffe17 	ldw	r2,-8(fp)
    e008:	10800017 	ldw	r2,0(r2)
    e00c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e010:	e0bfff17 	ldw	r2,-4(fp)
    e014:	10c00a04 	addi	r3,r2,40
    e018:	e0bffe17 	ldw	r2,-8(fp)
    e01c:	10800217 	ldw	r2,8(r2)
    e020:	100f883a 	mov	r7,r2
    e024:	e1bffc17 	ldw	r6,-16(fp)
    e028:	e17ffd17 	ldw	r5,-12(fp)
    e02c:	1809883a 	mov	r4,r3
    e030:	000e60c0 	call	e60c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    e034:	e037883a 	mov	sp,fp
    e038:	dfc00117 	ldw	ra,4(sp)
    e03c:	df000017 	ldw	fp,0(sp)
    e040:	dec00204 	addi	sp,sp,8
    e044:	f800283a 	ret

0000e048 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e048:	defffa04 	addi	sp,sp,-24
    e04c:	dfc00515 	stw	ra,20(sp)
    e050:	df000415 	stw	fp,16(sp)
    e054:	df000404 	addi	fp,sp,16
    e058:	e13ffe15 	stw	r4,-8(fp)
    e05c:	e17ffd15 	stw	r5,-12(fp)
    e060:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e064:	e0bffe17 	ldw	r2,-8(fp)
    e068:	10800017 	ldw	r2,0(r2)
    e06c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e070:	e0bfff17 	ldw	r2,-4(fp)
    e074:	10c00a04 	addi	r3,r2,40
    e078:	e0bffe17 	ldw	r2,-8(fp)
    e07c:	10800217 	ldw	r2,8(r2)
    e080:	100f883a 	mov	r7,r2
    e084:	e1bffc17 	ldw	r6,-16(fp)
    e088:	e17ffd17 	ldw	r5,-12(fp)
    e08c:	1809883a 	mov	r4,r3
    e090:	000e8280 	call	e828 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e094:	e037883a 	mov	sp,fp
    e098:	dfc00117 	ldw	ra,4(sp)
    e09c:	df000017 	ldw	fp,0(sp)
    e0a0:	dec00204 	addi	sp,sp,8
    e0a4:	f800283a 	ret

0000e0a8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e0a8:	defffc04 	addi	sp,sp,-16
    e0ac:	dfc00315 	stw	ra,12(sp)
    e0b0:	df000215 	stw	fp,8(sp)
    e0b4:	df000204 	addi	fp,sp,8
    e0b8:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e0bc:	e0bffe17 	ldw	r2,-8(fp)
    e0c0:	10800017 	ldw	r2,0(r2)
    e0c4:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e0c8:	e0bfff17 	ldw	r2,-4(fp)
    e0cc:	10c00a04 	addi	r3,r2,40
    e0d0:	e0bffe17 	ldw	r2,-8(fp)
    e0d4:	10800217 	ldw	r2,8(r2)
    e0d8:	100b883a 	mov	r5,r2
    e0dc:	1809883a 	mov	r4,r3
    e0e0:	000e4b00 	call	e4b0 <altera_avalon_jtag_uart_close>
}
    e0e4:	e037883a 	mov	sp,fp
    e0e8:	dfc00117 	ldw	ra,4(sp)
    e0ec:	df000017 	ldw	fp,0(sp)
    e0f0:	dec00204 	addi	sp,sp,8
    e0f4:	f800283a 	ret

0000e0f8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e0f8:	defffa04 	addi	sp,sp,-24
    e0fc:	dfc00515 	stw	ra,20(sp)
    e100:	df000415 	stw	fp,16(sp)
    e104:	df000404 	addi	fp,sp,16
    e108:	e13ffe15 	stw	r4,-8(fp)
    e10c:	e17ffd15 	stw	r5,-12(fp)
    e110:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e114:	e0bffe17 	ldw	r2,-8(fp)
    e118:	10800017 	ldw	r2,0(r2)
    e11c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e120:	e0bfff17 	ldw	r2,-4(fp)
    e124:	10800a04 	addi	r2,r2,40
    e128:	e1bffc17 	ldw	r6,-16(fp)
    e12c:	e17ffd17 	ldw	r5,-12(fp)
    e130:	1009883a 	mov	r4,r2
    e134:	000e5180 	call	e518 <altera_avalon_jtag_uart_ioctl>
}
    e138:	e037883a 	mov	sp,fp
    e13c:	dfc00117 	ldw	ra,4(sp)
    e140:	df000017 	ldw	fp,0(sp)
    e144:	dec00204 	addi	sp,sp,8
    e148:	f800283a 	ret

0000e14c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e14c:	defffa04 	addi	sp,sp,-24
    e150:	dfc00515 	stw	ra,20(sp)
    e154:	df000415 	stw	fp,16(sp)
    e158:	df000404 	addi	fp,sp,16
    e15c:	e13fff15 	stw	r4,-4(fp)
    e160:	e17ffe15 	stw	r5,-8(fp)
    e164:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e168:	e0bfff17 	ldw	r2,-4(fp)
    e16c:	00c00044 	movi	r3,1
    e170:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e174:	e0bfff17 	ldw	r2,-4(fp)
    e178:	10800017 	ldw	r2,0(r2)
    e17c:	10800104 	addi	r2,r2,4
    e180:	1007883a 	mov	r3,r2
    e184:	e0bfff17 	ldw	r2,-4(fp)
    e188:	10800817 	ldw	r2,32(r2)
    e18c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    e190:	e0bffe17 	ldw	r2,-8(fp)
    e194:	e0fffd17 	ldw	r3,-12(fp)
    e198:	d8000015 	stw	zero,0(sp)
    e19c:	e1ffff17 	ldw	r7,-4(fp)
    e1a0:	01800074 	movhi	r6,1
    e1a4:	31b88304 	addi	r6,r6,-7668
    e1a8:	180b883a 	mov	r5,r3
    e1ac:	1009883a 	mov	r4,r2
    e1b0:	000ed580 	call	ed58 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e1b4:	e0bfff17 	ldw	r2,-4(fp)
    e1b8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e1bc:	e0bfff17 	ldw	r2,-4(fp)
    e1c0:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    e1c4:	d0e73717 	ldw	r3,-25380(gp)
    e1c8:	e1ffff17 	ldw	r7,-4(fp)
    e1cc:	01800074 	movhi	r6,1
    e1d0:	31b90404 	addi	r6,r6,-7152
    e1d4:	180b883a 	mov	r5,r3
    e1d8:	1009883a 	mov	r4,r2
    e1dc:	000ea4c0 	call	ea4c <alt_alarm_start>
    e1e0:	1000040e 	bge	r2,zero,e1f4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e1e4:	e0ffff17 	ldw	r3,-4(fp)
    e1e8:	00a00034 	movhi	r2,32768
    e1ec:	10bfffc4 	addi	r2,r2,-1
    e1f0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e1f4:	0001883a 	nop
    e1f8:	e037883a 	mov	sp,fp
    e1fc:	dfc00117 	ldw	ra,4(sp)
    e200:	df000017 	ldw	fp,0(sp)
    e204:	dec00204 	addi	sp,sp,8
    e208:	f800283a 	ret

0000e20c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e20c:	defff804 	addi	sp,sp,-32
    e210:	df000715 	stw	fp,28(sp)
    e214:	df000704 	addi	fp,sp,28
    e218:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e21c:	e0bff917 	ldw	r2,-28(fp)
    e220:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
    e224:	e0bffd17 	ldw	r2,-12(fp)
    e228:	10800017 	ldw	r2,0(r2)
    e22c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e230:	e0bffc17 	ldw	r2,-16(fp)
    e234:	10800104 	addi	r2,r2,4
    e238:	10800037 	ldwio	r2,0(r2)
    e23c:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e240:	e0bffb17 	ldw	r2,-20(fp)
    e244:	1080c00c 	andi	r2,r2,768
    e248:	10006b26 	beq	r2,zero,e3f8 <altera_avalon_jtag_uart_irq+0x1ec>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e24c:	e0bffb17 	ldw	r2,-20(fp)
    e250:	1080400c 	andi	r2,r2,256
    e254:	10003426 	beq	r2,zero,e328 <altera_avalon_jtag_uart_irq+0x11c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e258:	00800074 	movhi	r2,1
    e25c:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e260:	e0bffd17 	ldw	r2,-12(fp)
    e264:	10800a17 	ldw	r2,40(r2)
    e268:	10800044 	addi	r2,r2,1
    e26c:	1081ffcc 	andi	r2,r2,2047
    e270:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
    e274:	e0bffd17 	ldw	r2,-12(fp)
    e278:	10800b17 	ldw	r2,44(r2)
    e27c:	e0fffa17 	ldw	r3,-24(fp)
    e280:	18801426 	beq	r3,r2,e2d4 <altera_avalon_jtag_uart_irq+0xc8>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e284:	e0bffc17 	ldw	r2,-16(fp)
    e288:	10800037 	ldwio	r2,0(r2)
    e28c:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e290:	e0bfff17 	ldw	r2,-4(fp)
    e294:	10a0000c 	andi	r2,r2,32768
    e298:	10001026 	beq	r2,zero,e2dc <altera_avalon_jtag_uart_irq+0xd0>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e29c:	e0bffd17 	ldw	r2,-12(fp)
    e2a0:	10800a17 	ldw	r2,40(r2)
    e2a4:	e0ffff17 	ldw	r3,-4(fp)
    e2a8:	1809883a 	mov	r4,r3
    e2ac:	e0fffd17 	ldw	r3,-12(fp)
    e2b0:	1885883a 	add	r2,r3,r2
    e2b4:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e2b8:	e0bffd17 	ldw	r2,-12(fp)
    e2bc:	10800a17 	ldw	r2,40(r2)
    e2c0:	10800044 	addi	r2,r2,1
    e2c4:	10c1ffcc 	andi	r3,r2,2047
    e2c8:	e0bffd17 	ldw	r2,-12(fp)
    e2cc:	10c00a15 	stw	r3,40(r2)
      {
    e2d0:	003fe306 	br	e260 <altera_avalon_jtag_uart_irq+0x54>
          break;
    e2d4:	0001883a 	nop
    e2d8:	00000106 	br	e2e0 <altera_avalon_jtag_uart_irq+0xd4>
          break;
    e2dc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e2e0:	e0bfff17 	ldw	r2,-4(fp)
    e2e4:	10bfffec 	andhi	r2,r2,65535
    e2e8:	10000f26 	beq	r2,zero,e328 <altera_avalon_jtag_uart_irq+0x11c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e2ec:	e0bffd17 	ldw	r2,-12(fp)
    e2f0:	10c00817 	ldw	r3,32(r2)
    e2f4:	00bfff84 	movi	r2,-2
    e2f8:	1886703a 	and	r3,r3,r2
    e2fc:	e0bffd17 	ldw	r2,-12(fp)
    e300:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e304:	e0bffc17 	ldw	r2,-16(fp)
    e308:	10800104 	addi	r2,r2,4
    e30c:	1007883a 	mov	r3,r2
    e310:	e0bffd17 	ldw	r2,-12(fp)
    e314:	10800817 	ldw	r2,32(r2)
    e318:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e31c:	e0bffc17 	ldw	r2,-16(fp)
    e320:	10800104 	addi	r2,r2,4
    e324:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e328:	e0bffb17 	ldw	r2,-20(fp)
    e32c:	1080800c 	andi	r2,r2,512
    e330:	103fbf26 	beq	r2,zero,e230 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e334:	e0bffb17 	ldw	r2,-20(fp)
    e338:	1004d43a 	srli	r2,r2,16
    e33c:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e340:	00001306 	br	e390 <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e344:	e0bffc17 	ldw	r2,-16(fp)
    e348:	e0fffd17 	ldw	r3,-12(fp)
    e34c:	18c00d17 	ldw	r3,52(r3)
    e350:	e13ffd17 	ldw	r4,-12(fp)
    e354:	20c7883a 	add	r3,r4,r3
    e358:	18c20e03 	ldbu	r3,2104(r3)
    e35c:	18c03fcc 	andi	r3,r3,255
    e360:	18c0201c 	xori	r3,r3,128
    e364:	18ffe004 	addi	r3,r3,-128
    e368:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e36c:	e0bffd17 	ldw	r2,-12(fp)
    e370:	10800d17 	ldw	r2,52(r2)
    e374:	10800044 	addi	r2,r2,1
    e378:	10c1ffcc 	andi	r3,r2,2047
    e37c:	e0bffd17 	ldw	r2,-12(fp)
    e380:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e384:	e0bffe17 	ldw	r2,-8(fp)
    e388:	10bfffc4 	addi	r2,r2,-1
    e38c:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
    e390:	e0bffe17 	ldw	r2,-8(fp)
    e394:	10000526 	beq	r2,zero,e3ac <altera_avalon_jtag_uart_irq+0x1a0>
    e398:	e0bffd17 	ldw	r2,-12(fp)
    e39c:	10c00d17 	ldw	r3,52(r2)
    e3a0:	e0bffd17 	ldw	r2,-12(fp)
    e3a4:	10800c17 	ldw	r2,48(r2)
    e3a8:	18bfe61e 	bne	r3,r2,e344 <altera_avalon_jtag_uart_irq+0x138>
      }

      if (space > 0)
    e3ac:	e0bffe17 	ldw	r2,-8(fp)
    e3b0:	103f9f26 	beq	r2,zero,e230 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e3b4:	e0bffd17 	ldw	r2,-12(fp)
    e3b8:	10c00817 	ldw	r3,32(r2)
    e3bc:	00bfff44 	movi	r2,-3
    e3c0:	1886703a 	and	r3,r3,r2
    e3c4:	e0bffd17 	ldw	r2,-12(fp)
    e3c8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e3cc:	e0bffd17 	ldw	r2,-12(fp)
    e3d0:	10800017 	ldw	r2,0(r2)
    e3d4:	10800104 	addi	r2,r2,4
    e3d8:	1007883a 	mov	r3,r2
    e3dc:	e0bffd17 	ldw	r2,-12(fp)
    e3e0:	10800817 	ldw	r2,32(r2)
    e3e4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e3e8:	e0bffc17 	ldw	r2,-16(fp)
    e3ec:	10800104 	addi	r2,r2,4
    e3f0:	10800037 	ldwio	r2,0(r2)
  {
    e3f4:	003f8e06 	br	e230 <altera_avalon_jtag_uart_irq+0x24>
      break;
    e3f8:	0001883a 	nop
      }
    }
  }
}
    e3fc:	0001883a 	nop
    e400:	e037883a 	mov	sp,fp
    e404:	df000017 	ldw	fp,0(sp)
    e408:	dec00104 	addi	sp,sp,4
    e40c:	f800283a 	ret

0000e410 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e410:	defffc04 	addi	sp,sp,-16
    e414:	df000315 	stw	fp,12(sp)
    e418:	df000304 	addi	fp,sp,12
    e41c:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e420:	e0bffd17 	ldw	r2,-12(fp)
    e424:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e428:	e0bfff17 	ldw	r2,-4(fp)
    e42c:	10800017 	ldw	r2,0(r2)
    e430:	10800104 	addi	r2,r2,4
    e434:	10800037 	ldwio	r2,0(r2)
    e438:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e43c:	e0bffe17 	ldw	r2,-8(fp)
    e440:	1081000c 	andi	r2,r2,1024
    e444:	10000b26 	beq	r2,zero,e474 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e448:	e0bfff17 	ldw	r2,-4(fp)
    e44c:	10800017 	ldw	r2,0(r2)
    e450:	10800104 	addi	r2,r2,4
    e454:	1007883a 	mov	r3,r2
    e458:	e0bfff17 	ldw	r2,-4(fp)
    e45c:	10800817 	ldw	r2,32(r2)
    e460:	10810014 	ori	r2,r2,1024
    e464:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e468:	e0bfff17 	ldw	r2,-4(fp)
    e46c:	10000915 	stw	zero,36(r2)
    e470:	00000a06 	br	e49c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e474:	e0bfff17 	ldw	r2,-4(fp)
    e478:	10c00917 	ldw	r3,36(r2)
    e47c:	00a00034 	movhi	r2,32768
    e480:	10bfff04 	addi	r2,r2,-4
    e484:	10c00536 	bltu	r2,r3,e49c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e488:	e0bfff17 	ldw	r2,-4(fp)
    e48c:	10800917 	ldw	r2,36(r2)
    e490:	10c00044 	addi	r3,r2,1
    e494:	e0bfff17 	ldw	r2,-4(fp)
    e498:	10c00915 	stw	r3,36(r2)
    e49c:	d0a73717 	ldw	r2,-25380(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e4a0:	e037883a 	mov	sp,fp
    e4a4:	df000017 	ldw	fp,0(sp)
    e4a8:	dec00104 	addi	sp,sp,4
    e4ac:	f800283a 	ret

0000e4b0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e4b0:	defffd04 	addi	sp,sp,-12
    e4b4:	df000215 	stw	fp,8(sp)
    e4b8:	df000204 	addi	fp,sp,8
    e4bc:	e13fff15 	stw	r4,-4(fp)
    e4c0:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e4c4:	00000506 	br	e4dc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e4c8:	e0bffe17 	ldw	r2,-8(fp)
    e4cc:	1090000c 	andi	r2,r2,16384
    e4d0:	10000226 	beq	r2,zero,e4dc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e4d4:	00bffd44 	movi	r2,-11
    e4d8:	00000b06 	br	e508 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e4dc:	e0bfff17 	ldw	r2,-4(fp)
    e4e0:	10c00d17 	ldw	r3,52(r2)
    e4e4:	e0bfff17 	ldw	r2,-4(fp)
    e4e8:	10800c17 	ldw	r2,48(r2)
    e4ec:	18800526 	beq	r3,r2,e504 <altera_avalon_jtag_uart_close+0x54>
    e4f0:	e0bfff17 	ldw	r2,-4(fp)
    e4f4:	10c00917 	ldw	r3,36(r2)
    e4f8:	e0bfff17 	ldw	r2,-4(fp)
    e4fc:	10800117 	ldw	r2,4(r2)
    e500:	18bff136 	bltu	r3,r2,e4c8 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
    e504:	0005883a 	mov	r2,zero
}
    e508:	e037883a 	mov	sp,fp
    e50c:	df000017 	ldw	fp,0(sp)
    e510:	dec00104 	addi	sp,sp,4
    e514:	f800283a 	ret

0000e518 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e518:	defffa04 	addi	sp,sp,-24
    e51c:	df000515 	stw	fp,20(sp)
    e520:	df000504 	addi	fp,sp,20
    e524:	e13ffd15 	stw	r4,-12(fp)
    e528:	e17ffc15 	stw	r5,-16(fp)
    e52c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
    e530:	00bff9c4 	movi	r2,-25
    e534:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
    e538:	e0bffc17 	ldw	r2,-16(fp)
    e53c:	109a8060 	cmpeqi	r2,r2,27137
    e540:	1000041e 	bne	r2,zero,e554 <altera_avalon_jtag_uart_ioctl+0x3c>
    e544:	e0bffc17 	ldw	r2,-16(fp)
    e548:	109a80a0 	cmpeqi	r2,r2,27138
    e54c:	1000181e 	bne	r2,zero,e5b0 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
    e550:	00002906 	br	e5f8 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    e554:	e0bffd17 	ldw	r2,-12(fp)
    e558:	10c00117 	ldw	r3,4(r2)
    e55c:	00a00034 	movhi	r2,32768
    e560:	10bfffc4 	addi	r2,r2,-1
    e564:	18802126 	beq	r3,r2,e5ec <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
    e568:	e0bffb17 	ldw	r2,-20(fp)
    e56c:	10800017 	ldw	r2,0(r2)
    e570:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e574:	e0bffe17 	ldw	r2,-8(fp)
    e578:	10800090 	cmplti	r2,r2,2
    e57c:	1000061e 	bne	r2,zero,e598 <altera_avalon_jtag_uart_ioctl+0x80>
    e580:	e0fffe17 	ldw	r3,-8(fp)
    e584:	00a00034 	movhi	r2,32768
    e588:	10bfffc4 	addi	r2,r2,-1
    e58c:	18800226 	beq	r3,r2,e598 <altera_avalon_jtag_uart_ioctl+0x80>
    e590:	e0bffe17 	ldw	r2,-8(fp)
    e594:	00000206 	br	e5a0 <altera_avalon_jtag_uart_ioctl+0x88>
    e598:	00a00034 	movhi	r2,32768
    e59c:	10bfff84 	addi	r2,r2,-2
    e5a0:	e0fffd17 	ldw	r3,-12(fp)
    e5a4:	18800115 	stw	r2,4(r3)
      rc = 0;
    e5a8:	e03fff15 	stw	zero,-4(fp)
    break;
    e5ac:	00000f06 	br	e5ec <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
    e5b0:	e0bffd17 	ldw	r2,-12(fp)
    e5b4:	10c00117 	ldw	r3,4(r2)
    e5b8:	00a00034 	movhi	r2,32768
    e5bc:	10bfffc4 	addi	r2,r2,-1
    e5c0:	18800c26 	beq	r3,r2,e5f4 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e5c4:	e0bffd17 	ldw	r2,-12(fp)
    e5c8:	10c00917 	ldw	r3,36(r2)
    e5cc:	e0bffd17 	ldw	r2,-12(fp)
    e5d0:	10800117 	ldw	r2,4(r2)
    e5d4:	1885803a 	cmpltu	r2,r3,r2
    e5d8:	10c03fcc 	andi	r3,r2,255
    e5dc:	e0bffb17 	ldw	r2,-20(fp)
    e5e0:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e5e4:	e03fff15 	stw	zero,-4(fp)
    break;
    e5e8:	00000206 	br	e5f4 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
    e5ec:	0001883a 	nop
    e5f0:	00000106 	br	e5f8 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
    e5f4:	0001883a 	nop
  }

  return rc;
    e5f8:	e0bfff17 	ldw	r2,-4(fp)
}
    e5fc:	e037883a 	mov	sp,fp
    e600:	df000017 	ldw	fp,0(sp)
    e604:	dec00104 	addi	sp,sp,4
    e608:	f800283a 	ret

0000e60c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e60c:	defff304 	addi	sp,sp,-52
    e610:	dfc00c15 	stw	ra,48(sp)
    e614:	df000b15 	stw	fp,44(sp)
    e618:	df000b04 	addi	fp,sp,44
    e61c:	e13ff815 	stw	r4,-32(fp)
    e620:	e17ff715 	stw	r5,-36(fp)
    e624:	e1bff615 	stw	r6,-40(fp)
    e628:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
    e62c:	e0bff717 	ldw	r2,-36(fp)
    e630:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e634:	00004706 	br	e754 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e638:	e0bff817 	ldw	r2,-32(fp)
    e63c:	10800a17 	ldw	r2,40(r2)
    e640:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
    e644:	e0bff817 	ldw	r2,-32(fp)
    e648:	10800b17 	ldw	r2,44(r2)
    e64c:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
    e650:	e0fffd17 	ldw	r3,-12(fp)
    e654:	e0bffc17 	ldw	r2,-16(fp)
    e658:	18800536 	bltu	r3,r2,e670 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e65c:	e0fffd17 	ldw	r3,-12(fp)
    e660:	e0bffc17 	ldw	r2,-16(fp)
    e664:	1885c83a 	sub	r2,r3,r2
    e668:	e0bffe15 	stw	r2,-8(fp)
    e66c:	00000406 	br	e680 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e670:	00c20004 	movi	r3,2048
    e674:	e0bffc17 	ldw	r2,-16(fp)
    e678:	1885c83a 	sub	r2,r3,r2
    e67c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    e680:	e0bffe17 	ldw	r2,-8(fp)
    e684:	10001e26 	beq	r2,zero,e700 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e688:	e0fff617 	ldw	r3,-40(fp)
    e68c:	e0bffe17 	ldw	r2,-8(fp)
    e690:	1880022e 	bgeu	r3,r2,e69c <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e694:	e0bff617 	ldw	r2,-40(fp)
    e698:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e69c:	e0bff817 	ldw	r2,-32(fp)
    e6a0:	10c00e04 	addi	r3,r2,56
    e6a4:	e0bffc17 	ldw	r2,-16(fp)
    e6a8:	1885883a 	add	r2,r3,r2
    e6ac:	e1bffe17 	ldw	r6,-8(fp)
    e6b0:	100b883a 	mov	r5,r2
    e6b4:	e13fff17 	ldw	r4,-4(fp)
    e6b8:	00014280 	call	1428 <memcpy>
      ptr   += n;
    e6bc:	e0ffff17 	ldw	r3,-4(fp)
    e6c0:	e0bffe17 	ldw	r2,-8(fp)
    e6c4:	1885883a 	add	r2,r3,r2
    e6c8:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
    e6cc:	e0fff617 	ldw	r3,-40(fp)
    e6d0:	e0bffe17 	ldw	r2,-8(fp)
    e6d4:	1885c83a 	sub	r2,r3,r2
    e6d8:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e6dc:	e0fffc17 	ldw	r3,-16(fp)
    e6e0:	e0bffe17 	ldw	r2,-8(fp)
    e6e4:	1885883a 	add	r2,r3,r2
    e6e8:	10c1ffcc 	andi	r3,r2,2047
    e6ec:	e0bff817 	ldw	r2,-32(fp)
    e6f0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e6f4:	e0bff617 	ldw	r2,-40(fp)
    e6f8:	00bfcf16 	blt	zero,r2,e638 <altera_avalon_jtag_uart_read+0x2c>
    e6fc:	00000106 	br	e704 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
    e700:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
    e704:	e0ffff17 	ldw	r3,-4(fp)
    e708:	e0bff717 	ldw	r2,-36(fp)
    e70c:	1880141e 	bne	r3,r2,e760 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e710:	e0bff517 	ldw	r2,-44(fp)
    e714:	1090000c 	andi	r2,r2,16384
    e718:	1000131e 	bne	r2,zero,e768 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e71c:	0001883a 	nop
    e720:	e0bff817 	ldw	r2,-32(fp)
    e724:	10800a17 	ldw	r2,40(r2)
    e728:	e0fffd17 	ldw	r3,-12(fp)
    e72c:	1880051e 	bne	r3,r2,e744 <altera_avalon_jtag_uart_read+0x138>
    e730:	e0bff817 	ldw	r2,-32(fp)
    e734:	10c00917 	ldw	r3,36(r2)
    e738:	e0bff817 	ldw	r2,-32(fp)
    e73c:	10800117 	ldw	r2,4(r2)
    e740:	18bff736 	bltu	r3,r2,e720 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e744:	e0bff817 	ldw	r2,-32(fp)
    e748:	10800a17 	ldw	r2,40(r2)
    e74c:	e0fffd17 	ldw	r3,-12(fp)
    e750:	18800726 	beq	r3,r2,e770 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
    e754:	e0bff617 	ldw	r2,-40(fp)
    e758:	00bfb716 	blt	zero,r2,e638 <altera_avalon_jtag_uart_read+0x2c>
    e75c:	00000506 	br	e774 <altera_avalon_jtag_uart_read+0x168>
      break;
    e760:	0001883a 	nop
    e764:	00000306 	br	e774 <altera_avalon_jtag_uart_read+0x168>
      break;
    e768:	0001883a 	nop
    e76c:	00000106 	br	e774 <altera_avalon_jtag_uart_read+0x168>
      break;
    e770:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e774:	e0ffff17 	ldw	r3,-4(fp)
    e778:	e0bff717 	ldw	r2,-36(fp)
    e77c:	18801826 	beq	r3,r2,e7e0 <altera_avalon_jtag_uart_read+0x1d4>
  NIOS2_READ_STATUS (context);
    e780:	0005303a 	rdctl	r2,status
    e784:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e788:	e0fff917 	ldw	r3,-28(fp)
    e78c:	00bfff84 	movi	r2,-2
    e790:	1884703a 	and	r2,r3,r2
    e794:	1001703a 	wrctl	status,r2
  return context;
    e798:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e79c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e7a0:	e0bff817 	ldw	r2,-32(fp)
    e7a4:	10800817 	ldw	r2,32(r2)
    e7a8:	10c00054 	ori	r3,r2,1
    e7ac:	e0bff817 	ldw	r2,-32(fp)
    e7b0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e7b4:	e0bff817 	ldw	r2,-32(fp)
    e7b8:	10800017 	ldw	r2,0(r2)
    e7bc:	10800104 	addi	r2,r2,4
    e7c0:	1007883a 	mov	r3,r2
    e7c4:	e0bff817 	ldw	r2,-32(fp)
    e7c8:	10800817 	ldw	r2,32(r2)
    e7cc:	18800035 	stwio	r2,0(r3)
    e7d0:	e0bffb17 	ldw	r2,-20(fp)
    e7d4:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e7d8:	e0bffa17 	ldw	r2,-24(fp)
    e7dc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e7e0:	e0ffff17 	ldw	r3,-4(fp)
    e7e4:	e0bff717 	ldw	r2,-36(fp)
    e7e8:	18800426 	beq	r3,r2,e7fc <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e7ec:	e0ffff17 	ldw	r3,-4(fp)
    e7f0:	e0bff717 	ldw	r2,-36(fp)
    e7f4:	1885c83a 	sub	r2,r3,r2
    e7f8:	00000606 	br	e814 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e7fc:	e0bff517 	ldw	r2,-44(fp)
    e800:	1090000c 	andi	r2,r2,16384
    e804:	10000226 	beq	r2,zero,e810 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e808:	00bffd44 	movi	r2,-11
    e80c:	00000106 	br	e814 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e810:	00bffec4 	movi	r2,-5
}
    e814:	e037883a 	mov	sp,fp
    e818:	dfc00117 	ldw	ra,4(sp)
    e81c:	df000017 	ldw	fp,0(sp)
    e820:	dec00204 	addi	sp,sp,8
    e824:	f800283a 	ret

0000e828 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e828:	defff304 	addi	sp,sp,-52
    e82c:	dfc00c15 	stw	ra,48(sp)
    e830:	df000b15 	stw	fp,44(sp)
    e834:	df000b04 	addi	fp,sp,44
    e838:	e13ff815 	stw	r4,-32(fp)
    e83c:	e17ff715 	stw	r5,-36(fp)
    e840:	e1bff615 	stw	r6,-40(fp)
    e844:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e848:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e84c:	e0bff717 	ldw	r2,-36(fp)
    e850:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e854:	00003706 	br	e934 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e858:	e0bff817 	ldw	r2,-32(fp)
    e85c:	10800c17 	ldw	r2,48(r2)
    e860:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
    e864:	e0bff817 	ldw	r2,-32(fp)
    e868:	10800d17 	ldw	r2,52(r2)
    e86c:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
    e870:	e0fffc17 	ldw	r3,-16(fp)
    e874:	e0bfff17 	ldw	r2,-4(fp)
    e878:	1880062e 	bgeu	r3,r2,e894 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e87c:	e0ffff17 	ldw	r3,-4(fp)
    e880:	e0bffc17 	ldw	r2,-16(fp)
    e884:	1885c83a 	sub	r2,r3,r2
    e888:	10bfffc4 	addi	r2,r2,-1
    e88c:	e0bffe15 	stw	r2,-8(fp)
    e890:	00000b06 	br	e8c0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e894:	e0bfff17 	ldw	r2,-4(fp)
    e898:	10000526 	beq	r2,zero,e8b0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e89c:	00c20004 	movi	r3,2048
    e8a0:	e0bffc17 	ldw	r2,-16(fp)
    e8a4:	1885c83a 	sub	r2,r3,r2
    e8a8:	e0bffe15 	stw	r2,-8(fp)
    e8ac:	00000406 	br	e8c0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e8b0:	00c1ffc4 	movi	r3,2047
    e8b4:	e0bffc17 	ldw	r2,-16(fp)
    e8b8:	1885c83a 	sub	r2,r3,r2
    e8bc:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    e8c0:	e0bffe17 	ldw	r2,-8(fp)
    e8c4:	10001e26 	beq	r2,zero,e940 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e8c8:	e0fff617 	ldw	r3,-40(fp)
    e8cc:	e0bffe17 	ldw	r2,-8(fp)
    e8d0:	1880022e 	bgeu	r3,r2,e8dc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e8d4:	e0bff617 	ldw	r2,-40(fp)
    e8d8:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e8dc:	e0bff817 	ldw	r2,-32(fp)
    e8e0:	10c20e04 	addi	r3,r2,2104
    e8e4:	e0bffc17 	ldw	r2,-16(fp)
    e8e8:	1885883a 	add	r2,r3,r2
    e8ec:	e1bffe17 	ldw	r6,-8(fp)
    e8f0:	e17ff717 	ldw	r5,-36(fp)
    e8f4:	1009883a 	mov	r4,r2
    e8f8:	00014280 	call	1428 <memcpy>
      ptr   += n;
    e8fc:	e0fff717 	ldw	r3,-36(fp)
    e900:	e0bffe17 	ldw	r2,-8(fp)
    e904:	1885883a 	add	r2,r3,r2
    e908:	e0bff715 	stw	r2,-36(fp)
      count -= n;
    e90c:	e0fff617 	ldw	r3,-40(fp)
    e910:	e0bffe17 	ldw	r2,-8(fp)
    e914:	1885c83a 	sub	r2,r3,r2
    e918:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e91c:	e0fffc17 	ldw	r3,-16(fp)
    e920:	e0bffe17 	ldw	r2,-8(fp)
    e924:	1885883a 	add	r2,r3,r2
    e928:	10c1ffcc 	andi	r3,r2,2047
    e92c:	e0bff817 	ldw	r2,-32(fp)
    e930:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
    e934:	e0bff617 	ldw	r2,-40(fp)
    e938:	00bfc716 	blt	zero,r2,e858 <altera_avalon_jtag_uart_write+0x30>
    e93c:	00000106 	br	e944 <altera_avalon_jtag_uart_write+0x11c>
        break;
    e940:	0001883a 	nop
  NIOS2_READ_STATUS (context);
    e944:	0005303a 	rdctl	r2,status
    e948:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e94c:	e0fff917 	ldw	r3,-28(fp)
    e950:	00bfff84 	movi	r2,-2
    e954:	1884703a 	and	r2,r3,r2
    e958:	1001703a 	wrctl	status,r2
  return context;
    e95c:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e960:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e964:	e0bff817 	ldw	r2,-32(fp)
    e968:	10800817 	ldw	r2,32(r2)
    e96c:	10c00094 	ori	r3,r2,2
    e970:	e0bff817 	ldw	r2,-32(fp)
    e974:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e978:	e0bff817 	ldw	r2,-32(fp)
    e97c:	10800017 	ldw	r2,0(r2)
    e980:	10800104 	addi	r2,r2,4
    e984:	1007883a 	mov	r3,r2
    e988:	e0bff817 	ldw	r2,-32(fp)
    e98c:	10800817 	ldw	r2,32(r2)
    e990:	18800035 	stwio	r2,0(r3)
    e994:	e0bffb17 	ldw	r2,-20(fp)
    e998:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e99c:	e0bffa17 	ldw	r2,-24(fp)
    e9a0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e9a4:	e0bff617 	ldw	r2,-40(fp)
    e9a8:	0080100e 	bge	zero,r2,e9ec <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e9ac:	e0bff517 	ldw	r2,-44(fp)
    e9b0:	1090000c 	andi	r2,r2,16384
    e9b4:	1000101e 	bne	r2,zero,e9f8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e9b8:	0001883a 	nop
    e9bc:	e0bff817 	ldw	r2,-32(fp)
    e9c0:	10800d17 	ldw	r2,52(r2)
    e9c4:	e0ffff17 	ldw	r3,-4(fp)
    e9c8:	1880051e 	bne	r3,r2,e9e0 <altera_avalon_jtag_uart_write+0x1b8>
    e9cc:	e0bff817 	ldw	r2,-32(fp)
    e9d0:	10c00917 	ldw	r3,36(r2)
    e9d4:	e0bff817 	ldw	r2,-32(fp)
    e9d8:	10800117 	ldw	r2,4(r2)
    e9dc:	18bff736 	bltu	r3,r2,e9bc <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e9e0:	e0bff817 	ldw	r2,-32(fp)
    e9e4:	10800917 	ldw	r2,36(r2)
    e9e8:	1000051e 	bne	r2,zero,ea00 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e9ec:	e0bff617 	ldw	r2,-40(fp)
    e9f0:	00bfd016 	blt	zero,r2,e934 <altera_avalon_jtag_uart_write+0x10c>
    e9f4:	00000306 	br	ea04 <altera_avalon_jtag_uart_write+0x1dc>
        break;
    e9f8:	0001883a 	nop
    e9fc:	00000106 	br	ea04 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    ea00:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    ea04:	e0fff717 	ldw	r3,-36(fp)
    ea08:	e0bffd17 	ldw	r2,-12(fp)
    ea0c:	18800426 	beq	r3,r2,ea20 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    ea10:	e0fff717 	ldw	r3,-36(fp)
    ea14:	e0bffd17 	ldw	r2,-12(fp)
    ea18:	1885c83a 	sub	r2,r3,r2
    ea1c:	00000606 	br	ea38 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    ea20:	e0bff517 	ldw	r2,-44(fp)
    ea24:	1090000c 	andi	r2,r2,16384
    ea28:	10000226 	beq	r2,zero,ea34 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    ea2c:	00bffd44 	movi	r2,-11
    ea30:	00000106 	br	ea38 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    ea34:	00bffec4 	movi	r2,-5
}
    ea38:	e037883a 	mov	sp,fp
    ea3c:	dfc00117 	ldw	ra,4(sp)
    ea40:	df000017 	ldw	fp,0(sp)
    ea44:	dec00204 	addi	sp,sp,8
    ea48:	f800283a 	ret

0000ea4c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    ea4c:	defff504 	addi	sp,sp,-44
    ea50:	df000a15 	stw	fp,40(sp)
    ea54:	df000a04 	addi	fp,sp,40
    ea58:	e13ff915 	stw	r4,-28(fp)
    ea5c:	e17ff815 	stw	r5,-32(fp)
    ea60:	e1bff715 	stw	r6,-36(fp)
    ea64:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    ea68:	e03fff15 	stw	zero,-4(fp)
    ea6c:	d0a73717 	ldw	r2,-25380(gp)
  
  if (alt_ticks_per_second ())
    ea70:	10003c26 	beq	r2,zero,eb64 <alt_alarm_start+0x118>
  {
    if (alarm)
    ea74:	e0bff917 	ldw	r2,-28(fp)
    ea78:	10003826 	beq	r2,zero,eb5c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    ea7c:	e0bff917 	ldw	r2,-28(fp)
    ea80:	e0fff717 	ldw	r3,-36(fp)
    ea84:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    ea88:	e0bff917 	ldw	r2,-28(fp)
    ea8c:	e0fff617 	ldw	r3,-40(fp)
    ea90:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
    ea94:	0005303a 	rdctl	r2,status
    ea98:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ea9c:	e0fffd17 	ldw	r3,-12(fp)
    eaa0:	00bfff84 	movi	r2,-2
    eaa4:	1884703a 	and	r2,r3,r2
    eaa8:	1001703a 	wrctl	status,r2
  return context;
    eaac:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
    eab0:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    eab4:	d0a73817 	ldw	r2,-25376(gp)
      
      current_nticks = alt_nticks();
    eab8:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    eabc:	e0fff817 	ldw	r3,-32(fp)
    eac0:	e0bfff17 	ldw	r2,-4(fp)
    eac4:	1885883a 	add	r2,r3,r2
    eac8:	10c00044 	addi	r3,r2,1
    eacc:	e0bff917 	ldw	r2,-28(fp)
    ead0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    ead4:	e0bff917 	ldw	r2,-28(fp)
    ead8:	10c00217 	ldw	r3,8(r2)
    eadc:	e0bfff17 	ldw	r2,-4(fp)
    eae0:	1880042e 	bgeu	r3,r2,eaf4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    eae4:	e0bff917 	ldw	r2,-28(fp)
    eae8:	00c00044 	movi	r3,1
    eaec:	10c00405 	stb	r3,16(r2)
    eaf0:	00000206 	br	eafc <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    eaf4:	e0bff917 	ldw	r2,-28(fp)
    eaf8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    eafc:	e0bff917 	ldw	r2,-28(fp)
    eb00:	d0e01104 	addi	r3,gp,-32700
    eb04:	e0fffb15 	stw	r3,-20(fp)
    eb08:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    eb0c:	e0bffa17 	ldw	r2,-24(fp)
    eb10:	e0fffb17 	ldw	r3,-20(fp)
    eb14:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    eb18:	e0bffb17 	ldw	r2,-20(fp)
    eb1c:	10c00017 	ldw	r3,0(r2)
    eb20:	e0bffa17 	ldw	r2,-24(fp)
    eb24:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    eb28:	e0bffb17 	ldw	r2,-20(fp)
    eb2c:	10800017 	ldw	r2,0(r2)
    eb30:	e0fffa17 	ldw	r3,-24(fp)
    eb34:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    eb38:	e0bffb17 	ldw	r2,-20(fp)
    eb3c:	e0fffa17 	ldw	r3,-24(fp)
    eb40:	10c00015 	stw	r3,0(r2)
    eb44:	e0bffe17 	ldw	r2,-8(fp)
    eb48:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    eb4c:	e0bffc17 	ldw	r2,-16(fp)
    eb50:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    eb54:	0005883a 	mov	r2,zero
    eb58:	00000306 	br	eb68 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    eb5c:	00bffa84 	movi	r2,-22
    eb60:	00000106 	br	eb68 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    eb64:	00bfde84 	movi	r2,-134
  }
}
    eb68:	e037883a 	mov	sp,fp
    eb6c:	df000017 	ldw	fp,0(sp)
    eb70:	dec00104 	addi	sp,sp,4
    eb74:	f800283a 	ret

0000eb78 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    eb78:	deffff04 	addi	sp,sp,-4
    eb7c:	df000015 	stw	fp,0(sp)
    eb80:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    eb84:	0001883a 	nop
    eb88:	e037883a 	mov	sp,fp
    eb8c:	df000017 	ldw	fp,0(sp)
    eb90:	dec00104 	addi	sp,sp,4
    eb94:	f800283a 	ret

0000eb98 <alt_get_errno>:
{
    eb98:	defffe04 	addi	sp,sp,-8
    eb9c:	dfc00115 	stw	ra,4(sp)
    eba0:	df000015 	stw	fp,0(sp)
    eba4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    eba8:	d0a00e17 	ldw	r2,-32712(gp)
    ebac:	10000326 	beq	r2,zero,ebbc <alt_get_errno+0x24>
    ebb0:	d0a00e17 	ldw	r2,-32712(gp)
    ebb4:	103ee83a 	callr	r2
    ebb8:	00000106 	br	ebc0 <alt_get_errno+0x28>
    ebbc:	d0a73104 	addi	r2,gp,-25404
}
    ebc0:	e037883a 	mov	sp,fp
    ebc4:	dfc00117 	ldw	ra,4(sp)
    ebc8:	df000017 	ldw	fp,0(sp)
    ebcc:	dec00204 	addi	sp,sp,8
    ebd0:	f800283a 	ret

0000ebd4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    ebd4:	defffa04 	addi	sp,sp,-24
    ebd8:	dfc00515 	stw	ra,20(sp)
    ebdc:	df000415 	stw	fp,16(sp)
    ebe0:	df000404 	addi	fp,sp,16
    ebe4:	e13ffd15 	stw	r4,-12(fp)
    ebe8:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    ebec:	e0bffd17 	ldw	r2,-12(fp)
    ebf0:	10000326 	beq	r2,zero,ec00 <alt_dev_llist_insert+0x2c>
    ebf4:	e0bffd17 	ldw	r2,-12(fp)
    ebf8:	10800217 	ldw	r2,8(r2)
    ebfc:	1000061e 	bne	r2,zero,ec18 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    ec00:	000eb980 	call	eb98 <alt_get_errno>
    ec04:	1007883a 	mov	r3,r2
    ec08:	00800584 	movi	r2,22
    ec0c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    ec10:	00bffa84 	movi	r2,-22
    ec14:	00001306 	br	ec64 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    ec18:	e0bffd17 	ldw	r2,-12(fp)
    ec1c:	e0fffc17 	ldw	r3,-16(fp)
    ec20:	e0ffff15 	stw	r3,-4(fp)
    ec24:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
    ec28:	e0bffe17 	ldw	r2,-8(fp)
    ec2c:	e0ffff17 	ldw	r3,-4(fp)
    ec30:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    ec34:	e0bfff17 	ldw	r2,-4(fp)
    ec38:	10c00017 	ldw	r3,0(r2)
    ec3c:	e0bffe17 	ldw	r2,-8(fp)
    ec40:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
    ec44:	e0bfff17 	ldw	r2,-4(fp)
    ec48:	10800017 	ldw	r2,0(r2)
    ec4c:	e0fffe17 	ldw	r3,-8(fp)
    ec50:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    ec54:	e0bfff17 	ldw	r2,-4(fp)
    ec58:	e0fffe17 	ldw	r3,-8(fp)
    ec5c:	10c00015 	stw	r3,0(r2)

  return 0;  
    ec60:	0005883a 	mov	r2,zero
}
    ec64:	e037883a 	mov	sp,fp
    ec68:	dfc00117 	ldw	ra,4(sp)
    ec6c:	df000017 	ldw	fp,0(sp)
    ec70:	dec00204 	addi	sp,sp,8
    ec74:	f800283a 	ret

0000ec78 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    ec78:	defffd04 	addi	sp,sp,-12
    ec7c:	dfc00215 	stw	ra,8(sp)
    ec80:	df000115 	stw	fp,4(sp)
    ec84:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    ec88:	00800074 	movhi	r2,1
    ec8c:	10bec404 	addi	r2,r2,-1264
    ec90:	e0bfff15 	stw	r2,-4(fp)
    ec94:	00000606 	br	ecb0 <_do_ctors+0x38>
        (*ctor) (); 
    ec98:	e0bfff17 	ldw	r2,-4(fp)
    ec9c:	10800017 	ldw	r2,0(r2)
    eca0:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    eca4:	e0bfff17 	ldw	r2,-4(fp)
    eca8:	10bfff04 	addi	r2,r2,-4
    ecac:	e0bfff15 	stw	r2,-4(fp)
    ecb0:	e0ffff17 	ldw	r3,-4(fp)
    ecb4:	00800074 	movhi	r2,1
    ecb8:	10bec504 	addi	r2,r2,-1260
    ecbc:	18bff62e 	bgeu	r3,r2,ec98 <_do_ctors+0x20>
}
    ecc0:	0001883a 	nop
    ecc4:	e037883a 	mov	sp,fp
    ecc8:	dfc00117 	ldw	ra,4(sp)
    eccc:	df000017 	ldw	fp,0(sp)
    ecd0:	dec00204 	addi	sp,sp,8
    ecd4:	f800283a 	ret

0000ecd8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    ecd8:	defffd04 	addi	sp,sp,-12
    ecdc:	dfc00215 	stw	ra,8(sp)
    ece0:	df000115 	stw	fp,4(sp)
    ece4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ece8:	00800074 	movhi	r2,1
    ecec:	10bec404 	addi	r2,r2,-1264
    ecf0:	e0bfff15 	stw	r2,-4(fp)
    ecf4:	00000606 	br	ed10 <_do_dtors+0x38>
        (*dtor) (); 
    ecf8:	e0bfff17 	ldw	r2,-4(fp)
    ecfc:	10800017 	ldw	r2,0(r2)
    ed00:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ed04:	e0bfff17 	ldw	r2,-4(fp)
    ed08:	10bfff04 	addi	r2,r2,-4
    ed0c:	e0bfff15 	stw	r2,-4(fp)
    ed10:	e0ffff17 	ldw	r3,-4(fp)
    ed14:	00800074 	movhi	r2,1
    ed18:	10bec504 	addi	r2,r2,-1260
    ed1c:	18bff62e 	bgeu	r3,r2,ecf8 <_do_dtors+0x20>
}
    ed20:	0001883a 	nop
    ed24:	e037883a 	mov	sp,fp
    ed28:	dfc00117 	ldw	ra,4(sp)
    ed2c:	df000017 	ldw	fp,0(sp)
    ed30:	dec00204 	addi	sp,sp,8
    ed34:	f800283a 	ret

0000ed38 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    ed38:	deffff04 	addi	sp,sp,-4
    ed3c:	df000015 	stw	fp,0(sp)
    ed40:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    ed44:	0001883a 	nop
    ed48:	e037883a 	mov	sp,fp
    ed4c:	df000017 	ldw	fp,0(sp)
    ed50:	dec00104 	addi	sp,sp,4
    ed54:	f800283a 	ret

0000ed58 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ed58:	defff904 	addi	sp,sp,-28
    ed5c:	dfc00615 	stw	ra,24(sp)
    ed60:	df000515 	stw	fp,20(sp)
    ed64:	df000504 	addi	fp,sp,20
    ed68:	e13fff15 	stw	r4,-4(fp)
    ed6c:	e17ffe15 	stw	r5,-8(fp)
    ed70:	e1bffd15 	stw	r6,-12(fp)
    ed74:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    ed78:	e0800217 	ldw	r2,8(fp)
    ed7c:	d8800015 	stw	r2,0(sp)
    ed80:	e1fffc17 	ldw	r7,-16(fp)
    ed84:	e1bffd17 	ldw	r6,-12(fp)
    ed88:	e17ffe17 	ldw	r5,-8(fp)
    ed8c:	e13fff17 	ldw	r4,-4(fp)
    ed90:	000ef080 	call	ef08 <alt_iic_isr_register>
}  
    ed94:	e037883a 	mov	sp,fp
    ed98:	dfc00117 	ldw	ra,4(sp)
    ed9c:	df000017 	ldw	fp,0(sp)
    eda0:	dec00204 	addi	sp,sp,8
    eda4:	f800283a 	ret

0000eda8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    eda8:	defff904 	addi	sp,sp,-28
    edac:	df000615 	stw	fp,24(sp)
    edb0:	df000604 	addi	fp,sp,24
    edb4:	e13ffb15 	stw	r4,-20(fp)
    edb8:	e17ffa15 	stw	r5,-24(fp)
    edbc:	e0bffa17 	ldw	r2,-24(fp)
    edc0:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    edc4:	0005303a 	rdctl	r2,status
    edc8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    edcc:	e0fffe17 	ldw	r3,-8(fp)
    edd0:	00bfff84 	movi	r2,-2
    edd4:	1884703a 	and	r2,r3,r2
    edd8:	1001703a 	wrctl	status,r2
  return context;
    eddc:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    ede0:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
    ede4:	00c00044 	movi	r3,1
    ede8:	e0bfff17 	ldw	r2,-4(fp)
    edec:	1884983a 	sll	r2,r3,r2
    edf0:	1007883a 	mov	r3,r2
    edf4:	d0a73617 	ldw	r2,-25384(gp)
    edf8:	1884b03a 	or	r2,r3,r2
    edfc:	d0a73615 	stw	r2,-25384(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    ee00:	d0a73617 	ldw	r2,-25384(gp)
    ee04:	100170fa 	wrctl	ienable,r2
    ee08:	e0bffd17 	ldw	r2,-12(fp)
    ee0c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    ee10:	e0bffc17 	ldw	r2,-16(fp)
    ee14:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    ee18:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    ee1c:	0001883a 	nop
}
    ee20:	e037883a 	mov	sp,fp
    ee24:	df000017 	ldw	fp,0(sp)
    ee28:	dec00104 	addi	sp,sp,4
    ee2c:	f800283a 	ret

0000ee30 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    ee30:	defff904 	addi	sp,sp,-28
    ee34:	df000615 	stw	fp,24(sp)
    ee38:	df000604 	addi	fp,sp,24
    ee3c:	e13ffb15 	stw	r4,-20(fp)
    ee40:	e17ffa15 	stw	r5,-24(fp)
    ee44:	e0bffa17 	ldw	r2,-24(fp)
    ee48:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    ee4c:	0005303a 	rdctl	r2,status
    ee50:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ee54:	e0fffe17 	ldw	r3,-8(fp)
    ee58:	00bfff84 	movi	r2,-2
    ee5c:	1884703a 	and	r2,r3,r2
    ee60:	1001703a 	wrctl	status,r2
  return context;
    ee64:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
    ee68:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
    ee6c:	00c00044 	movi	r3,1
    ee70:	e0bfff17 	ldw	r2,-4(fp)
    ee74:	1884983a 	sll	r2,r3,r2
    ee78:	0084303a 	nor	r2,zero,r2
    ee7c:	1007883a 	mov	r3,r2
    ee80:	d0a73617 	ldw	r2,-25384(gp)
    ee84:	1884703a 	and	r2,r3,r2
    ee88:	d0a73615 	stw	r2,-25384(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    ee8c:	d0a73617 	ldw	r2,-25384(gp)
    ee90:	100170fa 	wrctl	ienable,r2
    ee94:	e0bffd17 	ldw	r2,-12(fp)
    ee98:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    ee9c:	e0bffc17 	ldw	r2,-16(fp)
    eea0:	1001703a 	wrctl	status,r2
  return 0;
    eea4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    eea8:	0001883a 	nop
}
    eeac:	e037883a 	mov	sp,fp
    eeb0:	df000017 	ldw	fp,0(sp)
    eeb4:	dec00104 	addi	sp,sp,4
    eeb8:	f800283a 	ret

0000eebc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    eebc:	defffc04 	addi	sp,sp,-16
    eec0:	df000315 	stw	fp,12(sp)
    eec4:	df000304 	addi	fp,sp,12
    eec8:	e13ffe15 	stw	r4,-8(fp)
    eecc:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    eed0:	000530fa 	rdctl	r2,ienable
    eed4:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    eed8:	00c00044 	movi	r3,1
    eedc:	e0bffd17 	ldw	r2,-12(fp)
    eee0:	1884983a 	sll	r2,r3,r2
    eee4:	1007883a 	mov	r3,r2
    eee8:	e0bfff17 	ldw	r2,-4(fp)
    eeec:	1884703a 	and	r2,r3,r2
    eef0:	1004c03a 	cmpne	r2,r2,zero
    eef4:	10803fcc 	andi	r2,r2,255
}
    eef8:	e037883a 	mov	sp,fp
    eefc:	df000017 	ldw	fp,0(sp)
    ef00:	dec00104 	addi	sp,sp,4
    ef04:	f800283a 	ret

0000ef08 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ef08:	defff504 	addi	sp,sp,-44
    ef0c:	dfc00a15 	stw	ra,40(sp)
    ef10:	df000915 	stw	fp,36(sp)
    ef14:	df000904 	addi	fp,sp,36
    ef18:	e13ffa15 	stw	r4,-24(fp)
    ef1c:	e17ff915 	stw	r5,-28(fp)
    ef20:	e1bff815 	stw	r6,-32(fp)
    ef24:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
    ef28:	00bffa84 	movi	r2,-22
    ef2c:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    ef30:	e0bff917 	ldw	r2,-28(fp)
    ef34:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    ef38:	e0bffe17 	ldw	r2,-8(fp)
    ef3c:	10800808 	cmpgei	r2,r2,32
    ef40:	1000241e 	bne	r2,zero,efd4 <alt_iic_isr_register+0xcc>
  NIOS2_READ_STATUS (context);
    ef44:	0005303a 	rdctl	r2,status
    ef48:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ef4c:	e0fffc17 	ldw	r3,-16(fp)
    ef50:	00bfff84 	movi	r2,-2
    ef54:	1884703a 	and	r2,r3,r2
    ef58:	1001703a 	wrctl	status,r2
  return context;
    ef5c:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    ef60:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
    ef64:	e0bffe17 	ldw	r2,-8(fp)
    ef68:	100890fa 	slli	r4,r2,3
    ef6c:	e0fff817 	ldw	r3,-32(fp)
    ef70:	00800074 	movhi	r2,1
    ef74:	2085883a 	add	r2,r4,r2
    ef78:	10cebe15 	stw	r3,15096(r2)
    alt_irq[id].context = isr_context;
    ef7c:	e0bffe17 	ldw	r2,-8(fp)
    ef80:	100890fa 	slli	r4,r2,3
    ef84:	e0fff717 	ldw	r3,-36(fp)
    ef88:	00800074 	movhi	r2,1
    ef8c:	2085883a 	add	r2,r4,r2
    ef90:	10cebf15 	stw	r3,15100(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    ef94:	e0bff817 	ldw	r2,-32(fp)
    ef98:	10000526 	beq	r2,zero,efb0 <alt_iic_isr_register+0xa8>
    ef9c:	e0bffe17 	ldw	r2,-8(fp)
    efa0:	100b883a 	mov	r5,r2
    efa4:	e13ffa17 	ldw	r4,-24(fp)
    efa8:	000eda80 	call	eda8 <alt_ic_irq_enable>
    efac:	00000406 	br	efc0 <alt_iic_isr_register+0xb8>
    efb0:	e0bffe17 	ldw	r2,-8(fp)
    efb4:	100b883a 	mov	r5,r2
    efb8:	e13ffa17 	ldw	r4,-24(fp)
    efbc:	000ee300 	call	ee30 <alt_ic_irq_disable>
    efc0:	e0bfff15 	stw	r2,-4(fp)
    efc4:	e0bffd17 	ldw	r2,-12(fp)
    efc8:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
    efcc:	e0bffb17 	ldw	r2,-20(fp)
    efd0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    efd4:	e0bfff17 	ldw	r2,-4(fp)
}
    efd8:	e037883a 	mov	sp,fp
    efdc:	dfc00117 	ldw	ra,4(sp)
    efe0:	df000017 	ldw	fp,0(sp)
    efe4:	dec00204 	addi	sp,sp,8
    efe8:	f800283a 	ret

0000efec <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    efec:	defff904 	addi	sp,sp,-28
    eff0:	dfc00615 	stw	ra,24(sp)
    eff4:	df000515 	stw	fp,20(sp)
    eff8:	df000504 	addi	fp,sp,20
    effc:	e13ffe15 	stw	r4,-8(fp)
    f000:	e17ffd15 	stw	r5,-12(fp)
    f004:	e1bffc15 	stw	r6,-16(fp)
    f008:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
    f00c:	e1bffb17 	ldw	r6,-20(fp)
    f010:	e17ffc17 	ldw	r5,-16(fp)
    f014:	e13ffd17 	ldw	r4,-12(fp)
    f018:	000f2540 	call	f254 <open>
    f01c:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
    f020:	e0bfff17 	ldw	r2,-4(fp)
    f024:	10002016 	blt	r2,zero,f0a8 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
    f028:	e0ffff17 	ldw	r3,-4(fp)
    f02c:	1805883a 	mov	r2,r3
    f030:	1085883a 	add	r2,r2,r2
    f034:	10c5883a 	add	r2,r2,r3
    f038:	100490ba 	slli	r2,r2,2
    f03c:	00c00074 	movhi	r3,1
    f040:	10c7883a 	add	r3,r2,r3
    f044:	18c2fe17 	ldw	r3,3064(r3)
    f048:	e0bffe17 	ldw	r2,-8(fp)
    f04c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    f050:	e0ffff17 	ldw	r3,-4(fp)
    f054:	1805883a 	mov	r2,r3
    f058:	1085883a 	add	r2,r2,r2
    f05c:	10c5883a 	add	r2,r2,r3
    f060:	100490ba 	slli	r2,r2,2
    f064:	00c00074 	movhi	r3,1
    f068:	10c7883a 	add	r3,r2,r3
    f06c:	18c2ff17 	ldw	r3,3068(r3)
    f070:	e0bffe17 	ldw	r2,-8(fp)
    f074:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f078:	e0ffff17 	ldw	r3,-4(fp)
    f07c:	1805883a 	mov	r2,r3
    f080:	1085883a 	add	r2,r2,r2
    f084:	10c5883a 	add	r2,r2,r3
    f088:	100490ba 	slli	r2,r2,2
    f08c:	00c00074 	movhi	r3,1
    f090:	10c7883a 	add	r3,r2,r3
    f094:	18c30017 	ldw	r3,3072(r3)
    f098:	e0bffe17 	ldw	r2,-8(fp)
    f09c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    f0a0:	e13fff17 	ldw	r4,-4(fp)
    f0a4:	000dcd40 	call	dcd4 <alt_release_fd>
  }
} 
    f0a8:	0001883a 	nop
    f0ac:	e037883a 	mov	sp,fp
    f0b0:	dfc00117 	ldw	ra,4(sp)
    f0b4:	df000017 	ldw	fp,0(sp)
    f0b8:	dec00204 	addi	sp,sp,8
    f0bc:	f800283a 	ret

0000f0c0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    f0c0:	defffb04 	addi	sp,sp,-20
    f0c4:	dfc00415 	stw	ra,16(sp)
    f0c8:	df000315 	stw	fp,12(sp)
    f0cc:	df000304 	addi	fp,sp,12
    f0d0:	e13fff15 	stw	r4,-4(fp)
    f0d4:	e17ffe15 	stw	r5,-8(fp)
    f0d8:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    f0dc:	01c07fc4 	movi	r7,511
    f0e0:	01800044 	movi	r6,1
    f0e4:	e17fff17 	ldw	r5,-4(fp)
    f0e8:	01000074 	movhi	r4,1
    f0ec:	21030104 	addi	r4,r4,3076
    f0f0:	000efec0 	call	efec <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    f0f4:	01c07fc4 	movi	r7,511
    f0f8:	000d883a 	mov	r6,zero
    f0fc:	e17ffe17 	ldw	r5,-8(fp)
    f100:	01000074 	movhi	r4,1
    f104:	2102fe04 	addi	r4,r4,3064
    f108:	000efec0 	call	efec <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    f10c:	01c07fc4 	movi	r7,511
    f110:	01800044 	movi	r6,1
    f114:	e17ffd17 	ldw	r5,-12(fp)
    f118:	01000074 	movhi	r4,1
    f11c:	21030404 	addi	r4,r4,3088
    f120:	000efec0 	call	efec <alt_open_fd>
}  
    f124:	0001883a 	nop
    f128:	e037883a 	mov	sp,fp
    f12c:	dfc00117 	ldw	ra,4(sp)
    f130:	df000017 	ldw	fp,0(sp)
    f134:	dec00204 	addi	sp,sp,8
    f138:	f800283a 	ret

0000f13c <alt_get_errno>:
{
    f13c:	defffe04 	addi	sp,sp,-8
    f140:	dfc00115 	stw	ra,4(sp)
    f144:	df000015 	stw	fp,0(sp)
    f148:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f14c:	d0a00e17 	ldw	r2,-32712(gp)
    f150:	10000326 	beq	r2,zero,f160 <alt_get_errno+0x24>
    f154:	d0a00e17 	ldw	r2,-32712(gp)
    f158:	103ee83a 	callr	r2
    f15c:	00000106 	br	f164 <alt_get_errno+0x28>
    f160:	d0a73104 	addi	r2,gp,-25404
}
    f164:	e037883a 	mov	sp,fp
    f168:	dfc00117 	ldw	ra,4(sp)
    f16c:	df000017 	ldw	fp,0(sp)
    f170:	dec00204 	addi	sp,sp,8
    f174:	f800283a 	ret

0000f178 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    f178:	defffd04 	addi	sp,sp,-12
    f17c:	df000215 	stw	fp,8(sp)
    f180:	df000204 	addi	fp,sp,8
    f184:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    f188:	e0bffe17 	ldw	r2,-8(fp)
    f18c:	10800217 	ldw	r2,8(r2)
    f190:	10d00034 	orhi	r3,r2,16384
    f194:	e0bffe17 	ldw	r2,-8(fp)
    f198:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    f19c:	e03fff15 	stw	zero,-4(fp)
    f1a0:	00002306 	br	f230 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    f1a4:	e0ffff17 	ldw	r3,-4(fp)
    f1a8:	1805883a 	mov	r2,r3
    f1ac:	1085883a 	add	r2,r2,r2
    f1b0:	10c5883a 	add	r2,r2,r3
    f1b4:	100490ba 	slli	r2,r2,2
    f1b8:	00c00074 	movhi	r3,1
    f1bc:	10c7883a 	add	r3,r2,r3
    f1c0:	18c2fe17 	ldw	r3,3064(r3)
    f1c4:	e0bffe17 	ldw	r2,-8(fp)
    f1c8:	10800017 	ldw	r2,0(r2)
    f1cc:	1880151e 	bne	r3,r2,f224 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f1d0:	e0ffff17 	ldw	r3,-4(fp)
    f1d4:	1805883a 	mov	r2,r3
    f1d8:	1085883a 	add	r2,r2,r2
    f1dc:	10c5883a 	add	r2,r2,r3
    f1e0:	100490ba 	slli	r2,r2,2
    f1e4:	00c00074 	movhi	r3,1
    f1e8:	10c7883a 	add	r3,r2,r3
    f1ec:	18830017 	ldw	r2,3072(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
    f1f0:	10000c0e 	bge	r2,zero,f224 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
    f1f4:	e0ffff17 	ldw	r3,-4(fp)
    f1f8:	1805883a 	mov	r2,r3
    f1fc:	1085883a 	add	r2,r2,r2
    f200:	10c5883a 	add	r2,r2,r3
    f204:	100490ba 	slli	r2,r2,2
    f208:	00c00074 	movhi	r3,1
    f20c:	18c2fe04 	addi	r3,r3,3064
    f210:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f214:	e0fffe17 	ldw	r3,-8(fp)
    f218:	18800226 	beq	r3,r2,f224 <alt_file_locked+0xac>
    {
      return -EACCES;
    f21c:	00bffcc4 	movi	r2,-13
    f220:	00000806 	br	f244 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
    f224:	e0bfff17 	ldw	r2,-4(fp)
    f228:	10800044 	addi	r2,r2,1
    f22c:	e0bfff15 	stw	r2,-4(fp)
    f230:	d0a00d17 	ldw	r2,-32716(gp)
    f234:	1007883a 	mov	r3,r2
    f238:	e0bfff17 	ldw	r2,-4(fp)
    f23c:	18bfd92e 	bgeu	r3,r2,f1a4 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    f240:	0005883a 	mov	r2,zero
}
    f244:	e037883a 	mov	sp,fp
    f248:	df000017 	ldw	fp,0(sp)
    f24c:	dec00104 	addi	sp,sp,4
    f250:	f800283a 	ret

0000f254 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    f254:	defff604 	addi	sp,sp,-40
    f258:	dfc00915 	stw	ra,36(sp)
    f25c:	df000815 	stw	fp,32(sp)
    f260:	df000804 	addi	fp,sp,32
    f264:	e13ffa15 	stw	r4,-24(fp)
    f268:	e17ff915 	stw	r5,-28(fp)
    f26c:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    f270:	00bfffc4 	movi	r2,-1
    f274:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
    f278:	00bffb44 	movi	r2,-19
    f27c:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
    f280:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    f284:	d1600b04 	addi	r5,gp,-32724
    f288:	e13ffa17 	ldw	r4,-24(fp)
    f28c:	000f57c0 	call	f57c <alt_find_dev>
    f290:	e0bfff15 	stw	r2,-4(fp)
    f294:	e0bfff17 	ldw	r2,-4(fp)
    f298:	1000051e 	bne	r2,zero,f2b0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    f29c:	e13ffa17 	ldw	r4,-24(fp)
    f2a0:	000f60c0 	call	f60c <alt_find_file>
    f2a4:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
    f2a8:	00800044 	movi	r2,1
    f2ac:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    f2b0:	e0bfff17 	ldw	r2,-4(fp)
    f2b4:	10002c26 	beq	r2,zero,f368 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    f2b8:	e13fff17 	ldw	r4,-4(fp)
    f2bc:	000f7140 	call	f714 <alt_get_fd>
    f2c0:	e0bffe15 	stw	r2,-8(fp)
    f2c4:	e0bffe17 	ldw	r2,-8(fp)
    f2c8:	1000030e 	bge	r2,zero,f2d8 <open+0x84>
    {
      status = index;
    f2cc:	e0bffe17 	ldw	r2,-8(fp)
    f2d0:	e0bffd15 	stw	r2,-12(fp)
    f2d4:	00002606 	br	f370 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    f2d8:	e0fffe17 	ldw	r3,-8(fp)
    f2dc:	1805883a 	mov	r2,r3
    f2e0:	1085883a 	add	r2,r2,r2
    f2e4:	10c5883a 	add	r2,r2,r3
    f2e8:	100490ba 	slli	r2,r2,2
    f2ec:	00c00074 	movhi	r3,1
    f2f0:	18c2fe04 	addi	r3,r3,3064
    f2f4:	10c5883a 	add	r2,r2,r3
    f2f8:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f2fc:	e0fff917 	ldw	r3,-28(fp)
    f300:	00900034 	movhi	r2,16384
    f304:	10bfffc4 	addi	r2,r2,-1
    f308:	1886703a 	and	r3,r3,r2
    f30c:	e0bffb17 	ldw	r2,-20(fp)
    f310:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    f314:	e0bffc17 	ldw	r2,-16(fp)
    f318:	1000051e 	bne	r2,zero,f330 <open+0xdc>
    f31c:	e13ffb17 	ldw	r4,-20(fp)
    f320:	000f1780 	call	f178 <alt_file_locked>
    f324:	e0bffd15 	stw	r2,-12(fp)
    f328:	e0bffd17 	ldw	r2,-12(fp)
    f32c:	10001016 	blt	r2,zero,f370 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    f330:	e0bfff17 	ldw	r2,-4(fp)
    f334:	10800317 	ldw	r2,12(r2)
    f338:	10000826 	beq	r2,zero,f35c <open+0x108>
    f33c:	e0bfff17 	ldw	r2,-4(fp)
    f340:	10800317 	ldw	r2,12(r2)
    f344:	e1fff817 	ldw	r7,-32(fp)
    f348:	e1bff917 	ldw	r6,-28(fp)
    f34c:	e17ffa17 	ldw	r5,-24(fp)
    f350:	e13ffb17 	ldw	r4,-20(fp)
    f354:	103ee83a 	callr	r2
    f358:	00000106 	br	f360 <open+0x10c>
    f35c:	0005883a 	mov	r2,zero
    f360:	e0bffd15 	stw	r2,-12(fp)
    f364:	00000206 	br	f370 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    f368:	00bffb44 	movi	r2,-19
    f36c:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    f370:	e0bffd17 	ldw	r2,-12(fp)
    f374:	1000090e 	bge	r2,zero,f39c <open+0x148>
  {
    alt_release_fd (index);  
    f378:	e13ffe17 	ldw	r4,-8(fp)
    f37c:	000dcd40 	call	dcd4 <alt_release_fd>
    ALT_ERRNO = -status;
    f380:	000f13c0 	call	f13c <alt_get_errno>
    f384:	1007883a 	mov	r3,r2
    f388:	e0bffd17 	ldw	r2,-12(fp)
    f38c:	0085c83a 	sub	r2,zero,r2
    f390:	18800015 	stw	r2,0(r3)
    return -1;
    f394:	00bfffc4 	movi	r2,-1
    f398:	00000106 	br	f3a0 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    f39c:	e0bffe17 	ldw	r2,-8(fp)
}
    f3a0:	e037883a 	mov	sp,fp
    f3a4:	dfc00117 	ldw	ra,4(sp)
    f3a8:	df000017 	ldw	fp,0(sp)
    f3ac:	dec00204 	addi	sp,sp,8
    f3b0:	f800283a 	ret

0000f3b4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    f3b4:	defffa04 	addi	sp,sp,-24
    f3b8:	df000515 	stw	fp,20(sp)
    f3bc:	df000504 	addi	fp,sp,20
    f3c0:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
    f3c4:	0005303a 	rdctl	r2,status
    f3c8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f3cc:	e0fffc17 	ldw	r3,-16(fp)
    f3d0:	00bfff84 	movi	r2,-2
    f3d4:	1884703a 	and	r2,r3,r2
    f3d8:	1001703a 	wrctl	status,r2
  return context;
    f3dc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    f3e0:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
    f3e4:	e0bffb17 	ldw	r2,-20(fp)
    f3e8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    f3ec:	e0bffd17 	ldw	r2,-12(fp)
    f3f0:	10800017 	ldw	r2,0(r2)
    f3f4:	e0fffd17 	ldw	r3,-12(fp)
    f3f8:	18c00117 	ldw	r3,4(r3)
    f3fc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    f400:	e0bffd17 	ldw	r2,-12(fp)
    f404:	10800117 	ldw	r2,4(r2)
    f408:	e0fffd17 	ldw	r3,-12(fp)
    f40c:	18c00017 	ldw	r3,0(r3)
    f410:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    f414:	e0bffd17 	ldw	r2,-12(fp)
    f418:	e0fffd17 	ldw	r3,-12(fp)
    f41c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    f420:	e0bffd17 	ldw	r2,-12(fp)
    f424:	e0fffd17 	ldw	r3,-12(fp)
    f428:	10c00015 	stw	r3,0(r2)
    f42c:	e0bfff17 	ldw	r2,-4(fp)
    f430:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
    f434:	e0bffe17 	ldw	r2,-8(fp)
    f438:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    f43c:	0001883a 	nop
    f440:	e037883a 	mov	sp,fp
    f444:	df000017 	ldw	fp,0(sp)
    f448:	dec00104 	addi	sp,sp,4
    f44c:	f800283a 	ret

0000f450 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    f450:	defffb04 	addi	sp,sp,-20
    f454:	dfc00415 	stw	ra,16(sp)
    f458:	df000315 	stw	fp,12(sp)
    f45c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    f460:	d0a01117 	ldw	r2,-32700(gp)
    f464:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    f468:	d0a73817 	ldw	r2,-25376(gp)
    f46c:	10800044 	addi	r2,r2,1
    f470:	d0a73815 	stw	r2,-25376(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f474:	00002e06 	br	f530 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    f478:	e0bfff17 	ldw	r2,-4(fp)
    f47c:	10800017 	ldw	r2,0(r2)
    f480:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    f484:	e0bfff17 	ldw	r2,-4(fp)
    f488:	10800403 	ldbu	r2,16(r2)
    f48c:	10803fcc 	andi	r2,r2,255
    f490:	10000426 	beq	r2,zero,f4a4 <alt_tick+0x54>
    f494:	d0a73817 	ldw	r2,-25376(gp)
    f498:	1000021e 	bne	r2,zero,f4a4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    f49c:	e0bfff17 	ldw	r2,-4(fp)
    f4a0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    f4a4:	e0bfff17 	ldw	r2,-4(fp)
    f4a8:	10800217 	ldw	r2,8(r2)
    f4ac:	d0e73817 	ldw	r3,-25376(gp)
    f4b0:	18801d36 	bltu	r3,r2,f528 <alt_tick+0xd8>
    f4b4:	e0bfff17 	ldw	r2,-4(fp)
    f4b8:	10800403 	ldbu	r2,16(r2)
    f4bc:	10803fcc 	andi	r2,r2,255
    f4c0:	1000191e 	bne	r2,zero,f528 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    f4c4:	e0bfff17 	ldw	r2,-4(fp)
    f4c8:	10800317 	ldw	r2,12(r2)
    f4cc:	e0ffff17 	ldw	r3,-4(fp)
    f4d0:	18c00517 	ldw	r3,20(r3)
    f4d4:	1809883a 	mov	r4,r3
    f4d8:	103ee83a 	callr	r2
    f4dc:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    f4e0:	e0bffd17 	ldw	r2,-12(fp)
    f4e4:	1000031e 	bne	r2,zero,f4f4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    f4e8:	e13fff17 	ldw	r4,-4(fp)
    f4ec:	000f3b40 	call	f3b4 <alt_alarm_stop>
    f4f0:	00000d06 	br	f528 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    f4f4:	e0bfff17 	ldw	r2,-4(fp)
    f4f8:	10c00217 	ldw	r3,8(r2)
    f4fc:	e0bffd17 	ldw	r2,-12(fp)
    f500:	1887883a 	add	r3,r3,r2
    f504:	e0bfff17 	ldw	r2,-4(fp)
    f508:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    f50c:	e0bfff17 	ldw	r2,-4(fp)
    f510:	10c00217 	ldw	r3,8(r2)
    f514:	d0a73817 	ldw	r2,-25376(gp)
    f518:	1880032e 	bgeu	r3,r2,f528 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    f51c:	e0bfff17 	ldw	r2,-4(fp)
    f520:	00c00044 	movi	r3,1
    f524:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    f528:	e0bffe17 	ldw	r2,-8(fp)
    f52c:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
    f530:	e0ffff17 	ldw	r3,-4(fp)
    f534:	d0a01104 	addi	r2,gp,-32700
    f538:	18bfcf1e 	bne	r3,r2,f478 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f53c:	0001883a 	nop
}
    f540:	0001883a 	nop
    f544:	e037883a 	mov	sp,fp
    f548:	dfc00117 	ldw	ra,4(sp)
    f54c:	df000017 	ldw	fp,0(sp)
    f550:	dec00204 	addi	sp,sp,8
    f554:	f800283a 	ret

0000f558 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    f558:	deffff04 	addi	sp,sp,-4
    f55c:	df000015 	stw	fp,0(sp)
    f560:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    f564:	000170fa 	wrctl	ienable,zero
}
    f568:	0001883a 	nop
    f56c:	e037883a 	mov	sp,fp
    f570:	df000017 	ldw	fp,0(sp)
    f574:	dec00104 	addi	sp,sp,4
    f578:	f800283a 	ret

0000f57c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f57c:	defffa04 	addi	sp,sp,-24
    f580:	dfc00515 	stw	ra,20(sp)
    f584:	df000415 	stw	fp,16(sp)
    f588:	df000404 	addi	fp,sp,16
    f58c:	e13ffd15 	stw	r4,-12(fp)
    f590:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f594:	e0bffc17 	ldw	r2,-16(fp)
    f598:	10800017 	ldw	r2,0(r2)
    f59c:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f5a0:	e13ffd17 	ldw	r4,-12(fp)
    f5a4:	0001adc0 	call	1adc <strlen>
    f5a8:	10800044 	addi	r2,r2,1
    f5ac:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f5b0:	00000d06 	br	f5e8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f5b4:	e0bfff17 	ldw	r2,-4(fp)
    f5b8:	10800217 	ldw	r2,8(r2)
    f5bc:	e0fffe17 	ldw	r3,-8(fp)
    f5c0:	180d883a 	mov	r6,r3
    f5c4:	e17ffd17 	ldw	r5,-12(fp)
    f5c8:	1009883a 	mov	r4,r2
    f5cc:	000f8ac0 	call	f8ac <memcmp>
    f5d0:	1000021e 	bne	r2,zero,f5dc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f5d4:	e0bfff17 	ldw	r2,-4(fp)
    f5d8:	00000706 	br	f5f8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f5dc:	e0bfff17 	ldw	r2,-4(fp)
    f5e0:	10800017 	ldw	r2,0(r2)
    f5e4:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
    f5e8:	e0ffff17 	ldw	r3,-4(fp)
    f5ec:	e0bffc17 	ldw	r2,-16(fp)
    f5f0:	18bff01e 	bne	r3,r2,f5b4 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
    f5f4:	0005883a 	mov	r2,zero
}
    f5f8:	e037883a 	mov	sp,fp
    f5fc:	dfc00117 	ldw	ra,4(sp)
    f600:	df000017 	ldw	fp,0(sp)
    f604:	dec00204 	addi	sp,sp,8
    f608:	f800283a 	ret

0000f60c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f60c:	defffb04 	addi	sp,sp,-20
    f610:	dfc00415 	stw	ra,16(sp)
    f614:	df000315 	stw	fp,12(sp)
    f618:	df000304 	addi	fp,sp,12
    f61c:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f620:	d0a00917 	ldw	r2,-32732(gp)
    f624:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f628:	00003106 	br	f6f0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    f62c:	e0bfff17 	ldw	r2,-4(fp)
    f630:	10800217 	ldw	r2,8(r2)
    f634:	1009883a 	mov	r4,r2
    f638:	0001adc0 	call	1adc <strlen>
    f63c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    f640:	e0bfff17 	ldw	r2,-4(fp)
    f644:	10c00217 	ldw	r3,8(r2)
    f648:	e0bffe17 	ldw	r2,-8(fp)
    f64c:	10bfffc4 	addi	r2,r2,-1
    f650:	1885883a 	add	r2,r3,r2
    f654:	10800003 	ldbu	r2,0(r2)
    f658:	10803fcc 	andi	r2,r2,255
    f65c:	1080201c 	xori	r2,r2,128
    f660:	10bfe004 	addi	r2,r2,-128
    f664:	10800bd8 	cmpnei	r2,r2,47
    f668:	1000031e 	bne	r2,zero,f678 <alt_find_file+0x6c>
    {
      len -= 1;
    f66c:	e0bffe17 	ldw	r2,-8(fp)
    f670:	10bfffc4 	addi	r2,r2,-1
    f674:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f678:	e0bffe17 	ldw	r2,-8(fp)
    f67c:	e0fffd17 	ldw	r3,-12(fp)
    f680:	1885883a 	add	r2,r3,r2
    f684:	10800003 	ldbu	r2,0(r2)
    f688:	10803fcc 	andi	r2,r2,255
    f68c:	1080201c 	xori	r2,r2,128
    f690:	10bfe004 	addi	r2,r2,-128
    f694:	10800be0 	cmpeqi	r2,r2,47
    f698:	1000081e 	bne	r2,zero,f6bc <alt_find_file+0xb0>
    f69c:	e0bffe17 	ldw	r2,-8(fp)
    f6a0:	e0fffd17 	ldw	r3,-12(fp)
    f6a4:	1885883a 	add	r2,r3,r2
    f6a8:	10800003 	ldbu	r2,0(r2)
    f6ac:	10803fcc 	andi	r2,r2,255
    f6b0:	1080201c 	xori	r2,r2,128
    f6b4:	10bfe004 	addi	r2,r2,-128
    f6b8:	10000a1e 	bne	r2,zero,f6e4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    f6bc:	e0bfff17 	ldw	r2,-4(fp)
    f6c0:	10800217 	ldw	r2,8(r2)
    f6c4:	e0fffe17 	ldw	r3,-8(fp)
    f6c8:	180d883a 	mov	r6,r3
    f6cc:	e17ffd17 	ldw	r5,-12(fp)
    f6d0:	1009883a 	mov	r4,r2
    f6d4:	000f8ac0 	call	f8ac <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
    f6d8:	1000021e 	bne	r2,zero,f6e4 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
    f6dc:	e0bfff17 	ldw	r2,-4(fp)
    f6e0:	00000706 	br	f700 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    f6e4:	e0bfff17 	ldw	r2,-4(fp)
    f6e8:	10800017 	ldw	r2,0(r2)
    f6ec:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
    f6f0:	e0ffff17 	ldw	r3,-4(fp)
    f6f4:	d0a00904 	addi	r2,gp,-32732
    f6f8:	18bfcc1e 	bne	r3,r2,f62c <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
    f6fc:	0005883a 	mov	r2,zero
}
    f700:	e037883a 	mov	sp,fp
    f704:	dfc00117 	ldw	ra,4(sp)
    f708:	df000017 	ldw	fp,0(sp)
    f70c:	dec00204 	addi	sp,sp,8
    f710:	f800283a 	ret

0000f714 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f714:	defffc04 	addi	sp,sp,-16
    f718:	df000315 	stw	fp,12(sp)
    f71c:	df000304 	addi	fp,sp,12
    f720:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
    f724:	00bffa04 	movi	r2,-24
    f728:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f72c:	e03fff15 	stw	zero,-4(fp)
    f730:	00001d06 	br	f7a8 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
    f734:	e0ffff17 	ldw	r3,-4(fp)
    f738:	1805883a 	mov	r2,r3
    f73c:	1085883a 	add	r2,r2,r2
    f740:	10c5883a 	add	r2,r2,r3
    f744:	100490ba 	slli	r2,r2,2
    f748:	00c00074 	movhi	r3,1
    f74c:	10c7883a 	add	r3,r2,r3
    f750:	1882fe17 	ldw	r2,3064(r3)
    f754:	1000111e 	bne	r2,zero,f79c <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
    f758:	e0ffff17 	ldw	r3,-4(fp)
    f75c:	1805883a 	mov	r2,r3
    f760:	1085883a 	add	r2,r2,r2
    f764:	10c5883a 	add	r2,r2,r3
    f768:	100490ba 	slli	r2,r2,2
    f76c:	e13ffd17 	ldw	r4,-12(fp)
    f770:	00c00074 	movhi	r3,1
    f774:	10c7883a 	add	r3,r2,r3
    f778:	1902fe15 	stw	r4,3064(r3)
      if (i > alt_max_fd)
    f77c:	d0e00d17 	ldw	r3,-32716(gp)
    f780:	e0bfff17 	ldw	r2,-4(fp)
    f784:	1880020e 	bge	r3,r2,f790 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
    f788:	e0bfff17 	ldw	r2,-4(fp)
    f78c:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
    f790:	e0bfff17 	ldw	r2,-4(fp)
    f794:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
    f798:	00000706 	br	f7b8 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
    f79c:	e0bfff17 	ldw	r2,-4(fp)
    f7a0:	10800044 	addi	r2,r2,1
    f7a4:	e0bfff15 	stw	r2,-4(fp)
    f7a8:	e0bfff17 	ldw	r2,-4(fp)
    f7ac:	10800810 	cmplti	r2,r2,32
    f7b0:	103fe01e 	bne	r2,zero,f734 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
    f7b4:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f7b8:	e0bffe17 	ldw	r2,-8(fp)
}
    f7bc:	e037883a 	mov	sp,fp
    f7c0:	df000017 	ldw	fp,0(sp)
    f7c4:	dec00104 	addi	sp,sp,4
    f7c8:	f800283a 	ret

0000f7cc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f7cc:	defffe04 	addi	sp,sp,-8
    f7d0:	df000115 	stw	fp,4(sp)
    f7d4:	df000104 	addi	fp,sp,4
    f7d8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f7dc:	e0bfff17 	ldw	r2,-4(fp)
    f7e0:	10bffe84 	addi	r2,r2,-6
    f7e4:	10c00428 	cmpgeui	r3,r2,16
    f7e8:	1800191e 	bne	r3,zero,f850 <alt_exception_cause_generated_bad_addr+0x84>
    f7ec:	100690ba 	slli	r3,r2,2
    f7f0:	00800074 	movhi	r2,1
    f7f4:	1885883a 	add	r2,r3,r2
    f7f8:	10be0017 	ldw	r2,-2048(r2)
    f7fc:	1000683a 	jmp	r2
    f800:	0000f840 	call	f84 <_malloc_r+0x438>
    f804:	0000f840 	call	f84 <_malloc_r+0x438>
    f808:	0000f850 	cmplti	zero,zero,993
    f80c:	0000f850 	cmplti	zero,zero,993
    f810:	0000f850 	cmplti	zero,zero,993
    f814:	0000f840 	call	f84 <_malloc_r+0x438>
    f818:	0000f848 	cmpgei	zero,zero,993
    f81c:	0000f850 	cmplti	zero,zero,993
    f820:	0000f840 	call	f84 <_malloc_r+0x438>
    f824:	0000f840 	call	f84 <_malloc_r+0x438>
    f828:	0000f850 	cmplti	zero,zero,993
    f82c:	0000f840 	call	f84 <_malloc_r+0x438>
    f830:	0000f848 	cmpgei	zero,zero,993
    f834:	0000f850 	cmplti	zero,zero,993
    f838:	0000f850 	cmplti	zero,zero,993
    f83c:	0000f840 	call	f84 <_malloc_r+0x438>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f840:	00800044 	movi	r2,1
    f844:	00000306 	br	f854 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f848:	0005883a 	mov	r2,zero
    f84c:	00000106 	br	f854 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
    f850:	0005883a 	mov	r2,zero
  }
}
    f854:	e037883a 	mov	sp,fp
    f858:	df000017 	ldw	fp,0(sp)
    f85c:	dec00104 	addi	sp,sp,4
    f860:	f800283a 	ret

0000f864 <atexit>:
    f864:	200b883a 	mov	r5,r4
    f868:	000f883a 	mov	r7,zero
    f86c:	000d883a 	mov	r6,zero
    f870:	0009883a 	mov	r4,zero
    f874:	000f9381 	jmpi	f938 <__register_exitproc>

0000f878 <exit>:
    f878:	defffe04 	addi	sp,sp,-8
    f87c:	000b883a 	mov	r5,zero
    f880:	dc000015 	stw	r16,0(sp)
    f884:	dfc00115 	stw	ra,4(sp)
    f888:	2021883a 	mov	r16,r4
    f88c:	000f9c80 	call	f9c8 <__call_exitprocs>
    f890:	00800074 	movhi	r2,1
    f894:	11077b17 	ldw	r4,7660(r2)
    f898:	20800f17 	ldw	r2,60(r4)
    f89c:	10000126 	beq	r2,zero,f8a4 <exit+0x2c>
    f8a0:	103ee83a 	callr	r2
    f8a4:	8009883a 	mov	r4,r16
    f8a8:	000fae00 	call	fae0 <_exit>

0000f8ac <memcmp>:
    f8ac:	30800130 	cmpltui	r2,r6,4
    f8b0:	10000b1e 	bne	r2,zero,f8e0 <memcmp+0x34>
    f8b4:	2144b03a 	or	r2,r4,r5
    f8b8:	108000cc 	andi	r2,r2,3
    f8bc:	10001a1e 	bne	r2,zero,f928 <memcmp+0x7c>
    f8c0:	20c00017 	ldw	r3,0(r4)
    f8c4:	28800017 	ldw	r2,0(r5)
    f8c8:	1880171e 	bne	r3,r2,f928 <memcmp+0x7c>
    f8cc:	31bfff04 	addi	r6,r6,-4
    f8d0:	30800128 	cmpgeui	r2,r6,4
    f8d4:	21000104 	addi	r4,r4,4
    f8d8:	29400104 	addi	r5,r5,4
    f8dc:	103ff81e 	bne	r2,zero,f8c0 <memcmp+0x14>
    f8e0:	30ffffc4 	addi	r3,r6,-1
    f8e4:	30000e26 	beq	r6,zero,f920 <memcmp+0x74>
    f8e8:	29800003 	ldbu	r6,0(r5)
    f8ec:	20800003 	ldbu	r2,0(r4)
    f8f0:	30800f1e 	bne	r6,r2,f930 <memcmp+0x84>
    f8f4:	18800044 	addi	r2,r3,1
    f8f8:	20c00044 	addi	r3,r4,1
    f8fc:	2089883a 	add	r4,r4,r2
    f900:	00000506 	br	f918 <memcmp+0x6c>
    f904:	18800003 	ldbu	r2,0(r3)
    f908:	29800003 	ldbu	r6,0(r5)
    f90c:	18c00044 	addi	r3,r3,1
    f910:	10803fcc 	andi	r2,r2,255
    f914:	1180061e 	bne	r2,r6,f930 <memcmp+0x84>
    f918:	29400044 	addi	r5,r5,1
    f91c:	193ff91e 	bne	r3,r4,f904 <memcmp+0x58>
    f920:	0005883a 	mov	r2,zero
    f924:	f800283a 	ret
    f928:	30ffffc4 	addi	r3,r6,-1
    f92c:	003fee06 	br	f8e8 <memcmp+0x3c>
    f930:	1185c83a 	sub	r2,r2,r6
    f934:	f800283a 	ret

0000f938 <__register_exitproc>:
    f938:	00800074 	movhi	r2,1
    f93c:	10c77b17 	ldw	r3,7660(r2)
    f940:	18805217 	ldw	r2,328(r3)
    f944:	10001726 	beq	r2,zero,f9a4 <__register_exitproc+0x6c>
    f948:	10c00117 	ldw	r3,4(r2)
    f94c:	1a000808 	cmpgei	r8,r3,32
    f950:	40001b1e 	bne	r8,zero,f9c0 <__register_exitproc+0x88>
    f954:	20000b26 	beq	r4,zero,f984 <__register_exitproc+0x4c>
    f958:	181090ba 	slli	r8,r3,2
    f95c:	02400044 	movi	r9,1
    f960:	48d2983a 	sll	r9,r9,r3
    f964:	1211883a 	add	r8,r2,r8
    f968:	41802215 	stw	r6,136(r8)
    f96c:	11806217 	ldw	r6,392(r2)
    f970:	21000098 	cmpnei	r4,r4,2
    f974:	324cb03a 	or	r6,r6,r9
    f978:	11806215 	stw	r6,392(r2)
    f97c:	41c04215 	stw	r7,264(r8)
    f980:	20000b26 	beq	r4,zero,f9b0 <__register_exitproc+0x78>
    f984:	19000084 	addi	r4,r3,2
    f988:	200890ba 	slli	r4,r4,2
    f98c:	18c00044 	addi	r3,r3,1
    f990:	10c00115 	stw	r3,4(r2)
    f994:	1105883a 	add	r2,r2,r4
    f998:	11400015 	stw	r5,0(r2)
    f99c:	0005883a 	mov	r2,zero
    f9a0:	f800283a 	ret
    f9a4:	18805304 	addi	r2,r3,332
    f9a8:	18805215 	stw	r2,328(r3)
    f9ac:	003fe606 	br	f948 <__register_exitproc+0x10>
    f9b0:	11006317 	ldw	r4,396(r2)
    f9b4:	2252b03a 	or	r9,r4,r9
    f9b8:	12406315 	stw	r9,396(r2)
    f9bc:	003ff106 	br	f984 <__register_exitproc+0x4c>
    f9c0:	00bfffc4 	movi	r2,-1
    f9c4:	f800283a 	ret

0000f9c8 <__call_exitprocs>:
    f9c8:	defff704 	addi	sp,sp,-36
    f9cc:	00800074 	movhi	r2,1
    f9d0:	ddc00715 	stw	r23,28(sp)
    f9d4:	15c77b17 	ldw	r23,7660(r2)
    f9d8:	dd400515 	stw	r21,20(sp)
    f9dc:	dd000415 	stw	r20,16(sp)
    f9e0:	dcc00315 	stw	r19,12(sp)
    f9e4:	dfc00815 	stw	ra,32(sp)
    f9e8:	dd800615 	stw	r22,24(sp)
    f9ec:	dc800215 	stw	r18,8(sp)
    f9f0:	dc400115 	stw	r17,4(sp)
    f9f4:	dc000015 	stw	r16,0(sp)
    f9f8:	2029883a 	mov	r20,r4
    f9fc:	282b883a 	mov	r21,r5
    fa00:	04c00044 	movi	r19,1
    fa04:	bc805217 	ldw	r18,328(r23)
    fa08:	90000d26 	beq	r18,zero,fa40 <__call_exitprocs+0x78>
    fa0c:	94000117 	ldw	r16,4(r18)
    fa10:	847fffc4 	addi	r17,r16,-1
    fa14:	88000a16 	blt	r17,zero,fa40 <__call_exitprocs+0x78>
    fa18:	84000044 	addi	r16,r16,1
    fa1c:	802090ba 	slli	r16,r16,2
    fa20:	9421883a 	add	r16,r18,r16
    fa24:	a8001126 	beq	r21,zero,fa6c <__call_exitprocs+0xa4>
    fa28:	80804017 	ldw	r2,256(r16)
    fa2c:	15400f26 	beq	r2,r21,fa6c <__call_exitprocs+0xa4>
    fa30:	8c7fffc4 	addi	r17,r17,-1
    fa34:	88bfffd8 	cmpnei	r2,r17,-1
    fa38:	843fff04 	addi	r16,r16,-4
    fa3c:	103ff91e 	bne	r2,zero,fa24 <__call_exitprocs+0x5c>
    fa40:	dfc00817 	ldw	ra,32(sp)
    fa44:	ddc00717 	ldw	r23,28(sp)
    fa48:	dd800617 	ldw	r22,24(sp)
    fa4c:	dd400517 	ldw	r21,20(sp)
    fa50:	dd000417 	ldw	r20,16(sp)
    fa54:	dcc00317 	ldw	r19,12(sp)
    fa58:	dc800217 	ldw	r18,8(sp)
    fa5c:	dc400117 	ldw	r17,4(sp)
    fa60:	dc000017 	ldw	r16,0(sp)
    fa64:	dec00904 	addi	sp,sp,36
    fa68:	f800283a 	ret
    fa6c:	90800117 	ldw	r2,4(r18)
    fa70:	81800017 	ldw	r6,0(r16)
    fa74:	10bfffc4 	addi	r2,r2,-1
    fa78:	14401526 	beq	r2,r17,fad0 <__call_exitprocs+0x108>
    fa7c:	80000015 	stw	zero,0(r16)
    fa80:	303feb26 	beq	r6,zero,fa30 <__call_exitprocs+0x68>
    fa84:	9c46983a 	sll	r3,r19,r17
    fa88:	90806217 	ldw	r2,392(r18)
    fa8c:	95800117 	ldw	r22,4(r18)
    fa90:	1884703a 	and	r2,r3,r2
    fa94:	1000061e 	bne	r2,zero,fab0 <__call_exitprocs+0xe8>
    fa98:	303ee83a 	callr	r6
    fa9c:	90800117 	ldw	r2,4(r18)
    faa0:	15bfd81e 	bne	r2,r22,fa04 <__call_exitprocs+0x3c>
    faa4:	b8805217 	ldw	r2,328(r23)
    faa8:	14bfe126 	beq	r2,r18,fa30 <__call_exitprocs+0x68>
    faac:	003fd506 	br	fa04 <__call_exitprocs+0x3c>
    fab0:	90806317 	ldw	r2,396(r18)
    fab4:	81002017 	ldw	r4,128(r16)
    fab8:	1886703a 	and	r3,r3,r2
    fabc:	1800061e 	bne	r3,zero,fad8 <__call_exitprocs+0x110>
    fac0:	200b883a 	mov	r5,r4
    fac4:	a009883a 	mov	r4,r20
    fac8:	303ee83a 	callr	r6
    facc:	003ff306 	br	fa9c <__call_exitprocs+0xd4>
    fad0:	94400115 	stw	r17,4(r18)
    fad4:	003fea06 	br	fa80 <__call_exitprocs+0xb8>
    fad8:	303ee83a 	callr	r6
    fadc:	003fef06 	br	fa9c <__call_exitprocs+0xd4>

0000fae0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    fae0:	defffd04 	addi	sp,sp,-12
    fae4:	df000215 	stw	fp,8(sp)
    fae8:	df000204 	addi	fp,sp,8
    faec:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    faf0:	0001883a 	nop
    faf4:	e0bffe17 	ldw	r2,-8(fp)
    faf8:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    fafc:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    fb00:	10000226 	beq	r2,zero,fb0c <_exit+0x2c>
    ALT_SIM_FAIL();
    fb04:	002af070 	cmpltui	zero,zero,43969
    fb08:	00000106 	br	fb10 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    fb0c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    fb10:	003fff06 	br	fb10 <_exit+0x30>
