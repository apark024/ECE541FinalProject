
nios_knn.elf:     file format elf32-littlenios2
nios_knn.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000224

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f950 memsz 0x0000f950 flags r-x
    LOAD off    0x00010970 vaddr 0x0000f970 paddr 0x0001159c align 2**12
         filesz 0x00001c2c memsz 0x00001c2c flags rw-
    LOAD off    0x000131c8 vaddr 0x000131c8 paddr 0x000131c8 align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000204  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f174  00000224  00000224  00001224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000005d8  0000f398  0000f398  00010398  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c2c  0000f970  0001159c  00010970  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  000131c8  000131c8  000131c8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00013320  00013320  0001259c  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  0001259c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ee8  00000000  00000000  000125c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000468d3  00000000  00000000  000134b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000e34e  00000000  00000000  00059d83  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001751a  00000000  00000000  000680d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000202c  00000000  00000000  0007f5ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003edd  00000000  00000000  00081618  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001c425  00000000  00000000  000854f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000a191c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001c38  00000000  00000000  000a1930  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000a65c3  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000a65c6  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000a65d2  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000a65d3  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  000a65d4  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000a65df  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000a65ea  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000c  00000000  00000000  000a65f5  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004a  00000000  00000000  000a6601  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000224 l    d  .text	00000000 .text
0000f398 l    d  .rodata	00000000 .rodata
0000f970 l    d  .rwdata	00000000 .rwdata
000131c8 l    d  .bss	00000000 .bss
00013320 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/nothi/Documents/Quartus/ECE541FinalProject/FinalProject/synthesis/software/nios_knn_bsp//obj/HAL/src/crt0.o
0000025c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 nios_knn.c
0000f970 l     O .rwdata	00000040 flowers.2609
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000026f8 l     F .text	000000c0 __sbprintf
0000f442 l     O .rodata	00000010 blanks.5226
0000f432 l     O .rodata	00000010 zeroes.5227
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002918 l     F .text	00000234 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000044c4 l     F .text	00000008 __fp_lock
000044d8 l     F .text	00000168 __sinit.part.0
00004640 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000f9b0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f464 l     O .rodata	0000000c p05.4024
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
000077c0 l     F .text	000000f4 __sprint_r.part.0
00008c20 l     F .text	000000c0 __sbprintf
0000f598 l     O .rodata	00000010 blanks.5203
0000f588 l     O .rodata	00000010 zeroes.5204
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000ce20 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000cf38 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000cf64 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d05c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d148 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d234 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d414 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001158c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000d678 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000d7b8 l     F .text	00000034 alt_dev_reg
000104f0 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000da90 l     F .text	00000204 altera_avalon_jtag_uart_irq
0000dc94 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e41c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e870 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000e9c0 l     F .text	0000003c alt_get_errno
0000e9fc l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000131f4 g     O .bss	00000004 alt_instruction_exception_handler
00006ea8 g     F .text	00000074 _mprec_log10
00006f88 g     F .text	00000074 __any_on
000091c0 g     F .text	00000058 _isatty_r
0000f470 g     O .rodata	00000028 __mprec_tinytens
0000d350 g     F .text	0000007c alt_main
000003e4 g     F .text	000000cc _puts_r
00013220 g     O .bss	00000100 alt_irq
000092a8 g     F .text	00000064 _lseek_r
0001159c g       *ABS*	00000000 __flash_rwdata_start
0000b7e8 g     F .text	00000080 .hidden __eqdf2
00013320 g       *ABS*	00000000 __alt_heap_start
000003ac g     F .text	00000038 printf
000095f4 g     F .text	0000006c _wcrtomb_r
000002ac g     F .text	000000a4 printClassificationResult
0000775c g     F .text	0000005c __sseek
000047d0 g     F .text	00000010 __sinit
00009498 g     F .text	00000148 __swbuf_r
00009218 g     F .text	00000070 _setlocale_r
00004648 g     F .text	00000078 __sfmoreglue
0000d3f0 g     F .text	00000024 __malloc_unlock
00005e2c g     F .text	0000012c memmove
000047bc g     F .text	00000014 _cleanup
00006048 g     F .text	000000a4 _Balloc
0000b868 g     F .text	000000f0 .hidden __gtdf2
0000eddc g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
0000525c g     F .text	00000008 __localeconv_l
00000020 g       *ABS*	00000000 __flash_exceptions_start
00009160 g     F .text	00000060 _fstat_r
000131d4 g     O .bss	00000004 errno
000076d4 g     F .text	00000008 __seofread
000131e0 g     O .bss	00000004 alt_argv
00019550 g       *ABS*	00000000 _gp
00010370 g     O .rwdata	00000180 alt_fd_list
00000260 g     F .text	0000004c resolveToFlower
0000ee00 g     F .text	00000090 alt_find_dev
00005d2c g     F .text	00000100 memcpy
000044cc g     F .text	0000000c _cleanup_r
0000cc68 g     F .text	000000c8 .hidden __floatsidf
0000e944 g     F .text	0000007c alt_io_redirect
0000b958 g     F .text	000000f0 .hidden __ltdf2
0000f398 g       *ABS*	00000000 __DTOR_END__
000004b0 g     F .text	00000010 puts
0000f050 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00006e04 g     F .text	000000a4 __ratio
00008c08 g     F .text	00000018 __vfiprintf_internal
0000de90 g     F .text	0000021c altera_avalon_jtag_uart_read
0000037c g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000a3fc g     F .text	00000064 .hidden __udivsi3
0000d098 g     F .text	000000b0 isatty
0000f4c0 g     O .rodata	000000c8 __mprec_tens
000131d0 g     O .bss	00000004 __malloc_top_pad
00005264 g     F .text	0000000c _localeconv_r
00006470 g     F .text	00000034 __i2b
00004c30 g     F .text	000004d4 __sfvwrite_r
00007628 g     F .text	00000058 _sbrk_r
0000935c g     F .text	00000064 _read_r
00011584 g     O .rwdata	00000004 alt_max_fd
00008e68 g     F .text	000000f8 _fclose_r
0000449c g     F .text	00000028 fflush
000131cc g     O .bss	00000004 __malloc_max_sbrked_mem
0000a4e4 g     F .text	000009a0 .hidden __adddf3
00006bb8 g     F .text	00000104 __b2d
00009d3c g     F .text	000005c8 .hidden __umoddi3
0000d270 g     F .text	000000e0 lseek
00011564 g     O .rwdata	00000004 _global_impure_ptr
00006ffc g     F .text	0000062c _realloc_r
00013320 g       *ABS*	00000000 __bss_end
0000e78c g     F .text	000000e4 alt_iic_isr_register
0000ecd4 g     F .text	00000108 alt_tick
00009720 g     F .text	0000061c .hidden __udivdi3
000090c0 g     F .text	00000024 _fputwc_r
0000f498 g     O .rodata	00000028 __mprec_bigtens
0000624c g     F .text	00000110 __s2b
0000cd30 g     F .text	0000009c .hidden __floatunsidf
00006948 g     F .text	00000058 __mcmp
000047f0 g     F .text	00000014 __fp_lock_all
0000e740 g     F .text	0000004c alt_ic_irq_enabled
0000ec38 g     F .text	0000009c alt_alarm_stop
000131e8 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000c8 alt_irq_handler
00010348 g     O .rwdata	00000028 alt_dev_null
0000e3fc g     F .text	00000020 alt_dcache_flush_all
0000635c g     F .text	00000064 __hi0bits
0000cbe8 g     F .text	00000080 .hidden __fixdfsi
0001159c g       *ABS*	00000000 __ram_rwdata_end
0001157c g     O .rwdata	00000008 alt_dev_list
0000d6b4 g     F .text	00000104 write
0000f970 g       *ABS*	00000000 __ram_rodata_end
0000cfa0 g     F .text	000000bc fstat
0000b958 g     F .text	000000f0 .hidden __ledf2
000066e4 g     F .text	00000128 __pow5mult
000078cc g     F .text	0000133c ___vfiprintf_internal_r
0000a460 g     F .text	0000005c .hidden __umodsi3
00013320 g       *ABS*	00000000 end
00011550 g     O .rwdata	00000004 leds
0000d9d0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001c4 g     F .exceptions	00000060 alt_instruction_exception_entry
0000f398 g       *ABS*	00000000 __CTOR_LIST__
0001f400 g       *ABS*	00000000 __alt_stack_pointer
0000cdcc g     F .text	00000054 .hidden __clzsi2
0000e0ac g     F .text	00000224 altera_avalon_jtag_uart_write
000047e0 g     F .text	00000004 __sfp_lock_acquire
00005c44 g     F .text	000000e8 memchr
00000558 g     F .text	00002188 ___vfprintf_internal_r
00004934 g     F .text	000002fc _free_r
0000f6b9 g     O .rodata	00000180 _ctype_b
00009288 g     F .text	0000000c __locale_mb_cur_max
0000f24c g     F .text	00000118 __call_exitprocs
0001156c g     O .rwdata	00000004 __malloc_sbrk_base
00000224 g     F .text	0000003c _start
000131ec g     O .bss	00000004 _alt_tick_rate
0000680c g     F .text	0000013c __lshift
000131f0 g     O .bss	00000004 _alt_nticks
0000d450 g     F .text	00000108 read
0000d824 g     F .text	00000048 alt_sys_init
00011558 g     O .rwdata	00000004 btns
0000f1bc g     F .text	00000090 __register_exitproc
000064a4 g     F .text	00000240 __multiply
0000dd34 g     F .text	00000068 altera_avalon_jtag_uart_close
0000a4bc g     F .text	00000028 .hidden __mulsi3
0000f970 g       *ABS*	00000000 __ram_rwdata_start
0000f398 g       *ABS*	00000000 __ram_rodata_start
000131f8 g     O .bss	00000028 __malloc_current_mallinfo
00006cbc g     F .text	00000148 __d2b
0000d86c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000ef98 g     F .text	000000b8 alt_get_fd
00008d44 g     F .text	00000058 _close_r
0000f130 g     F .text	0000008c memcmp
0000d92c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013320 g       *ABS*	00000000 __alt_stack_base
0000d97c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000027b8 g     F .text	00000160 __swsetup_r
0000ae84 g     F .text	00000964 .hidden __divdf3
000046c0 g     F .text	000000fc __sfp
00006f1c g     F .text	0000006c __copybits
0000fdd4 g     O .rwdata	00000408 __malloc_av_
000047ec g     F .text	00000004 __sinit_lock_release
0000ba48 g     F .text	000007e0 .hidden __muldf3
00007680 g     F .text	00000054 __sread
0001155c g     O .rwdata	00000004 nios_input
0000ee90 g     F .text	00000108 alt_find_file
0000e458 g     F .text	000000a4 alt_dev_llist_insert
0000d3cc g     F .text	00000024 __malloc_lock
0000d5c8 g     F .text	000000b0 sbrk
0000443c g     F .text	00000060 _fflush_r
00008d9c g     F .text	000000cc _calloc_r
000131c8 g       *ABS*	00000000 __bss_start
00005f58 g     F .text	000000f0 memset
00011560 g     O .rwdata	00000004 nios_output
00000350 g     F .text	0000002c main
000131e4 g     O .bss	00000004 alt_envp
000131c8 g     O .bss	00000004 __malloc_max_total_mem
0000d8cc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000095e0 g     F .text	00000014 __swbuf
000077b8 g     F .text	00000008 __sclose
0001f400 g       *ABS*	00000000 __alt_heap_limit
00008f60 g     F .text	00000010 fclose
00002b4c g     F .text	000016c8 _dtoa_r
00005450 g     F .text	000007f4 _malloc_r
000096f0 g     F .text	00000030 __ascii_wctomb
00011588 g     O .rwdata	00000004 alt_errno
00005104 g     F .text	000000a4 _fwalk
0000930c g     F .text	0000000c _mbtowc_r
0000a304 g     F .text	00000080 .hidden __divsi3
00004818 g     F .text	0000011c _malloc_trim_r
0000f398 g       *ABS*	00000000 __CTOR_END__
000093c0 g     F .text	000000d8 strcmp
0000f398 g       *ABS*	00000000 __flash_rodata_start
0000f398 g       *ABS*	00000000 __DTOR_LIST__
0000b7e8 g     F .text	00000080 .hidden __nedf2
0000d7ec g     F .text	00000038 alt_irq_init
0000d558 g     F .text	00000070 alt_release_fd
0000f839 g     O .rodata	00000100 .hidden __clz_tab
000131d8 g     O .bss	00000004 _PathLocale
0000f0e8 g     F .text	00000014 atexit
00008ce0 g     F .text	00000064 _write_r
00009294 g     F .text	00000014 setlocale
00011568 g     O .rwdata	00000004 _impure_ptr
000131dc g     O .bss	00000004 alt_argc
00004214 g     F .text	00000228 __sflush_r
0000e55c g     F .text	00000060 _do_dtors
00011554 g     O .rwdata	00000004 sw
00000020 g       .exceptions	00000000 alt_irq_entry
00009318 g     F .text	00000044 __ascii_mbtowc
00006b5c g     F .text	0000005c __ulp
00004804 g     F .text	00000014 __fp_unlock_all
00011574 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005270 g     F .text	0000000c localeconv
0000527c g     F .text	00000098 __swhatbuf_r
0000e5dc g     F .text	00000050 alt_ic_isr_register
0001159c g       *ABS*	00000000 _edata
00013320 g       *ABS*	00000000 _end
00008f70 g     F .text	00000150 __fputwc
00000224 g       *ABS*	00000000 __ram_exceptions_end
0000dd9c g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0000e6b4 g     F .text	0000008c alt_ic_irq_disable
000076dc g     F .text	00000080 __swrite
00011570 g     O .rwdata	00000004 __malloc_trim_threshold
0000f0fc g     F .text	00000034 exit
000051a8 g     F .text	000000b4 _fwalk_reent
000069a0 g     F .text	000001bc __mdiff
0000a384 g     F .text	00000078 .hidden __modsi3
0001f400 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
000047e4 g     F .text	00000004 __sfp_lock_release
0000f5b8 g     O .rodata	00000101 _ctype_
0000cb94 g     F .text	00000054 .hidden __unorddf2
0000f364 g     F .text	00000034 _exit
0000e2d0 g     F .text	0000012c alt_alarm_start
00005314 g     F .text	0000013c __smakebuf_r
000004c0 g     F .text	00000098 strlen
0000ead8 g     F .text	00000160 open
0000b868 g     F .text	000000f0 .hidden __gedf2
000078b4 g     F .text	00000018 __sprint_r
0000e5bc g     F .text	00000020 alt_icache_flush_all
00011590 g     O .rwdata	00000004 alt_priority_mask
0000e62c g     F .text	00000088 alt_ic_irq_enable
000026e0 g     F .text	00000018 __vfprintf_internal
000096e4 g     F .text	0000000c _wctomb_r
0000c228 g     F .text	0000096c .hidden __subdf3
000063c0 g     F .text	000000b0 __lo0bits
00011594 g     O .rwdata	00000008 alt_alarm_list
0000e4fc g     F .text	00000060 _do_ctors
00009660 g     F .text	00000084 wcrtomb
0000ce5c g     F .text	000000dc close
000101dc g     O .rwdata	0000016c __global_locale
0000d1b0 g     F .text	00000084 alt_load
000090e4 g     F .text	0000007c fputwc
000047e8 g     F .text	00000004 __sinit_lock_acquire
00006110 g     F .text	0000013c __multadd
000060ec g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408914 	ori	at,at,548
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001c40 	call	1c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001126 	beq	r2,zero,180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	00800074 	movhi	r2,1
 148:	1885883a 	add	r2,r3,r2
 14c:	10cc8817 	ldw	r3,12832(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	00800074 	movhi	r2,1
 15c:	2085883a 	add	r2,r4,r2
 160:	108c8917 	ldw	r2,12836(r2)
 164:	1009883a 	mov	r4,r2
 168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 16c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 170:	0005313a 	rdctl	r2,ipending
 174:	e0bffb15 	stw	r2,-20(fp)
  return active;
 178:	e0bffb17 	ldw	r2,-20(fp)
 17c:	00000706 	br	19c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
 180:	e0bffe17 	ldw	r2,-8(fp)
 184:	1085883a 	add	r2,r2,r2
 188:	e0bffe15 	stw	r2,-8(fp)
      i++;
 18c:	e0bffd17 	ldw	r2,-12(fp)
 190:	10800044 	addi	r2,r2,1
 194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 198:	003fe406 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 19c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a0:	e0bfff17 	ldw	r2,-4(fp)
 1a4:	103fde1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a8:	0001883a 	nop
}
 1ac:	0001883a 	nop
 1b0:	e037883a 	mov	sp,fp
 1b4:	dfc00117 	ldw	ra,4(sp)
 1b8:	df000017 	ldw	fp,0(sp)
 1bc:	dec00204 	addi	sp,sp,8
 1c0:	f800283a 	ret

000001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c4:	defffb04 	addi	sp,sp,-20
 1c8:	dfc00415 	stw	ra,16(sp)
 1cc:	df000315 	stw	fp,12(sp)
 1d0:	df000304 	addi	fp,sp,12
 1d4:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1d8:	00bfffc4 	movi	r2,-1
 1dc:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e4:	d0a72917 	ldw	r2,-25436(gp)
 1e8:	10000726 	beq	r2,zero,208 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1ec:	d0a72917 	ldw	r2,-25436(gp)
 1f0:	e0ffff17 	ldw	r3,-4(fp)
 1f4:	e1bffe17 	ldw	r6,-8(fp)
 1f8:	e17ffd17 	ldw	r5,-12(fp)
 1fc:	1809883a 	mov	r4,r3
 200:	103ee83a 	callr	r2
 204:	00000206 	br	210 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 208:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 20c:	0005883a 	mov	r2,zero
}
 210:	e037883a 	mov	sp,fp
 214:	dfc00117 	ldw	ra,4(sp)
 218:	df000017 	ldw	fp,0(sp)
 21c:	dec00204 	addi	sp,sp,8
 220:	f800283a 	ret

Disassembly of section .text:

00000224 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     224:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     228:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
     22c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     230:	d6a55414 	ori	gp,gp,38224
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     234:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     238:	108c7214 	ori	r2,r2,12744

    movhi r3, %hi(__bss_end)
     23c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     240:	18ccc814 	ori	r3,r3,13088

    beq r2, r3, 1f
     244:	10c00326 	beq	r2,r3,254 <_start+0x30>

0:
    stw zero, (r2)
     248:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     24c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     250:	10fffd36 	bltu	r2,r3,248 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     254:	000d1b00 	call	d1b0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     258:	000d3500 	call	d350 <alt_main>

0000025c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     25c:	003fff06 	br	25c <alt_after_alt_main>

00000260 <resolveToFlower>:
//General 32 bit input @ 0x21010
uint *nios_input = (uint*)0x21010;
//General 32 bit output @ 0x21000
uint *nios_output = (uint*)0x21000;

char* resolveToFlower(uint flower) {
     260:	defffe04 	addi	sp,sp,-8
     264:	df000115 	stw	fp,4(sp)
     268:	df000104 	addi	fp,sp,4
     26c:	e13fff15 	stw	r4,-4(fp)
	static char flowers[][16] = { "Iris-setosa", "Iris-versicolor", "Iris-virginica", "uh oh" };
	return flower > 2 ? flowers[3] : flowers[flower];
     270:	e0bfff17 	ldw	r2,-4(fp)
     274:	108000e8 	cmpgeui	r2,r2,3
     278:	1000061e 	bne	r2,zero,294 <resolveToFlower+0x34>
     27c:	e0bfff17 	ldw	r2,-4(fp)
     280:	1006913a 	slli	r3,r2,4
     284:	00800074 	movhi	r2,1
     288:	10be5c04 	addi	r2,r2,-1680
     28c:	1885883a 	add	r2,r3,r2
     290:	00000206 	br	29c <resolveToFlower+0x3c>
     294:	00800074 	movhi	r2,1
     298:	10be6804 	addi	r2,r2,-1632
}
     29c:	e037883a 	mov	sp,fp
     2a0:	df000017 	ldw	fp,0(sp)
     2a4:	dec00104 	addi	sp,sp,4
     2a8:	f800283a 	ret

000002ac <printClassificationResult>:

void printClassificationResult() {
     2ac:	defffb04 	addi	sp,sp,-20
     2b0:	dfc00415 	stw	ra,16(sp)
     2b4:	df000315 	stw	fp,12(sp)
     2b8:	dc000215 	stw	r16,8(sp)
     2bc:	df000304 	addi	fp,sp,12
	uint actual = 0xFF & *nios_input;
     2c0:	d0a00317 	ldw	r2,-32756(gp)
     2c4:	10800017 	ldw	r2,0(r2)
     2c8:	10803fcc 	andi	r2,r2,255
     2cc:	e0bffe15 	stw	r2,-8(fp)
    uint classified = 0xFF & (*nios_input >> 8);
     2d0:	d0a00317 	ldw	r2,-32756(gp)
     2d4:	10800017 	ldw	r2,0(r2)
     2d8:	1004d23a 	srli	r2,r2,8
     2dc:	10803fcc 	andi	r2,r2,255
     2e0:	e0bffd15 	stw	r2,-12(fp)

	if (actual == classified) {
     2e4:	e0fffe17 	ldw	r3,-8(fp)
     2e8:	e0bffd17 	ldw	r2,-12(fp)
     2ec:	1880041e 	bne	r3,r2,300 <printClassificationResult+0x54>
		printf("Classification correct!\n");
     2f0:	01000074 	movhi	r4,1
     2f4:	213ce604 	addi	r4,r4,-3176
     2f8:	00004b00 	call	4b0 <puts>
     2fc:	00000306 	br	30c <printClassificationResult+0x60>
	} else {
		printf("Classification wrong. :(\n");
     300:	01000074 	movhi	r4,1
     304:	213cec04 	addi	r4,r4,-3152
     308:	00004b00 	call	4b0 <puts>
	}

	printf("Actual: %s\nClassified as: %s\n\n", resolveToFlower(actual), resolveToFlower(classified));
     30c:	e13ffe17 	ldw	r4,-8(fp)
     310:	00002600 	call	260 <resolveToFlower>
     314:	1021883a 	mov	r16,r2
     318:	e13ffd17 	ldw	r4,-12(fp)
     31c:	00002600 	call	260 <resolveToFlower>
     320:	100d883a 	mov	r6,r2
     324:	800b883a 	mov	r5,r16
     328:	01000074 	movhi	r4,1
     32c:	213cf304 	addi	r4,r4,-3124
     330:	00003ac0 	call	3ac <printf>
}
     334:	0001883a 	nop
     338:	e6ffff04 	addi	sp,fp,-4
     33c:	dfc00217 	ldw	ra,8(sp)
     340:	df000117 	ldw	fp,4(sp)
     344:	dc000017 	ldw	r16,0(sp)
     348:	dec00304 	addi	sp,sp,12
     34c:	f800283a 	ret

00000350 <main>:

int main()
{
     350:	defffe04 	addi	sp,sp,-8
     354:	dfc00115 	stw	ra,4(sp)
     358:	df000015 	stw	fp,0(sp)
     35c:	d839883a 	mov	fp,sp
  printClassificationResult();
     360:	00002ac0 	call	2ac <printClassificationResult>

  return 0;
     364:	0005883a 	mov	r2,zero
}
     368:	e037883a 	mov	sp,fp
     36c:	dfc00117 	ldw	ra,4(sp)
     370:	df000017 	ldw	fp,0(sp)
     374:	dec00204 	addi	sp,sp,8
     378:	f800283a 	ret

0000037c <_printf_r>:
     37c:	defffd04 	addi	sp,sp,-12
     380:	2805883a 	mov	r2,r5
     384:	dfc00015 	stw	ra,0(sp)
     388:	d9800115 	stw	r6,4(sp)
     38c:	d9c00215 	stw	r7,8(sp)
     390:	21400217 	ldw	r5,8(r4)
     394:	d9c00104 	addi	r7,sp,4
     398:	100d883a 	mov	r6,r2
     39c:	00005580 	call	558 <___vfprintf_internal_r>
     3a0:	dfc00017 	ldw	ra,0(sp)
     3a4:	dec00304 	addi	sp,sp,12
     3a8:	f800283a 	ret

000003ac <printf>:
     3ac:	defffc04 	addi	sp,sp,-16
     3b0:	dfc00015 	stw	ra,0(sp)
     3b4:	d9400115 	stw	r5,4(sp)
     3b8:	d9800215 	stw	r6,8(sp)
     3bc:	d9c00315 	stw	r7,12(sp)
     3c0:	00800074 	movhi	r2,1
     3c4:	10855a17 	ldw	r2,5480(r2)
     3c8:	200b883a 	mov	r5,r4
     3cc:	d9800104 	addi	r6,sp,4
     3d0:	11000217 	ldw	r4,8(r2)
     3d4:	00026e00 	call	26e0 <__vfprintf_internal>
     3d8:	dfc00017 	ldw	ra,0(sp)
     3dc:	dec00404 	addi	sp,sp,16
     3e0:	f800283a 	ret

000003e4 <_puts_r>:
     3e4:	defff504 	addi	sp,sp,-44
     3e8:	dc000815 	stw	r16,32(sp)
     3ec:	2021883a 	mov	r16,r4
     3f0:	2809883a 	mov	r4,r5
     3f4:	dc400915 	stw	r17,36(sp)
     3f8:	dfc00a15 	stw	ra,40(sp)
     3fc:	2823883a 	mov	r17,r5
     400:	00004c00 	call	4c0 <strlen>
     404:	11000044 	addi	r4,r2,1
     408:	d8800515 	stw	r2,20(sp)
     40c:	00800044 	movi	r2,1
     410:	00c00074 	movhi	r3,1
     414:	d8800715 	stw	r2,28(sp)
     418:	d8800404 	addi	r2,sp,16
     41c:	18fcfb04 	addi	r3,r3,-3092
     420:	d8800115 	stw	r2,4(sp)
     424:	00800084 	movi	r2,2
     428:	dc400415 	stw	r17,16(sp)
     42c:	d8c00615 	stw	r3,24(sp)
     430:	d9000315 	stw	r4,12(sp)
     434:	d8800215 	stw	r2,8(sp)
     438:	81400217 	ldw	r5,8(r16)
     43c:	80000226 	beq	r16,zero,448 <_puts_r+0x64>
     440:	80800e17 	ldw	r2,56(r16)
     444:	10001326 	beq	r2,zero,494 <_puts_r+0xb0>
     448:	2880030b 	ldhu	r2,12(r5)
     44c:	10c8000c 	andi	r3,r2,8192
     450:	1800061e 	bne	r3,zero,46c <_puts_r+0x88>
     454:	28c01917 	ldw	r3,100(r5)
     458:	0137ffc4 	movi	r4,-8193
     45c:	10880014 	ori	r2,r2,8192
     460:	1906703a 	and	r3,r3,r4
     464:	2880030d 	sth	r2,12(r5)
     468:	28c01915 	stw	r3,100(r5)
     46c:	d9800104 	addi	r6,sp,4
     470:	8009883a 	mov	r4,r16
     474:	0004c300 	call	4c30 <__sfvwrite_r>
     478:	10000b1e 	bne	r2,zero,4a8 <_puts_r+0xc4>
     47c:	00800284 	movi	r2,10
     480:	dfc00a17 	ldw	ra,40(sp)
     484:	dc400917 	ldw	r17,36(sp)
     488:	dc000817 	ldw	r16,32(sp)
     48c:	dec00b04 	addi	sp,sp,44
     490:	f800283a 	ret
     494:	8009883a 	mov	r4,r16
     498:	d9400015 	stw	r5,0(sp)
     49c:	00047d00 	call	47d0 <__sinit>
     4a0:	d9400017 	ldw	r5,0(sp)
     4a4:	003fe806 	br	448 <_puts_r+0x64>
     4a8:	00bfffc4 	movi	r2,-1
     4ac:	003ff406 	br	480 <_puts_r+0x9c>

000004b0 <puts>:
     4b0:	00800074 	movhi	r2,1
     4b4:	200b883a 	mov	r5,r4
     4b8:	11055a17 	ldw	r4,5480(r2)
     4bc:	00003e41 	jmpi	3e4 <_puts_r>

000004c0 <strlen>:
     4c0:	208000cc 	andi	r2,r4,3
     4c4:	10002026 	beq	r2,zero,548 <strlen+0x88>
     4c8:	20800007 	ldb	r2,0(r4)
     4cc:	10002026 	beq	r2,zero,550 <strlen+0x90>
     4d0:	2005883a 	mov	r2,r4
     4d4:	00000206 	br	4e0 <strlen+0x20>
     4d8:	10c00007 	ldb	r3,0(r2)
     4dc:	18001826 	beq	r3,zero,540 <strlen+0x80>
     4e0:	10800044 	addi	r2,r2,1
     4e4:	10c000cc 	andi	r3,r2,3
     4e8:	183ffb1e 	bne	r3,zero,4d8 <strlen+0x18>
     4ec:	11400017 	ldw	r5,0(r2)
     4f0:	01ffbff4 	movhi	r7,65279
     4f4:	39ffbfc4 	addi	r7,r7,-257
     4f8:	29c7883a 	add	r3,r5,r7
     4fc:	01a02074 	movhi	r6,32897
     500:	014a303a 	nor	r5,zero,r5
     504:	1946703a 	and	r3,r3,r5
     508:	31a02004 	addi	r6,r6,-32640
     50c:	1986703a 	and	r3,r3,r6
     510:	1800091e 	bne	r3,zero,538 <strlen+0x78>
     514:	10800104 	addi	r2,r2,4
     518:	11400017 	ldw	r5,0(r2)
     51c:	29c7883a 	add	r3,r5,r7
     520:	014a303a 	nor	r5,zero,r5
     524:	1946703a 	and	r3,r3,r5
     528:	1986703a 	and	r3,r3,r6
     52c:	183ff926 	beq	r3,zero,514 <strlen+0x54>
     530:	00000106 	br	538 <strlen+0x78>
     534:	10800044 	addi	r2,r2,1
     538:	10c00007 	ldb	r3,0(r2)
     53c:	183ffd1e 	bne	r3,zero,534 <strlen+0x74>
     540:	1105c83a 	sub	r2,r2,r4
     544:	f800283a 	ret
     548:	2005883a 	mov	r2,r4
     54c:	003fe706 	br	4ec <strlen+0x2c>
     550:	0005883a 	mov	r2,zero
     554:	f800283a 	ret

00000558 <___vfprintf_internal_r>:
     558:	deffbd04 	addi	sp,sp,-268
     55c:	dfc04215 	stw	ra,264(sp)
     560:	dd003d15 	stw	r20,244(sp)
     564:	dcc03c15 	stw	r19,240(sp)
     568:	dc003915 	stw	r16,228(sp)
     56c:	d9000515 	stw	r4,20(sp)
     570:	2021883a 	mov	r16,r4
     574:	2827883a 	mov	r19,r5
     578:	3029883a 	mov	r20,r6
     57c:	d9c00615 	stw	r7,24(sp)
     580:	df004115 	stw	fp,260(sp)
     584:	ddc04015 	stw	r23,256(sp)
     588:	dd803f15 	stw	r22,252(sp)
     58c:	dd403e15 	stw	r21,248(sp)
     590:	dc803b15 	stw	r18,236(sp)
     594:	dc403a15 	stw	r17,232(sp)
     598:	00052640 	call	5264 <_localeconv_r>
     59c:	10800017 	ldw	r2,0(r2)
     5a0:	1009883a 	mov	r4,r2
     5a4:	d8800d15 	stw	r2,52(sp)
     5a8:	00004c00 	call	4c0 <strlen>
     5ac:	d8800b15 	stw	r2,44(sp)
     5b0:	80000226 	beq	r16,zero,5bc <___vfprintf_internal_r+0x64>
     5b4:	80800e17 	ldw	r2,56(r16)
     5b8:	1002de26 	beq	r2,zero,1134 <___vfprintf_internal_r+0xbdc>
     5bc:	9880030b 	ldhu	r2,12(r19)
     5c0:	10c8000c 	andi	r3,r2,8192
     5c4:	1800061e 	bne	r3,zero,5e0 <___vfprintf_internal_r+0x88>
     5c8:	98c01917 	ldw	r3,100(r19)
     5cc:	0137ffc4 	movi	r4,-8193
     5d0:	10880014 	ori	r2,r2,8192
     5d4:	1906703a 	and	r3,r3,r4
     5d8:	9880030d 	sth	r2,12(r19)
     5dc:	98c01915 	stw	r3,100(r19)
     5e0:	10c0020c 	andi	r3,r2,8
     5e4:	18009a26 	beq	r3,zero,850 <___vfprintf_internal_r+0x2f8>
     5e8:	98c00417 	ldw	r3,16(r19)
     5ec:	18009826 	beq	r3,zero,850 <___vfprintf_internal_r+0x2f8>
     5f0:	1080068c 	andi	r2,r2,26
     5f4:	10800298 	cmpnei	r2,r2,10
     5f8:	10009d26 	beq	r2,zero,870 <___vfprintf_internal_r+0x318>
     5fc:	ddc02904 	addi	r23,sp,164
     600:	ddc01c15 	stw	r23,112(sp)
     604:	d8001e15 	stw	zero,120(sp)
     608:	d8001d15 	stw	zero,116(sp)
     60c:	d8000815 	stw	zero,32(sp)
     610:	d8000915 	stw	zero,36(sp)
     614:	d8000a15 	stw	zero,40(sp)
     618:	b811883a 	mov	r8,r23
     61c:	d8000c15 	stw	zero,48(sp)
     620:	d8001115 	stw	zero,68(sp)
     624:	d8000415 	stw	zero,16(sp)
     628:	a02d883a 	mov	r22,r20
     62c:	b0800007 	ldb	r2,0(r22)
     630:	1000a226 	beq	r2,zero,8bc <___vfprintf_internal_r+0x364>
     634:	10800960 	cmpeqi	r2,r2,37
     638:	1005351e 	bne	r2,zero,1b10 <___vfprintf_internal_r+0x15b8>
     63c:	b021883a 	mov	r16,r22
     640:	00000206 	br	64c <___vfprintf_internal_r+0xf4>
     644:	18009326 	beq	r3,zero,894 <___vfprintf_internal_r+0x33c>
     648:	8821883a 	mov	r16,r17
     64c:	80800047 	ldb	r2,1(r16)
     650:	84400044 	addi	r17,r16,1
     654:	10c00958 	cmpnei	r3,r2,37
     658:	103ffa1e 	bne	r2,zero,644 <___vfprintf_internal_r+0xec>
     65c:	8da5c83a 	sub	r18,r17,r22
     660:	90009626 	beq	r18,zero,8bc <___vfprintf_internal_r+0x364>
     664:	d8c01e17 	ldw	r3,120(sp)
     668:	d8801d17 	ldw	r2,116(sp)
     66c:	45800015 	stw	r22,0(r8)
     670:	1c87883a 	add	r3,r3,r18
     674:	10800044 	addi	r2,r2,1
     678:	d8801d15 	stw	r2,116(sp)
     67c:	44800115 	stw	r18,4(r8)
     680:	d8c01e15 	stw	r3,120(sp)
     684:	10800208 	cmpgei	r2,r2,8
     688:	1000851e 	bne	r2,zero,8a0 <___vfprintf_internal_r+0x348>
     68c:	42000204 	addi	r8,r8,8
     690:	d8c00417 	ldw	r3,16(sp)
     694:	80800047 	ldb	r2,1(r16)
     698:	1c87883a 	add	r3,r3,r18
     69c:	d8c00415 	stw	r3,16(sp)
     6a0:	10008626 	beq	r2,zero,8bc <___vfprintf_internal_r+0x364>
     6a4:	8a800047 	ldb	r10,1(r17)
     6a8:	8d800044 	addi	r22,r17,1
     6ac:	d8001545 	stb	zero,85(sp)
     6b0:	0009883a 	mov	r4,zero
     6b4:	000b883a 	mov	r5,zero
     6b8:	02ffffc4 	movi	r11,-1
     6bc:	0021883a 	mov	r16,zero
     6c0:	0019883a 	mov	r12,zero
     6c4:	b5800044 	addi	r22,r22,1
     6c8:	5039883a 	mov	fp,r10
     6cc:	e0bff804 	addi	r2,fp,-32
     6d0:	10c01668 	cmpgeui	r3,r2,89
     6d4:	18009d1e 	bne	r3,zero,94c <___vfprintf_internal_r+0x3f4>
     6d8:	100490ba 	slli	r2,r2,2
     6dc:	00c00034 	movhi	r3,0
     6e0:	10c7883a 	add	r3,r2,r3
     6e4:	1881bb17 	ldw	r2,1772(r3)
     6e8:	1000683a 	jmp	r2
     6ec:	00000a24 	muli	zero,zero,40
     6f0:	0000094c 	andi	zero,zero,37
     6f4:	0000094c 	andi	zero,zero,37
     6f8:	00000a18 	cmpnei	zero,zero,40
     6fc:	0000094c 	andi	zero,zero,37
     700:	0000094c 	andi	zero,zero,37
     704:	0000094c 	andi	zero,zero,37
     708:	0000094c 	andi	zero,zero,37
     70c:	0000094c 	andi	zero,zero,37
     710:	0000094c 	andi	zero,zero,37
     714:	000009f0 	cmpltui	zero,zero,39
     718:	000009e0 	cmpeqi	zero,zero,39
     71c:	0000094c 	andi	zero,zero,37
     720:	000009c8 	cmpgei	zero,zero,39
     724:	0000097c 	xorhi	zero,zero,37
     728:	0000094c 	andi	zero,zero,37
     72c:	00000970 	cmpltui	zero,zero,37
     730:	00000914 	movui	zero,36
     734:	00000914 	movui	zero,36
     738:	00000914 	movui	zero,36
     73c:	00000914 	movui	zero,36
     740:	00000914 	movui	zero,36
     744:	00000914 	movui	zero,36
     748:	00000914 	movui	zero,36
     74c:	00000914 	movui	zero,36
     750:	00000914 	movui	zero,36
     754:	0000094c 	andi	zero,zero,37
     758:	0000094c 	andi	zero,zero,37
     75c:	0000094c 	andi	zero,zero,37
     760:	0000094c 	andi	zero,zero,37
     764:	0000094c 	andi	zero,zero,37
     768:	0000094c 	andi	zero,zero,37
     76c:	0000094c 	andi	zero,zero,37
     770:	0000094c 	andi	zero,zero,37
     774:	0000094c 	andi	zero,zero,37
     778:	0000094c 	andi	zero,zero,37
     77c:	00000f38 	rdprs	zero,zero,60
     780:	00000e58 	cmpnei	zero,zero,57
     784:	0000094c 	andi	zero,zero,37
     788:	00000e58 	cmpnei	zero,zero,57
     78c:	0000094c 	andi	zero,zero,37
     790:	0000094c 	andi	zero,zero,37
     794:	0000094c 	andi	zero,zero,37
     798:	0000094c 	andi	zero,zero,37
     79c:	00000e4c 	andi	zero,zero,57
     7a0:	0000094c 	andi	zero,zero,37
     7a4:	0000094c 	andi	zero,zero,37
     7a8:	00000e18 	cmpnei	zero,zero,56
     7ac:	0000094c 	andi	zero,zero,37
     7b0:	0000094c 	andi	zero,zero,37
     7b4:	0000094c 	andi	zero,zero,37
     7b8:	0000094c 	andi	zero,zero,37
     7bc:	0000094c 	andi	zero,zero,37
     7c0:	00001058 	cmpnei	zero,zero,65
     7c4:	0000094c 	andi	zero,zero,37
     7c8:	0000094c 	andi	zero,zero,37
     7cc:	00001010 	cmplti	zero,zero,64
     7d0:	0000094c 	andi	zero,zero,37
     7d4:	0000094c 	andi	zero,zero,37
     7d8:	0000094c 	andi	zero,zero,37
     7dc:	0000094c 	andi	zero,zero,37
     7e0:	0000094c 	andi	zero,zero,37
     7e4:	0000094c 	andi	zero,zero,37
     7e8:	0000094c 	andi	zero,zero,37
     7ec:	0000094c 	andi	zero,zero,37
     7f0:	0000094c 	andi	zero,zero,37
     7f4:	0000094c 	andi	zero,zero,37
     7f8:	00000ba8 	cmpgeui	zero,zero,46
     7fc:	00000b34 	movhi	zero,44
     800:	00000e58 	cmpnei	zero,zero,57
     804:	00000e58 	cmpnei	zero,zero,57
     808:	00000e58 	cmpnei	zero,zero,57
     80c:	00001128 	cmpgeui	zero,zero,68
     810:	00000b34 	movhi	zero,44
     814:	0000094c 	andi	zero,zero,37
     818:	0000094c 	andi	zero,zero,37
     81c:	00001114 	movui	zero,68
     820:	0000094c 	andi	zero,zero,37
     824:	00000dd8 	cmpnei	zero,zero,55
     828:	00000d98 	cmpnei	zero,zero,54
     82c:	00001098 	cmpnei	zero,zero,66
     830:	0000108c 	andi	zero,zero,66
     834:	0000094c 	andi	zero,zero,37
     838:	00000ad8 	cmpnei	zero,zero,43
     83c:	0000094c 	andi	zero,zero,37
     840:	00000a98 	cmpnei	zero,zero,42
     844:	0000094c 	andi	zero,zero,37
     848:	0000094c 	andi	zero,zero,37
     84c:	00000a50 	cmplti	zero,zero,41
     850:	d9000517 	ldw	r4,20(sp)
     854:	980b883a 	mov	r5,r19
     858:	00027b80 	call	27b8 <__swsetup_r>
     85c:	1007561e 	bne	r2,zero,25b8 <___vfprintf_internal_r+0x2060>
     860:	9880030b 	ldhu	r2,12(r19)
     864:	1080068c 	andi	r2,r2,26
     868:	10800298 	cmpnei	r2,r2,10
     86c:	103f631e 	bne	r2,zero,5fc <___vfprintf_internal_r+0xa4>
     870:	9880038f 	ldh	r2,14(r19)
     874:	103f6116 	blt	r2,zero,5fc <___vfprintf_internal_r+0xa4>
     878:	d9c00617 	ldw	r7,24(sp)
     87c:	d9000517 	ldw	r4,20(sp)
     880:	a00d883a 	mov	r6,r20
     884:	980b883a 	mov	r5,r19
     888:	00026f80 	call	26f8 <__sbprintf>
     88c:	d8800415 	stw	r2,16(sp)
     890:	00001306 	br	8e0 <___vfprintf_internal_r+0x388>
     894:	8da5c83a 	sub	r18,r17,r22
     898:	903f8226 	beq	r18,zero,6a4 <___vfprintf_internal_r+0x14c>
     89c:	003f7106 	br	664 <___vfprintf_internal_r+0x10c>
     8a0:	d9000517 	ldw	r4,20(sp)
     8a4:	d9801c04 	addi	r6,sp,112
     8a8:	980b883a 	mov	r5,r19
     8ac:	00078b40 	call	78b4 <__sprint_r>
     8b0:	1000081e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
     8b4:	b811883a 	mov	r8,r23
     8b8:	003f7506 	br	690 <___vfprintf_internal_r+0x138>
     8bc:	d8801e17 	ldw	r2,120(sp)
     8c0:	10000426 	beq	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
     8c4:	d9000517 	ldw	r4,20(sp)
     8c8:	d9801c04 	addi	r6,sp,112
     8cc:	980b883a 	mov	r5,r19
     8d0:	00078b40 	call	78b4 <__sprint_r>
     8d4:	9880030b 	ldhu	r2,12(r19)
     8d8:	1080100c 	andi	r2,r2,64
     8dc:	1007361e 	bne	r2,zero,25b8 <___vfprintf_internal_r+0x2060>
     8e0:	d8800417 	ldw	r2,16(sp)
     8e4:	dfc04217 	ldw	ra,264(sp)
     8e8:	df004117 	ldw	fp,260(sp)
     8ec:	ddc04017 	ldw	r23,256(sp)
     8f0:	dd803f17 	ldw	r22,252(sp)
     8f4:	dd403e17 	ldw	r21,248(sp)
     8f8:	dd003d17 	ldw	r20,244(sp)
     8fc:	dcc03c17 	ldw	r19,240(sp)
     900:	dc803b17 	ldw	r18,236(sp)
     904:	dc403a17 	ldw	r17,232(sp)
     908:	dc003917 	ldw	r16,228(sp)
     90c:	dec04304 	addi	sp,sp,268
     910:	f800283a 	ret
     914:	0021883a 	mov	r16,zero
     918:	e0fff404 	addi	r3,fp,-48
     91c:	800490ba 	slli	r2,r16,2
     920:	b5800044 	addi	r22,r22,1
     924:	b73fffc7 	ldb	fp,-1(r22)
     928:	1421883a 	add	r16,r2,r16
     92c:	8421883a 	add	r16,r16,r16
     930:	1c21883a 	add	r16,r3,r16
     934:	e0fff404 	addi	r3,fp,-48
     938:	188002b0 	cmpltui	r2,r3,10
     93c:	103ff71e 	bne	r2,zero,91c <___vfprintf_internal_r+0x3c4>
     940:	e0bff804 	addi	r2,fp,-32
     944:	10c01668 	cmpgeui	r3,r2,89
     948:	183f6326 	beq	r3,zero,6d8 <___vfprintf_internal_r+0x180>
     94c:	21003fcc 	andi	r4,r4,255
     950:	2006741e 	bne	r4,zero,2324 <___vfprintf_internal_r+0x1dcc>
     954:	e03fd926 	beq	fp,zero,8bc <___vfprintf_internal_r+0x364>
     958:	df001f05 	stb	fp,124(sp)
     95c:	d8001545 	stb	zero,85(sp)
     960:	05400044 	movi	r21,1
     964:	05000044 	movi	r20,1
     968:	dc401f04 	addi	r17,sp,124
     96c:	00009706 	br	bcc <___vfprintf_internal_r+0x674>
     970:	63002014 	ori	r12,r12,128
     974:	b2800007 	ldb	r10,0(r22)
     978:	003f5206 	br	6c4 <___vfprintf_internal_r+0x16c>
     97c:	b7000007 	ldb	fp,0(r22)
     980:	b0800044 	addi	r2,r22,1
     984:	e0c00aa0 	cmpeqi	r3,fp,42
     988:	1807491e 	bne	r3,zero,26b0 <___vfprintf_internal_r+0x2158>
     98c:	e0fff404 	addi	r3,fp,-48
     990:	198002b0 	cmpltui	r6,r3,10
     994:	102d883a 	mov	r22,r2
     998:	0017883a 	mov	r11,zero
     99c:	303f4b26 	beq	r6,zero,6cc <___vfprintf_internal_r+0x174>
     9a0:	580490ba 	slli	r2,r11,2
     9a4:	b5800044 	addi	r22,r22,1
     9a8:	b73fffc7 	ldb	fp,-1(r22)
     9ac:	12d7883a 	add	r11,r2,r11
     9b0:	5ad7883a 	add	r11,r11,r11
     9b4:	58d7883a 	add	r11,r11,r3
     9b8:	e0fff404 	addi	r3,fp,-48
     9bc:	188002b0 	cmpltui	r2,r3,10
     9c0:	103ff71e 	bne	r2,zero,9a0 <___vfprintf_internal_r+0x448>
     9c4:	003f4106 	br	6cc <___vfprintf_internal_r+0x174>
     9c8:	b7000003 	ldbu	fp,0(r22)
     9cc:	e2803fcc 	andi	r10,fp,255
     9d0:	5280201c 	xori	r10,r10,128
     9d4:	63000114 	ori	r12,r12,4
     9d8:	52bfe004 	addi	r10,r10,-128
     9dc:	003f3906 	br	6c4 <___vfprintf_internal_r+0x16c>
     9e0:	01000044 	movi	r4,1
     9e4:	01400ac4 	movi	r5,43
     9e8:	b2800007 	ldb	r10,0(r22)
     9ec:	003f3506 	br	6c4 <___vfprintf_internal_r+0x16c>
     9f0:	d8800617 	ldw	r2,24(sp)
     9f4:	b7000003 	ldbu	fp,0(r22)
     9f8:	14000017 	ldw	r16,0(r2)
     9fc:	10800104 	addi	r2,r2,4
     a00:	8004da16 	blt	r16,zero,1d6c <___vfprintf_internal_r+0x1814>
     a04:	d8800615 	stw	r2,24(sp)
     a08:	e2803fcc 	andi	r10,fp,255
     a0c:	5280201c 	xori	r10,r10,128
     a10:	52bfe004 	addi	r10,r10,-128
     a14:	003f2b06 	br	6c4 <___vfprintf_internal_r+0x16c>
     a18:	63000054 	ori	r12,r12,1
     a1c:	b2800007 	ldb	r10,0(r22)
     a20:	003f2806 	br	6c4 <___vfprintf_internal_r+0x16c>
     a24:	28803fcc 	andi	r2,r5,255
     a28:	1080201c 	xori	r2,r2,128
     a2c:	10bfe004 	addi	r2,r2,-128
     a30:	b7000003 	ldbu	fp,0(r22)
     a34:	103ff41e 	bne	r2,zero,a08 <___vfprintf_internal_r+0x4b0>
     a38:	e2803fcc 	andi	r10,fp,255
     a3c:	5280201c 	xori	r10,r10,128
     a40:	01000044 	movi	r4,1
     a44:	01400804 	movi	r5,32
     a48:	52bfe004 	addi	r10,r10,-128
     a4c:	003f1d06 	br	6c4 <___vfprintf_internal_r+0x16c>
     a50:	21003fcc 	andi	r4,r4,255
     a54:	2006b81e 	bne	r4,zero,2538 <___vfprintf_internal_r+0x1fe0>
     a58:	00800074 	movhi	r2,1
     a5c:	10bd0504 	addi	r2,r2,-3052
     a60:	d8800c15 	stw	r2,48(sp)
     a64:	6080080c 	andi	r2,r12,32
     a68:	10017026 	beq	r2,zero,102c <___vfprintf_internal_r+0xad4>
     a6c:	d8800617 	ldw	r2,24(sp)
     a70:	15400017 	ldw	r21,0(r2)
     a74:	15000117 	ldw	r20,4(r2)
     a78:	10800204 	addi	r2,r2,8
     a7c:	d8800615 	stw	r2,24(sp)
     a80:	6080004c 	andi	r2,r12,1
     a84:	10000226 	beq	r2,zero,a90 <___vfprintf_internal_r+0x538>
     a88:	ad04b03a 	or	r2,r21,r20
     a8c:	1004aa1e 	bne	r2,zero,1d38 <___vfprintf_internal_r+0x17e0>
     a90:	00800084 	movi	r2,2
     a94:	00018f06 	br	10d4 <___vfprintf_internal_r+0xb7c>
     a98:	21003fcc 	andi	r4,r4,255
     a9c:	2006a41e 	bne	r4,zero,2530 <___vfprintf_internal_r+0x1fd8>
     aa0:	6080080c 	andi	r2,r12,32
     aa4:	1001b41e 	bne	r2,zero,1178 <___vfprintf_internal_r+0xc20>
     aa8:	d8800617 	ldw	r2,24(sp)
     aac:	60c0040c 	andi	r3,r12,16
     ab0:	15400017 	ldw	r21,0(r2)
     ab4:	10800104 	addi	r2,r2,4
     ab8:	18016e1e 	bne	r3,zero,1074 <___vfprintf_internal_r+0xb1c>
     abc:	60c0100c 	andi	r3,r12,64
     ac0:	1805a526 	beq	r3,zero,2158 <___vfprintf_internal_r+0x1c00>
     ac4:	d8800615 	stw	r2,24(sp)
     ac8:	ad7fffcc 	andi	r21,r21,65535
     acc:	0029883a 	mov	r20,zero
     ad0:	00800044 	movi	r2,1
     ad4:	00017f06 	br	10d4 <___vfprintf_internal_r+0xb7c>
     ad8:	d8800617 	ldw	r2,24(sp)
     adc:	d8001545 	stb	zero,85(sp)
     ae0:	14400017 	ldw	r17,0(r2)
     ae4:	14800104 	addi	r18,r2,4
     ae8:	8804ca26 	beq	r17,zero,1e14 <___vfprintf_internal_r+0x18bc>
     aec:	da000e15 	stw	r8,56(sp)
     af0:	db000715 	stw	r12,28(sp)
     af4:	58bfffe0 	cmpeqi	r2,r11,-1
     af8:	10056c1e 	bne	r2,zero,20ac <___vfprintf_internal_r+0x1b54>
     afc:	580d883a 	mov	r6,r11
     b00:	000b883a 	mov	r5,zero
     b04:	8809883a 	mov	r4,r17
     b08:	dac00615 	stw	r11,24(sp)
     b0c:	0005c440 	call	5c44 <memchr>
     b10:	dac00617 	ldw	r11,24(sp)
     b14:	db000717 	ldw	r12,28(sp)
     b18:	da000e17 	ldw	r8,56(sp)
     b1c:	10066c26 	beq	r2,zero,24d0 <___vfprintf_internal_r+0x1f78>
     b20:	1469c83a 	sub	r20,r2,r17
     b24:	a02b883a 	mov	r21,r20
     b28:	a005fc16 	blt	r20,zero,231c <___vfprintf_internal_r+0x1dc4>
     b2c:	dc800615 	stw	r18,24(sp)
     b30:	00002606 	br	bcc <___vfprintf_internal_r+0x674>
     b34:	21003fcc 	andi	r4,r4,255
     b38:	20067b1e 	bne	r4,zero,2528 <___vfprintf_internal_r+0x1fd0>
     b3c:	6080080c 	andi	r2,r12,32
     b40:	10017f1e 	bne	r2,zero,1140 <___vfprintf_internal_r+0xbe8>
     b44:	d8800617 	ldw	r2,24(sp)
     b48:	60c0040c 	andi	r3,r12,16
     b4c:	10800104 	addi	r2,r2,4
     b50:	1801001e 	bne	r3,zero,f54 <___vfprintf_internal_r+0x9fc>
     b54:	60c0100c 	andi	r3,r12,64
     b58:	1800fe26 	beq	r3,zero,f54 <___vfprintf_internal_r+0x9fc>
     b5c:	d8c00617 	ldw	r3,24(sp)
     b60:	d8800615 	stw	r2,24(sp)
     b64:	1d40000f 	ldh	r21,0(r3)
     b68:	a829d7fa 	srai	r20,r21,31
     b6c:	a005883a 	mov	r2,r20
     b70:	1000fe16 	blt	r2,zero,f6c <___vfprintf_internal_r+0xa14>
     b74:	58bfffd8 	cmpnei	r2,r11,-1
     b78:	db401543 	ldbu	r13,85(sp)
     b7c:	10018526 	beq	r2,zero,1194 <___vfprintf_internal_r+0xc3c>
     b80:	00ffdfc4 	movi	r3,-129
     b84:	ad04b03a 	or	r2,r21,r20
     b88:	60d8703a 	and	r12,r12,r3
     b8c:	1001811e 	bne	r2,zero,1194 <___vfprintf_internal_r+0xc3c>
     b90:	5801831e 	bne	r11,zero,11a0 <___vfprintf_internal_r+0xc48>
     b94:	6025883a 	mov	r18,r12
     b98:	0017883a 	mov	r11,zero
     b9c:	0029883a 	mov	r20,zero
     ba0:	b823883a 	mov	r17,r23
     ba4:	00018306 	br	11b4 <___vfprintf_internal_r+0xc5c>
     ba8:	d8c00617 	ldw	r3,24(sp)
     bac:	d8001545 	stb	zero,85(sp)
     bb0:	05400044 	movi	r21,1
     bb4:	18800017 	ldw	r2,0(r3)
     bb8:	18c00104 	addi	r3,r3,4
     bbc:	d8c00615 	stw	r3,24(sp)
     bc0:	d8801f05 	stb	r2,124(sp)
     bc4:	05000044 	movi	r20,1
     bc8:	dc401f04 	addi	r17,sp,124
     bcc:	6025883a 	mov	r18,r12
     bd0:	0017883a 	mov	r11,zero
     bd4:	d8000715 	stw	zero,28(sp)
     bd8:	9380008c 	andi	r14,r18,2
     bdc:	70000126 	beq	r14,zero,be4 <___vfprintf_internal_r+0x68c>
     be0:	ad400084 	addi	r21,r21,2
     be4:	9340210c 	andi	r13,r18,132
     be8:	d8c01e17 	ldw	r3,120(sp)
     bec:	6800021e 	bne	r13,zero,bf8 <___vfprintf_internal_r+0x6a0>
     bf0:	854fc83a 	sub	r7,r16,r21
     bf4:	01c2ce16 	blt	zero,r7,1730 <___vfprintf_internal_r+0x11d8>
     bf8:	d8801547 	ldb	r2,85(sp)
     bfc:	10000c26 	beq	r2,zero,c30 <___vfprintf_internal_r+0x6d8>
     c00:	d8801d17 	ldw	r2,116(sp)
     c04:	d9001544 	addi	r4,sp,85
     c08:	18c00044 	addi	r3,r3,1
     c0c:	10800044 	addi	r2,r2,1
     c10:	41000015 	stw	r4,0(r8)
     c14:	01000044 	movi	r4,1
     c18:	d8801d15 	stw	r2,116(sp)
     c1c:	41000115 	stw	r4,4(r8)
     c20:	d8c01e15 	stw	r3,120(sp)
     c24:	10800208 	cmpgei	r2,r2,8
     c28:	1002fb1e 	bne	r2,zero,1818 <___vfprintf_internal_r+0x12c0>
     c2c:	42000204 	addi	r8,r8,8
     c30:	70000c26 	beq	r14,zero,c64 <___vfprintf_internal_r+0x70c>
     c34:	d8801d17 	ldw	r2,116(sp)
     c38:	d9001584 	addi	r4,sp,86
     c3c:	18c00084 	addi	r3,r3,2
     c40:	10800044 	addi	r2,r2,1
     c44:	41000015 	stw	r4,0(r8)
     c48:	01000084 	movi	r4,2
     c4c:	d8801d15 	stw	r2,116(sp)
     c50:	41000115 	stw	r4,4(r8)
     c54:	d8c01e15 	stw	r3,120(sp)
     c58:	10800208 	cmpgei	r2,r2,8
     c5c:	1002fc1e 	bne	r2,zero,1850 <___vfprintf_internal_r+0x12f8>
     c60:	42000204 	addi	r8,r8,8
     c64:	6b402018 	cmpnei	r13,r13,128
     c68:	6801cf26 	beq	r13,zero,13a8 <___vfprintf_internal_r+0xe50>
     c6c:	5d0fc83a 	sub	r7,r11,r20
     c70:	01c20616 	blt	zero,r7,148c <___vfprintf_internal_r+0xf34>
     c74:	9080400c 	andi	r2,r18,256
     c78:	10017c1e 	bne	r2,zero,126c <___vfprintf_internal_r+0xd14>
     c7c:	d8801d17 	ldw	r2,116(sp)
     c80:	1d07883a 	add	r3,r3,r20
     c84:	44400015 	stw	r17,0(r8)
     c88:	10800044 	addi	r2,r2,1
     c8c:	d8801d15 	stw	r2,116(sp)
     c90:	45000115 	stw	r20,4(r8)
     c94:	d8c01e15 	stw	r3,120(sp)
     c98:	10800208 	cmpgei	r2,r2,8
     c9c:	1002571e 	bne	r2,zero,15fc <___vfprintf_internal_r+0x10a4>
     ca0:	42000204 	addi	r8,r8,8
     ca4:	9480010c 	andi	r18,r18,4
     ca8:	90000226 	beq	r18,zero,cb4 <___vfprintf_internal_r+0x75c>
     cac:	8563c83a 	sub	r17,r16,r21
     cb0:	04400916 	blt	zero,r17,cd8 <___vfprintf_internal_r+0x780>
     cb4:	8540010e 	bge	r16,r21,cbc <___vfprintf_internal_r+0x764>
     cb8:	a821883a 	mov	r16,r21
     cbc:	d8800417 	ldw	r2,16(sp)
     cc0:	1405883a 	add	r2,r2,r16
     cc4:	d8800415 	stw	r2,16(sp)
     cc8:	1802241e 	bne	r3,zero,155c <___vfprintf_internal_r+0x1004>
     ccc:	d8001d15 	stw	zero,116(sp)
     cd0:	b811883a 	mov	r8,r23
     cd4:	003e5506 	br	62c <___vfprintf_internal_r+0xd4>
     cd8:	03000074 	movhi	r12,1
     cdc:	89000450 	cmplti	r4,r17,17
     ce0:	633d1084 	addi	r12,r12,-3006
     ce4:	d8801d17 	ldw	r2,116(sp)
     ce8:	20001c1e 	bne	r4,zero,d5c <___vfprintf_internal_r+0x804>
     cec:	04800404 	movi	r18,16
     cf0:	dd000517 	ldw	r20,20(sp)
     cf4:	6039883a 	mov	fp,r12
     cf8:	00000406 	br	d0c <___vfprintf_internal_r+0x7b4>
     cfc:	8c7ffc04 	addi	r17,r17,-16
     d00:	89000448 	cmpgei	r4,r17,17
     d04:	42000204 	addi	r8,r8,8
     d08:	20001326 	beq	r4,zero,d58 <___vfprintf_internal_r+0x800>
     d0c:	10800044 	addi	r2,r2,1
     d10:	18c00404 	addi	r3,r3,16
     d14:	47000015 	stw	fp,0(r8)
     d18:	44800115 	stw	r18,4(r8)
     d1c:	d8c01e15 	stw	r3,120(sp)
     d20:	d8801d15 	stw	r2,116(sp)
     d24:	11000208 	cmpgei	r4,r2,8
     d28:	203ff426 	beq	r4,zero,cfc <___vfprintf_internal_r+0x7a4>
     d2c:	d9801c04 	addi	r6,sp,112
     d30:	980b883a 	mov	r5,r19
     d34:	a009883a 	mov	r4,r20
     d38:	00078b40 	call	78b4 <__sprint_r>
     d3c:	103ee51e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
     d40:	8c7ffc04 	addi	r17,r17,-16
     d44:	89000448 	cmpgei	r4,r17,17
     d48:	d8c01e17 	ldw	r3,120(sp)
     d4c:	d8801d17 	ldw	r2,116(sp)
     d50:	b811883a 	mov	r8,r23
     d54:	203fed1e 	bne	r4,zero,d0c <___vfprintf_internal_r+0x7b4>
     d58:	e019883a 	mov	r12,fp
     d5c:	10800044 	addi	r2,r2,1
     d60:	1c47883a 	add	r3,r3,r17
     d64:	d8801d15 	stw	r2,116(sp)
     d68:	43000015 	stw	r12,0(r8)
     d6c:	44400115 	stw	r17,4(r8)
     d70:	d8c01e15 	stw	r3,120(sp)
     d74:	10800210 	cmplti	r2,r2,8
     d78:	103fce1e 	bne	r2,zero,cb4 <___vfprintf_internal_r+0x75c>
     d7c:	d9000517 	ldw	r4,20(sp)
     d80:	d9801c04 	addi	r6,sp,112
     d84:	980b883a 	mov	r5,r19
     d88:	00078b40 	call	78b4 <__sprint_r>
     d8c:	103ed11e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
     d90:	d8c01e17 	ldw	r3,120(sp)
     d94:	003fc706 	br	cb4 <___vfprintf_internal_r+0x75c>
     d98:	21003fcc 	andi	r4,r4,255
     d9c:	2005de1e 	bne	r4,zero,2518 <___vfprintf_internal_r+0x1fc0>
     da0:	6080080c 	andi	r2,r12,32
     da4:	1000ed1e 	bne	r2,zero,115c <___vfprintf_internal_r+0xc04>
     da8:	d8800617 	ldw	r2,24(sp)
     dac:	60c0040c 	andi	r3,r12,16
     db0:	15400017 	ldw	r21,0(r2)
     db4:	10800104 	addi	r2,r2,4
     db8:	18001e1e 	bne	r3,zero,e34 <___vfprintf_internal_r+0x8dc>
     dbc:	60c0100c 	andi	r3,r12,64
     dc0:	1804e126 	beq	r3,zero,2148 <___vfprintf_internal_r+0x1bf0>
     dc4:	d8800615 	stw	r2,24(sp)
     dc8:	ad7fffcc 	andi	r21,r21,65535
     dcc:	0029883a 	mov	r20,zero
     dd0:	0005883a 	mov	r2,zero
     dd4:	0000bf06 	br	10d4 <___vfprintf_internal_r+0xb7c>
     dd8:	21003fcc 	andi	r4,r4,255
     ddc:	2005d01e 	bne	r4,zero,2520 <___vfprintf_internal_r+0x1fc8>
     de0:	d9000617 	ldw	r4,24(sp)
     de4:	6080080c 	andi	r2,r12,32
     de8:	20c00104 	addi	r3,r4,4
     dec:	1003d81e 	bne	r2,zero,1d50 <___vfprintf_internal_r+0x17f8>
     df0:	6080040c 	andi	r2,r12,16
     df4:	1004321e 	bne	r2,zero,1ec0 <___vfprintf_internal_r+0x1968>
     df8:	6300100c 	andi	r12,r12,64
     dfc:	60043026 	beq	r12,zero,1ec0 <___vfprintf_internal_r+0x1968>
     e00:	d8800617 	ldw	r2,24(sp)
     e04:	d8c00615 	stw	r3,24(sp)
     e08:	d8c00417 	ldw	r3,16(sp)
     e0c:	10800017 	ldw	r2,0(r2)
     e10:	10c0000d 	sth	r3,0(r2)
     e14:	003e0506 	br	62c <___vfprintf_internal_r+0xd4>
     e18:	21003fcc 	andi	r4,r4,255
     e1c:	2005c81e 	bne	r4,zero,2540 <___vfprintf_internal_r+0x1fe8>
     e20:	6080080c 	andi	r2,r12,32
     e24:	63000414 	ori	r12,r12,16
     e28:	1000cc1e 	bne	r2,zero,115c <___vfprintf_internal_r+0xc04>
     e2c:	d8800617 	ldw	r2,24(sp)
     e30:	10800104 	addi	r2,r2,4
     e34:	d8c00617 	ldw	r3,24(sp)
     e38:	0029883a 	mov	r20,zero
     e3c:	d8800615 	stw	r2,24(sp)
     e40:	1d400017 	ldw	r21,0(r3)
     e44:	0005883a 	mov	r2,zero
     e48:	0000a206 	br	10d4 <___vfprintf_internal_r+0xb7c>
     e4c:	63000214 	ori	r12,r12,8
     e50:	b2800007 	ldb	r10,0(r22)
     e54:	003e1b06 	br	6c4 <___vfprintf_internal_r+0x16c>
     e58:	21003fcc 	andi	r4,r4,255
     e5c:	2005bc1e 	bne	r4,zero,2550 <___vfprintf_internal_r+0x1ff8>
     e60:	d8c00617 	ldw	r3,24(sp)
     e64:	00a00034 	movhi	r2,32768
     e68:	10bfffc4 	addi	r2,r2,-1
     e6c:	1d000117 	ldw	r20,4(r3)
     e70:	1c800017 	ldw	r18,0(r3)
     e74:	01dffc34 	movhi	r7,32752
     e78:	a0a2703a 	and	r17,r20,r2
     e7c:	01bfffc4 	movi	r6,-1
     e80:	18800204 	addi	r2,r3,8
     e84:	39ffffc4 	addi	r7,r7,-1
     e88:	9009883a 	mov	r4,r18
     e8c:	880b883a 	mov	r5,r17
     e90:	da000f15 	stw	r8,60(sp)
     e94:	dac00e15 	stw	r11,56(sp)
     e98:	db000715 	stw	r12,28(sp)
     e9c:	dd000a15 	stw	r20,40(sp)
     ea0:	dc800915 	stw	r18,36(sp)
     ea4:	d8800615 	stw	r2,24(sp)
     ea8:	000cb940 	call	cb94 <__unorddf2>
     eac:	db000717 	ldw	r12,28(sp)
     eb0:	dac00e17 	ldw	r11,56(sp)
     eb4:	da000f17 	ldw	r8,60(sp)
     eb8:	1003191e 	bne	r2,zero,1b20 <___vfprintf_internal_r+0x15c8>
     ebc:	01dffc34 	movhi	r7,32752
     ec0:	01bfffc4 	movi	r6,-1
     ec4:	39ffffc4 	addi	r7,r7,-1
     ec8:	9009883a 	mov	r4,r18
     ecc:	880b883a 	mov	r5,r17
     ed0:	000b9580 	call	b958 <__ledf2>
     ed4:	db000717 	ldw	r12,28(sp)
     ed8:	dac00e17 	ldw	r11,56(sp)
     edc:	da000f17 	ldw	r8,60(sp)
     ee0:	00830f0e 	bge	zero,r2,1b20 <___vfprintf_internal_r+0x15c8>
     ee4:	000d883a 	mov	r6,zero
     ee8:	000f883a 	mov	r7,zero
     eec:	9009883a 	mov	r4,r18
     ef0:	a00b883a 	mov	r5,r20
     ef4:	da000e15 	stw	r8,56(sp)
     ef8:	000b9580 	call	b958 <__ledf2>
     efc:	db000717 	ldw	r12,28(sp)
     f00:	da000e17 	ldw	r8,56(sp)
     f04:	1004e716 	blt	r2,zero,22a4 <___vfprintf_internal_r+0x1d4c>
     f08:	db401543 	ldbu	r13,85(sp)
     f0c:	e0801210 	cmplti	r2,fp,72
     f10:	1004d11e 	bne	r2,zero,2258 <___vfprintf_internal_r+0x1d00>
     f14:	04400074 	movhi	r17,1
     f18:	8c7cfd04 	addi	r17,r17,-3084
     f1c:	04bfdfc4 	movi	r18,-129
     f20:	64a4703a 	and	r18,r12,r18
     f24:	054000c4 	movi	r21,3
     f28:	050000c4 	movi	r20,3
     f2c:	0017883a 	mov	r11,zero
     f30:	d8000715 	stw	zero,28(sp)
     f34:	0000a306 	br	11c4 <___vfprintf_internal_r+0xc6c>
     f38:	21003fcc 	andi	r4,r4,255
     f3c:	2005821e 	bne	r4,zero,2548 <___vfprintf_internal_r+0x1ff0>
     f40:	6080080c 	andi	r2,r12,32
     f44:	63000414 	ori	r12,r12,16
     f48:	10007d1e 	bne	r2,zero,1140 <___vfprintf_internal_r+0xbe8>
     f4c:	d8800617 	ldw	r2,24(sp)
     f50:	10800104 	addi	r2,r2,4
     f54:	d8c00617 	ldw	r3,24(sp)
     f58:	1d400017 	ldw	r21,0(r3)
     f5c:	d8800615 	stw	r2,24(sp)
     f60:	a829d7fa 	srai	r20,r21,31
     f64:	a005883a 	mov	r2,r20
     f68:	103f020e 	bge	r2,zero,b74 <___vfprintf_internal_r+0x61c>
     f6c:	056bc83a 	sub	r21,zero,r21
     f70:	a804c03a 	cmpne	r2,r21,zero
     f74:	0529c83a 	sub	r20,zero,r20
     f78:	a0a9c83a 	sub	r20,r20,r2
     f7c:	00800b44 	movi	r2,45
     f80:	d8801545 	stb	r2,85(sp)
     f84:	58ffffe0 	cmpeqi	r3,r11,-1
     f88:	03400b44 	movi	r13,45
     f8c:	00800044 	movi	r2,1
     f90:	18005426 	beq	r3,zero,10e4 <___vfprintf_internal_r+0xb8c>
     f94:	10c00060 	cmpeqi	r3,r2,1
     f98:	18007e1e 	bne	r3,zero,1194 <___vfprintf_internal_r+0xc3c>
     f9c:	108000a0 	cmpeqi	r2,r2,2
     fa0:	1002371e 	bne	r2,zero,1880 <___vfprintf_internal_r+0x1328>
     fa4:	b807883a 	mov	r3,r23
     fa8:	00000106 	br	fb0 <___vfprintf_internal_r+0xa58>
     fac:	8807883a 	mov	r3,r17
     fb0:	a808d0fa 	srli	r4,r21,3
     fb4:	a00a977a 	slli	r5,r20,29
     fb8:	a028d0fa 	srli	r20,r20,3
     fbc:	ad4001cc 	andi	r21,r21,7
     fc0:	a8800c04 	addi	r2,r21,48
     fc4:	292ab03a 	or	r21,r5,r4
     fc8:	18bfffc5 	stb	r2,-1(r3)
     fcc:	ad08b03a 	or	r4,r21,r20
     fd0:	1c7fffc4 	addi	r17,r3,-1
     fd4:	203ff51e 	bne	r4,zero,fac <___vfprintf_internal_r+0xa54>
     fd8:	6100004c 	andi	r4,r12,1
     fdc:	2000a026 	beq	r4,zero,1260 <___vfprintf_internal_r+0xd08>
     fe0:	10803fcc 	andi	r2,r2,255
     fe4:	1080201c 	xori	r2,r2,128
     fe8:	10bfe004 	addi	r2,r2,-128
     fec:	10800c18 	cmpnei	r2,r2,48
     ff0:	10009b26 	beq	r2,zero,1260 <___vfprintf_internal_r+0xd08>
     ff4:	18ffff84 	addi	r3,r3,-2
     ff8:	00800c04 	movi	r2,48
     ffc:	88bfffc5 	stb	r2,-1(r17)
    1000:	b8e9c83a 	sub	r20,r23,r3
    1004:	6025883a 	mov	r18,r12
    1008:	1823883a 	mov	r17,r3
    100c:	00006906 	br	11b4 <___vfprintf_internal_r+0xc5c>
    1010:	21003fcc 	andi	r4,r4,255
    1014:	20053e1e 	bne	r4,zero,2510 <___vfprintf_internal_r+0x1fb8>
    1018:	00800074 	movhi	r2,1
    101c:	10bd0004 	addi	r2,r2,-3072
    1020:	d8800c15 	stw	r2,48(sp)
    1024:	6080080c 	andi	r2,r12,32
    1028:	103e901e 	bne	r2,zero,a6c <___vfprintf_internal_r+0x514>
    102c:	d8c00617 	ldw	r3,24(sp)
    1030:	6080040c 	andi	r2,r12,16
    1034:	1d400017 	ldw	r21,0(r3)
    1038:	18c00104 	addi	r3,r3,4
    103c:	d8c00615 	stw	r3,24(sp)
    1040:	1002b11e 	bne	r2,zero,1b08 <___vfprintf_internal_r+0x15b0>
    1044:	6080100c 	andi	r2,r12,64
    1048:	1002af26 	beq	r2,zero,1b08 <___vfprintf_internal_r+0x15b0>
    104c:	ad7fffcc 	andi	r21,r21,65535
    1050:	0029883a 	mov	r20,zero
    1054:	003e8a06 	br	a80 <___vfprintf_internal_r+0x528>
    1058:	21003fcc 	andi	r4,r4,255
    105c:	20053e1e 	bne	r4,zero,2558 <___vfprintf_internal_r+0x2000>
    1060:	6080080c 	andi	r2,r12,32
    1064:	63000414 	ori	r12,r12,16
    1068:	1000431e 	bne	r2,zero,1178 <___vfprintf_internal_r+0xc20>
    106c:	d8800617 	ldw	r2,24(sp)
    1070:	10800104 	addi	r2,r2,4
    1074:	d8c00617 	ldw	r3,24(sp)
    1078:	0029883a 	mov	r20,zero
    107c:	d8800615 	stw	r2,24(sp)
    1080:	1d400017 	ldw	r21,0(r3)
    1084:	00800044 	movi	r2,1
    1088:	00001206 	br	10d4 <___vfprintf_internal_r+0xb7c>
    108c:	63000814 	ori	r12,r12,32
    1090:	b2800007 	ldb	r10,0(r22)
    1094:	003d8b06 	br	6c4 <___vfprintf_internal_r+0x16c>
    1098:	d8c00617 	ldw	r3,24(sp)
    109c:	00800c04 	movi	r2,48
    10a0:	d8801585 	stb	r2,86(sp)
    10a4:	00801e04 	movi	r2,120
    10a8:	01000074 	movhi	r4,1
    10ac:	d88015c5 	stb	r2,87(sp)
    10b0:	1d400017 	ldw	r21,0(r3)
    10b4:	18800104 	addi	r2,r3,4
    10b8:	d8800615 	stw	r2,24(sp)
    10bc:	20bd0504 	addi	r2,r4,-3052
    10c0:	d8800c15 	stw	r2,48(sp)
    10c4:	0029883a 	mov	r20,zero
    10c8:	63000094 	ori	r12,r12,2
    10cc:	00800084 	movi	r2,2
    10d0:	07001e04 	movi	fp,120
    10d4:	d8001545 	stb	zero,85(sp)
    10d8:	58ffffe0 	cmpeqi	r3,r11,-1
    10dc:	001b883a 	mov	r13,zero
    10e0:	183fac1e 	bne	r3,zero,f94 <___vfprintf_internal_r+0xa3c>
    10e4:	04bfdfc4 	movi	r18,-129
    10e8:	ad06b03a 	or	r3,r21,r20
    10ec:	64a4703a 	and	r18,r12,r18
    10f0:	18018d1e 	bne	r3,zero,1728 <___vfprintf_internal_r+0x11d0>
    10f4:	5803bb1e 	bne	r11,zero,1fe4 <___vfprintf_internal_r+0x1a8c>
    10f8:	103ea71e 	bne	r2,zero,b98 <___vfprintf_internal_r+0x640>
    10fc:	6500004c 	andi	r20,r12,1
    1100:	a0028526 	beq	r20,zero,1b18 <___vfprintf_internal_r+0x15c0>
    1104:	00800c04 	movi	r2,48
    1108:	d88028c5 	stb	r2,163(sp)
    110c:	dc4028c4 	addi	r17,sp,163
    1110:	00002806 	br	11b4 <___vfprintf_internal_r+0xc5c>
    1114:	b2800007 	ldb	r10,0(r22)
    1118:	50801b18 	cmpnei	r2,r10,108
    111c:	10032c26 	beq	r2,zero,1dd0 <___vfprintf_internal_r+0x1878>
    1120:	63000414 	ori	r12,r12,16
    1124:	003d6706 	br	6c4 <___vfprintf_internal_r+0x16c>
    1128:	63001014 	ori	r12,r12,64
    112c:	b2800007 	ldb	r10,0(r22)
    1130:	003d6406 	br	6c4 <___vfprintf_internal_r+0x16c>
    1134:	d9000517 	ldw	r4,20(sp)
    1138:	00047d00 	call	47d0 <__sinit>
    113c:	003d1f06 	br	5bc <___vfprintf_internal_r+0x64>
    1140:	d8c00617 	ldw	r3,24(sp)
    1144:	18800117 	ldw	r2,4(r3)
    1148:	1d400017 	ldw	r21,0(r3)
    114c:	18c00204 	addi	r3,r3,8
    1150:	d8c00615 	stw	r3,24(sp)
    1154:	1029883a 	mov	r20,r2
    1158:	003e8506 	br	b70 <___vfprintf_internal_r+0x618>
    115c:	d8c00617 	ldw	r3,24(sp)
    1160:	0005883a 	mov	r2,zero
    1164:	1d400017 	ldw	r21,0(r3)
    1168:	1d000117 	ldw	r20,4(r3)
    116c:	18c00204 	addi	r3,r3,8
    1170:	d8c00615 	stw	r3,24(sp)
    1174:	003fd706 	br	10d4 <___vfprintf_internal_r+0xb7c>
    1178:	d8c00617 	ldw	r3,24(sp)
    117c:	00800044 	movi	r2,1
    1180:	1d400017 	ldw	r21,0(r3)
    1184:	1d000117 	ldw	r20,4(r3)
    1188:	18c00204 	addi	r3,r3,8
    118c:	d8c00615 	stw	r3,24(sp)
    1190:	003fd006 	br	10d4 <___vfprintf_internal_r+0xb7c>
    1194:	a000111e 	bne	r20,zero,11dc <___vfprintf_internal_r+0xc84>
    1198:	a88002a8 	cmpgeui	r2,r21,10
    119c:	10000f1e 	bne	r2,zero,11dc <___vfprintf_internal_r+0xc84>
    11a0:	ad400c04 	addi	r21,r21,48
    11a4:	dd4028c5 	stb	r21,163(sp)
    11a8:	6025883a 	mov	r18,r12
    11ac:	05000044 	movi	r20,1
    11b0:	dc4028c4 	addi	r17,sp,163
    11b4:	582b883a 	mov	r21,r11
    11b8:	5d00010e 	bge	r11,r20,11c0 <___vfprintf_internal_r+0xc68>
    11bc:	a02b883a 	mov	r21,r20
    11c0:	d8000715 	stw	zero,28(sp)
    11c4:	6b403fcc 	andi	r13,r13,255
    11c8:	6b40201c 	xori	r13,r13,128
    11cc:	6b7fe004 	addi	r13,r13,-128
    11d0:	683e8126 	beq	r13,zero,bd8 <___vfprintf_internal_r+0x680>
    11d4:	ad400044 	addi	r21,r21,1
    11d8:	003e7f06 	br	bd8 <___vfprintf_internal_r+0x680>
    11dc:	dc000e15 	stw	r16,56(sp)
    11e0:	b823883a 	mov	r17,r23
    11e4:	a021883a 	mov	r16,r20
    11e8:	db000715 	stw	r12,28(sp)
    11ec:	9829883a 	mov	r20,r19
    11f0:	dac00f15 	stw	r11,60(sp)
    11f4:	4025883a 	mov	r18,r8
    11f8:	6827883a 	mov	r19,r13
    11fc:	00000206 	br	1208 <___vfprintf_internal_r+0xcb0>
    1200:	102b883a 	mov	r21,r2
    1204:	1821883a 	mov	r16,r3
    1208:	a809883a 	mov	r4,r21
    120c:	800b883a 	mov	r5,r16
    1210:	01800284 	movi	r6,10
    1214:	000f883a 	mov	r7,zero
    1218:	0009d3c0 	call	9d3c <__umoddi3>
    121c:	10800c04 	addi	r2,r2,48
    1220:	8c7fffc4 	addi	r17,r17,-1
    1224:	a809883a 	mov	r4,r21
    1228:	800b883a 	mov	r5,r16
    122c:	88800005 	stb	r2,0(r17)
    1230:	01800284 	movi	r6,10
    1234:	000f883a 	mov	r7,zero
    1238:	00097200 	call	9720 <__udivdi3>
    123c:	803ff01e 	bne	r16,zero,1200 <___vfprintf_internal_r+0xca8>
    1240:	ad4002a8 	cmpgeui	r21,r21,10
    1244:	a83fee1e 	bne	r21,zero,1200 <___vfprintf_internal_r+0xca8>
    1248:	db000717 	ldw	r12,28(sp)
    124c:	dc000e17 	ldw	r16,56(sp)
    1250:	dac00f17 	ldw	r11,60(sp)
    1254:	981b883a 	mov	r13,r19
    1258:	9011883a 	mov	r8,r18
    125c:	a027883a 	mov	r19,r20
    1260:	bc69c83a 	sub	r20,r23,r17
    1264:	6025883a 	mov	r18,r12
    1268:	003fd206 	br	11b4 <___vfprintf_internal_r+0xc5c>
    126c:	e2801990 	cmplti	r10,fp,102
    1270:	5000ea1e 	bne	r10,zero,161c <___vfprintf_internal_r+0x10c4>
    1274:	d9000917 	ldw	r4,36(sp)
    1278:	d9400a17 	ldw	r5,40(sp)
    127c:	000d883a 	mov	r6,zero
    1280:	000f883a 	mov	r7,zero
    1284:	da000f15 	stw	r8,60(sp)
    1288:	d8c00e15 	stw	r3,56(sp)
    128c:	000b7e80 	call	b7e8 <__eqdf2>
    1290:	d8c00e17 	ldw	r3,56(sp)
    1294:	da000f17 	ldw	r8,60(sp)
    1298:	1001891e 	bne	r2,zero,18c0 <___vfprintf_internal_r+0x1368>
    129c:	d8801d17 	ldw	r2,116(sp)
    12a0:	01000074 	movhi	r4,1
    12a4:	213d0c04 	addi	r4,r4,-3024
    12a8:	10800044 	addi	r2,r2,1
    12ac:	18c00044 	addi	r3,r3,1
    12b0:	41000015 	stw	r4,0(r8)
    12b4:	01000044 	movi	r4,1
    12b8:	d8801d15 	stw	r2,116(sp)
    12bc:	41000115 	stw	r4,4(r8)
    12c0:	d8c01e15 	stw	r3,120(sp)
    12c4:	10800208 	cmpgei	r2,r2,8
    12c8:	1003351e 	bne	r2,zero,1fa0 <___vfprintf_internal_r+0x1a48>
    12cc:	42000204 	addi	r8,r8,8
    12d0:	d8801617 	ldw	r2,88(sp)
    12d4:	d8c00817 	ldw	r3,32(sp)
    12d8:	10c00416 	blt	r2,r3,12ec <___vfprintf_internal_r+0xd94>
    12dc:	9080004c 	andi	r2,r18,1
    12e0:	1000021e 	bne	r2,zero,12ec <___vfprintf_internal_r+0xd94>
    12e4:	d8c01e17 	ldw	r3,120(sp)
    12e8:	003e6e06 	br	ca4 <___vfprintf_internal_r+0x74c>
    12ec:	d8800d17 	ldw	r2,52(sp)
    12f0:	d8c01e17 	ldw	r3,120(sp)
    12f4:	d9000b17 	ldw	r4,44(sp)
    12f8:	40800015 	stw	r2,0(r8)
    12fc:	d8801d17 	ldw	r2,116(sp)
    1300:	20c7883a 	add	r3,r4,r3
    1304:	41000115 	stw	r4,4(r8)
    1308:	10800044 	addi	r2,r2,1
    130c:	d8801d15 	stw	r2,116(sp)
    1310:	d8c01e15 	stw	r3,120(sp)
    1314:	10800208 	cmpgei	r2,r2,8
    1318:	1002b41e 	bne	r2,zero,1dec <___vfprintf_internal_r+0x1894>
    131c:	42000204 	addi	r8,r8,8
    1320:	d8800817 	ldw	r2,32(sp)
    1324:	147fffc4 	addi	r17,r2,-1
    1328:	047e5e0e 	bge	zero,r17,ca4 <___vfprintf_internal_r+0x74c>
    132c:	03000074 	movhi	r12,1
    1330:	89000450 	cmplti	r4,r17,17
    1334:	633d0c84 	addi	r12,r12,-3022
    1338:	d8801d17 	ldw	r2,116(sp)
    133c:	2003791e 	bne	r4,zero,2124 <___vfprintf_internal_r+0x1bcc>
    1340:	dc000715 	stw	r16,28(sp)
    1344:	05000404 	movi	r20,16
    1348:	df000517 	ldw	fp,20(sp)
    134c:	6021883a 	mov	r16,r12
    1350:	00000406 	br	1364 <___vfprintf_internal_r+0xe0c>
    1354:	42000204 	addi	r8,r8,8
    1358:	8c7ffc04 	addi	r17,r17,-16
    135c:	89000448 	cmpgei	r4,r17,17
    1360:	20036e26 	beq	r4,zero,211c <___vfprintf_internal_r+0x1bc4>
    1364:	10800044 	addi	r2,r2,1
    1368:	18c00404 	addi	r3,r3,16
    136c:	44000015 	stw	r16,0(r8)
    1370:	45000115 	stw	r20,4(r8)
    1374:	d8c01e15 	stw	r3,120(sp)
    1378:	d8801d15 	stw	r2,116(sp)
    137c:	11000208 	cmpgei	r4,r2,8
    1380:	203ff426 	beq	r4,zero,1354 <___vfprintf_internal_r+0xdfc>
    1384:	d9801c04 	addi	r6,sp,112
    1388:	980b883a 	mov	r5,r19
    138c:	e009883a 	mov	r4,fp
    1390:	00078b40 	call	78b4 <__sprint_r>
    1394:	103d4f1e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1398:	d8c01e17 	ldw	r3,120(sp)
    139c:	d8801d17 	ldw	r2,116(sp)
    13a0:	b811883a 	mov	r8,r23
    13a4:	003fec06 	br	1358 <___vfprintf_internal_r+0xe00>
    13a8:	854fc83a 	sub	r7,r16,r21
    13ac:	01fe2f0e 	bge	zero,r7,c6c <___vfprintf_internal_r+0x714>
    13b0:	03000074 	movhi	r12,1
    13b4:	39000450 	cmplti	r4,r7,17
    13b8:	633d0c84 	addi	r12,r12,-3022
    13bc:	d8801d17 	ldw	r2,116(sp)
    13c0:	2000271e 	bne	r4,zero,1460 <___vfprintf_internal_r+0xf08>
    13c4:	dc400e15 	stw	r17,56(sp)
    13c8:	dc800f15 	stw	r18,60(sp)
    13cc:	dc001015 	stw	r16,64(sp)
    13d0:	03400404 	movi	r13,16
    13d4:	3821883a 	mov	r16,r7
    13d8:	dac01215 	stw	r11,72(sp)
    13dc:	dc400517 	ldw	r17,20(sp)
    13e0:	6025883a 	mov	r18,r12
    13e4:	00000406 	br	13f8 <___vfprintf_internal_r+0xea0>
    13e8:	843ffc04 	addi	r16,r16,-16
    13ec:	81000448 	cmpgei	r4,r16,17
    13f0:	42000204 	addi	r8,r8,8
    13f4:	20001426 	beq	r4,zero,1448 <___vfprintf_internal_r+0xef0>
    13f8:	10800044 	addi	r2,r2,1
    13fc:	18c00404 	addi	r3,r3,16
    1400:	44800015 	stw	r18,0(r8)
    1404:	43400115 	stw	r13,4(r8)
    1408:	d8c01e15 	stw	r3,120(sp)
    140c:	d8801d15 	stw	r2,116(sp)
    1410:	11000208 	cmpgei	r4,r2,8
    1414:	203ff426 	beq	r4,zero,13e8 <___vfprintf_internal_r+0xe90>
    1418:	d9801c04 	addi	r6,sp,112
    141c:	980b883a 	mov	r5,r19
    1420:	8809883a 	mov	r4,r17
    1424:	00078b40 	call	78b4 <__sprint_r>
    1428:	103d2a1e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    142c:	843ffc04 	addi	r16,r16,-16
    1430:	81000448 	cmpgei	r4,r16,17
    1434:	d8c01e17 	ldw	r3,120(sp)
    1438:	d8801d17 	ldw	r2,116(sp)
    143c:	b811883a 	mov	r8,r23
    1440:	03400404 	movi	r13,16
    1444:	203fec1e 	bne	r4,zero,13f8 <___vfprintf_internal_r+0xea0>
    1448:	800f883a 	mov	r7,r16
    144c:	9019883a 	mov	r12,r18
    1450:	dc400e17 	ldw	r17,56(sp)
    1454:	dc001017 	ldw	r16,64(sp)
    1458:	dac01217 	ldw	r11,72(sp)
    145c:	dc800f17 	ldw	r18,60(sp)
    1460:	10800044 	addi	r2,r2,1
    1464:	19c7883a 	add	r3,r3,r7
    1468:	d8801d15 	stw	r2,116(sp)
    146c:	43000015 	stw	r12,0(r8)
    1470:	41c00115 	stw	r7,4(r8)
    1474:	d8c01e15 	stw	r3,120(sp)
    1478:	10800208 	cmpgei	r2,r2,8
    147c:	1002cf1e 	bne	r2,zero,1fbc <___vfprintf_internal_r+0x1a64>
    1480:	5d0fc83a 	sub	r7,r11,r20
    1484:	42000204 	addi	r8,r8,8
    1488:	01fdfa0e 	bge	zero,r7,c74 <___vfprintf_internal_r+0x71c>
    148c:	03000074 	movhi	r12,1
    1490:	39000450 	cmplti	r4,r7,17
    1494:	633d0c84 	addi	r12,r12,-3022
    1498:	d8801d17 	ldw	r2,116(sp)
    149c:	2000251e 	bne	r4,zero,1534 <___vfprintf_internal_r+0xfdc>
    14a0:	dc400e15 	stw	r17,56(sp)
    14a4:	dc800f15 	stw	r18,60(sp)
    14a8:	dc001015 	stw	r16,64(sp)
    14ac:	02c00404 	movi	r11,16
    14b0:	3821883a 	mov	r16,r7
    14b4:	dc400517 	ldw	r17,20(sp)
    14b8:	6025883a 	mov	r18,r12
    14bc:	00000406 	br	14d0 <___vfprintf_internal_r+0xf78>
    14c0:	843ffc04 	addi	r16,r16,-16
    14c4:	81000448 	cmpgei	r4,r16,17
    14c8:	42000204 	addi	r8,r8,8
    14cc:	20001426 	beq	r4,zero,1520 <___vfprintf_internal_r+0xfc8>
    14d0:	10800044 	addi	r2,r2,1
    14d4:	18c00404 	addi	r3,r3,16
    14d8:	44800015 	stw	r18,0(r8)
    14dc:	42c00115 	stw	r11,4(r8)
    14e0:	d8c01e15 	stw	r3,120(sp)
    14e4:	d8801d15 	stw	r2,116(sp)
    14e8:	11000208 	cmpgei	r4,r2,8
    14ec:	203ff426 	beq	r4,zero,14c0 <___vfprintf_internal_r+0xf68>
    14f0:	d9801c04 	addi	r6,sp,112
    14f4:	980b883a 	mov	r5,r19
    14f8:	8809883a 	mov	r4,r17
    14fc:	00078b40 	call	78b4 <__sprint_r>
    1500:	103cf41e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1504:	843ffc04 	addi	r16,r16,-16
    1508:	81000448 	cmpgei	r4,r16,17
    150c:	d8c01e17 	ldw	r3,120(sp)
    1510:	d8801d17 	ldw	r2,116(sp)
    1514:	b811883a 	mov	r8,r23
    1518:	02c00404 	movi	r11,16
    151c:	203fec1e 	bne	r4,zero,14d0 <___vfprintf_internal_r+0xf78>
    1520:	800f883a 	mov	r7,r16
    1524:	9019883a 	mov	r12,r18
    1528:	dc400e17 	ldw	r17,56(sp)
    152c:	dc001017 	ldw	r16,64(sp)
    1530:	dc800f17 	ldw	r18,60(sp)
    1534:	10800044 	addi	r2,r2,1
    1538:	19c7883a 	add	r3,r3,r7
    153c:	d8801d15 	stw	r2,116(sp)
    1540:	43000015 	stw	r12,0(r8)
    1544:	41c00115 	stw	r7,4(r8)
    1548:	d8c01e15 	stw	r3,120(sp)
    154c:	10800208 	cmpgei	r2,r2,8
    1550:	1001651e 	bne	r2,zero,1ae8 <___vfprintf_internal_r+0x1590>
    1554:	42000204 	addi	r8,r8,8
    1558:	003dc606 	br	c74 <___vfprintf_internal_r+0x71c>
    155c:	d9000517 	ldw	r4,20(sp)
    1560:	d9801c04 	addi	r6,sp,112
    1564:	980b883a 	mov	r5,r19
    1568:	00078b40 	call	78b4 <__sprint_r>
    156c:	103dd726 	beq	r2,zero,ccc <___vfprintf_internal_r+0x774>
    1570:	003cd806 	br	8d4 <___vfprintf_internal_r+0x37c>
    1574:	d9000517 	ldw	r4,20(sp)
    1578:	d9801c04 	addi	r6,sp,112
    157c:	980b883a 	mov	r5,r19
    1580:	00078b40 	call	78b4 <__sprint_r>
    1584:	103cd31e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1588:	d9001617 	ldw	r4,88(sp)
    158c:	d8c01e17 	ldw	r3,120(sp)
    1590:	b811883a 	mov	r8,r23
    1594:	2002971e 	bne	r4,zero,1ff4 <___vfprintf_internal_r+0x1a9c>
    1598:	d9000817 	ldw	r4,32(sp)
    159c:	9080004c 	andi	r2,r18,1
    15a0:	1104b03a 	or	r2,r2,r4
    15a4:	103dbf26 	beq	r2,zero,ca4 <___vfprintf_internal_r+0x74c>
    15a8:	d8800d17 	ldw	r2,52(sp)
    15ac:	d9000b17 	ldw	r4,44(sp)
    15b0:	40800015 	stw	r2,0(r8)
    15b4:	d8801d17 	ldw	r2,116(sp)
    15b8:	20c7883a 	add	r3,r4,r3
    15bc:	41000115 	stw	r4,4(r8)
    15c0:	10800044 	addi	r2,r2,1
    15c4:	d8c01e15 	stw	r3,120(sp)
    15c8:	d8801d15 	stw	r2,116(sp)
    15cc:	11000208 	cmpgei	r4,r2,8
    15d0:	2003691e 	bne	r4,zero,2378 <___vfprintf_internal_r+0x1e20>
    15d4:	42000204 	addi	r8,r8,8
    15d8:	d9000817 	ldw	r4,32(sp)
    15dc:	10800044 	addi	r2,r2,1
    15e0:	d8801d15 	stw	r2,116(sp)
    15e4:	20c7883a 	add	r3,r4,r3
    15e8:	44400015 	stw	r17,0(r8)
    15ec:	41000115 	stw	r4,4(r8)
    15f0:	d8c01e15 	stw	r3,120(sp)
    15f4:	10800208 	cmpgei	r2,r2,8
    15f8:	103da926 	beq	r2,zero,ca0 <___vfprintf_internal_r+0x748>
    15fc:	d9000517 	ldw	r4,20(sp)
    1600:	d9801c04 	addi	r6,sp,112
    1604:	980b883a 	mov	r5,r19
    1608:	00078b40 	call	78b4 <__sprint_r>
    160c:	103cb11e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1610:	d8c01e17 	ldw	r3,120(sp)
    1614:	b811883a 	mov	r8,r23
    1618:	003da206 	br	ca4 <___vfprintf_internal_r+0x74c>
    161c:	d8800817 	ldw	r2,32(sp)
    1620:	da801d17 	ldw	r10,116(sp)
    1624:	18c00044 	addi	r3,r3,1
    1628:	10800088 	cmpgei	r2,r2,2
    162c:	55000044 	addi	r20,r10,1
    1630:	47000204 	addi	fp,r8,8
    1634:	1000fb26 	beq	r2,zero,1a24 <___vfprintf_internal_r+0x14cc>
    1638:	00800044 	movi	r2,1
    163c:	40800115 	stw	r2,4(r8)
    1640:	44400015 	stw	r17,0(r8)
    1644:	d8c01e15 	stw	r3,120(sp)
    1648:	dd001d15 	stw	r20,116(sp)
    164c:	a0800210 	cmplti	r2,r20,8
    1650:	10022e26 	beq	r2,zero,1f0c <___vfprintf_internal_r+0x19b4>
    1654:	d8800b17 	ldw	r2,44(sp)
    1658:	d9000d17 	ldw	r4,52(sp)
    165c:	a5000044 	addi	r20,r20,1
    1660:	1887883a 	add	r3,r3,r2
    1664:	e0800115 	stw	r2,4(fp)
    1668:	e1000015 	stw	r4,0(fp)
    166c:	d8c01e15 	stw	r3,120(sp)
    1670:	dd001d15 	stw	r20,116(sp)
    1674:	a0800208 	cmpgei	r2,r20,8
    1678:	10021b1e 	bne	r2,zero,1ee8 <___vfprintf_internal_r+0x1990>
    167c:	e7000204 	addi	fp,fp,8
    1680:	d8800817 	ldw	r2,32(sp)
    1684:	d9000917 	ldw	r4,36(sp)
    1688:	d9400a17 	ldw	r5,40(sp)
    168c:	a2800044 	addi	r10,r20,1
    1690:	e2000204 	addi	r8,fp,8
    1694:	12ffffc4 	addi	r11,r2,-1
    1698:	000d883a 	mov	r6,zero
    169c:	000f883a 	mov	r7,zero
    16a0:	d8c01215 	stw	r3,72(sp)
    16a4:	da801015 	stw	r10,64(sp)
    16a8:	da800f15 	stw	r10,60(sp)
    16ac:	da000e15 	stw	r8,56(sp)
    16b0:	dac00715 	stw	r11,28(sp)
    16b4:	000b7e80 	call	b7e8 <__eqdf2>
    16b8:	dac00717 	ldw	r11,28(sp)
    16bc:	da000e17 	ldw	r8,56(sp)
    16c0:	db400f17 	ldw	r13,60(sp)
    16c4:	da801017 	ldw	r10,64(sp)
    16c8:	d8c01217 	ldw	r3,72(sp)
    16cc:	1000e126 	beq	r2,zero,1a54 <___vfprintf_internal_r+0x14fc>
    16d0:	8c400044 	addi	r17,r17,1
    16d4:	1ac7883a 	add	r3,r3,r11
    16d8:	da801d15 	stw	r10,116(sp)
    16dc:	e4400015 	stw	r17,0(fp)
    16e0:	e2c00115 	stw	r11,4(fp)
    16e4:	d8c01e15 	stw	r3,120(sp)
    16e8:	52800208 	cmpgei	r10,r10,8
    16ec:	5001ad1e 	bne	r10,zero,1da4 <___vfprintf_internal_r+0x184c>
    16f0:	e0800404 	addi	r2,fp,16
    16f4:	a2800084 	addi	r10,r20,2
    16f8:	4039883a 	mov	fp,r8
    16fc:	1011883a 	mov	r8,r2
    1700:	d9001117 	ldw	r4,68(sp)
    1704:	d8801844 	addi	r2,sp,97
    1708:	da801d15 	stw	r10,116(sp)
    170c:	20c7883a 	add	r3,r4,r3
    1710:	e0800015 	stw	r2,0(fp)
    1714:	e1000115 	stw	r4,4(fp)
    1718:	d8c01e15 	stw	r3,120(sp)
    171c:	52800210 	cmplti	r10,r10,8
    1720:	503d601e 	bne	r10,zero,ca4 <___vfprintf_internal_r+0x74c>
    1724:	003fb506 	br	15fc <___vfprintf_internal_r+0x10a4>
    1728:	9019883a 	mov	r12,r18
    172c:	003e1906 	br	f94 <___vfprintf_internal_r+0xa3c>
    1730:	03000074 	movhi	r12,1
    1734:	39000450 	cmplti	r4,r7,17
    1738:	633d1084 	addi	r12,r12,-3006
    173c:	d8801d17 	ldw	r2,116(sp)
    1740:	20002b1e 	bne	r4,zero,17f0 <___vfprintf_internal_r+0x1298>
    1744:	dc401015 	stw	r17,64(sp)
    1748:	dc801215 	stw	r18,72(sp)
    174c:	dc001315 	stw	r16,76(sp)
    1750:	03c00404 	movi	r15,16
    1754:	db800e15 	stw	r14,56(sp)
    1758:	db400f15 	stw	r13,60(sp)
    175c:	dac01415 	stw	r11,80(sp)
    1760:	3821883a 	mov	r16,r7
    1764:	dc400517 	ldw	r17,20(sp)
    1768:	6025883a 	mov	r18,r12
    176c:	00000406 	br	1780 <___vfprintf_internal_r+0x1228>
    1770:	843ffc04 	addi	r16,r16,-16
    1774:	81000448 	cmpgei	r4,r16,17
    1778:	42000204 	addi	r8,r8,8
    177c:	20001426 	beq	r4,zero,17d0 <___vfprintf_internal_r+0x1278>
    1780:	10800044 	addi	r2,r2,1
    1784:	18c00404 	addi	r3,r3,16
    1788:	44800015 	stw	r18,0(r8)
    178c:	43c00115 	stw	r15,4(r8)
    1790:	d8c01e15 	stw	r3,120(sp)
    1794:	d8801d15 	stw	r2,116(sp)
    1798:	11000208 	cmpgei	r4,r2,8
    179c:	203ff426 	beq	r4,zero,1770 <___vfprintf_internal_r+0x1218>
    17a0:	d9801c04 	addi	r6,sp,112
    17a4:	980b883a 	mov	r5,r19
    17a8:	8809883a 	mov	r4,r17
    17ac:	00078b40 	call	78b4 <__sprint_r>
    17b0:	103c481e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    17b4:	843ffc04 	addi	r16,r16,-16
    17b8:	81000448 	cmpgei	r4,r16,17
    17bc:	d8c01e17 	ldw	r3,120(sp)
    17c0:	d8801d17 	ldw	r2,116(sp)
    17c4:	b811883a 	mov	r8,r23
    17c8:	03c00404 	movi	r15,16
    17cc:	203fec1e 	bne	r4,zero,1780 <___vfprintf_internal_r+0x1228>
    17d0:	800f883a 	mov	r7,r16
    17d4:	9019883a 	mov	r12,r18
    17d8:	db800e17 	ldw	r14,56(sp)
    17dc:	db400f17 	ldw	r13,60(sp)
    17e0:	dc401017 	ldw	r17,64(sp)
    17e4:	dac01417 	ldw	r11,80(sp)
    17e8:	dc001317 	ldw	r16,76(sp)
    17ec:	dc801217 	ldw	r18,72(sp)
    17f0:	10800044 	addi	r2,r2,1
    17f4:	19c7883a 	add	r3,r3,r7
    17f8:	d8801d15 	stw	r2,116(sp)
    17fc:	43000015 	stw	r12,0(r8)
    1800:	41c00115 	stw	r7,4(r8)
    1804:	d8c01e15 	stw	r3,120(sp)
    1808:	10800208 	cmpgei	r2,r2,8
    180c:	1001d61e 	bne	r2,zero,1f68 <___vfprintf_internal_r+0x1a10>
    1810:	42000204 	addi	r8,r8,8
    1814:	003cf806 	br	bf8 <___vfprintf_internal_r+0x6a0>
    1818:	d9000517 	ldw	r4,20(sp)
    181c:	d9801c04 	addi	r6,sp,112
    1820:	980b883a 	mov	r5,r19
    1824:	dac01015 	stw	r11,64(sp)
    1828:	db400f15 	stw	r13,60(sp)
    182c:	db800e15 	stw	r14,56(sp)
    1830:	00078b40 	call	78b4 <__sprint_r>
    1834:	103c271e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1838:	d8c01e17 	ldw	r3,120(sp)
    183c:	b811883a 	mov	r8,r23
    1840:	dac01017 	ldw	r11,64(sp)
    1844:	db400f17 	ldw	r13,60(sp)
    1848:	db800e17 	ldw	r14,56(sp)
    184c:	003cf806 	br	c30 <___vfprintf_internal_r+0x6d8>
    1850:	d9000517 	ldw	r4,20(sp)
    1854:	d9801c04 	addi	r6,sp,112
    1858:	980b883a 	mov	r5,r19
    185c:	dac00f15 	stw	r11,60(sp)
    1860:	db400e15 	stw	r13,56(sp)
    1864:	00078b40 	call	78b4 <__sprint_r>
    1868:	103c1a1e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    186c:	d8c01e17 	ldw	r3,120(sp)
    1870:	b811883a 	mov	r8,r23
    1874:	dac00f17 	ldw	r11,60(sp)
    1878:	db400e17 	ldw	r13,56(sp)
    187c:	003cf906 	br	c64 <___vfprintf_internal_r+0x70c>
    1880:	d9000c17 	ldw	r4,48(sp)
    1884:	b823883a 	mov	r17,r23
    1888:	a88003cc 	andi	r2,r21,15
    188c:	a006973a 	slli	r3,r20,28
    1890:	2085883a 	add	r2,r4,r2
    1894:	a82ad13a 	srli	r21,r21,4
    1898:	10800003 	ldbu	r2,0(r2)
    189c:	a028d13a 	srli	r20,r20,4
    18a0:	8c7fffc4 	addi	r17,r17,-1
    18a4:	1d6ab03a 	or	r21,r3,r21
    18a8:	88800005 	stb	r2,0(r17)
    18ac:	ad04b03a 	or	r2,r21,r20
    18b0:	103ff51e 	bne	r2,zero,1888 <___vfprintf_internal_r+0x1330>
    18b4:	bc69c83a 	sub	r20,r23,r17
    18b8:	6025883a 	mov	r18,r12
    18bc:	003e3d06 	br	11b4 <___vfprintf_internal_r+0xc5c>
    18c0:	d9001617 	ldw	r4,88(sp)
    18c4:	01019a0e 	bge	zero,r4,1f30 <___vfprintf_internal_r+0x19d8>
    18c8:	d8800717 	ldw	r2,28(sp)
    18cc:	d9000817 	ldw	r4,32(sp)
    18d0:	1039883a 	mov	fp,r2
    18d4:	20812816 	blt	r4,r2,1d78 <___vfprintf_internal_r+0x1820>
    18d8:	07000a0e 	bge	zero,fp,1904 <___vfprintf_internal_r+0x13ac>
    18dc:	d8801d17 	ldw	r2,116(sp)
    18e0:	1f07883a 	add	r3,r3,fp
    18e4:	44400015 	stw	r17,0(r8)
    18e8:	10800044 	addi	r2,r2,1
    18ec:	d8801d15 	stw	r2,116(sp)
    18f0:	47000115 	stw	fp,4(r8)
    18f4:	d8c01e15 	stw	r3,120(sp)
    18f8:	10800208 	cmpgei	r2,r2,8
    18fc:	1002de1e 	bne	r2,zero,2478 <___vfprintf_internal_r+0x1f20>
    1900:	42000204 	addi	r8,r8,8
    1904:	e0014116 	blt	fp,zero,1e0c <___vfprintf_internal_r+0x18b4>
    1908:	d8800717 	ldw	r2,28(sp)
    190c:	1739c83a 	sub	fp,r2,fp
    1910:	07014816 	blt	zero,fp,1e34 <___vfprintf_internal_r+0x18dc>
    1914:	d9001617 	ldw	r4,88(sp)
    1918:	d8800817 	ldw	r2,32(sp)
    191c:	2081190e 	bge	r4,r2,1d84 <___vfprintf_internal_r+0x182c>
    1920:	d8800d17 	ldw	r2,52(sp)
    1924:	d9400b17 	ldw	r5,44(sp)
    1928:	40800015 	stw	r2,0(r8)
    192c:	d8801d17 	ldw	r2,116(sp)
    1930:	1947883a 	add	r3,r3,r5
    1934:	41400115 	stw	r5,4(r8)
    1938:	10800044 	addi	r2,r2,1
    193c:	d8801d15 	stw	r2,116(sp)
    1940:	d8c01e15 	stw	r3,120(sp)
    1944:	10800208 	cmpgei	r2,r2,8
    1948:	1002651e 	bne	r2,zero,22e0 <___vfprintf_internal_r+0x1d88>
    194c:	42000204 	addi	r8,r8,8
    1950:	d8800817 	ldw	r2,32(sp)
    1954:	d9400717 	ldw	r5,28(sp)
    1958:	1105c83a 	sub	r2,r2,r4
    195c:	29015e0e 	bge	r5,r4,1ed8 <___vfprintf_internal_r+0x1980>
    1960:	1039883a 	mov	fp,r2
    1964:	07000c0e 	bge	zero,fp,1998 <___vfprintf_internal_r+0x1440>
    1968:	d9000717 	ldw	r4,28(sp)
    196c:	1f07883a 	add	r3,r3,fp
    1970:	47000115 	stw	fp,4(r8)
    1974:	8923883a 	add	r17,r17,r4
    1978:	d9001d17 	ldw	r4,116(sp)
    197c:	44400015 	stw	r17,0(r8)
    1980:	d8c01e15 	stw	r3,120(sp)
    1984:	21000044 	addi	r4,r4,1
    1988:	d9001d15 	stw	r4,116(sp)
    198c:	21000208 	cmpgei	r4,r4,8
    1990:	2002c41e 	bne	r4,zero,24a4 <___vfprintf_internal_r+0x1f4c>
    1994:	42000204 	addi	r8,r8,8
    1998:	e000010e 	bge	fp,zero,19a0 <___vfprintf_internal_r+0x1448>
    199c:	0039883a 	mov	fp,zero
    19a0:	1739c83a 	sub	fp,r2,fp
    19a4:	073cbf0e 	bge	zero,fp,ca4 <___vfprintf_internal_r+0x74c>
    19a8:	03000074 	movhi	r12,1
    19ac:	e1000450 	cmplti	r4,fp,17
    19b0:	633d0c84 	addi	r12,r12,-3022
    19b4:	d8801d17 	ldw	r2,116(sp)
    19b8:	2002401e 	bne	r4,zero,22bc <___vfprintf_internal_r+0x1d64>
    19bc:	dc000715 	stw	r16,28(sp)
    19c0:	05000404 	movi	r20,16
    19c4:	dc400517 	ldw	r17,20(sp)
    19c8:	6021883a 	mov	r16,r12
    19cc:	00000406 	br	19e0 <___vfprintf_internal_r+0x1488>
    19d0:	42000204 	addi	r8,r8,8
    19d4:	e73ffc04 	addi	fp,fp,-16
    19d8:	e1000448 	cmpgei	r4,fp,17
    19dc:	20023526 	beq	r4,zero,22b4 <___vfprintf_internal_r+0x1d5c>
    19e0:	10800044 	addi	r2,r2,1
    19e4:	18c00404 	addi	r3,r3,16
    19e8:	44000015 	stw	r16,0(r8)
    19ec:	45000115 	stw	r20,4(r8)
    19f0:	d8c01e15 	stw	r3,120(sp)
    19f4:	d8801d15 	stw	r2,116(sp)
    19f8:	11000208 	cmpgei	r4,r2,8
    19fc:	203ff426 	beq	r4,zero,19d0 <___vfprintf_internal_r+0x1478>
    1a00:	d9801c04 	addi	r6,sp,112
    1a04:	980b883a 	mov	r5,r19
    1a08:	8809883a 	mov	r4,r17
    1a0c:	00078b40 	call	78b4 <__sprint_r>
    1a10:	103bb01e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1a14:	d8c01e17 	ldw	r3,120(sp)
    1a18:	d8801d17 	ldw	r2,116(sp)
    1a1c:	b811883a 	mov	r8,r23
    1a20:	003fec06 	br	19d4 <___vfprintf_internal_r+0x147c>
    1a24:	9080004c 	andi	r2,r18,1
    1a28:	103f031e 	bne	r2,zero,1638 <___vfprintf_internal_r+0x10e0>
    1a2c:	00800044 	movi	r2,1
    1a30:	dd001d15 	stw	r20,116(sp)
    1a34:	44400015 	stw	r17,0(r8)
    1a38:	40800115 	stw	r2,4(r8)
    1a3c:	d8c01e15 	stw	r3,120(sp)
    1a40:	a5000208 	cmpgei	r20,r20,8
    1a44:	a000d71e 	bne	r20,zero,1da4 <___vfprintf_internal_r+0x184c>
    1a48:	52800084 	addi	r10,r10,2
    1a4c:	42000404 	addi	r8,r8,16
    1a50:	003f2b06 	br	1700 <___vfprintf_internal_r+0x11a8>
    1a54:	02ff2a0e 	bge	zero,r11,1700 <___vfprintf_internal_r+0x11a8>
    1a58:	58800450 	cmplti	r2,r11,17
    1a5c:	03000074 	movhi	r12,1
    1a60:	1002fe1e 	bne	r2,zero,265c <___vfprintf_internal_r+0x2104>
    1a64:	633d0c84 	addi	r12,r12,-3022
    1a68:	dd400715 	stw	r21,28(sp)
    1a6c:	dc800e15 	stw	r18,56(sp)
    1a70:	e005883a 	mov	r2,fp
    1a74:	04400404 	movi	r17,16
    1a78:	b039883a 	mov	fp,r22
    1a7c:	5825883a 	mov	r18,r11
    1a80:	802d883a 	mov	r22,r16
    1a84:	602b883a 	mov	r21,r12
    1a88:	dc000517 	ldw	r16,20(sp)
    1a8c:	6829883a 	mov	r20,r13
    1a90:	00000506 	br	1aa8 <___vfprintf_internal_r+0x1550>
    1a94:	10800204 	addi	r2,r2,8
    1a98:	94bffc04 	addi	r18,r18,-16
    1a9c:	91000448 	cmpgei	r4,r18,17
    1aa0:	20018a26 	beq	r4,zero,20cc <___vfprintf_internal_r+0x1b74>
    1aa4:	a5000044 	addi	r20,r20,1
    1aa8:	18c00404 	addi	r3,r3,16
    1aac:	15400015 	stw	r21,0(r2)
    1ab0:	14400115 	stw	r17,4(r2)
    1ab4:	d8c01e15 	stw	r3,120(sp)
    1ab8:	dd001d15 	stw	r20,116(sp)
    1abc:	a1000208 	cmpgei	r4,r20,8
    1ac0:	203ff426 	beq	r4,zero,1a94 <___vfprintf_internal_r+0x153c>
    1ac4:	d9801c04 	addi	r6,sp,112
    1ac8:	980b883a 	mov	r5,r19
    1acc:	8009883a 	mov	r4,r16
    1ad0:	00078b40 	call	78b4 <__sprint_r>
    1ad4:	103b7f1e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1ad8:	dd001d17 	ldw	r20,116(sp)
    1adc:	d8c01e17 	ldw	r3,120(sp)
    1ae0:	b805883a 	mov	r2,r23
    1ae4:	003fec06 	br	1a98 <___vfprintf_internal_r+0x1540>
    1ae8:	d9000517 	ldw	r4,20(sp)
    1aec:	d9801c04 	addi	r6,sp,112
    1af0:	980b883a 	mov	r5,r19
    1af4:	00078b40 	call	78b4 <__sprint_r>
    1af8:	103b761e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1afc:	d8c01e17 	ldw	r3,120(sp)
    1b00:	b811883a 	mov	r8,r23
    1b04:	003c5b06 	br	c74 <___vfprintf_internal_r+0x71c>
    1b08:	0029883a 	mov	r20,zero
    1b0c:	003bdc06 	br	a80 <___vfprintf_internal_r+0x528>
    1b10:	b023883a 	mov	r17,r22
    1b14:	003ae306 	br	6a4 <___vfprintf_internal_r+0x14c>
    1b18:	b823883a 	mov	r17,r23
    1b1c:	003da506 	br	11b4 <___vfprintf_internal_r+0xc5c>
    1b20:	d9000917 	ldw	r4,36(sp)
    1b24:	d9400a17 	ldw	r5,40(sp)
    1b28:	da000f15 	stw	r8,60(sp)
    1b2c:	200d883a 	mov	r6,r4
    1b30:	280f883a 	mov	r7,r5
    1b34:	dac00e15 	stw	r11,56(sp)
    1b38:	db000715 	stw	r12,28(sp)
    1b3c:	000cb940 	call	cb94 <__unorddf2>
    1b40:	db000717 	ldw	r12,28(sp)
    1b44:	dac00e17 	ldw	r11,56(sp)
    1b48:	da000f17 	ldw	r8,60(sp)
    1b4c:	1002b21e 	bne	r2,zero,2618 <___vfprintf_internal_r+0x20c0>
    1b50:	00fff7c4 	movi	r3,-33
    1b54:	e0c6703a 	and	r3,fp,r3
    1b58:	58bfffe0 	cmpeqi	r2,r11,-1
    1b5c:	d8c00715 	stw	r3,28(sp)
    1b60:	10024e1e 	bne	r2,zero,249c <___vfprintf_internal_r+0x1f44>
    1b64:	188011d8 	cmpnei	r2,r3,71
    1b68:	10020026 	beq	r2,zero,236c <___vfprintf_internal_r+0x1e14>
    1b6c:	d8800a17 	ldw	r2,40(sp)
    1b70:	64804014 	ori	r18,r12,256
    1b74:	1001e316 	blt	r2,zero,2304 <___vfprintf_internal_r+0x1dac>
    1b78:	dd400a17 	ldw	r21,40(sp)
    1b7c:	d8000e05 	stb	zero,56(sp)
    1b80:	e08019a0 	cmpeqi	r2,fp,102
    1b84:	d8800f15 	stw	r2,60(sp)
    1b88:	1001771e 	bne	r2,zero,2168 <___vfprintf_internal_r+0x1c10>
    1b8c:	e08011a0 	cmpeqi	r2,fp,70
    1b90:	1001751e 	bne	r2,zero,2168 <___vfprintf_internal_r+0x1c10>
    1b94:	d8800717 	ldw	r2,28(sp)
    1b98:	da001215 	stw	r8,72(sp)
    1b9c:	db001015 	stw	r12,64(sp)
    1ba0:	10801158 	cmpnei	r2,r2,69
    1ba4:	10020726 	beq	r2,zero,23c4 <___vfprintf_internal_r+0x1e6c>
    1ba8:	d8801a04 	addi	r2,sp,104
    1bac:	d8800315 	stw	r2,12(sp)
    1bb0:	d9400917 	ldw	r5,36(sp)
    1bb4:	d8801704 	addi	r2,sp,92
    1bb8:	d9000517 	ldw	r4,20(sp)
    1bbc:	d8800215 	stw	r2,8(sp)
    1bc0:	d8801604 	addi	r2,sp,88
    1bc4:	dac00015 	stw	r11,0(sp)
    1bc8:	d8800115 	stw	r2,4(sp)
    1bcc:	01c00084 	movi	r7,2
    1bd0:	a80d883a 	mov	r6,r21
    1bd4:	dac00815 	stw	r11,32(sp)
    1bd8:	0002b4c0 	call	2b4c <_dtoa_r>
    1bdc:	dac00817 	ldw	r11,32(sp)
    1be0:	1023883a 	mov	r17,r2
    1be4:	e08019d8 	cmpnei	r2,fp,103
    1be8:	db001017 	ldw	r12,64(sp)
    1bec:	da001217 	ldw	r8,72(sp)
    1bf0:	5829883a 	mov	r20,r11
    1bf4:	1002051e 	bne	r2,zero,240c <___vfprintf_internal_r+0x1eb4>
    1bf8:	6080004c 	andi	r2,r12,1
    1bfc:	1002051e 	bne	r2,zero,2414 <___vfprintf_internal_r+0x1ebc>
    1c00:	d8c01617 	ldw	r3,88(sp)
    1c04:	d8800717 	ldw	r2,28(sp)
    1c08:	d8c00715 	stw	r3,28(sp)
    1c0c:	d8c01a17 	ldw	r3,104(sp)
    1c10:	108011e0 	cmpeqi	r2,r2,71
    1c14:	1c47c83a 	sub	r3,r3,r17
    1c18:	d8c00815 	stw	r3,32(sp)
    1c1c:	10000526 	beq	r2,zero,1c34 <___vfprintf_internal_r+0x16dc>
    1c20:	d8c00717 	ldw	r3,28(sp)
    1c24:	18bfff50 	cmplti	r2,r3,-3
    1c28:	1000011e 	bne	r2,zero,1c30 <___vfprintf_internal_r+0x16d8>
    1c2c:	58c2070e 	bge	r11,r3,244c <___vfprintf_internal_r+0x1ef4>
    1c30:	e73fff84 	addi	fp,fp,-2
    1c34:	d8800717 	ldw	r2,28(sp)
    1c38:	df001845 	stb	fp,97(sp)
    1c3c:	153fffc4 	addi	r20,r2,-1
    1c40:	dd001615 	stw	r20,88(sp)
    1c44:	a0027c16 	blt	r20,zero,2638 <___vfprintf_internal_r+0x20e0>
    1c48:	00800ac4 	movi	r2,43
    1c4c:	d8801885 	stb	r2,98(sp)
    1c50:	a0800290 	cmplti	r2,r20,10
    1c54:	10025b1e 	bne	r2,zero,25c4 <___vfprintf_internal_r+0x206c>
    1c58:	dc000f15 	stw	r16,60(sp)
    1c5c:	dd401bc4 	addi	r21,sp,111
    1c60:	a021883a 	mov	r16,r20
    1c64:	db000715 	stw	r12,28(sp)
    1c68:	9829883a 	mov	r20,r19
    1c6c:	4027883a 	mov	r19,r8
    1c70:	00000206 	br	1c7c <___vfprintf_internal_r+0x1724>
    1c74:	202b883a 	mov	r21,r4
    1c78:	1021883a 	mov	r16,r2
    1c7c:	8009883a 	mov	r4,r16
    1c80:	01400284 	movi	r5,10
    1c84:	000a3840 	call	a384 <__modsi3>
    1c88:	10800c04 	addi	r2,r2,48
    1c8c:	8009883a 	mov	r4,r16
    1c90:	a8bfffc5 	stb	r2,-1(r21)
    1c94:	01400284 	movi	r5,10
    1c98:	000a3040 	call	a304 <__divsi3>
    1c9c:	80c01908 	cmpgei	r3,r16,100
    1ca0:	a93fffc4 	addi	r4,r21,-1
    1ca4:	183ff31e 	bne	r3,zero,1c74 <___vfprintf_internal_r+0x171c>
    1ca8:	10800c04 	addi	r2,r2,48
    1cac:	20bfffc5 	stb	r2,-1(r4)
    1cb0:	a8ffff84 	addi	r3,r21,-2
    1cb4:	d9001bc4 	addi	r4,sp,111
    1cb8:	9811883a 	mov	r8,r19
    1cbc:	db000717 	ldw	r12,28(sp)
    1cc0:	dc000f17 	ldw	r16,60(sp)
    1cc4:	a027883a 	mov	r19,r20
    1cc8:	1902762e 	bgeu	r3,r4,26a4 <___vfprintf_internal_r+0x214c>
    1ccc:	d90018c4 	addi	r4,sp,99
    1cd0:	00000106 	br	1cd8 <___vfprintf_internal_r+0x1780>
    1cd4:	18800003 	ldbu	r2,0(r3)
    1cd8:	21000044 	addi	r4,r4,1
    1cdc:	20bfffc5 	stb	r2,-1(r4)
    1ce0:	18c00044 	addi	r3,r3,1
    1ce4:	d8801bc4 	addi	r2,sp,111
    1ce8:	18bffa1e 	bne	r3,r2,1cd4 <___vfprintf_internal_r+0x177c>
    1cec:	d8801c44 	addi	r2,sp,113
    1cf0:	d8c018c4 	addi	r3,sp,99
    1cf4:	1545c83a 	sub	r2,r2,r21
    1cf8:	1885883a 	add	r2,r3,r2
    1cfc:	d8c01844 	addi	r3,sp,97
    1d00:	10c5c83a 	sub	r2,r2,r3
    1d04:	d8801115 	stw	r2,68(sp)
    1d08:	d8c00817 	ldw	r3,32(sp)
    1d0c:	d9001117 	ldw	r4,68(sp)
    1d10:	18800088 	cmpgei	r2,r3,2
    1d14:	1929883a 	add	r20,r3,r4
    1d18:	10024c26 	beq	r2,zero,264c <___vfprintf_internal_r+0x20f4>
    1d1c:	d8800b17 	ldw	r2,44(sp)
    1d20:	a0a9883a 	add	r20,r20,r2
    1d24:	a02b883a 	mov	r21,r20
    1d28:	a000010e 	bge	r20,zero,1d30 <___vfprintf_internal_r+0x17d8>
    1d2c:	002b883a 	mov	r21,zero
    1d30:	d8000715 	stw	zero,28(sp)
    1d34:	00014206 	br	2240 <___vfprintf_internal_r+0x1ce8>
    1d38:	00800c04 	movi	r2,48
    1d3c:	d8801585 	stb	r2,86(sp)
    1d40:	df0015c5 	stb	fp,87(sp)
    1d44:	63000094 	ori	r12,r12,2
    1d48:	00800084 	movi	r2,2
    1d4c:	003ce106 	br	10d4 <___vfprintf_internal_r+0xb7c>
    1d50:	d9400417 	ldw	r5,16(sp)
    1d54:	20800017 	ldw	r2,0(r4)
    1d58:	d8c00615 	stw	r3,24(sp)
    1d5c:	2809d7fa 	srai	r4,r5,31
    1d60:	11400015 	stw	r5,0(r2)
    1d64:	11000115 	stw	r4,4(r2)
    1d68:	003a3006 	br	62c <___vfprintf_internal_r+0xd4>
    1d6c:	0421c83a 	sub	r16,zero,r16
    1d70:	d8800615 	stw	r2,24(sp)
    1d74:	003b1506 	br	9cc <___vfprintf_internal_r+0x474>
    1d78:	2039883a 	mov	fp,r4
    1d7c:	073ed716 	blt	zero,fp,18dc <___vfprintf_internal_r+0x1384>
    1d80:	003ee006 	br	1904 <___vfprintf_internal_r+0x13ac>
    1d84:	9080004c 	andi	r2,r18,1
    1d88:	103ee51e 	bne	r2,zero,1920 <___vfprintf_internal_r+0x13c8>
    1d8c:	d8800817 	ldw	r2,32(sp)
    1d90:	d9400717 	ldw	r5,28(sp)
    1d94:	1105c83a 	sub	r2,r2,r4
    1d98:	29004f0e 	bge	r5,r4,1ed8 <___vfprintf_internal_r+0x1980>
    1d9c:	1039883a 	mov	fp,r2
    1da0:	003efd06 	br	1998 <___vfprintf_internal_r+0x1440>
    1da4:	d9000517 	ldw	r4,20(sp)
    1da8:	d9801c04 	addi	r6,sp,112
    1dac:	980b883a 	mov	r5,r19
    1db0:	00078b40 	call	78b4 <__sprint_r>
    1db4:	103ac71e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1db8:	da801d17 	ldw	r10,116(sp)
    1dbc:	d8c01e17 	ldw	r3,120(sp)
    1dc0:	da002b04 	addi	r8,sp,172
    1dc4:	52800044 	addi	r10,r10,1
    1dc8:	b839883a 	mov	fp,r23
    1dcc:	003e4c06 	br	1700 <___vfprintf_internal_r+0x11a8>
    1dd0:	b7000043 	ldbu	fp,1(r22)
    1dd4:	63000814 	ori	r12,r12,32
    1dd8:	b5800044 	addi	r22,r22,1
    1ddc:	e2803fcc 	andi	r10,fp,255
    1de0:	5280201c 	xori	r10,r10,128
    1de4:	52bfe004 	addi	r10,r10,-128
    1de8:	003a3606 	br	6c4 <___vfprintf_internal_r+0x16c>
    1dec:	d9000517 	ldw	r4,20(sp)
    1df0:	d9801c04 	addi	r6,sp,112
    1df4:	980b883a 	mov	r5,r19
    1df8:	00078b40 	call	78b4 <__sprint_r>
    1dfc:	103ab51e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1e00:	d8c01e17 	ldw	r3,120(sp)
    1e04:	b811883a 	mov	r8,r23
    1e08:	003d4506 	br	1320 <___vfprintf_internal_r+0xdc8>
    1e0c:	0039883a 	mov	fp,zero
    1e10:	003ebd06 	br	1908 <___vfprintf_internal_r+0x13b0>
    1e14:	588001f0 	cmpltui	r2,r11,7
    1e18:	5829883a 	mov	r20,r11
    1e1c:	10013d26 	beq	r2,zero,2314 <___vfprintf_internal_r+0x1dbc>
    1e20:	04400074 	movhi	r17,1
    1e24:	a02b883a 	mov	r21,r20
    1e28:	dc800615 	stw	r18,24(sp)
    1e2c:	8c7d0a04 	addi	r17,r17,-3032
    1e30:	003b6606 	br	bcc <___vfprintf_internal_r+0x674>
    1e34:	03000074 	movhi	r12,1
    1e38:	e1000450 	cmplti	r4,fp,17
    1e3c:	633d0c84 	addi	r12,r12,-3022
    1e40:	d8801d17 	ldw	r2,116(sp)
    1e44:	20010d1e 	bne	r4,zero,227c <___vfprintf_internal_r+0x1d24>
    1e48:	dc400e15 	stw	r17,56(sp)
    1e4c:	dc800f15 	stw	r18,60(sp)
    1e50:	e023883a 	mov	r17,fp
    1e54:	05000404 	movi	r20,16
    1e58:	b039883a 	mov	fp,r22
    1e5c:	6025883a 	mov	r18,r12
    1e60:	802d883a 	mov	r22,r16
    1e64:	dc000517 	ldw	r16,20(sp)
    1e68:	00000406 	br	1e7c <___vfprintf_internal_r+0x1924>
    1e6c:	42000204 	addi	r8,r8,8
    1e70:	8c7ffc04 	addi	r17,r17,-16
    1e74:	89000448 	cmpgei	r4,r17,17
    1e78:	2000fa26 	beq	r4,zero,2264 <___vfprintf_internal_r+0x1d0c>
    1e7c:	10800044 	addi	r2,r2,1
    1e80:	18c00404 	addi	r3,r3,16
    1e84:	44800015 	stw	r18,0(r8)
    1e88:	45000115 	stw	r20,4(r8)
    1e8c:	d8c01e15 	stw	r3,120(sp)
    1e90:	d8801d15 	stw	r2,116(sp)
    1e94:	11000208 	cmpgei	r4,r2,8
    1e98:	203ff426 	beq	r4,zero,1e6c <___vfprintf_internal_r+0x1914>
    1e9c:	d9801c04 	addi	r6,sp,112
    1ea0:	980b883a 	mov	r5,r19
    1ea4:	8009883a 	mov	r4,r16
    1ea8:	00078b40 	call	78b4 <__sprint_r>
    1eac:	103a891e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1eb0:	d8c01e17 	ldw	r3,120(sp)
    1eb4:	d8801d17 	ldw	r2,116(sp)
    1eb8:	b811883a 	mov	r8,r23
    1ebc:	003fec06 	br	1e70 <___vfprintf_internal_r+0x1918>
    1ec0:	d8800617 	ldw	r2,24(sp)
    1ec4:	10800017 	ldw	r2,0(r2)
    1ec8:	d8c00615 	stw	r3,24(sp)
    1ecc:	d8c00417 	ldw	r3,16(sp)
    1ed0:	10c00015 	stw	r3,0(r2)
    1ed4:	0039d506 	br	62c <___vfprintf_internal_r+0xd4>
    1ed8:	d9000817 	ldw	r4,32(sp)
    1edc:	d9400717 	ldw	r5,28(sp)
    1ee0:	2179c83a 	sub	fp,r4,r5
    1ee4:	003e9f06 	br	1964 <___vfprintf_internal_r+0x140c>
    1ee8:	d9000517 	ldw	r4,20(sp)
    1eec:	d9801c04 	addi	r6,sp,112
    1ef0:	980b883a 	mov	r5,r19
    1ef4:	00078b40 	call	78b4 <__sprint_r>
    1ef8:	103a761e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1efc:	d8c01e17 	ldw	r3,120(sp)
    1f00:	dd001d17 	ldw	r20,116(sp)
    1f04:	b839883a 	mov	fp,r23
    1f08:	003ddd06 	br	1680 <___vfprintf_internal_r+0x1128>
    1f0c:	d9000517 	ldw	r4,20(sp)
    1f10:	d9801c04 	addi	r6,sp,112
    1f14:	980b883a 	mov	r5,r19
    1f18:	00078b40 	call	78b4 <__sprint_r>
    1f1c:	103a6d1e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1f20:	d8c01e17 	ldw	r3,120(sp)
    1f24:	dd001d17 	ldw	r20,116(sp)
    1f28:	b839883a 	mov	fp,r23
    1f2c:	003dc906 	br	1654 <___vfprintf_internal_r+0x10fc>
    1f30:	d8801d17 	ldw	r2,116(sp)
    1f34:	01400074 	movhi	r5,1
    1f38:	297d0c04 	addi	r5,r5,-3024
    1f3c:	10800044 	addi	r2,r2,1
    1f40:	18c00044 	addi	r3,r3,1
    1f44:	41400015 	stw	r5,0(r8)
    1f48:	01400044 	movi	r5,1
    1f4c:	d8801d15 	stw	r2,116(sp)
    1f50:	41400115 	stw	r5,4(r8)
    1f54:	d8c01e15 	stw	r3,120(sp)
    1f58:	10800208 	cmpgei	r2,r2,8
    1f5c:	103d851e 	bne	r2,zero,1574 <___vfprintf_internal_r+0x101c>
    1f60:	42000204 	addi	r8,r8,8
    1f64:	003d8b06 	br	1594 <___vfprintf_internal_r+0x103c>
    1f68:	d9000517 	ldw	r4,20(sp)
    1f6c:	d9801c04 	addi	r6,sp,112
    1f70:	980b883a 	mov	r5,r19
    1f74:	dac01015 	stw	r11,64(sp)
    1f78:	db400f15 	stw	r13,60(sp)
    1f7c:	db800e15 	stw	r14,56(sp)
    1f80:	00078b40 	call	78b4 <__sprint_r>
    1f84:	103a531e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1f88:	d8c01e17 	ldw	r3,120(sp)
    1f8c:	b811883a 	mov	r8,r23
    1f90:	dac01017 	ldw	r11,64(sp)
    1f94:	db400f17 	ldw	r13,60(sp)
    1f98:	db800e17 	ldw	r14,56(sp)
    1f9c:	003b1606 	br	bf8 <___vfprintf_internal_r+0x6a0>
    1fa0:	d9000517 	ldw	r4,20(sp)
    1fa4:	d9801c04 	addi	r6,sp,112
    1fa8:	980b883a 	mov	r5,r19
    1fac:	00078b40 	call	78b4 <__sprint_r>
    1fb0:	103a481e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1fb4:	b811883a 	mov	r8,r23
    1fb8:	003cc506 	br	12d0 <___vfprintf_internal_r+0xd78>
    1fbc:	d9000517 	ldw	r4,20(sp)
    1fc0:	d9801c04 	addi	r6,sp,112
    1fc4:	980b883a 	mov	r5,r19
    1fc8:	dac00e15 	stw	r11,56(sp)
    1fcc:	00078b40 	call	78b4 <__sprint_r>
    1fd0:	103a401e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    1fd4:	d8c01e17 	ldw	r3,120(sp)
    1fd8:	b811883a 	mov	r8,r23
    1fdc:	dac00e17 	ldw	r11,56(sp)
    1fe0:	003b2206 	br	c6c <___vfprintf_internal_r+0x714>
    1fe4:	10c00060 	cmpeqi	r3,r2,1
    1fe8:	9019883a 	mov	r12,r18
    1fec:	183beb26 	beq	r3,zero,f9c <___vfprintf_internal_r+0xa44>
    1ff0:	003c6b06 	br	11a0 <___vfprintf_internal_r+0xc48>
    1ff4:	d8800d17 	ldw	r2,52(sp)
    1ff8:	d9400b17 	ldw	r5,44(sp)
    1ffc:	40800015 	stw	r2,0(r8)
    2000:	d8801d17 	ldw	r2,116(sp)
    2004:	28c7883a 	add	r3,r5,r3
    2008:	41400115 	stw	r5,4(r8)
    200c:	10800044 	addi	r2,r2,1
    2010:	d8c01e15 	stw	r3,120(sp)
    2014:	d8801d15 	stw	r2,116(sp)
    2018:	11400208 	cmpgei	r5,r2,8
    201c:	2800d61e 	bne	r5,zero,2378 <___vfprintf_internal_r+0x1e20>
    2020:	42000204 	addi	r8,r8,8
    2024:	203d6c0e 	bge	r4,zero,15d8 <___vfprintf_internal_r+0x1080>
    2028:	03000074 	movhi	r12,1
    202c:	217ffc08 	cmpgei	r5,r4,-16
    2030:	633d0c84 	addi	r12,r12,-3022
    2034:	0129c83a 	sub	r20,zero,r4
    2038:	28014e1e 	bne	r5,zero,2574 <___vfprintf_internal_r+0x201c>
    203c:	8009883a 	mov	r4,r16
    2040:	dc400715 	stw	r17,28(sp)
    2044:	a021883a 	mov	r16,r20
    2048:	07000404 	movi	fp,16
    204c:	6023883a 	mov	r17,r12
    2050:	2029883a 	mov	r20,r4
    2054:	00000406 	br	2068 <___vfprintf_internal_r+0x1b10>
    2058:	42000204 	addi	r8,r8,8
    205c:	843ffc04 	addi	r16,r16,-16
    2060:	81000448 	cmpgei	r4,r16,17
    2064:	20013e26 	beq	r4,zero,2560 <___vfprintf_internal_r+0x2008>
    2068:	10800044 	addi	r2,r2,1
    206c:	18c00404 	addi	r3,r3,16
    2070:	44400015 	stw	r17,0(r8)
    2074:	47000115 	stw	fp,4(r8)
    2078:	d8c01e15 	stw	r3,120(sp)
    207c:	d8801d15 	stw	r2,116(sp)
    2080:	11000208 	cmpgei	r4,r2,8
    2084:	203ff426 	beq	r4,zero,2058 <___vfprintf_internal_r+0x1b00>
    2088:	d9000517 	ldw	r4,20(sp)
    208c:	d9801c04 	addi	r6,sp,112
    2090:	980b883a 	mov	r5,r19
    2094:	00078b40 	call	78b4 <__sprint_r>
    2098:	103a0e1e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    209c:	d8c01e17 	ldw	r3,120(sp)
    20a0:	d8801d17 	ldw	r2,116(sp)
    20a4:	b811883a 	mov	r8,r23
    20a8:	003fec06 	br	205c <___vfprintf_internal_r+0x1b04>
    20ac:	8809883a 	mov	r4,r17
    20b0:	00004c00 	call	4c0 <strlen>
    20b4:	1029883a 	mov	r20,r2
    20b8:	102b883a 	mov	r21,r2
    20bc:	dc800615 	stw	r18,24(sp)
    20c0:	db000717 	ldw	r12,28(sp)
    20c4:	da000e17 	ldw	r8,56(sp)
    20c8:	003ac006 	br	bcc <___vfprintf_internal_r+0x674>
    20cc:	9017883a 	mov	r11,r18
    20d0:	a819883a 	mov	r12,r21
    20d4:	dc800e17 	ldw	r18,56(sp)
    20d8:	dd400717 	ldw	r21,28(sp)
    20dc:	b021883a 	mov	r16,r22
    20e0:	a2800044 	addi	r10,r20,1
    20e4:	e02d883a 	mov	r22,fp
    20e8:	1039883a 	mov	fp,r2
    20ec:	10800204 	addi	r2,r2,8
    20f0:	1ac7883a 	add	r3,r3,r11
    20f4:	e3000015 	stw	r12,0(fp)
    20f8:	e2c00115 	stw	r11,4(fp)
    20fc:	d8c01e15 	stw	r3,120(sp)
    2100:	da801d15 	stw	r10,116(sp)
    2104:	51000208 	cmpgei	r4,r10,8
    2108:	203f261e 	bne	r4,zero,1da4 <___vfprintf_internal_r+0x184c>
    210c:	52800044 	addi	r10,r10,1
    2110:	12000204 	addi	r8,r2,8
    2114:	1039883a 	mov	fp,r2
    2118:	003d7906 	br	1700 <___vfprintf_internal_r+0x11a8>
    211c:	8019883a 	mov	r12,r16
    2120:	dc000717 	ldw	r16,28(sp)
    2124:	10800044 	addi	r2,r2,1
    2128:	1c47883a 	add	r3,r3,r17
    212c:	d8801d15 	stw	r2,116(sp)
    2130:	43000015 	stw	r12,0(r8)
    2134:	44400115 	stw	r17,4(r8)
    2138:	d8c01e15 	stw	r3,120(sp)
    213c:	10800208 	cmpgei	r2,r2,8
    2140:	103ad726 	beq	r2,zero,ca0 <___vfprintf_internal_r+0x748>
    2144:	003d2d06 	br	15fc <___vfprintf_internal_r+0x10a4>
    2148:	d8800615 	stw	r2,24(sp)
    214c:	0029883a 	mov	r20,zero
    2150:	0005883a 	mov	r2,zero
    2154:	003bdf06 	br	10d4 <___vfprintf_internal_r+0xb7c>
    2158:	d8800615 	stw	r2,24(sp)
    215c:	0029883a 	mov	r20,zero
    2160:	00800044 	movi	r2,1
    2164:	003bdb06 	br	10d4 <___vfprintf_internal_r+0xb7c>
    2168:	d8801a04 	addi	r2,sp,104
    216c:	d8800315 	stw	r2,12(sp)
    2170:	d9400917 	ldw	r5,36(sp)
    2174:	d8801704 	addi	r2,sp,92
    2178:	d9000517 	ldw	r4,20(sp)
    217c:	d8800215 	stw	r2,8(sp)
    2180:	d8801604 	addi	r2,sp,88
    2184:	dac00015 	stw	r11,0(sp)
    2188:	d8800115 	stw	r2,4(sp)
    218c:	01c000c4 	movi	r7,3
    2190:	a80d883a 	mov	r6,r21
    2194:	da001215 	stw	r8,72(sp)
    2198:	db001015 	stw	r12,64(sp)
    219c:	dac00815 	stw	r11,32(sp)
    21a0:	0002b4c0 	call	2b4c <_dtoa_r>
    21a4:	dac00817 	ldw	r11,32(sp)
    21a8:	1023883a 	mov	r17,r2
    21ac:	db001017 	ldw	r12,64(sp)
    21b0:	12e9883a 	add	r20,r2,r11
    21b4:	88800007 	ldb	r2,0(r17)
    21b8:	da001217 	ldw	r8,72(sp)
    21bc:	10800c20 	cmpeqi	r2,r2,48
    21c0:	10005a1e 	bne	r2,zero,232c <___vfprintf_internal_r+0x1dd4>
    21c4:	d8801617 	ldw	r2,88(sp)
    21c8:	a0a9883a 	add	r20,r20,r2
    21cc:	d9000917 	ldw	r4,36(sp)
    21d0:	000d883a 	mov	r6,zero
    21d4:	000f883a 	mov	r7,zero
    21d8:	a80b883a 	mov	r5,r21
    21dc:	da001215 	stw	r8,72(sp)
    21e0:	dac01015 	stw	r11,64(sp)
    21e4:	db000815 	stw	r12,32(sp)
    21e8:	000b7e80 	call	b7e8 <__eqdf2>
    21ec:	db000817 	ldw	r12,32(sp)
    21f0:	dac01017 	ldw	r11,64(sp)
    21f4:	da001217 	ldw	r8,72(sp)
    21f8:	1000881e 	bne	r2,zero,241c <___vfprintf_internal_r+0x1ec4>
    21fc:	a005883a 	mov	r2,r20
    2200:	1445c83a 	sub	r2,r2,r17
    2204:	d8c00717 	ldw	r3,28(sp)
    2208:	d8800815 	stw	r2,32(sp)
    220c:	d8801617 	ldw	r2,88(sp)
    2210:	18c011d8 	cmpnei	r3,r3,71
    2214:	d8800715 	stw	r2,28(sp)
    2218:	183e8126 	beq	r3,zero,1c20 <___vfprintf_internal_r+0x16c8>
    221c:	d8800f17 	ldw	r2,60(sp)
    2220:	103e8426 	beq	r2,zero,1c34 <___vfprintf_internal_r+0x16dc>
    2224:	d8c00717 	ldw	r3,28(sp)
    2228:	6080004c 	andi	r2,r12,1
    222c:	12c4b03a 	or	r2,r2,r11
    2230:	00c10d0e 	bge	zero,r3,2668 <___vfprintf_internal_r+0x2110>
    2234:	1000f11e 	bne	r2,zero,25fc <___vfprintf_internal_r+0x20a4>
    2238:	dd000717 	ldw	r20,28(sp)
    223c:	a02b883a 	mov	r21,r20
    2240:	d8800e07 	ldb	r2,56(sp)
    2244:	10007e26 	beq	r2,zero,2440 <___vfprintf_internal_r+0x1ee8>
    2248:	00800b44 	movi	r2,45
    224c:	d8801545 	stb	r2,85(sp)
    2250:	0017883a 	mov	r11,zero
    2254:	003bdf06 	br	11d4 <___vfprintf_internal_r+0xc7c>
    2258:	04400074 	movhi	r17,1
    225c:	8c7cfc04 	addi	r17,r17,-3088
    2260:	003b2e06 	br	f1c <___vfprintf_internal_r+0x9c4>
    2264:	b021883a 	mov	r16,r22
    2268:	9019883a 	mov	r12,r18
    226c:	e02d883a 	mov	r22,fp
    2270:	dc800f17 	ldw	r18,60(sp)
    2274:	8839883a 	mov	fp,r17
    2278:	dc400e17 	ldw	r17,56(sp)
    227c:	10800044 	addi	r2,r2,1
    2280:	1f07883a 	add	r3,r3,fp
    2284:	d8801d15 	stw	r2,116(sp)
    2288:	43000015 	stw	r12,0(r8)
    228c:	47000115 	stw	fp,4(r8)
    2290:	d8c01e15 	stw	r3,120(sp)
    2294:	10800208 	cmpgei	r2,r2,8
    2298:	1000421e 	bne	r2,zero,23a4 <___vfprintf_internal_r+0x1e4c>
    229c:	42000204 	addi	r8,r8,8
    22a0:	003d9c06 	br	1914 <___vfprintf_internal_r+0x13bc>
    22a4:	00800b44 	movi	r2,45
    22a8:	d8801545 	stb	r2,85(sp)
    22ac:	03400b44 	movi	r13,45
    22b0:	003b1606 	br	f0c <___vfprintf_internal_r+0x9b4>
    22b4:	8019883a 	mov	r12,r16
    22b8:	dc000717 	ldw	r16,28(sp)
    22bc:	10800044 	addi	r2,r2,1
    22c0:	1f07883a 	add	r3,r3,fp
    22c4:	d8801d15 	stw	r2,116(sp)
    22c8:	43000015 	stw	r12,0(r8)
    22cc:	47000115 	stw	fp,4(r8)
    22d0:	d8c01e15 	stw	r3,120(sp)
    22d4:	10800208 	cmpgei	r2,r2,8
    22d8:	103a7126 	beq	r2,zero,ca0 <___vfprintf_internal_r+0x748>
    22dc:	003cc706 	br	15fc <___vfprintf_internal_r+0x10a4>
    22e0:	d9000517 	ldw	r4,20(sp)
    22e4:	d9801c04 	addi	r6,sp,112
    22e8:	980b883a 	mov	r5,r19
    22ec:	00078b40 	call	78b4 <__sprint_r>
    22f0:	1039781e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    22f4:	d9001617 	ldw	r4,88(sp)
    22f8:	d8c01e17 	ldw	r3,120(sp)
    22fc:	b811883a 	mov	r8,r23
    2300:	003d9306 	br	1950 <___vfprintf_internal_r+0x13f8>
    2304:	1560003c 	xorhi	r21,r2,32768
    2308:	00800b44 	movi	r2,45
    230c:	d8800e05 	stb	r2,56(sp)
    2310:	003e1b06 	br	1b80 <___vfprintf_internal_r+0x1628>
    2314:	05000184 	movi	r20,6
    2318:	003ec106 	br	1e20 <___vfprintf_internal_r+0x18c8>
    231c:	002b883a 	mov	r21,zero
    2320:	003a0206 	br	b2c <___vfprintf_internal_r+0x5d4>
    2324:	d9401545 	stb	r5,85(sp)
    2328:	00398a06 	br	954 <___vfprintf_internal_r+0x3fc>
    232c:	d9000917 	ldw	r4,36(sp)
    2330:	000d883a 	mov	r6,zero
    2334:	000f883a 	mov	r7,zero
    2338:	a80b883a 	mov	r5,r21
    233c:	da001215 	stw	r8,72(sp)
    2340:	dac01015 	stw	r11,64(sp)
    2344:	db000815 	stw	r12,32(sp)
    2348:	000b7e80 	call	b7e8 <__eqdf2>
    234c:	db000817 	ldw	r12,32(sp)
    2350:	dac01017 	ldw	r11,64(sp)
    2354:	da001217 	ldw	r8,72(sp)
    2358:	103f9a26 	beq	r2,zero,21c4 <___vfprintf_internal_r+0x1c6c>
    235c:	00800044 	movi	r2,1
    2360:	12c5c83a 	sub	r2,r2,r11
    2364:	d8801615 	stw	r2,88(sp)
    2368:	003f9706 	br	21c8 <___vfprintf_internal_r+0x1c70>
    236c:	583dff1e 	bne	r11,zero,1b6c <___vfprintf_internal_r+0x1614>
    2370:	02c00044 	movi	r11,1
    2374:	003dfd06 	br	1b6c <___vfprintf_internal_r+0x1614>
    2378:	d9000517 	ldw	r4,20(sp)
    237c:	d9801c04 	addi	r6,sp,112
    2380:	980b883a 	mov	r5,r19
    2384:	00078b40 	call	78b4 <__sprint_r>
    2388:	1039521e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    238c:	d9001617 	ldw	r4,88(sp)
    2390:	d8c01e17 	ldw	r3,120(sp)
    2394:	d8801d17 	ldw	r2,116(sp)
    2398:	b811883a 	mov	r8,r23
    239c:	203c8e0e 	bge	r4,zero,15d8 <___vfprintf_internal_r+0x1080>
    23a0:	003f2106 	br	2028 <___vfprintf_internal_r+0x1ad0>
    23a4:	d9000517 	ldw	r4,20(sp)
    23a8:	d9801c04 	addi	r6,sp,112
    23ac:	980b883a 	mov	r5,r19
    23b0:	00078b40 	call	78b4 <__sprint_r>
    23b4:	1039471e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    23b8:	d8c01e17 	ldw	r3,120(sp)
    23bc:	b811883a 	mov	r8,r23
    23c0:	003d5406 	br	1914 <___vfprintf_internal_r+0x13bc>
    23c4:	d8801a04 	addi	r2,sp,104
    23c8:	d8800315 	stw	r2,12(sp)
    23cc:	d9400917 	ldw	r5,36(sp)
    23d0:	d8801704 	addi	r2,sp,92
    23d4:	d9000517 	ldw	r4,20(sp)
    23d8:	5d000044 	addi	r20,r11,1
    23dc:	d8800215 	stw	r2,8(sp)
    23e0:	d8801604 	addi	r2,sp,88
    23e4:	d8800115 	stw	r2,4(sp)
    23e8:	dd000015 	stw	r20,0(sp)
    23ec:	01c00084 	movi	r7,2
    23f0:	a80d883a 	mov	r6,r21
    23f4:	dac00815 	stw	r11,32(sp)
    23f8:	0002b4c0 	call	2b4c <_dtoa_r>
    23fc:	dac00817 	ldw	r11,32(sp)
    2400:	db001017 	ldw	r12,64(sp)
    2404:	da001217 	ldw	r8,72(sp)
    2408:	1023883a 	mov	r17,r2
    240c:	e08011d8 	cmpnei	r2,fp,71
    2410:	103df926 	beq	r2,zero,1bf8 <___vfprintf_internal_r+0x16a0>
    2414:	8d29883a 	add	r20,r17,r20
    2418:	003f6c06 	br	21cc <___vfprintf_internal_r+0x1c74>
    241c:	d8801a17 	ldw	r2,104(sp)
    2420:	01000c04 	movi	r4,48
    2424:	153f762e 	bgeu	r2,r20,2200 <___vfprintf_internal_r+0x1ca8>
    2428:	10c00044 	addi	r3,r2,1
    242c:	d8c01a15 	stw	r3,104(sp)
    2430:	11000005 	stb	r4,0(r2)
    2434:	d8801a17 	ldw	r2,104(sp)
    2438:	153ffb36 	bltu	r2,r20,2428 <___vfprintf_internal_r+0x1ed0>
    243c:	003f7006 	br	2200 <___vfprintf_internal_r+0x1ca8>
    2440:	db401543 	ldbu	r13,85(sp)
    2444:	0017883a 	mov	r11,zero
    2448:	003b5e06 	br	11c4 <___vfprintf_internal_r+0xc6c>
    244c:	d8800717 	ldw	r2,28(sp)
    2450:	d8c00817 	ldw	r3,32(sp)
    2454:	10c02216 	blt	r2,r3,24e0 <___vfprintf_internal_r+0x1f88>
    2458:	6300004c 	andi	r12,r12,1
    245c:	6000601e 	bne	r12,zero,25e0 <___vfprintf_internal_r+0x2088>
    2460:	102b883a 	mov	r21,r2
    2464:	1000010e 	bge	r2,zero,246c <___vfprintf_internal_r+0x1f14>
    2468:	002b883a 	mov	r21,zero
    246c:	dd000717 	ldw	r20,28(sp)
    2470:	070019c4 	movi	fp,103
    2474:	003f7206 	br	2240 <___vfprintf_internal_r+0x1ce8>
    2478:	d9000517 	ldw	r4,20(sp)
    247c:	d9801c04 	addi	r6,sp,112
    2480:	980b883a 	mov	r5,r19
    2484:	00078b40 	call	78b4 <__sprint_r>
    2488:	1039121e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    248c:	d8c01e17 	ldw	r3,120(sp)
    2490:	b811883a 	mov	r8,r23
    2494:	e03d1c0e 	bge	fp,zero,1908 <___vfprintf_internal_r+0x13b0>
    2498:	003e5c06 	br	1e0c <___vfprintf_internal_r+0x18b4>
    249c:	02c00184 	movi	r11,6
    24a0:	003db206 	br	1b6c <___vfprintf_internal_r+0x1614>
    24a4:	d9000517 	ldw	r4,20(sp)
    24a8:	d9801c04 	addi	r6,sp,112
    24ac:	980b883a 	mov	r5,r19
    24b0:	00078b40 	call	78b4 <__sprint_r>
    24b4:	1039071e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    24b8:	d8801617 	ldw	r2,88(sp)
    24bc:	d9000817 	ldw	r4,32(sp)
    24c0:	d8c01e17 	ldw	r3,120(sp)
    24c4:	b811883a 	mov	r8,r23
    24c8:	2085c83a 	sub	r2,r4,r2
    24cc:	003d3206 	br	1998 <___vfprintf_internal_r+0x1440>
    24d0:	582b883a 	mov	r21,r11
    24d4:	dc800615 	stw	r18,24(sp)
    24d8:	5829883a 	mov	r20,r11
    24dc:	0039bb06 	br	bcc <___vfprintf_internal_r+0x674>
    24e0:	d8800817 	ldw	r2,32(sp)
    24e4:	d8c00b17 	ldw	r3,44(sp)
    24e8:	10e9883a 	add	r20,r2,r3
    24ec:	d8800717 	ldw	r2,28(sp)
    24f0:	00800316 	blt	zero,r2,2500 <___vfprintf_internal_r+0x1fa8>
    24f4:	d8800717 	ldw	r2,28(sp)
    24f8:	a0b9c83a 	sub	fp,r20,r2
    24fc:	e5000044 	addi	r20,fp,1
    2500:	a02b883a 	mov	r21,r20
    2504:	a0003b16 	blt	r20,zero,25f4 <___vfprintf_internal_r+0x209c>
    2508:	070019c4 	movi	fp,103
    250c:	003f4c06 	br	2240 <___vfprintf_internal_r+0x1ce8>
    2510:	d9401545 	stb	r5,85(sp)
    2514:	003ac006 	br	1018 <___vfprintf_internal_r+0xac0>
    2518:	d9401545 	stb	r5,85(sp)
    251c:	003a2006 	br	da0 <___vfprintf_internal_r+0x848>
    2520:	d9401545 	stb	r5,85(sp)
    2524:	003a2e06 	br	de0 <___vfprintf_internal_r+0x888>
    2528:	d9401545 	stb	r5,85(sp)
    252c:	00398306 	br	b3c <___vfprintf_internal_r+0x5e4>
    2530:	d9401545 	stb	r5,85(sp)
    2534:	00395a06 	br	aa0 <___vfprintf_internal_r+0x548>
    2538:	d9401545 	stb	r5,85(sp)
    253c:	00394606 	br	a58 <___vfprintf_internal_r+0x500>
    2540:	d9401545 	stb	r5,85(sp)
    2544:	003a3606 	br	e20 <___vfprintf_internal_r+0x8c8>
    2548:	d9401545 	stb	r5,85(sp)
    254c:	003a7c06 	br	f40 <___vfprintf_internal_r+0x9e8>
    2550:	d9401545 	stb	r5,85(sp)
    2554:	003a4206 	br	e60 <___vfprintf_internal_r+0x908>
    2558:	d9401545 	stb	r5,85(sp)
    255c:	003ac006 	br	1060 <___vfprintf_internal_r+0xb08>
    2560:	8819883a 	mov	r12,r17
    2564:	dc400717 	ldw	r17,28(sp)
    2568:	a009883a 	mov	r4,r20
    256c:	8029883a 	mov	r20,r16
    2570:	2021883a 	mov	r16,r4
    2574:	10800044 	addi	r2,r2,1
    2578:	1d07883a 	add	r3,r3,r20
    257c:	43000015 	stw	r12,0(r8)
    2580:	45000115 	stw	r20,4(r8)
    2584:	d8c01e15 	stw	r3,120(sp)
    2588:	d8801d15 	stw	r2,116(sp)
    258c:	11000208 	cmpgei	r4,r2,8
    2590:	203c1026 	beq	r4,zero,15d4 <___vfprintf_internal_r+0x107c>
    2594:	d9000517 	ldw	r4,20(sp)
    2598:	d9801c04 	addi	r6,sp,112
    259c:	980b883a 	mov	r5,r19
    25a0:	00078b40 	call	78b4 <__sprint_r>
    25a4:	1038cb1e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0x37c>
    25a8:	d8c01e17 	ldw	r3,120(sp)
    25ac:	d8801d17 	ldw	r2,116(sp)
    25b0:	b811883a 	mov	r8,r23
    25b4:	003c0806 	br	15d8 <___vfprintf_internal_r+0x1080>
    25b8:	00bfffc4 	movi	r2,-1
    25bc:	d8800415 	stw	r2,16(sp)
    25c0:	0038c706 	br	8e0 <___vfprintf_internal_r+0x388>
    25c4:	00800c04 	movi	r2,48
    25c8:	a0c00c04 	addi	r3,r20,48
    25cc:	d88018c5 	stb	r2,99(sp)
    25d0:	00800104 	movi	r2,4
    25d4:	d8c01905 	stb	r3,100(sp)
    25d8:	d8801115 	stw	r2,68(sp)
    25dc:	003dca06 	br	1d08 <___vfprintf_internal_r+0x17b0>
    25e0:	d8800717 	ldw	r2,28(sp)
    25e4:	d8c00b17 	ldw	r3,44(sp)
    25e8:	10e9883a 	add	r20,r2,r3
    25ec:	a02b883a 	mov	r21,r20
    25f0:	a03fc50e 	bge	r20,zero,2508 <___vfprintf_internal_r+0x1fb0>
    25f4:	002b883a 	mov	r21,zero
    25f8:	003fc306 	br	2508 <___vfprintf_internal_r+0x1fb0>
    25fc:	d8800b17 	ldw	r2,44(sp)
    2600:	1885883a 	add	r2,r3,r2
    2604:	12e9883a 	add	r20,r2,r11
    2608:	a02b883a 	mov	r21,r20
    260c:	a03f0c0e 	bge	r20,zero,2240 <___vfprintf_internal_r+0x1ce8>
    2610:	002b883a 	mov	r21,zero
    2614:	003f0a06 	br	2240 <___vfprintf_internal_r+0x1ce8>
    2618:	d8800a17 	ldw	r2,40(sp)
    261c:	10001d16 	blt	r2,zero,2694 <___vfprintf_internal_r+0x213c>
    2620:	db401543 	ldbu	r13,85(sp)
    2624:	e0801210 	cmplti	r2,fp,72
    2628:	1000171e 	bne	r2,zero,2688 <___vfprintf_internal_r+0x2130>
    262c:	04400074 	movhi	r17,1
    2630:	8c7cff04 	addi	r17,r17,-3076
    2634:	003a3906 	br	f1c <___vfprintf_internal_r+0x9c4>
    2638:	00c00044 	movi	r3,1
    263c:	18a9c83a 	sub	r20,r3,r2
    2640:	00800b44 	movi	r2,45
    2644:	d8801885 	stb	r2,98(sp)
    2648:	003d8106 	br	1c50 <___vfprintf_internal_r+0x16f8>
    264c:	6080004c 	andi	r2,r12,1
    2650:	d8800715 	stw	r2,28(sp)
    2654:	103db11e 	bne	r2,zero,1d1c <___vfprintf_internal_r+0x17c4>
    2658:	003feb06 	br	2608 <___vfprintf_internal_r+0x20b0>
    265c:	4005883a 	mov	r2,r8
    2660:	633d0c84 	addi	r12,r12,-3022
    2664:	003ea206 	br	20f0 <___vfprintf_internal_r+0x1b98>
    2668:	1000031e 	bne	r2,zero,2678 <___vfprintf_internal_r+0x2120>
    266c:	05400044 	movi	r21,1
    2670:	05000044 	movi	r20,1
    2674:	003ef206 	br	2240 <___vfprintf_internal_r+0x1ce8>
    2678:	d8800b17 	ldw	r2,44(sp)
    267c:	10800044 	addi	r2,r2,1
    2680:	12e9883a 	add	r20,r2,r11
    2684:	003fe006 	br	2608 <___vfprintf_internal_r+0x20b0>
    2688:	04400074 	movhi	r17,1
    268c:	8c7cfe04 	addi	r17,r17,-3080
    2690:	003a2206 	br	f1c <___vfprintf_internal_r+0x9c4>
    2694:	00800b44 	movi	r2,45
    2698:	d8801545 	stb	r2,85(sp)
    269c:	03400b44 	movi	r13,45
    26a0:	003fe006 	br	2624 <___vfprintf_internal_r+0x20cc>
    26a4:	00800084 	movi	r2,2
    26a8:	d8801115 	stw	r2,68(sp)
    26ac:	003d9606 	br	1d08 <___vfprintf_internal_r+0x17b0>
    26b0:	d8c00617 	ldw	r3,24(sp)
    26b4:	1ac00017 	ldw	r11,0(r3)
    26b8:	18c00104 	addi	r3,r3,4
    26bc:	5800010e 	bge	r11,zero,26c4 <___vfprintf_internal_r+0x216c>
    26c0:	02ffffc4 	movi	r11,-1
    26c4:	b7000043 	ldbu	fp,1(r22)
    26c8:	d8c00615 	stw	r3,24(sp)
    26cc:	102d883a 	mov	r22,r2
    26d0:	e2803fcc 	andi	r10,fp,255
    26d4:	5280201c 	xori	r10,r10,128
    26d8:	52bfe004 	addi	r10,r10,-128
    26dc:	0037f906 	br	6c4 <___vfprintf_internal_r+0x16c>

000026e0 <__vfprintf_internal>:
    26e0:	00800074 	movhi	r2,1
    26e4:	300f883a 	mov	r7,r6
    26e8:	280d883a 	mov	r6,r5
    26ec:	200b883a 	mov	r5,r4
    26f0:	11055a17 	ldw	r4,5480(r2)
    26f4:	00005581 	jmpi	558 <___vfprintf_internal_r>

000026f8 <__sbprintf>:
    26f8:	2880030b 	ldhu	r2,12(r5)
    26fc:	2b001917 	ldw	r12,100(r5)
    2700:	2ac0038b 	ldhu	r11,14(r5)
    2704:	2a800717 	ldw	r10,28(r5)
    2708:	2a400917 	ldw	r9,36(r5)
    270c:	defee204 	addi	sp,sp,-1144
    2710:	da001a04 	addi	r8,sp,104
    2714:	00c10004 	movi	r3,1024
    2718:	dc011a15 	stw	r16,1128(sp)
    271c:	10bfff4c 	andi	r2,r2,65533
    2720:	2821883a 	mov	r16,r5
    2724:	d80b883a 	mov	r5,sp
    2728:	dc811c15 	stw	r18,1136(sp)
    272c:	dc411b15 	stw	r17,1132(sp)
    2730:	dfc11d15 	stw	ra,1140(sp)
    2734:	2025883a 	mov	r18,r4
    2738:	d880030d 	sth	r2,12(sp)
    273c:	db001915 	stw	r12,100(sp)
    2740:	dac0038d 	sth	r11,14(sp)
    2744:	da800715 	stw	r10,28(sp)
    2748:	da400915 	stw	r9,36(sp)
    274c:	da000015 	stw	r8,0(sp)
    2750:	da000415 	stw	r8,16(sp)
    2754:	d8c00215 	stw	r3,8(sp)
    2758:	d8c00515 	stw	r3,20(sp)
    275c:	d8000615 	stw	zero,24(sp)
    2760:	00005580 	call	558 <___vfprintf_internal_r>
    2764:	1023883a 	mov	r17,r2
    2768:	10000d0e 	bge	r2,zero,27a0 <__sbprintf+0xa8>
    276c:	d880030b 	ldhu	r2,12(sp)
    2770:	1080100c 	andi	r2,r2,64
    2774:	10000326 	beq	r2,zero,2784 <__sbprintf+0x8c>
    2778:	8080030b 	ldhu	r2,12(r16)
    277c:	10801014 	ori	r2,r2,64
    2780:	8080030d 	sth	r2,12(r16)
    2784:	8805883a 	mov	r2,r17
    2788:	dfc11d17 	ldw	ra,1140(sp)
    278c:	dc811c17 	ldw	r18,1136(sp)
    2790:	dc411b17 	ldw	r17,1132(sp)
    2794:	dc011a17 	ldw	r16,1128(sp)
    2798:	dec11e04 	addi	sp,sp,1144
    279c:	f800283a 	ret
    27a0:	d80b883a 	mov	r5,sp
    27a4:	9009883a 	mov	r4,r18
    27a8:	000443c0 	call	443c <_fflush_r>
    27ac:	103fef26 	beq	r2,zero,276c <__sbprintf+0x74>
    27b0:	047fffc4 	movi	r17,-1
    27b4:	003fed06 	br	276c <__sbprintf+0x74>

000027b8 <__swsetup_r>:
    27b8:	00800074 	movhi	r2,1
    27bc:	10855a17 	ldw	r2,5480(r2)
    27c0:	defffd04 	addi	sp,sp,-12
    27c4:	dc400115 	stw	r17,4(sp)
    27c8:	dc000015 	stw	r16,0(sp)
    27cc:	dfc00215 	stw	ra,8(sp)
    27d0:	2023883a 	mov	r17,r4
    27d4:	2821883a 	mov	r16,r5
    27d8:	10000226 	beq	r2,zero,27e4 <__swsetup_r+0x2c>
    27dc:	10c00e17 	ldw	r3,56(r2)
    27e0:	18002026 	beq	r3,zero,2864 <__swsetup_r+0xac>
    27e4:	8080030b 	ldhu	r2,12(r16)
    27e8:	10c0020c 	andi	r3,r2,8
    27ec:	1009883a 	mov	r4,r2
    27f0:	18002226 	beq	r3,zero,287c <__swsetup_r+0xc4>
    27f4:	80c00417 	ldw	r3,16(r16)
    27f8:	18002826 	beq	r3,zero,289c <__swsetup_r+0xe4>
    27fc:	1100004c 	andi	r4,r2,1
    2800:	20000b1e 	bne	r4,zero,2830 <__swsetup_r+0x78>
    2804:	1080008c 	andi	r2,r2,2
    2808:	10002d1e 	bne	r2,zero,28c0 <__swsetup_r+0x108>
    280c:	80800517 	ldw	r2,20(r16)
    2810:	80800215 	stw	r2,8(r16)
    2814:	18000b26 	beq	r3,zero,2844 <__swsetup_r+0x8c>
    2818:	0005883a 	mov	r2,zero
    281c:	dfc00217 	ldw	ra,8(sp)
    2820:	dc400117 	ldw	r17,4(sp)
    2824:	dc000017 	ldw	r16,0(sp)
    2828:	dec00304 	addi	sp,sp,12
    282c:	f800283a 	ret
    2830:	80800517 	ldw	r2,20(r16)
    2834:	80000215 	stw	zero,8(r16)
    2838:	0085c83a 	sub	r2,zero,r2
    283c:	80800615 	stw	r2,24(r16)
    2840:	183ff51e 	bne	r3,zero,2818 <__swsetup_r+0x60>
    2844:	80c0030b 	ldhu	r3,12(r16)
    2848:	0005883a 	mov	r2,zero
    284c:	1900200c 	andi	r4,r3,128
    2850:	203ff226 	beq	r4,zero,281c <__swsetup_r+0x64>
    2854:	18c01014 	ori	r3,r3,64
    2858:	80c0030d 	sth	r3,12(r16)
    285c:	00bfffc4 	movi	r2,-1
    2860:	003fee06 	br	281c <__swsetup_r+0x64>
    2864:	1009883a 	mov	r4,r2
    2868:	00047d00 	call	47d0 <__sinit>
    286c:	8080030b 	ldhu	r2,12(r16)
    2870:	10c0020c 	andi	r3,r2,8
    2874:	1009883a 	mov	r4,r2
    2878:	183fde1e 	bne	r3,zero,27f4 <__swsetup_r+0x3c>
    287c:	2080040c 	andi	r2,r4,16
    2880:	10001f26 	beq	r2,zero,2900 <__swsetup_r+0x148>
    2884:	2080010c 	andi	r2,r4,4
    2888:	10000f1e 	bne	r2,zero,28c8 <__swsetup_r+0x110>
    288c:	80c00417 	ldw	r3,16(r16)
    2890:	20800214 	ori	r2,r4,8
    2894:	8080030d 	sth	r2,12(r16)
    2898:	183fd81e 	bne	r3,zero,27fc <__swsetup_r+0x44>
    289c:	1100a00c 	andi	r4,r2,640
    28a0:	21008020 	cmpeqi	r4,r4,512
    28a4:	203fd51e 	bne	r4,zero,27fc <__swsetup_r+0x44>
    28a8:	800b883a 	mov	r5,r16
    28ac:	8809883a 	mov	r4,r17
    28b0:	00053140 	call	5314 <__smakebuf_r>
    28b4:	8080030b 	ldhu	r2,12(r16)
    28b8:	80c00417 	ldw	r3,16(r16)
    28bc:	003fcf06 	br	27fc <__swsetup_r+0x44>
    28c0:	0005883a 	mov	r2,zero
    28c4:	003fd206 	br	2810 <__swsetup_r+0x58>
    28c8:	81400c17 	ldw	r5,48(r16)
    28cc:	28000626 	beq	r5,zero,28e8 <__swsetup_r+0x130>
    28d0:	80801004 	addi	r2,r16,64
    28d4:	28800326 	beq	r5,r2,28e4 <__swsetup_r+0x12c>
    28d8:	8809883a 	mov	r4,r17
    28dc:	00049340 	call	4934 <_free_r>
    28e0:	8100030b 	ldhu	r4,12(r16)
    28e4:	80000c15 	stw	zero,48(r16)
    28e8:	80c00417 	ldw	r3,16(r16)
    28ec:	00bff6c4 	movi	r2,-37
    28f0:	1108703a 	and	r4,r2,r4
    28f4:	80000115 	stw	zero,4(r16)
    28f8:	80c00015 	stw	r3,0(r16)
    28fc:	003fe406 	br	2890 <__swsetup_r+0xd8>
    2900:	00800244 	movi	r2,9
    2904:	88800015 	stw	r2,0(r17)
    2908:	20801014 	ori	r2,r4,64
    290c:	8080030d 	sth	r2,12(r16)
    2910:	00bfffc4 	movi	r2,-1
    2914:	003fc106 	br	281c <__swsetup_r+0x64>

00002918 <quorem>:
    2918:	defff204 	addi	sp,sp,-56
    291c:	dc000415 	stw	r16,16(sp)
    2920:	20800417 	ldw	r2,16(r4)
    2924:	2c000417 	ldw	r16,16(r5)
    2928:	dfc00d15 	stw	ra,52(sp)
    292c:	df000c15 	stw	fp,48(sp)
    2930:	ddc00b15 	stw	r23,44(sp)
    2934:	dd800a15 	stw	r22,40(sp)
    2938:	dd400915 	stw	r21,36(sp)
    293c:	dd000815 	stw	r20,32(sp)
    2940:	dcc00715 	stw	r19,28(sp)
    2944:	dc800615 	stw	r18,24(sp)
    2948:	dc400515 	stw	r17,20(sp)
    294c:	14007d16 	blt	r2,r16,2b44 <quorem+0x22c>
    2950:	843fffc4 	addi	r16,r16,-1
    2954:	802c90ba 	slli	r22,r16,2
    2958:	2f000504 	addi	fp,r5,20
    295c:	24c00504 	addi	r19,r4,20
    2960:	e5a5883a 	add	r18,fp,r22
    2964:	9d85883a 	add	r2,r19,r22
    2968:	95c00017 	ldw	r23,0(r18)
    296c:	15000017 	ldw	r20,0(r2)
    2970:	d9400215 	stw	r5,8(sp)
    2974:	bdc00044 	addi	r23,r23,1
    2978:	d9000115 	stw	r4,4(sp)
    297c:	b80b883a 	mov	r5,r23
    2980:	a009883a 	mov	r4,r20
    2984:	dcc00015 	stw	r19,0(sp)
    2988:	d8800315 	stw	r2,12(sp)
    298c:	000a3fc0 	call	a3fc <__udivsi3>
    2990:	1023883a 	mov	r17,r2
    2994:	a5c03236 	bltu	r20,r23,2a60 <quorem+0x148>
    2998:	e02d883a 	mov	r22,fp
    299c:	9829883a 	mov	r20,r19
    29a0:	002b883a 	mov	r21,zero
    29a4:	002f883a 	mov	r23,zero
    29a8:	b5800104 	addi	r22,r22,4
    29ac:	b4ffff17 	ldw	r19,-4(r22)
    29b0:	880b883a 	mov	r5,r17
    29b4:	a5000104 	addi	r20,r20,4
    29b8:	993fffcc 	andi	r4,r19,65535
    29bc:	000a4bc0 	call	a4bc <__mulsi3>
    29c0:	9808d43a 	srli	r4,r19,16
    29c4:	880b883a 	mov	r5,r17
    29c8:	156b883a 	add	r21,r2,r21
    29cc:	000a4bc0 	call	a4bc <__mulsi3>
    29d0:	a0ffff17 	ldw	r3,-4(r20)
    29d4:	a80ad43a 	srli	r5,r21,16
    29d8:	a93fffcc 	andi	r4,r21,65535
    29dc:	b909c83a 	sub	r4,r23,r4
    29e0:	19bfffcc 	andi	r6,r3,65535
    29e4:	2189883a 	add	r4,r4,r6
    29e8:	1806d43a 	srli	r3,r3,16
    29ec:	116b883a 	add	r21,r2,r5
    29f0:	2005d43a 	srai	r2,r4,16
    29f4:	a97fffcc 	andi	r5,r21,65535
    29f8:	1947c83a 	sub	r3,r3,r5
    29fc:	1887883a 	add	r3,r3,r2
    2a00:	1804943a 	slli	r2,r3,16
    2a04:	213fffcc 	andi	r4,r4,65535
    2a08:	a82ad43a 	srli	r21,r21,16
    2a0c:	1108b03a 	or	r4,r2,r4
    2a10:	a13fff15 	stw	r4,-4(r20)
    2a14:	182fd43a 	srai	r23,r3,16
    2a18:	95bfe32e 	bgeu	r18,r22,29a8 <quorem+0x90>
    2a1c:	d8c00317 	ldw	r3,12(sp)
    2a20:	18800017 	ldw	r2,0(r3)
    2a24:	10000e1e 	bne	r2,zero,2a60 <quorem+0x148>
    2a28:	d9000017 	ldw	r4,0(sp)
    2a2c:	18bfff04 	addi	r2,r3,-4
    2a30:	2080092e 	bgeu	r4,r2,2a58 <quorem+0x140>
    2a34:	18ffff17 	ldw	r3,-4(r3)
    2a38:	18000326 	beq	r3,zero,2a48 <quorem+0x130>
    2a3c:	00000606 	br	2a58 <quorem+0x140>
    2a40:	10c00017 	ldw	r3,0(r2)
    2a44:	1800041e 	bne	r3,zero,2a58 <quorem+0x140>
    2a48:	d8c00017 	ldw	r3,0(sp)
    2a4c:	10bfff04 	addi	r2,r2,-4
    2a50:	843fffc4 	addi	r16,r16,-1
    2a54:	18bffa36 	bltu	r3,r2,2a40 <quorem+0x128>
    2a58:	d8800117 	ldw	r2,4(sp)
    2a5c:	14000415 	stw	r16,16(r2)
    2a60:	d9400217 	ldw	r5,8(sp)
    2a64:	d9000117 	ldw	r4,4(sp)
    2a68:	00069480 	call	6948 <__mcmp>
    2a6c:	10002816 	blt	r2,zero,2b10 <quorem+0x1f8>
    2a70:	d9800017 	ldw	r6,0(sp)
    2a74:	8c400044 	addi	r17,r17,1
    2a78:	0007883a 	mov	r3,zero
    2a7c:	e7000104 	addi	fp,fp,4
    2a80:	e13fff17 	ldw	r4,-4(fp)
    2a84:	31400017 	ldw	r5,0(r6)
    2a88:	31800104 	addi	r6,r6,4
    2a8c:	20bfffcc 	andi	r2,r4,65535
    2a90:	1887c83a 	sub	r3,r3,r2
    2a94:	28bfffcc 	andi	r2,r5,65535
    2a98:	1885883a 	add	r2,r3,r2
    2a9c:	2008d43a 	srli	r4,r4,16
    2aa0:	2806d43a 	srli	r3,r5,16
    2aa4:	100fd43a 	srai	r7,r2,16
    2aa8:	117fffcc 	andi	r5,r2,65535
    2aac:	1907c83a 	sub	r3,r3,r4
    2ab0:	19c7883a 	add	r3,r3,r7
    2ab4:	1804943a 	slli	r2,r3,16
    2ab8:	1807d43a 	srai	r3,r3,16
    2abc:	1144b03a 	or	r2,r2,r5
    2ac0:	30bfff15 	stw	r2,-4(r6)
    2ac4:	973fed2e 	bgeu	r18,fp,2a7c <quorem+0x164>
    2ac8:	800690ba 	slli	r3,r16,2
    2acc:	d9000017 	ldw	r4,0(sp)
    2ad0:	20c7883a 	add	r3,r4,r3
    2ad4:	18800017 	ldw	r2,0(r3)
    2ad8:	10000d1e 	bne	r2,zero,2b10 <quorem+0x1f8>
    2adc:	18bfff04 	addi	r2,r3,-4
    2ae0:	2080092e 	bgeu	r4,r2,2b08 <quorem+0x1f0>
    2ae4:	18ffff17 	ldw	r3,-4(r3)
    2ae8:	18000326 	beq	r3,zero,2af8 <quorem+0x1e0>
    2aec:	00000606 	br	2b08 <quorem+0x1f0>
    2af0:	10c00017 	ldw	r3,0(r2)
    2af4:	1800041e 	bne	r3,zero,2b08 <quorem+0x1f0>
    2af8:	d8c00017 	ldw	r3,0(sp)
    2afc:	10bfff04 	addi	r2,r2,-4
    2b00:	843fffc4 	addi	r16,r16,-1
    2b04:	18bffa36 	bltu	r3,r2,2af0 <quorem+0x1d8>
    2b08:	d8800117 	ldw	r2,4(sp)
    2b0c:	14000415 	stw	r16,16(r2)
    2b10:	8805883a 	mov	r2,r17
    2b14:	dfc00d17 	ldw	ra,52(sp)
    2b18:	df000c17 	ldw	fp,48(sp)
    2b1c:	ddc00b17 	ldw	r23,44(sp)
    2b20:	dd800a17 	ldw	r22,40(sp)
    2b24:	dd400917 	ldw	r21,36(sp)
    2b28:	dd000817 	ldw	r20,32(sp)
    2b2c:	dcc00717 	ldw	r19,28(sp)
    2b30:	dc800617 	ldw	r18,24(sp)
    2b34:	dc400517 	ldw	r17,20(sp)
    2b38:	dc000417 	ldw	r16,16(sp)
    2b3c:	dec00e04 	addi	sp,sp,56
    2b40:	f800283a 	ret
    2b44:	0005883a 	mov	r2,zero
    2b48:	003ff206 	br	2b14 <quorem+0x1fc>

00002b4c <_dtoa_r>:
    2b4c:	20801017 	ldw	r2,64(r4)
    2b50:	deffe204 	addi	sp,sp,-120
    2b54:	df001c15 	stw	fp,112(sp)
    2b58:	dcc01715 	stw	r19,92(sp)
    2b5c:	dc401515 	stw	r17,84(sp)
    2b60:	dc001415 	stw	r16,80(sp)
    2b64:	dfc01d15 	stw	ra,116(sp)
    2b68:	ddc01b15 	stw	r23,108(sp)
    2b6c:	dd801a15 	stw	r22,104(sp)
    2b70:	dd401915 	stw	r21,100(sp)
    2b74:	dd001815 	stw	r20,96(sp)
    2b78:	dc801615 	stw	r18,88(sp)
    2b7c:	d9400115 	stw	r5,4(sp)
    2b80:	d9c00215 	stw	r7,8(sp)
    2b84:	2039883a 	mov	fp,r4
    2b88:	3027883a 	mov	r19,r6
    2b8c:	dc002017 	ldw	r16,128(sp)
    2b90:	3023883a 	mov	r17,r6
    2b94:	10000826 	beq	r2,zero,2bb8 <_dtoa_r+0x6c>
    2b98:	21801117 	ldw	r6,68(r4)
    2b9c:	00c00044 	movi	r3,1
    2ba0:	100b883a 	mov	r5,r2
    2ba4:	1986983a 	sll	r3,r3,r6
    2ba8:	11800115 	stw	r6,4(r2)
    2bac:	10c00215 	stw	r3,8(r2)
    2bb0:	00060ec0 	call	60ec <_Bfree>
    2bb4:	e0001015 	stw	zero,64(fp)
    2bb8:	98018116 	blt	r19,zero,31c0 <_dtoa_r+0x674>
    2bbc:	80000015 	stw	zero,0(r16)
    2bc0:	989ffc2c 	andhi	r2,r19,32752
    2bc4:	00dffc34 	movhi	r3,32752
    2bc8:	10c18626 	beq	r2,r3,31e4 <_dtoa_r+0x698>
    2bcc:	d9000117 	ldw	r4,4(sp)
    2bd0:	000d883a 	mov	r6,zero
    2bd4:	000f883a 	mov	r7,zero
    2bd8:	880b883a 	mov	r5,r17
    2bdc:	000b7e80 	call	b7e8 <__eqdf2>
    2be0:	1000191e 	bne	r2,zero,2c48 <_dtoa_r+0xfc>
    2be4:	d8c01f17 	ldw	r3,124(sp)
    2be8:	00800044 	movi	r2,1
    2bec:	18800015 	stw	r2,0(r3)
    2bf0:	d8802117 	ldw	r2,132(sp)
    2bf4:	10032426 	beq	r2,zero,3888 <_dtoa_r+0xd3c>
    2bf8:	d9002117 	ldw	r4,132(sp)
    2bfc:	00800074 	movhi	r2,1
    2c00:	10bd0c44 	addi	r2,r2,-3023
    2c04:	00c00074 	movhi	r3,1
    2c08:	20800015 	stw	r2,0(r4)
    2c0c:	18bd0c04 	addi	r2,r3,-3024
    2c10:	d8800315 	stw	r2,12(sp)
    2c14:	d8800317 	ldw	r2,12(sp)
    2c18:	dfc01d17 	ldw	ra,116(sp)
    2c1c:	df001c17 	ldw	fp,112(sp)
    2c20:	ddc01b17 	ldw	r23,108(sp)
    2c24:	dd801a17 	ldw	r22,104(sp)
    2c28:	dd401917 	ldw	r21,100(sp)
    2c2c:	dd001817 	ldw	r20,96(sp)
    2c30:	dcc01717 	ldw	r19,92(sp)
    2c34:	dc801617 	ldw	r18,88(sp)
    2c38:	dc401517 	ldw	r17,84(sp)
    2c3c:	dc001417 	ldw	r16,80(sp)
    2c40:	dec01e04 	addi	sp,sp,120
    2c44:	f800283a 	ret
    2c48:	dc800117 	ldw	r18,4(sp)
    2c4c:	d8801204 	addi	r2,sp,72
    2c50:	9820d53a 	srli	r16,r19,20
    2c54:	d8800015 	stw	r2,0(sp)
    2c58:	d9c01304 	addi	r7,sp,76
    2c5c:	900b883a 	mov	r5,r18
    2c60:	880d883a 	mov	r6,r17
    2c64:	e009883a 	mov	r4,fp
    2c68:	0006cbc0 	call	6cbc <__d2b>
    2c6c:	102b883a 	mov	r21,r2
    2c70:	8001701e 	bne	r16,zero,3234 <_dtoa_r+0x6e8>
    2c74:	dc801217 	ldw	r18,72(sp)
    2c78:	dc001317 	ldw	r16,76(sp)
    2c7c:	9421883a 	add	r16,r18,r16
    2c80:	80810c84 	addi	r2,r16,1074
    2c84:	10c00850 	cmplti	r3,r2,33
    2c88:	18030f1e 	bne	r3,zero,38c8 <_dtoa_r+0xd7c>
    2c8c:	01001004 	movi	r4,64
    2c90:	2085c83a 	sub	r2,r4,r2
    2c94:	98a6983a 	sll	r19,r19,r2
    2c98:	d8800117 	ldw	r2,4(sp)
    2c9c:	81010484 	addi	r4,r16,1042
    2ca0:	1108d83a 	srl	r4,r2,r4
    2ca4:	9908b03a 	or	r4,r19,r4
    2ca8:	000cd300 	call	cd30 <__floatunsidf>
    2cac:	1009883a 	mov	r4,r2
    2cb0:	017f8434 	movhi	r5,65040
    2cb4:	00800044 	movi	r2,1
    2cb8:	194b883a 	add	r5,r3,r5
    2cbc:	843fffc4 	addi	r16,r16,-1
    2cc0:	d8800a15 	stw	r2,40(sp)
    2cc4:	000d883a 	mov	r6,zero
    2cc8:	01cffe34 	movhi	r7,16376
    2ccc:	000c2280 	call	c228 <__subdf3>
    2cd0:	0198dbf4 	movhi	r6,25455
    2cd4:	01cff4f4 	movhi	r7,16339
    2cd8:	3190d844 	addi	r6,r6,17249
    2cdc:	39e1e9c4 	addi	r7,r7,-30809
    2ce0:	1009883a 	mov	r4,r2
    2ce4:	180b883a 	mov	r5,r3
    2ce8:	000ba480 	call	ba48 <__muldf3>
    2cec:	01a2d874 	movhi	r6,35681
    2cf0:	01cff1f4 	movhi	r7,16327
    2cf4:	31b22cc4 	addi	r6,r6,-14157
    2cf8:	39e28a04 	addi	r7,r7,-30168
    2cfc:	180b883a 	mov	r5,r3
    2d00:	1009883a 	mov	r4,r2
    2d04:	000a4e40 	call	a4e4 <__adddf3>
    2d08:	8009883a 	mov	r4,r16
    2d0c:	1029883a 	mov	r20,r2
    2d10:	1827883a 	mov	r19,r3
    2d14:	000cc680 	call	cc68 <__floatsidf>
    2d18:	019427f4 	movhi	r6,20639
    2d1c:	01cff4f4 	movhi	r7,16339
    2d20:	319e7ec4 	addi	r6,r6,31227
    2d24:	39d104c4 	addi	r7,r7,17427
    2d28:	1009883a 	mov	r4,r2
    2d2c:	180b883a 	mov	r5,r3
    2d30:	000ba480 	call	ba48 <__muldf3>
    2d34:	100d883a 	mov	r6,r2
    2d38:	180f883a 	mov	r7,r3
    2d3c:	a009883a 	mov	r4,r20
    2d40:	980b883a 	mov	r5,r19
    2d44:	000a4e40 	call	a4e4 <__adddf3>
    2d48:	1009883a 	mov	r4,r2
    2d4c:	180b883a 	mov	r5,r3
    2d50:	1029883a 	mov	r20,r2
    2d54:	1827883a 	mov	r19,r3
    2d58:	000cbe80 	call	cbe8 <__fixdfsi>
    2d5c:	000d883a 	mov	r6,zero
    2d60:	000f883a 	mov	r7,zero
    2d64:	a009883a 	mov	r4,r20
    2d68:	980b883a 	mov	r5,r19
    2d6c:	102d883a 	mov	r22,r2
    2d70:	000b9580 	call	b958 <__ledf2>
    2d74:	1002ba16 	blt	r2,zero,3860 <_dtoa_r+0xd14>
    2d78:	9421c83a 	sub	r16,r18,r16
    2d7c:	b08005e8 	cmpgeui	r2,r22,23
    2d80:	853fffc4 	addi	r20,r16,-1
    2d84:	1002ae1e 	bne	r2,zero,3840 <_dtoa_r+0xcf4>
    2d88:	b00690fa 	slli	r3,r22,3
    2d8c:	00800074 	movhi	r2,1
    2d90:	10bd3004 	addi	r2,r2,-2880
    2d94:	10c5883a 	add	r2,r2,r3
    2d98:	11800017 	ldw	r6,0(r2)
    2d9c:	11c00117 	ldw	r7,4(r2)
    2da0:	d9000117 	ldw	r4,4(sp)
    2da4:	880b883a 	mov	r5,r17
    2da8:	000b9580 	call	b958 <__ledf2>
    2dac:	10026f0e 	bge	r2,zero,376c <_dtoa_r+0xc20>
    2db0:	d8000915 	stw	zero,36(sp)
    2db4:	b5bfffc4 	addi	r22,r22,-1
    2db8:	a002a416 	blt	r20,zero,384c <_dtoa_r+0xd00>
    2dbc:	d8000515 	stw	zero,20(sp)
    2dc0:	b0026d0e 	bge	r22,zero,3778 <_dtoa_r+0xc2c>
    2dc4:	d8800517 	ldw	r2,20(sp)
    2dc8:	d8c00217 	ldw	r3,8(sp)
    2dcc:	dd800415 	stw	r22,16(sp)
    2dd0:	1585c83a 	sub	r2,r2,r22
    2dd4:	d8800515 	stw	r2,20(sp)
    2dd8:	0585c83a 	sub	r2,zero,r22
    2ddc:	d8800815 	stw	r2,32(sp)
    2de0:	188002a8 	cmpgeui	r2,r3,10
    2de4:	002d883a 	mov	r22,zero
    2de8:	1002691e 	bne	r2,zero,3790 <_dtoa_r+0xc44>
    2dec:	18800190 	cmplti	r2,r3,6
    2df0:	1002ba1e 	bne	r2,zero,38dc <_dtoa_r+0xd90>
    2df4:	18bfff04 	addi	r2,r3,-4
    2df8:	d8800215 	stw	r2,8(sp)
    2dfc:	0021883a 	mov	r16,zero
    2e00:	d8c00217 	ldw	r3,8(sp)
    2e04:	188000e0 	cmpeqi	r2,r3,3
    2e08:	10039d1e 	bne	r2,zero,3c80 <_dtoa_r+0x1134>
    2e0c:	18800108 	cmpgei	r2,r3,4
    2e10:	10027a26 	beq	r2,zero,37fc <_dtoa_r+0xcb0>
    2e14:	d8c00217 	ldw	r3,8(sp)
    2e18:	18800120 	cmpeqi	r2,r3,4
    2e1c:	10026926 	beq	r2,zero,37c4 <_dtoa_r+0xc78>
    2e20:	00800044 	movi	r2,1
    2e24:	d8800715 	stw	r2,28(sp)
    2e28:	d8801e17 	ldw	r2,120(sp)
    2e2c:	0083670e 	bge	zero,r2,3bcc <_dtoa_r+0x1080>
    2e30:	d8800b15 	stw	r2,44(sp)
    2e34:	d8800615 	stw	r2,24(sp)
    2e38:	100d883a 	mov	r6,r2
    2e3c:	e0001115 	stw	zero,68(fp)
    2e40:	30800610 	cmplti	r2,r6,24
    2e44:	dc800617 	ldw	r18,24(sp)
    2e48:	1004eb1e 	bne	r2,zero,41f8 <_dtoa_r+0x16ac>
    2e4c:	00c00044 	movi	r3,1
    2e50:	00800104 	movi	r2,4
    2e54:	1085883a 	add	r2,r2,r2
    2e58:	11000504 	addi	r4,r2,20
    2e5c:	180b883a 	mov	r5,r3
    2e60:	18c00044 	addi	r3,r3,1
    2e64:	313ffb2e 	bgeu	r6,r4,2e54 <_dtoa_r+0x308>
    2e68:	e1401115 	stw	r5,68(fp)
    2e6c:	e009883a 	mov	r4,fp
    2e70:	00060480 	call	6048 <_Balloc>
    2e74:	d8800315 	stw	r2,12(sp)
    2e78:	e0801015 	stw	r2,64(fp)
    2e7c:	948003e8 	cmpgeui	r18,r18,15
    2e80:	9000fe1e 	bne	r18,zero,327c <_dtoa_r+0x730>
    2e84:	8000fd26 	beq	r16,zero,327c <_dtoa_r+0x730>
    2e88:	d9000417 	ldw	r4,16(sp)
    2e8c:	0103c60e 	bge	zero,r4,3da8 <_dtoa_r+0x125c>
    2e90:	208003cc 	andi	r2,r4,15
    2e94:	100690fa 	slli	r3,r2,3
    2e98:	202fd13a 	srai	r23,r4,4
    2e9c:	00800074 	movhi	r2,1
    2ea0:	10bd3004 	addi	r2,r2,-2880
    2ea4:	10c5883a 	add	r2,r2,r3
    2ea8:	b8c0040c 	andi	r3,r23,16
    2eac:	12800017 	ldw	r10,0(r2)
    2eb0:	12400117 	ldw	r9,4(r2)
    2eb4:	1803621e 	bne	r3,zero,3c40 <_dtoa_r+0x10f4>
    2eb8:	d8800117 	ldw	r2,4(sp)
    2ebc:	8827883a 	mov	r19,r17
    2ec0:	04000084 	movi	r16,2
    2ec4:	d8800c15 	stw	r2,48(sp)
    2ec8:	04800074 	movhi	r18,1
    2ecc:	94bd2604 	addi	r18,r18,-2920
    2ed0:	b8000f26 	beq	r23,zero,2f10 <_dtoa_r+0x3c4>
    2ed4:	5005883a 	mov	r2,r10
    2ed8:	4807883a 	mov	r3,r9
    2edc:	b980004c 	andi	r6,r23,1
    2ee0:	1009883a 	mov	r4,r2
    2ee4:	b82fd07a 	srai	r23,r23,1
    2ee8:	180b883a 	mov	r5,r3
    2eec:	30000426 	beq	r6,zero,2f00 <_dtoa_r+0x3b4>
    2ef0:	91800017 	ldw	r6,0(r18)
    2ef4:	91c00117 	ldw	r7,4(r18)
    2ef8:	84000044 	addi	r16,r16,1
    2efc:	000ba480 	call	ba48 <__muldf3>
    2f00:	94800204 	addi	r18,r18,8
    2f04:	b83ff51e 	bne	r23,zero,2edc <_dtoa_r+0x390>
    2f08:	1015883a 	mov	r10,r2
    2f0c:	1813883a 	mov	r9,r3
    2f10:	d9000c17 	ldw	r4,48(sp)
    2f14:	980b883a 	mov	r5,r19
    2f18:	500d883a 	mov	r6,r10
    2f1c:	480f883a 	mov	r7,r9
    2f20:	000ae840 	call	ae84 <__divdf3>
    2f24:	1025883a 	mov	r18,r2
    2f28:	1827883a 	mov	r19,r3
    2f2c:	d8800917 	ldw	r2,36(sp)
    2f30:	10000626 	beq	r2,zero,2f4c <_dtoa_r+0x400>
    2f34:	000d883a 	mov	r6,zero
    2f38:	01cffc34 	movhi	r7,16368
    2f3c:	9009883a 	mov	r4,r18
    2f40:	980b883a 	mov	r5,r19
    2f44:	000b9580 	call	b958 <__ledf2>
    2f48:	10042616 	blt	r2,zero,3fe4 <_dtoa_r+0x1498>
    2f4c:	8009883a 	mov	r4,r16
    2f50:	000cc680 	call	cc68 <__floatsidf>
    2f54:	900d883a 	mov	r6,r18
    2f58:	980f883a 	mov	r7,r19
    2f5c:	1009883a 	mov	r4,r2
    2f60:	180b883a 	mov	r5,r3
    2f64:	000ba480 	call	ba48 <__muldf3>
    2f68:	000d883a 	mov	r6,zero
    2f6c:	01d00734 	movhi	r7,16412
    2f70:	1009883a 	mov	r4,r2
    2f74:	180b883a 	mov	r5,r3
    2f78:	000a4e40 	call	a4e4 <__adddf3>
    2f7c:	d8800c15 	stw	r2,48(sp)
    2f80:	00bf3034 	movhi	r2,64704
    2f84:	1885883a 	add	r2,r3,r2
    2f88:	d8800d15 	stw	r2,52(sp)
    2f8c:	d8800617 	ldw	r2,24(sp)
    2f90:	10036d26 	beq	r2,zero,3d48 <_dtoa_r+0x11fc>
    2f94:	d8800417 	ldw	r2,16(sp)
    2f98:	d8800f15 	stw	r2,60(sp)
    2f9c:	d8800617 	ldw	r2,24(sp)
    2fa0:	d8800e15 	stw	r2,56(sp)
    2fa4:	980b883a 	mov	r5,r19
    2fa8:	9009883a 	mov	r4,r18
    2fac:	000cbe80 	call	cbe8 <__fixdfsi>
    2fb0:	1009883a 	mov	r4,r2
    2fb4:	102f883a 	mov	r23,r2
    2fb8:	000cc680 	call	cc68 <__floatsidf>
    2fbc:	100d883a 	mov	r6,r2
    2fc0:	180f883a 	mov	r7,r3
    2fc4:	9009883a 	mov	r4,r18
    2fc8:	980b883a 	mov	r5,r19
    2fcc:	000c2280 	call	c228 <__subdf3>
    2fd0:	1025883a 	mov	r18,r2
    2fd4:	d8800e17 	ldw	r2,56(sp)
    2fd8:	1821883a 	mov	r16,r3
    2fdc:	ba400c04 	addi	r9,r23,48
    2fe0:	10bfffc4 	addi	r2,r2,-1
    2fe4:	100690fa 	slli	r3,r2,3
    2fe8:	00800074 	movhi	r2,1
    2fec:	10bd3004 	addi	r2,r2,-2880
    2ff0:	10c5883a 	add	r2,r2,r3
    2ff4:	11800017 	ldw	r6,0(r2)
    2ff8:	d8c00317 	ldw	r3,12(sp)
    2ffc:	11c00117 	ldw	r7,4(r2)
    3000:	d8800717 	ldw	r2,28(sp)
    3004:	4811883a 	mov	r8,r9
    3008:	da001015 	stw	r8,64(sp)
    300c:	1dc00044 	addi	r23,r3,1
    3010:	1003a226 	beq	r2,zero,3e9c <_dtoa_r+0x1350>
    3014:	0009883a 	mov	r4,zero
    3018:	014ff834 	movhi	r5,16352
    301c:	da401115 	stw	r9,68(sp)
    3020:	000ae840 	call	ae84 <__divdf3>
    3024:	d9800c17 	ldw	r6,48(sp)
    3028:	d9c00d17 	ldw	r7,52(sp)
    302c:	1009883a 	mov	r4,r2
    3030:	180b883a 	mov	r5,r3
    3034:	000c2280 	call	c228 <__subdf3>
    3038:	1827883a 	mov	r19,r3
    303c:	da401117 	ldw	r9,68(sp)
    3040:	d8c00317 	ldw	r3,12(sp)
    3044:	900d883a 	mov	r6,r18
    3048:	800f883a 	mov	r7,r16
    304c:	1a400005 	stb	r9,0(r3)
    3050:	1009883a 	mov	r4,r2
    3054:	980b883a 	mov	r5,r19
    3058:	d8800c15 	stw	r2,48(sp)
    305c:	000b8680 	call	b868 <__gedf2>
    3060:	da001017 	ldw	r8,64(sp)
    3064:	00804816 	blt	zero,r2,3188 <_dtoa_r+0x63c>
    3068:	900d883a 	mov	r6,r18
    306c:	800f883a 	mov	r7,r16
    3070:	0009883a 	mov	r4,zero
    3074:	014ffc34 	movhi	r5,16368
    3078:	da000d15 	stw	r8,52(sp)
    307c:	000c2280 	call	c228 <__subdf3>
    3080:	d9000c17 	ldw	r4,48(sp)
    3084:	100d883a 	mov	r6,r2
    3088:	180f883a 	mov	r7,r3
    308c:	980b883a 	mov	r5,r19
    3090:	000b8680 	call	b868 <__gedf2>
    3094:	da000d17 	ldw	r8,52(sp)
    3098:	00844e16 	blt	zero,r2,41d4 <_dtoa_r+0x1688>
    309c:	d8c00e17 	ldw	r3,56(sp)
    30a0:	18800060 	cmpeqi	r2,r3,1
    30a4:	1000751e 	bne	r2,zero,327c <_dtoa_r+0x730>
    30a8:	d8800317 	ldw	r2,12(sp)
    30ac:	dd800d15 	stw	r22,52(sp)
    30b0:	dd000e15 	stw	r20,56(sp)
    30b4:	10c5883a 	add	r2,r2,r3
    30b8:	dd000c17 	ldw	r20,48(sp)
    30bc:	102d883a 	mov	r22,r2
    30c0:	dc400c15 	stw	r17,48(sp)
    30c4:	00000806 	br	30e8 <_dtoa_r+0x59c>
    30c8:	000c2280 	call	c228 <__subdf3>
    30cc:	a00d883a 	mov	r6,r20
    30d0:	980f883a 	mov	r7,r19
    30d4:	1009883a 	mov	r4,r2
    30d8:	180b883a 	mov	r5,r3
    30dc:	000b9580 	call	b958 <__ledf2>
    30e0:	10042316 	blt	r2,zero,4170 <_dtoa_r+0x1624>
    30e4:	bd806226 	beq	r23,r22,3270 <_dtoa_r+0x724>
    30e8:	a009883a 	mov	r4,r20
    30ec:	980b883a 	mov	r5,r19
    30f0:	000d883a 	mov	r6,zero
    30f4:	01d00934 	movhi	r7,16420
    30f8:	000ba480 	call	ba48 <__muldf3>
    30fc:	000d883a 	mov	r6,zero
    3100:	01d00934 	movhi	r7,16420
    3104:	9009883a 	mov	r4,r18
    3108:	800b883a 	mov	r5,r16
    310c:	1029883a 	mov	r20,r2
    3110:	1827883a 	mov	r19,r3
    3114:	000ba480 	call	ba48 <__muldf3>
    3118:	180b883a 	mov	r5,r3
    311c:	1009883a 	mov	r4,r2
    3120:	1821883a 	mov	r16,r3
    3124:	1025883a 	mov	r18,r2
    3128:	000cbe80 	call	cbe8 <__fixdfsi>
    312c:	1009883a 	mov	r4,r2
    3130:	1023883a 	mov	r17,r2
    3134:	000cc680 	call	cc68 <__floatsidf>
    3138:	9009883a 	mov	r4,r18
    313c:	800b883a 	mov	r5,r16
    3140:	100d883a 	mov	r6,r2
    3144:	180f883a 	mov	r7,r3
    3148:	000c2280 	call	c228 <__subdf3>
    314c:	bdc00044 	addi	r23,r23,1
    3150:	8c400c04 	addi	r17,r17,48
    3154:	a00d883a 	mov	r6,r20
    3158:	980f883a 	mov	r7,r19
    315c:	1009883a 	mov	r4,r2
    3160:	180b883a 	mov	r5,r3
    3164:	bc7fffc5 	stb	r17,-1(r23)
    3168:	1025883a 	mov	r18,r2
    316c:	1821883a 	mov	r16,r3
    3170:	000b9580 	call	b958 <__ledf2>
    3174:	900d883a 	mov	r6,r18
    3178:	800f883a 	mov	r7,r16
    317c:	0009883a 	mov	r4,zero
    3180:	014ffc34 	movhi	r5,16368
    3184:	103fd00e 	bge	r2,zero,30c8 <_dtoa_r+0x57c>
    3188:	d8800f17 	ldw	r2,60(sp)
    318c:	10800044 	addi	r2,r2,1
    3190:	d8800415 	stw	r2,16(sp)
    3194:	a80b883a 	mov	r5,r21
    3198:	e009883a 	mov	r4,fp
    319c:	00060ec0 	call	60ec <_Bfree>
    31a0:	d8801f17 	ldw	r2,124(sp)
    31a4:	d8c00417 	ldw	r3,16(sp)
    31a8:	b8000005 	stb	zero,0(r23)
    31ac:	10c00015 	stw	r3,0(r2)
    31b0:	d8802117 	ldw	r2,132(sp)
    31b4:	103e9726 	beq	r2,zero,2c14 <_dtoa_r+0xc8>
    31b8:	15c00015 	stw	r23,0(r2)
    31bc:	003e9506 	br	2c14 <_dtoa_r+0xc8>
    31c0:	04600034 	movhi	r17,32768
    31c4:	8c7fffc4 	addi	r17,r17,-1
    31c8:	9c62703a 	and	r17,r19,r17
    31cc:	00800044 	movi	r2,1
    31d0:	8827883a 	mov	r19,r17
    31d4:	80800015 	stw	r2,0(r16)
    31d8:	00dffc34 	movhi	r3,32752
    31dc:	989ffc2c 	andhi	r2,r19,32752
    31e0:	10fe7a1e 	bne	r2,r3,2bcc <_dtoa_r+0x80>
    31e4:	00800434 	movhi	r2,16
    31e8:	d8c01f17 	ldw	r3,124(sp)
    31ec:	10bfffc4 	addi	r2,r2,-1
    31f0:	98a6703a 	and	r19,r19,r2
    31f4:	0089c3c4 	movi	r2,9999
    31f8:	18800015 	stw	r2,0(r3)
    31fc:	d8800117 	ldw	r2,4(sp)
    3200:	98aab03a 	or	r21,r19,r2
    3204:	a800141e 	bne	r21,zero,3258 <_dtoa_r+0x70c>
    3208:	d8802117 	ldw	r2,132(sp)
    320c:	1003f626 	beq	r2,zero,41e8 <_dtoa_r+0x169c>
    3210:	00800074 	movhi	r2,1
    3214:	1007883a 	mov	r3,r2
    3218:	18fd1604 	addi	r3,r3,-2984
    321c:	00800074 	movhi	r2,1
    3220:	d8c00315 	stw	r3,12(sp)
    3224:	10bd1804 	addi	r2,r2,-2976
    3228:	d8c02117 	ldw	r3,132(sp)
    322c:	18800015 	stw	r2,0(r3)
    3230:	003e7806 	br	2c14 <_dtoa_r+0xc8>
    3234:	01400434 	movhi	r5,16
    3238:	297fffc4 	addi	r5,r5,-1
    323c:	894a703a 	and	r5,r17,r5
    3240:	9009883a 	mov	r4,r18
    3244:	294ffc34 	orhi	r5,r5,16368
    3248:	843f0044 	addi	r16,r16,-1023
    324c:	dc801217 	ldw	r18,72(sp)
    3250:	d8000a15 	stw	zero,40(sp)
    3254:	003e9b06 	br	2cc4 <_dtoa_r+0x178>
    3258:	d8802117 	ldw	r2,132(sp)
    325c:	1002461e 	bne	r2,zero,3b78 <_dtoa_r+0x102c>
    3260:	00800074 	movhi	r2,1
    3264:	10bd1504 	addi	r2,r2,-2988
    3268:	d8800315 	stw	r2,12(sp)
    326c:	003e6906 	br	2c14 <_dtoa_r+0xc8>
    3270:	dd800d17 	ldw	r22,52(sp)
    3274:	dd000e17 	ldw	r20,56(sp)
    3278:	dc400c17 	ldw	r17,48(sp)
    327c:	d8801317 	ldw	r2,76(sp)
    3280:	10009f16 	blt	r2,zero,3500 <_dtoa_r+0x9b4>
    3284:	d9000417 	ldw	r4,16(sp)
    3288:	20c003c8 	cmpgei	r3,r4,15
    328c:	18009c1e 	bne	r3,zero,3500 <_dtoa_r+0x9b4>
    3290:	200690fa 	slli	r3,r4,3
    3294:	00800074 	movhi	r2,1
    3298:	10bd3004 	addi	r2,r2,-2880
    329c:	10c5883a 	add	r2,r2,r3
    32a0:	14000017 	ldw	r16,0(r2)
    32a4:	14800117 	ldw	r18,4(r2)
    32a8:	d8801e17 	ldw	r2,120(sp)
    32ac:	1000140e 	bge	r2,zero,3300 <_dtoa_r+0x7b4>
    32b0:	d8800617 	ldw	r2,24(sp)
    32b4:	00801216 	blt	zero,r2,3300 <_dtoa_r+0x7b4>
    32b8:	1002b81e 	bne	r2,zero,3d9c <_dtoa_r+0x1250>
    32bc:	8009883a 	mov	r4,r16
    32c0:	900b883a 	mov	r5,r18
    32c4:	000d883a 	mov	r6,zero
    32c8:	01d00534 	movhi	r7,16404
    32cc:	000ba480 	call	ba48 <__muldf3>
    32d0:	d9800117 	ldw	r6,4(sp)
    32d4:	880f883a 	mov	r7,r17
    32d8:	1009883a 	mov	r4,r2
    32dc:	180b883a 	mov	r5,r3
    32e0:	000b8680 	call	b868 <__gedf2>
    32e4:	0025883a 	mov	r18,zero
    32e8:	0021883a 	mov	r16,zero
    32ec:	1001fd16 	blt	r2,zero,3ae4 <_dtoa_r+0xf98>
    32f0:	d8801e17 	ldw	r2,120(sp)
    32f4:	ddc00317 	ldw	r23,12(sp)
    32f8:	00a2303a 	nor	r17,zero,r2
    32fc:	0001ff06 	br	3afc <_dtoa_r+0xfb0>
    3300:	dcc00117 	ldw	r19,4(sp)
    3304:	800d883a 	mov	r6,r16
    3308:	900f883a 	mov	r7,r18
    330c:	880b883a 	mov	r5,r17
    3310:	9809883a 	mov	r4,r19
    3314:	000ae840 	call	ae84 <__divdf3>
    3318:	180b883a 	mov	r5,r3
    331c:	1009883a 	mov	r4,r2
    3320:	000cbe80 	call	cbe8 <__fixdfsi>
    3324:	1009883a 	mov	r4,r2
    3328:	102d883a 	mov	r22,r2
    332c:	000cc680 	call	cc68 <__floatsidf>
    3330:	800d883a 	mov	r6,r16
    3334:	900f883a 	mov	r7,r18
    3338:	1009883a 	mov	r4,r2
    333c:	180b883a 	mov	r5,r3
    3340:	000ba480 	call	ba48 <__muldf3>
    3344:	880b883a 	mov	r5,r17
    3348:	100d883a 	mov	r6,r2
    334c:	180f883a 	mov	r7,r3
    3350:	9809883a 	mov	r4,r19
    3354:	000c2280 	call	c228 <__subdf3>
    3358:	dc400317 	ldw	r17,12(sp)
    335c:	1009883a 	mov	r4,r2
    3360:	d9c00417 	ldw	r7,16(sp)
    3364:	b0800c04 	addi	r2,r22,48
    3368:	88800005 	stb	r2,0(r17)
    336c:	d8800617 	ldw	r2,24(sp)
    3370:	39c00044 	addi	r7,r7,1
    3374:	d9c00415 	stw	r7,16(sp)
    3378:	11800060 	cmpeqi	r6,r2,1
    337c:	180b883a 	mov	r5,r3
    3380:	2005883a 	mov	r2,r4
    3384:	8dc00044 	addi	r23,r17,1
    3388:	3000391e 	bne	r6,zero,3470 <_dtoa_r+0x924>
    338c:	01d00934 	movhi	r7,16420
    3390:	000ba480 	call	ba48 <__muldf3>
    3394:	000d883a 	mov	r6,zero
    3398:	000f883a 	mov	r7,zero
    339c:	1009883a 	mov	r4,r2
    33a0:	180b883a 	mov	r5,r3
    33a4:	1027883a 	mov	r19,r2
    33a8:	1829883a 	mov	r20,r3
    33ac:	000b7e80 	call	b7e8 <__eqdf2>
    33b0:	103f7826 	beq	r2,zero,3194 <_dtoa_r+0x648>
    33b4:	d8c00617 	ldw	r3,24(sp)
    33b8:	8805883a 	mov	r2,r17
    33bc:	dd400115 	stw	r21,4(sp)
    33c0:	8c400084 	addi	r17,r17,2
    33c4:	10ed883a 	add	r22,r2,r3
    33c8:	00000a06 	br	33f4 <_dtoa_r+0x8a8>
    33cc:	000ba480 	call	ba48 <__muldf3>
    33d0:	000d883a 	mov	r6,zero
    33d4:	000f883a 	mov	r7,zero
    33d8:	1009883a 	mov	r4,r2
    33dc:	180b883a 	mov	r5,r3
    33e0:	1027883a 	mov	r19,r2
    33e4:	1829883a 	mov	r20,r3
    33e8:	8c400044 	addi	r17,r17,1
    33ec:	000b7e80 	call	b7e8 <__eqdf2>
    33f0:	10029d26 	beq	r2,zero,3e68 <_dtoa_r+0x131c>
    33f4:	800d883a 	mov	r6,r16
    33f8:	900f883a 	mov	r7,r18
    33fc:	9809883a 	mov	r4,r19
    3400:	a00b883a 	mov	r5,r20
    3404:	000ae840 	call	ae84 <__divdf3>
    3408:	180b883a 	mov	r5,r3
    340c:	1009883a 	mov	r4,r2
    3410:	000cbe80 	call	cbe8 <__fixdfsi>
    3414:	1009883a 	mov	r4,r2
    3418:	102b883a 	mov	r21,r2
    341c:	000cc680 	call	cc68 <__floatsidf>
    3420:	800d883a 	mov	r6,r16
    3424:	900f883a 	mov	r7,r18
    3428:	1009883a 	mov	r4,r2
    342c:	180b883a 	mov	r5,r3
    3430:	000ba480 	call	ba48 <__muldf3>
    3434:	100d883a 	mov	r6,r2
    3438:	180f883a 	mov	r7,r3
    343c:	9809883a 	mov	r4,r19
    3440:	a00b883a 	mov	r5,r20
    3444:	000c2280 	call	c228 <__subdf3>
    3448:	aa400c04 	addi	r9,r21,48
    344c:	8a7fffc5 	stb	r9,-1(r17)
    3450:	000d883a 	mov	r6,zero
    3454:	01d00934 	movhi	r7,16420
    3458:	1009883a 	mov	r4,r2
    345c:	180b883a 	mov	r5,r3
    3460:	882f883a 	mov	r23,r17
    3464:	b47fd91e 	bne	r22,r17,33cc <_dtoa_r+0x880>
    3468:	a82d883a 	mov	r22,r21
    346c:	dd400117 	ldw	r21,4(sp)
    3470:	100d883a 	mov	r6,r2
    3474:	180f883a 	mov	r7,r3
    3478:	1009883a 	mov	r4,r2
    347c:	180b883a 	mov	r5,r3
    3480:	000a4e40 	call	a4e4 <__adddf3>
    3484:	800d883a 	mov	r6,r16
    3488:	900f883a 	mov	r7,r18
    348c:	1009883a 	mov	r4,r2
    3490:	180b883a 	mov	r5,r3
    3494:	1027883a 	mov	r19,r2
    3498:	1823883a 	mov	r17,r3
    349c:	000b8680 	call	b868 <__gedf2>
    34a0:	00800816 	blt	zero,r2,34c4 <_dtoa_r+0x978>
    34a4:	800d883a 	mov	r6,r16
    34a8:	900f883a 	mov	r7,r18
    34ac:	9809883a 	mov	r4,r19
    34b0:	880b883a 	mov	r5,r17
    34b4:	000b7e80 	call	b7e8 <__eqdf2>
    34b8:	103f361e 	bne	r2,zero,3194 <_dtoa_r+0x648>
    34bc:	b580004c 	andi	r22,r22,1
    34c0:	b03f3426 	beq	r22,zero,3194 <_dtoa_r+0x648>
    34c4:	ba3fffc3 	ldbu	r8,-1(r23)
    34c8:	d9000317 	ldw	r4,12(sp)
    34cc:	00000306 	br	34dc <_dtoa_r+0x990>
    34d0:	20c30e26 	beq	r4,r3,410c <_dtoa_r+0x15c0>
    34d4:	1a3fffc3 	ldbu	r8,-1(r3)
    34d8:	182f883a 	mov	r23,r3
    34dc:	40803fcc 	andi	r2,r8,255
    34e0:	1080201c 	xori	r2,r2,128
    34e4:	10bfe004 	addi	r2,r2,-128
    34e8:	10800e60 	cmpeqi	r2,r2,57
    34ec:	b8ffffc4 	addi	r3,r23,-1
    34f0:	103ff71e 	bne	r2,zero,34d0 <_dtoa_r+0x984>
    34f4:	42000044 	addi	r8,r8,1
    34f8:	1a000005 	stb	r8,0(r3)
    34fc:	003f2506 	br	3194 <_dtoa_r+0x648>
    3500:	d8c00717 	ldw	r3,28(sp)
    3504:	1800e426 	beq	r3,zero,3898 <_dtoa_r+0xd4c>
    3508:	d8c00217 	ldw	r3,8(sp)
    350c:	18c00088 	cmpgei	r3,r3,2
    3510:	1801ec26 	beq	r3,zero,3cc4 <_dtoa_r+0x1178>
    3514:	d8800617 	ldw	r2,24(sp)
    3518:	14bfffc4 	addi	r18,r2,-1
    351c:	d8800817 	ldw	r2,32(sp)
    3520:	1481c50e 	bge	r2,r18,3c38 <_dtoa_r+0x10ec>
    3524:	d8800817 	ldw	r2,32(sp)
    3528:	dc800815 	stw	r18,32(sp)
    352c:	9085c83a 	sub	r2,r18,r2
    3530:	b0ad883a 	add	r22,r22,r2
    3534:	0025883a 	mov	r18,zero
    3538:	d8800617 	ldw	r2,24(sp)
    353c:	10024c16 	blt	r2,zero,3e70 <_dtoa_r+0x1324>
    3540:	d8c00517 	ldw	r3,20(sp)
    3544:	a0a9883a 	add	r20,r20,r2
    3548:	1885883a 	add	r2,r3,r2
    354c:	1827883a 	mov	r19,r3
    3550:	d8800515 	stw	r2,20(sp)
    3554:	01400044 	movi	r5,1
    3558:	e009883a 	mov	r4,fp
    355c:	00064700 	call	6470 <__i2b>
    3560:	1021883a 	mov	r16,r2
    3564:	04c0080e 	bge	zero,r19,3588 <_dtoa_r+0xa3c>
    3568:	0500070e 	bge	zero,r20,3588 <_dtoa_r+0xa3c>
    356c:	9805883a 	mov	r2,r19
    3570:	a4c1a916 	blt	r20,r19,3c18 <_dtoa_r+0x10cc>
    3574:	d8c00517 	ldw	r3,20(sp)
    3578:	98a7c83a 	sub	r19,r19,r2
    357c:	a0a9c83a 	sub	r20,r20,r2
    3580:	1887c83a 	sub	r3,r3,r2
    3584:	d8c00515 	stw	r3,20(sp)
    3588:	d8800817 	ldw	r2,32(sp)
    358c:	10001426 	beq	r2,zero,35e0 <_dtoa_r+0xa94>
    3590:	d8800717 	ldw	r2,28(sp)
    3594:	10017226 	beq	r2,zero,3b60 <_dtoa_r+0x1014>
    3598:	04800e0e 	bge	zero,r18,35d4 <_dtoa_r+0xa88>
    359c:	800b883a 	mov	r5,r16
    35a0:	900d883a 	mov	r6,r18
    35a4:	e009883a 	mov	r4,fp
    35a8:	00066e40 	call	66e4 <__pow5mult>
    35ac:	a80d883a 	mov	r6,r21
    35b0:	100b883a 	mov	r5,r2
    35b4:	e009883a 	mov	r4,fp
    35b8:	1021883a 	mov	r16,r2
    35bc:	00064a40 	call	64a4 <__multiply>
    35c0:	102f883a 	mov	r23,r2
    35c4:	a80b883a 	mov	r5,r21
    35c8:	e009883a 	mov	r4,fp
    35cc:	00060ec0 	call	60ec <_Bfree>
    35d0:	b82b883a 	mov	r21,r23
    35d4:	d8800817 	ldw	r2,32(sp)
    35d8:	148dc83a 	sub	r6,r2,r18
    35dc:	3001611e 	bne	r6,zero,3b64 <_dtoa_r+0x1018>
    35e0:	01400044 	movi	r5,1
    35e4:	e009883a 	mov	r4,fp
    35e8:	00064700 	call	6470 <__i2b>
    35ec:	1025883a 	mov	r18,r2
    35f0:	0580bc16 	blt	zero,r22,38e4 <_dtoa_r+0xd98>
    35f4:	d8800217 	ldw	r2,8(sp)
    35f8:	10800088 	cmpgei	r2,r2,2
    35fc:	10016526 	beq	r2,zero,3b94 <_dtoa_r+0x1048>
    3600:	0023883a 	mov	r17,zero
    3604:	00800044 	movi	r2,1
    3608:	b000bf1e 	bne	r22,zero,3908 <_dtoa_r+0xdbc>
    360c:	1505883a 	add	r2,r2,r20
    3610:	108007cc 	andi	r2,r2,31
    3614:	1000aa26 	beq	r2,zero,38c0 <_dtoa_r+0xd74>
    3618:	00c00804 	movi	r3,32
    361c:	1887c83a 	sub	r3,r3,r2
    3620:	19000150 	cmplti	r4,r3,5
    3624:	2002f61e 	bne	r4,zero,4200 <_dtoa_r+0x16b4>
    3628:	00c00704 	movi	r3,28
    362c:	1885c83a 	sub	r2,r3,r2
    3630:	d8c00517 	ldw	r3,20(sp)
    3634:	98a7883a 	add	r19,r19,r2
    3638:	a0a9883a 	add	r20,r20,r2
    363c:	1887883a 	add	r3,r3,r2
    3640:	d8c00515 	stw	r3,20(sp)
    3644:	d8800517 	ldw	r2,20(sp)
    3648:	00809716 	blt	zero,r2,38a8 <_dtoa_r+0xd5c>
    364c:	0500050e 	bge	zero,r20,3664 <_dtoa_r+0xb18>
    3650:	900b883a 	mov	r5,r18
    3654:	a00d883a 	mov	r6,r20
    3658:	e009883a 	mov	r4,fp
    365c:	000680c0 	call	680c <__lshift>
    3660:	1025883a 	mov	r18,r2
    3664:	d8800917 	ldw	r2,36(sp)
    3668:	10012b1e 	bne	r2,zero,3b18 <_dtoa_r+0xfcc>
    366c:	d8800617 	ldw	r2,24(sp)
    3670:	00810d0e 	bge	zero,r2,3aa8 <_dtoa_r+0xf5c>
    3674:	d8800417 	ldw	r2,16(sp)
    3678:	10800044 	addi	r2,r2,1
    367c:	d8800415 	stw	r2,16(sp)
    3680:	d8800717 	ldw	r2,28(sp)
    3684:	1000b21e 	bne	r2,zero,3950 <_dtoa_r+0xe04>
    3688:	ddc00317 	ldw	r23,12(sp)
    368c:	04400044 	movi	r17,1
    3690:	dcc00617 	ldw	r19,24(sp)
    3694:	00000306 	br	36a4 <_dtoa_r+0xb58>
    3698:	00061100 	call	6110 <__multadd>
    369c:	102b883a 	mov	r21,r2
    36a0:	8c400044 	addi	r17,r17,1
    36a4:	900b883a 	mov	r5,r18
    36a8:	a809883a 	mov	r4,r21
    36ac:	00029180 	call	2918 <quorem>
    36b0:	10800c04 	addi	r2,r2,48
    36b4:	bdc00044 	addi	r23,r23,1
    36b8:	b8bfffc5 	stb	r2,-1(r23)
    36bc:	000f883a 	mov	r7,zero
    36c0:	01800284 	movi	r6,10
    36c4:	a80b883a 	mov	r5,r21
    36c8:	e009883a 	mov	r4,fp
    36cc:	8cfff216 	blt	r17,r19,3698 <_dtoa_r+0xb4c>
    36d0:	1011883a 	mov	r8,r2
    36d4:	0029883a 	mov	r20,zero
    36d8:	a80b883a 	mov	r5,r21
    36dc:	01800044 	movi	r6,1
    36e0:	e009883a 	mov	r4,fp
    36e4:	da000115 	stw	r8,4(sp)
    36e8:	000680c0 	call	680c <__lshift>
    36ec:	900b883a 	mov	r5,r18
    36f0:	1009883a 	mov	r4,r2
    36f4:	102b883a 	mov	r21,r2
    36f8:	00069480 	call	6948 <__mcmp>
    36fc:	b8ffffc3 	ldbu	r3,-1(r23)
    3700:	0081610e 	bge	zero,r2,3c88 <_dtoa_r+0x113c>
    3704:	d9400317 	ldw	r5,12(sp)
    3708:	00000306 	br	3718 <_dtoa_r+0xbcc>
    370c:	29017726 	beq	r5,r4,3cec <_dtoa_r+0x11a0>
    3710:	20ffffc3 	ldbu	r3,-1(r4)
    3714:	202f883a 	mov	r23,r4
    3718:	18803fcc 	andi	r2,r3,255
    371c:	1080201c 	xori	r2,r2,128
    3720:	10bfe004 	addi	r2,r2,-128
    3724:	10800e60 	cmpeqi	r2,r2,57
    3728:	b93fffc4 	addi	r4,r23,-1
    372c:	103ff71e 	bne	r2,zero,370c <_dtoa_r+0xbc0>
    3730:	18c00044 	addi	r3,r3,1
    3734:	20c00005 	stb	r3,0(r4)
    3738:	900b883a 	mov	r5,r18
    373c:	e009883a 	mov	r4,fp
    3740:	00060ec0 	call	60ec <_Bfree>
    3744:	803e9326 	beq	r16,zero,3194 <_dtoa_r+0x648>
    3748:	a0000426 	beq	r20,zero,375c <_dtoa_r+0xc10>
    374c:	a4000326 	beq	r20,r16,375c <_dtoa_r+0xc10>
    3750:	a00b883a 	mov	r5,r20
    3754:	e009883a 	mov	r4,fp
    3758:	00060ec0 	call	60ec <_Bfree>
    375c:	800b883a 	mov	r5,r16
    3760:	e009883a 	mov	r4,fp
    3764:	00060ec0 	call	60ec <_Bfree>
    3768:	003e8a06 	br	3194 <_dtoa_r+0x648>
    376c:	d8000915 	stw	zero,36(sp)
    3770:	a0003616 	blt	r20,zero,384c <_dtoa_r+0xd00>
    3774:	d8000515 	stw	zero,20(sp)
    3778:	d8c00217 	ldw	r3,8(sp)
    377c:	dd800415 	stw	r22,16(sp)
    3780:	d8000815 	stw	zero,32(sp)
    3784:	188002a8 	cmpgeui	r2,r3,10
    3788:	a5a9883a 	add	r20,r20,r22
    378c:	103d9726 	beq	r2,zero,2dec <_dtoa_r+0x2a0>
    3790:	00800044 	movi	r2,1
    3794:	d8800715 	stw	r2,28(sp)
    3798:	00bfffc4 	movi	r2,-1
    379c:	04bfffc4 	movi	r18,-1
    37a0:	04000044 	movi	r16,1
    37a4:	d8000215 	stw	zero,8(sp)
    37a8:	d8800615 	stw	r2,24(sp)
    37ac:	d8001e15 	stw	zero,120(sp)
    37b0:	d8800617 	ldw	r2,24(sp)
    37b4:	e0001115 	stw	zero,68(fp)
    37b8:	000b883a 	mov	r5,zero
    37bc:	d8800b15 	stw	r2,44(sp)
    37c0:	003daa06 	br	2e6c <_dtoa_r+0x320>
    37c4:	18800160 	cmpeqi	r2,r3,5
    37c8:	00c00044 	movi	r3,1
    37cc:	d8c00715 	stw	r3,28(sp)
    37d0:	10000d26 	beq	r2,zero,3808 <_dtoa_r+0xcbc>
    37d4:	d8801e17 	ldw	r2,120(sp)
    37d8:	d8c00417 	ldw	r3,16(sp)
    37dc:	10c5883a 	add	r2,r2,r3
    37e0:	d8800b15 	stw	r2,44(sp)
    37e4:	10800044 	addi	r2,r2,1
    37e8:	d8800615 	stw	r2,24(sp)
    37ec:	100d883a 	mov	r6,r2
    37f0:	00bd9216 	blt	zero,r2,2e3c <_dtoa_r+0x2f0>
    37f4:	01800044 	movi	r6,1
    37f8:	003d9006 	br	2e3c <_dtoa_r+0x2f0>
    37fc:	188000a0 	cmpeqi	r2,r3,2
    3800:	d8000715 	stw	zero,28(sp)
    3804:	103d881e 	bne	r2,zero,2e28 <_dtoa_r+0x2dc>
    3808:	e0001115 	stw	zero,68(fp)
    380c:	000b883a 	mov	r5,zero
    3810:	e009883a 	mov	r4,fp
    3814:	00060480 	call	6048 <_Balloc>
    3818:	d8800315 	stw	r2,12(sp)
    381c:	e0801015 	stw	r2,64(fp)
    3820:	00bfffc4 	movi	r2,-1
    3824:	d8800b15 	stw	r2,44(sp)
    3828:	00800044 	movi	r2,1
    382c:	d8800715 	stw	r2,28(sp)
    3830:	00bfffc4 	movi	r2,-1
    3834:	d8001e15 	stw	zero,120(sp)
    3838:	d8800615 	stw	r2,24(sp)
    383c:	003e8f06 	br	327c <_dtoa_r+0x730>
    3840:	00800044 	movi	r2,1
    3844:	d8800915 	stw	r2,36(sp)
    3848:	a03d5c0e 	bge	r20,zero,2dbc <_dtoa_r+0x270>
    384c:	04800044 	movi	r18,1
    3850:	9405c83a 	sub	r2,r18,r16
    3854:	d8800515 	stw	r2,20(sp)
    3858:	0029883a 	mov	r20,zero
    385c:	003d5806 	br	2dc0 <_dtoa_r+0x274>
    3860:	b009883a 	mov	r4,r22
    3864:	000cc680 	call	cc68 <__floatsidf>
    3868:	a00d883a 	mov	r6,r20
    386c:	980f883a 	mov	r7,r19
    3870:	1009883a 	mov	r4,r2
    3874:	180b883a 	mov	r5,r3
    3878:	000b7e80 	call	b7e8 <__eqdf2>
    387c:	103d3e26 	beq	r2,zero,2d78 <_dtoa_r+0x22c>
    3880:	b5bfffc4 	addi	r22,r22,-1
    3884:	003d3c06 	br	2d78 <_dtoa_r+0x22c>
    3888:	00800074 	movhi	r2,1
    388c:	10bd0c04 	addi	r2,r2,-3024
    3890:	d8800315 	stw	r2,12(sp)
    3894:	003cdf06 	br	2c14 <_dtoa_r+0xc8>
    3898:	dc800817 	ldw	r18,32(sp)
    389c:	dcc00517 	ldw	r19,20(sp)
    38a0:	0021883a 	mov	r16,zero
    38a4:	003f2f06 	br	3564 <_dtoa_r+0xa18>
    38a8:	a80b883a 	mov	r5,r21
    38ac:	100d883a 	mov	r6,r2
    38b0:	e009883a 	mov	r4,fp
    38b4:	000680c0 	call	680c <__lshift>
    38b8:	102b883a 	mov	r21,r2
    38bc:	003f6306 	br	364c <_dtoa_r+0xb00>
    38c0:	00800704 	movi	r2,28
    38c4:	003f5a06 	br	3630 <_dtoa_r+0xae4>
    38c8:	01000804 	movi	r4,32
    38cc:	2089c83a 	sub	r4,r4,r2
    38d0:	d8800117 	ldw	r2,4(sp)
    38d4:	1108983a 	sll	r4,r2,r4
    38d8:	003cf306 	br	2ca8 <_dtoa_r+0x15c>
    38dc:	04000044 	movi	r16,1
    38e0:	003d4706 	br	2e00 <_dtoa_r+0x2b4>
    38e4:	b00d883a 	mov	r6,r22
    38e8:	100b883a 	mov	r5,r2
    38ec:	e009883a 	mov	r4,fp
    38f0:	00066e40 	call	66e4 <__pow5mult>
    38f4:	1025883a 	mov	r18,r2
    38f8:	d8800217 	ldw	r2,8(sp)
    38fc:	10800090 	cmplti	r2,r2,2
    3900:	10012f1e 	bne	r2,zero,3dc0 <_dtoa_r+0x1274>
    3904:	0023883a 	mov	r17,zero
    3908:	90800417 	ldw	r2,16(r18)
    390c:	10800104 	addi	r2,r2,4
    3910:	100490ba 	slli	r2,r2,2
    3914:	9085883a 	add	r2,r18,r2
    3918:	11000017 	ldw	r4,0(r2)
    391c:	000635c0 	call	635c <__hi0bits>
    3920:	00c00804 	movi	r3,32
    3924:	1885c83a 	sub	r2,r3,r2
    3928:	003f3806 	br	360c <_dtoa_r+0xac0>
    392c:	800b883a 	mov	r5,r16
    3930:	000f883a 	mov	r7,zero
    3934:	01800284 	movi	r6,10
    3938:	e009883a 	mov	r4,fp
    393c:	00061100 	call	6110 <__multadd>
    3940:	1021883a 	mov	r16,r2
    3944:	d8800b17 	ldw	r2,44(sp)
    3948:	00821b0e 	bge	zero,r2,41b8 <_dtoa_r+0x166c>
    394c:	d8800615 	stw	r2,24(sp)
    3950:	04c0b316 	blt	zero,r19,3c20 <_dtoa_r+0x10d4>
    3954:	8801341e 	bne	r17,zero,3e28 <_dtoa_r+0x12dc>
    3958:	8027883a 	mov	r19,r16
    395c:	dc400317 	ldw	r17,12(sp)
    3960:	d8c00617 	ldw	r3,24(sp)
    3964:	d8800117 	ldw	r2,4(sp)
    3968:	8dffffc4 	addi	r23,r17,-1
    396c:	b8c7883a 	add	r3,r23,r3
    3970:	d8c00615 	stw	r3,24(sp)
    3974:	d8c00217 	ldw	r3,8(sp)
    3978:	1080004c 	andi	r2,r2,1
    397c:	d8800815 	stw	r2,32(sp)
    3980:	10c4b03a 	or	r2,r2,r3
    3984:	d8800715 	stw	r2,28(sp)
    3988:	00002c06 	br	3a3c <_dtoa_r+0xef0>
    398c:	b80b883a 	mov	r5,r23
    3990:	a809883a 	mov	r4,r21
    3994:	da000515 	stw	r8,20(sp)
    3998:	00069480 	call	6948 <__mcmp>
    399c:	b80b883a 	mov	r5,r23
    39a0:	e009883a 	mov	r4,fp
    39a4:	d8800115 	stw	r2,4(sp)
    39a8:	00060ec0 	call	60ec <_Bfree>
    39ac:	d8800117 	ldw	r2,4(sp)
    39b0:	da000517 	ldw	r8,20(sp)
    39b4:	1000021e 	bne	r2,zero,39c0 <_dtoa_r+0xe74>
    39b8:	d8c00717 	ldw	r3,28(sp)
    39bc:	1801f226 	beq	r3,zero,4188 <_dtoa_r+0x163c>
    39c0:	8dc00044 	addi	r23,r17,1
    39c4:	a0010516 	blt	r20,zero,3ddc <_dtoa_r+0x1290>
    39c8:	d8c00217 	ldw	r3,8(sp)
    39cc:	a0e8b03a 	or	r20,r20,r3
    39d0:	d8c00817 	ldw	r3,32(sp)
    39d4:	1d28b03a 	or	r20,r3,r20
    39d8:	a0010026 	beq	r20,zero,3ddc <_dtoa_r+0x1290>
    39dc:	00812816 	blt	zero,r2,3e80 <_dtoa_r+0x1334>
    39e0:	d8800617 	ldw	r2,24(sp)
    39e4:	8a000005 	stb	r8,0(r17)
    39e8:	14412926 	beq	r2,r17,3e90 <_dtoa_r+0x1344>
    39ec:	a80b883a 	mov	r5,r21
    39f0:	000f883a 	mov	r7,zero
    39f4:	01800284 	movi	r6,10
    39f8:	e009883a 	mov	r4,fp
    39fc:	00061100 	call	6110 <__multadd>
    3a00:	102b883a 	mov	r21,r2
    3a04:	000f883a 	mov	r7,zero
    3a08:	01800284 	movi	r6,10
    3a0c:	800b883a 	mov	r5,r16
    3a10:	e009883a 	mov	r4,fp
    3a14:	84c02026 	beq	r16,r19,3a98 <_dtoa_r+0xf4c>
    3a18:	00061100 	call	6110 <__multadd>
    3a1c:	980b883a 	mov	r5,r19
    3a20:	000f883a 	mov	r7,zero
    3a24:	01800284 	movi	r6,10
    3a28:	e009883a 	mov	r4,fp
    3a2c:	1021883a 	mov	r16,r2
    3a30:	00061100 	call	6110 <__multadd>
    3a34:	1027883a 	mov	r19,r2
    3a38:	b823883a 	mov	r17,r23
    3a3c:	900b883a 	mov	r5,r18
    3a40:	a809883a 	mov	r4,r21
    3a44:	00029180 	call	2918 <quorem>
    3a48:	800b883a 	mov	r5,r16
    3a4c:	a809883a 	mov	r4,r21
    3a50:	102d883a 	mov	r22,r2
    3a54:	00069480 	call	6948 <__mcmp>
    3a58:	980d883a 	mov	r6,r19
    3a5c:	900b883a 	mov	r5,r18
    3a60:	e009883a 	mov	r4,fp
    3a64:	1029883a 	mov	r20,r2
    3a68:	00069a00 	call	69a0 <__mdiff>
    3a6c:	102f883a 	mov	r23,r2
    3a70:	10800317 	ldw	r2,12(r2)
    3a74:	b2000c04 	addi	r8,r22,48
    3a78:	103fc426 	beq	r2,zero,398c <_dtoa_r+0xe40>
    3a7c:	b80b883a 	mov	r5,r23
    3a80:	e009883a 	mov	r4,fp
    3a84:	da000115 	stw	r8,4(sp)
    3a88:	00060ec0 	call	60ec <_Bfree>
    3a8c:	00800044 	movi	r2,1
    3a90:	da000117 	ldw	r8,4(sp)
    3a94:	003fca06 	br	39c0 <_dtoa_r+0xe74>
    3a98:	00061100 	call	6110 <__multadd>
    3a9c:	1021883a 	mov	r16,r2
    3aa0:	1027883a 	mov	r19,r2
    3aa4:	003fe406 	br	3a38 <_dtoa_r+0xeec>
    3aa8:	d8800217 	ldw	r2,8(sp)
    3aac:	108000d0 	cmplti	r2,r2,3
    3ab0:	10004b1e 	bne	r2,zero,3be0 <_dtoa_r+0x1094>
    3ab4:	d8800617 	ldw	r2,24(sp)
    3ab8:	103e0d1e 	bne	r2,zero,32f0 <_dtoa_r+0x7a4>
    3abc:	900b883a 	mov	r5,r18
    3ac0:	e009883a 	mov	r4,fp
    3ac4:	000f883a 	mov	r7,zero
    3ac8:	01800144 	movi	r6,5
    3acc:	00061100 	call	6110 <__multadd>
    3ad0:	100b883a 	mov	r5,r2
    3ad4:	a809883a 	mov	r4,r21
    3ad8:	1025883a 	mov	r18,r2
    3adc:	00069480 	call	6948 <__mcmp>
    3ae0:	00be030e 	bge	zero,r2,32f0 <_dtoa_r+0x7a4>
    3ae4:	d8c00317 	ldw	r3,12(sp)
    3ae8:	00800c44 	movi	r2,49
    3aec:	18800005 	stb	r2,0(r3)
    3af0:	d8800417 	ldw	r2,16(sp)
    3af4:	1dc00044 	addi	r23,r3,1
    3af8:	14400044 	addi	r17,r2,1
    3afc:	900b883a 	mov	r5,r18
    3b00:	e009883a 	mov	r4,fp
    3b04:	00060ec0 	call	60ec <_Bfree>
    3b08:	88800044 	addi	r2,r17,1
    3b0c:	d8800415 	stw	r2,16(sp)
    3b10:	803f121e 	bne	r16,zero,375c <_dtoa_r+0xc10>
    3b14:	003d9f06 	br	3194 <_dtoa_r+0x648>
    3b18:	900b883a 	mov	r5,r18
    3b1c:	a809883a 	mov	r4,r21
    3b20:	00069480 	call	6948 <__mcmp>
    3b24:	103ed10e 	bge	r2,zero,366c <_dtoa_r+0xb20>
    3b28:	a80b883a 	mov	r5,r21
    3b2c:	000f883a 	mov	r7,zero
    3b30:	01800284 	movi	r6,10
    3b34:	e009883a 	mov	r4,fp
    3b38:	00061100 	call	6110 <__multadd>
    3b3c:	102b883a 	mov	r21,r2
    3b40:	d8800417 	ldw	r2,16(sp)
    3b44:	153fffc4 	addi	r20,r2,-1
    3b48:	d8800717 	ldw	r2,28(sp)
    3b4c:	103f771e 	bne	r2,zero,392c <_dtoa_r+0xde0>
    3b50:	d8800b17 	ldw	r2,44(sp)
    3b54:	0081910e 	bge	zero,r2,419c <_dtoa_r+0x1650>
    3b58:	d8800615 	stw	r2,24(sp)
    3b5c:	003eca06 	br	3688 <_dtoa_r+0xb3c>
    3b60:	d9800817 	ldw	r6,32(sp)
    3b64:	a80b883a 	mov	r5,r21
    3b68:	e009883a 	mov	r4,fp
    3b6c:	00066e40 	call	66e4 <__pow5mult>
    3b70:	102b883a 	mov	r21,r2
    3b74:	003e9a06 	br	35e0 <_dtoa_r+0xa94>
    3b78:	00800074 	movhi	r2,1
    3b7c:	1007883a 	mov	r3,r2
    3b80:	18fd1504 	addi	r3,r3,-2988
    3b84:	00800074 	movhi	r2,1
    3b88:	d8c00315 	stw	r3,12(sp)
    3b8c:	10bd15c4 	addi	r2,r2,-2985
    3b90:	003da506 	br	3228 <_dtoa_r+0x6dc>
    3b94:	d8800117 	ldw	r2,4(sp)
    3b98:	103e991e 	bne	r2,zero,3600 <_dtoa_r+0xab4>
    3b9c:	00800434 	movhi	r2,16
    3ba0:	10bfffc4 	addi	r2,r2,-1
    3ba4:	8884703a 	and	r2,r17,r2
    3ba8:	103e951e 	bne	r2,zero,3600 <_dtoa_r+0xab4>
    3bac:	8c5ffc2c 	andhi	r17,r17,32752
    3bb0:	883e9326 	beq	r17,zero,3600 <_dtoa_r+0xab4>
    3bb4:	d8800517 	ldw	r2,20(sp)
    3bb8:	a5000044 	addi	r20,r20,1
    3bbc:	04400044 	movi	r17,1
    3bc0:	10800044 	addi	r2,r2,1
    3bc4:	d8800515 	stw	r2,20(sp)
    3bc8:	003e8e06 	br	3604 <_dtoa_r+0xab8>
    3bcc:	00800044 	movi	r2,1
    3bd0:	04800044 	movi	r18,1
    3bd4:	d8800615 	stw	r2,24(sp)
    3bd8:	d8801e15 	stw	r2,120(sp)
    3bdc:	003ef406 	br	37b0 <_dtoa_r+0xc64>
    3be0:	d8800417 	ldw	r2,16(sp)
    3be4:	10800044 	addi	r2,r2,1
    3be8:	d8800415 	stw	r2,16(sp)
    3bec:	d8800717 	ldw	r2,28(sp)
    3bf0:	103f571e 	bne	r2,zero,3950 <_dtoa_r+0xe04>
    3bf4:	900b883a 	mov	r5,r18
    3bf8:	a809883a 	mov	r4,r21
    3bfc:	00029180 	call	2918 <quorem>
    3c00:	12000c04 	addi	r8,r2,48
    3c04:	d8800317 	ldw	r2,12(sp)
    3c08:	0029883a 	mov	r20,zero
    3c0c:	15c00044 	addi	r23,r2,1
    3c10:	12000005 	stb	r8,0(r2)
    3c14:	003eb006 	br	36d8 <_dtoa_r+0xb8c>
    3c18:	a005883a 	mov	r2,r20
    3c1c:	003e5506 	br	3574 <_dtoa_r+0xa28>
    3c20:	800b883a 	mov	r5,r16
    3c24:	980d883a 	mov	r6,r19
    3c28:	e009883a 	mov	r4,fp
    3c2c:	000680c0 	call	680c <__lshift>
    3c30:	1021883a 	mov	r16,r2
    3c34:	003f4706 	br	3954 <_dtoa_r+0xe08>
    3c38:	14a5c83a 	sub	r18,r2,r18
    3c3c:	003e3e06 	br	3538 <_dtoa_r+0x9ec>
    3c40:	00800074 	movhi	r2,1
    3c44:	10bd2604 	addi	r2,r2,-2920
    3c48:	11800817 	ldw	r6,32(r2)
    3c4c:	11c00917 	ldw	r7,36(r2)
    3c50:	d9000117 	ldw	r4,4(sp)
    3c54:	880b883a 	mov	r5,r17
    3c58:	da400e15 	stw	r9,56(sp)
    3c5c:	da800d15 	stw	r10,52(sp)
    3c60:	000ae840 	call	ae84 <__divdf3>
    3c64:	d8800c15 	stw	r2,48(sp)
    3c68:	1827883a 	mov	r19,r3
    3c6c:	bdc003cc 	andi	r23,r23,15
    3c70:	040000c4 	movi	r16,3
    3c74:	da800d17 	ldw	r10,52(sp)
    3c78:	da400e17 	ldw	r9,56(sp)
    3c7c:	003c9206 	br	2ec8 <_dtoa_r+0x37c>
    3c80:	d8000715 	stw	zero,28(sp)
    3c84:	003ed306 	br	37d4 <_dtoa_r+0xc88>
    3c88:	1000031e 	bne	r2,zero,3c98 <_dtoa_r+0x114c>
    3c8c:	da000117 	ldw	r8,4(sp)
    3c90:	4200004c 	andi	r8,r8,1
    3c94:	403e9b1e 	bne	r8,zero,3704 <_dtoa_r+0xbb8>
    3c98:	1805883a 	mov	r2,r3
    3c9c:	00000206 	br	3ca8 <_dtoa_r+0x115c>
    3ca0:	b8bfff83 	ldbu	r2,-2(r23)
    3ca4:	182f883a 	mov	r23,r3
    3ca8:	10803fcc 	andi	r2,r2,255
    3cac:	1080201c 	xori	r2,r2,128
    3cb0:	10bfe004 	addi	r2,r2,-128
    3cb4:	10800c18 	cmpnei	r2,r2,48
    3cb8:	b8ffffc4 	addi	r3,r23,-1
    3cbc:	103ff826 	beq	r2,zero,3ca0 <_dtoa_r+0x1154>
    3cc0:	003e9d06 	br	3738 <_dtoa_r+0xbec>
    3cc4:	d8c00a17 	ldw	r3,40(sp)
    3cc8:	1800bc26 	beq	r3,zero,3fbc <_dtoa_r+0x1470>
    3ccc:	d8c00517 	ldw	r3,20(sp)
    3cd0:	10810cc4 	addi	r2,r2,1075
    3cd4:	a0a9883a 	add	r20,r20,r2
    3cd8:	1885883a 	add	r2,r3,r2
    3cdc:	1827883a 	mov	r19,r3
    3ce0:	dc800817 	ldw	r18,32(sp)
    3ce4:	d8800515 	stw	r2,20(sp)
    3ce8:	003e1a06 	br	3554 <_dtoa_r+0xa08>
    3cec:	d8c00317 	ldw	r3,12(sp)
    3cf0:	00800c44 	movi	r2,49
    3cf4:	18800005 	stb	r2,0(r3)
    3cf8:	d8800417 	ldw	r2,16(sp)
    3cfc:	10800044 	addi	r2,r2,1
    3d00:	d8800415 	stw	r2,16(sp)
    3d04:	003e8c06 	br	3738 <_dtoa_r+0xbec>
    3d08:	8009883a 	mov	r4,r16
    3d0c:	000cc680 	call	cc68 <__floatsidf>
    3d10:	900d883a 	mov	r6,r18
    3d14:	980f883a 	mov	r7,r19
    3d18:	1009883a 	mov	r4,r2
    3d1c:	180b883a 	mov	r5,r3
    3d20:	000ba480 	call	ba48 <__muldf3>
    3d24:	000d883a 	mov	r6,zero
    3d28:	01d00734 	movhi	r7,16412
    3d2c:	1009883a 	mov	r4,r2
    3d30:	180b883a 	mov	r5,r3
    3d34:	000a4e40 	call	a4e4 <__adddf3>
    3d38:	d8800c15 	stw	r2,48(sp)
    3d3c:	00bf3034 	movhi	r2,64704
    3d40:	1885883a 	add	r2,r3,r2
    3d44:	d8800d15 	stw	r2,52(sp)
    3d48:	9009883a 	mov	r4,r18
    3d4c:	980b883a 	mov	r5,r19
    3d50:	000d883a 	mov	r6,zero
    3d54:	01d00534 	movhi	r7,16404
    3d58:	000c2280 	call	c228 <__subdf3>
    3d5c:	ddc00c17 	ldw	r23,48(sp)
    3d60:	dcc00d17 	ldw	r19,52(sp)
    3d64:	1009883a 	mov	r4,r2
    3d68:	b80d883a 	mov	r6,r23
    3d6c:	980f883a 	mov	r7,r19
    3d70:	180b883a 	mov	r5,r3
    3d74:	1025883a 	mov	r18,r2
    3d78:	1821883a 	mov	r16,r3
    3d7c:	000b8680 	call	b868 <__gedf2>
    3d80:	0080ee16 	blt	zero,r2,413c <_dtoa_r+0x15f0>
    3d84:	99e0003c 	xorhi	r7,r19,32768
    3d88:	b80d883a 	mov	r6,r23
    3d8c:	9009883a 	mov	r4,r18
    3d90:	800b883a 	mov	r5,r16
    3d94:	000b9580 	call	b958 <__ledf2>
    3d98:	103d380e 	bge	r2,zero,327c <_dtoa_r+0x730>
    3d9c:	0025883a 	mov	r18,zero
    3da0:	0021883a 	mov	r16,zero
    3da4:	003d5206 	br	32f0 <_dtoa_r+0x7a4>
    3da8:	d8800417 	ldw	r2,16(sp)
    3dac:	1000ad1e 	bne	r2,zero,4064 <_dtoa_r+0x1518>
    3db0:	dc800117 	ldw	r18,4(sp)
    3db4:	8827883a 	mov	r19,r17
    3db8:	04000084 	movi	r16,2
    3dbc:	003c5b06 	br	2f2c <_dtoa_r+0x3e0>
    3dc0:	d8800117 	ldw	r2,4(sp)
    3dc4:	103ecf1e 	bne	r2,zero,3904 <_dtoa_r+0xdb8>
    3dc8:	00800434 	movhi	r2,16
    3dcc:	10bfffc4 	addi	r2,r2,-1
    3dd0:	8884703a 	and	r2,r17,r2
    3dd4:	103f7526 	beq	r2,zero,3bac <_dtoa_r+0x1060>
    3dd8:	003eca06 	br	3904 <_dtoa_r+0xdb8>
    3ddc:	00800e0e 	bge	zero,r2,3e18 <_dtoa_r+0x12cc>
    3de0:	a80b883a 	mov	r5,r21
    3de4:	01800044 	movi	r6,1
    3de8:	e009883a 	mov	r4,fp
    3dec:	da000115 	stw	r8,4(sp)
    3df0:	000680c0 	call	680c <__lshift>
    3df4:	900b883a 	mov	r5,r18
    3df8:	1009883a 	mov	r4,r2
    3dfc:	102b883a 	mov	r21,r2
    3e00:	00069480 	call	6948 <__mcmp>
    3e04:	da000117 	ldw	r8,4(sp)
    3e08:	0080d50e 	bge	zero,r2,4160 <_dtoa_r+0x1614>
    3e0c:	42000e60 	cmpeqi	r8,r8,57
    3e10:	4000c31e 	bne	r8,zero,4120 <_dtoa_r+0x15d4>
    3e14:	b2000c44 	addi	r8,r22,49
    3e18:	8029883a 	mov	r20,r16
    3e1c:	8a000005 	stb	r8,0(r17)
    3e20:	9821883a 	mov	r16,r19
    3e24:	003e4406 	br	3738 <_dtoa_r+0xbec>
    3e28:	81400117 	ldw	r5,4(r16)
    3e2c:	e009883a 	mov	r4,fp
    3e30:	00060480 	call	6048 <_Balloc>
    3e34:	81800417 	ldw	r6,16(r16)
    3e38:	81400304 	addi	r5,r16,12
    3e3c:	11000304 	addi	r4,r2,12
    3e40:	31800084 	addi	r6,r6,2
    3e44:	300c90ba 	slli	r6,r6,2
    3e48:	1023883a 	mov	r17,r2
    3e4c:	0005d2c0 	call	5d2c <memcpy>
    3e50:	01800044 	movi	r6,1
    3e54:	880b883a 	mov	r5,r17
    3e58:	e009883a 	mov	r4,fp
    3e5c:	000680c0 	call	680c <__lshift>
    3e60:	1027883a 	mov	r19,r2
    3e64:	003ebd06 	br	395c <_dtoa_r+0xe10>
    3e68:	dd400117 	ldw	r21,4(sp)
    3e6c:	003cc906 	br	3194 <_dtoa_r+0x648>
    3e70:	d8800517 	ldw	r2,20(sp)
    3e74:	d8c00617 	ldw	r3,24(sp)
    3e78:	10e7c83a 	sub	r19,r2,r3
    3e7c:	003db506 	br	3554 <_dtoa_r+0xa08>
    3e80:	40800e58 	cmpnei	r2,r8,57
    3e84:	1000a626 	beq	r2,zero,4120 <_dtoa_r+0x15d4>
    3e88:	42000044 	addi	r8,r8,1
    3e8c:	003fe206 	br	3e18 <_dtoa_r+0x12cc>
    3e90:	8029883a 	mov	r20,r16
    3e94:	9821883a 	mov	r16,r19
    3e98:	003e0f06 	br	36d8 <_dtoa_r+0xb8c>
    3e9c:	d9000c17 	ldw	r4,48(sp)
    3ea0:	d9400d17 	ldw	r5,52(sp)
    3ea4:	da401015 	stw	r9,64(sp)
    3ea8:	000ba480 	call	ba48 <__muldf3>
    3eac:	d9000e17 	ldw	r4,56(sp)
    3eb0:	d8c00d15 	stw	r3,52(sp)
    3eb4:	da401017 	ldw	r9,64(sp)
    3eb8:	d8c00317 	ldw	r3,12(sp)
    3ebc:	d8800c15 	stw	r2,48(sp)
    3ec0:	20800058 	cmpnei	r2,r4,1
    3ec4:	1a400005 	stb	r9,0(r3)
    3ec8:	1907883a 	add	r3,r3,r4
    3ecc:	1809883a 	mov	r4,r3
    3ed0:	10001d26 	beq	r2,zero,3f48 <_dtoa_r+0x13fc>
    3ed4:	8007883a 	mov	r3,r16
    3ed8:	9005883a 	mov	r2,r18
    3edc:	dc400e15 	stw	r17,56(sp)
    3ee0:	2021883a 	mov	r16,r4
    3ee4:	000d883a 	mov	r6,zero
    3ee8:	01d00934 	movhi	r7,16420
    3eec:	1009883a 	mov	r4,r2
    3ef0:	180b883a 	mov	r5,r3
    3ef4:	000ba480 	call	ba48 <__muldf3>
    3ef8:	180b883a 	mov	r5,r3
    3efc:	1009883a 	mov	r4,r2
    3f00:	1825883a 	mov	r18,r3
    3f04:	1023883a 	mov	r17,r2
    3f08:	000cbe80 	call	cbe8 <__fixdfsi>
    3f0c:	1009883a 	mov	r4,r2
    3f10:	1027883a 	mov	r19,r2
    3f14:	000cc680 	call	cc68 <__floatsidf>
    3f18:	100d883a 	mov	r6,r2
    3f1c:	180f883a 	mov	r7,r3
    3f20:	8809883a 	mov	r4,r17
    3f24:	900b883a 	mov	r5,r18
    3f28:	bdc00044 	addi	r23,r23,1
    3f2c:	9cc00c04 	addi	r19,r19,48
    3f30:	000c2280 	call	c228 <__subdf3>
    3f34:	bcffffc5 	stb	r19,-1(r23)
    3f38:	bc3fea1e 	bne	r23,r16,3ee4 <_dtoa_r+0x1398>
    3f3c:	dc400e17 	ldw	r17,56(sp)
    3f40:	1025883a 	mov	r18,r2
    3f44:	1821883a 	mov	r16,r3
    3f48:	d9000c17 	ldw	r4,48(sp)
    3f4c:	d9400d17 	ldw	r5,52(sp)
    3f50:	000d883a 	mov	r6,zero
    3f54:	01cff834 	movhi	r7,16352
    3f58:	000a4e40 	call	a4e4 <__adddf3>
    3f5c:	100d883a 	mov	r6,r2
    3f60:	180f883a 	mov	r7,r3
    3f64:	9009883a 	mov	r4,r18
    3f68:	800b883a 	mov	r5,r16
    3f6c:	000b8680 	call	b868 <__gedf2>
    3f70:	00807516 	blt	zero,r2,4148 <_dtoa_r+0x15fc>
    3f74:	d9800c17 	ldw	r6,48(sp)
    3f78:	d9c00d17 	ldw	r7,52(sp)
    3f7c:	0009883a 	mov	r4,zero
    3f80:	014ff834 	movhi	r5,16352
    3f84:	000c2280 	call	c228 <__subdf3>
    3f88:	100d883a 	mov	r6,r2
    3f8c:	180f883a 	mov	r7,r3
    3f90:	9009883a 	mov	r4,r18
    3f94:	800b883a 	mov	r5,r16
    3f98:	000b9580 	call	b958 <__ledf2>
    3f9c:	103cb70e 	bge	r2,zero,327c <_dtoa_r+0x730>
    3fa0:	00000106 	br	3fa8 <_dtoa_r+0x145c>
    3fa4:	182f883a 	mov	r23,r3
    3fa8:	b8bfffc7 	ldb	r2,-1(r23)
    3fac:	b8ffffc4 	addi	r3,r23,-1
    3fb0:	10800c20 	cmpeqi	r2,r2,48
    3fb4:	103ffb1e 	bne	r2,zero,3fa4 <_dtoa_r+0x1458>
    3fb8:	003c7306 	br	3188 <_dtoa_r+0x63c>
    3fbc:	d8c01217 	ldw	r3,72(sp)
    3fc0:	d9000517 	ldw	r4,20(sp)
    3fc4:	00800d84 	movi	r2,54
    3fc8:	10c5c83a 	sub	r2,r2,r3
    3fcc:	a0a9883a 	add	r20,r20,r2
    3fd0:	2085883a 	add	r2,r4,r2
    3fd4:	2027883a 	mov	r19,r4
    3fd8:	dc800817 	ldw	r18,32(sp)
    3fdc:	d8800515 	stw	r2,20(sp)
    3fe0:	003d5c06 	br	3554 <_dtoa_r+0xa08>
    3fe4:	d8800617 	ldw	r2,24(sp)
    3fe8:	103f4726 	beq	r2,zero,3d08 <_dtoa_r+0x11bc>
    3fec:	ddc00b17 	ldw	r23,44(sp)
    3ff0:	05fca20e 	bge	zero,r23,327c <_dtoa_r+0x730>
    3ff4:	980b883a 	mov	r5,r19
    3ff8:	000d883a 	mov	r6,zero
    3ffc:	01d00934 	movhi	r7,16420
    4000:	9009883a 	mov	r4,r18
    4004:	000ba480 	call	ba48 <__muldf3>
    4008:	81000044 	addi	r4,r16,1
    400c:	1025883a 	mov	r18,r2
    4010:	1827883a 	mov	r19,r3
    4014:	000cc680 	call	cc68 <__floatsidf>
    4018:	900d883a 	mov	r6,r18
    401c:	980f883a 	mov	r7,r19
    4020:	1009883a 	mov	r4,r2
    4024:	180b883a 	mov	r5,r3
    4028:	000ba480 	call	ba48 <__muldf3>
    402c:	000d883a 	mov	r6,zero
    4030:	01d00734 	movhi	r7,16412
    4034:	1009883a 	mov	r4,r2
    4038:	180b883a 	mov	r5,r3
    403c:	000a4e40 	call	a4e4 <__adddf3>
    4040:	d8800c15 	stw	r2,48(sp)
    4044:	d8800417 	ldw	r2,16(sp)
    4048:	ddc00e15 	stw	r23,56(sp)
    404c:	10bfffc4 	addi	r2,r2,-1
    4050:	d8800f15 	stw	r2,60(sp)
    4054:	00bf3034 	movhi	r2,64704
    4058:	1885883a 	add	r2,r3,r2
    405c:	d8800d15 	stw	r2,52(sp)
    4060:	003bd006 	br	2fa4 <_dtoa_r+0x458>
    4064:	d8800417 	ldw	r2,16(sp)
    4068:	d9000117 	ldw	r4,4(sp)
    406c:	880b883a 	mov	r5,r17
    4070:	00afc83a 	sub	r23,zero,r2
    4074:	b88003cc 	andi	r2,r23,15
    4078:	100690fa 	slli	r3,r2,3
    407c:	00800074 	movhi	r2,1
    4080:	10bd3004 	addi	r2,r2,-2880
    4084:	10c5883a 	add	r2,r2,r3
    4088:	11800017 	ldw	r6,0(r2)
    408c:	11c00117 	ldw	r7,4(r2)
    4090:	b82fd13a 	srai	r23,r23,4
    4094:	000ba480 	call	ba48 <__muldf3>
    4098:	1025883a 	mov	r18,r2
    409c:	1827883a 	mov	r19,r3
    40a0:	b8004a26 	beq	r23,zero,41cc <_dtoa_r+0x1680>
    40a4:	02000074 	movhi	r8,1
    40a8:	04000084 	movi	r16,2
    40ac:	423d2604 	addi	r8,r8,-2920
    40b0:	dc400c15 	stw	r17,48(sp)
    40b4:	000f883a 	mov	r7,zero
    40b8:	8023883a 	mov	r17,r16
    40bc:	4021883a 	mov	r16,r8
    40c0:	b980004c 	andi	r6,r23,1
    40c4:	1009883a 	mov	r4,r2
    40c8:	b82fd07a 	srai	r23,r23,1
    40cc:	180b883a 	mov	r5,r3
    40d0:	30000526 	beq	r6,zero,40e8 <_dtoa_r+0x159c>
    40d4:	81c00117 	ldw	r7,4(r16)
    40d8:	81800017 	ldw	r6,0(r16)
    40dc:	8c400044 	addi	r17,r17,1
    40e0:	000ba480 	call	ba48 <__muldf3>
    40e4:	01c00044 	movi	r7,1
    40e8:	84000204 	addi	r16,r16,8
    40ec:	b83ff41e 	bne	r23,zero,40c0 <_dtoa_r+0x1574>
    40f0:	39c03fcc 	andi	r7,r7,255
    40f4:	8821883a 	mov	r16,r17
    40f8:	dc400c17 	ldw	r17,48(sp)
    40fc:	383b8b26 	beq	r7,zero,2f2c <_dtoa_r+0x3e0>
    4100:	1025883a 	mov	r18,r2
    4104:	1827883a 	mov	r19,r3
    4108:	003b8806 	br	2f2c <_dtoa_r+0x3e0>
    410c:	d8800417 	ldw	r2,16(sp)
    4110:	02000c44 	movi	r8,49
    4114:	10800044 	addi	r2,r2,1
    4118:	d8800415 	stw	r2,16(sp)
    411c:	003cf606 	br	34f8 <_dtoa_r+0x9ac>
    4120:	00800e44 	movi	r2,57
    4124:	8029883a 	mov	r20,r16
    4128:	88800005 	stb	r2,0(r17)
    412c:	9821883a 	mov	r16,r19
    4130:	00c00e44 	movi	r3,57
    4134:	d9400317 	ldw	r5,12(sp)
    4138:	003d7706 	br	3718 <_dtoa_r+0xbcc>
    413c:	0025883a 	mov	r18,zero
    4140:	0021883a 	mov	r16,zero
    4144:	003e6706 	br	3ae4 <_dtoa_r+0xf98>
    4148:	d8800f17 	ldw	r2,60(sp)
    414c:	ba3fffc3 	ldbu	r8,-1(r23)
    4150:	d9000317 	ldw	r4,12(sp)
    4154:	10800044 	addi	r2,r2,1
    4158:	d8800415 	stw	r2,16(sp)
    415c:	003cdf06 	br	34dc <_dtoa_r+0x990>
    4160:	103f2d1e 	bne	r2,zero,3e18 <_dtoa_r+0x12cc>
    4164:	4080004c 	andi	r2,r8,1
    4168:	103f281e 	bne	r2,zero,3e0c <_dtoa_r+0x12c0>
    416c:	003f2a06 	br	3e18 <_dtoa_r+0x12cc>
    4170:	d8800f17 	ldw	r2,60(sp)
    4174:	8811883a 	mov	r8,r17
    4178:	d9000317 	ldw	r4,12(sp)
    417c:	10800044 	addi	r2,r2,1
    4180:	d8800415 	stw	r2,16(sp)
    4184:	003cd506 	br	34dc <_dtoa_r+0x990>
    4188:	40800e60 	cmpeqi	r2,r8,57
    418c:	8dc00044 	addi	r23,r17,1
    4190:	103fe31e 	bne	r2,zero,4120 <_dtoa_r+0x15d4>
    4194:	053f1f16 	blt	zero,r20,3e14 <_dtoa_r+0x12c8>
    4198:	003f1f06 	br	3e18 <_dtoa_r+0x12cc>
    419c:	d8800217 	ldw	r2,8(sp)
    41a0:	108000c8 	cmpgei	r2,r2,3
    41a4:	103e9326 	beq	r2,zero,3bf4 <_dtoa_r+0x10a8>
    41a8:	d8800b17 	ldw	r2,44(sp)
    41ac:	dd000415 	stw	r20,16(sp)
    41b0:	d8800615 	stw	r2,24(sp)
    41b4:	003e3f06 	br	3ab4 <_dtoa_r+0xf68>
    41b8:	d8800217 	ldw	r2,8(sp)
    41bc:	108000c8 	cmpgei	r2,r2,3
    41c0:	103ff91e 	bne	r2,zero,41a8 <_dtoa_r+0x165c>
    41c4:	d8800b17 	ldw	r2,44(sp)
    41c8:	003de006 	br	394c <_dtoa_r+0xe00>
    41cc:	04000084 	movi	r16,2
    41d0:	003b5606 	br	2f2c <_dtoa_r+0x3e0>
    41d4:	d8800f17 	ldw	r2,60(sp)
    41d8:	d9000317 	ldw	r4,12(sp)
    41dc:	10800044 	addi	r2,r2,1
    41e0:	d8800415 	stw	r2,16(sp)
    41e4:	003cbd06 	br	34dc <_dtoa_r+0x990>
    41e8:	00800074 	movhi	r2,1
    41ec:	10bd1604 	addi	r2,r2,-2984
    41f0:	d8800315 	stw	r2,12(sp)
    41f4:	003a8706 	br	2c14 <_dtoa_r+0xc8>
    41f8:	000b883a 	mov	r5,zero
    41fc:	003b1b06 	br	2e6c <_dtoa_r+0x320>
    4200:	18c00120 	cmpeqi	r3,r3,4
    4204:	183d0f1e 	bne	r3,zero,3644 <_dtoa_r+0xaf8>
    4208:	00c00f04 	movi	r3,60
    420c:	1885c83a 	sub	r2,r3,r2
    4210:	003d0706 	br	3630 <_dtoa_r+0xae4>

00004214 <__sflush_r>:
    4214:	2880030b 	ldhu	r2,12(r5)
    4218:	defffb04 	addi	sp,sp,-20
    421c:	dcc00315 	stw	r19,12(sp)
    4220:	dc000015 	stw	r16,0(sp)
    4224:	dfc00415 	stw	ra,16(sp)
    4228:	dc800215 	stw	r18,8(sp)
    422c:	dc400115 	stw	r17,4(sp)
    4230:	10c0020c 	andi	r3,r2,8
    4234:	2821883a 	mov	r16,r5
    4238:	2027883a 	mov	r19,r4
    423c:	18003f1e 	bne	r3,zero,433c <__sflush_r+0x128>
    4240:	28c00117 	ldw	r3,4(r5)
    4244:	10820014 	ori	r2,r2,2048
    4248:	2880030d 	sth	r2,12(r5)
    424c:	00c0550e 	bge	zero,r3,43a4 <__sflush_r+0x190>
    4250:	82000a17 	ldw	r8,40(r16)
    4254:	40003126 	beq	r8,zero,431c <__sflush_r+0x108>
    4258:	9c400017 	ldw	r17,0(r19)
    425c:	1104000c 	andi	r4,r2,4096
    4260:	98000015 	stw	zero,0(r19)
    4264:	1007883a 	mov	r3,r2
    4268:	81400717 	ldw	r5,28(r16)
    426c:	2000521e 	bne	r4,zero,43b8 <__sflush_r+0x1a4>
    4270:	01c00044 	movi	r7,1
    4274:	000d883a 	mov	r6,zero
    4278:	9809883a 	mov	r4,r19
    427c:	403ee83a 	callr	r8
    4280:	10ffffd8 	cmpnei	r3,r2,-1
    4284:	18005826 	beq	r3,zero,43e8 <__sflush_r+0x1d4>
    4288:	80c0030b 	ldhu	r3,12(r16)
    428c:	82000a17 	ldw	r8,40(r16)
    4290:	81400717 	ldw	r5,28(r16)
    4294:	18c0010c 	andi	r3,r3,4
    4298:	18000626 	beq	r3,zero,42b4 <__sflush_r+0xa0>
    429c:	81000117 	ldw	r4,4(r16)
    42a0:	80c00c17 	ldw	r3,48(r16)
    42a4:	1105c83a 	sub	r2,r2,r4
    42a8:	18000226 	beq	r3,zero,42b4 <__sflush_r+0xa0>
    42ac:	80c00f17 	ldw	r3,60(r16)
    42b0:	10c5c83a 	sub	r2,r2,r3
    42b4:	000f883a 	mov	r7,zero
    42b8:	100d883a 	mov	r6,r2
    42bc:	9809883a 	mov	r4,r19
    42c0:	403ee83a 	callr	r8
    42c4:	10ffffd8 	cmpnei	r3,r2,-1
    42c8:	18003d1e 	bne	r3,zero,43c0 <__sflush_r+0x1ac>
    42cc:	99000017 	ldw	r4,0(r19)
    42d0:	80c0030b 	ldhu	r3,12(r16)
    42d4:	20004e26 	beq	r4,zero,4410 <__sflush_r+0x1fc>
    42d8:	21400760 	cmpeqi	r5,r4,29
    42dc:	2800021e 	bne	r5,zero,42e8 <__sflush_r+0xd4>
    42e0:	210005a0 	cmpeqi	r4,r4,22
    42e4:	20002c26 	beq	r4,zero,4398 <__sflush_r+0x184>
    42e8:	80800417 	ldw	r2,16(r16)
    42ec:	18fdffcc 	andi	r3,r3,63487
    42f0:	80c0030d 	sth	r3,12(r16)
    42f4:	80000115 	stw	zero,4(r16)
    42f8:	80800015 	stw	r2,0(r16)
    42fc:	81400c17 	ldw	r5,48(r16)
    4300:	9c400015 	stw	r17,0(r19)
    4304:	28000526 	beq	r5,zero,431c <__sflush_r+0x108>
    4308:	80801004 	addi	r2,r16,64
    430c:	28800226 	beq	r5,r2,4318 <__sflush_r+0x104>
    4310:	9809883a 	mov	r4,r19
    4314:	00049340 	call	4934 <_free_r>
    4318:	80000c15 	stw	zero,48(r16)
    431c:	0005883a 	mov	r2,zero
    4320:	dfc00417 	ldw	ra,16(sp)
    4324:	dcc00317 	ldw	r19,12(sp)
    4328:	dc800217 	ldw	r18,8(sp)
    432c:	dc400117 	ldw	r17,4(sp)
    4330:	dc000017 	ldw	r16,0(sp)
    4334:	dec00504 	addi	sp,sp,20
    4338:	f800283a 	ret
    433c:	2c800417 	ldw	r18,16(r5)
    4340:	903ff626 	beq	r18,zero,431c <__sflush_r+0x108>
    4344:	2c400017 	ldw	r17,0(r5)
    4348:	108000cc 	andi	r2,r2,3
    434c:	2c800015 	stw	r18,0(r5)
    4350:	8ca3c83a 	sub	r17,r17,r18
    4354:	1000161e 	bne	r2,zero,43b0 <__sflush_r+0x19c>
    4358:	28800517 	ldw	r2,20(r5)
    435c:	80800215 	stw	r2,8(r16)
    4360:	04400316 	blt	zero,r17,4370 <__sflush_r+0x15c>
    4364:	003fed06 	br	431c <__sflush_r+0x108>
    4368:	90a5883a 	add	r18,r18,r2
    436c:	047feb0e 	bge	zero,r17,431c <__sflush_r+0x108>
    4370:	80800917 	ldw	r2,36(r16)
    4374:	81400717 	ldw	r5,28(r16)
    4378:	880f883a 	mov	r7,r17
    437c:	900d883a 	mov	r6,r18
    4380:	9809883a 	mov	r4,r19
    4384:	103ee83a 	callr	r2
    4388:	88a3c83a 	sub	r17,r17,r2
    438c:	00bff616 	blt	zero,r2,4368 <__sflush_r+0x154>
    4390:	80c0030b 	ldhu	r3,12(r16)
    4394:	00bfffc4 	movi	r2,-1
    4398:	18c01014 	ori	r3,r3,64
    439c:	80c0030d 	sth	r3,12(r16)
    43a0:	003fdf06 	br	4320 <__sflush_r+0x10c>
    43a4:	28c00f17 	ldw	r3,60(r5)
    43a8:	00ffa916 	blt	zero,r3,4250 <__sflush_r+0x3c>
    43ac:	003fdb06 	br	431c <__sflush_r+0x108>
    43b0:	0005883a 	mov	r2,zero
    43b4:	003fe906 	br	435c <__sflush_r+0x148>
    43b8:	80801417 	ldw	r2,80(r16)
    43bc:	003fb506 	br	4294 <__sflush_r+0x80>
    43c0:	80c0030b 	ldhu	r3,12(r16)
    43c4:	81000417 	ldw	r4,16(r16)
    43c8:	80000115 	stw	zero,4(r16)
    43cc:	197dffcc 	andi	r5,r3,63487
    43d0:	8140030d 	sth	r5,12(r16)
    43d4:	81000015 	stw	r4,0(r16)
    43d8:	18c4000c 	andi	r3,r3,4096
    43dc:	183fc726 	beq	r3,zero,42fc <__sflush_r+0xe8>
    43e0:	80801415 	stw	r2,80(r16)
    43e4:	003fc506 	br	42fc <__sflush_r+0xe8>
    43e8:	98c00017 	ldw	r3,0(r19)
    43ec:	183fa626 	beq	r3,zero,4288 <__sflush_r+0x74>
    43f0:	19000760 	cmpeqi	r4,r3,29
    43f4:	20000e1e 	bne	r4,zero,4430 <__sflush_r+0x21c>
    43f8:	18c00598 	cmpnei	r3,r3,22
    43fc:	18000c26 	beq	r3,zero,4430 <__sflush_r+0x21c>
    4400:	80c0030b 	ldhu	r3,12(r16)
    4404:	18c01014 	ori	r3,r3,64
    4408:	80c0030d 	sth	r3,12(r16)
    440c:	003fc406 	br	4320 <__sflush_r+0x10c>
    4410:	81000417 	ldw	r4,16(r16)
    4414:	197dffcc 	andi	r5,r3,63487
    4418:	8140030d 	sth	r5,12(r16)
    441c:	80000115 	stw	zero,4(r16)
    4420:	81000015 	stw	r4,0(r16)
    4424:	18c4000c 	andi	r3,r3,4096
    4428:	183fb426 	beq	r3,zero,42fc <__sflush_r+0xe8>
    442c:	003fec06 	br	43e0 <__sflush_r+0x1cc>
    4430:	9c400015 	stw	r17,0(r19)
    4434:	0005883a 	mov	r2,zero
    4438:	003fb906 	br	4320 <__sflush_r+0x10c>

0000443c <_fflush_r>:
    443c:	defffd04 	addi	sp,sp,-12
    4440:	dc000115 	stw	r16,4(sp)
    4444:	dfc00215 	stw	ra,8(sp)
    4448:	2021883a 	mov	r16,r4
    444c:	20000226 	beq	r4,zero,4458 <_fflush_r+0x1c>
    4450:	20800e17 	ldw	r2,56(r4)
    4454:	10000726 	beq	r2,zero,4474 <_fflush_r+0x38>
    4458:	2880030f 	ldh	r2,12(r5)
    445c:	10000a1e 	bne	r2,zero,4488 <_fflush_r+0x4c>
    4460:	0005883a 	mov	r2,zero
    4464:	dfc00217 	ldw	ra,8(sp)
    4468:	dc000117 	ldw	r16,4(sp)
    446c:	dec00304 	addi	sp,sp,12
    4470:	f800283a 	ret
    4474:	d9400015 	stw	r5,0(sp)
    4478:	00047d00 	call	47d0 <__sinit>
    447c:	d9400017 	ldw	r5,0(sp)
    4480:	2880030f 	ldh	r2,12(r5)
    4484:	103ff626 	beq	r2,zero,4460 <_fflush_r+0x24>
    4488:	8009883a 	mov	r4,r16
    448c:	dfc00217 	ldw	ra,8(sp)
    4490:	dc000117 	ldw	r16,4(sp)
    4494:	dec00304 	addi	sp,sp,12
    4498:	00042141 	jmpi	4214 <__sflush_r>

0000449c <fflush>:
    449c:	200b883a 	mov	r5,r4
    44a0:	20000326 	beq	r4,zero,44b0 <fflush+0x14>
    44a4:	00800074 	movhi	r2,1
    44a8:	11055a17 	ldw	r4,5480(r2)
    44ac:	000443c1 	jmpi	443c <_fflush_r>
    44b0:	00800074 	movhi	r2,1
    44b4:	11055917 	ldw	r4,5476(r2)
    44b8:	01400034 	movhi	r5,0
    44bc:	29510f04 	addi	r5,r5,17468
    44c0:	00051a81 	jmpi	51a8 <_fwalk_reent>

000044c4 <__fp_lock>:
    44c4:	0005883a 	mov	r2,zero
    44c8:	f800283a 	ret

000044cc <_cleanup_r>:
    44cc:	01400074 	movhi	r5,1
    44d0:	29639a04 	addi	r5,r5,-29080
    44d4:	00051a81 	jmpi	51a8 <_fwalk_reent>

000044d8 <__sinit.part.0>:
    44d8:	00c00034 	movhi	r3,0
    44dc:	20800117 	ldw	r2,4(r4)
    44e0:	18d13304 	addi	r3,r3,17612
    44e4:	20c00f15 	stw	r3,60(r4)
    44e8:	2140bb04 	addi	r5,r4,748
    44ec:	00c000c4 	movi	r3,3
    44f0:	20c0b915 	stw	r3,740(r4)
    44f4:	2140ba15 	stw	r5,744(r4)
    44f8:	2000b815 	stw	zero,736(r4)
    44fc:	10001705 	stb	zero,92(r2)
    4500:	10001745 	stb	zero,93(r2)
    4504:	10001785 	stb	zero,94(r2)
    4508:	100017c5 	stb	zero,95(r2)
    450c:	10001805 	stb	zero,96(r2)
    4510:	10001845 	stb	zero,97(r2)
    4514:	10001885 	stb	zero,98(r2)
    4518:	100018c5 	stb	zero,99(r2)
    451c:	00c00104 	movi	r3,4
    4520:	10c00315 	stw	r3,12(r2)
    4524:	02000034 	movhi	r8,0
    4528:	20c00217 	ldw	r3,8(r4)
    452c:	01c00034 	movhi	r7,0
    4530:	01800034 	movhi	r6,0
    4534:	01400034 	movhi	r5,0
    4538:	421da004 	addi	r8,r8,30336
    453c:	39ddb704 	addi	r7,r7,30428
    4540:	319dd704 	addi	r6,r6,30556
    4544:	295dee04 	addi	r5,r5,30648
    4548:	02400074 	movhi	r9,1
    454c:	10001915 	stw	zero,100(r2)
    4550:	10000015 	stw	zero,0(r2)
    4554:	10000115 	stw	zero,4(r2)
    4558:	10000215 	stw	zero,8(r2)
    455c:	10000415 	stw	zero,16(r2)
    4560:	10000515 	stw	zero,20(r2)
    4564:	10000615 	stw	zero,24(r2)
    4568:	10800715 	stw	r2,28(r2)
    456c:	12000815 	stw	r8,32(r2)
    4570:	11c00915 	stw	r7,36(r2)
    4574:	11800a15 	stw	r6,40(r2)
    4578:	11400b15 	stw	r5,44(r2)
    457c:	4a400284 	addi	r9,r9,10
    4580:	1a400315 	stw	r9,12(r3)
    4584:	18001915 	stw	zero,100(r3)
    4588:	18000015 	stw	zero,0(r3)
    458c:	18000115 	stw	zero,4(r3)
    4590:	18000215 	stw	zero,8(r3)
    4594:	18000415 	stw	zero,16(r3)
    4598:	18001705 	stb	zero,92(r3)
    459c:	18001745 	stb	zero,93(r3)
    45a0:	18001785 	stb	zero,94(r3)
    45a4:	180017c5 	stb	zero,95(r3)
    45a8:	18001805 	stb	zero,96(r3)
    45ac:	18001845 	stb	zero,97(r3)
    45b0:	18001885 	stb	zero,98(r3)
    45b4:	180018c5 	stb	zero,99(r3)
    45b8:	20800317 	ldw	r2,12(r4)
    45bc:	024000b4 	movhi	r9,2
    45c0:	18000515 	stw	zero,20(r3)
    45c4:	18000615 	stw	zero,24(r3)
    45c8:	18c00715 	stw	r3,28(r3)
    45cc:	1a000815 	stw	r8,32(r3)
    45d0:	19c00915 	stw	r7,36(r3)
    45d4:	19800a15 	stw	r6,40(r3)
    45d8:	19400b15 	stw	r5,44(r3)
    45dc:	4a400484 	addi	r9,r9,18
    45e0:	10001915 	stw	zero,100(r2)
    45e4:	10000015 	stw	zero,0(r2)
    45e8:	10000115 	stw	zero,4(r2)
    45ec:	10000215 	stw	zero,8(r2)
    45f0:	12400315 	stw	r9,12(r2)
    45f4:	10000415 	stw	zero,16(r2)
    45f8:	10000515 	stw	zero,20(r2)
    45fc:	10000615 	stw	zero,24(r2)
    4600:	10001705 	stb	zero,92(r2)
    4604:	10001745 	stb	zero,93(r2)
    4608:	10001785 	stb	zero,94(r2)
    460c:	100017c5 	stb	zero,95(r2)
    4610:	10001805 	stb	zero,96(r2)
    4614:	10001845 	stb	zero,97(r2)
    4618:	10001885 	stb	zero,98(r2)
    461c:	100018c5 	stb	zero,99(r2)
    4620:	10800715 	stw	r2,28(r2)
    4624:	12000815 	stw	r8,32(r2)
    4628:	11c00915 	stw	r7,36(r2)
    462c:	11800a15 	stw	r6,40(r2)
    4630:	11400b15 	stw	r5,44(r2)
    4634:	00800044 	movi	r2,1
    4638:	20800e15 	stw	r2,56(r4)
    463c:	f800283a 	ret

00004640 <__fp_unlock>:
    4640:	0005883a 	mov	r2,zero
    4644:	f800283a 	ret

00004648 <__sfmoreglue>:
    4648:	defffc04 	addi	sp,sp,-16
    464c:	dc800215 	stw	r18,8(sp)
    4650:	2825883a 	mov	r18,r5
    4654:	dc000015 	stw	r16,0(sp)
    4658:	01401a04 	movi	r5,104
    465c:	2021883a 	mov	r16,r4
    4660:	913fffc4 	addi	r4,r18,-1
    4664:	dfc00315 	stw	ra,12(sp)
    4668:	dc400115 	stw	r17,4(sp)
    466c:	000a4bc0 	call	a4bc <__mulsi3>
    4670:	8009883a 	mov	r4,r16
    4674:	11401d04 	addi	r5,r2,116
    4678:	1023883a 	mov	r17,r2
    467c:	00054500 	call	5450 <_malloc_r>
    4680:	1021883a 	mov	r16,r2
    4684:	10000726 	beq	r2,zero,46a4 <__sfmoreglue+0x5c>
    4688:	11000304 	addi	r4,r2,12
    468c:	10000015 	stw	zero,0(r2)
    4690:	14800115 	stw	r18,4(r2)
    4694:	11000215 	stw	r4,8(r2)
    4698:	89801a04 	addi	r6,r17,104
    469c:	000b883a 	mov	r5,zero
    46a0:	0005f580 	call	5f58 <memset>
    46a4:	8005883a 	mov	r2,r16
    46a8:	dfc00317 	ldw	ra,12(sp)
    46ac:	dc800217 	ldw	r18,8(sp)
    46b0:	dc400117 	ldw	r17,4(sp)
    46b4:	dc000017 	ldw	r16,0(sp)
    46b8:	dec00404 	addi	sp,sp,16
    46bc:	f800283a 	ret

000046c0 <__sfp>:
    46c0:	defffd04 	addi	sp,sp,-12
    46c4:	00800074 	movhi	r2,1
    46c8:	dc000015 	stw	r16,0(sp)
    46cc:	14055917 	ldw	r16,5476(r2)
    46d0:	dc400115 	stw	r17,4(sp)
    46d4:	dfc00215 	stw	ra,8(sp)
    46d8:	80800e17 	ldw	r2,56(r16)
    46dc:	2023883a 	mov	r17,r4
    46e0:	10002b26 	beq	r2,zero,4790 <__sfp+0xd0>
    46e4:	8400b804 	addi	r16,r16,736
    46e8:	80c00117 	ldw	r3,4(r16)
    46ec:	80800217 	ldw	r2,8(r16)
    46f0:	18ffffc4 	addi	r3,r3,-1
    46f4:	1800050e 	bge	r3,zero,470c <__sfp+0x4c>
    46f8:	00002106 	br	4780 <__sfp+0xc0>
    46fc:	18ffffc4 	addi	r3,r3,-1
    4700:	193fffd8 	cmpnei	r4,r3,-1
    4704:	10801a04 	addi	r2,r2,104
    4708:	20001d26 	beq	r4,zero,4780 <__sfp+0xc0>
    470c:	1100030f 	ldh	r4,12(r2)
    4710:	203ffa1e 	bne	r4,zero,46fc <__sfp+0x3c>
    4714:	00fffff4 	movhi	r3,65535
    4718:	18c00044 	addi	r3,r3,1
    471c:	10001915 	stw	zero,100(r2)
    4720:	10000015 	stw	zero,0(r2)
    4724:	10000115 	stw	zero,4(r2)
    4728:	10000215 	stw	zero,8(r2)
    472c:	10c00315 	stw	r3,12(r2)
    4730:	10000415 	stw	zero,16(r2)
    4734:	10000515 	stw	zero,20(r2)
    4738:	10000615 	stw	zero,24(r2)
    473c:	10001705 	stb	zero,92(r2)
    4740:	10001745 	stb	zero,93(r2)
    4744:	10001785 	stb	zero,94(r2)
    4748:	100017c5 	stb	zero,95(r2)
    474c:	10001805 	stb	zero,96(r2)
    4750:	10001845 	stb	zero,97(r2)
    4754:	10001885 	stb	zero,98(r2)
    4758:	100018c5 	stb	zero,99(r2)
    475c:	10000c15 	stw	zero,48(r2)
    4760:	10000d15 	stw	zero,52(r2)
    4764:	10001115 	stw	zero,68(r2)
    4768:	10001215 	stw	zero,72(r2)
    476c:	dfc00217 	ldw	ra,8(sp)
    4770:	dc400117 	ldw	r17,4(sp)
    4774:	dc000017 	ldw	r16,0(sp)
    4778:	dec00304 	addi	sp,sp,12
    477c:	f800283a 	ret
    4780:	80800017 	ldw	r2,0(r16)
    4784:	10000526 	beq	r2,zero,479c <__sfp+0xdc>
    4788:	1021883a 	mov	r16,r2
    478c:	003fd606 	br	46e8 <__sfp+0x28>
    4790:	8009883a 	mov	r4,r16
    4794:	00044d80 	call	44d8 <__sinit.part.0>
    4798:	003fd206 	br	46e4 <__sfp+0x24>
    479c:	01400104 	movi	r5,4
    47a0:	8809883a 	mov	r4,r17
    47a4:	00046480 	call	4648 <__sfmoreglue>
    47a8:	80800015 	stw	r2,0(r16)
    47ac:	103ff61e 	bne	r2,zero,4788 <__sfp+0xc8>
    47b0:	00c00304 	movi	r3,12
    47b4:	88c00015 	stw	r3,0(r17)
    47b8:	003fec06 	br	476c <__sfp+0xac>

000047bc <_cleanup>:
    47bc:	00800074 	movhi	r2,1
    47c0:	11055917 	ldw	r4,5476(r2)
    47c4:	01400074 	movhi	r5,1
    47c8:	29639a04 	addi	r5,r5,-29080
    47cc:	00051a81 	jmpi	51a8 <_fwalk_reent>

000047d0 <__sinit>:
    47d0:	20800e17 	ldw	r2,56(r4)
    47d4:	10000126 	beq	r2,zero,47dc <__sinit+0xc>
    47d8:	f800283a 	ret
    47dc:	00044d81 	jmpi	44d8 <__sinit.part.0>

000047e0 <__sfp_lock_acquire>:
    47e0:	f800283a 	ret

000047e4 <__sfp_lock_release>:
    47e4:	f800283a 	ret

000047e8 <__sinit_lock_acquire>:
    47e8:	f800283a 	ret

000047ec <__sinit_lock_release>:
    47ec:	f800283a 	ret

000047f0 <__fp_lock_all>:
    47f0:	00800074 	movhi	r2,1
    47f4:	11055a17 	ldw	r4,5480(r2)
    47f8:	01400034 	movhi	r5,0
    47fc:	29513104 	addi	r5,r5,17604
    4800:	00051041 	jmpi	5104 <_fwalk>

00004804 <__fp_unlock_all>:
    4804:	00800074 	movhi	r2,1
    4808:	11055a17 	ldw	r4,5480(r2)
    480c:	01400034 	movhi	r5,0
    4810:	29519004 	addi	r5,r5,17984
    4814:	00051041 	jmpi	5104 <_fwalk>

00004818 <_malloc_trim_r>:
    4818:	defffb04 	addi	sp,sp,-20
    481c:	dcc00315 	stw	r19,12(sp)
    4820:	04c00074 	movhi	r19,1
    4824:	dc800215 	stw	r18,8(sp)
    4828:	dc400115 	stw	r17,4(sp)
    482c:	dc000015 	stw	r16,0(sp)
    4830:	dfc00415 	stw	ra,16(sp)
    4834:	2821883a 	mov	r16,r5
    4838:	9cff7504 	addi	r19,r19,-556
    483c:	2025883a 	mov	r18,r4
    4840:	000d3cc0 	call	d3cc <__malloc_lock>
    4844:	98800217 	ldw	r2,8(r19)
    4848:	14400117 	ldw	r17,4(r2)
    484c:	00bfff04 	movi	r2,-4
    4850:	88a2703a 	and	r17,r17,r2
    4854:	8c21c83a 	sub	r16,r17,r16
    4858:	8403fbc4 	addi	r16,r16,4079
    485c:	8020d33a 	srli	r16,r16,12
    4860:	843fffc4 	addi	r16,r16,-1
    4864:	8020933a 	slli	r16,r16,12
    4868:	80840008 	cmpgei	r2,r16,4096
    486c:	10000626 	beq	r2,zero,4888 <_malloc_trim_r+0x70>
    4870:	000b883a 	mov	r5,zero
    4874:	9009883a 	mov	r4,r18
    4878:	00076280 	call	7628 <_sbrk_r>
    487c:	98c00217 	ldw	r3,8(r19)
    4880:	1c47883a 	add	r3,r3,r17
    4884:	10c00a26 	beq	r2,r3,48b0 <_malloc_trim_r+0x98>
    4888:	9009883a 	mov	r4,r18
    488c:	000d3f00 	call	d3f0 <__malloc_unlock>
    4890:	0005883a 	mov	r2,zero
    4894:	dfc00417 	ldw	ra,16(sp)
    4898:	dcc00317 	ldw	r19,12(sp)
    489c:	dc800217 	ldw	r18,8(sp)
    48a0:	dc400117 	ldw	r17,4(sp)
    48a4:	dc000017 	ldw	r16,0(sp)
    48a8:	dec00504 	addi	sp,sp,20
    48ac:	f800283a 	ret
    48b0:	040bc83a 	sub	r5,zero,r16
    48b4:	9009883a 	mov	r4,r18
    48b8:	00076280 	call	7628 <_sbrk_r>
    48bc:	10bfffd8 	cmpnei	r2,r2,-1
    48c0:	10000d26 	beq	r2,zero,48f8 <_malloc_trim_r+0xe0>
    48c4:	00800074 	movhi	r2,1
    48c8:	108c7e17 	ldw	r2,12792(r2)
    48cc:	98c00217 	ldw	r3,8(r19)
    48d0:	8c23c83a 	sub	r17,r17,r16
    48d4:	8c400054 	ori	r17,r17,1
    48d8:	1421c83a 	sub	r16,r2,r16
    48dc:	1c400115 	stw	r17,4(r3)
    48e0:	00800074 	movhi	r2,1
    48e4:	9009883a 	mov	r4,r18
    48e8:	140c7e15 	stw	r16,12792(r2)
    48ec:	000d3f00 	call	d3f0 <__malloc_unlock>
    48f0:	00800044 	movi	r2,1
    48f4:	003fe706 	br	4894 <_malloc_trim_r+0x7c>
    48f8:	000b883a 	mov	r5,zero
    48fc:	9009883a 	mov	r4,r18
    4900:	00076280 	call	7628 <_sbrk_r>
    4904:	99000217 	ldw	r4,8(r19)
    4908:	1107c83a 	sub	r3,r2,r4
    490c:	19400410 	cmplti	r5,r3,16
    4910:	283fdd1e 	bne	r5,zero,4888 <_malloc_trim_r+0x70>
    4914:	01400074 	movhi	r5,1
    4918:	29455b17 	ldw	r5,5484(r5)
    491c:	18c00054 	ori	r3,r3,1
    4920:	20c00115 	stw	r3,4(r4)
    4924:	1145c83a 	sub	r2,r2,r5
    4928:	01400074 	movhi	r5,1
    492c:	288c7e15 	stw	r2,12792(r5)
    4930:	003fd506 	br	4888 <_malloc_trim_r+0x70>

00004934 <_free_r>:
    4934:	28004f26 	beq	r5,zero,4a74 <_free_r+0x140>
    4938:	defffd04 	addi	sp,sp,-12
    493c:	dc400115 	stw	r17,4(sp)
    4940:	dc000015 	stw	r16,0(sp)
    4944:	2023883a 	mov	r17,r4
    4948:	2821883a 	mov	r16,r5
    494c:	dfc00215 	stw	ra,8(sp)
    4950:	000d3cc0 	call	d3cc <__malloc_lock>
    4954:	81ffff17 	ldw	r7,-4(r16)
    4958:	00bfff84 	movi	r2,-2
    495c:	80fffe04 	addi	r3,r16,-8
    4960:	3884703a 	and	r2,r7,r2
    4964:	01800074 	movhi	r6,1
    4968:	1889883a 	add	r4,r3,r2
    496c:	31bf7504 	addi	r6,r6,-556
    4970:	21400117 	ldw	r5,4(r4)
    4974:	32000217 	ldw	r8,8(r6)
    4978:	027fff04 	movi	r9,-4
    497c:	2a4a703a 	and	r5,r5,r9
    4980:	41006426 	beq	r8,r4,4b14 <_free_r+0x1e0>
    4984:	21400115 	stw	r5,4(r4)
    4988:	39c0004c 	andi	r7,r7,1
    498c:	2151883a 	add	r8,r4,r5
    4990:	3800281e 	bne	r7,zero,4a34 <_free_r+0x100>
    4994:	82bffe17 	ldw	r10,-8(r16)
    4998:	42000117 	ldw	r8,4(r8)
    499c:	01c00074 	movhi	r7,1
    49a0:	1a87c83a 	sub	r3,r3,r10
    49a4:	1a400217 	ldw	r9,8(r3)
    49a8:	39ff7704 	addi	r7,r7,-548
    49ac:	1285883a 	add	r2,r2,r10
    49b0:	4200004c 	andi	r8,r8,1
    49b4:	49c04c26 	beq	r9,r7,4ae8 <_free_r+0x1b4>
    49b8:	1a800317 	ldw	r10,12(r3)
    49bc:	4a800315 	stw	r10,12(r9)
    49c0:	52400215 	stw	r9,8(r10)
    49c4:	40007126 	beq	r8,zero,4b8c <_free_r+0x258>
    49c8:	11400054 	ori	r5,r2,1
    49cc:	19400115 	stw	r5,4(r3)
    49d0:	20800015 	stw	r2,0(r4)
    49d4:	11008028 	cmpgeui	r4,r2,512
    49d8:	20002c1e 	bne	r4,zero,4a8c <_free_r+0x158>
    49dc:	1008d0fa 	srli	r4,r2,3
    49e0:	31c00117 	ldw	r7,4(r6)
    49e4:	20800044 	addi	r2,r4,1
    49e8:	200bd0ba 	srai	r5,r4,2
    49ec:	100490fa 	slli	r2,r2,3
    49f0:	01000044 	movi	r4,1
    49f4:	2148983a 	sll	r4,r4,r5
    49f8:	3085883a 	add	r2,r6,r2
    49fc:	11400017 	ldw	r5,0(r2)
    4a00:	21c8b03a 	or	r4,r4,r7
    4a04:	11fffe04 	addi	r7,r2,-8
    4a08:	19c00315 	stw	r7,12(r3)
    4a0c:	19400215 	stw	r5,8(r3)
    4a10:	31000115 	stw	r4,4(r6)
    4a14:	10c00015 	stw	r3,0(r2)
    4a18:	28c00315 	stw	r3,12(r5)
    4a1c:	8809883a 	mov	r4,r17
    4a20:	dfc00217 	ldw	ra,8(sp)
    4a24:	dc400117 	ldw	r17,4(sp)
    4a28:	dc000017 	ldw	r16,0(sp)
    4a2c:	dec00304 	addi	sp,sp,12
    4a30:	000d3f01 	jmpi	d3f0 <__malloc_unlock>
    4a34:	41c00117 	ldw	r7,4(r8)
    4a38:	39c0004c 	andi	r7,r7,1
    4a3c:	38000e1e 	bne	r7,zero,4a78 <_free_r+0x144>
    4a40:	01c00074 	movhi	r7,1
    4a44:	1145883a 	add	r2,r2,r5
    4a48:	39ff7704 	addi	r7,r7,-548
    4a4c:	21400217 	ldw	r5,8(r4)
    4a50:	12400054 	ori	r9,r2,1
    4a54:	1891883a 	add	r8,r3,r2
    4a58:	29c05226 	beq	r5,r7,4ba4 <_free_r+0x270>
    4a5c:	21000317 	ldw	r4,12(r4)
    4a60:	29000315 	stw	r4,12(r5)
    4a64:	21400215 	stw	r5,8(r4)
    4a68:	1a400115 	stw	r9,4(r3)
    4a6c:	40800015 	stw	r2,0(r8)
    4a70:	003fd806 	br	49d4 <_free_r+0xa0>
    4a74:	f800283a 	ret
    4a78:	11400054 	ori	r5,r2,1
    4a7c:	817fff15 	stw	r5,-4(r16)
    4a80:	20800015 	stw	r2,0(r4)
    4a84:	11008028 	cmpgeui	r4,r2,512
    4a88:	203fd426 	beq	r4,zero,49dc <_free_r+0xa8>
    4a8c:	1008d27a 	srli	r4,r2,9
    4a90:	21400168 	cmpgeui	r5,r4,5
    4a94:	2800341e 	bne	r5,zero,4b68 <_free_r+0x234>
    4a98:	1008d1ba 	srli	r4,r2,6
    4a9c:	21c00e44 	addi	r7,r4,57
    4aa0:	380e90fa 	slli	r7,r7,3
    4aa4:	21400e04 	addi	r5,r4,56
    4aa8:	31cf883a 	add	r7,r6,r7
    4aac:	39000017 	ldw	r4,0(r7)
    4ab0:	39fffe04 	addi	r7,r7,-8
    4ab4:	39004226 	beq	r7,r4,4bc0 <_free_r+0x28c>
    4ab8:	01bfff04 	movi	r6,-4
    4abc:	21400117 	ldw	r5,4(r4)
    4ac0:	298a703a 	and	r5,r5,r6
    4ac4:	1140022e 	bgeu	r2,r5,4ad0 <_free_r+0x19c>
    4ac8:	21000217 	ldw	r4,8(r4)
    4acc:	393ffb1e 	bne	r7,r4,4abc <_free_r+0x188>
    4ad0:	21c00317 	ldw	r7,12(r4)
    4ad4:	19c00315 	stw	r7,12(r3)
    4ad8:	19000215 	stw	r4,8(r3)
    4adc:	38c00215 	stw	r3,8(r7)
    4ae0:	20c00315 	stw	r3,12(r4)
    4ae4:	003fcd06 	br	4a1c <_free_r+0xe8>
    4ae8:	40004d1e 	bne	r8,zero,4c20 <_free_r+0x2ec>
    4aec:	21800317 	ldw	r6,12(r4)
    4af0:	21000217 	ldw	r4,8(r4)
    4af4:	2885883a 	add	r2,r5,r2
    4af8:	11400054 	ori	r5,r2,1
    4afc:	21800315 	stw	r6,12(r4)
    4b00:	31000215 	stw	r4,8(r6)
    4b04:	19400115 	stw	r5,4(r3)
    4b08:	1887883a 	add	r3,r3,r2
    4b0c:	18800015 	stw	r2,0(r3)
    4b10:	003fc206 	br	4a1c <_free_r+0xe8>
    4b14:	39c0004c 	andi	r7,r7,1
    4b18:	1145883a 	add	r2,r2,r5
    4b1c:	3800071e 	bne	r7,zero,4b3c <_free_r+0x208>
    4b20:	81fffe17 	ldw	r7,-8(r16)
    4b24:	19c7c83a 	sub	r3,r3,r7
    4b28:	19000317 	ldw	r4,12(r3)
    4b2c:	19400217 	ldw	r5,8(r3)
    4b30:	11c5883a 	add	r2,r2,r7
    4b34:	29000315 	stw	r4,12(r5)
    4b38:	21400215 	stw	r5,8(r4)
    4b3c:	01000074 	movhi	r4,1
    4b40:	11400054 	ori	r5,r2,1
    4b44:	21055c17 	ldw	r4,5488(r4)
    4b48:	19400115 	stw	r5,4(r3)
    4b4c:	30c00215 	stw	r3,8(r6)
    4b50:	113fb236 	bltu	r2,r4,4a1c <_free_r+0xe8>
    4b54:	00800074 	movhi	r2,1
    4b58:	114c7417 	ldw	r5,12752(r2)
    4b5c:	8809883a 	mov	r4,r17
    4b60:	00048180 	call	4818 <_malloc_trim_r>
    4b64:	003fad06 	br	4a1c <_free_r+0xe8>
    4b68:	21400568 	cmpgeui	r5,r4,21
    4b6c:	28000926 	beq	r5,zero,4b94 <_free_r+0x260>
    4b70:	21401568 	cmpgeui	r5,r4,85
    4b74:	2800191e 	bne	r5,zero,4bdc <_free_r+0x2a8>
    4b78:	1008d33a 	srli	r4,r2,12
    4b7c:	21c01bc4 	addi	r7,r4,111
    4b80:	21401b84 	addi	r5,r4,110
    4b84:	380e90fa 	slli	r7,r7,3
    4b88:	003fc706 	br	4aa8 <_free_r+0x174>
    4b8c:	1145883a 	add	r2,r2,r5
    4b90:	003fae06 	br	4a4c <_free_r+0x118>
    4b94:	21c01704 	addi	r7,r4,92
    4b98:	214016c4 	addi	r5,r4,91
    4b9c:	380e90fa 	slli	r7,r7,3
    4ba0:	003fc106 	br	4aa8 <_free_r+0x174>
    4ba4:	30c00515 	stw	r3,20(r6)
    4ba8:	30c00415 	stw	r3,16(r6)
    4bac:	19c00315 	stw	r7,12(r3)
    4bb0:	19c00215 	stw	r7,8(r3)
    4bb4:	1a400115 	stw	r9,4(r3)
    4bb8:	40800015 	stw	r2,0(r8)
    4bbc:	003f9706 	br	4a1c <_free_r+0xe8>
    4bc0:	280bd0ba 	srai	r5,r5,2
    4bc4:	00800044 	movi	r2,1
    4bc8:	32000117 	ldw	r8,4(r6)
    4bcc:	114a983a 	sll	r5,r2,r5
    4bd0:	2a0ab03a 	or	r5,r5,r8
    4bd4:	31400115 	stw	r5,4(r6)
    4bd8:	003fbe06 	br	4ad4 <_free_r+0x1a0>
    4bdc:	21405568 	cmpgeui	r5,r4,341
    4be0:	2800051e 	bne	r5,zero,4bf8 <_free_r+0x2c4>
    4be4:	1008d3fa 	srli	r4,r2,15
    4be8:	21c01e04 	addi	r7,r4,120
    4bec:	21401dc4 	addi	r5,r4,119
    4bf0:	380e90fa 	slli	r7,r7,3
    4bf4:	003fac06 	br	4aa8 <_free_r+0x174>
    4bf8:	21015568 	cmpgeui	r4,r4,1365
    4bfc:	2000051e 	bne	r4,zero,4c14 <_free_r+0x2e0>
    4c00:	1008d4ba 	srli	r4,r2,18
    4c04:	21c01f44 	addi	r7,r4,125
    4c08:	21401f04 	addi	r5,r4,124
    4c0c:	380e90fa 	slli	r7,r7,3
    4c10:	003fa506 	br	4aa8 <_free_r+0x174>
    4c14:	01c0fe04 	movi	r7,1016
    4c18:	01401f84 	movi	r5,126
    4c1c:	003fa206 	br	4aa8 <_free_r+0x174>
    4c20:	11400054 	ori	r5,r2,1
    4c24:	19400115 	stw	r5,4(r3)
    4c28:	20800015 	stw	r2,0(r4)
    4c2c:	003f7b06 	br	4a1c <_free_r+0xe8>

00004c30 <__sfvwrite_r>:
    4c30:	30800217 	ldw	r2,8(r6)
    4c34:	1000ca26 	beq	r2,zero,4f60 <__sfvwrite_r+0x330>
    4c38:	2880030b 	ldhu	r2,12(r5)
    4c3c:	defff304 	addi	sp,sp,-52
    4c40:	dd000715 	stw	r20,28(sp)
    4c44:	dc000315 	stw	r16,12(sp)
    4c48:	dfc00c15 	stw	ra,48(sp)
    4c4c:	df000b15 	stw	fp,44(sp)
    4c50:	ddc00a15 	stw	r23,40(sp)
    4c54:	dd800915 	stw	r22,36(sp)
    4c58:	dd400815 	stw	r21,32(sp)
    4c5c:	dcc00615 	stw	r19,24(sp)
    4c60:	dc800515 	stw	r18,20(sp)
    4c64:	dc400415 	stw	r17,16(sp)
    4c68:	d9000015 	stw	r4,0(sp)
    4c6c:	10c0020c 	andi	r3,r2,8
    4c70:	2821883a 	mov	r16,r5
    4c74:	3029883a 	mov	r20,r6
    4c78:	18002426 	beq	r3,zero,4d0c <__sfvwrite_r+0xdc>
    4c7c:	28c00417 	ldw	r3,16(r5)
    4c80:	18002226 	beq	r3,zero,4d0c <__sfvwrite_r+0xdc>
    4c84:	10c0008c 	andi	r3,r2,2
    4c88:	a4400017 	ldw	r17,0(r20)
    4c8c:	18002726 	beq	r3,zero,4d2c <__sfvwrite_r+0xfc>
    4c90:	80c00917 	ldw	r3,36(r16)
    4c94:	80800717 	ldw	r2,28(r16)
    4c98:	05600034 	movhi	r21,32768
    4c9c:	0027883a 	mov	r19,zero
    4ca0:	0025883a 	mov	r18,zero
    4ca4:	ad7f0004 	addi	r21,r21,-1024
    4ca8:	980d883a 	mov	r6,r19
    4cac:	100b883a 	mov	r5,r2
    4cb0:	d9000017 	ldw	r4,0(sp)
    4cb4:	90001126 	beq	r18,zero,4cfc <__sfvwrite_r+0xcc>
    4cb8:	900f883a 	mov	r7,r18
    4cbc:	ac80012e 	bgeu	r21,r18,4cc4 <__sfvwrite_r+0x94>
    4cc0:	a80f883a 	mov	r7,r21
    4cc4:	183ee83a 	callr	r3
    4cc8:	0080a00e 	bge	zero,r2,4f4c <__sfvwrite_r+0x31c>
    4ccc:	a0c00217 	ldw	r3,8(r20)
    4cd0:	98a7883a 	add	r19,r19,r2
    4cd4:	90a5c83a 	sub	r18,r18,r2
    4cd8:	1885c83a 	sub	r2,r3,r2
    4cdc:	a0800215 	stw	r2,8(r20)
    4ce0:	10006426 	beq	r2,zero,4e74 <__sfvwrite_r+0x244>
    4ce4:	80800717 	ldw	r2,28(r16)
    4ce8:	80c00917 	ldw	r3,36(r16)
    4cec:	980d883a 	mov	r6,r19
    4cf0:	100b883a 	mov	r5,r2
    4cf4:	d9000017 	ldw	r4,0(sp)
    4cf8:	903fef1e 	bne	r18,zero,4cb8 <__sfvwrite_r+0x88>
    4cfc:	8cc00017 	ldw	r19,0(r17)
    4d00:	8c800117 	ldw	r18,4(r17)
    4d04:	8c400204 	addi	r17,r17,8
    4d08:	003fe706 	br	4ca8 <__sfvwrite_r+0x78>
    4d0c:	d9000017 	ldw	r4,0(sp)
    4d10:	800b883a 	mov	r5,r16
    4d14:	00027b80 	call	27b8 <__swsetup_r>
    4d18:	1000f81e 	bne	r2,zero,50fc <__sfvwrite_r+0x4cc>
    4d1c:	8080030b 	ldhu	r2,12(r16)
    4d20:	a4400017 	ldw	r17,0(r20)
    4d24:	10c0008c 	andi	r3,r2,2
    4d28:	183fd91e 	bne	r3,zero,4c90 <__sfvwrite_r+0x60>
    4d2c:	10c0004c 	andi	r3,r2,1
    4d30:	84800217 	ldw	r18,8(r16)
    4d34:	87000017 	ldw	fp,0(r16)
    4d38:	18008b1e 	bne	r3,zero,4f68 <__sfvwrite_r+0x338>
    4d3c:	00e00034 	movhi	r3,32768
    4d40:	18ffff84 	addi	r3,r3,-2
    4d44:	01200034 	movhi	r4,32768
    4d48:	d8c00115 	stw	r3,4(sp)
    4d4c:	20ffffc4 	addi	r3,r4,-1
    4d50:	002d883a 	mov	r22,zero
    4d54:	002f883a 	mov	r23,zero
    4d58:	d8c00215 	stw	r3,8(sp)
    4d5c:	b8004126 	beq	r23,zero,4e64 <__sfvwrite_r+0x234>
    4d60:	1100800c 	andi	r4,r2,512
    4d64:	20009126 	beq	r4,zero,4fac <__sfvwrite_r+0x37c>
    4d68:	902b883a 	mov	r21,r18
    4d6c:	bc80b836 	bltu	r23,r18,5050 <__sfvwrite_r+0x420>
    4d70:	1101200c 	andi	r4,r2,1152
    4d74:	20002626 	beq	r4,zero,4e10 <__sfvwrite_r+0x1e0>
    4d78:	84800517 	ldw	r18,20(r16)
    4d7c:	81400417 	ldw	r5,16(r16)
    4d80:	b9000044 	addi	r4,r23,1
    4d84:	948d883a 	add	r6,r18,r18
    4d88:	348d883a 	add	r6,r6,r18
    4d8c:	3024d7fa 	srli	r18,r6,31
    4d90:	e167c83a 	sub	r19,fp,r5
    4d94:	24c9883a 	add	r4,r4,r19
    4d98:	91a5883a 	add	r18,r18,r6
    4d9c:	9025d07a 	srai	r18,r18,1
    4da0:	900d883a 	mov	r6,r18
    4da4:	9100022e 	bgeu	r18,r4,4db0 <__sfvwrite_r+0x180>
    4da8:	2025883a 	mov	r18,r4
    4dac:	200d883a 	mov	r6,r4
    4db0:	1081000c 	andi	r2,r2,1024
    4db4:	1000bf26 	beq	r2,zero,50b4 <__sfvwrite_r+0x484>
    4db8:	d9000017 	ldw	r4,0(sp)
    4dbc:	300b883a 	mov	r5,r6
    4dc0:	00054500 	call	5450 <_malloc_r>
    4dc4:	1000c826 	beq	r2,zero,50e8 <__sfvwrite_r+0x4b8>
    4dc8:	81400417 	ldw	r5,16(r16)
    4dcc:	980d883a 	mov	r6,r19
    4dd0:	1009883a 	mov	r4,r2
    4dd4:	0005d2c0 	call	5d2c <memcpy>
    4dd8:	100f883a 	mov	r7,r2
    4ddc:	8080030b 	ldhu	r2,12(r16)
    4de0:	00fedfc4 	movi	r3,-1153
    4de4:	10c4703a 	and	r2,r2,r3
    4de8:	10802014 	ori	r2,r2,128
    4dec:	8080030d 	sth	r2,12(r16)
    4df0:	94c5c83a 	sub	r2,r18,r19
    4df4:	3cf9883a 	add	fp,r7,r19
    4df8:	84800515 	stw	r18,20(r16)
    4dfc:	81c00415 	stw	r7,16(r16)
    4e00:	87000015 	stw	fp,0(r16)
    4e04:	b825883a 	mov	r18,r23
    4e08:	80800215 	stw	r2,8(r16)
    4e0c:	b82b883a 	mov	r21,r23
    4e10:	a80d883a 	mov	r6,r21
    4e14:	b00b883a 	mov	r5,r22
    4e18:	e009883a 	mov	r4,fp
    4e1c:	0005e2c0 	call	5e2c <memmove>
    4e20:	80800217 	ldw	r2,8(r16)
    4e24:	81800017 	ldw	r6,0(r16)
    4e28:	b827883a 	mov	r19,r23
    4e2c:	14a5c83a 	sub	r18,r2,r18
    4e30:	354d883a 	add	r6,r6,r21
    4e34:	84800215 	stw	r18,8(r16)
    4e38:	81800015 	stw	r6,0(r16)
    4e3c:	002f883a 	mov	r23,zero
    4e40:	a0800217 	ldw	r2,8(r20)
    4e44:	b4ed883a 	add	r22,r22,r19
    4e48:	14e7c83a 	sub	r19,r2,r19
    4e4c:	a4c00215 	stw	r19,8(r20)
    4e50:	98000826 	beq	r19,zero,4e74 <__sfvwrite_r+0x244>
    4e54:	8080030b 	ldhu	r2,12(r16)
    4e58:	84800217 	ldw	r18,8(r16)
    4e5c:	87000017 	ldw	fp,0(r16)
    4e60:	b83fbf1e 	bne	r23,zero,4d60 <__sfvwrite_r+0x130>
    4e64:	8d800017 	ldw	r22,0(r17)
    4e68:	8dc00117 	ldw	r23,4(r17)
    4e6c:	8c400204 	addi	r17,r17,8
    4e70:	003fba06 	br	4d5c <__sfvwrite_r+0x12c>
    4e74:	0005883a 	mov	r2,zero
    4e78:	dfc00c17 	ldw	ra,48(sp)
    4e7c:	df000b17 	ldw	fp,44(sp)
    4e80:	ddc00a17 	ldw	r23,40(sp)
    4e84:	dd800917 	ldw	r22,36(sp)
    4e88:	dd400817 	ldw	r21,32(sp)
    4e8c:	dd000717 	ldw	r20,28(sp)
    4e90:	dcc00617 	ldw	r19,24(sp)
    4e94:	dc800517 	ldw	r18,20(sp)
    4e98:	dc400417 	ldw	r17,16(sp)
    4e9c:	dc000317 	ldw	r16,12(sp)
    4ea0:	dec00d04 	addi	sp,sp,52
    4ea4:	f800283a 	ret
    4ea8:	b1c07116 	blt	r22,r7,5070 <__sfvwrite_r+0x440>
    4eac:	80800917 	ldw	r2,36(r16)
    4eb0:	81400717 	ldw	r5,28(r16)
    4eb4:	d9000017 	ldw	r4,0(sp)
    4eb8:	b80d883a 	mov	r6,r23
    4ebc:	103ee83a 	callr	r2
    4ec0:	1025883a 	mov	r18,r2
    4ec4:	0080210e 	bge	zero,r2,4f4c <__sfvwrite_r+0x31c>
    4ec8:	acabc83a 	sub	r21,r21,r18
    4ecc:	a8006326 	beq	r21,zero,505c <__sfvwrite_r+0x42c>
    4ed0:	00800044 	movi	r2,1
    4ed4:	a0c00217 	ldw	r3,8(r20)
    4ed8:	bcaf883a 	add	r23,r23,r18
    4edc:	9ca7c83a 	sub	r19,r19,r18
    4ee0:	1ca5c83a 	sub	r18,r3,r18
    4ee4:	a4800215 	stw	r18,8(r20)
    4ee8:	903fe226 	beq	r18,zero,4e74 <__sfvwrite_r+0x244>
    4eec:	84800217 	ldw	r18,8(r16)
    4ef0:	87000017 	ldw	fp,0(r16)
    4ef4:	98002126 	beq	r19,zero,4f7c <__sfvwrite_r+0x34c>
    4ef8:	10002426 	beq	r2,zero,4f8c <__sfvwrite_r+0x35c>
    4efc:	a805883a 	mov	r2,r21
    4f00:	982d883a 	mov	r22,r19
    4f04:	14c0012e 	bgeu	r2,r19,4f0c <__sfvwrite_r+0x2dc>
    4f08:	102d883a 	mov	r22,r2
    4f0c:	80800417 	ldw	r2,16(r16)
    4f10:	81c00517 	ldw	r7,20(r16)
    4f14:	173fe42e 	bgeu	r2,fp,4ea8 <__sfvwrite_r+0x278>
    4f18:	3ca5883a 	add	r18,r7,r18
    4f1c:	95bfe20e 	bge	r18,r22,4ea8 <__sfvwrite_r+0x278>
    4f20:	b80b883a 	mov	r5,r23
    4f24:	e009883a 	mov	r4,fp
    4f28:	900d883a 	mov	r6,r18
    4f2c:	0005e2c0 	call	5e2c <memmove>
    4f30:	80800017 	ldw	r2,0(r16)
    4f34:	d9000017 	ldw	r4,0(sp)
    4f38:	800b883a 	mov	r5,r16
    4f3c:	1485883a 	add	r2,r2,r18
    4f40:	80800015 	stw	r2,0(r16)
    4f44:	000443c0 	call	443c <_fflush_r>
    4f48:	103fdf26 	beq	r2,zero,4ec8 <__sfvwrite_r+0x298>
    4f4c:	8080030b 	ldhu	r2,12(r16)
    4f50:	10801014 	ori	r2,r2,64
    4f54:	8080030d 	sth	r2,12(r16)
    4f58:	00bfffc4 	movi	r2,-1
    4f5c:	003fc606 	br	4e78 <__sfvwrite_r+0x248>
    4f60:	0005883a 	mov	r2,zero
    4f64:	f800283a 	ret
    4f68:	0027883a 	mov	r19,zero
    4f6c:	002b883a 	mov	r21,zero
    4f70:	0005883a 	mov	r2,zero
    4f74:	002f883a 	mov	r23,zero
    4f78:	983fdf1e 	bne	r19,zero,4ef8 <__sfvwrite_r+0x2c8>
    4f7c:	8cc00117 	ldw	r19,4(r17)
    4f80:	8dc00017 	ldw	r23,0(r17)
    4f84:	8c400204 	addi	r17,r17,8
    4f88:	983ffc26 	beq	r19,zero,4f7c <__sfvwrite_r+0x34c>
    4f8c:	980d883a 	mov	r6,r19
    4f90:	01400284 	movi	r5,10
    4f94:	b809883a 	mov	r4,r23
    4f98:	0005c440 	call	5c44 <memchr>
    4f9c:	10004226 	beq	r2,zero,50a8 <__sfvwrite_r+0x478>
    4fa0:	10800044 	addi	r2,r2,1
    4fa4:	15ebc83a 	sub	r21,r2,r23
    4fa8:	003fd406 	br	4efc <__sfvwrite_r+0x2cc>
    4fac:	80800417 	ldw	r2,16(r16)
    4fb0:	17001436 	bltu	r2,fp,5004 <__sfvwrite_r+0x3d4>
    4fb4:	84c00517 	ldw	r19,20(r16)
    4fb8:	bcc01236 	bltu	r23,r19,5004 <__sfvwrite_r+0x3d4>
    4fbc:	d8800117 	ldw	r2,4(sp)
    4fc0:	15c0372e 	bgeu	r2,r23,50a0 <__sfvwrite_r+0x470>
    4fc4:	d9000217 	ldw	r4,8(sp)
    4fc8:	980b883a 	mov	r5,r19
    4fcc:	000a3040 	call	a304 <__divsi3>
    4fd0:	980b883a 	mov	r5,r19
    4fd4:	1009883a 	mov	r4,r2
    4fd8:	000a4bc0 	call	a4bc <__mulsi3>
    4fdc:	81400717 	ldw	r5,28(r16)
    4fe0:	82800917 	ldw	r10,36(r16)
    4fe4:	d9000017 	ldw	r4,0(sp)
    4fe8:	100f883a 	mov	r7,r2
    4fec:	b00d883a 	mov	r6,r22
    4ff0:	503ee83a 	callr	r10
    4ff4:	00bfd50e 	bge	zero,r2,4f4c <__sfvwrite_r+0x31c>
    4ff8:	1027883a 	mov	r19,r2
    4ffc:	bcefc83a 	sub	r23,r23,r19
    5000:	003f8f06 	br	4e40 <__sfvwrite_r+0x210>
    5004:	9027883a 	mov	r19,r18
    5008:	bc80012e 	bgeu	r23,r18,5010 <__sfvwrite_r+0x3e0>
    500c:	b827883a 	mov	r19,r23
    5010:	e009883a 	mov	r4,fp
    5014:	980d883a 	mov	r6,r19
    5018:	b00b883a 	mov	r5,r22
    501c:	0005e2c0 	call	5e2c <memmove>
    5020:	80800217 	ldw	r2,8(r16)
    5024:	81000017 	ldw	r4,0(r16)
    5028:	14c5c83a 	sub	r2,r2,r19
    502c:	24c9883a 	add	r4,r4,r19
    5030:	80800215 	stw	r2,8(r16)
    5034:	81000015 	stw	r4,0(r16)
    5038:	103ff01e 	bne	r2,zero,4ffc <__sfvwrite_r+0x3cc>
    503c:	d9000017 	ldw	r4,0(sp)
    5040:	800b883a 	mov	r5,r16
    5044:	000443c0 	call	443c <_fflush_r>
    5048:	103fec26 	beq	r2,zero,4ffc <__sfvwrite_r+0x3cc>
    504c:	003fbf06 	br	4f4c <__sfvwrite_r+0x31c>
    5050:	b825883a 	mov	r18,r23
    5054:	b82b883a 	mov	r21,r23
    5058:	003f6d06 	br	4e10 <__sfvwrite_r+0x1e0>
    505c:	d9000017 	ldw	r4,0(sp)
    5060:	800b883a 	mov	r5,r16
    5064:	000443c0 	call	443c <_fflush_r>
    5068:	103f9a26 	beq	r2,zero,4ed4 <__sfvwrite_r+0x2a4>
    506c:	003fb706 	br	4f4c <__sfvwrite_r+0x31c>
    5070:	b00d883a 	mov	r6,r22
    5074:	b80b883a 	mov	r5,r23
    5078:	e009883a 	mov	r4,fp
    507c:	0005e2c0 	call	5e2c <memmove>
    5080:	80c00217 	ldw	r3,8(r16)
    5084:	80800017 	ldw	r2,0(r16)
    5088:	b025883a 	mov	r18,r22
    508c:	1d87c83a 	sub	r3,r3,r22
    5090:	15ad883a 	add	r22,r2,r22
    5094:	80c00215 	stw	r3,8(r16)
    5098:	85800015 	stw	r22,0(r16)
    509c:	003f8a06 	br	4ec8 <__sfvwrite_r+0x298>
    50a0:	b809883a 	mov	r4,r23
    50a4:	003fc806 	br	4fc8 <__sfvwrite_r+0x398>
    50a8:	98800044 	addi	r2,r19,1
    50ac:	102b883a 	mov	r21,r2
    50b0:	003f9306 	br	4f00 <__sfvwrite_r+0x2d0>
    50b4:	d9000017 	ldw	r4,0(sp)
    50b8:	0006ffc0 	call	6ffc <_realloc_r>
    50bc:	100f883a 	mov	r7,r2
    50c0:	103f4b1e 	bne	r2,zero,4df0 <__sfvwrite_r+0x1c0>
    50c4:	dc400017 	ldw	r17,0(sp)
    50c8:	81400417 	ldw	r5,16(r16)
    50cc:	8809883a 	mov	r4,r17
    50d0:	00049340 	call	4934 <_free_r>
    50d4:	8080030b 	ldhu	r2,12(r16)
    50d8:	00c00304 	movi	r3,12
    50dc:	88c00015 	stw	r3,0(r17)
    50e0:	10bfdfcc 	andi	r2,r2,65407
    50e4:	003f9a06 	br	4f50 <__sfvwrite_r+0x320>
    50e8:	d8c00017 	ldw	r3,0(sp)
    50ec:	00800304 	movi	r2,12
    50f0:	18800015 	stw	r2,0(r3)
    50f4:	8080030b 	ldhu	r2,12(r16)
    50f8:	003f9506 	br	4f50 <__sfvwrite_r+0x320>
    50fc:	00bfffc4 	movi	r2,-1
    5100:	003f5d06 	br	4e78 <__sfvwrite_r+0x248>

00005104 <_fwalk>:
    5104:	defffa04 	addi	sp,sp,-24
    5108:	dc800215 	stw	r18,8(sp)
    510c:	dfc00515 	stw	ra,20(sp)
    5110:	dd000415 	stw	r20,16(sp)
    5114:	dcc00315 	stw	r19,12(sp)
    5118:	dc400115 	stw	r17,4(sp)
    511c:	dc000015 	stw	r16,0(sp)
    5120:	2480b804 	addi	r18,r4,736
    5124:	90001e26 	beq	r18,zero,51a0 <_fwalk+0x9c>
    5128:	2827883a 	mov	r19,r5
    512c:	0029883a 	mov	r20,zero
    5130:	94400117 	ldw	r17,4(r18)
    5134:	94000217 	ldw	r16,8(r18)
    5138:	8c7fffc4 	addi	r17,r17,-1
    513c:	88000d16 	blt	r17,zero,5174 <_fwalk+0x70>
    5140:	8080030b 	ldhu	r2,12(r16)
    5144:	8c7fffc4 	addi	r17,r17,-1
    5148:	108000b0 	cmpltui	r2,r2,2
    514c:	1000061e 	bne	r2,zero,5168 <_fwalk+0x64>
    5150:	8080038f 	ldh	r2,14(r16)
    5154:	8009883a 	mov	r4,r16
    5158:	10bfffe0 	cmpeqi	r2,r2,-1
    515c:	1000021e 	bne	r2,zero,5168 <_fwalk+0x64>
    5160:	983ee83a 	callr	r19
    5164:	a0a8b03a 	or	r20,r20,r2
    5168:	88bfffd8 	cmpnei	r2,r17,-1
    516c:	84001a04 	addi	r16,r16,104
    5170:	103ff31e 	bne	r2,zero,5140 <_fwalk+0x3c>
    5174:	94800017 	ldw	r18,0(r18)
    5178:	903fed1e 	bne	r18,zero,5130 <_fwalk+0x2c>
    517c:	a005883a 	mov	r2,r20
    5180:	dfc00517 	ldw	ra,20(sp)
    5184:	dd000417 	ldw	r20,16(sp)
    5188:	dcc00317 	ldw	r19,12(sp)
    518c:	dc800217 	ldw	r18,8(sp)
    5190:	dc400117 	ldw	r17,4(sp)
    5194:	dc000017 	ldw	r16,0(sp)
    5198:	dec00604 	addi	sp,sp,24
    519c:	f800283a 	ret
    51a0:	0029883a 	mov	r20,zero
    51a4:	003ff506 	br	517c <_fwalk+0x78>

000051a8 <_fwalk_reent>:
    51a8:	defff904 	addi	sp,sp,-28
    51ac:	dc800215 	stw	r18,8(sp)
    51b0:	dfc00615 	stw	ra,24(sp)
    51b4:	dd400515 	stw	r21,20(sp)
    51b8:	dd000415 	stw	r20,16(sp)
    51bc:	dcc00315 	stw	r19,12(sp)
    51c0:	dc400115 	stw	r17,4(sp)
    51c4:	dc000015 	stw	r16,0(sp)
    51c8:	2480b804 	addi	r18,r4,736
    51cc:	90002126 	beq	r18,zero,5254 <_fwalk_reent+0xac>
    51d0:	2829883a 	mov	r20,r5
    51d4:	2027883a 	mov	r19,r4
    51d8:	002b883a 	mov	r21,zero
    51dc:	94400117 	ldw	r17,4(r18)
    51e0:	94000217 	ldw	r16,8(r18)
    51e4:	8c7fffc4 	addi	r17,r17,-1
    51e8:	88000e16 	blt	r17,zero,5224 <_fwalk_reent+0x7c>
    51ec:	8080030b 	ldhu	r2,12(r16)
    51f0:	8c7fffc4 	addi	r17,r17,-1
    51f4:	108000b0 	cmpltui	r2,r2,2
    51f8:	1000071e 	bne	r2,zero,5218 <_fwalk_reent+0x70>
    51fc:	8080038f 	ldh	r2,14(r16)
    5200:	800b883a 	mov	r5,r16
    5204:	9809883a 	mov	r4,r19
    5208:	10bfffe0 	cmpeqi	r2,r2,-1
    520c:	1000021e 	bne	r2,zero,5218 <_fwalk_reent+0x70>
    5210:	a03ee83a 	callr	r20
    5214:	a8aab03a 	or	r21,r21,r2
    5218:	88bfffd8 	cmpnei	r2,r17,-1
    521c:	84001a04 	addi	r16,r16,104
    5220:	103ff21e 	bne	r2,zero,51ec <_fwalk_reent+0x44>
    5224:	94800017 	ldw	r18,0(r18)
    5228:	903fec1e 	bne	r18,zero,51dc <_fwalk_reent+0x34>
    522c:	a805883a 	mov	r2,r21
    5230:	dfc00617 	ldw	ra,24(sp)
    5234:	dd400517 	ldw	r21,20(sp)
    5238:	dd000417 	ldw	r20,16(sp)
    523c:	dcc00317 	ldw	r19,12(sp)
    5240:	dc800217 	ldw	r18,8(sp)
    5244:	dc400117 	ldw	r17,4(sp)
    5248:	dc000017 	ldw	r16,0(sp)
    524c:	dec00704 	addi	sp,sp,28
    5250:	f800283a 	ret
    5254:	002b883a 	mov	r21,zero
    5258:	003ff406 	br	522c <_fwalk_reent+0x84>

0000525c <__localeconv_l>:
    525c:	20803c04 	addi	r2,r4,240
    5260:	f800283a 	ret

00005264 <_localeconv_r>:
    5264:	00800074 	movhi	r2,1
    5268:	1080b304 	addi	r2,r2,716
    526c:	f800283a 	ret

00005270 <localeconv>:
    5270:	00800074 	movhi	r2,1
    5274:	1080b304 	addi	r2,r2,716
    5278:	f800283a 	ret

0000527c <__swhatbuf_r>:
    527c:	deffea04 	addi	sp,sp,-88
    5280:	dc001215 	stw	r16,72(sp)
    5284:	2821883a 	mov	r16,r5
    5288:	2940038f 	ldh	r5,14(r5)
    528c:	dc801415 	stw	r18,80(sp)
    5290:	dc401315 	stw	r17,76(sp)
    5294:	dfc01515 	stw	ra,84(sp)
    5298:	3023883a 	mov	r17,r6
    529c:	3825883a 	mov	r18,r7
    52a0:	28001016 	blt	r5,zero,52e4 <__swhatbuf_r+0x68>
    52a4:	d80d883a 	mov	r6,sp
    52a8:	00091600 	call	9160 <_fstat_r>
    52ac:	10000d16 	blt	r2,zero,52e4 <__swhatbuf_r+0x68>
    52b0:	d8c00117 	ldw	r3,4(sp)
    52b4:	00820004 	movi	r2,2048
    52b8:	18fc000c 	andi	r3,r3,61440
    52bc:	18c80020 	cmpeqi	r3,r3,8192
    52c0:	90c00015 	stw	r3,0(r18)
    52c4:	00c10004 	movi	r3,1024
    52c8:	88c00015 	stw	r3,0(r17)
    52cc:	dfc01517 	ldw	ra,84(sp)
    52d0:	dc801417 	ldw	r18,80(sp)
    52d4:	dc401317 	ldw	r17,76(sp)
    52d8:	dc001217 	ldw	r16,72(sp)
    52dc:	dec01604 	addi	sp,sp,88
    52e0:	f800283a 	ret
    52e4:	8080030b 	ldhu	r2,12(r16)
    52e8:	90000015 	stw	zero,0(r18)
    52ec:	1080200c 	andi	r2,r2,128
    52f0:	10000426 	beq	r2,zero,5304 <__swhatbuf_r+0x88>
    52f4:	00801004 	movi	r2,64
    52f8:	88800015 	stw	r2,0(r17)
    52fc:	0005883a 	mov	r2,zero
    5300:	003ff206 	br	52cc <__swhatbuf_r+0x50>
    5304:	00810004 	movi	r2,1024
    5308:	88800015 	stw	r2,0(r17)
    530c:	0005883a 	mov	r2,zero
    5310:	003fee06 	br	52cc <__swhatbuf_r+0x50>

00005314 <__smakebuf_r>:
    5314:	28c0030b 	ldhu	r3,12(r5)
    5318:	defffa04 	addi	sp,sp,-24
    531c:	dc000215 	stw	r16,8(sp)
    5320:	dfc00515 	stw	ra,20(sp)
    5324:	dc800415 	stw	r18,16(sp)
    5328:	dc400315 	stw	r17,12(sp)
    532c:	18c0008c 	andi	r3,r3,2
    5330:	2821883a 	mov	r16,r5
    5334:	18000b26 	beq	r3,zero,5364 <__smakebuf_r+0x50>
    5338:	28c010c4 	addi	r3,r5,67
    533c:	28c00015 	stw	r3,0(r5)
    5340:	28c00415 	stw	r3,16(r5)
    5344:	00c00044 	movi	r3,1
    5348:	28c00515 	stw	r3,20(r5)
    534c:	dfc00517 	ldw	ra,20(sp)
    5350:	dc800417 	ldw	r18,16(sp)
    5354:	dc400317 	ldw	r17,12(sp)
    5358:	dc000217 	ldw	r16,8(sp)
    535c:	dec00604 	addi	sp,sp,24
    5360:	f800283a 	ret
    5364:	d9c00104 	addi	r7,sp,4
    5368:	d80d883a 	mov	r6,sp
    536c:	2023883a 	mov	r17,r4
    5370:	000527c0 	call	527c <__swhatbuf_r>
    5374:	1025883a 	mov	r18,r2
    5378:	d8800117 	ldw	r2,4(sp)
    537c:	1000131e 	bne	r2,zero,53cc <__smakebuf_r+0xb8>
    5380:	d9400017 	ldw	r5,0(sp)
    5384:	8809883a 	mov	r4,r17
    5388:	00054500 	call	5450 <_malloc_r>
    538c:	10001c26 	beq	r2,zero,5400 <__smakebuf_r+0xec>
    5390:	01000034 	movhi	r4,0
    5394:	21113304 	addi	r4,r4,17612
    5398:	80c0030b 	ldhu	r3,12(r16)
    539c:	89000f15 	stw	r4,60(r17)
    53a0:	80800015 	stw	r2,0(r16)
    53a4:	80800415 	stw	r2,16(r16)
    53a8:	d8800017 	ldw	r2,0(sp)
    53ac:	d9400117 	ldw	r5,4(sp)
    53b0:	18c02014 	ori	r3,r3,128
    53b4:	80c0030d 	sth	r3,12(r16)
    53b8:	80800515 	stw	r2,20(r16)
    53bc:	28001c1e 	bne	r5,zero,5430 <__smakebuf_r+0x11c>
    53c0:	90c6b03a 	or	r3,r18,r3
    53c4:	80c0030d 	sth	r3,12(r16)
    53c8:	003fe006 	br	534c <__smakebuf_r+0x38>
    53cc:	8140038f 	ldh	r5,14(r16)
    53d0:	8809883a 	mov	r4,r17
    53d4:	00091c00 	call	91c0 <_isatty_r>
    53d8:	103fe926 	beq	r2,zero,5380 <__smakebuf_r+0x6c>
    53dc:	8080030b 	ldhu	r2,12(r16)
    53e0:	80c010c4 	addi	r3,r16,67
    53e4:	80c00015 	stw	r3,0(r16)
    53e8:	10800054 	ori	r2,r2,1
    53ec:	8080030d 	sth	r2,12(r16)
    53f0:	00800044 	movi	r2,1
    53f4:	80c00415 	stw	r3,16(r16)
    53f8:	80800515 	stw	r2,20(r16)
    53fc:	003fe006 	br	5380 <__smakebuf_r+0x6c>
    5400:	8080030b 	ldhu	r2,12(r16)
    5404:	10c0800c 	andi	r3,r2,512
    5408:	183fd01e 	bne	r3,zero,534c <__smakebuf_r+0x38>
    540c:	10bfff0c 	andi	r2,r2,65532
    5410:	10800094 	ori	r2,r2,2
    5414:	80c010c4 	addi	r3,r16,67
    5418:	8080030d 	sth	r2,12(r16)
    541c:	00800044 	movi	r2,1
    5420:	80c00015 	stw	r3,0(r16)
    5424:	80c00415 	stw	r3,16(r16)
    5428:	80800515 	stw	r2,20(r16)
    542c:	003fc706 	br	534c <__smakebuf_r+0x38>
    5430:	8140038f 	ldh	r5,14(r16)
    5434:	8809883a 	mov	r4,r17
    5438:	00091c00 	call	91c0 <_isatty_r>
    543c:	80c0030b 	ldhu	r3,12(r16)
    5440:	103fdf26 	beq	r2,zero,53c0 <__smakebuf_r+0xac>
    5444:	18ffff0c 	andi	r3,r3,65532
    5448:	18c00054 	ori	r3,r3,1
    544c:	003fdc06 	br	53c0 <__smakebuf_r+0xac>

00005450 <_malloc_r>:
    5450:	defff604 	addi	sp,sp,-40
    5454:	dc400115 	stw	r17,4(sp)
    5458:	2c4002c4 	addi	r17,r5,11
    545c:	dc800215 	stw	r18,8(sp)
    5460:	dfc00915 	stw	ra,36(sp)
    5464:	df000815 	stw	fp,32(sp)
    5468:	ddc00715 	stw	r23,28(sp)
    546c:	dd800615 	stw	r22,24(sp)
    5470:	dd400515 	stw	r21,20(sp)
    5474:	dd000415 	stw	r20,16(sp)
    5478:	dcc00315 	stw	r19,12(sp)
    547c:	dc000015 	stw	r16,0(sp)
    5480:	888005e8 	cmpgeui	r2,r17,23
    5484:	2025883a 	mov	r18,r4
    5488:	10001b1e 	bne	r2,zero,54f8 <_malloc_r+0xa8>
    548c:	29400468 	cmpgeui	r5,r5,17
    5490:	2800951e 	bne	r5,zero,56e8 <_malloc_r+0x298>
    5494:	000d3cc0 	call	d3cc <__malloc_lock>
    5498:	04400404 	movi	r17,16
    549c:	00800604 	movi	r2,24
    54a0:	01800084 	movi	r6,2
    54a4:	04c00074 	movhi	r19,1
    54a8:	9cff7504 	addi	r19,r19,-556
    54ac:	9885883a 	add	r2,r19,r2
    54b0:	14000117 	ldw	r16,4(r2)
    54b4:	10fffe04 	addi	r3,r2,-8
    54b8:	80c09e26 	beq	r16,r3,5734 <_malloc_r+0x2e4>
    54bc:	80800117 	ldw	r2,4(r16)
    54c0:	81000317 	ldw	r4,12(r16)
    54c4:	00ffff04 	movi	r3,-4
    54c8:	10c4703a 	and	r2,r2,r3
    54cc:	81400217 	ldw	r5,8(r16)
    54d0:	8085883a 	add	r2,r16,r2
    54d4:	10c00117 	ldw	r3,4(r2)
    54d8:	29000315 	stw	r4,12(r5)
    54dc:	21400215 	stw	r5,8(r4)
    54e0:	18c00054 	ori	r3,r3,1
    54e4:	10c00115 	stw	r3,4(r2)
    54e8:	9009883a 	mov	r4,r18
    54ec:	000d3f00 	call	d3f0 <__malloc_unlock>
    54f0:	80800204 	addi	r2,r16,8
    54f4:	00007f06 	br	56f4 <_malloc_r+0x2a4>
    54f8:	00bffe04 	movi	r2,-8
    54fc:	88a2703a 	and	r17,r17,r2
    5500:	88007916 	blt	r17,zero,56e8 <_malloc_r+0x298>
    5504:	89407836 	bltu	r17,r5,56e8 <_malloc_r+0x298>
    5508:	000d3cc0 	call	d3cc <__malloc_lock>
    550c:	88807e28 	cmpgeui	r2,r17,504
    5510:	10013326 	beq	r2,zero,59e0 <_malloc_r+0x590>
    5514:	8804d27a 	srli	r2,r17,9
    5518:	10008226 	beq	r2,zero,5724 <_malloc_r+0x2d4>
    551c:	10c00168 	cmpgeui	r3,r2,5
    5520:	1801151e 	bne	r3,zero,5978 <_malloc_r+0x528>
    5524:	8804d1ba 	srli	r2,r17,6
    5528:	11800e44 	addi	r6,r2,57
    552c:	300a90fa 	slli	r5,r6,3
    5530:	12000e04 	addi	r8,r2,56
    5534:	04c00074 	movhi	r19,1
    5538:	9cff7504 	addi	r19,r19,-556
    553c:	994b883a 	add	r5,r19,r5
    5540:	2c000117 	ldw	r16,4(r5)
    5544:	297ffe04 	addi	r5,r5,-8
    5548:	2c001126 	beq	r5,r16,5590 <_malloc_r+0x140>
    554c:	80800117 	ldw	r2,4(r16)
    5550:	00ffff04 	movi	r3,-4
    5554:	10c4703a 	and	r2,r2,r3
    5558:	1447c83a 	sub	r3,r2,r17
    555c:	19000408 	cmpgei	r4,r3,16
    5560:	2000e81e 	bne	r4,zero,5904 <_malloc_r+0x4b4>
    5564:	1800e90e 	bge	r3,zero,590c <_malloc_r+0x4bc>
    5568:	01ffff04 	movi	r7,-4
    556c:	00000606 	br	5588 <_malloc_r+0x138>
    5570:	80800117 	ldw	r2,4(r16)
    5574:	11c4703a 	and	r2,r2,r7
    5578:	1447c83a 	sub	r3,r2,r17
    557c:	19000408 	cmpgei	r4,r3,16
    5580:	2000e01e 	bne	r4,zero,5904 <_malloc_r+0x4b4>
    5584:	1800e10e 	bge	r3,zero,590c <_malloc_r+0x4bc>
    5588:	84000317 	ldw	r16,12(r16)
    558c:	2c3ff81e 	bne	r5,r16,5570 <_malloc_r+0x120>
    5590:	9c000417 	ldw	r16,16(r19)
    5594:	02000074 	movhi	r8,1
    5598:	423f7704 	addi	r8,r8,-548
    559c:	82006c26 	beq	r16,r8,5750 <_malloc_r+0x300>
    55a0:	80c00117 	ldw	r3,4(r16)
    55a4:	00bfff04 	movi	r2,-4
    55a8:	1884703a 	and	r2,r3,r2
    55ac:	1447c83a 	sub	r3,r2,r17
    55b0:	19000410 	cmplti	r4,r3,16
    55b4:	20011526 	beq	r4,zero,5a0c <_malloc_r+0x5bc>
    55b8:	9a000515 	stw	r8,20(r19)
    55bc:	9a000415 	stw	r8,16(r19)
    55c0:	18010a0e 	bge	r3,zero,59ec <_malloc_r+0x59c>
    55c4:	10c08028 	cmpgeui	r3,r2,512
    55c8:	1800d21e 	bne	r3,zero,5914 <_malloc_r+0x4c4>
    55cc:	1004d0fa 	srli	r2,r2,3
    55d0:	99400117 	ldw	r5,4(r19)
    55d4:	10c00044 	addi	r3,r2,1
    55d8:	1009d0ba 	srai	r4,r2,2
    55dc:	180690fa 	slli	r3,r3,3
    55e0:	00800044 	movi	r2,1
    55e4:	1104983a 	sll	r2,r2,r4
    55e8:	98c7883a 	add	r3,r19,r3
    55ec:	19000017 	ldw	r4,0(r3)
    55f0:	1144b03a 	or	r2,r2,r5
    55f4:	197ffe04 	addi	r5,r3,-8
    55f8:	81400315 	stw	r5,12(r16)
    55fc:	81000215 	stw	r4,8(r16)
    5600:	98800115 	stw	r2,4(r19)
    5604:	1c000015 	stw	r16,0(r3)
    5608:	24000315 	stw	r16,12(r4)
    560c:	3007d0ba 	srai	r3,r6,2
    5610:	01000044 	movi	r4,1
    5614:	20c8983a 	sll	r4,r4,r3
    5618:	11005236 	bltu	r2,r4,5764 <_malloc_r+0x314>
    561c:	2086703a 	and	r3,r4,r2
    5620:	18000a1e 	bne	r3,zero,564c <_malloc_r+0x1fc>
    5624:	00ffff04 	movi	r3,-4
    5628:	2109883a 	add	r4,r4,r4
    562c:	30cc703a 	and	r6,r6,r3
    5630:	2086703a 	and	r3,r4,r2
    5634:	31800104 	addi	r6,r6,4
    5638:	1800041e 	bne	r3,zero,564c <_malloc_r+0x1fc>
    563c:	2109883a 	add	r4,r4,r4
    5640:	2086703a 	and	r3,r4,r2
    5644:	31800104 	addi	r6,r6,4
    5648:	183ffc26 	beq	r3,zero,563c <_malloc_r+0x1ec>
    564c:	027fff04 	movi	r9,-4
    5650:	301490fa 	slli	r10,r6,3
    5654:	3017883a 	mov	r11,r6
    5658:	9a95883a 	add	r10,r19,r10
    565c:	500f883a 	mov	r7,r10
    5660:	3c000317 	ldw	r16,12(r7)
    5664:	3c00cd26 	beq	r7,r16,599c <_malloc_r+0x54c>
    5668:	80800117 	ldw	r2,4(r16)
    566c:	1244703a 	and	r2,r2,r9
    5670:	1447c83a 	sub	r3,r2,r17
    5674:	19400408 	cmpgei	r5,r3,16
    5678:	2800081e 	bne	r5,zero,569c <_malloc_r+0x24c>
    567c:	1800cc0e 	bge	r3,zero,59b0 <_malloc_r+0x560>
    5680:	84000317 	ldw	r16,12(r16)
    5684:	3c00c526 	beq	r7,r16,599c <_malloc_r+0x54c>
    5688:	80800117 	ldw	r2,4(r16)
    568c:	1244703a 	and	r2,r2,r9
    5690:	1447c83a 	sub	r3,r2,r17
    5694:	19400410 	cmplti	r5,r3,16
    5698:	283ff81e 	bne	r5,zero,567c <_malloc_r+0x22c>
    569c:	81000317 	ldw	r4,12(r16)
    56a0:	81400217 	ldw	r5,8(r16)
    56a4:	89800054 	ori	r6,r17,1
    56a8:	81800115 	stw	r6,4(r16)
    56ac:	29000315 	stw	r4,12(r5)
    56b0:	21400215 	stw	r5,8(r4)
    56b4:	8463883a 	add	r17,r16,r17
    56b8:	9c400515 	stw	r17,20(r19)
    56bc:	9c400415 	stw	r17,16(r19)
    56c0:	19000054 	ori	r4,r3,1
    56c4:	89000115 	stw	r4,4(r17)
    56c8:	8085883a 	add	r2,r16,r2
    56cc:	8a000315 	stw	r8,12(r17)
    56d0:	8a000215 	stw	r8,8(r17)
    56d4:	10c00015 	stw	r3,0(r2)
    56d8:	9009883a 	mov	r4,r18
    56dc:	000d3f00 	call	d3f0 <__malloc_unlock>
    56e0:	80800204 	addi	r2,r16,8
    56e4:	00000306 	br	56f4 <_malloc_r+0x2a4>
    56e8:	00800304 	movi	r2,12
    56ec:	90800015 	stw	r2,0(r18)
    56f0:	0005883a 	mov	r2,zero
    56f4:	dfc00917 	ldw	ra,36(sp)
    56f8:	df000817 	ldw	fp,32(sp)
    56fc:	ddc00717 	ldw	r23,28(sp)
    5700:	dd800617 	ldw	r22,24(sp)
    5704:	dd400517 	ldw	r21,20(sp)
    5708:	dd000417 	ldw	r20,16(sp)
    570c:	dcc00317 	ldw	r19,12(sp)
    5710:	dc800217 	ldw	r18,8(sp)
    5714:	dc400117 	ldw	r17,4(sp)
    5718:	dc000017 	ldw	r16,0(sp)
    571c:	dec00a04 	addi	sp,sp,40
    5720:	f800283a 	ret
    5724:	01408004 	movi	r5,512
    5728:	01801004 	movi	r6,64
    572c:	02000fc4 	movi	r8,63
    5730:	003f8006 	br	5534 <_malloc_r+0xe4>
    5734:	14000317 	ldw	r16,12(r2)
    5738:	31800084 	addi	r6,r6,2
    573c:	143f5f1e 	bne	r2,r16,54bc <_malloc_r+0x6c>
    5740:	9c000417 	ldw	r16,16(r19)
    5744:	02000074 	movhi	r8,1
    5748:	423f7704 	addi	r8,r8,-548
    574c:	823f941e 	bne	r16,r8,55a0 <_malloc_r+0x150>
    5750:	3007d0ba 	srai	r3,r6,2
    5754:	01000044 	movi	r4,1
    5758:	98800117 	ldw	r2,4(r19)
    575c:	20c8983a 	sll	r4,r4,r3
    5760:	113fae2e 	bgeu	r2,r4,561c <_malloc_r+0x1cc>
    5764:	9c000217 	ldw	r16,8(r19)
    5768:	00bfff04 	movi	r2,-4
    576c:	85000117 	ldw	r20,4(r16)
    5770:	a0ac703a 	and	r22,r20,r2
    5774:	b4400336 	bltu	r22,r17,5784 <_malloc_r+0x334>
    5778:	b445c83a 	sub	r2,r22,r17
    577c:	10c00408 	cmpgei	r3,r2,16
    5780:	1800561e 	bne	r3,zero,58dc <_malloc_r+0x48c>
    5784:	00800074 	movhi	r2,1
    5788:	10855b17 	ldw	r2,5484(r2)
    578c:	00c00074 	movhi	r3,1
    5790:	1d0c7417 	ldw	r20,12752(r3)
    5794:	10bfffd8 	cmpnei	r2,r2,-1
    5798:	85ab883a 	add	r21,r16,r22
    579c:	8d29883a 	add	r20,r17,r20
    57a0:	1000c826 	beq	r2,zero,5ac4 <_malloc_r+0x674>
    57a4:	a50403c4 	addi	r20,r20,4111
    57a8:	00bc0004 	movi	r2,-4096
    57ac:	a0a8703a 	and	r20,r20,r2
    57b0:	a00b883a 	mov	r5,r20
    57b4:	9009883a 	mov	r4,r18
    57b8:	00076280 	call	7628 <_sbrk_r>
    57bc:	102f883a 	mov	r23,r2
    57c0:	10bfffd8 	cmpnei	r2,r2,-1
    57c4:	10009a26 	beq	r2,zero,5a30 <_malloc_r+0x5e0>
    57c8:	bd409836 	bltu	r23,r21,5a2c <_malloc_r+0x5dc>
    57cc:	00800074 	movhi	r2,1
    57d0:	108c7e17 	ldw	r2,12792(r2)
    57d4:	00c00074 	movhi	r3,1
    57d8:	a085883a 	add	r2,r20,r2
    57dc:	188c7e15 	stw	r2,12792(r3)
    57e0:	1007883a 	mov	r3,r2
    57e4:	adc0dd26 	beq	r21,r23,5b5c <_malloc_r+0x70c>
    57e8:	00800074 	movhi	r2,1
    57ec:	10855b17 	ldw	r2,5484(r2)
    57f0:	10bfffd8 	cmpnei	r2,r2,-1
    57f4:	1000e026 	beq	r2,zero,5b78 <_malloc_r+0x728>
    57f8:	bd6bc83a 	sub	r21,r23,r21
    57fc:	a8c7883a 	add	r3,r21,r3
    5800:	00800074 	movhi	r2,1
    5804:	10cc7e15 	stw	r3,12792(r2)
    5808:	bf0001cc 	andi	fp,r23,7
    580c:	e000b626 	beq	fp,zero,5ae8 <_malloc_r+0x698>
    5810:	bf2fc83a 	sub	r23,r23,fp
    5814:	bdc00204 	addi	r23,r23,8
    5818:	00840204 	movi	r2,4104
    581c:	1705c83a 	sub	r2,r2,fp
    5820:	bd29883a 	add	r20,r23,r20
    5824:	1505c83a 	sub	r2,r2,r20
    5828:	1543ffcc 	andi	r21,r2,4095
    582c:	a80b883a 	mov	r5,r21
    5830:	9009883a 	mov	r4,r18
    5834:	00076280 	call	7628 <_sbrk_r>
    5838:	10ffffe0 	cmpeqi	r3,r2,-1
    583c:	1800e41e 	bne	r3,zero,5bd0 <_malloc_r+0x780>
    5840:	15c5c83a 	sub	r2,r2,r23
    5844:	1569883a 	add	r20,r2,r21
    5848:	00800074 	movhi	r2,1
    584c:	108c7e17 	ldw	r2,12792(r2)
    5850:	9dc00215 	stw	r23,8(r19)
    5854:	a5000054 	ori	r20,r20,1
    5858:	a885883a 	add	r2,r21,r2
    585c:	00c00074 	movhi	r3,1
    5860:	188c7e15 	stw	r2,12792(r3)
    5864:	bd000115 	stw	r20,4(r23)
    5868:	84c0c626 	beq	r16,r19,5b84 <_malloc_r+0x734>
    586c:	b0c00428 	cmpgeui	r3,r22,16
    5870:	1800c626 	beq	r3,zero,5b8c <_malloc_r+0x73c>
    5874:	81000117 	ldw	r4,4(r16)
    5878:	017ffe04 	movi	r5,-8
    587c:	b0fffd04 	addi	r3,r22,-12
    5880:	1946703a 	and	r3,r3,r5
    5884:	2100004c 	andi	r4,r4,1
    5888:	20c8b03a 	or	r4,r4,r3
    588c:	81000115 	stw	r4,4(r16)
    5890:	01400144 	movi	r5,5
    5894:	80c9883a 	add	r4,r16,r3
    5898:	21400115 	stw	r5,4(r4)
    589c:	21400215 	stw	r5,8(r4)
    58a0:	18c00428 	cmpgeui	r3,r3,16
    58a4:	1800cf1e 	bne	r3,zero,5be4 <_malloc_r+0x794>
    58a8:	bd000117 	ldw	r20,4(r23)
    58ac:	b821883a 	mov	r16,r23
    58b0:	00c00074 	movhi	r3,1
    58b4:	18cc7317 	ldw	r3,12748(r3)
    58b8:	1880022e 	bgeu	r3,r2,58c4 <_malloc_r+0x474>
    58bc:	00c00074 	movhi	r3,1
    58c0:	188c7315 	stw	r2,12748(r3)
    58c4:	00c00074 	movhi	r3,1
    58c8:	18cc7217 	ldw	r3,12744(r3)
    58cc:	18805a2e 	bgeu	r3,r2,5a38 <_malloc_r+0x5e8>
    58d0:	00c00074 	movhi	r3,1
    58d4:	188c7215 	stw	r2,12744(r3)
    58d8:	00005706 	br	5a38 <_malloc_r+0x5e8>
    58dc:	88c00054 	ori	r3,r17,1
    58e0:	80c00115 	stw	r3,4(r16)
    58e4:	8463883a 	add	r17,r16,r17
    58e8:	10800054 	ori	r2,r2,1
    58ec:	9c400215 	stw	r17,8(r19)
    58f0:	88800115 	stw	r2,4(r17)
    58f4:	9009883a 	mov	r4,r18
    58f8:	000d3f00 	call	d3f0 <__malloc_unlock>
    58fc:	80800204 	addi	r2,r16,8
    5900:	003f7c06 	br	56f4 <_malloc_r+0x2a4>
    5904:	400d883a 	mov	r6,r8
    5908:	003f2106 	br	5590 <_malloc_r+0x140>
    590c:	81000317 	ldw	r4,12(r16)
    5910:	003eee06 	br	54cc <_malloc_r+0x7c>
    5914:	1006d27a 	srli	r3,r2,9
    5918:	19000168 	cmpgeui	r4,r3,5
    591c:	20003e26 	beq	r4,zero,5a18 <_malloc_r+0x5c8>
    5920:	19000568 	cmpgeui	r4,r3,21
    5924:	20007a1e 	bne	r4,zero,5b10 <_malloc_r+0x6c0>
    5928:	19401704 	addi	r5,r3,92
    592c:	280a90fa 	slli	r5,r5,3
    5930:	190016c4 	addi	r4,r3,91
    5934:	994b883a 	add	r5,r19,r5
    5938:	28c00017 	ldw	r3,0(r5)
    593c:	297ffe04 	addi	r5,r5,-8
    5940:	28c06226 	beq	r5,r3,5acc <_malloc_r+0x67c>
    5944:	01ffff04 	movi	r7,-4
    5948:	19000117 	ldw	r4,4(r3)
    594c:	21c8703a 	and	r4,r4,r7
    5950:	1100022e 	bgeu	r2,r4,595c <_malloc_r+0x50c>
    5954:	18c00217 	ldw	r3,8(r3)
    5958:	28fffb1e 	bne	r5,r3,5948 <_malloc_r+0x4f8>
    595c:	19400317 	ldw	r5,12(r3)
    5960:	98800117 	ldw	r2,4(r19)
    5964:	81400315 	stw	r5,12(r16)
    5968:	80c00215 	stw	r3,8(r16)
    596c:	2c000215 	stw	r16,8(r5)
    5970:	1c000315 	stw	r16,12(r3)
    5974:	003f2506 	br	560c <_malloc_r+0x1bc>
    5978:	10c00568 	cmpgeui	r3,r2,21
    597c:	18003826 	beq	r3,zero,5a60 <_malloc_r+0x610>
    5980:	10c01568 	cmpgeui	r3,r2,85
    5984:	1800691e 	bne	r3,zero,5b2c <_malloc_r+0x6dc>
    5988:	8804d33a 	srli	r2,r17,12
    598c:	11801bc4 	addi	r6,r2,111
    5990:	12001b84 	addi	r8,r2,110
    5994:	300a90fa 	slli	r5,r6,3
    5998:	003ee606 	br	5534 <_malloc_r+0xe4>
    599c:	5ac00044 	addi	r11,r11,1
    59a0:	588000cc 	andi	r2,r11,3
    59a4:	39c00204 	addi	r7,r7,8
    59a8:	103f2d1e 	bne	r2,zero,5660 <_malloc_r+0x210>
    59ac:	00003306 	br	5a7c <_malloc_r+0x62c>
    59b0:	8085883a 	add	r2,r16,r2
    59b4:	10c00117 	ldw	r3,4(r2)
    59b8:	81000317 	ldw	r4,12(r16)
    59bc:	81400217 	ldw	r5,8(r16)
    59c0:	18c00054 	ori	r3,r3,1
    59c4:	10c00115 	stw	r3,4(r2)
    59c8:	29000315 	stw	r4,12(r5)
    59cc:	21400215 	stw	r5,8(r4)
    59d0:	9009883a 	mov	r4,r18
    59d4:	000d3f00 	call	d3f0 <__malloc_unlock>
    59d8:	80800204 	addi	r2,r16,8
    59dc:	003f4506 	br	56f4 <_malloc_r+0x2a4>
    59e0:	880cd0fa 	srli	r6,r17,3
    59e4:	88800204 	addi	r2,r17,8
    59e8:	003eae06 	br	54a4 <_malloc_r+0x54>
    59ec:	8085883a 	add	r2,r16,r2
    59f0:	10c00117 	ldw	r3,4(r2)
    59f4:	9009883a 	mov	r4,r18
    59f8:	18c00054 	ori	r3,r3,1
    59fc:	10c00115 	stw	r3,4(r2)
    5a00:	000d3f00 	call	d3f0 <__malloc_unlock>
    5a04:	80800204 	addi	r2,r16,8
    5a08:	003f3a06 	br	56f4 <_malloc_r+0x2a4>
    5a0c:	89000054 	ori	r4,r17,1
    5a10:	81000115 	stw	r4,4(r16)
    5a14:	003f2706 	br	56b4 <_malloc_r+0x264>
    5a18:	1006d1ba 	srli	r3,r2,6
    5a1c:	19400e44 	addi	r5,r3,57
    5a20:	19000e04 	addi	r4,r3,56
    5a24:	280a90fa 	slli	r5,r5,3
    5a28:	003fc206 	br	5934 <_malloc_r+0x4e4>
    5a2c:	84c04626 	beq	r16,r19,5b48 <_malloc_r+0x6f8>
    5a30:	9c000217 	ldw	r16,8(r19)
    5a34:	85000117 	ldw	r20,4(r16)
    5a38:	00bfff04 	movi	r2,-4
    5a3c:	a0a8703a 	and	r20,r20,r2
    5a40:	a445c83a 	sub	r2,r20,r17
    5a44:	a4400236 	bltu	r20,r17,5a50 <_malloc_r+0x600>
    5a48:	10c00408 	cmpgei	r3,r2,16
    5a4c:	183fa31e 	bne	r3,zero,58dc <_malloc_r+0x48c>
    5a50:	9009883a 	mov	r4,r18
    5a54:	000d3f00 	call	d3f0 <__malloc_unlock>
    5a58:	0005883a 	mov	r2,zero
    5a5c:	003f2506 	br	56f4 <_malloc_r+0x2a4>
    5a60:	11801704 	addi	r6,r2,92
    5a64:	120016c4 	addi	r8,r2,91
    5a68:	300a90fa 	slli	r5,r6,3
    5a6c:	003eb106 	br	5534 <_malloc_r+0xe4>
    5a70:	50800217 	ldw	r2,8(r10)
    5a74:	31bfffc4 	addi	r6,r6,-1
    5a78:	1280701e 	bne	r2,r10,5c3c <_malloc_r+0x7ec>
    5a7c:	308000cc 	andi	r2,r6,3
    5a80:	52bffe04 	addi	r10,r10,-8
    5a84:	103ffa1e 	bne	r2,zero,5a70 <_malloc_r+0x620>
    5a88:	98c00117 	ldw	r3,4(r19)
    5a8c:	0104303a 	nor	r2,zero,r4
    5a90:	10c4703a 	and	r2,r2,r3
    5a94:	98800115 	stw	r2,4(r19)
    5a98:	2109883a 	add	r4,r4,r4
    5a9c:	113f3136 	bltu	r2,r4,5764 <_malloc_r+0x314>
    5aa0:	203f3026 	beq	r4,zero,5764 <_malloc_r+0x314>
    5aa4:	2086703a 	and	r3,r4,r2
    5aa8:	1800041e 	bne	r3,zero,5abc <_malloc_r+0x66c>
    5aac:	2109883a 	add	r4,r4,r4
    5ab0:	2086703a 	and	r3,r4,r2
    5ab4:	5ac00104 	addi	r11,r11,4
    5ab8:	183ffc26 	beq	r3,zero,5aac <_malloc_r+0x65c>
    5abc:	580d883a 	mov	r6,r11
    5ac0:	003ee306 	br	5650 <_malloc_r+0x200>
    5ac4:	a5000404 	addi	r20,r20,16
    5ac8:	003f3906 	br	57b0 <_malloc_r+0x360>
    5acc:	2009d0ba 	srai	r4,r4,2
    5ad0:	00800044 	movi	r2,1
    5ad4:	99c00117 	ldw	r7,4(r19)
    5ad8:	1104983a 	sll	r2,r2,r4
    5adc:	11c4b03a 	or	r2,r2,r7
    5ae0:	98800115 	stw	r2,4(r19)
    5ae4:	003f9f06 	br	5964 <_malloc_r+0x514>
    5ae8:	bd05883a 	add	r2,r23,r20
    5aec:	0085c83a 	sub	r2,zero,r2
    5af0:	1543ffcc 	andi	r21,r2,4095
    5af4:	a80b883a 	mov	r5,r21
    5af8:	9009883a 	mov	r4,r18
    5afc:	00076280 	call	7628 <_sbrk_r>
    5b00:	10ffffe0 	cmpeqi	r3,r2,-1
    5b04:	183f4e26 	beq	r3,zero,5840 <_malloc_r+0x3f0>
    5b08:	002b883a 	mov	r21,zero
    5b0c:	003f4e06 	br	5848 <_malloc_r+0x3f8>
    5b10:	19001568 	cmpgeui	r4,r3,85
    5b14:	2000201e 	bne	r4,zero,5b98 <_malloc_r+0x748>
    5b18:	1006d33a 	srli	r3,r2,12
    5b1c:	19401bc4 	addi	r5,r3,111
    5b20:	19001b84 	addi	r4,r3,110
    5b24:	280a90fa 	slli	r5,r5,3
    5b28:	003f8206 	br	5934 <_malloc_r+0x4e4>
    5b2c:	10c05568 	cmpgeui	r3,r2,341
    5b30:	1800201e 	bne	r3,zero,5bb4 <_malloc_r+0x764>
    5b34:	8804d3fa 	srli	r2,r17,15
    5b38:	11801e04 	addi	r6,r2,120
    5b3c:	12001dc4 	addi	r8,r2,119
    5b40:	300a90fa 	slli	r5,r6,3
    5b44:	003e7b06 	br	5534 <_malloc_r+0xe4>
    5b48:	00800074 	movhi	r2,1
    5b4c:	10cc7e17 	ldw	r3,12792(r2)
    5b50:	a0c7883a 	add	r3,r20,r3
    5b54:	10cc7e15 	stw	r3,12792(r2)
    5b58:	003f2306 	br	57e8 <_malloc_r+0x398>
    5b5c:	a903ffcc 	andi	r4,r21,4095
    5b60:	203f211e 	bne	r4,zero,57e8 <_malloc_r+0x398>
    5b64:	9c000217 	ldw	r16,8(r19)
    5b68:	b529883a 	add	r20,r22,r20
    5b6c:	a5000054 	ori	r20,r20,1
    5b70:	85000115 	stw	r20,4(r16)
    5b74:	003f4e06 	br	58b0 <_malloc_r+0x460>
    5b78:	00800074 	movhi	r2,1
    5b7c:	15c55b15 	stw	r23,5484(r2)
    5b80:	003f2106 	br	5808 <_malloc_r+0x3b8>
    5b84:	b821883a 	mov	r16,r23
    5b88:	003f4906 	br	58b0 <_malloc_r+0x460>
    5b8c:	00800044 	movi	r2,1
    5b90:	b8800115 	stw	r2,4(r23)
    5b94:	003fae06 	br	5a50 <_malloc_r+0x600>
    5b98:	19005568 	cmpgeui	r4,r3,341
    5b9c:	2000191e 	bne	r4,zero,5c04 <_malloc_r+0x7b4>
    5ba0:	1006d3fa 	srli	r3,r2,15
    5ba4:	19401e04 	addi	r5,r3,120
    5ba8:	19001dc4 	addi	r4,r3,119
    5bac:	280a90fa 	slli	r5,r5,3
    5bb0:	003f6006 	br	5934 <_malloc_r+0x4e4>
    5bb4:	10815568 	cmpgeui	r2,r2,1365
    5bb8:	1000191e 	bne	r2,zero,5c20 <_malloc_r+0x7d0>
    5bbc:	8804d4ba 	srli	r2,r17,18
    5bc0:	11801f44 	addi	r6,r2,125
    5bc4:	12001f04 	addi	r8,r2,124
    5bc8:	300a90fa 	slli	r5,r6,3
    5bcc:	003e5906 	br	5534 <_malloc_r+0xe4>
    5bd0:	e73ffe04 	addi	fp,fp,-8
    5bd4:	a729883a 	add	r20,r20,fp
    5bd8:	a5e9c83a 	sub	r20,r20,r23
    5bdc:	002b883a 	mov	r21,zero
    5be0:	003f1906 	br	5848 <_malloc_r+0x3f8>
    5be4:	81400204 	addi	r5,r16,8
    5be8:	9009883a 	mov	r4,r18
    5bec:	00049340 	call	4934 <_free_r>
    5bf0:	9c000217 	ldw	r16,8(r19)
    5bf4:	00800074 	movhi	r2,1
    5bf8:	108c7e17 	ldw	r2,12792(r2)
    5bfc:	85000117 	ldw	r20,4(r16)
    5c00:	003f2b06 	br	58b0 <_malloc_r+0x460>
    5c04:	18c15568 	cmpgeui	r3,r3,1365
    5c08:	1800091e 	bne	r3,zero,5c30 <_malloc_r+0x7e0>
    5c0c:	1006d4ba 	srli	r3,r2,18
    5c10:	19401f44 	addi	r5,r3,125
    5c14:	19001f04 	addi	r4,r3,124
    5c18:	280a90fa 	slli	r5,r5,3
    5c1c:	003f4506 	br	5934 <_malloc_r+0x4e4>
    5c20:	0140fe04 	movi	r5,1016
    5c24:	01801fc4 	movi	r6,127
    5c28:	02001f84 	movi	r8,126
    5c2c:	003e4106 	br	5534 <_malloc_r+0xe4>
    5c30:	0140fe04 	movi	r5,1016
    5c34:	01001f84 	movi	r4,126
    5c38:	003f3e06 	br	5934 <_malloc_r+0x4e4>
    5c3c:	98800117 	ldw	r2,4(r19)
    5c40:	003f9506 	br	5a98 <_malloc_r+0x648>

00005c44 <memchr>:
    5c44:	208000cc 	andi	r2,r4,3
    5c48:	280f883a 	mov	r7,r5
    5c4c:	10003526 	beq	r2,zero,5d24 <memchr+0xe0>
    5c50:	30bfffc4 	addi	r2,r6,-1
    5c54:	30001926 	beq	r6,zero,5cbc <memchr+0x78>
    5c58:	20c00003 	ldbu	r3,0(r4)
    5c5c:	29803fcc 	andi	r6,r5,255
    5c60:	30c0061e 	bne	r6,r3,5c7c <memchr+0x38>
    5c64:	00001706 	br	5cc4 <memchr+0x80>
    5c68:	10bfffc4 	addi	r2,r2,-1
    5c6c:	10ffffe0 	cmpeqi	r3,r2,-1
    5c70:	1800121e 	bne	r3,zero,5cbc <memchr+0x78>
    5c74:	20c00003 	ldbu	r3,0(r4)
    5c78:	19801226 	beq	r3,r6,5cc4 <memchr+0x80>
    5c7c:	21000044 	addi	r4,r4,1
    5c80:	20c000cc 	andi	r3,r4,3
    5c84:	183ff81e 	bne	r3,zero,5c68 <memchr+0x24>
    5c88:	10c00128 	cmpgeui	r3,r2,4
    5c8c:	18000f1e 	bne	r3,zero,5ccc <memchr+0x88>
    5c90:	10000a26 	beq	r2,zero,5cbc <memchr+0x78>
    5c94:	20c00003 	ldbu	r3,0(r4)
    5c98:	29403fcc 	andi	r5,r5,255
    5c9c:	19400926 	beq	r3,r5,5cc4 <memchr+0x80>
    5ca0:	2085883a 	add	r2,r4,r2
    5ca4:	39403fcc 	andi	r5,r7,255
    5ca8:	00000206 	br	5cb4 <memchr+0x70>
    5cac:	20c00003 	ldbu	r3,0(r4)
    5cb0:	19400426 	beq	r3,r5,5cc4 <memchr+0x80>
    5cb4:	21000044 	addi	r4,r4,1
    5cb8:	113ffc1e 	bne	r2,r4,5cac <memchr+0x68>
    5cbc:	0005883a 	mov	r2,zero
    5cc0:	f800283a 	ret
    5cc4:	2005883a 	mov	r2,r4
    5cc8:	f800283a 	ret
    5ccc:	280c923a 	slli	r6,r5,8
    5cd0:	2a403fcc 	andi	r9,r5,255
    5cd4:	02bfbff4 	movhi	r10,65279
    5cd8:	31bfffcc 	andi	r6,r6,65535
    5cdc:	3246b03a 	or	r3,r6,r9
    5ce0:	1812943a 	slli	r9,r3,16
    5ce4:	02202074 	movhi	r8,32897
    5ce8:	52bfbfc4 	addi	r10,r10,-257
    5cec:	48d2b03a 	or	r9,r9,r3
    5cf0:	42202004 	addi	r8,r8,-32640
    5cf4:	20c00017 	ldw	r3,0(r4)
    5cf8:	48c6f03a 	xor	r3,r9,r3
    5cfc:	1a8d883a 	add	r6,r3,r10
    5d00:	00c6303a 	nor	r3,zero,r3
    5d04:	30c6703a 	and	r3,r6,r3
    5d08:	1a06703a 	and	r3,r3,r8
    5d0c:	183fe11e 	bne	r3,zero,5c94 <memchr+0x50>
    5d10:	10bfff04 	addi	r2,r2,-4
    5d14:	10c00128 	cmpgeui	r3,r2,4
    5d18:	21000104 	addi	r4,r4,4
    5d1c:	183ff51e 	bne	r3,zero,5cf4 <memchr+0xb0>
    5d20:	003fdb06 	br	5c90 <memchr+0x4c>
    5d24:	3005883a 	mov	r2,r6
    5d28:	003fd706 	br	5c88 <memchr+0x44>

00005d2c <memcpy>:
    5d2c:	30c00430 	cmpltui	r3,r6,16
    5d30:	2005883a 	mov	r2,r4
    5d34:	18002d1e 	bne	r3,zero,5dec <memcpy+0xc0>
    5d38:	2906b03a 	or	r3,r5,r4
    5d3c:	18c000cc 	andi	r3,r3,3
    5d40:	1800351e 	bne	r3,zero,5e18 <memcpy+0xec>
    5d44:	32fffc04 	addi	r11,r6,-16
    5d48:	5816d13a 	srli	r11,r11,4
    5d4c:	2007883a 	mov	r3,r4
    5d50:	280f883a 	mov	r7,r5
    5d54:	5ac00044 	addi	r11,r11,1
    5d58:	5816913a 	slli	r11,r11,4
    5d5c:	22c9883a 	add	r4,r4,r11
    5d60:	3a000017 	ldw	r8,0(r7)
    5d64:	3a800117 	ldw	r10,4(r7)
    5d68:	3a400217 	ldw	r9,8(r7)
    5d6c:	39c00404 	addi	r7,r7,16
    5d70:	1a000015 	stw	r8,0(r3)
    5d74:	3a3fff17 	ldw	r8,-4(r7)
    5d78:	1a800115 	stw	r10,4(r3)
    5d7c:	1a400215 	stw	r9,8(r3)
    5d80:	18c00404 	addi	r3,r3,16
    5d84:	1a3fff15 	stw	r8,-4(r3)
    5d88:	20fff51e 	bne	r4,r3,5d60 <memcpy+0x34>
    5d8c:	3100030c 	andi	r4,r6,12
    5d90:	2acb883a 	add	r5,r5,r11
    5d94:	320003cc 	andi	r8,r6,15
    5d98:	20002226 	beq	r4,zero,5e24 <memcpy+0xf8>
    5d9c:	2809883a 	mov	r4,r5
    5da0:	1813883a 	mov	r9,r3
    5da4:	21000104 	addi	r4,r4,4
    5da8:	22bfff17 	ldw	r10,-4(r4)
    5dac:	410fc83a 	sub	r7,r8,r4
    5db0:	4a400104 	addi	r9,r9,4
    5db4:	29cf883a 	add	r7,r5,r7
    5db8:	4abfff15 	stw	r10,-4(r9)
    5dbc:	39c00128 	cmpgeui	r7,r7,4
    5dc0:	383ff81e 	bne	r7,zero,5da4 <memcpy+0x78>
    5dc4:	413fff04 	addi	r4,r8,-4
    5dc8:	2008d0ba 	srli	r4,r4,2
    5dcc:	318000cc 	andi	r6,r6,3
    5dd0:	31ffffc4 	addi	r7,r6,-1
    5dd4:	21000044 	addi	r4,r4,1
    5dd8:	200890ba 	slli	r4,r4,2
    5ddc:	1907883a 	add	r3,r3,r4
    5de0:	290b883a 	add	r5,r5,r4
    5de4:	3000041e 	bne	r6,zero,5df8 <memcpy+0xcc>
    5de8:	f800283a 	ret
    5dec:	2007883a 	mov	r3,r4
    5df0:	31ffffc4 	addi	r7,r6,-1
    5df4:	303ffc26 	beq	r6,zero,5de8 <memcpy+0xbc>
    5df8:	39c00044 	addi	r7,r7,1
    5dfc:	19cf883a 	add	r7,r3,r7
    5e00:	29400044 	addi	r5,r5,1
    5e04:	29bfffc3 	ldbu	r6,-1(r5)
    5e08:	18c00044 	addi	r3,r3,1
    5e0c:	19bfffc5 	stb	r6,-1(r3)
    5e10:	19fffb1e 	bne	r3,r7,5e00 <memcpy+0xd4>
    5e14:	f800283a 	ret
    5e18:	31ffffc4 	addi	r7,r6,-1
    5e1c:	2007883a 	mov	r3,r4
    5e20:	003ff506 	br	5df8 <memcpy+0xcc>
    5e24:	400d883a 	mov	r6,r8
    5e28:	003ff106 	br	5df0 <memcpy+0xc4>

00005e2c <memmove>:
    5e2c:	2005883a 	mov	r2,r4
    5e30:	29000a2e 	bgeu	r5,r4,5e5c <memmove+0x30>
    5e34:	2989883a 	add	r4,r5,r6
    5e38:	1100082e 	bgeu	r2,r4,5e5c <memmove+0x30>
    5e3c:	1187883a 	add	r3,r2,r6
    5e40:	30003e26 	beq	r6,zero,5f3c <memmove+0x110>
    5e44:	213fffc4 	addi	r4,r4,-1
    5e48:	21400003 	ldbu	r5,0(r4)
    5e4c:	18ffffc4 	addi	r3,r3,-1
    5e50:	19400005 	stb	r5,0(r3)
    5e54:	10fffb1e 	bne	r2,r3,5e44 <memmove+0x18>
    5e58:	f800283a 	ret
    5e5c:	30c00430 	cmpltui	r3,r6,16
    5e60:	18000b26 	beq	r3,zero,5e90 <memmove+0x64>
    5e64:	1007883a 	mov	r3,r2
    5e68:	31ffffc4 	addi	r7,r6,-1
    5e6c:	30003726 	beq	r6,zero,5f4c <memmove+0x120>
    5e70:	39c00044 	addi	r7,r7,1
    5e74:	29cf883a 	add	r7,r5,r7
    5e78:	29400044 	addi	r5,r5,1
    5e7c:	29bfffc3 	ldbu	r6,-1(r5)
    5e80:	18c00044 	addi	r3,r3,1
    5e84:	19bfffc5 	stb	r6,-1(r3)
    5e88:	29fffb1e 	bne	r5,r7,5e78 <memmove+0x4c>
    5e8c:	f800283a 	ret
    5e90:	2886b03a 	or	r3,r5,r2
    5e94:	18c000cc 	andi	r3,r3,3
    5e98:	1800291e 	bne	r3,zero,5f40 <memmove+0x114>
    5e9c:	327ffc04 	addi	r9,r6,-16
    5ea0:	4812d13a 	srli	r9,r9,4
    5ea4:	280f883a 	mov	r7,r5
    5ea8:	1007883a 	mov	r3,r2
    5eac:	4a400044 	addi	r9,r9,1
    5eb0:	4812913a 	slli	r9,r9,4
    5eb4:	1251883a 	add	r8,r2,r9
    5eb8:	39000017 	ldw	r4,0(r7)
    5ebc:	18c00404 	addi	r3,r3,16
    5ec0:	39c00404 	addi	r7,r7,16
    5ec4:	193ffc15 	stw	r4,-16(r3)
    5ec8:	393ffd17 	ldw	r4,-12(r7)
    5ecc:	193ffd15 	stw	r4,-12(r3)
    5ed0:	393ffe17 	ldw	r4,-8(r7)
    5ed4:	193ffe15 	stw	r4,-8(r3)
    5ed8:	393fff17 	ldw	r4,-4(r7)
    5edc:	193fff15 	stw	r4,-4(r3)
    5ee0:	40fff51e 	bne	r8,r3,5eb8 <memmove+0x8c>
    5ee4:	3100030c 	andi	r4,r6,12
    5ee8:	2a4b883a 	add	r5,r5,r9
    5eec:	320003cc 	andi	r8,r6,15
    5ef0:	20001726 	beq	r4,zero,5f50 <memmove+0x124>
    5ef4:	2813883a 	mov	r9,r5
    5ef8:	180f883a 	mov	r7,r3
    5efc:	4a400104 	addi	r9,r9,4
    5f00:	39c00104 	addi	r7,r7,4
    5f04:	4abfff17 	ldw	r10,-4(r9)
    5f08:	41c9c83a 	sub	r4,r8,r7
    5f0c:	1909883a 	add	r4,r3,r4
    5f10:	3abfff15 	stw	r10,-4(r7)
    5f14:	21000128 	cmpgeui	r4,r4,4
    5f18:	203ff81e 	bne	r4,zero,5efc <memmove+0xd0>
    5f1c:	413fff04 	addi	r4,r8,-4
    5f20:	2008d0ba 	srli	r4,r4,2
    5f24:	318000cc 	andi	r6,r6,3
    5f28:	21000044 	addi	r4,r4,1
    5f2c:	200890ba 	slli	r4,r4,2
    5f30:	1907883a 	add	r3,r3,r4
    5f34:	290b883a 	add	r5,r5,r4
    5f38:	003fcb06 	br	5e68 <memmove+0x3c>
    5f3c:	f800283a 	ret
    5f40:	31ffffc4 	addi	r7,r6,-1
    5f44:	1007883a 	mov	r3,r2
    5f48:	003fc906 	br	5e70 <memmove+0x44>
    5f4c:	f800283a 	ret
    5f50:	400d883a 	mov	r6,r8
    5f54:	003fc406 	br	5e68 <memmove+0x3c>

00005f58 <memset>:
    5f58:	20c000cc 	andi	r3,r4,3
    5f5c:	2005883a 	mov	r2,r4
    5f60:	18003626 	beq	r3,zero,603c <memset+0xe4>
    5f64:	31ffffc4 	addi	r7,r6,-1
    5f68:	30003326 	beq	r6,zero,6038 <memset+0xe0>
    5f6c:	2811883a 	mov	r8,r5
    5f70:	2007883a 	mov	r3,r4
    5f74:	00000306 	br	5f84 <memset+0x2c>
    5f78:	39ffffc4 	addi	r7,r7,-1
    5f7c:	39bfffe0 	cmpeqi	r6,r7,-1
    5f80:	30002d1e 	bne	r6,zero,6038 <memset+0xe0>
    5f84:	18c00044 	addi	r3,r3,1
    5f88:	1a3fffc5 	stb	r8,-1(r3)
    5f8c:	198000cc 	andi	r6,r3,3
    5f90:	303ff91e 	bne	r6,zero,5f78 <memset+0x20>
    5f94:	39000130 	cmpltui	r4,r7,4
    5f98:	2000221e 	bne	r4,zero,6024 <memset+0xcc>
    5f9c:	29003fcc 	andi	r4,r5,255
    5fa0:	200c923a 	slli	r6,r4,8
    5fa4:	3a000430 	cmpltui	r8,r7,16
    5fa8:	3108b03a 	or	r4,r6,r4
    5fac:	200c943a 	slli	r6,r4,16
    5fb0:	310cb03a 	or	r6,r6,r4
    5fb4:	40000e1e 	bne	r8,zero,5ff0 <memset+0x98>
    5fb8:	3a3ffc04 	addi	r8,r7,-16
    5fbc:	4010d13a 	srli	r8,r8,4
    5fc0:	42000044 	addi	r8,r8,1
    5fc4:	4010913a 	slli	r8,r8,4
    5fc8:	1a11883a 	add	r8,r3,r8
    5fcc:	19800015 	stw	r6,0(r3)
    5fd0:	19800115 	stw	r6,4(r3)
    5fd4:	19800215 	stw	r6,8(r3)
    5fd8:	18c00404 	addi	r3,r3,16
    5fdc:	19bfff15 	stw	r6,-4(r3)
    5fe0:	40fffa1e 	bne	r8,r3,5fcc <memset+0x74>
    5fe4:	3900030c 	andi	r4,r7,12
    5fe8:	39c003cc 	andi	r7,r7,15
    5fec:	20000d26 	beq	r4,zero,6024 <memset+0xcc>
    5ff0:	1809883a 	mov	r4,r3
    5ff4:	21000104 	addi	r4,r4,4
    5ff8:	3911c83a 	sub	r8,r7,r4
    5ffc:	1a11883a 	add	r8,r3,r8
    6000:	21bfff15 	stw	r6,-4(r4)
    6004:	42000128 	cmpgeui	r8,r8,4
    6008:	403ffa1e 	bne	r8,zero,5ff4 <memset+0x9c>
    600c:	393fff04 	addi	r4,r7,-4
    6010:	2008d0ba 	srli	r4,r4,2
    6014:	39c000cc 	andi	r7,r7,3
    6018:	21000044 	addi	r4,r4,1
    601c:	200890ba 	slli	r4,r4,2
    6020:	1907883a 	add	r3,r3,r4
    6024:	38000426 	beq	r7,zero,6038 <memset+0xe0>
    6028:	19cf883a 	add	r7,r3,r7
    602c:	18c00044 	addi	r3,r3,1
    6030:	197fffc5 	stb	r5,-1(r3)
    6034:	38fffd1e 	bne	r7,r3,602c <memset+0xd4>
    6038:	f800283a 	ret
    603c:	2007883a 	mov	r3,r4
    6040:	300f883a 	mov	r7,r6
    6044:	003fd306 	br	5f94 <memset+0x3c>

00006048 <_Balloc>:
    6048:	20801317 	ldw	r2,76(r4)
    604c:	defffc04 	addi	sp,sp,-16
    6050:	dc400115 	stw	r17,4(sp)
    6054:	dc000015 	stw	r16,0(sp)
    6058:	dfc00315 	stw	ra,12(sp)
    605c:	dc800215 	stw	r18,8(sp)
    6060:	2021883a 	mov	r16,r4
    6064:	2823883a 	mov	r17,r5
    6068:	10000e26 	beq	r2,zero,60a4 <_Balloc+0x5c>
    606c:	880690ba 	slli	r3,r17,2
    6070:	10c7883a 	add	r3,r2,r3
    6074:	18800017 	ldw	r2,0(r3)
    6078:	10001126 	beq	r2,zero,60c0 <_Balloc+0x78>
    607c:	11000017 	ldw	r4,0(r2)
    6080:	19000015 	stw	r4,0(r3)
    6084:	10000415 	stw	zero,16(r2)
    6088:	10000315 	stw	zero,12(r2)
    608c:	dfc00317 	ldw	ra,12(sp)
    6090:	dc800217 	ldw	r18,8(sp)
    6094:	dc400117 	ldw	r17,4(sp)
    6098:	dc000017 	ldw	r16,0(sp)
    609c:	dec00404 	addi	sp,sp,16
    60a0:	f800283a 	ret
    60a4:	01800844 	movi	r6,33
    60a8:	01400104 	movi	r5,4
    60ac:	0008d9c0 	call	8d9c <_calloc_r>
    60b0:	80801315 	stw	r2,76(r16)
    60b4:	103fed1e 	bne	r2,zero,606c <_Balloc+0x24>
    60b8:	0005883a 	mov	r2,zero
    60bc:	003ff306 	br	608c <_Balloc+0x44>
    60c0:	04800044 	movi	r18,1
    60c4:	9464983a 	sll	r18,r18,r17
    60c8:	01400044 	movi	r5,1
    60cc:	8009883a 	mov	r4,r16
    60d0:	91800144 	addi	r6,r18,5
    60d4:	300c90ba 	slli	r6,r6,2
    60d8:	0008d9c0 	call	8d9c <_calloc_r>
    60dc:	103ff626 	beq	r2,zero,60b8 <_Balloc+0x70>
    60e0:	14400115 	stw	r17,4(r2)
    60e4:	14800215 	stw	r18,8(r2)
    60e8:	003fe606 	br	6084 <_Balloc+0x3c>

000060ec <_Bfree>:
    60ec:	28000726 	beq	r5,zero,610c <_Bfree+0x20>
    60f0:	28c00117 	ldw	r3,4(r5)
    60f4:	20801317 	ldw	r2,76(r4)
    60f8:	180690ba 	slli	r3,r3,2
    60fc:	10c5883a 	add	r2,r2,r3
    6100:	10c00017 	ldw	r3,0(r2)
    6104:	28c00015 	stw	r3,0(r5)
    6108:	11400015 	stw	r5,0(r2)
    610c:	f800283a 	ret

00006110 <__multadd>:
    6110:	defff704 	addi	sp,sp,-36
    6114:	dcc00315 	stw	r19,12(sp)
    6118:	2cc00417 	ldw	r19,16(r5)
    611c:	ddc00715 	stw	r23,28(sp)
    6120:	dd800615 	stw	r22,24(sp)
    6124:	dd400515 	stw	r21,20(sp)
    6128:	dd000415 	stw	r20,16(sp)
    612c:	dc800215 	stw	r18,8(sp)
    6130:	dc400115 	stw	r17,4(sp)
    6134:	dfc00815 	stw	ra,32(sp)
    6138:	dc000015 	stw	r16,0(sp)
    613c:	2829883a 	mov	r20,r5
    6140:	202b883a 	mov	r21,r4
    6144:	3025883a 	mov	r18,r6
    6148:	3823883a 	mov	r17,r7
    614c:	2d800504 	addi	r22,r5,20
    6150:	002f883a 	mov	r23,zero
    6154:	b4000017 	ldw	r16,0(r22)
    6158:	900b883a 	mov	r5,r18
    615c:	b5800104 	addi	r22,r22,4
    6160:	813fffcc 	andi	r4,r16,65535
    6164:	000a4bc0 	call	a4bc <__mulsi3>
    6168:	8008d43a 	srli	r4,r16,16
    616c:	900b883a 	mov	r5,r18
    6170:	1461883a 	add	r16,r2,r17
    6174:	000a4bc0 	call	a4bc <__mulsi3>
    6178:	800ed43a 	srli	r7,r16,16
    617c:	843fffcc 	andi	r16,r16,65535
    6180:	bdc00044 	addi	r23,r23,1
    6184:	11c5883a 	add	r2,r2,r7
    6188:	1006943a 	slli	r3,r2,16
    618c:	1022d43a 	srli	r17,r2,16
    6190:	1c21883a 	add	r16,r3,r16
    6194:	b43fff15 	stw	r16,-4(r22)
    6198:	bcffee16 	blt	r23,r19,6154 <__multadd+0x44>
    619c:	88000826 	beq	r17,zero,61c0 <__multadd+0xb0>
    61a0:	a0800217 	ldw	r2,8(r20)
    61a4:	9880120e 	bge	r19,r2,61f0 <__multadd+0xe0>
    61a8:	98800144 	addi	r2,r19,5
    61ac:	100490ba 	slli	r2,r2,2
    61b0:	9cc00044 	addi	r19,r19,1
    61b4:	a085883a 	add	r2,r20,r2
    61b8:	14400015 	stw	r17,0(r2)
    61bc:	a4c00415 	stw	r19,16(r20)
    61c0:	a005883a 	mov	r2,r20
    61c4:	dfc00817 	ldw	ra,32(sp)
    61c8:	ddc00717 	ldw	r23,28(sp)
    61cc:	dd800617 	ldw	r22,24(sp)
    61d0:	dd400517 	ldw	r21,20(sp)
    61d4:	dd000417 	ldw	r20,16(sp)
    61d8:	dcc00317 	ldw	r19,12(sp)
    61dc:	dc800217 	ldw	r18,8(sp)
    61e0:	dc400117 	ldw	r17,4(sp)
    61e4:	dc000017 	ldw	r16,0(sp)
    61e8:	dec00904 	addi	sp,sp,36
    61ec:	f800283a 	ret
    61f0:	a1400117 	ldw	r5,4(r20)
    61f4:	a809883a 	mov	r4,r21
    61f8:	29400044 	addi	r5,r5,1
    61fc:	00060480 	call	6048 <_Balloc>
    6200:	a1800417 	ldw	r6,16(r20)
    6204:	a1400304 	addi	r5,r20,12
    6208:	11000304 	addi	r4,r2,12
    620c:	31800084 	addi	r6,r6,2
    6210:	300c90ba 	slli	r6,r6,2
    6214:	1021883a 	mov	r16,r2
    6218:	0005d2c0 	call	5d2c <memcpy>
    621c:	a0000926 	beq	r20,zero,6244 <__multadd+0x134>
    6220:	a0c00117 	ldw	r3,4(r20)
    6224:	a8801317 	ldw	r2,76(r21)
    6228:	180690ba 	slli	r3,r3,2
    622c:	10c5883a 	add	r2,r2,r3
    6230:	10c00017 	ldw	r3,0(r2)
    6234:	a0c00015 	stw	r3,0(r20)
    6238:	15000015 	stw	r20,0(r2)
    623c:	8029883a 	mov	r20,r16
    6240:	003fd906 	br	61a8 <__multadd+0x98>
    6244:	8029883a 	mov	r20,r16
    6248:	003fd706 	br	61a8 <__multadd+0x98>

0000624c <__s2b>:
    624c:	defff904 	addi	sp,sp,-28
    6250:	dc800215 	stw	r18,8(sp)
    6254:	dc000015 	stw	r16,0(sp)
    6258:	2025883a 	mov	r18,r4
    625c:	2821883a 	mov	r16,r5
    6260:	39000204 	addi	r4,r7,8
    6264:	01400244 	movi	r5,9
    6268:	dcc00315 	stw	r19,12(sp)
    626c:	dc400115 	stw	r17,4(sp)
    6270:	dfc00615 	stw	ra,24(sp)
    6274:	3823883a 	mov	r17,r7
    6278:	dd400515 	stw	r21,20(sp)
    627c:	dd000415 	stw	r20,16(sp)
    6280:	3027883a 	mov	r19,r6
    6284:	000a3040 	call	a304 <__divsi3>
    6288:	88c00290 	cmplti	r3,r17,10
    628c:	1800311e 	bne	r3,zero,6354 <__s2b+0x108>
    6290:	00c00044 	movi	r3,1
    6294:	000b883a 	mov	r5,zero
    6298:	18c7883a 	add	r3,r3,r3
    629c:	29400044 	addi	r5,r5,1
    62a0:	18bffd16 	blt	r3,r2,6298 <__s2b+0x4c>
    62a4:	9009883a 	mov	r4,r18
    62a8:	00060480 	call	6048 <_Balloc>
    62ac:	d8c00717 	ldw	r3,28(sp)
    62b0:	10c00515 	stw	r3,20(r2)
    62b4:	00c00044 	movi	r3,1
    62b8:	10c00415 	stw	r3,16(r2)
    62bc:	98c00290 	cmplti	r3,r19,10
    62c0:	1800211e 	bne	r3,zero,6348 <__s2b+0xfc>
    62c4:	85400244 	addi	r21,r16,9
    62c8:	84e9883a 	add	r20,r16,r19
    62cc:	a821883a 	mov	r16,r21
    62d0:	84000044 	addi	r16,r16,1
    62d4:	81ffffc7 	ldb	r7,-1(r16)
    62d8:	01800284 	movi	r6,10
    62dc:	100b883a 	mov	r5,r2
    62e0:	39fff404 	addi	r7,r7,-48
    62e4:	9009883a 	mov	r4,r18
    62e8:	00061100 	call	6110 <__multadd>
    62ec:	a43ff81e 	bne	r20,r16,62d0 <__s2b+0x84>
    62f0:	9c3ffe04 	addi	r16,r19,-8
    62f4:	ac21883a 	add	r16,r21,r16
    62f8:	9c400a0e 	bge	r19,r17,6324 <__s2b+0xd8>
    62fc:	8ce3c83a 	sub	r17,r17,r19
    6300:	8463883a 	add	r17,r16,r17
    6304:	84000044 	addi	r16,r16,1
    6308:	81ffffc7 	ldb	r7,-1(r16)
    630c:	01800284 	movi	r6,10
    6310:	100b883a 	mov	r5,r2
    6314:	39fff404 	addi	r7,r7,-48
    6318:	9009883a 	mov	r4,r18
    631c:	00061100 	call	6110 <__multadd>
    6320:	8c3ff81e 	bne	r17,r16,6304 <__s2b+0xb8>
    6324:	dfc00617 	ldw	ra,24(sp)
    6328:	dd400517 	ldw	r21,20(sp)
    632c:	dd000417 	ldw	r20,16(sp)
    6330:	dcc00317 	ldw	r19,12(sp)
    6334:	dc800217 	ldw	r18,8(sp)
    6338:	dc400117 	ldw	r17,4(sp)
    633c:	dc000017 	ldw	r16,0(sp)
    6340:	dec00704 	addi	sp,sp,28
    6344:	f800283a 	ret
    6348:	84000284 	addi	r16,r16,10
    634c:	04c00244 	movi	r19,9
    6350:	003fe906 	br	62f8 <__s2b+0xac>
    6354:	000b883a 	mov	r5,zero
    6358:	003fd206 	br	62a4 <__s2b+0x58>

0000635c <__hi0bits>:
    635c:	20bfffec 	andhi	r2,r4,65535
    6360:	1000131e 	bne	r2,zero,63b0 <__hi0bits+0x54>
    6364:	2008943a 	slli	r4,r4,16
    6368:	00800404 	movi	r2,16
    636c:	20ffc02c 	andhi	r3,r4,65280
    6370:	1800021e 	bne	r3,zero,637c <__hi0bits+0x20>
    6374:	2008923a 	slli	r4,r4,8
    6378:	10800204 	addi	r2,r2,8
    637c:	20fc002c 	andhi	r3,r4,61440
    6380:	1800021e 	bne	r3,zero,638c <__hi0bits+0x30>
    6384:	2008913a 	slli	r4,r4,4
    6388:	10800104 	addi	r2,r2,4
    638c:	20f0002c 	andhi	r3,r4,49152
    6390:	1800021e 	bne	r3,zero,639c <__hi0bits+0x40>
    6394:	200890ba 	slli	r4,r4,2
    6398:	10800084 	addi	r2,r2,2
    639c:	20000316 	blt	r4,zero,63ac <__hi0bits+0x50>
    63a0:	2110002c 	andhi	r4,r4,16384
    63a4:	10800044 	addi	r2,r2,1
    63a8:	20000326 	beq	r4,zero,63b8 <__hi0bits+0x5c>
    63ac:	f800283a 	ret
    63b0:	0005883a 	mov	r2,zero
    63b4:	003fed06 	br	636c <__hi0bits+0x10>
    63b8:	00800804 	movi	r2,32
    63bc:	f800283a 	ret

000063c0 <__lo0bits>:
    63c0:	20c00017 	ldw	r3,0(r4)
    63c4:	188001cc 	andi	r2,r3,7
    63c8:	10000826 	beq	r2,zero,63ec <__lo0bits+0x2c>
    63cc:	1880004c 	andi	r2,r3,1
    63d0:	10001f1e 	bne	r2,zero,6450 <__lo0bits+0x90>
    63d4:	1880008c 	andi	r2,r3,2
    63d8:	10002126 	beq	r2,zero,6460 <__lo0bits+0xa0>
    63dc:	1806d07a 	srli	r3,r3,1
    63e0:	00800044 	movi	r2,1
    63e4:	20c00015 	stw	r3,0(r4)
    63e8:	f800283a 	ret
    63ec:	18bfffcc 	andi	r2,r3,65535
    63f0:	1000151e 	bne	r2,zero,6448 <__lo0bits+0x88>
    63f4:	1806d43a 	srli	r3,r3,16
    63f8:	00800404 	movi	r2,16
    63fc:	19403fcc 	andi	r5,r3,255
    6400:	2800021e 	bne	r5,zero,640c <__lo0bits+0x4c>
    6404:	1806d23a 	srli	r3,r3,8
    6408:	10800204 	addi	r2,r2,8
    640c:	194003cc 	andi	r5,r3,15
    6410:	2800021e 	bne	r5,zero,641c <__lo0bits+0x5c>
    6414:	1806d13a 	srli	r3,r3,4
    6418:	10800104 	addi	r2,r2,4
    641c:	194000cc 	andi	r5,r3,3
    6420:	2800021e 	bne	r5,zero,642c <__lo0bits+0x6c>
    6424:	1806d0ba 	srli	r3,r3,2
    6428:	10800084 	addi	r2,r2,2
    642c:	1940004c 	andi	r5,r3,1
    6430:	2800031e 	bne	r5,zero,6440 <__lo0bits+0x80>
    6434:	1806d07a 	srli	r3,r3,1
    6438:	10800044 	addi	r2,r2,1
    643c:	18000626 	beq	r3,zero,6458 <__lo0bits+0x98>
    6440:	20c00015 	stw	r3,0(r4)
    6444:	f800283a 	ret
    6448:	0005883a 	mov	r2,zero
    644c:	003feb06 	br	63fc <__lo0bits+0x3c>
    6450:	0005883a 	mov	r2,zero
    6454:	f800283a 	ret
    6458:	00800804 	movi	r2,32
    645c:	f800283a 	ret
    6460:	1806d0ba 	srli	r3,r3,2
    6464:	00800084 	movi	r2,2
    6468:	20c00015 	stw	r3,0(r4)
    646c:	f800283a 	ret

00006470 <__i2b>:
    6470:	defffe04 	addi	sp,sp,-8
    6474:	dc000015 	stw	r16,0(sp)
    6478:	2821883a 	mov	r16,r5
    647c:	01400044 	movi	r5,1
    6480:	dfc00115 	stw	ra,4(sp)
    6484:	00060480 	call	6048 <_Balloc>
    6488:	01000044 	movi	r4,1
    648c:	14000515 	stw	r16,20(r2)
    6490:	11000415 	stw	r4,16(r2)
    6494:	dfc00117 	ldw	ra,4(sp)
    6498:	dc000017 	ldw	r16,0(sp)
    649c:	dec00204 	addi	sp,sp,8
    64a0:	f800283a 	ret

000064a4 <__multiply>:
    64a4:	defff104 	addi	sp,sp,-60
    64a8:	dd800b15 	stw	r22,44(sp)
    64ac:	dc400615 	stw	r17,24(sp)
    64b0:	2d800417 	ldw	r22,16(r5)
    64b4:	34400417 	ldw	r17,16(r6)
    64b8:	ddc00c15 	stw	r23,48(sp)
    64bc:	dc800715 	stw	r18,28(sp)
    64c0:	dfc00e15 	stw	ra,56(sp)
    64c4:	df000d15 	stw	fp,52(sp)
    64c8:	dd400a15 	stw	r21,40(sp)
    64cc:	dd000915 	stw	r20,36(sp)
    64d0:	dcc00815 	stw	r19,32(sp)
    64d4:	dc000515 	stw	r16,20(sp)
    64d8:	2825883a 	mov	r18,r5
    64dc:	302f883a 	mov	r23,r6
    64e0:	b4400516 	blt	r22,r17,64f8 <__multiply+0x54>
    64e4:	8807883a 	mov	r3,r17
    64e8:	282f883a 	mov	r23,r5
    64ec:	b023883a 	mov	r17,r22
    64f0:	3025883a 	mov	r18,r6
    64f4:	182d883a 	mov	r22,r3
    64f8:	b8800217 	ldw	r2,8(r23)
    64fc:	8da9883a 	add	r20,r17,r22
    6500:	b9400117 	ldw	r5,4(r23)
    6504:	1500010e 	bge	r2,r20,650c <__multiply+0x68>
    6508:	29400044 	addi	r5,r5,1
    650c:	a02690ba 	slli	r19,r20,2
    6510:	00060480 	call	6048 <_Balloc>
    6514:	10c00504 	addi	r3,r2,20
    6518:	1cc9883a 	add	r4,r3,r19
    651c:	d8800415 	stw	r2,16(sp)
    6520:	d8c00015 	stw	r3,0(sp)
    6524:	d9000115 	stw	r4,4(sp)
    6528:	1805883a 	mov	r2,r3
    652c:	1900042e 	bgeu	r3,r4,6540 <__multiply+0x9c>
    6530:	d8c00117 	ldw	r3,4(sp)
    6534:	10000015 	stw	zero,0(r2)
    6538:	10800104 	addi	r2,r2,4
    653c:	10fffc36 	bltu	r2,r3,6530 <__multiply+0x8c>
    6540:	b02c90ba 	slli	r22,r22,2
    6544:	882290ba 	slli	r17,r17,2
    6548:	94800504 	addi	r18,r18,20
    654c:	b8800504 	addi	r2,r23,20
    6550:	9587883a 	add	r3,r18,r22
    6554:	d8800315 	stw	r2,12(sp)
    6558:	d8c00215 	stw	r3,8(sp)
    655c:	1463883a 	add	r17,r2,r17
    6560:	90c00936 	bltu	r18,r3,6588 <__multiply+0xe4>
    6564:	00004606 	br	6680 <__multiply+0x1dc>
    6568:	8020d43a 	srli	r16,r16,16
    656c:	8000271e 	bne	r16,zero,660c <__multiply+0x168>
    6570:	d8800017 	ldw	r2,0(sp)
    6574:	94800104 	addi	r18,r18,4
    6578:	10800104 	addi	r2,r2,4
    657c:	d8800015 	stw	r2,0(sp)
    6580:	d8800217 	ldw	r2,8(sp)
    6584:	90803e2e 	bgeu	r18,r2,6680 <__multiply+0x1dc>
    6588:	94000017 	ldw	r16,0(r18)
    658c:	873fffcc 	andi	fp,r16,65535
    6590:	e03ff526 	beq	fp,zero,6568 <__multiply+0xc4>
    6594:	dcc00017 	ldw	r19,0(sp)
    6598:	dd800317 	ldw	r22,12(sp)
    659c:	002b883a 	mov	r21,zero
    65a0:	b5c00017 	ldw	r23,0(r22)
    65a4:	9c000017 	ldw	r16,0(r19)
    65a8:	e00b883a 	mov	r5,fp
    65ac:	b93fffcc 	andi	r4,r23,65535
    65b0:	000a4bc0 	call	a4bc <__mulsi3>
    65b4:	b808d43a 	srli	r4,r23,16
    65b8:	80ffffcc 	andi	r3,r16,65535
    65bc:	10c5883a 	add	r2,r2,r3
    65c0:	e00b883a 	mov	r5,fp
    65c4:	156b883a 	add	r21,r2,r21
    65c8:	8020d43a 	srli	r16,r16,16
    65cc:	000a4bc0 	call	a4bc <__mulsi3>
    65d0:	a808d43a 	srli	r4,r21,16
    65d4:	1405883a 	add	r2,r2,r16
    65d8:	a8ffffcc 	andi	r3,r21,65535
    65dc:	1105883a 	add	r2,r2,r4
    65e0:	1008943a 	slli	r4,r2,16
    65e4:	9cc00104 	addi	r19,r19,4
    65e8:	b5800104 	addi	r22,r22,4
    65ec:	20c6b03a 	or	r3,r4,r3
    65f0:	98ffff15 	stw	r3,-4(r19)
    65f4:	102ad43a 	srli	r21,r2,16
    65f8:	b47fe936 	bltu	r22,r17,65a0 <__multiply+0xfc>
    65fc:	9d400015 	stw	r21,0(r19)
    6600:	94000017 	ldw	r16,0(r18)
    6604:	8020d43a 	srli	r16,r16,16
    6608:	803fd926 	beq	r16,zero,6570 <__multiply+0xcc>
    660c:	ddc00017 	ldw	r23,0(sp)
    6610:	dd400317 	ldw	r21,12(sp)
    6614:	0027883a 	mov	r19,zero
    6618:	bd800017 	ldw	r22,0(r23)
    661c:	b039883a 	mov	fp,r22
    6620:	a900000b 	ldhu	r4,0(r21)
    6624:	e038d43a 	srli	fp,fp,16
    6628:	800b883a 	mov	r5,r16
    662c:	000a4bc0 	call	a4bc <__mulsi3>
    6630:	1739883a 	add	fp,r2,fp
    6634:	e4e7883a 	add	r19,fp,r19
    6638:	9804943a 	slli	r2,r19,16
    663c:	b0ffffcc 	andi	r3,r22,65535
    6640:	bdc00104 	addi	r23,r23,4
    6644:	10c6b03a 	or	r3,r2,r3
    6648:	b8ffff15 	stw	r3,-4(r23)
    664c:	ad400104 	addi	r21,r21,4
    6650:	a93fff8b 	ldhu	r4,-2(r21)
    6654:	bf000017 	ldw	fp,0(r23)
    6658:	800b883a 	mov	r5,r16
    665c:	000a4bc0 	call	a4bc <__mulsi3>
    6660:	980cd43a 	srli	r6,r19,16
    6664:	e0ffffcc 	andi	r3,fp,65535
    6668:	10c7883a 	add	r3,r2,r3
    666c:	19ad883a 	add	r22,r3,r6
    6670:	b026d43a 	srli	r19,r22,16
    6674:	ac7fea36 	bltu	r21,r17,6620 <__multiply+0x17c>
    6678:	bd800015 	stw	r22,0(r23)
    667c:	003fbc06 	br	6570 <__multiply+0xcc>
    6680:	05000a0e 	bge	zero,r20,66ac <__multiply+0x208>
    6684:	d8c00117 	ldw	r3,4(sp)
    6688:	18bfff17 	ldw	r2,-4(r3)
    668c:	1cffff04 	addi	r19,r3,-4
    6690:	10000326 	beq	r2,zero,66a0 <__multiply+0x1fc>
    6694:	00000506 	br	66ac <__multiply+0x208>
    6698:	98800017 	ldw	r2,0(r19)
    669c:	1000031e 	bne	r2,zero,66ac <__multiply+0x208>
    66a0:	a53fffc4 	addi	r20,r20,-1
    66a4:	9cffff04 	addi	r19,r19,-4
    66a8:	a03ffb1e 	bne	r20,zero,6698 <__multiply+0x1f4>
    66ac:	d8800417 	ldw	r2,16(sp)
    66b0:	15000415 	stw	r20,16(r2)
    66b4:	dfc00e17 	ldw	ra,56(sp)
    66b8:	df000d17 	ldw	fp,52(sp)
    66bc:	ddc00c17 	ldw	r23,48(sp)
    66c0:	dd800b17 	ldw	r22,44(sp)
    66c4:	dd400a17 	ldw	r21,40(sp)
    66c8:	dd000917 	ldw	r20,36(sp)
    66cc:	dcc00817 	ldw	r19,32(sp)
    66d0:	dc800717 	ldw	r18,28(sp)
    66d4:	dc400617 	ldw	r17,24(sp)
    66d8:	dc000517 	ldw	r16,20(sp)
    66dc:	dec00f04 	addi	sp,sp,60
    66e0:	f800283a 	ret

000066e4 <__pow5mult>:
    66e4:	defffb04 	addi	sp,sp,-20
    66e8:	dcc00315 	stw	r19,12(sp)
    66ec:	dc000015 	stw	r16,0(sp)
    66f0:	dfc00415 	stw	ra,16(sp)
    66f4:	dc800215 	stw	r18,8(sp)
    66f8:	dc400115 	stw	r17,4(sp)
    66fc:	308000cc 	andi	r2,r6,3
    6700:	3021883a 	mov	r16,r6
    6704:	2027883a 	mov	r19,r4
    6708:	10002d1e 	bne	r2,zero,67c0 <__pow5mult+0xdc>
    670c:	2825883a 	mov	r18,r5
    6710:	8021d0ba 	srai	r16,r16,2
    6714:	80001926 	beq	r16,zero,677c <__pow5mult+0x98>
    6718:	9c401217 	ldw	r17,72(r19)
    671c:	8800061e 	bne	r17,zero,6738 <__pow5mult+0x54>
    6720:	00002f06 	br	67e0 <__pow5mult+0xfc>
    6724:	8021d07a 	srai	r16,r16,1
    6728:	80001426 	beq	r16,zero,677c <__pow5mult+0x98>
    672c:	88800017 	ldw	r2,0(r17)
    6730:	10001a26 	beq	r2,zero,679c <__pow5mult+0xb8>
    6734:	1023883a 	mov	r17,r2
    6738:	8080004c 	andi	r2,r16,1
    673c:	103ff926 	beq	r2,zero,6724 <__pow5mult+0x40>
    6740:	880d883a 	mov	r6,r17
    6744:	900b883a 	mov	r5,r18
    6748:	9809883a 	mov	r4,r19
    674c:	00064a40 	call	64a4 <__multiply>
    6750:	90001926 	beq	r18,zero,67b8 <__pow5mult+0xd4>
    6754:	91000117 	ldw	r4,4(r18)
    6758:	98c01317 	ldw	r3,76(r19)
    675c:	8021d07a 	srai	r16,r16,1
    6760:	200890ba 	slli	r4,r4,2
    6764:	1907883a 	add	r3,r3,r4
    6768:	19000017 	ldw	r4,0(r3)
    676c:	91000015 	stw	r4,0(r18)
    6770:	1c800015 	stw	r18,0(r3)
    6774:	1025883a 	mov	r18,r2
    6778:	803fec1e 	bne	r16,zero,672c <__pow5mult+0x48>
    677c:	9005883a 	mov	r2,r18
    6780:	dfc00417 	ldw	ra,16(sp)
    6784:	dcc00317 	ldw	r19,12(sp)
    6788:	dc800217 	ldw	r18,8(sp)
    678c:	dc400117 	ldw	r17,4(sp)
    6790:	dc000017 	ldw	r16,0(sp)
    6794:	dec00504 	addi	sp,sp,20
    6798:	f800283a 	ret
    679c:	880d883a 	mov	r6,r17
    67a0:	880b883a 	mov	r5,r17
    67a4:	9809883a 	mov	r4,r19
    67a8:	00064a40 	call	64a4 <__multiply>
    67ac:	88800015 	stw	r2,0(r17)
    67b0:	10000015 	stw	zero,0(r2)
    67b4:	003fdf06 	br	6734 <__pow5mult+0x50>
    67b8:	1025883a 	mov	r18,r2
    67bc:	003fd906 	br	6724 <__pow5mult+0x40>
    67c0:	100490ba 	slli	r2,r2,2
    67c4:	00c00074 	movhi	r3,1
    67c8:	000f883a 	mov	r7,zero
    67cc:	10c7883a 	add	r3,r2,r3
    67d0:	19bd1817 	ldw	r6,-2976(r3)
    67d4:	00061100 	call	6110 <__multadd>
    67d8:	1025883a 	mov	r18,r2
    67dc:	003fcc06 	br	6710 <__pow5mult+0x2c>
    67e0:	01400044 	movi	r5,1
    67e4:	9809883a 	mov	r4,r19
    67e8:	00060480 	call	6048 <_Balloc>
    67ec:	1023883a 	mov	r17,r2
    67f0:	00809c44 	movi	r2,625
    67f4:	88800515 	stw	r2,20(r17)
    67f8:	00800044 	movi	r2,1
    67fc:	88800415 	stw	r2,16(r17)
    6800:	9c401215 	stw	r17,72(r19)
    6804:	88000015 	stw	zero,0(r17)
    6808:	003fcb06 	br	6738 <__pow5mult+0x54>

0000680c <__lshift>:
    680c:	defff904 	addi	sp,sp,-28
    6810:	dcc00315 	stw	r19,12(sp)
    6814:	dc400115 	stw	r17,4(sp)
    6818:	2cc00417 	ldw	r19,16(r5)
    681c:	3023d17a 	srai	r17,r6,5
    6820:	28800217 	ldw	r2,8(r5)
    6824:	dd400515 	stw	r21,20(sp)
    6828:	8ce7883a 	add	r19,r17,r19
    682c:	dd000415 	stw	r20,16(sp)
    6830:	dc800215 	stw	r18,8(sp)
    6834:	dc000015 	stw	r16,0(sp)
    6838:	dfc00615 	stw	ra,24(sp)
    683c:	9c000044 	addi	r16,r19,1
    6840:	2825883a 	mov	r18,r5
    6844:	302b883a 	mov	r21,r6
    6848:	2029883a 	mov	r20,r4
    684c:	29400117 	ldw	r5,4(r5)
    6850:	1400030e 	bge	r2,r16,6860 <__lshift+0x54>
    6854:	1085883a 	add	r2,r2,r2
    6858:	29400044 	addi	r5,r5,1
    685c:	143ffd16 	blt	r2,r16,6854 <__lshift+0x48>
    6860:	a009883a 	mov	r4,r20
    6864:	00060480 	call	6048 <_Balloc>
    6868:	11000504 	addi	r4,r2,20
    686c:	0440090e 	bge	zero,r17,6894 <__lshift+0x88>
    6870:	8c400144 	addi	r17,r17,5
    6874:	882290ba 	slli	r17,r17,2
    6878:	2007883a 	mov	r3,r4
    687c:	144b883a 	add	r5,r2,r17
    6880:	18c00104 	addi	r3,r3,4
    6884:	183fff15 	stw	zero,-4(r3)
    6888:	28fffd1e 	bne	r5,r3,6880 <__lshift+0x74>
    688c:	8c7ffb04 	addi	r17,r17,-20
    6890:	2449883a 	add	r4,r4,r17
    6894:	92000417 	ldw	r8,16(r18)
    6898:	90c00504 	addi	r3,r18,20
    689c:	a98007cc 	andi	r6,r21,31
    68a0:	401090ba 	slli	r8,r8,2
    68a4:	1a11883a 	add	r8,r3,r8
    68a8:	30002126 	beq	r6,zero,6930 <__lshift+0x124>
    68ac:	02400804 	movi	r9,32
    68b0:	4993c83a 	sub	r9,r9,r6
    68b4:	000f883a 	mov	r7,zero
    68b8:	19400017 	ldw	r5,0(r3)
    68bc:	21000104 	addi	r4,r4,4
    68c0:	18c00104 	addi	r3,r3,4
    68c4:	298a983a 	sll	r5,r5,r6
    68c8:	29cab03a 	or	r5,r5,r7
    68cc:	217fff15 	stw	r5,-4(r4)
    68d0:	197fff17 	ldw	r5,-4(r3)
    68d4:	2a4ed83a 	srl	r7,r5,r9
    68d8:	1a3ff736 	bltu	r3,r8,68b8 <__lshift+0xac>
    68dc:	21c00015 	stw	r7,0(r4)
    68e0:	38000126 	beq	r7,zero,68e8 <__lshift+0xdc>
    68e4:	8027883a 	mov	r19,r16
    68e8:	14c00415 	stw	r19,16(r2)
    68ec:	90000726 	beq	r18,zero,690c <__lshift+0x100>
    68f0:	91000117 	ldw	r4,4(r18)
    68f4:	a0c01317 	ldw	r3,76(r20)
    68f8:	200890ba 	slli	r4,r4,2
    68fc:	1907883a 	add	r3,r3,r4
    6900:	19000017 	ldw	r4,0(r3)
    6904:	91000015 	stw	r4,0(r18)
    6908:	1c800015 	stw	r18,0(r3)
    690c:	dfc00617 	ldw	ra,24(sp)
    6910:	dd400517 	ldw	r21,20(sp)
    6914:	dd000417 	ldw	r20,16(sp)
    6918:	dcc00317 	ldw	r19,12(sp)
    691c:	dc800217 	ldw	r18,8(sp)
    6920:	dc400117 	ldw	r17,4(sp)
    6924:	dc000017 	ldw	r16,0(sp)
    6928:	dec00704 	addi	sp,sp,28
    692c:	f800283a 	ret
    6930:	18c00104 	addi	r3,r3,4
    6934:	197fff17 	ldw	r5,-4(r3)
    6938:	21000104 	addi	r4,r4,4
    693c:	217fff15 	stw	r5,-4(r4)
    6940:	1a3ffb36 	bltu	r3,r8,6930 <__lshift+0x124>
    6944:	003fe806 	br	68e8 <__lshift+0xdc>

00006948 <__mcmp>:
    6948:	20800417 	ldw	r2,16(r4)
    694c:	28c00417 	ldw	r3,16(r5)
    6950:	10c5c83a 	sub	r2,r2,r3
    6954:	10000e1e 	bne	r2,zero,6990 <__mcmp+0x48>
    6958:	180c90ba 	slli	r6,r3,2
    695c:	21000504 	addi	r4,r4,20
    6960:	29400504 	addi	r5,r5,20
    6964:	2187883a 	add	r3,r4,r6
    6968:	298b883a 	add	r5,r5,r6
    696c:	00000106 	br	6974 <__mcmp+0x2c>
    6970:	20c0082e 	bgeu	r4,r3,6994 <__mcmp+0x4c>
    6974:	18ffff04 	addi	r3,r3,-4
    6978:	297fff04 	addi	r5,r5,-4
    697c:	19c00017 	ldw	r7,0(r3)
    6980:	29800017 	ldw	r6,0(r5)
    6984:	39bffa26 	beq	r7,r6,6970 <__mcmp+0x28>
    6988:	3980032e 	bgeu	r7,r6,6998 <__mcmp+0x50>
    698c:	00bfffc4 	movi	r2,-1
    6990:	f800283a 	ret
    6994:	f800283a 	ret
    6998:	00800044 	movi	r2,1
    699c:	f800283a 	ret

000069a0 <__mdiff>:
    69a0:	defffa04 	addi	sp,sp,-24
    69a4:	dc800215 	stw	r18,8(sp)
    69a8:	30c00417 	ldw	r3,16(r6)
    69ac:	2c800417 	ldw	r18,16(r5)
    69b0:	dd000415 	stw	r20,16(sp)
    69b4:	dcc00315 	stw	r19,12(sp)
    69b8:	dc400115 	stw	r17,4(sp)
    69bc:	dc000015 	stw	r16,0(sp)
    69c0:	dfc00515 	stw	ra,20(sp)
    69c4:	90e5c83a 	sub	r18,r18,r3
    69c8:	2827883a 	mov	r19,r5
    69cc:	3029883a 	mov	r20,r6
    69d0:	2c000504 	addi	r16,r5,20
    69d4:	34400504 	addi	r17,r6,20
    69d8:	9000131e 	bne	r18,zero,6a28 <__mdiff+0x88>
    69dc:	180690ba 	slli	r3,r3,2
    69e0:	80c5883a 	add	r2,r16,r3
    69e4:	88c7883a 	add	r3,r17,r3
    69e8:	00000106 	br	69f0 <__mdiff+0x50>
    69ec:	8080552e 	bgeu	r16,r2,6b44 <__mdiff+0x1a4>
    69f0:	10bfff04 	addi	r2,r2,-4
    69f4:	18ffff04 	addi	r3,r3,-4
    69f8:	11c00017 	ldw	r7,0(r2)
    69fc:	19400017 	ldw	r5,0(r3)
    6a00:	397ffa26 	beq	r7,r5,69ec <__mdiff+0x4c>
    6a04:	39400a2e 	bgeu	r7,r5,6a30 <__mdiff+0x90>
    6a08:	8007883a 	mov	r3,r16
    6a0c:	9805883a 	mov	r2,r19
    6a10:	8821883a 	mov	r16,r17
    6a14:	a027883a 	mov	r19,r20
    6a18:	1823883a 	mov	r17,r3
    6a1c:	1029883a 	mov	r20,r2
    6a20:	04800044 	movi	r18,1
    6a24:	00000206 	br	6a30 <__mdiff+0x90>
    6a28:	903ff716 	blt	r18,zero,6a08 <__mdiff+0x68>
    6a2c:	0025883a 	mov	r18,zero
    6a30:	99400117 	ldw	r5,4(r19)
    6a34:	00060480 	call	6048 <_Balloc>
    6a38:	9a400417 	ldw	r9,16(r19)
    6a3c:	a2c00417 	ldw	r11,16(r20)
    6a40:	12800504 	addi	r10,r2,20
    6a44:	481090ba 	slli	r8,r9,2
    6a48:	581690ba 	slli	r11,r11,2
    6a4c:	14800315 	stw	r18,12(r2)
    6a50:	8211883a 	add	r8,r16,r8
    6a54:	8ad7883a 	add	r11,r17,r11
    6a58:	0007883a 	mov	r3,zero
    6a5c:	00000106 	br	6a64 <__mdiff+0xc4>
    6a60:	3815883a 	mov	r10,r7
    6a64:	81000017 	ldw	r4,0(r16)
    6a68:	89800017 	ldw	r6,0(r17)
    6a6c:	51c00104 	addi	r7,r10,4
    6a70:	217fffcc 	andi	r5,r4,65535
    6a74:	28cb883a 	add	r5,r5,r3
    6a78:	30ffffcc 	andi	r3,r6,65535
    6a7c:	28cbc83a 	sub	r5,r5,r3
    6a80:	300cd43a 	srli	r6,r6,16
    6a84:	2006d43a 	srli	r3,r4,16
    6a88:	2809d43a 	srai	r4,r5,16
    6a8c:	297fffcc 	andi	r5,r5,65535
    6a90:	1987c83a 	sub	r3,r3,r6
    6a94:	1907883a 	add	r3,r3,r4
    6a98:	1808943a 	slli	r4,r3,16
    6a9c:	8c400104 	addi	r17,r17,4
    6aa0:	84000104 	addi	r16,r16,4
    6aa4:	214ab03a 	or	r5,r4,r5
    6aa8:	397fff15 	stw	r5,-4(r7)
    6aac:	1807d43a 	srai	r3,r3,16
    6ab0:	8affeb36 	bltu	r17,r11,6a60 <__mdiff+0xc0>
    6ab4:	8200152e 	bgeu	r16,r8,6b0c <__mdiff+0x16c>
    6ab8:	3815883a 	mov	r10,r7
    6abc:	800d883a 	mov	r6,r16
    6ac0:	31000017 	ldw	r4,0(r6)
    6ac4:	52800104 	addi	r10,r10,4
    6ac8:	31800104 	addi	r6,r6,4
    6acc:	217fffcc 	andi	r5,r4,65535
    6ad0:	28cb883a 	add	r5,r5,r3
    6ad4:	2817d43a 	srai	r11,r5,16
    6ad8:	2006d43a 	srli	r3,r4,16
    6adc:	293fffcc 	andi	r4,r5,65535
    6ae0:	1ac7883a 	add	r3,r3,r11
    6ae4:	180a943a 	slli	r5,r3,16
    6ae8:	1807d43a 	srai	r3,r3,16
    6aec:	290ab03a 	or	r5,r5,r4
    6af0:	517fff15 	stw	r5,-4(r10)
    6af4:	323ff236 	bltu	r6,r8,6ac0 <__mdiff+0x120>
    6af8:	42bfffc4 	addi	r10,r8,-1
    6afc:	5415c83a 	sub	r10,r10,r16
    6b00:	5014d0ba 	srli	r10,r10,2
    6b04:	501490ba 	slli	r10,r10,2
    6b08:	3a95883a 	add	r10,r7,r10
    6b0c:	2800041e 	bne	r5,zero,6b20 <__mdiff+0x180>
    6b10:	52bfff04 	addi	r10,r10,-4
    6b14:	50c00017 	ldw	r3,0(r10)
    6b18:	4a7fffc4 	addi	r9,r9,-1
    6b1c:	183ffc26 	beq	r3,zero,6b10 <__mdiff+0x170>
    6b20:	12400415 	stw	r9,16(r2)
    6b24:	dfc00517 	ldw	ra,20(sp)
    6b28:	dd000417 	ldw	r20,16(sp)
    6b2c:	dcc00317 	ldw	r19,12(sp)
    6b30:	dc800217 	ldw	r18,8(sp)
    6b34:	dc400117 	ldw	r17,4(sp)
    6b38:	dc000017 	ldw	r16,0(sp)
    6b3c:	dec00604 	addi	sp,sp,24
    6b40:	f800283a 	ret
    6b44:	000b883a 	mov	r5,zero
    6b48:	00060480 	call	6048 <_Balloc>
    6b4c:	00c00044 	movi	r3,1
    6b50:	10c00415 	stw	r3,16(r2)
    6b54:	10000515 	stw	zero,20(r2)
    6b58:	003ff206 	br	6b24 <__mdiff+0x184>

00006b5c <__ulp>:
    6b5c:	295ffc2c 	andhi	r5,r5,32752
    6b60:	00ff3034 	movhi	r3,64704
    6b64:	28c7883a 	add	r3,r5,r3
    6b68:	00c0020e 	bge	zero,r3,6b74 <__ulp+0x18>
    6b6c:	0005883a 	mov	r2,zero
    6b70:	f800283a 	ret
    6b74:	00c7c83a 	sub	r3,zero,r3
    6b78:	1807d53a 	srai	r3,r3,20
    6b7c:	18800508 	cmpgei	r2,r3,20
    6b80:	1000041e 	bne	r2,zero,6b94 <__ulp+0x38>
    6b84:	01400234 	movhi	r5,8
    6b88:	28c7d83a 	sra	r3,r5,r3
    6b8c:	0005883a 	mov	r2,zero
    6b90:	f800283a 	ret
    6b94:	193ffb04 	addi	r4,r3,-20
    6b98:	208007c8 	cmpgei	r2,r4,31
    6b9c:	0007883a 	mov	r3,zero
    6ba0:	1000031e 	bne	r2,zero,6bb0 <__ulp+0x54>
    6ba4:	00a00034 	movhi	r2,32768
    6ba8:	1104d83a 	srl	r2,r2,r4
    6bac:	f800283a 	ret
    6bb0:	00800044 	movi	r2,1
    6bb4:	f800283a 	ret

00006bb8 <__b2d>:
    6bb8:	defffa04 	addi	sp,sp,-24
    6bbc:	dc000015 	stw	r16,0(sp)
    6bc0:	24000417 	ldw	r16,16(r4)
    6bc4:	dc800215 	stw	r18,8(sp)
    6bc8:	24800504 	addi	r18,r4,20
    6bcc:	802090ba 	slli	r16,r16,2
    6bd0:	dc400115 	stw	r17,4(sp)
    6bd4:	dd000415 	stw	r20,16(sp)
    6bd8:	9421883a 	add	r16,r18,r16
    6bdc:	847fff17 	ldw	r17,-4(r16)
    6be0:	dcc00315 	stw	r19,12(sp)
    6be4:	2829883a 	mov	r20,r5
    6be8:	8809883a 	mov	r4,r17
    6bec:	dfc00515 	stw	ra,20(sp)
    6bf0:	000635c0 	call	635c <__hi0bits>
    6bf4:	01000804 	movi	r4,32
    6bf8:	2087c83a 	sub	r3,r4,r2
    6bfc:	a0c00015 	stw	r3,0(r20)
    6c00:	10c002c8 	cmpgei	r3,r2,11
    6c04:	84ffff04 	addi	r19,r16,-4
    6c08:	18001f26 	beq	r3,zero,6c88 <__b2d+0xd0>
    6c0c:	10fffd44 	addi	r3,r2,-11
    6c10:	94c00e2e 	bgeu	r18,r19,6c4c <__b2d+0x94>
    6c14:	80bffe17 	ldw	r2,-8(r16)
    6c18:	18001226 	beq	r3,zero,6c64 <__b2d+0xac>
    6c1c:	20c9c83a 	sub	r4,r4,r3
    6c20:	110cd83a 	srl	r6,r2,r4
    6c24:	88e2983a 	sll	r17,r17,r3
    6c28:	10c4983a 	sll	r2,r2,r3
    6c2c:	817ffe04 	addi	r5,r16,-8
    6c30:	8986b03a 	or	r3,r17,r6
    6c34:	18cffc34 	orhi	r3,r3,16368
    6c38:	91400b2e 	bgeu	r18,r5,6c68 <__b2d+0xb0>
    6c3c:	817ffd17 	ldw	r5,-12(r16)
    6c40:	2908d83a 	srl	r4,r5,r4
    6c44:	1104b03a 	or	r2,r2,r4
    6c48:	00000706 	br	6c68 <__b2d+0xb0>
    6c4c:	18000426 	beq	r3,zero,6c60 <__b2d+0xa8>
    6c50:	88c6983a 	sll	r3,r17,r3
    6c54:	0005883a 	mov	r2,zero
    6c58:	18cffc34 	orhi	r3,r3,16368
    6c5c:	00000206 	br	6c68 <__b2d+0xb0>
    6c60:	0005883a 	mov	r2,zero
    6c64:	88cffc34 	orhi	r3,r17,16368
    6c68:	dfc00517 	ldw	ra,20(sp)
    6c6c:	dd000417 	ldw	r20,16(sp)
    6c70:	dcc00317 	ldw	r19,12(sp)
    6c74:	dc800217 	ldw	r18,8(sp)
    6c78:	dc400117 	ldw	r17,4(sp)
    6c7c:	dc000017 	ldw	r16,0(sp)
    6c80:	dec00604 	addi	sp,sp,24
    6c84:	f800283a 	ret
    6c88:	014002c4 	movi	r5,11
    6c8c:	2889c83a 	sub	r4,r5,r2
    6c90:	8906d83a 	srl	r3,r17,r4
    6c94:	18cffc34 	orhi	r3,r3,16368
    6c98:	94c00536 	bltu	r18,r19,6cb0 <__b2d+0xf8>
    6c9c:	000b883a 	mov	r5,zero
    6ca0:	10800544 	addi	r2,r2,21
    6ca4:	8884983a 	sll	r2,r17,r2
    6ca8:	1144b03a 	or	r2,r2,r5
    6cac:	003fee06 	br	6c68 <__b2d+0xb0>
    6cb0:	817ffe17 	ldw	r5,-8(r16)
    6cb4:	290ad83a 	srl	r5,r5,r4
    6cb8:	003ff906 	br	6ca0 <__b2d+0xe8>

00006cbc <__d2b>:
    6cbc:	defff804 	addi	sp,sp,-32
    6cc0:	dc400315 	stw	r17,12(sp)
    6cc4:	3023883a 	mov	r17,r6
    6cc8:	dd000615 	stw	r20,24(sp)
    6ccc:	dc000215 	stw	r16,8(sp)
    6cd0:	2829883a 	mov	r20,r5
    6cd4:	8820d53a 	srli	r16,r17,20
    6cd8:	01400044 	movi	r5,1
    6cdc:	dcc00515 	stw	r19,20(sp)
    6ce0:	dc800415 	stw	r18,16(sp)
    6ce4:	dfc00715 	stw	ra,28(sp)
    6ce8:	3825883a 	mov	r18,r7
    6cec:	00060480 	call	6048 <_Balloc>
    6cf0:	01800434 	movhi	r6,16
    6cf4:	31bfffc4 	addi	r6,r6,-1
    6cf8:	8401ffcc 	andi	r16,r16,2047
    6cfc:	1027883a 	mov	r19,r2
    6d00:	89a2703a 	and	r17,r17,r6
    6d04:	80000126 	beq	r16,zero,6d0c <__d2b+0x50>
    6d08:	8c400434 	orhi	r17,r17,16
    6d0c:	dc400115 	stw	r17,4(sp)
    6d10:	a0002826 	beq	r20,zero,6db4 <__d2b+0xf8>
    6d14:	d809883a 	mov	r4,sp
    6d18:	dd000015 	stw	r20,0(sp)
    6d1c:	00063c00 	call	63c0 <__lo0bits>
    6d20:	d8c00117 	ldw	r3,4(sp)
    6d24:	1000171e 	bne	r2,zero,6d84 <__d2b+0xc8>
    6d28:	d9000017 	ldw	r4,0(sp)
    6d2c:	98c00615 	stw	r3,24(r19)
    6d30:	99000515 	stw	r4,20(r19)
    6d34:	18001d1e 	bne	r3,zero,6dac <__d2b+0xf0>
    6d38:	04400044 	movi	r17,1
    6d3c:	9c400415 	stw	r17,16(r19)
    6d40:	80002526 	beq	r16,zero,6dd8 <__d2b+0x11c>
    6d44:	00c00d44 	movi	r3,53
    6d48:	843ef344 	addi	r16,r16,-1075
    6d4c:	80a1883a 	add	r16,r16,r2
    6d50:	1885c83a 	sub	r2,r3,r2
    6d54:	d8c00817 	ldw	r3,32(sp)
    6d58:	94000015 	stw	r16,0(r18)
    6d5c:	18800015 	stw	r2,0(r3)
    6d60:	9805883a 	mov	r2,r19
    6d64:	dfc00717 	ldw	ra,28(sp)
    6d68:	dd000617 	ldw	r20,24(sp)
    6d6c:	dcc00517 	ldw	r19,20(sp)
    6d70:	dc800417 	ldw	r18,16(sp)
    6d74:	dc400317 	ldw	r17,12(sp)
    6d78:	dc000217 	ldw	r16,8(sp)
    6d7c:	dec00804 	addi	sp,sp,32
    6d80:	f800283a 	ret
    6d84:	01000804 	movi	r4,32
    6d88:	2089c83a 	sub	r4,r4,r2
    6d8c:	1908983a 	sll	r4,r3,r4
    6d90:	d9400017 	ldw	r5,0(sp)
    6d94:	1886d83a 	srl	r3,r3,r2
    6d98:	2148b03a 	or	r4,r4,r5
    6d9c:	99000515 	stw	r4,20(r19)
    6da0:	d8c00115 	stw	r3,4(sp)
    6da4:	98c00615 	stw	r3,24(r19)
    6da8:	183fe326 	beq	r3,zero,6d38 <__d2b+0x7c>
    6dac:	04400084 	movi	r17,2
    6db0:	003fe206 	br	6d3c <__d2b+0x80>
    6db4:	d9000104 	addi	r4,sp,4
    6db8:	00063c00 	call	63c0 <__lo0bits>
    6dbc:	00c00044 	movi	r3,1
    6dc0:	98c00415 	stw	r3,16(r19)
    6dc4:	d8c00117 	ldw	r3,4(sp)
    6dc8:	10800804 	addi	r2,r2,32
    6dcc:	04400044 	movi	r17,1
    6dd0:	98c00515 	stw	r3,20(r19)
    6dd4:	803fdb1e 	bne	r16,zero,6d44 <__d2b+0x88>
    6dd8:	880690ba 	slli	r3,r17,2
    6ddc:	10bef384 	addi	r2,r2,-1074
    6de0:	8822917a 	slli	r17,r17,5
    6de4:	98c7883a 	add	r3,r19,r3
    6de8:	19000417 	ldw	r4,16(r3)
    6dec:	90800015 	stw	r2,0(r18)
    6df0:	000635c0 	call	635c <__hi0bits>
    6df4:	88a3c83a 	sub	r17,r17,r2
    6df8:	d8800817 	ldw	r2,32(sp)
    6dfc:	14400015 	stw	r17,0(r2)
    6e00:	003fd706 	br	6d60 <__d2b+0xa4>

00006e04 <__ratio>:
    6e04:	defff904 	addi	sp,sp,-28
    6e08:	dc400315 	stw	r17,12(sp)
    6e0c:	2823883a 	mov	r17,r5
    6e10:	d80b883a 	mov	r5,sp
    6e14:	dfc00615 	stw	ra,24(sp)
    6e18:	dcc00515 	stw	r19,20(sp)
    6e1c:	dc800415 	stw	r18,16(sp)
    6e20:	2027883a 	mov	r19,r4
    6e24:	dc000215 	stw	r16,8(sp)
    6e28:	0006bb80 	call	6bb8 <__b2d>
    6e2c:	d9400104 	addi	r5,sp,4
    6e30:	8809883a 	mov	r4,r17
    6e34:	1025883a 	mov	r18,r2
    6e38:	1821883a 	mov	r16,r3
    6e3c:	0006bb80 	call	6bb8 <__b2d>
    6e40:	89400417 	ldw	r5,16(r17)
    6e44:	99000417 	ldw	r4,16(r19)
    6e48:	d9800117 	ldw	r6,4(sp)
    6e4c:	2149c83a 	sub	r4,r4,r5
    6e50:	d9400017 	ldw	r5,0(sp)
    6e54:	2008917a 	slli	r4,r4,5
    6e58:	298bc83a 	sub	r5,r5,r6
    6e5c:	2149883a 	add	r4,r4,r5
    6e60:	01000e0e 	bge	zero,r4,6e9c <__ratio+0x98>
    6e64:	2008953a 	slli	r4,r4,20
    6e68:	2421883a 	add	r16,r4,r16
    6e6c:	100d883a 	mov	r6,r2
    6e70:	180f883a 	mov	r7,r3
    6e74:	9009883a 	mov	r4,r18
    6e78:	800b883a 	mov	r5,r16
    6e7c:	000ae840 	call	ae84 <__divdf3>
    6e80:	dfc00617 	ldw	ra,24(sp)
    6e84:	dcc00517 	ldw	r19,20(sp)
    6e88:	dc800417 	ldw	r18,16(sp)
    6e8c:	dc400317 	ldw	r17,12(sp)
    6e90:	dc000217 	ldw	r16,8(sp)
    6e94:	dec00704 	addi	sp,sp,28
    6e98:	f800283a 	ret
    6e9c:	2008953a 	slli	r4,r4,20
    6ea0:	1907c83a 	sub	r3,r3,r4
    6ea4:	003ff106 	br	6e6c <__ratio+0x68>

00006ea8 <_mprec_log10>:
    6ea8:	defffe04 	addi	sp,sp,-8
    6eac:	dc000015 	stw	r16,0(sp)
    6eb0:	dfc00115 	stw	ra,4(sp)
    6eb4:	20800608 	cmpgei	r2,r4,24
    6eb8:	2021883a 	mov	r16,r4
    6ebc:	10000d26 	beq	r2,zero,6ef4 <_mprec_log10+0x4c>
    6ec0:	0005883a 	mov	r2,zero
    6ec4:	00cffc34 	movhi	r3,16368
    6ec8:	843fffc4 	addi	r16,r16,-1
    6ecc:	000d883a 	mov	r6,zero
    6ed0:	01d00934 	movhi	r7,16420
    6ed4:	1009883a 	mov	r4,r2
    6ed8:	180b883a 	mov	r5,r3
    6edc:	000ba480 	call	ba48 <__muldf3>
    6ee0:	803ff91e 	bne	r16,zero,6ec8 <_mprec_log10+0x20>
    6ee4:	dfc00117 	ldw	ra,4(sp)
    6ee8:	dc000017 	ldw	r16,0(sp)
    6eec:	dec00204 	addi	sp,sp,8
    6ef0:	f800283a 	ret
    6ef4:	202090fa 	slli	r16,r4,3
    6ef8:	00800074 	movhi	r2,1
    6efc:	10bd3004 	addi	r2,r2,-2880
    6f00:	1421883a 	add	r16,r2,r16
    6f04:	80800017 	ldw	r2,0(r16)
    6f08:	80c00117 	ldw	r3,4(r16)
    6f0c:	dfc00117 	ldw	ra,4(sp)
    6f10:	dc000017 	ldw	r16,0(sp)
    6f14:	dec00204 	addi	sp,sp,8
    6f18:	f800283a 	ret

00006f1c <__copybits>:
    6f1c:	29ffffc4 	addi	r7,r5,-1
    6f20:	380fd17a 	srai	r7,r7,5
    6f24:	31400417 	ldw	r5,16(r6)
    6f28:	30800504 	addi	r2,r6,20
    6f2c:	39c00044 	addi	r7,r7,1
    6f30:	280a90ba 	slli	r5,r5,2
    6f34:	380e90ba 	slli	r7,r7,2
    6f38:	114b883a 	add	r5,r2,r5
    6f3c:	21cf883a 	add	r7,r4,r7
    6f40:	11400c2e 	bgeu	r2,r5,6f74 <__copybits+0x58>
    6f44:	2007883a 	mov	r3,r4
    6f48:	10800104 	addi	r2,r2,4
    6f4c:	123fff17 	ldw	r8,-4(r2)
    6f50:	18c00104 	addi	r3,r3,4
    6f54:	1a3fff15 	stw	r8,-4(r3)
    6f58:	117ffb36 	bltu	r2,r5,6f48 <__copybits+0x2c>
    6f5c:	2985c83a 	sub	r2,r5,r6
    6f60:	10bffac4 	addi	r2,r2,-21
    6f64:	1004d0ba 	srli	r2,r2,2
    6f68:	10800044 	addi	r2,r2,1
    6f6c:	100490ba 	slli	r2,r2,2
    6f70:	2089883a 	add	r4,r4,r2
    6f74:	21c0032e 	bgeu	r4,r7,6f84 <__copybits+0x68>
    6f78:	21000104 	addi	r4,r4,4
    6f7c:	203fff15 	stw	zero,-4(r4)
    6f80:	21fffd36 	bltu	r4,r7,6f78 <__copybits+0x5c>
    6f84:	f800283a 	ret

00006f88 <__any_on>:
    6f88:	20800417 	ldw	r2,16(r4)
    6f8c:	280dd17a 	srai	r6,r5,5
    6f90:	21000504 	addi	r4,r4,20
    6f94:	11800c0e 	bge	r2,r6,6fc8 <__any_on+0x40>
    6f98:	100690ba 	slli	r3,r2,2
    6f9c:	20c7883a 	add	r3,r4,r3
    6fa0:	20c0142e 	bgeu	r4,r3,6ff4 <__any_on+0x6c>
    6fa4:	18bfff17 	ldw	r2,-4(r3)
    6fa8:	18ffff04 	addi	r3,r3,-4
    6fac:	1000041e 	bne	r2,zero,6fc0 <__any_on+0x38>
    6fb0:	20c00f2e 	bgeu	r4,r3,6ff0 <__any_on+0x68>
    6fb4:	18ffff04 	addi	r3,r3,-4
    6fb8:	19400017 	ldw	r5,0(r3)
    6fbc:	283ffc26 	beq	r5,zero,6fb0 <__any_on+0x28>
    6fc0:	00800044 	movi	r2,1
    6fc4:	f800283a 	ret
    6fc8:	300690ba 	slli	r3,r6,2
    6fcc:	20c7883a 	add	r3,r4,r3
    6fd0:	30bff30e 	bge	r6,r2,6fa0 <__any_on+0x18>
    6fd4:	294007cc 	andi	r5,r5,31
    6fd8:	283ff126 	beq	r5,zero,6fa0 <__any_on+0x18>
    6fdc:	19800017 	ldw	r6,0(r3)
    6fe0:	3144d83a 	srl	r2,r6,r5
    6fe4:	114a983a 	sll	r5,r2,r5
    6fe8:	317ff51e 	bne	r6,r5,6fc0 <__any_on+0x38>
    6fec:	003fec06 	br	6fa0 <__any_on+0x18>
    6ff0:	f800283a 	ret
    6ff4:	0005883a 	mov	r2,zero
    6ff8:	f800283a 	ret

00006ffc <_realloc_r>:
    6ffc:	defff504 	addi	sp,sp,-44
    7000:	dcc00415 	stw	r19,16(sp)
    7004:	dfc00a15 	stw	ra,40(sp)
    7008:	df000915 	stw	fp,36(sp)
    700c:	ddc00815 	stw	r23,32(sp)
    7010:	dd800715 	stw	r22,28(sp)
    7014:	dd400615 	stw	r21,24(sp)
    7018:	dd000515 	stw	r20,20(sp)
    701c:	dc800315 	stw	r18,12(sp)
    7020:	dc400215 	stw	r17,8(sp)
    7024:	dc000115 	stw	r16,4(sp)
    7028:	3027883a 	mov	r19,r6
    702c:	28008b26 	beq	r5,zero,725c <_realloc_r+0x260>
    7030:	282d883a 	mov	r22,r5
    7034:	202b883a 	mov	r21,r4
    7038:	9c0002c4 	addi	r16,r19,11
    703c:	000d3cc0 	call	d3cc <__malloc_lock>
    7040:	808005f0 	cmpltui	r2,r16,23
    7044:	1000521e 	bne	r2,zero,7190 <_realloc_r+0x194>
    7048:	017ffe04 	movi	r5,-8
    704c:	8160703a 	and	r16,r16,r5
    7050:	8007883a 	mov	r3,r16
    7054:	80005116 	blt	r16,zero,719c <_realloc_r+0x1a0>
    7058:	84c05036 	bltu	r16,r19,719c <_realloc_r+0x1a0>
    705c:	b0bfff17 	ldw	r2,-4(r22)
    7060:	017fff04 	movi	r5,-4
    7064:	b4bffe04 	addi	r18,r22,-8
    7068:	1162703a 	and	r17,r2,r5
    706c:	9469883a 	add	r20,r18,r17
    7070:	88c0390e 	bge	r17,r3,7158 <_realloc_r+0x15c>
    7074:	07000074 	movhi	fp,1
    7078:	e73f7504 	addi	fp,fp,-556
    707c:	e2000217 	ldw	r8,8(fp)
    7080:	a1000117 	ldw	r4,4(r20)
    7084:	45008e26 	beq	r8,r20,72c0 <_realloc_r+0x2c4>
    7088:	01bfff84 	movi	r6,-2
    708c:	218c703a 	and	r6,r4,r6
    7090:	a18d883a 	add	r6,r20,r6
    7094:	31800117 	ldw	r6,4(r6)
    7098:	3180004c 	andi	r6,r6,1
    709c:	30004f1e 	bne	r6,zero,71dc <_realloc_r+0x1e0>
    70a0:	2148703a 	and	r4,r4,r5
    70a4:	890b883a 	add	r5,r17,r4
    70a8:	28c0cb0e 	bge	r5,r3,73d8 <_realloc_r+0x3dc>
    70ac:	1080004c 	andi	r2,r2,1
    70b0:	10004c1e 	bne	r2,zero,71e4 <_realloc_r+0x1e8>
    70b4:	b1fffe17 	ldw	r7,-8(r22)
    70b8:	00bfff04 	movi	r2,-4
    70bc:	91cfc83a 	sub	r7,r18,r7
    70c0:	39400117 	ldw	r5,4(r7)
    70c4:	288a703a 	and	r5,r5,r2
    70c8:	a0000426 	beq	r20,zero,70dc <_realloc_r+0xe0>
    70cc:	896f883a 	add	r23,r17,r5
    70d0:	b92f883a 	add	r23,r23,r4
    70d4:	4500cb26 	beq	r8,r20,7404 <_realloc_r+0x408>
    70d8:	b8c0930e 	bge	r23,r3,7328 <_realloc_r+0x32c>
    70dc:	38004126 	beq	r7,zero,71e4 <_realloc_r+0x1e8>
    70e0:	896f883a 	add	r23,r17,r5
    70e4:	b8c03f16 	blt	r23,r3,71e4 <_realloc_r+0x1e8>
    70e8:	38c00217 	ldw	r3,8(r7)
    70ec:	38800317 	ldw	r2,12(r7)
    70f0:	89bfff04 	addi	r6,r17,-4
    70f4:	31000968 	cmpgeui	r4,r6,37
    70f8:	18800315 	stw	r2,12(r3)
    70fc:	10c00215 	stw	r3,8(r2)
    7100:	3de9883a 	add	r20,r7,r23
    7104:	38c00204 	addi	r3,r7,8
    7108:	2000f81e 	bne	r4,zero,74ec <_realloc_r+0x4f0>
    710c:	30800530 	cmpltui	r2,r6,20
    7110:	b1000017 	ldw	r4,0(r22)
    7114:	1000eb1e 	bne	r2,zero,74c4 <_realloc_r+0x4c8>
    7118:	39000215 	stw	r4,8(r7)
    711c:	b1000117 	ldw	r4,4(r22)
    7120:	30800728 	cmpgeui	r2,r6,28
    7124:	39000315 	stw	r4,12(r7)
    7128:	1001041e 	bne	r2,zero,753c <_realloc_r+0x540>
    712c:	b1000217 	ldw	r4,8(r22)
    7130:	38800404 	addi	r2,r7,16
    7134:	b5800204 	addi	r22,r22,8
    7138:	11000015 	stw	r4,0(r2)
    713c:	b1000117 	ldw	r4,4(r22)
    7140:	b823883a 	mov	r17,r23
    7144:	3825883a 	mov	r18,r7
    7148:	11000115 	stw	r4,4(r2)
    714c:	b1000217 	ldw	r4,8(r22)
    7150:	182d883a 	mov	r22,r3
    7154:	11000215 	stw	r4,8(r2)
    7158:	91800117 	ldw	r6,4(r18)
    715c:	8c05c83a 	sub	r2,r17,r16
    7160:	10c00430 	cmpltui	r3,r2,16
    7164:	3180004c 	andi	r6,r6,1
    7168:	18004926 	beq	r3,zero,7290 <_realloc_r+0x294>
    716c:	898cb03a 	or	r6,r17,r6
    7170:	91800115 	stw	r6,4(r18)
    7174:	a0800117 	ldw	r2,4(r20)
    7178:	10800054 	ori	r2,r2,1
    717c:	a0800115 	stw	r2,4(r20)
    7180:	a809883a 	mov	r4,r21
    7184:	000d3f00 	call	d3f0 <__malloc_unlock>
    7188:	b027883a 	mov	r19,r22
    718c:	00000606 	br	71a8 <_realloc_r+0x1ac>
    7190:	04000404 	movi	r16,16
    7194:	00c00404 	movi	r3,16
    7198:	84ffb02e 	bgeu	r16,r19,705c <_realloc_r+0x60>
    719c:	00800304 	movi	r2,12
    71a0:	a8800015 	stw	r2,0(r21)
    71a4:	0027883a 	mov	r19,zero
    71a8:	9805883a 	mov	r2,r19
    71ac:	dfc00a17 	ldw	ra,40(sp)
    71b0:	df000917 	ldw	fp,36(sp)
    71b4:	ddc00817 	ldw	r23,32(sp)
    71b8:	dd800717 	ldw	r22,28(sp)
    71bc:	dd400617 	ldw	r21,24(sp)
    71c0:	dd000517 	ldw	r20,20(sp)
    71c4:	dcc00417 	ldw	r19,16(sp)
    71c8:	dc800317 	ldw	r18,12(sp)
    71cc:	dc400217 	ldw	r17,8(sp)
    71d0:	dc000117 	ldw	r16,4(sp)
    71d4:	dec00b04 	addi	sp,sp,44
    71d8:	f800283a 	ret
    71dc:	1080004c 	andi	r2,r2,1
    71e0:	10007826 	beq	r2,zero,73c4 <_realloc_r+0x3c8>
    71e4:	980b883a 	mov	r5,r19
    71e8:	a809883a 	mov	r4,r21
    71ec:	00054500 	call	5450 <_malloc_r>
    71f0:	1027883a 	mov	r19,r2
    71f4:	10001626 	beq	r2,zero,7250 <_realloc_r+0x254>
    71f8:	b0bfff17 	ldw	r2,-4(r22)
    71fc:	013fff84 	movi	r4,-2
    7200:	98fffe04 	addi	r3,r19,-8
    7204:	1104703a 	and	r2,r2,r4
    7208:	9085883a 	add	r2,r18,r2
    720c:	10c06726 	beq	r2,r3,73ac <_realloc_r+0x3b0>
    7210:	89bfff04 	addi	r6,r17,-4
    7214:	30800968 	cmpgeui	r2,r6,37
    7218:	1000761e 	bne	r2,zero,73f4 <_realloc_r+0x3f8>
    721c:	30800530 	cmpltui	r2,r6,20
    7220:	b1000017 	ldw	r4,0(r22)
    7224:	10003726 	beq	r2,zero,7304 <_realloc_r+0x308>
    7228:	9805883a 	mov	r2,r19
    722c:	b007883a 	mov	r3,r22
    7230:	11000015 	stw	r4,0(r2)
    7234:	19000117 	ldw	r4,4(r3)
    7238:	11000115 	stw	r4,4(r2)
    723c:	18c00217 	ldw	r3,8(r3)
    7240:	10c00215 	stw	r3,8(r2)
    7244:	b00b883a 	mov	r5,r22
    7248:	a809883a 	mov	r4,r21
    724c:	00049340 	call	4934 <_free_r>
    7250:	a809883a 	mov	r4,r21
    7254:	000d3f00 	call	d3f0 <__malloc_unlock>
    7258:	003fd306 	br	71a8 <_realloc_r+0x1ac>
    725c:	300b883a 	mov	r5,r6
    7260:	dfc00a17 	ldw	ra,40(sp)
    7264:	df000917 	ldw	fp,36(sp)
    7268:	ddc00817 	ldw	r23,32(sp)
    726c:	dd800717 	ldw	r22,28(sp)
    7270:	dd400617 	ldw	r21,24(sp)
    7274:	dd000517 	ldw	r20,20(sp)
    7278:	dcc00417 	ldw	r19,16(sp)
    727c:	dc800317 	ldw	r18,12(sp)
    7280:	dc400217 	ldw	r17,8(sp)
    7284:	dc000117 	ldw	r16,4(sp)
    7288:	dec00b04 	addi	sp,sp,44
    728c:	00054501 	jmpi	5450 <_malloc_r>
    7290:	340cb03a 	or	r6,r6,r16
    7294:	91800115 	stw	r6,4(r18)
    7298:	940b883a 	add	r5,r18,r16
    729c:	10800054 	ori	r2,r2,1
    72a0:	28800115 	stw	r2,4(r5)
    72a4:	a0800117 	ldw	r2,4(r20)
    72a8:	29400204 	addi	r5,r5,8
    72ac:	a809883a 	mov	r4,r21
    72b0:	10800054 	ori	r2,r2,1
    72b4:	a0800115 	stw	r2,4(r20)
    72b8:	00049340 	call	4934 <_free_r>
    72bc:	003fb006 	br	7180 <_realloc_r+0x184>
    72c0:	2148703a 	and	r4,r4,r5
    72c4:	890b883a 	add	r5,r17,r4
    72c8:	81800404 	addi	r6,r16,16
    72cc:	29bf7716 	blt	r5,r6,70ac <_realloc_r+0xb0>
    72d0:	9425883a 	add	r18,r18,r16
    72d4:	2c05c83a 	sub	r2,r5,r16
    72d8:	e4800215 	stw	r18,8(fp)
    72dc:	10800054 	ori	r2,r2,1
    72e0:	90800115 	stw	r2,4(r18)
    72e4:	b0bfff17 	ldw	r2,-4(r22)
    72e8:	a809883a 	mov	r4,r21
    72ec:	b027883a 	mov	r19,r22
    72f0:	1080004c 	andi	r2,r2,1
    72f4:	1420b03a 	or	r16,r2,r16
    72f8:	b43fff15 	stw	r16,-4(r22)
    72fc:	000d3f00 	call	d3f0 <__malloc_unlock>
    7300:	003fa906 	br	71a8 <_realloc_r+0x1ac>
    7304:	99000015 	stw	r4,0(r19)
    7308:	b0c00117 	ldw	r3,4(r22)
    730c:	30800728 	cmpgeui	r2,r6,28
    7310:	98c00115 	stw	r3,4(r19)
    7314:	1000611e 	bne	r2,zero,749c <_realloc_r+0x4a0>
    7318:	b0c00204 	addi	r3,r22,8
    731c:	98800204 	addi	r2,r19,8
    7320:	b1000217 	ldw	r4,8(r22)
    7324:	003fc206 	br	7230 <_realloc_r+0x234>
    7328:	a0800317 	ldw	r2,12(r20)
    732c:	a0c00217 	ldw	r3,8(r20)
    7330:	89bfff04 	addi	r6,r17,-4
    7334:	31000968 	cmpgeui	r4,r6,37
    7338:	18800315 	stw	r2,12(r3)
    733c:	10c00215 	stw	r3,8(r2)
    7340:	38c00217 	ldw	r3,8(r7)
    7344:	38800317 	ldw	r2,12(r7)
    7348:	3a000204 	addi	r8,r7,8
    734c:	3de9883a 	add	r20,r7,r23
    7350:	18800315 	stw	r2,12(r3)
    7354:	10c00215 	stw	r3,8(r2)
    7358:	20006f1e 	bne	r4,zero,7518 <_realloc_r+0x51c>
    735c:	30800530 	cmpltui	r2,r6,20
    7360:	b0c00017 	ldw	r3,0(r22)
    7364:	10006a1e 	bne	r2,zero,7510 <_realloc_r+0x514>
    7368:	38c00215 	stw	r3,8(r7)
    736c:	b0c00117 	ldw	r3,4(r22)
    7370:	30800728 	cmpgeui	r2,r6,28
    7374:	38c00315 	stw	r3,12(r7)
    7378:	10007a1e 	bne	r2,zero,7564 <_realloc_r+0x568>
    737c:	b0c00217 	ldw	r3,8(r22)
    7380:	38800404 	addi	r2,r7,16
    7384:	b5800204 	addi	r22,r22,8
    7388:	10c00015 	stw	r3,0(r2)
    738c:	b0c00117 	ldw	r3,4(r22)
    7390:	b823883a 	mov	r17,r23
    7394:	3825883a 	mov	r18,r7
    7398:	10c00115 	stw	r3,4(r2)
    739c:	b0c00217 	ldw	r3,8(r22)
    73a0:	402d883a 	mov	r22,r8
    73a4:	10c00215 	stw	r3,8(r2)
    73a8:	003f6b06 	br	7158 <_realloc_r+0x15c>
    73ac:	98bfff17 	ldw	r2,-4(r19)
    73b0:	00ffff04 	movi	r3,-4
    73b4:	10c4703a 	and	r2,r2,r3
    73b8:	88a3883a 	add	r17,r17,r2
    73bc:	9469883a 	add	r20,r18,r17
    73c0:	003f6506 	br	7158 <_realloc_r+0x15c>
    73c4:	b1fffe17 	ldw	r7,-8(r22)
    73c8:	91cfc83a 	sub	r7,r18,r7
    73cc:	39000117 	ldw	r4,4(r7)
    73d0:	214a703a 	and	r5,r4,r5
    73d4:	003f4106 	br	70dc <_realloc_r+0xe0>
    73d8:	a0800317 	ldw	r2,12(r20)
    73dc:	a0c00217 	ldw	r3,8(r20)
    73e0:	2823883a 	mov	r17,r5
    73e4:	9169883a 	add	r20,r18,r5
    73e8:	18800315 	stw	r2,12(r3)
    73ec:	10c00215 	stw	r3,8(r2)
    73f0:	003f5906 	br	7158 <_realloc_r+0x15c>
    73f4:	b00b883a 	mov	r5,r22
    73f8:	9809883a 	mov	r4,r19
    73fc:	0005e2c0 	call	5e2c <memmove>
    7400:	003f9006 	br	7244 <_realloc_r+0x248>
    7404:	80800404 	addi	r2,r16,16
    7408:	b8bf3416 	blt	r23,r2,70dc <_realloc_r+0xe0>
    740c:	38800317 	ldw	r2,12(r7)
    7410:	38c00217 	ldw	r3,8(r7)
    7414:	89bfff04 	addi	r6,r17,-4
    7418:	31000968 	cmpgeui	r4,r6,37
    741c:	18800315 	stw	r2,12(r3)
    7420:	10c00215 	stw	r3,8(r2)
    7424:	3cc00204 	addi	r19,r7,8
    7428:	20005a1e 	bne	r4,zero,7594 <_realloc_r+0x598>
    742c:	30800530 	cmpltui	r2,r6,20
    7430:	b0c00017 	ldw	r3,0(r22)
    7434:	1000551e 	bne	r2,zero,758c <_realloc_r+0x590>
    7438:	38c00215 	stw	r3,8(r7)
    743c:	b0c00117 	ldw	r3,4(r22)
    7440:	30800728 	cmpgeui	r2,r6,28
    7444:	38c00315 	stw	r3,12(r7)
    7448:	1000661e 	bne	r2,zero,75e4 <_realloc_r+0x5e8>
    744c:	b0c00217 	ldw	r3,8(r22)
    7450:	38800404 	addi	r2,r7,16
    7454:	b5800204 	addi	r22,r22,8
    7458:	10c00015 	stw	r3,0(r2)
    745c:	b0c00117 	ldw	r3,4(r22)
    7460:	10c00115 	stw	r3,4(r2)
    7464:	b0c00217 	ldw	r3,8(r22)
    7468:	10c00215 	stw	r3,8(r2)
    746c:	3c07883a 	add	r3,r7,r16
    7470:	bc05c83a 	sub	r2,r23,r16
    7474:	e0c00215 	stw	r3,8(fp)
    7478:	10800054 	ori	r2,r2,1
    747c:	18800115 	stw	r2,4(r3)
    7480:	38800117 	ldw	r2,4(r7)
    7484:	a809883a 	mov	r4,r21
    7488:	1080004c 	andi	r2,r2,1
    748c:	1420b03a 	or	r16,r2,r16
    7490:	3c000115 	stw	r16,4(r7)
    7494:	000d3f00 	call	d3f0 <__malloc_unlock>
    7498:	003f4306 	br	71a8 <_realloc_r+0x1ac>
    749c:	b0800217 	ldw	r2,8(r22)
    74a0:	31800920 	cmpeqi	r6,r6,36
    74a4:	98800215 	stw	r2,8(r19)
    74a8:	b0800317 	ldw	r2,12(r22)
    74ac:	98800315 	stw	r2,12(r19)
    74b0:	3000061e 	bne	r6,zero,74cc <_realloc_r+0x4d0>
    74b4:	b0c00404 	addi	r3,r22,16
    74b8:	98800404 	addi	r2,r19,16
    74bc:	b1000417 	ldw	r4,16(r22)
    74c0:	003f5b06 	br	7230 <_realloc_r+0x234>
    74c4:	1805883a 	mov	r2,r3
    74c8:	003f1b06 	br	7138 <_realloc_r+0x13c>
    74cc:	b1000417 	ldw	r4,16(r22)
    74d0:	b0c00604 	addi	r3,r22,24
    74d4:	98800604 	addi	r2,r19,24
    74d8:	99000415 	stw	r4,16(r19)
    74dc:	b1000517 	ldw	r4,20(r22)
    74e0:	99000515 	stw	r4,20(r19)
    74e4:	b1000617 	ldw	r4,24(r22)
    74e8:	003f5106 	br	7230 <_realloc_r+0x234>
    74ec:	b00b883a 	mov	r5,r22
    74f0:	1809883a 	mov	r4,r3
    74f4:	d9c00015 	stw	r7,0(sp)
    74f8:	0005e2c0 	call	5e2c <memmove>
    74fc:	d9c00017 	ldw	r7,0(sp)
    7500:	102d883a 	mov	r22,r2
    7504:	b823883a 	mov	r17,r23
    7508:	3825883a 	mov	r18,r7
    750c:	003f1206 	br	7158 <_realloc_r+0x15c>
    7510:	4005883a 	mov	r2,r8
    7514:	003f9c06 	br	7388 <_realloc_r+0x38c>
    7518:	b00b883a 	mov	r5,r22
    751c:	4009883a 	mov	r4,r8
    7520:	d9c00015 	stw	r7,0(sp)
    7524:	0005e2c0 	call	5e2c <memmove>
    7528:	d9c00017 	ldw	r7,0(sp)
    752c:	102d883a 	mov	r22,r2
    7530:	b823883a 	mov	r17,r23
    7534:	3825883a 	mov	r18,r7
    7538:	003f0706 	br	7158 <_realloc_r+0x15c>
    753c:	b0800217 	ldw	r2,8(r22)
    7540:	31800920 	cmpeqi	r6,r6,36
    7544:	38800415 	stw	r2,16(r7)
    7548:	b0800317 	ldw	r2,12(r22)
    754c:	38800515 	stw	r2,20(r7)
    7550:	b1000417 	ldw	r4,16(r22)
    7554:	3000151e 	bne	r6,zero,75ac <_realloc_r+0x5b0>
    7558:	38800604 	addi	r2,r7,24
    755c:	b5800404 	addi	r22,r22,16
    7560:	003ef506 	br	7138 <_realloc_r+0x13c>
    7564:	b0800217 	ldw	r2,8(r22)
    7568:	31800920 	cmpeqi	r6,r6,36
    756c:	38800415 	stw	r2,16(r7)
    7570:	b0800317 	ldw	r2,12(r22)
    7574:	38800515 	stw	r2,20(r7)
    7578:	b0c00417 	ldw	r3,16(r22)
    757c:	3000121e 	bne	r6,zero,75c8 <_realloc_r+0x5cc>
    7580:	38800604 	addi	r2,r7,24
    7584:	b5800404 	addi	r22,r22,16
    7588:	003f7f06 	br	7388 <_realloc_r+0x38c>
    758c:	9805883a 	mov	r2,r19
    7590:	003fb106 	br	7458 <_realloc_r+0x45c>
    7594:	b00b883a 	mov	r5,r22
    7598:	9809883a 	mov	r4,r19
    759c:	d9c00015 	stw	r7,0(sp)
    75a0:	0005e2c0 	call	5e2c <memmove>
    75a4:	d9c00017 	ldw	r7,0(sp)
    75a8:	003fb006 	br	746c <_realloc_r+0x470>
    75ac:	b5800604 	addi	r22,r22,24
    75b0:	39000615 	stw	r4,24(r7)
    75b4:	b13fff17 	ldw	r4,-4(r22)
    75b8:	38800804 	addi	r2,r7,32
    75bc:	39000715 	stw	r4,28(r7)
    75c0:	b1000017 	ldw	r4,0(r22)
    75c4:	003edc06 	br	7138 <_realloc_r+0x13c>
    75c8:	b5800604 	addi	r22,r22,24
    75cc:	38c00615 	stw	r3,24(r7)
    75d0:	b0ffff17 	ldw	r3,-4(r22)
    75d4:	38800804 	addi	r2,r7,32
    75d8:	38c00715 	stw	r3,28(r7)
    75dc:	b0c00017 	ldw	r3,0(r22)
    75e0:	003f6906 	br	7388 <_realloc_r+0x38c>
    75e4:	b0800217 	ldw	r2,8(r22)
    75e8:	31800920 	cmpeqi	r6,r6,36
    75ec:	38800415 	stw	r2,16(r7)
    75f0:	b0800317 	ldw	r2,12(r22)
    75f4:	38800515 	stw	r2,20(r7)
    75f8:	b0c00417 	ldw	r3,16(r22)
    75fc:	3000031e 	bne	r6,zero,760c <_realloc_r+0x610>
    7600:	38800604 	addi	r2,r7,24
    7604:	b5800404 	addi	r22,r22,16
    7608:	003f9306 	br	7458 <_realloc_r+0x45c>
    760c:	b5800604 	addi	r22,r22,24
    7610:	38c00615 	stw	r3,24(r7)
    7614:	b0ffff17 	ldw	r3,-4(r22)
    7618:	38800804 	addi	r2,r7,32
    761c:	38c00715 	stw	r3,28(r7)
    7620:	b0c00017 	ldw	r3,0(r22)
    7624:	003f8c06 	br	7458 <_realloc_r+0x45c>

00007628 <_sbrk_r>:
    7628:	defffe04 	addi	sp,sp,-8
    762c:	dc000015 	stw	r16,0(sp)
    7630:	00800074 	movhi	r2,1
    7634:	2021883a 	mov	r16,r4
    7638:	2809883a 	mov	r4,r5
    763c:	dfc00115 	stw	ra,4(sp)
    7640:	100c7515 	stw	zero,12756(r2)
    7644:	000d5c80 	call	d5c8 <sbrk>
    7648:	10ffffd8 	cmpnei	r3,r2,-1
    764c:	18000426 	beq	r3,zero,7660 <_sbrk_r+0x38>
    7650:	dfc00117 	ldw	ra,4(sp)
    7654:	dc000017 	ldw	r16,0(sp)
    7658:	dec00204 	addi	sp,sp,8
    765c:	f800283a 	ret
    7660:	00c00074 	movhi	r3,1
    7664:	18cc7517 	ldw	r3,12756(r3)
    7668:	183ff926 	beq	r3,zero,7650 <_sbrk_r+0x28>
    766c:	80c00015 	stw	r3,0(r16)
    7670:	dfc00117 	ldw	ra,4(sp)
    7674:	dc000017 	ldw	r16,0(sp)
    7678:	dec00204 	addi	sp,sp,8
    767c:	f800283a 	ret

00007680 <__sread>:
    7680:	defffe04 	addi	sp,sp,-8
    7684:	dc000015 	stw	r16,0(sp)
    7688:	2821883a 	mov	r16,r5
    768c:	2940038f 	ldh	r5,14(r5)
    7690:	dfc00115 	stw	ra,4(sp)
    7694:	000935c0 	call	935c <_read_r>
    7698:	10000716 	blt	r2,zero,76b8 <__sread+0x38>
    769c:	80c01417 	ldw	r3,80(r16)
    76a0:	1887883a 	add	r3,r3,r2
    76a4:	80c01415 	stw	r3,80(r16)
    76a8:	dfc00117 	ldw	ra,4(sp)
    76ac:	dc000017 	ldw	r16,0(sp)
    76b0:	dec00204 	addi	sp,sp,8
    76b4:	f800283a 	ret
    76b8:	80c0030b 	ldhu	r3,12(r16)
    76bc:	18fbffcc 	andi	r3,r3,61439
    76c0:	80c0030d 	sth	r3,12(r16)
    76c4:	dfc00117 	ldw	ra,4(sp)
    76c8:	dc000017 	ldw	r16,0(sp)
    76cc:	dec00204 	addi	sp,sp,8
    76d0:	f800283a 	ret

000076d4 <__seofread>:
    76d4:	0005883a 	mov	r2,zero
    76d8:	f800283a 	ret

000076dc <__swrite>:
    76dc:	2880030b 	ldhu	r2,12(r5)
    76e0:	defffb04 	addi	sp,sp,-20
    76e4:	dcc00315 	stw	r19,12(sp)
    76e8:	dc800215 	stw	r18,8(sp)
    76ec:	dc400115 	stw	r17,4(sp)
    76f0:	dc000015 	stw	r16,0(sp)
    76f4:	dfc00415 	stw	ra,16(sp)
    76f8:	10c0400c 	andi	r3,r2,256
    76fc:	2821883a 	mov	r16,r5
    7700:	2023883a 	mov	r17,r4
    7704:	3025883a 	mov	r18,r6
    7708:	3827883a 	mov	r19,r7
    770c:	2940038f 	ldh	r5,14(r5)
    7710:	18000c1e 	bne	r3,zero,7744 <__swrite+0x68>
    7714:	10bbffcc 	andi	r2,r2,61439
    7718:	980f883a 	mov	r7,r19
    771c:	900d883a 	mov	r6,r18
    7720:	8809883a 	mov	r4,r17
    7724:	8080030d 	sth	r2,12(r16)
    7728:	dfc00417 	ldw	ra,16(sp)
    772c:	dcc00317 	ldw	r19,12(sp)
    7730:	dc800217 	ldw	r18,8(sp)
    7734:	dc400117 	ldw	r17,4(sp)
    7738:	dc000017 	ldw	r16,0(sp)
    773c:	dec00504 	addi	sp,sp,20
    7740:	0008ce01 	jmpi	8ce0 <_write_r>
    7744:	01c00084 	movi	r7,2
    7748:	000d883a 	mov	r6,zero
    774c:	00092a80 	call	92a8 <_lseek_r>
    7750:	8080030b 	ldhu	r2,12(r16)
    7754:	8140038f 	ldh	r5,14(r16)
    7758:	003fee06 	br	7714 <__swrite+0x38>

0000775c <__sseek>:
    775c:	defffe04 	addi	sp,sp,-8
    7760:	dc000015 	stw	r16,0(sp)
    7764:	2821883a 	mov	r16,r5
    7768:	2940038f 	ldh	r5,14(r5)
    776c:	dfc00115 	stw	ra,4(sp)
    7770:	00092a80 	call	92a8 <_lseek_r>
    7774:	10ffffd8 	cmpnei	r3,r2,-1
    7778:	18000826 	beq	r3,zero,779c <__sseek+0x40>
    777c:	80c0030b 	ldhu	r3,12(r16)
    7780:	80801415 	stw	r2,80(r16)
    7784:	18c40014 	ori	r3,r3,4096
    7788:	80c0030d 	sth	r3,12(r16)
    778c:	dfc00117 	ldw	ra,4(sp)
    7790:	dc000017 	ldw	r16,0(sp)
    7794:	dec00204 	addi	sp,sp,8
    7798:	f800283a 	ret
    779c:	80c0030b 	ldhu	r3,12(r16)
    77a0:	18fbffcc 	andi	r3,r3,61439
    77a4:	80c0030d 	sth	r3,12(r16)
    77a8:	dfc00117 	ldw	ra,4(sp)
    77ac:	dc000017 	ldw	r16,0(sp)
    77b0:	dec00204 	addi	sp,sp,8
    77b4:	f800283a 	ret

000077b8 <__sclose>:
    77b8:	2940038f 	ldh	r5,14(r5)
    77bc:	0008d441 	jmpi	8d44 <_close_r>

000077c0 <__sprint_r.part.0>:
    77c0:	28801917 	ldw	r2,100(r5)
    77c4:	defff604 	addi	sp,sp,-40
    77c8:	dd000415 	stw	r20,16(sp)
    77cc:	dfc00915 	stw	ra,36(sp)
    77d0:	df000815 	stw	fp,32(sp)
    77d4:	ddc00715 	stw	r23,28(sp)
    77d8:	dd800615 	stw	r22,24(sp)
    77dc:	dd400515 	stw	r21,20(sp)
    77e0:	dcc00315 	stw	r19,12(sp)
    77e4:	dc800215 	stw	r18,8(sp)
    77e8:	dc400115 	stw	r17,4(sp)
    77ec:	dc000015 	stw	r16,0(sp)
    77f0:	1088000c 	andi	r2,r2,8192
    77f4:	3029883a 	mov	r20,r6
    77f8:	10002c26 	beq	r2,zero,78ac <__sprint_r.part.0+0xec>
    77fc:	30800217 	ldw	r2,8(r6)
    7800:	2823883a 	mov	r17,r5
    7804:	2027883a 	mov	r19,r4
    7808:	35400017 	ldw	r21,0(r6)
    780c:	05ffff04 	movi	r23,-4
    7810:	10002426 	beq	r2,zero,78a4 <__sprint_r.part.0+0xe4>
    7814:	ad800117 	ldw	r22,4(r21)
    7818:	ac000017 	ldw	r16,0(r21)
    781c:	b024d0ba 	srli	r18,r22,2
    7820:	90001b26 	beq	r18,zero,7890 <__sprint_r.part.0+0xd0>
    7824:	0039883a 	mov	fp,zero
    7828:	00000206 	br	7834 <__sprint_r.part.0+0x74>
    782c:	84000104 	addi	r16,r16,4
    7830:	97001626 	beq	r18,fp,788c <__sprint_r.part.0+0xcc>
    7834:	81400017 	ldw	r5,0(r16)
    7838:	880d883a 	mov	r6,r17
    783c:	9809883a 	mov	r4,r19
    7840:	00090c00 	call	90c0 <_fputwc_r>
    7844:	10bfffe0 	cmpeqi	r2,r2,-1
    7848:	e7000044 	addi	fp,fp,1
    784c:	103ff726 	beq	r2,zero,782c <__sprint_r.part.0+0x6c>
    7850:	00bfffc4 	movi	r2,-1
    7854:	a0000215 	stw	zero,8(r20)
    7858:	a0000115 	stw	zero,4(r20)
    785c:	dfc00917 	ldw	ra,36(sp)
    7860:	df000817 	ldw	fp,32(sp)
    7864:	ddc00717 	ldw	r23,28(sp)
    7868:	dd800617 	ldw	r22,24(sp)
    786c:	dd400517 	ldw	r21,20(sp)
    7870:	dd000417 	ldw	r20,16(sp)
    7874:	dcc00317 	ldw	r19,12(sp)
    7878:	dc800217 	ldw	r18,8(sp)
    787c:	dc400117 	ldw	r17,4(sp)
    7880:	dc000017 	ldw	r16,0(sp)
    7884:	dec00a04 	addi	sp,sp,40
    7888:	f800283a 	ret
    788c:	a0800217 	ldw	r2,8(r20)
    7890:	b5ec703a 	and	r22,r22,r23
    7894:	1585c83a 	sub	r2,r2,r22
    7898:	a0800215 	stw	r2,8(r20)
    789c:	ad400204 	addi	r21,r21,8
    78a0:	103fdc1e 	bne	r2,zero,7814 <__sprint_r.part.0+0x54>
    78a4:	0005883a 	mov	r2,zero
    78a8:	003fea06 	br	7854 <__sprint_r.part.0+0x94>
    78ac:	0004c300 	call	4c30 <__sfvwrite_r>
    78b0:	003fe806 	br	7854 <__sprint_r.part.0+0x94>

000078b4 <__sprint_r>:
    78b4:	30c00217 	ldw	r3,8(r6)
    78b8:	18000126 	beq	r3,zero,78c0 <__sprint_r+0xc>
    78bc:	00077c01 	jmpi	77c0 <__sprint_r.part.0>
    78c0:	30000115 	stw	zero,4(r6)
    78c4:	0005883a 	mov	r2,zero
    78c8:	f800283a 	ret

000078cc <___vfiprintf_internal_r>:
    78cc:	deffd004 	addi	sp,sp,-192
    78d0:	df002e15 	stw	fp,184(sp)
    78d4:	dcc02915 	stw	r19,164(sp)
    78d8:	dc802815 	stw	r18,160(sp)
    78dc:	dfc02f15 	stw	ra,188(sp)
    78e0:	ddc02d15 	stw	r23,180(sp)
    78e4:	dd802c15 	stw	r22,176(sp)
    78e8:	dd402b15 	stw	r21,172(sp)
    78ec:	dd002a15 	stw	r20,168(sp)
    78f0:	dc402715 	stw	r17,156(sp)
    78f4:	dc002615 	stw	r16,152(sp)
    78f8:	d9c00315 	stw	r7,12(sp)
    78fc:	2027883a 	mov	r19,r4
    7900:	2825883a 	mov	r18,r5
    7904:	3039883a 	mov	fp,r6
    7908:	20000226 	beq	r4,zero,7914 <___vfiprintf_internal_r+0x48>
    790c:	20800e17 	ldw	r2,56(r4)
    7910:	1002ba26 	beq	r2,zero,83fc <___vfiprintf_internal_r+0xb30>
    7914:	9080030b 	ldhu	r2,12(r18)
    7918:	10c8000c 	andi	r3,r2,8192
    791c:	1800061e 	bne	r3,zero,7938 <___vfiprintf_internal_r+0x6c>
    7920:	90c01917 	ldw	r3,100(r18)
    7924:	0137ffc4 	movi	r4,-8193
    7928:	10880014 	ori	r2,r2,8192
    792c:	1906703a 	and	r3,r3,r4
    7930:	9080030d 	sth	r2,12(r18)
    7934:	90c01915 	stw	r3,100(r18)
    7938:	10c0020c 	andi	r3,r2,8
    793c:	18009426 	beq	r3,zero,7b90 <___vfiprintf_internal_r+0x2c4>
    7940:	90c00417 	ldw	r3,16(r18)
    7944:	18009226 	beq	r3,zero,7b90 <___vfiprintf_internal_r+0x2c4>
    7948:	1080068c 	andi	r2,r2,26
    794c:	10800298 	cmpnei	r2,r2,10
    7950:	10009726 	beq	r2,zero,7bb0 <___vfiprintf_internal_r+0x2e4>
    7954:	dc401604 	addi	r17,sp,88
    7958:	dc400915 	stw	r17,36(sp)
    795c:	d8000b15 	stw	zero,44(sp)
    7960:	d8000a15 	stw	zero,40(sp)
    7964:	8811883a 	mov	r8,r17
    7968:	d8000415 	stw	zero,16(sp)
    796c:	d8000015 	stw	zero,0(sp)
    7970:	e0800007 	ldb	r2,0(fp)
    7974:	1000a226 	beq	r2,zero,7c00 <___vfiprintf_internal_r+0x334>
    7978:	10800960 	cmpeqi	r2,r2,37
    797c:	1003eb1e 	bne	r2,zero,892c <___vfiprintf_internal_r+0x1060>
    7980:	e021883a 	mov	r16,fp
    7984:	00000206 	br	7990 <___vfiprintf_internal_r+0xc4>
    7988:	18009226 	beq	r3,zero,7bd4 <___vfiprintf_internal_r+0x308>
    798c:	a021883a 	mov	r16,r20
    7990:	80800047 	ldb	r2,1(r16)
    7994:	85000044 	addi	r20,r16,1
    7998:	10c00958 	cmpnei	r3,r2,37
    799c:	103ffa1e 	bne	r2,zero,7988 <___vfiprintf_internal_r+0xbc>
    79a0:	a72bc83a 	sub	r21,r20,fp
    79a4:	a8009626 	beq	r21,zero,7c00 <___vfiprintf_internal_r+0x334>
    79a8:	d8c00b17 	ldw	r3,44(sp)
    79ac:	d8800a17 	ldw	r2,40(sp)
    79b0:	47000015 	stw	fp,0(r8)
    79b4:	a8c7883a 	add	r3,r21,r3
    79b8:	10800044 	addi	r2,r2,1
    79bc:	d8800a15 	stw	r2,40(sp)
    79c0:	45400115 	stw	r21,4(r8)
    79c4:	d8c00b15 	stw	r3,44(sp)
    79c8:	10800208 	cmpgei	r2,r2,8
    79cc:	1000841e 	bne	r2,zero,7be0 <___vfiprintf_internal_r+0x314>
    79d0:	42000204 	addi	r8,r8,8
    79d4:	d8c00017 	ldw	r3,0(sp)
    79d8:	80800047 	ldb	r2,1(r16)
    79dc:	1d47883a 	add	r3,r3,r21
    79e0:	d8c00015 	stw	r3,0(sp)
    79e4:	10008626 	beq	r2,zero,7c00 <___vfiprintf_internal_r+0x334>
    79e8:	a0800047 	ldb	r2,1(r20)
    79ec:	a7000044 	addi	fp,r20,1
    79f0:	d8000845 	stb	zero,33(sp)
    79f4:	000b883a 	mov	r5,zero
    79f8:	000d883a 	mov	r6,zero
    79fc:	027fffc4 	movi	r9,-1
    7a00:	0021883a 	mov	r16,zero
    7a04:	0019883a 	mov	r12,zero
    7a08:	e7000044 	addi	fp,fp,1
    7a0c:	10fff804 	addi	r3,r2,-32
    7a10:	19001668 	cmpgeui	r4,r3,89
    7a14:	20009e1e 	bne	r4,zero,7c90 <___vfiprintf_internal_r+0x3c4>
    7a18:	180690ba 	slli	r3,r3,2
    7a1c:	01000034 	movhi	r4,0
    7a20:	1909883a 	add	r4,r3,r4
    7a24:	20de8b17 	ldw	r3,31276(r4)
    7a28:	1800683a 	jmp	r3
    7a2c:	00007d68 	cmpgeui	zero,zero,501
    7a30:	00007c90 	cmplti	zero,zero,498
    7a34:	00007c90 	cmplti	zero,zero,498
    7a38:	00007d5c 	xori	zero,zero,501
    7a3c:	00007c90 	cmplti	zero,zero,498
    7a40:	00007c90 	cmplti	zero,zero,498
    7a44:	00007c90 	cmplti	zero,zero,498
    7a48:	00007c90 	cmplti	zero,zero,498
    7a4c:	00007c90 	cmplti	zero,zero,498
    7a50:	00007c90 	cmplti	zero,zero,498
    7a54:	00007d34 	movhi	zero,500
    7a58:	00007d24 	muli	zero,zero,500
    7a5c:	00007c90 	cmplti	zero,zero,498
    7a60:	00007d0c 	andi	zero,zero,500
    7a64:	00007cc0 	call	7cc <___vfprintf_internal_r+0x274>
    7a68:	00007c90 	cmplti	zero,zero,498
    7a6c:	00007cb4 	movhi	zero,498
    7a70:	00007c58 	cmpnei	zero,zero,497
    7a74:	00007c58 	cmpnei	zero,zero,497
    7a78:	00007c58 	cmpnei	zero,zero,497
    7a7c:	00007c58 	cmpnei	zero,zero,497
    7a80:	00007c58 	cmpnei	zero,zero,497
    7a84:	00007c58 	cmpnei	zero,zero,497
    7a88:	00007c58 	cmpnei	zero,zero,497
    7a8c:	00007c58 	cmpnei	zero,zero,497
    7a90:	00007c58 	cmpnei	zero,zero,497
    7a94:	00007c90 	cmplti	zero,zero,498
    7a98:	00007c90 	cmplti	zero,zero,498
    7a9c:	00007c90 	cmplti	zero,zero,498
    7aa0:	00007c90 	cmplti	zero,zero,498
    7aa4:	00007c90 	cmplti	zero,zero,498
    7aa8:	00007c90 	cmplti	zero,zero,498
    7aac:	00007c90 	cmplti	zero,zero,498
    7ab0:	00007c90 	cmplti	zero,zero,498
    7ab4:	00007c90 	cmplti	zero,zero,498
    7ab8:	00007c90 	cmplti	zero,zero,498
    7abc:	00008324 	muli	zero,zero,524
    7ac0:	00007c90 	cmplti	zero,zero,498
    7ac4:	00007c90 	cmplti	zero,zero,498
    7ac8:	00007c90 	cmplti	zero,zero,498
    7acc:	00007c90 	cmplti	zero,zero,498
    7ad0:	00007c90 	cmplti	zero,zero,498
    7ad4:	00007c90 	cmplti	zero,zero,498
    7ad8:	00007c90 	cmplti	zero,zero,498
    7adc:	00007c90 	cmplti	zero,zero,498
    7ae0:	00007c90 	cmplti	zero,zero,498
    7ae4:	00007c90 	cmplti	zero,zero,498
    7ae8:	000082bc 	xorhi	zero,zero,522
    7aec:	00007c90 	cmplti	zero,zero,498
    7af0:	00007c90 	cmplti	zero,zero,498
    7af4:	00007c90 	cmplti	zero,zero,498
    7af8:	00007c90 	cmplti	zero,zero,498
    7afc:	00007c90 	cmplti	zero,zero,498
    7b00:	000082f0 	cmpltui	zero,zero,523
    7b04:	00007c90 	cmplti	zero,zero,498
    7b08:	00007c90 	cmplti	zero,zero,498
    7b0c:	00007ec0 	call	7ec <___vfprintf_internal_r+0x294>
    7b10:	00007c90 	cmplti	zero,zero,498
    7b14:	00007c90 	cmplti	zero,zero,498
    7b18:	00007c90 	cmplti	zero,zero,498
    7b1c:	00007c90 	cmplti	zero,zero,498
    7b20:	00007c90 	cmplti	zero,zero,498
    7b24:	00007c90 	cmplti	zero,zero,498
    7b28:	00007c90 	cmplti	zero,zero,498
    7b2c:	00007c90 	cmplti	zero,zero,498
    7b30:	00007c90 	cmplti	zero,zero,498
    7b34:	00007c90 	cmplti	zero,zero,498
    7b38:	0000805c 	xori	zero,zero,513
    7b3c:	00007fe8 	cmpgeui	zero,zero,511
    7b40:	00007c90 	cmplti	zero,zero,498
    7b44:	00007c90 	cmplti	zero,zero,498
    7b48:	00007c90 	cmplti	zero,zero,498
    7b4c:	00007df0 	cmpltui	zero,zero,503
    7b50:	00007fe8 	cmpgeui	zero,zero,511
    7b54:	00007c90 	cmplti	zero,zero,498
    7b58:	00007c90 	cmplti	zero,zero,498
    7b5c:	00007ddc 	xori	zero,zero,503
    7b60:	00007c90 	cmplti	zero,zero,498
    7b64:	00007fa8 	cmpgeui	zero,zero,510
    7b68:	00007e80 	call	7e8 <___vfprintf_internal_r+0x290>
    7b6c:	00007e08 	cmpgei	zero,zero,504
    7b70:	00007dfc 	xorhi	zero,zero,503
    7b74:	00007c90 	cmplti	zero,zero,498
    7b78:	00007f48 	cmpgei	zero,zero,509
    7b7c:	00007c90 	cmplti	zero,zero,498
    7b80:	00007f08 	cmpgei	zero,zero,508
    7b84:	00007c90 	cmplti	zero,zero,498
    7b88:	00007c90 	cmplti	zero,zero,498
    7b8c:	00007d94 	movui	zero,502
    7b90:	900b883a 	mov	r5,r18
    7b94:	9809883a 	mov	r4,r19
    7b98:	00027b80 	call	27b8 <__swsetup_r>
    7b9c:	10040b1e 	bne	r2,zero,8bcc <___vfiprintf_internal_r+0x1300>
    7ba0:	9080030b 	ldhu	r2,12(r18)
    7ba4:	1080068c 	andi	r2,r2,26
    7ba8:	10800298 	cmpnei	r2,r2,10
    7bac:	103f691e 	bne	r2,zero,7954 <___vfiprintf_internal_r+0x88>
    7bb0:	9080038f 	ldh	r2,14(r18)
    7bb4:	103f6716 	blt	r2,zero,7954 <___vfiprintf_internal_r+0x88>
    7bb8:	d9c00317 	ldw	r7,12(sp)
    7bbc:	e00d883a 	mov	r6,fp
    7bc0:	900b883a 	mov	r5,r18
    7bc4:	9809883a 	mov	r4,r19
    7bc8:	0008c200 	call	8c20 <__sbprintf>
    7bcc:	d8800015 	stw	r2,0(sp)
    7bd0:	00001406 	br	7c24 <___vfiprintf_internal_r+0x358>
    7bd4:	a72bc83a 	sub	r21,r20,fp
    7bd8:	a83f8326 	beq	r21,zero,79e8 <___vfiprintf_internal_r+0x11c>
    7bdc:	003f7206 	br	79a8 <___vfiprintf_internal_r+0xdc>
    7be0:	18032f26 	beq	r3,zero,88a0 <___vfiprintf_internal_r+0xfd4>
    7be4:	d9800904 	addi	r6,sp,36
    7be8:	900b883a 	mov	r5,r18
    7bec:	9809883a 	mov	r4,r19
    7bf0:	00077c00 	call	77c0 <__sprint_r.part.0>
    7bf4:	1000081e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    7bf8:	8811883a 	mov	r8,r17
    7bfc:	003f7506 	br	79d4 <___vfiprintf_internal_r+0x108>
    7c00:	d8800b17 	ldw	r2,44(sp)
    7c04:	10000426 	beq	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    7c08:	d9800904 	addi	r6,sp,36
    7c0c:	900b883a 	mov	r5,r18
    7c10:	9809883a 	mov	r4,r19
    7c14:	00077c00 	call	77c0 <__sprint_r.part.0>
    7c18:	9080030b 	ldhu	r2,12(r18)
    7c1c:	1080100c 	andi	r2,r2,64
    7c20:	1003ea1e 	bne	r2,zero,8bcc <___vfiprintf_internal_r+0x1300>
    7c24:	d8800017 	ldw	r2,0(sp)
    7c28:	dfc02f17 	ldw	ra,188(sp)
    7c2c:	df002e17 	ldw	fp,184(sp)
    7c30:	ddc02d17 	ldw	r23,180(sp)
    7c34:	dd802c17 	ldw	r22,176(sp)
    7c38:	dd402b17 	ldw	r21,172(sp)
    7c3c:	dd002a17 	ldw	r20,168(sp)
    7c40:	dcc02917 	ldw	r19,164(sp)
    7c44:	dc802817 	ldw	r18,160(sp)
    7c48:	dc402717 	ldw	r17,156(sp)
    7c4c:	dc002617 	ldw	r16,152(sp)
    7c50:	dec03004 	addi	sp,sp,192
    7c54:	f800283a 	ret
    7c58:	0021883a 	mov	r16,zero
    7c5c:	113ff404 	addi	r4,r2,-48
    7c60:	800690ba 	slli	r3,r16,2
    7c64:	e7000044 	addi	fp,fp,1
    7c68:	e0bfffc7 	ldb	r2,-1(fp)
    7c6c:	1c21883a 	add	r16,r3,r16
    7c70:	8421883a 	add	r16,r16,r16
    7c74:	2421883a 	add	r16,r4,r16
    7c78:	113ff404 	addi	r4,r2,-48
    7c7c:	20c002b0 	cmpltui	r3,r4,10
    7c80:	183ff71e 	bne	r3,zero,7c60 <___vfiprintf_internal_r+0x394>
    7c84:	10fff804 	addi	r3,r2,-32
    7c88:	19001668 	cmpgeui	r4,r3,89
    7c8c:	203f6226 	beq	r4,zero,7a18 <___vfiprintf_internal_r+0x14c>
    7c90:	29403fcc 	andi	r5,r5,255
    7c94:	2803ab1e 	bne	r5,zero,8b44 <___vfiprintf_internal_r+0x1278>
    7c98:	103fd926 	beq	r2,zero,7c00 <___vfiprintf_internal_r+0x334>
    7c9c:	d8800c05 	stb	r2,48(sp)
    7ca0:	d8000845 	stb	zero,33(sp)
    7ca4:	05400044 	movi	r21,1
    7ca8:	05800044 	movi	r22,1
    7cac:	ddc00c04 	addi	r23,sp,48
    7cb0:	0000f306 	br	8080 <___vfiprintf_internal_r+0x7b4>
    7cb4:	63002014 	ori	r12,r12,128
    7cb8:	e0800007 	ldb	r2,0(fp)
    7cbc:	003f5206 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7cc0:	e0800007 	ldb	r2,0(fp)
    7cc4:	e0c00044 	addi	r3,fp,1
    7cc8:	11000aa0 	cmpeqi	r4,r2,42
    7ccc:	2003c21e 	bne	r4,zero,8bd8 <___vfiprintf_internal_r+0x130c>
    7cd0:	113ff404 	addi	r4,r2,-48
    7cd4:	21c002b0 	cmpltui	r7,r4,10
    7cd8:	1839883a 	mov	fp,r3
    7cdc:	0013883a 	mov	r9,zero
    7ce0:	383f4a26 	beq	r7,zero,7a0c <___vfiprintf_internal_r+0x140>
    7ce4:	480690ba 	slli	r3,r9,2
    7ce8:	e7000044 	addi	fp,fp,1
    7cec:	e0bfffc7 	ldb	r2,-1(fp)
    7cf0:	1a53883a 	add	r9,r3,r9
    7cf4:	4a53883a 	add	r9,r9,r9
    7cf8:	4913883a 	add	r9,r9,r4
    7cfc:	113ff404 	addi	r4,r2,-48
    7d00:	20c002b0 	cmpltui	r3,r4,10
    7d04:	183ff71e 	bne	r3,zero,7ce4 <___vfiprintf_internal_r+0x418>
    7d08:	003f4006 	br	7a0c <___vfiprintf_internal_r+0x140>
    7d0c:	e0800003 	ldbu	r2,0(fp)
    7d10:	10803fcc 	andi	r2,r2,255
    7d14:	1080201c 	xori	r2,r2,128
    7d18:	63000114 	ori	r12,r12,4
    7d1c:	10bfe004 	addi	r2,r2,-128
    7d20:	003f3906 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7d24:	01400044 	movi	r5,1
    7d28:	01800ac4 	movi	r6,43
    7d2c:	e0800007 	ldb	r2,0(fp)
    7d30:	003f3506 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7d34:	d8800317 	ldw	r2,12(sp)
    7d38:	14000017 	ldw	r16,0(r2)
    7d3c:	15c00104 	addi	r23,r2,4
    7d40:	e0800003 	ldbu	r2,0(fp)
    7d44:	80031416 	blt	r16,zero,8998 <___vfiprintf_internal_r+0x10cc>
    7d48:	ddc00315 	stw	r23,12(sp)
    7d4c:	10803fcc 	andi	r2,r2,255
    7d50:	1080201c 	xori	r2,r2,128
    7d54:	10bfe004 	addi	r2,r2,-128
    7d58:	003f2b06 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7d5c:	63000054 	ori	r12,r12,1
    7d60:	e0800007 	ldb	r2,0(fp)
    7d64:	003f2806 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7d68:	30c03fcc 	andi	r3,r6,255
    7d6c:	18c0201c 	xori	r3,r3,128
    7d70:	18ffe004 	addi	r3,r3,-128
    7d74:	e0800003 	ldbu	r2,0(fp)
    7d78:	183ff41e 	bne	r3,zero,7d4c <___vfiprintf_internal_r+0x480>
    7d7c:	10803fcc 	andi	r2,r2,255
    7d80:	1080201c 	xori	r2,r2,128
    7d84:	01400044 	movi	r5,1
    7d88:	01800804 	movi	r6,32
    7d8c:	10bfe004 	addi	r2,r2,-128
    7d90:	003f1d06 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7d94:	29403fcc 	andi	r5,r5,255
    7d98:	2803741e 	bne	r5,zero,8b6c <___vfiprintf_internal_r+0x12a0>
    7d9c:	00c00074 	movhi	r3,1
    7da0:	18fd0504 	addi	r3,r3,-3052
    7da4:	d8c00415 	stw	r3,16(sp)
    7da8:	60c0080c 	andi	r3,r12,32
    7dac:	18004b26 	beq	r3,zero,7edc <___vfiprintf_internal_r+0x610>
    7db0:	d8c00317 	ldw	r3,12(sp)
    7db4:	1d400017 	ldw	r21,0(r3)
    7db8:	1d800117 	ldw	r22,4(r3)
    7dbc:	18c00204 	addi	r3,r3,8
    7dc0:	d8c00315 	stw	r3,12(sp)
    7dc4:	60c0004c 	andi	r3,r12,1
    7dc8:	18000226 	beq	r3,zero,7dd4 <___vfiprintf_internal_r+0x508>
    7dcc:	ad86b03a 	or	r3,r21,r22
    7dd0:	1802df1e 	bne	r3,zero,8950 <___vfiprintf_internal_r+0x1084>
    7dd4:	00800084 	movi	r2,2
    7dd8:	00001906 	br	7e40 <___vfiprintf_internal_r+0x574>
    7ddc:	e0800007 	ldb	r2,0(fp)
    7de0:	10c01b18 	cmpnei	r3,r2,108
    7de4:	18033026 	beq	r3,zero,8aa8 <___vfiprintf_internal_r+0x11dc>
    7de8:	63000414 	ori	r12,r12,16
    7dec:	003f0606 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7df0:	63001014 	ori	r12,r12,64
    7df4:	e0800007 	ldb	r2,0(fp)
    7df8:	003f0306 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7dfc:	63000814 	ori	r12,r12,32
    7e00:	e0800007 	ldb	r2,0(fp)
    7e04:	003f0006 	br	7a08 <___vfiprintf_internal_r+0x13c>
    7e08:	d8c00317 	ldw	r3,12(sp)
    7e0c:	00800c04 	movi	r2,48
    7e10:	d8800885 	stb	r2,34(sp)
    7e14:	00801e04 	movi	r2,120
    7e18:	01000074 	movhi	r4,1
    7e1c:	d88008c5 	stb	r2,35(sp)
    7e20:	1d400017 	ldw	r21,0(r3)
    7e24:	18800104 	addi	r2,r3,4
    7e28:	d8800315 	stw	r2,12(sp)
    7e2c:	20bd0504 	addi	r2,r4,-3052
    7e30:	d8800415 	stw	r2,16(sp)
    7e34:	002d883a 	mov	r22,zero
    7e38:	63000094 	ori	r12,r12,2
    7e3c:	00800084 	movi	r2,2
    7e40:	d8000845 	stb	zero,33(sp)
    7e44:	48ffffe0 	cmpeqi	r3,r9,-1
    7e48:	001b883a 	mov	r13,zero
    7e4c:	18014c1e 	bne	r3,zero,8380 <___vfiprintf_internal_r+0xab4>
    7e50:	053fdfc4 	movi	r20,-129
    7e54:	ad86b03a 	or	r3,r21,r22
    7e58:	6528703a 	and	r20,r12,r20
    7e5c:	1802411e 	bne	r3,zero,8764 <___vfiprintf_internal_r+0xe98>
    7e60:	48030d1e 	bne	r9,zero,8a98 <___vfiprintf_internal_r+0x11cc>
    7e64:	1000791e 	bne	r2,zero,804c <___vfiprintf_internal_r+0x780>
    7e68:	6580004c 	andi	r22,r12,1
    7e6c:	b002b126 	beq	r22,zero,8934 <___vfiprintf_internal_r+0x1068>
    7e70:	00800c04 	movi	r2,48
    7e74:	d88015c5 	stb	r2,87(sp)
    7e78:	ddc015c4 	addi	r23,sp,87
    7e7c:	00017e06 	br	8478 <___vfiprintf_internal_r+0xbac>
    7e80:	29403fcc 	andi	r5,r5,255
    7e84:	2803461e 	bne	r5,zero,8ba0 <___vfiprintf_internal_r+0x12d4>
    7e88:	6080080c 	andi	r2,r12,32
    7e8c:	10016b1e 	bne	r2,zero,843c <___vfiprintf_internal_r+0xb70>
    7e90:	d8800317 	ldw	r2,12(sp)
    7e94:	60c0040c 	andi	r3,r12,16
    7e98:	15400017 	ldw	r21,0(r2)
    7e9c:	10800104 	addi	r2,r2,4
    7ea0:	18010d1e 	bne	r3,zero,82d8 <___vfiprintf_internal_r+0xa0c>
    7ea4:	60c0100c 	andi	r3,r12,64
    7ea8:	18031326 	beq	r3,zero,8af8 <___vfiprintf_internal_r+0x122c>
    7eac:	d8800315 	stw	r2,12(sp)
    7eb0:	ad7fffcc 	andi	r21,r21,65535
    7eb4:	002d883a 	mov	r22,zero
    7eb8:	0005883a 	mov	r2,zero
    7ebc:	003fe006 	br	7e40 <___vfiprintf_internal_r+0x574>
    7ec0:	29403fcc 	andi	r5,r5,255
    7ec4:	2803251e 	bne	r5,zero,8b5c <___vfiprintf_internal_r+0x1290>
    7ec8:	00c00074 	movhi	r3,1
    7ecc:	18fd0004 	addi	r3,r3,-3072
    7ed0:	d8c00415 	stw	r3,16(sp)
    7ed4:	60c0080c 	andi	r3,r12,32
    7ed8:	183fb51e 	bne	r3,zero,7db0 <___vfiprintf_internal_r+0x4e4>
    7edc:	d9000317 	ldw	r4,12(sp)
    7ee0:	60c0040c 	andi	r3,r12,16
    7ee4:	25400017 	ldw	r21,0(r4)
    7ee8:	21000104 	addi	r4,r4,4
    7eec:	d9000315 	stw	r4,12(sp)
    7ef0:	18026e1e 	bne	r3,zero,88ac <___vfiprintf_internal_r+0xfe0>
    7ef4:	60c0100c 	andi	r3,r12,64
    7ef8:	18026c26 	beq	r3,zero,88ac <___vfiprintf_internal_r+0xfe0>
    7efc:	ad7fffcc 	andi	r21,r21,65535
    7f00:	002d883a 	mov	r22,zero
    7f04:	003faf06 	br	7dc4 <___vfiprintf_internal_r+0x4f8>
    7f08:	29403fcc 	andi	r5,r5,255
    7f0c:	2803151e 	bne	r5,zero,8b64 <___vfiprintf_internal_r+0x1298>
    7f10:	6080080c 	andi	r2,r12,32
    7f14:	10013b1e 	bne	r2,zero,8404 <___vfiprintf_internal_r+0xb38>
    7f18:	d8800317 	ldw	r2,12(sp)
    7f1c:	60c0040c 	andi	r3,r12,16
    7f20:	15400017 	ldw	r21,0(r2)
    7f24:	10800104 	addi	r2,r2,4
    7f28:	1800f81e 	bne	r3,zero,830c <___vfiprintf_internal_r+0xa40>
    7f2c:	60c0100c 	andi	r3,r12,64
    7f30:	1802ed26 	beq	r3,zero,8ae8 <___vfiprintf_internal_r+0x121c>
    7f34:	d8800315 	stw	r2,12(sp)
    7f38:	ad7fffcc 	andi	r21,r21,65535
    7f3c:	002d883a 	mov	r22,zero
    7f40:	00800044 	movi	r2,1
    7f44:	003fbe06 	br	7e40 <___vfiprintf_internal_r+0x574>
    7f48:	d8800317 	ldw	r2,12(sp)
    7f4c:	d8000845 	stb	zero,33(sp)
    7f50:	15c00017 	ldw	r23,0(r2)
    7f54:	15000104 	addi	r20,r2,4
    7f58:	b802da26 	beq	r23,zero,8ac4 <___vfiprintf_internal_r+0x11f8>
    7f5c:	48bfffe0 	cmpeqi	r2,r9,-1
    7f60:	1002901e 	bne	r2,zero,89a4 <___vfiprintf_internal_r+0x10d8>
    7f64:	480d883a 	mov	r6,r9
    7f68:	000b883a 	mov	r5,zero
    7f6c:	b809883a 	mov	r4,r23
    7f70:	da000315 	stw	r8,12(sp)
    7f74:	db000215 	stw	r12,8(sp)
    7f78:	da400115 	stw	r9,4(sp)
    7f7c:	0005c440 	call	5c44 <memchr>
    7f80:	da400117 	ldw	r9,4(sp)
    7f84:	db000217 	ldw	r12,8(sp)
    7f88:	da000317 	ldw	r8,12(sp)
    7f8c:	1002ef26 	beq	r2,zero,8b4c <___vfiprintf_internal_r+0x1280>
    7f90:	15edc83a 	sub	r22,r2,r23
    7f94:	b02b883a 	mov	r21,r22
    7f98:	b000010e 	bge	r22,zero,7fa0 <___vfiprintf_internal_r+0x6d4>
    7f9c:	002b883a 	mov	r21,zero
    7fa0:	dd000315 	stw	r20,12(sp)
    7fa4:	00003606 	br	8080 <___vfiprintf_internal_r+0x7b4>
    7fa8:	29403fcc 	andi	r5,r5,255
    7fac:	2802fa1e 	bne	r5,zero,8b98 <___vfiprintf_internal_r+0x12cc>
    7fb0:	d9000317 	ldw	r4,12(sp)
    7fb4:	6080080c 	andi	r2,r12,32
    7fb8:	20c00104 	addi	r3,r4,4
    7fbc:	10026a1e 	bne	r2,zero,8968 <___vfiprintf_internal_r+0x109c>
    7fc0:	6080040c 	andi	r2,r12,16
    7fc4:	1002891e 	bne	r2,zero,89ec <___vfiprintf_internal_r+0x1120>
    7fc8:	6300100c 	andi	r12,r12,64
    7fcc:	60028726 	beq	r12,zero,89ec <___vfiprintf_internal_r+0x1120>
    7fd0:	d8800317 	ldw	r2,12(sp)
    7fd4:	d8c00315 	stw	r3,12(sp)
    7fd8:	d8c00017 	ldw	r3,0(sp)
    7fdc:	10800017 	ldw	r2,0(r2)
    7fe0:	10c0000d 	sth	r3,0(r2)
    7fe4:	003e6206 	br	7970 <___vfiprintf_internal_r+0xa4>
    7fe8:	29403fcc 	andi	r5,r5,255
    7fec:	2802e81e 	bne	r5,zero,8b90 <___vfiprintf_internal_r+0x12c4>
    7ff0:	6080080c 	andi	r2,r12,32
    7ff4:	10010a1e 	bne	r2,zero,8420 <___vfiprintf_internal_r+0xb54>
    7ff8:	d8800317 	ldw	r2,12(sp)
    7ffc:	60c0040c 	andi	r3,r12,16
    8000:	10800104 	addi	r2,r2,4
    8004:	1800ce1e 	bne	r3,zero,8340 <___vfiprintf_internal_r+0xa74>
    8008:	60c0100c 	andi	r3,r12,64
    800c:	1800cc26 	beq	r3,zero,8340 <___vfiprintf_internal_r+0xa74>
    8010:	d8c00317 	ldw	r3,12(sp)
    8014:	d8800315 	stw	r2,12(sp)
    8018:	1d40000f 	ldh	r21,0(r3)
    801c:	a82dd7fa 	srai	r22,r21,31
    8020:	b005883a 	mov	r2,r22
    8024:	1000cc16 	blt	r2,zero,8358 <___vfiprintf_internal_r+0xa8c>
    8028:	48bfffd8 	cmpnei	r2,r9,-1
    802c:	db400843 	ldbu	r13,33(sp)
    8030:	10010926 	beq	r2,zero,8458 <___vfiprintf_internal_r+0xb8c>
    8034:	00ffdfc4 	movi	r3,-129
    8038:	ad84b03a 	or	r2,r21,r22
    803c:	60d8703a 	and	r12,r12,r3
    8040:	1001051e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0xb8c>
    8044:	4801071e 	bne	r9,zero,8464 <___vfiprintf_internal_r+0xb98>
    8048:	6029883a 	mov	r20,r12
    804c:	0013883a 	mov	r9,zero
    8050:	002d883a 	mov	r22,zero
    8054:	882f883a 	mov	r23,r17
    8058:	00010706 	br	8478 <___vfiprintf_internal_r+0xbac>
    805c:	d8c00317 	ldw	r3,12(sp)
    8060:	d8000845 	stb	zero,33(sp)
    8064:	05400044 	movi	r21,1
    8068:	18800017 	ldw	r2,0(r3)
    806c:	18c00104 	addi	r3,r3,4
    8070:	d8c00315 	stw	r3,12(sp)
    8074:	d8800c05 	stb	r2,48(sp)
    8078:	05800044 	movi	r22,1
    807c:	ddc00c04 	addi	r23,sp,48
    8080:	6029883a 	mov	r20,r12
    8084:	0013883a 	mov	r9,zero
    8088:	a340008c 	andi	r13,r20,2
    808c:	68000126 	beq	r13,zero,8094 <___vfiprintf_internal_r+0x7c8>
    8090:	ad400084 	addi	r21,r21,2
    8094:	d9000a17 	ldw	r4,40(sp)
    8098:	a300210c 	andi	r12,r20,132
    809c:	d8800b17 	ldw	r2,44(sp)
    80a0:	21800044 	addi	r6,r4,1
    80a4:	300b883a 	mov	r5,r6
    80a8:	6000021e 	bne	r12,zero,80b4 <___vfiprintf_internal_r+0x7e8>
    80ac:	8547c83a 	sub	r3,r16,r21
    80b0:	00c1ae16 	blt	zero,r3,876c <___vfiprintf_internal_r+0xea0>
    80b4:	d9800847 	ldb	r6,33(sp)
    80b8:	40c00204 	addi	r3,r8,8
    80bc:	30000d26 	beq	r6,zero,80f4 <___vfiprintf_internal_r+0x828>
    80c0:	d9000844 	addi	r4,sp,33
    80c4:	10800044 	addi	r2,r2,1
    80c8:	41000015 	stw	r4,0(r8)
    80cc:	01000044 	movi	r4,1
    80d0:	41000115 	stw	r4,4(r8)
    80d4:	d8800b15 	stw	r2,44(sp)
    80d8:	d9400a15 	stw	r5,40(sp)
    80dc:	29000208 	cmpgei	r4,r5,8
    80e0:	2001831e 	bne	r4,zero,86f0 <___vfiprintf_internal_r+0xe24>
    80e4:	2809883a 	mov	r4,r5
    80e8:	1811883a 	mov	r8,r3
    80ec:	29400044 	addi	r5,r5,1
    80f0:	18c00204 	addi	r3,r3,8
    80f4:	68001826 	beq	r13,zero,8158 <___vfiprintf_internal_r+0x88c>
    80f8:	d9000884 	addi	r4,sp,34
    80fc:	10800084 	addi	r2,r2,2
    8100:	41000015 	stw	r4,0(r8)
    8104:	01000084 	movi	r4,2
    8108:	41000115 	stw	r4,4(r8)
    810c:	d8800b15 	stw	r2,44(sp)
    8110:	d9400a15 	stw	r5,40(sp)
    8114:	29000208 	cmpgei	r4,r5,8
    8118:	20018d26 	beq	r4,zero,8750 <___vfiprintf_internal_r+0xe84>
    811c:	1001ed26 	beq	r2,zero,88d4 <___vfiprintf_internal_r+0x1008>
    8120:	d9800904 	addi	r6,sp,36
    8124:	900b883a 	mov	r5,r18
    8128:	9809883a 	mov	r4,r19
    812c:	da400215 	stw	r9,8(sp)
    8130:	db000115 	stw	r12,4(sp)
    8134:	00077c00 	call	77c0 <__sprint_r.part.0>
    8138:	103eb71e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    813c:	d9000a17 	ldw	r4,40(sp)
    8140:	d8800b17 	ldw	r2,44(sp)
    8144:	da400217 	ldw	r9,8(sp)
    8148:	db000117 	ldw	r12,4(sp)
    814c:	d8c01804 	addi	r3,sp,96
    8150:	21400044 	addi	r5,r4,1
    8154:	8811883a 	mov	r8,r17
    8158:	63002018 	cmpnei	r12,r12,128
    815c:	6000e326 	beq	r12,zero,84ec <___vfiprintf_internal_r+0xc20>
    8160:	4d93c83a 	sub	r9,r9,r22
    8164:	02412216 	blt	zero,r9,85f0 <___vfiprintf_internal_r+0xd24>
    8168:	b085883a 	add	r2,r22,r2
    816c:	d9400a15 	stw	r5,40(sp)
    8170:	45c00015 	stw	r23,0(r8)
    8174:	45800115 	stw	r22,4(r8)
    8178:	d8800b15 	stw	r2,44(sp)
    817c:	29400210 	cmplti	r5,r5,8
    8180:	2800081e 	bne	r5,zero,81a4 <___vfiprintf_internal_r+0x8d8>
    8184:	10001426 	beq	r2,zero,81d8 <___vfiprintf_internal_r+0x90c>
    8188:	d9800904 	addi	r6,sp,36
    818c:	900b883a 	mov	r5,r18
    8190:	9809883a 	mov	r4,r19
    8194:	00077c00 	call	77c0 <__sprint_r.part.0>
    8198:	103e9f1e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    819c:	d8800b17 	ldw	r2,44(sp)
    81a0:	8807883a 	mov	r3,r17
    81a4:	a500010c 	andi	r20,r20,4
    81a8:	a0000226 	beq	r20,zero,81b4 <___vfiprintf_internal_r+0x8e8>
    81ac:	8569c83a 	sub	r20,r16,r21
    81b0:	05000f16 	blt	zero,r20,81f0 <___vfiprintf_internal_r+0x924>
    81b4:	8540010e 	bge	r16,r21,81bc <___vfiprintf_internal_r+0x8f0>
    81b8:	a821883a 	mov	r16,r21
    81bc:	d8c00017 	ldw	r3,0(sp)
    81c0:	1c07883a 	add	r3,r3,r16
    81c4:	d8c00015 	stw	r3,0(sp)
    81c8:	10013f1e 	bne	r2,zero,86c8 <___vfiprintf_internal_r+0xdfc>
    81cc:	d8000a15 	stw	zero,40(sp)
    81d0:	8811883a 	mov	r8,r17
    81d4:	003de606 	br	7970 <___vfiprintf_internal_r+0xa4>
    81d8:	d8000a15 	stw	zero,40(sp)
    81dc:	a500010c 	andi	r20,r20,4
    81e0:	a0019d26 	beq	r20,zero,8858 <___vfiprintf_internal_r+0xf8c>
    81e4:	8569c83a 	sub	r20,r16,r21
    81e8:	05019b0e 	bge	zero,r20,8858 <___vfiprintf_internal_r+0xf8c>
    81ec:	8807883a 	mov	r3,r17
    81f0:	a1000450 	cmplti	r4,r20,17
    81f4:	01c00074 	movhi	r7,1
    81f8:	d9400a17 	ldw	r5,40(sp)
    81fc:	20026c1e 	bne	r4,zero,8bb0 <___vfiprintf_internal_r+0x12e4>
    8200:	39fd6604 	addi	r7,r7,-2664
    8204:	05800404 	movi	r22,16
    8208:	00000606 	br	8224 <___vfiprintf_internal_r+0x958>
    820c:	29800084 	addi	r6,r5,2
    8210:	18c00204 	addi	r3,r3,8
    8214:	200b883a 	mov	r5,r4
    8218:	a53ffc04 	addi	r20,r20,-16
    821c:	a1000448 	cmpgei	r4,r20,17
    8220:	20001726 	beq	r4,zero,8280 <___vfiprintf_internal_r+0x9b4>
    8224:	29000044 	addi	r4,r5,1
    8228:	10800404 	addi	r2,r2,16
    822c:	19c00015 	stw	r7,0(r3)
    8230:	1d800115 	stw	r22,4(r3)
    8234:	d8800b15 	stw	r2,44(sp)
    8238:	d9000a15 	stw	r4,40(sp)
    823c:	21800208 	cmpgei	r6,r4,8
    8240:	303ff226 	beq	r6,zero,820c <___vfiprintf_internal_r+0x940>
    8244:	d9800904 	addi	r6,sp,36
    8248:	900b883a 	mov	r5,r18
    824c:	9809883a 	mov	r4,r19
    8250:	1000a226 	beq	r2,zero,84dc <___vfiprintf_internal_r+0xc10>
    8254:	d9c00115 	stw	r7,4(sp)
    8258:	00077c00 	call	77c0 <__sprint_r.part.0>
    825c:	103e6e1e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    8260:	d9400a17 	ldw	r5,40(sp)
    8264:	a53ffc04 	addi	r20,r20,-16
    8268:	a1000448 	cmpgei	r4,r20,17
    826c:	d8800b17 	ldw	r2,44(sp)
    8270:	8807883a 	mov	r3,r17
    8274:	29800044 	addi	r6,r5,1
    8278:	d9c00117 	ldw	r7,4(sp)
    827c:	203fe91e 	bne	r4,zero,8224 <___vfiprintf_internal_r+0x958>
    8280:	1505883a 	add	r2,r2,r20
    8284:	d9800a15 	stw	r6,40(sp)
    8288:	19c00015 	stw	r7,0(r3)
    828c:	1d000115 	stw	r20,4(r3)
    8290:	d8800b15 	stw	r2,44(sp)
    8294:	31800210 	cmplti	r6,r6,8
    8298:	303fc61e 	bne	r6,zero,81b4 <___vfiprintf_internal_r+0x8e8>
    829c:	10016e26 	beq	r2,zero,8858 <___vfiprintf_internal_r+0xf8c>
    82a0:	d9800904 	addi	r6,sp,36
    82a4:	900b883a 	mov	r5,r18
    82a8:	9809883a 	mov	r4,r19
    82ac:	00077c00 	call	77c0 <__sprint_r.part.0>
    82b0:	103e591e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    82b4:	d8800b17 	ldw	r2,44(sp)
    82b8:	003fbe06 	br	81b4 <___vfiprintf_internal_r+0x8e8>
    82bc:	29403fcc 	andi	r5,r5,255
    82c0:	28022c1e 	bne	r5,zero,8b74 <___vfiprintf_internal_r+0x12a8>
    82c4:	6080080c 	andi	r2,r12,32
    82c8:	63000414 	ori	r12,r12,16
    82cc:	10005b1e 	bne	r2,zero,843c <___vfiprintf_internal_r+0xb70>
    82d0:	d8800317 	ldw	r2,12(sp)
    82d4:	10800104 	addi	r2,r2,4
    82d8:	d8c00317 	ldw	r3,12(sp)
    82dc:	002d883a 	mov	r22,zero
    82e0:	d8800315 	stw	r2,12(sp)
    82e4:	1d400017 	ldw	r21,0(r3)
    82e8:	0005883a 	mov	r2,zero
    82ec:	003ed406 	br	7e40 <___vfiprintf_internal_r+0x574>
    82f0:	29403fcc 	andi	r5,r5,255
    82f4:	2802211e 	bne	r5,zero,8b7c <___vfiprintf_internal_r+0x12b0>
    82f8:	6080080c 	andi	r2,r12,32
    82fc:	63000414 	ori	r12,r12,16
    8300:	1000401e 	bne	r2,zero,8404 <___vfiprintf_internal_r+0xb38>
    8304:	d8800317 	ldw	r2,12(sp)
    8308:	10800104 	addi	r2,r2,4
    830c:	d8c00317 	ldw	r3,12(sp)
    8310:	002d883a 	mov	r22,zero
    8314:	d8800315 	stw	r2,12(sp)
    8318:	1d400017 	ldw	r21,0(r3)
    831c:	00800044 	movi	r2,1
    8320:	003ec706 	br	7e40 <___vfiprintf_internal_r+0x574>
    8324:	29403fcc 	andi	r5,r5,255
    8328:	28021f1e 	bne	r5,zero,8ba8 <___vfiprintf_internal_r+0x12dc>
    832c:	6080080c 	andi	r2,r12,32
    8330:	63000414 	ori	r12,r12,16
    8334:	10003a1e 	bne	r2,zero,8420 <___vfiprintf_internal_r+0xb54>
    8338:	d8800317 	ldw	r2,12(sp)
    833c:	10800104 	addi	r2,r2,4
    8340:	d8c00317 	ldw	r3,12(sp)
    8344:	1d400017 	ldw	r21,0(r3)
    8348:	d8800315 	stw	r2,12(sp)
    834c:	a82dd7fa 	srai	r22,r21,31
    8350:	b005883a 	mov	r2,r22
    8354:	103f340e 	bge	r2,zero,8028 <___vfiprintf_internal_r+0x75c>
    8358:	056bc83a 	sub	r21,zero,r21
    835c:	a804c03a 	cmpne	r2,r21,zero
    8360:	05adc83a 	sub	r22,zero,r22
    8364:	b0adc83a 	sub	r22,r22,r2
    8368:	00800b44 	movi	r2,45
    836c:	d8800845 	stb	r2,33(sp)
    8370:	48ffffe0 	cmpeqi	r3,r9,-1
    8374:	03400b44 	movi	r13,45
    8378:	00800044 	movi	r2,1
    837c:	183eb426 	beq	r3,zero,7e50 <___vfiprintf_internal_r+0x584>
    8380:	10c00060 	cmpeqi	r3,r2,1
    8384:	1800341e 	bne	r3,zero,8458 <___vfiprintf_internal_r+0xb8c>
    8388:	108000a0 	cmpeqi	r2,r2,2
    838c:	1000431e 	bne	r2,zero,849c <___vfiprintf_internal_r+0xbd0>
    8390:	8807883a 	mov	r3,r17
    8394:	00000106 	br	839c <___vfiprintf_internal_r+0xad0>
    8398:	b807883a 	mov	r3,r23
    839c:	a808d0fa 	srli	r4,r21,3
    83a0:	b00a977a 	slli	r5,r22,29
    83a4:	b02cd0fa 	srli	r22,r22,3
    83a8:	ad4001cc 	andi	r21,r21,7
    83ac:	a8800c04 	addi	r2,r21,48
    83b0:	292ab03a 	or	r21,r5,r4
    83b4:	18bfffc5 	stb	r2,-1(r3)
    83b8:	ad88b03a 	or	r4,r21,r22
    83bc:	1dffffc4 	addi	r23,r3,-1
    83c0:	203ff51e 	bne	r4,zero,8398 <___vfiprintf_internal_r+0xacc>
    83c4:	6100004c 	andi	r4,r12,1
    83c8:	20004126 	beq	r4,zero,84d0 <___vfiprintf_internal_r+0xc04>
    83cc:	10803fcc 	andi	r2,r2,255
    83d0:	1080201c 	xori	r2,r2,128
    83d4:	10bfe004 	addi	r2,r2,-128
    83d8:	10800c18 	cmpnei	r2,r2,48
    83dc:	10003c26 	beq	r2,zero,84d0 <___vfiprintf_internal_r+0xc04>
    83e0:	18ffff84 	addi	r3,r3,-2
    83e4:	00800c04 	movi	r2,48
    83e8:	b8bfffc5 	stb	r2,-1(r23)
    83ec:	88edc83a 	sub	r22,r17,r3
    83f0:	6029883a 	mov	r20,r12
    83f4:	182f883a 	mov	r23,r3
    83f8:	00001f06 	br	8478 <___vfiprintf_internal_r+0xbac>
    83fc:	00047d00 	call	47d0 <__sinit>
    8400:	003d4406 	br	7914 <___vfiprintf_internal_r+0x48>
    8404:	d8c00317 	ldw	r3,12(sp)
    8408:	00800044 	movi	r2,1
    840c:	1d400017 	ldw	r21,0(r3)
    8410:	1d800117 	ldw	r22,4(r3)
    8414:	18c00204 	addi	r3,r3,8
    8418:	d8c00315 	stw	r3,12(sp)
    841c:	003e8806 	br	7e40 <___vfiprintf_internal_r+0x574>
    8420:	d8c00317 	ldw	r3,12(sp)
    8424:	18800117 	ldw	r2,4(r3)
    8428:	1d400017 	ldw	r21,0(r3)
    842c:	18c00204 	addi	r3,r3,8
    8430:	d8c00315 	stw	r3,12(sp)
    8434:	102d883a 	mov	r22,r2
    8438:	003efa06 	br	8024 <___vfiprintf_internal_r+0x758>
    843c:	d8c00317 	ldw	r3,12(sp)
    8440:	0005883a 	mov	r2,zero
    8444:	1d400017 	ldw	r21,0(r3)
    8448:	1d800117 	ldw	r22,4(r3)
    844c:	18c00204 	addi	r3,r3,8
    8450:	d8c00315 	stw	r3,12(sp)
    8454:	003e7a06 	br	7e40 <___vfiprintf_internal_r+0x574>
    8458:	b0016a1e 	bne	r22,zero,8a04 <___vfiprintf_internal_r+0x1138>
    845c:	a88002a8 	cmpgeui	r2,r21,10
    8460:	1001681e 	bne	r2,zero,8a04 <___vfiprintf_internal_r+0x1138>
    8464:	ad400c04 	addi	r21,r21,48
    8468:	dd4015c5 	stb	r21,87(sp)
    846c:	6029883a 	mov	r20,r12
    8470:	05800044 	movi	r22,1
    8474:	ddc015c4 	addi	r23,sp,87
    8478:	482b883a 	mov	r21,r9
    847c:	4d80010e 	bge	r9,r22,8484 <___vfiprintf_internal_r+0xbb8>
    8480:	b02b883a 	mov	r21,r22
    8484:	6b403fcc 	andi	r13,r13,255
    8488:	6b40201c 	xori	r13,r13,128
    848c:	6b7fe004 	addi	r13,r13,-128
    8490:	683efd26 	beq	r13,zero,8088 <___vfiprintf_internal_r+0x7bc>
    8494:	ad400044 	addi	r21,r21,1
    8498:	003efb06 	br	8088 <___vfiprintf_internal_r+0x7bc>
    849c:	882f883a 	mov	r23,r17
    84a0:	d9000417 	ldw	r4,16(sp)
    84a4:	a88003cc 	andi	r2,r21,15
    84a8:	b006973a 	slli	r3,r22,28
    84ac:	2085883a 	add	r2,r4,r2
    84b0:	a82ad13a 	srli	r21,r21,4
    84b4:	10800003 	ldbu	r2,0(r2)
    84b8:	b02cd13a 	srli	r22,r22,4
    84bc:	bdffffc4 	addi	r23,r23,-1
    84c0:	1d6ab03a 	or	r21,r3,r21
    84c4:	b8800005 	stb	r2,0(r23)
    84c8:	ad84b03a 	or	r2,r21,r22
    84cc:	103ff41e 	bne	r2,zero,84a0 <___vfiprintf_internal_r+0xbd4>
    84d0:	8dedc83a 	sub	r22,r17,r23
    84d4:	6029883a 	mov	r20,r12
    84d8:	003fe706 	br	8478 <___vfiprintf_internal_r+0xbac>
    84dc:	01800044 	movi	r6,1
    84e0:	000b883a 	mov	r5,zero
    84e4:	8807883a 	mov	r3,r17
    84e8:	003f4b06 	br	8218 <___vfiprintf_internal_r+0x94c>
    84ec:	8559c83a 	sub	r12,r16,r21
    84f0:	033f1b0e 	bge	zero,r12,8160 <___vfiprintf_internal_r+0x894>
    84f4:	61800450 	cmplti	r6,r12,17
    84f8:	01c00074 	movhi	r7,1
    84fc:	3001af1e 	bne	r6,zero,8bbc <___vfiprintf_internal_r+0x12f0>
    8500:	39fd6204 	addi	r7,r7,-2680
    8504:	03400404 	movi	r13,16
    8508:	00000606 	br	8524 <___vfiprintf_internal_r+0xc58>
    850c:	21800084 	addi	r6,r4,2
    8510:	42000204 	addi	r8,r8,8
    8514:	1809883a 	mov	r4,r3
    8518:	633ffc04 	addi	r12,r12,-16
    851c:	60c00448 	cmpgei	r3,r12,17
    8520:	18001c26 	beq	r3,zero,8594 <___vfiprintf_internal_r+0xcc8>
    8524:	20c00044 	addi	r3,r4,1
    8528:	10800404 	addi	r2,r2,16
    852c:	41c00015 	stw	r7,0(r8)
    8530:	43400115 	stw	r13,4(r8)
    8534:	d8800b15 	stw	r2,44(sp)
    8538:	d8c00a15 	stw	r3,40(sp)
    853c:	19400208 	cmpgei	r5,r3,8
    8540:	283ff226 	beq	r5,zero,850c <___vfiprintf_internal_r+0xc40>
    8544:	d9800904 	addi	r6,sp,36
    8548:	900b883a 	mov	r5,r18
    854c:	9809883a 	mov	r4,r19
    8550:	10006326 	beq	r2,zero,86e0 <___vfiprintf_internal_r+0xe14>
    8554:	d9c00515 	stw	r7,20(sp)
    8558:	db000215 	stw	r12,8(sp)
    855c:	da400115 	stw	r9,4(sp)
    8560:	00077c00 	call	77c0 <__sprint_r.part.0>
    8564:	103dac1e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    8568:	db000217 	ldw	r12,8(sp)
    856c:	d9000a17 	ldw	r4,40(sp)
    8570:	d8800b17 	ldw	r2,44(sp)
    8574:	633ffc04 	addi	r12,r12,-16
    8578:	60c00448 	cmpgei	r3,r12,17
    857c:	8811883a 	mov	r8,r17
    8580:	21800044 	addi	r6,r4,1
    8584:	d9c00517 	ldw	r7,20(sp)
    8588:	03400404 	movi	r13,16
    858c:	da400117 	ldw	r9,4(sp)
    8590:	183fe41e 	bne	r3,zero,8524 <___vfiprintf_internal_r+0xc58>
    8594:	43400204 	addi	r13,r8,8
    8598:	1305883a 	add	r2,r2,r12
    859c:	41c00015 	stw	r7,0(r8)
    85a0:	43000115 	stw	r12,4(r8)
    85a4:	d8800b15 	stw	r2,44(sp)
    85a8:	d9800a15 	stw	r6,40(sp)
    85ac:	30c00208 	cmpgei	r3,r6,8
    85b0:	1800e226 	beq	r3,zero,893c <___vfiprintf_internal_r+0x1070>
    85b4:	10015726 	beq	r2,zero,8b14 <___vfiprintf_internal_r+0x1248>
    85b8:	d9800904 	addi	r6,sp,36
    85bc:	900b883a 	mov	r5,r18
    85c0:	9809883a 	mov	r4,r19
    85c4:	da400115 	stw	r9,4(sp)
    85c8:	00077c00 	call	77c0 <__sprint_r.part.0>
    85cc:	103d921e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    85d0:	da400117 	ldw	r9,4(sp)
    85d4:	d9000a17 	ldw	r4,40(sp)
    85d8:	d8800b17 	ldw	r2,44(sp)
    85dc:	4d93c83a 	sub	r9,r9,r22
    85e0:	d8c01804 	addi	r3,sp,96
    85e4:	21400044 	addi	r5,r4,1
    85e8:	8811883a 	mov	r8,r17
    85ec:	027ede0e 	bge	zero,r9,8168 <___vfiprintf_internal_r+0x89c>
    85f0:	49800450 	cmplti	r6,r9,17
    85f4:	01c00074 	movhi	r7,1
    85f8:	3001431e 	bne	r6,zero,8b08 <___vfiprintf_internal_r+0x123c>
    85fc:	39fd6204 	addi	r7,r7,-2680
    8600:	03000404 	movi	r12,16
    8604:	00000606 	br	8620 <___vfiprintf_internal_r+0xd54>
    8608:	21400084 	addi	r5,r4,2
    860c:	42000204 	addi	r8,r8,8
    8610:	1809883a 	mov	r4,r3
    8614:	4a7ffc04 	addi	r9,r9,-16
    8618:	48c00448 	cmpgei	r3,r9,17
    861c:	18001a26 	beq	r3,zero,8688 <___vfiprintf_internal_r+0xdbc>
    8620:	20c00044 	addi	r3,r4,1
    8624:	10800404 	addi	r2,r2,16
    8628:	41c00015 	stw	r7,0(r8)
    862c:	43000115 	stw	r12,4(r8)
    8630:	d8800b15 	stw	r2,44(sp)
    8634:	d8c00a15 	stw	r3,40(sp)
    8638:	19400208 	cmpgei	r5,r3,8
    863c:	283ff226 	beq	r5,zero,8608 <___vfiprintf_internal_r+0xd3c>
    8640:	d9800904 	addi	r6,sp,36
    8644:	900b883a 	mov	r5,r18
    8648:	9809883a 	mov	r4,r19
    864c:	10001a26 	beq	r2,zero,86b8 <___vfiprintf_internal_r+0xdec>
    8650:	d9c00215 	stw	r7,8(sp)
    8654:	da400115 	stw	r9,4(sp)
    8658:	00077c00 	call	77c0 <__sprint_r.part.0>
    865c:	103d6e1e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    8660:	da400117 	ldw	r9,4(sp)
    8664:	d9000a17 	ldw	r4,40(sp)
    8668:	d8800b17 	ldw	r2,44(sp)
    866c:	4a7ffc04 	addi	r9,r9,-16
    8670:	48c00448 	cmpgei	r3,r9,17
    8674:	8811883a 	mov	r8,r17
    8678:	21400044 	addi	r5,r4,1
    867c:	d9c00217 	ldw	r7,8(sp)
    8680:	03000404 	movi	r12,16
    8684:	183fe61e 	bne	r3,zero,8620 <___vfiprintf_internal_r+0xd54>
    8688:	41000204 	addi	r4,r8,8
    868c:	1245883a 	add	r2,r2,r9
    8690:	41c00015 	stw	r7,0(r8)
    8694:	42400115 	stw	r9,4(r8)
    8698:	d8800b15 	stw	r2,44(sp)
    869c:	d9400a15 	stw	r5,40(sp)
    86a0:	28c00208 	cmpgei	r3,r5,8
    86a4:	1800721e 	bne	r3,zero,8870 <___vfiprintf_internal_r+0xfa4>
    86a8:	29400044 	addi	r5,r5,1
    86ac:	20c00204 	addi	r3,r4,8
    86b0:	2011883a 	mov	r8,r4
    86b4:	003eac06 	br	8168 <___vfiprintf_internal_r+0x89c>
    86b8:	01400044 	movi	r5,1
    86bc:	0009883a 	mov	r4,zero
    86c0:	8811883a 	mov	r8,r17
    86c4:	003fd306 	br	8614 <___vfiprintf_internal_r+0xd48>
    86c8:	d9800904 	addi	r6,sp,36
    86cc:	900b883a 	mov	r5,r18
    86d0:	9809883a 	mov	r4,r19
    86d4:	00077c00 	call	77c0 <__sprint_r.part.0>
    86d8:	103ebc26 	beq	r2,zero,81cc <___vfiprintf_internal_r+0x900>
    86dc:	003d4e06 	br	7c18 <___vfiprintf_internal_r+0x34c>
    86e0:	01800044 	movi	r6,1
    86e4:	0009883a 	mov	r4,zero
    86e8:	8811883a 	mov	r8,r17
    86ec:	003f8a06 	br	8518 <___vfiprintf_internal_r+0xc4c>
    86f0:	10007026 	beq	r2,zero,88b4 <___vfiprintf_internal_r+0xfe8>
    86f4:	d9800904 	addi	r6,sp,36
    86f8:	900b883a 	mov	r5,r18
    86fc:	9809883a 	mov	r4,r19
    8700:	da400515 	stw	r9,20(sp)
    8704:	db000215 	stw	r12,8(sp)
    8708:	db400115 	stw	r13,4(sp)
    870c:	00077c00 	call	77c0 <__sprint_r.part.0>
    8710:	103d411e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    8714:	d9000a17 	ldw	r4,40(sp)
    8718:	d8800b17 	ldw	r2,44(sp)
    871c:	d8c01804 	addi	r3,sp,96
    8720:	21400044 	addi	r5,r4,1
    8724:	8811883a 	mov	r8,r17
    8728:	da400517 	ldw	r9,20(sp)
    872c:	db000217 	ldw	r12,8(sp)
    8730:	db400117 	ldw	r13,4(sp)
    8734:	003e6f06 	br	80f4 <___vfiprintf_internal_r+0x828>
    8738:	d8800884 	addi	r2,sp,34
    873c:	d8801615 	stw	r2,88(sp)
    8740:	00800084 	movi	r2,2
    8744:	d8801715 	stw	r2,92(sp)
    8748:	d8c01804 	addi	r3,sp,96
    874c:	01400044 	movi	r5,1
    8750:	1811883a 	mov	r8,r3
    8754:	2809883a 	mov	r4,r5
    8758:	21400044 	addi	r5,r4,1
    875c:	40c00204 	addi	r3,r8,8
    8760:	003e7d06 	br	8158 <___vfiprintf_internal_r+0x88c>
    8764:	a019883a 	mov	r12,r20
    8768:	003f0506 	br	8380 <___vfiprintf_internal_r+0xab4>
    876c:	19400450 	cmplti	r5,r3,17
    8770:	01c00074 	movhi	r7,1
    8774:	2801031e 	bne	r5,zero,8b84 <___vfiprintf_internal_r+0x12b8>
    8778:	39fd6604 	addi	r7,r7,-2664
    877c:	03800404 	movi	r14,16
    8780:	00000706 	br	87a0 <___vfiprintf_internal_r+0xed4>
    8784:	23c00084 	addi	r15,r4,2
    8788:	42000204 	addi	r8,r8,8
    878c:	3009883a 	mov	r4,r6
    8790:	18fffc04 	addi	r3,r3,-16
    8794:	19400448 	cmpgei	r5,r3,17
    8798:	28002026 	beq	r5,zero,881c <___vfiprintf_internal_r+0xf50>
    879c:	21800044 	addi	r6,r4,1
    87a0:	10800404 	addi	r2,r2,16
    87a4:	41c00015 	stw	r7,0(r8)
    87a8:	43800115 	stw	r14,4(r8)
    87ac:	d8800b15 	stw	r2,44(sp)
    87b0:	d9800a15 	stw	r6,40(sp)
    87b4:	31400208 	cmpgei	r5,r6,8
    87b8:	283ff226 	beq	r5,zero,8784 <___vfiprintf_internal_r+0xeb8>
    87bc:	d9800904 	addi	r6,sp,36
    87c0:	900b883a 	mov	r5,r18
    87c4:	9809883a 	mov	r4,r19
    87c8:	10001f26 	beq	r2,zero,8848 <___vfiprintf_internal_r+0xf7c>
    87cc:	d9c00715 	stw	r7,28(sp)
    87d0:	d8c00615 	stw	r3,24(sp)
    87d4:	da400515 	stw	r9,20(sp)
    87d8:	db000215 	stw	r12,8(sp)
    87dc:	db400115 	stw	r13,4(sp)
    87e0:	00077c00 	call	77c0 <__sprint_r.part.0>
    87e4:	103d0c1e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    87e8:	d8c00617 	ldw	r3,24(sp)
    87ec:	d9000a17 	ldw	r4,40(sp)
    87f0:	d8800b17 	ldw	r2,44(sp)
    87f4:	18fffc04 	addi	r3,r3,-16
    87f8:	19400448 	cmpgei	r5,r3,17
    87fc:	8811883a 	mov	r8,r17
    8800:	23c00044 	addi	r15,r4,1
    8804:	d9c00717 	ldw	r7,28(sp)
    8808:	03800404 	movi	r14,16
    880c:	da400517 	ldw	r9,20(sp)
    8810:	db000217 	ldw	r12,8(sp)
    8814:	db400117 	ldw	r13,4(sp)
    8818:	283fe01e 	bne	r5,zero,879c <___vfiprintf_internal_r+0xed0>
    881c:	10c5883a 	add	r2,r2,r3
    8820:	40c00115 	stw	r3,4(r8)
    8824:	41c00015 	stw	r7,0(r8)
    8828:	d8800b15 	stw	r2,44(sp)
    882c:	dbc00a15 	stw	r15,40(sp)
    8830:	78c00208 	cmpgei	r3,r15,8
    8834:	18002c1e 	bne	r3,zero,88e8 <___vfiprintf_internal_r+0x101c>
    8838:	42000204 	addi	r8,r8,8
    883c:	79400044 	addi	r5,r15,1
    8840:	7809883a 	mov	r4,r15
    8844:	003e1b06 	br	80b4 <___vfiprintf_internal_r+0x7e8>
    8848:	0009883a 	mov	r4,zero
    884c:	03c00044 	movi	r15,1
    8850:	8811883a 	mov	r8,r17
    8854:	003fce06 	br	8790 <___vfiprintf_internal_r+0xec4>
    8858:	8540010e 	bge	r16,r21,8860 <___vfiprintf_internal_r+0xf94>
    885c:	a821883a 	mov	r16,r21
    8860:	d8800017 	ldw	r2,0(sp)
    8864:	1405883a 	add	r2,r2,r16
    8868:	d8800015 	stw	r2,0(sp)
    886c:	003e5706 	br	81cc <___vfiprintf_internal_r+0x900>
    8870:	10008126 	beq	r2,zero,8a78 <___vfiprintf_internal_r+0x11ac>
    8874:	d9800904 	addi	r6,sp,36
    8878:	900b883a 	mov	r5,r18
    887c:	9809883a 	mov	r4,r19
    8880:	00077c00 	call	77c0 <__sprint_r.part.0>
    8884:	103ce41e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    8888:	d9400a17 	ldw	r5,40(sp)
    888c:	d8800b17 	ldw	r2,44(sp)
    8890:	d8c01804 	addi	r3,sp,96
    8894:	29400044 	addi	r5,r5,1
    8898:	8811883a 	mov	r8,r17
    889c:	003e3206 	br	8168 <___vfiprintf_internal_r+0x89c>
    88a0:	d8000a15 	stw	zero,40(sp)
    88a4:	8811883a 	mov	r8,r17
    88a8:	003c4a06 	br	79d4 <___vfiprintf_internal_r+0x108>
    88ac:	002d883a 	mov	r22,zero
    88b0:	003d4406 	br	7dc4 <___vfiprintf_internal_r+0x4f8>
    88b4:	68003326 	beq	r13,zero,8984 <___vfiprintf_internal_r+0x10b8>
    88b8:	d8800884 	addi	r2,sp,34
    88bc:	d8801615 	stw	r2,88(sp)
    88c0:	00800084 	movi	r2,2
    88c4:	d8801715 	stw	r2,92(sp)
    88c8:	da001804 	addi	r8,sp,96
    88cc:	01000044 	movi	r4,1
    88d0:	003fa106 	br	8758 <___vfiprintf_internal_r+0xe8c>
    88d4:	d8c01804 	addi	r3,sp,96
    88d8:	01400044 	movi	r5,1
    88dc:	0009883a 	mov	r4,zero
    88e0:	8811883a 	mov	r8,r17
    88e4:	003e1c06 	br	8158 <___vfiprintf_internal_r+0x88c>
    88e8:	10003826 	beq	r2,zero,89cc <___vfiprintf_internal_r+0x1100>
    88ec:	d9800904 	addi	r6,sp,36
    88f0:	900b883a 	mov	r5,r18
    88f4:	9809883a 	mov	r4,r19
    88f8:	da400515 	stw	r9,20(sp)
    88fc:	db000215 	stw	r12,8(sp)
    8900:	db400115 	stw	r13,4(sp)
    8904:	00077c00 	call	77c0 <__sprint_r.part.0>
    8908:	103cc31e 	bne	r2,zero,7c18 <___vfiprintf_internal_r+0x34c>
    890c:	d9000a17 	ldw	r4,40(sp)
    8910:	d8800b17 	ldw	r2,44(sp)
    8914:	8811883a 	mov	r8,r17
    8918:	21400044 	addi	r5,r4,1
    891c:	da400517 	ldw	r9,20(sp)
    8920:	db000217 	ldw	r12,8(sp)
    8924:	db400117 	ldw	r13,4(sp)
    8928:	003de206 	br	80b4 <___vfiprintf_internal_r+0x7e8>
    892c:	e029883a 	mov	r20,fp
    8930:	003c2d06 	br	79e8 <___vfiprintf_internal_r+0x11c>
    8934:	882f883a 	mov	r23,r17
    8938:	003ecf06 	br	8478 <___vfiprintf_internal_r+0xbac>
    893c:	31400044 	addi	r5,r6,1
    8940:	68c00204 	addi	r3,r13,8
    8944:	3009883a 	mov	r4,r6
    8948:	6811883a 	mov	r8,r13
    894c:	003e0406 	br	8160 <___vfiprintf_internal_r+0x894>
    8950:	00c00c04 	movi	r3,48
    8954:	d88008c5 	stb	r2,35(sp)
    8958:	d8c00885 	stb	r3,34(sp)
    895c:	63000094 	ori	r12,r12,2
    8960:	00800084 	movi	r2,2
    8964:	003d3606 	br	7e40 <___vfiprintf_internal_r+0x574>
    8968:	d9400017 	ldw	r5,0(sp)
    896c:	20800017 	ldw	r2,0(r4)
    8970:	d8c00315 	stw	r3,12(sp)
    8974:	2809d7fa 	srai	r4,r5,31
    8978:	11400015 	stw	r5,0(r2)
    897c:	11000115 	stw	r4,4(r2)
    8980:	003bfb06 	br	7970 <___vfiprintf_internal_r+0xa4>
    8984:	0009883a 	mov	r4,zero
    8988:	d8c01804 	addi	r3,sp,96
    898c:	01400044 	movi	r5,1
    8990:	8811883a 	mov	r8,r17
    8994:	003df006 	br	8158 <___vfiprintf_internal_r+0x88c>
    8998:	0421c83a 	sub	r16,zero,r16
    899c:	ddc00315 	stw	r23,12(sp)
    89a0:	003cdb06 	br	7d10 <___vfiprintf_internal_r+0x444>
    89a4:	b809883a 	mov	r4,r23
    89a8:	da000215 	stw	r8,8(sp)
    89ac:	db000115 	stw	r12,4(sp)
    89b0:	00004c00 	call	4c0 <strlen>
    89b4:	102d883a 	mov	r22,r2
    89b8:	102b883a 	mov	r21,r2
    89bc:	dd000315 	stw	r20,12(sp)
    89c0:	db000117 	ldw	r12,4(sp)
    89c4:	da000217 	ldw	r8,8(sp)
    89c8:	003dad06 	br	8080 <___vfiprintf_internal_r+0x7b4>
    89cc:	d8c00847 	ldb	r3,33(sp)
    89d0:	1800551e 	bne	r3,zero,8b28 <___vfiprintf_internal_r+0x125c>
    89d4:	683f581e 	bne	r13,zero,8738 <___vfiprintf_internal_r+0xe6c>
    89d8:	0009883a 	mov	r4,zero
    89dc:	d8c01804 	addi	r3,sp,96
    89e0:	01400044 	movi	r5,1
    89e4:	8811883a 	mov	r8,r17
    89e8:	003ddd06 	br	8160 <___vfiprintf_internal_r+0x894>
    89ec:	d8800317 	ldw	r2,12(sp)
    89f0:	10800017 	ldw	r2,0(r2)
    89f4:	d8c00315 	stw	r3,12(sp)
    89f8:	d8c00017 	ldw	r3,0(sp)
    89fc:	10c00015 	stw	r3,0(r2)
    8a00:	003bdb06 	br	7970 <___vfiprintf_internal_r+0xa4>
    8a04:	882f883a 	mov	r23,r17
    8a08:	00000206 	br	8a14 <___vfiprintf_internal_r+0x1148>
    8a0c:	102b883a 	mov	r21,r2
    8a10:	182d883a 	mov	r22,r3
    8a14:	a809883a 	mov	r4,r21
    8a18:	b00b883a 	mov	r5,r22
    8a1c:	01800284 	movi	r6,10
    8a20:	000f883a 	mov	r7,zero
    8a24:	db400615 	stw	r13,24(sp)
    8a28:	da000515 	stw	r8,20(sp)
    8a2c:	da400215 	stw	r9,8(sp)
    8a30:	db000115 	stw	r12,4(sp)
    8a34:	0009d3c0 	call	9d3c <__umoddi3>
    8a38:	10800c04 	addi	r2,r2,48
    8a3c:	bdffffc4 	addi	r23,r23,-1
    8a40:	a809883a 	mov	r4,r21
    8a44:	b00b883a 	mov	r5,r22
    8a48:	b8800005 	stb	r2,0(r23)
    8a4c:	01800284 	movi	r6,10
    8a50:	000f883a 	mov	r7,zero
    8a54:	00097200 	call	9720 <__udivdi3>
    8a58:	db000117 	ldw	r12,4(sp)
    8a5c:	da400217 	ldw	r9,8(sp)
    8a60:	da000517 	ldw	r8,20(sp)
    8a64:	db400617 	ldw	r13,24(sp)
    8a68:	b03fe81e 	bne	r22,zero,8a0c <___vfiprintf_internal_r+0x1140>
    8a6c:	ad4002a8 	cmpgeui	r21,r21,10
    8a70:	a83fe61e 	bne	r21,zero,8a0c <___vfiprintf_internal_r+0x1140>
    8a74:	003e9606 	br	84d0 <___vfiprintf_internal_r+0xc04>
    8a78:	00c00044 	movi	r3,1
    8a7c:	d8c00a15 	stw	r3,40(sp)
    8a80:	b005883a 	mov	r2,r22
    8a84:	ddc01615 	stw	r23,88(sp)
    8a88:	dd801715 	stw	r22,92(sp)
    8a8c:	dd800b15 	stw	r22,44(sp)
    8a90:	d8c01804 	addi	r3,sp,96
    8a94:	003dc306 	br	81a4 <___vfiprintf_internal_r+0x8d8>
    8a98:	10c00060 	cmpeqi	r3,r2,1
    8a9c:	a019883a 	mov	r12,r20
    8aa0:	183e3926 	beq	r3,zero,8388 <___vfiprintf_internal_r+0xabc>
    8aa4:	003e6f06 	br	8464 <___vfiprintf_internal_r+0xb98>
    8aa8:	e0800043 	ldbu	r2,1(fp)
    8aac:	63000814 	ori	r12,r12,32
    8ab0:	e7000044 	addi	fp,fp,1
    8ab4:	10803fcc 	andi	r2,r2,255
    8ab8:	1080201c 	xori	r2,r2,128
    8abc:	10bfe004 	addi	r2,r2,-128
    8ac0:	003bd106 	br	7a08 <___vfiprintf_internal_r+0x13c>
    8ac4:	488001f0 	cmpltui	r2,r9,7
    8ac8:	482d883a 	mov	r22,r9
    8acc:	1000011e 	bne	r2,zero,8ad4 <___vfiprintf_internal_r+0x1208>
    8ad0:	05800184 	movi	r22,6
    8ad4:	05c00074 	movhi	r23,1
    8ad8:	b02b883a 	mov	r21,r22
    8adc:	dd000315 	stw	r20,12(sp)
    8ae0:	bdfd0a04 	addi	r23,r23,-3032
    8ae4:	003d6606 	br	8080 <___vfiprintf_internal_r+0x7b4>
    8ae8:	d8800315 	stw	r2,12(sp)
    8aec:	002d883a 	mov	r22,zero
    8af0:	00800044 	movi	r2,1
    8af4:	003cd206 	br	7e40 <___vfiprintf_internal_r+0x574>
    8af8:	d8800315 	stw	r2,12(sp)
    8afc:	002d883a 	mov	r22,zero
    8b00:	0005883a 	mov	r2,zero
    8b04:	003cce06 	br	7e40 <___vfiprintf_internal_r+0x574>
    8b08:	1809883a 	mov	r4,r3
    8b0c:	39fd6204 	addi	r7,r7,-2680
    8b10:	003ede06 	br	868c <___vfiprintf_internal_r+0xdc0>
    8b14:	d8c01804 	addi	r3,sp,96
    8b18:	01400044 	movi	r5,1
    8b1c:	0009883a 	mov	r4,zero
    8b20:	8811883a 	mov	r8,r17
    8b24:	003d8e06 	br	8160 <___vfiprintf_internal_r+0x894>
    8b28:	d8800844 	addi	r2,sp,33
    8b2c:	d8801615 	stw	r2,88(sp)
    8b30:	00800044 	movi	r2,1
    8b34:	d8801715 	stw	r2,92(sp)
    8b38:	d8c01804 	addi	r3,sp,96
    8b3c:	01400044 	movi	r5,1
    8b40:	003d6806 	br	80e4 <___vfiprintf_internal_r+0x818>
    8b44:	d9800845 	stb	r6,33(sp)
    8b48:	003c5306 	br	7c98 <___vfiprintf_internal_r+0x3cc>
    8b4c:	482b883a 	mov	r21,r9
    8b50:	dd000315 	stw	r20,12(sp)
    8b54:	482d883a 	mov	r22,r9
    8b58:	003d4906 	br	8080 <___vfiprintf_internal_r+0x7b4>
    8b5c:	d9800845 	stb	r6,33(sp)
    8b60:	003cd906 	br	7ec8 <___vfiprintf_internal_r+0x5fc>
    8b64:	d9800845 	stb	r6,33(sp)
    8b68:	003ce906 	br	7f10 <___vfiprintf_internal_r+0x644>
    8b6c:	d9800845 	stb	r6,33(sp)
    8b70:	003c8a06 	br	7d9c <___vfiprintf_internal_r+0x4d0>
    8b74:	d9800845 	stb	r6,33(sp)
    8b78:	003dd206 	br	82c4 <___vfiprintf_internal_r+0x9f8>
    8b7c:	d9800845 	stb	r6,33(sp)
    8b80:	003ddd06 	br	82f8 <___vfiprintf_internal_r+0xa2c>
    8b84:	301f883a 	mov	r15,r6
    8b88:	39fd6604 	addi	r7,r7,-2664
    8b8c:	003f2306 	br	881c <___vfiprintf_internal_r+0xf50>
    8b90:	d9800845 	stb	r6,33(sp)
    8b94:	003d1606 	br	7ff0 <___vfiprintf_internal_r+0x724>
    8b98:	d9800845 	stb	r6,33(sp)
    8b9c:	003d0406 	br	7fb0 <___vfiprintf_internal_r+0x6e4>
    8ba0:	d9800845 	stb	r6,33(sp)
    8ba4:	003cb806 	br	7e88 <___vfiprintf_internal_r+0x5bc>
    8ba8:	d9800845 	stb	r6,33(sp)
    8bac:	003ddf06 	br	832c <___vfiprintf_internal_r+0xa60>
    8bb0:	29800044 	addi	r6,r5,1
    8bb4:	39fd6604 	addi	r7,r7,-2664
    8bb8:	003db106 	br	8280 <___vfiprintf_internal_r+0x9b4>
    8bbc:	181b883a 	mov	r13,r3
    8bc0:	280d883a 	mov	r6,r5
    8bc4:	39fd6204 	addi	r7,r7,-2680
    8bc8:	003e7306 	br	8598 <___vfiprintf_internal_r+0xccc>
    8bcc:	00bfffc4 	movi	r2,-1
    8bd0:	d8800015 	stw	r2,0(sp)
    8bd4:	003c1306 	br	7c24 <___vfiprintf_internal_r+0x358>
    8bd8:	d8800317 	ldw	r2,12(sp)
    8bdc:	12400017 	ldw	r9,0(r2)
    8be0:	15c00104 	addi	r23,r2,4
    8be4:	4800010e 	bge	r9,zero,8bec <___vfiprintf_internal_r+0x1320>
    8be8:	027fffc4 	movi	r9,-1
    8bec:	e0800043 	ldbu	r2,1(fp)
    8bf0:	ddc00315 	stw	r23,12(sp)
    8bf4:	1839883a 	mov	fp,r3
    8bf8:	10803fcc 	andi	r2,r2,255
    8bfc:	1080201c 	xori	r2,r2,128
    8c00:	10bfe004 	addi	r2,r2,-128
    8c04:	003b8006 	br	7a08 <___vfiprintf_internal_r+0x13c>

00008c08 <__vfiprintf_internal>:
    8c08:	00800074 	movhi	r2,1
    8c0c:	300f883a 	mov	r7,r6
    8c10:	280d883a 	mov	r6,r5
    8c14:	200b883a 	mov	r5,r4
    8c18:	11055a17 	ldw	r4,5480(r2)
    8c1c:	00078cc1 	jmpi	78cc <___vfiprintf_internal_r>

00008c20 <__sbprintf>:
    8c20:	2880030b 	ldhu	r2,12(r5)
    8c24:	2b001917 	ldw	r12,100(r5)
    8c28:	2ac0038b 	ldhu	r11,14(r5)
    8c2c:	2a800717 	ldw	r10,28(r5)
    8c30:	2a400917 	ldw	r9,36(r5)
    8c34:	defee204 	addi	sp,sp,-1144
    8c38:	da001a04 	addi	r8,sp,104
    8c3c:	00c10004 	movi	r3,1024
    8c40:	dc011a15 	stw	r16,1128(sp)
    8c44:	10bfff4c 	andi	r2,r2,65533
    8c48:	2821883a 	mov	r16,r5
    8c4c:	d80b883a 	mov	r5,sp
    8c50:	dc811c15 	stw	r18,1136(sp)
    8c54:	dc411b15 	stw	r17,1132(sp)
    8c58:	dfc11d15 	stw	ra,1140(sp)
    8c5c:	2025883a 	mov	r18,r4
    8c60:	d880030d 	sth	r2,12(sp)
    8c64:	db001915 	stw	r12,100(sp)
    8c68:	dac0038d 	sth	r11,14(sp)
    8c6c:	da800715 	stw	r10,28(sp)
    8c70:	da400915 	stw	r9,36(sp)
    8c74:	da000015 	stw	r8,0(sp)
    8c78:	da000415 	stw	r8,16(sp)
    8c7c:	d8c00215 	stw	r3,8(sp)
    8c80:	d8c00515 	stw	r3,20(sp)
    8c84:	d8000615 	stw	zero,24(sp)
    8c88:	00078cc0 	call	78cc <___vfiprintf_internal_r>
    8c8c:	1023883a 	mov	r17,r2
    8c90:	10000d0e 	bge	r2,zero,8cc8 <__sbprintf+0xa8>
    8c94:	d880030b 	ldhu	r2,12(sp)
    8c98:	1080100c 	andi	r2,r2,64
    8c9c:	10000326 	beq	r2,zero,8cac <__sbprintf+0x8c>
    8ca0:	8080030b 	ldhu	r2,12(r16)
    8ca4:	10801014 	ori	r2,r2,64
    8ca8:	8080030d 	sth	r2,12(r16)
    8cac:	8805883a 	mov	r2,r17
    8cb0:	dfc11d17 	ldw	ra,1140(sp)
    8cb4:	dc811c17 	ldw	r18,1136(sp)
    8cb8:	dc411b17 	ldw	r17,1132(sp)
    8cbc:	dc011a17 	ldw	r16,1128(sp)
    8cc0:	dec11e04 	addi	sp,sp,1144
    8cc4:	f800283a 	ret
    8cc8:	d80b883a 	mov	r5,sp
    8ccc:	9009883a 	mov	r4,r18
    8cd0:	000443c0 	call	443c <_fflush_r>
    8cd4:	103fef26 	beq	r2,zero,8c94 <__sbprintf+0x74>
    8cd8:	047fffc4 	movi	r17,-1
    8cdc:	003fed06 	br	8c94 <__sbprintf+0x74>

00008ce0 <_write_r>:
    8ce0:	defffe04 	addi	sp,sp,-8
    8ce4:	2805883a 	mov	r2,r5
    8ce8:	dc000015 	stw	r16,0(sp)
    8cec:	300b883a 	mov	r5,r6
    8cf0:	2021883a 	mov	r16,r4
    8cf4:	380d883a 	mov	r6,r7
    8cf8:	1009883a 	mov	r4,r2
    8cfc:	00800074 	movhi	r2,1
    8d00:	dfc00115 	stw	ra,4(sp)
    8d04:	100c7515 	stw	zero,12756(r2)
    8d08:	000d6b40 	call	d6b4 <write>
    8d0c:	10ffffd8 	cmpnei	r3,r2,-1
    8d10:	18000426 	beq	r3,zero,8d24 <_write_r+0x44>
    8d14:	dfc00117 	ldw	ra,4(sp)
    8d18:	dc000017 	ldw	r16,0(sp)
    8d1c:	dec00204 	addi	sp,sp,8
    8d20:	f800283a 	ret
    8d24:	00c00074 	movhi	r3,1
    8d28:	18cc7517 	ldw	r3,12756(r3)
    8d2c:	183ff926 	beq	r3,zero,8d14 <_write_r+0x34>
    8d30:	80c00015 	stw	r3,0(r16)
    8d34:	dfc00117 	ldw	ra,4(sp)
    8d38:	dc000017 	ldw	r16,0(sp)
    8d3c:	dec00204 	addi	sp,sp,8
    8d40:	f800283a 	ret

00008d44 <_close_r>:
    8d44:	defffe04 	addi	sp,sp,-8
    8d48:	dc000015 	stw	r16,0(sp)
    8d4c:	00800074 	movhi	r2,1
    8d50:	2021883a 	mov	r16,r4
    8d54:	2809883a 	mov	r4,r5
    8d58:	dfc00115 	stw	ra,4(sp)
    8d5c:	100c7515 	stw	zero,12756(r2)
    8d60:	000ce5c0 	call	ce5c <close>
    8d64:	10ffffd8 	cmpnei	r3,r2,-1
    8d68:	18000426 	beq	r3,zero,8d7c <_close_r+0x38>
    8d6c:	dfc00117 	ldw	ra,4(sp)
    8d70:	dc000017 	ldw	r16,0(sp)
    8d74:	dec00204 	addi	sp,sp,8
    8d78:	f800283a 	ret
    8d7c:	00c00074 	movhi	r3,1
    8d80:	18cc7517 	ldw	r3,12756(r3)
    8d84:	183ff926 	beq	r3,zero,8d6c <_close_r+0x28>
    8d88:	80c00015 	stw	r3,0(r16)
    8d8c:	dfc00117 	ldw	ra,4(sp)
    8d90:	dc000017 	ldw	r16,0(sp)
    8d94:	dec00204 	addi	sp,sp,8
    8d98:	f800283a 	ret

00008d9c <_calloc_r>:
    8d9c:	defffe04 	addi	sp,sp,-8
    8da0:	2805883a 	mov	r2,r5
    8da4:	dc000015 	stw	r16,0(sp)
    8da8:	300b883a 	mov	r5,r6
    8dac:	2021883a 	mov	r16,r4
    8db0:	1009883a 	mov	r4,r2
    8db4:	dfc00115 	stw	ra,4(sp)
    8db8:	000a4bc0 	call	a4bc <__mulsi3>
    8dbc:	100b883a 	mov	r5,r2
    8dc0:	8009883a 	mov	r4,r16
    8dc4:	00054500 	call	5450 <_malloc_r>
    8dc8:	1007883a 	mov	r3,r2
    8dcc:	10000c26 	beq	r2,zero,8e00 <_calloc_r+0x64>
    8dd0:	11bfff17 	ldw	r6,-4(r2)
    8dd4:	00bfff04 	movi	r2,-4
    8dd8:	308c703a 	and	r6,r6,r2
    8ddc:	31bfff04 	addi	r6,r6,-4
    8de0:	30800968 	cmpgeui	r2,r6,37
    8de4:	1000151e 	bne	r2,zero,8e3c <_calloc_r+0xa0>
    8de8:	30800530 	cmpltui	r2,r6,20
    8dec:	10000926 	beq	r2,zero,8e14 <_calloc_r+0x78>
    8df0:	1805883a 	mov	r2,r3
    8df4:	10000015 	stw	zero,0(r2)
    8df8:	10000115 	stw	zero,4(r2)
    8dfc:	10000215 	stw	zero,8(r2)
    8e00:	1805883a 	mov	r2,r3
    8e04:	dfc00117 	ldw	ra,4(sp)
    8e08:	dc000017 	ldw	r16,0(sp)
    8e0c:	dec00204 	addi	sp,sp,8
    8e10:	f800283a 	ret
    8e14:	18000015 	stw	zero,0(r3)
    8e18:	18000115 	stw	zero,4(r3)
    8e1c:	30800728 	cmpgeui	r2,r6,28
    8e20:	10000b26 	beq	r2,zero,8e50 <_calloc_r+0xb4>
    8e24:	18000215 	stw	zero,8(r3)
    8e28:	18000315 	stw	zero,12(r3)
    8e2c:	31800920 	cmpeqi	r6,r6,36
    8e30:	3000091e 	bne	r6,zero,8e58 <_calloc_r+0xbc>
    8e34:	18800404 	addi	r2,r3,16
    8e38:	003fee06 	br	8df4 <_calloc_r+0x58>
    8e3c:	1809883a 	mov	r4,r3
    8e40:	000b883a 	mov	r5,zero
    8e44:	0005f580 	call	5f58 <memset>
    8e48:	1007883a 	mov	r3,r2
    8e4c:	003fec06 	br	8e00 <_calloc_r+0x64>
    8e50:	18800204 	addi	r2,r3,8
    8e54:	003fe706 	br	8df4 <_calloc_r+0x58>
    8e58:	18000415 	stw	zero,16(r3)
    8e5c:	18800604 	addi	r2,r3,24
    8e60:	18000515 	stw	zero,20(r3)
    8e64:	003fe306 	br	8df4 <_calloc_r+0x58>

00008e68 <_fclose_r>:
    8e68:	defffc04 	addi	sp,sp,-16
    8e6c:	dfc00315 	stw	ra,12(sp)
    8e70:	dc800215 	stw	r18,8(sp)
    8e74:	dc400115 	stw	r17,4(sp)
    8e78:	dc000015 	stw	r16,0(sp)
    8e7c:	28000726 	beq	r5,zero,8e9c <_fclose_r+0x34>
    8e80:	2023883a 	mov	r17,r4
    8e84:	2821883a 	mov	r16,r5
    8e88:	20000226 	beq	r4,zero,8e94 <_fclose_r+0x2c>
    8e8c:	20800e17 	ldw	r2,56(r4)
    8e90:	10002726 	beq	r2,zero,8f30 <_fclose_r+0xc8>
    8e94:	8080030f 	ldh	r2,12(r16)
    8e98:	1000081e 	bne	r2,zero,8ebc <_fclose_r+0x54>
    8e9c:	0025883a 	mov	r18,zero
    8ea0:	9005883a 	mov	r2,r18
    8ea4:	dfc00317 	ldw	ra,12(sp)
    8ea8:	dc800217 	ldw	r18,8(sp)
    8eac:	dc400117 	ldw	r17,4(sp)
    8eb0:	dc000017 	ldw	r16,0(sp)
    8eb4:	dec00404 	addi	sp,sp,16
    8eb8:	f800283a 	ret
    8ebc:	800b883a 	mov	r5,r16
    8ec0:	8809883a 	mov	r4,r17
    8ec4:	00042140 	call	4214 <__sflush_r>
    8ec8:	1025883a 	mov	r18,r2
    8ecc:	80800b17 	ldw	r2,44(r16)
    8ed0:	10000426 	beq	r2,zero,8ee4 <_fclose_r+0x7c>
    8ed4:	81400717 	ldw	r5,28(r16)
    8ed8:	8809883a 	mov	r4,r17
    8edc:	103ee83a 	callr	r2
    8ee0:	10001716 	blt	r2,zero,8f40 <_fclose_r+0xd8>
    8ee4:	8080030b 	ldhu	r2,12(r16)
    8ee8:	1080200c 	andi	r2,r2,128
    8eec:	1000181e 	bne	r2,zero,8f50 <_fclose_r+0xe8>
    8ef0:	81400c17 	ldw	r5,48(r16)
    8ef4:	28000526 	beq	r5,zero,8f0c <_fclose_r+0xa4>
    8ef8:	80801004 	addi	r2,r16,64
    8efc:	28800226 	beq	r5,r2,8f08 <_fclose_r+0xa0>
    8f00:	8809883a 	mov	r4,r17
    8f04:	00049340 	call	4934 <_free_r>
    8f08:	80000c15 	stw	zero,48(r16)
    8f0c:	81401117 	ldw	r5,68(r16)
    8f10:	28000326 	beq	r5,zero,8f20 <_fclose_r+0xb8>
    8f14:	8809883a 	mov	r4,r17
    8f18:	00049340 	call	4934 <_free_r>
    8f1c:	80001115 	stw	zero,68(r16)
    8f20:	00047e00 	call	47e0 <__sfp_lock_acquire>
    8f24:	8000030d 	sth	zero,12(r16)
    8f28:	00047e40 	call	47e4 <__sfp_lock_release>
    8f2c:	003fdc06 	br	8ea0 <_fclose_r+0x38>
    8f30:	00047d00 	call	47d0 <__sinit>
    8f34:	8080030f 	ldh	r2,12(r16)
    8f38:	103fd826 	beq	r2,zero,8e9c <_fclose_r+0x34>
    8f3c:	003fdf06 	br	8ebc <_fclose_r+0x54>
    8f40:	8080030b 	ldhu	r2,12(r16)
    8f44:	04bfffc4 	movi	r18,-1
    8f48:	1080200c 	andi	r2,r2,128
    8f4c:	103fe826 	beq	r2,zero,8ef0 <_fclose_r+0x88>
    8f50:	81400417 	ldw	r5,16(r16)
    8f54:	8809883a 	mov	r4,r17
    8f58:	00049340 	call	4934 <_free_r>
    8f5c:	003fe406 	br	8ef0 <_fclose_r+0x88>

00008f60 <fclose>:
    8f60:	00800074 	movhi	r2,1
    8f64:	200b883a 	mov	r5,r4
    8f68:	11055a17 	ldw	r4,5480(r2)
    8f6c:	0008e681 	jmpi	8e68 <_fclose_r>

00008f70 <__fputwc>:
    8f70:	defff904 	addi	sp,sp,-28
    8f74:	dcc00415 	stw	r19,16(sp)
    8f78:	dc800315 	stw	r18,12(sp)
    8f7c:	dc000115 	stw	r16,4(sp)
    8f80:	dfc00615 	stw	ra,24(sp)
    8f84:	dd000515 	stw	r20,20(sp)
    8f88:	dc400215 	stw	r17,8(sp)
    8f8c:	2025883a 	mov	r18,r4
    8f90:	2827883a 	mov	r19,r5
    8f94:	3021883a 	mov	r16,r6
    8f98:	00092880 	call	9288 <__locale_mb_cur_max>
    8f9c:	10800058 	cmpnei	r2,r2,1
    8fa0:	1000071e 	bne	r2,zero,8fc0 <__fputwc+0x50>
    8fa4:	98bfffc4 	addi	r2,r19,-1
    8fa8:	10803fe8 	cmpgeui	r2,r2,255
    8fac:	1000041e 	bne	r2,zero,8fc0 <__fputwc+0x50>
    8fb0:	980b883a 	mov	r5,r19
    8fb4:	dcc000c5 	stb	r19,3(sp)
    8fb8:	05000044 	movi	r20,1
    8fbc:	00000a06 	br	8fe8 <__fputwc+0x78>
    8fc0:	81c01704 	addi	r7,r16,92
    8fc4:	980d883a 	mov	r6,r19
    8fc8:	d94000c4 	addi	r5,sp,3
    8fcc:	9009883a 	mov	r4,r18
    8fd0:	00095f40 	call	95f4 <_wcrtomb_r>
    8fd4:	1029883a 	mov	r20,r2
    8fd8:	10bfffd8 	cmpnei	r2,r2,-1
    8fdc:	10003426 	beq	r2,zero,90b0 <__fputwc+0x140>
    8fe0:	a0002926 	beq	r20,zero,9088 <__fputwc+0x118>
    8fe4:	d94000c3 	ldbu	r5,3(sp)
    8fe8:	0023883a 	mov	r17,zero
    8fec:	00000a06 	br	9018 <__fputwc+0xa8>
    8ff0:	80800017 	ldw	r2,0(r16)
    8ff4:	11400005 	stb	r5,0(r2)
    8ff8:	80800017 	ldw	r2,0(r16)
    8ffc:	10800044 	addi	r2,r2,1
    9000:	80800015 	stw	r2,0(r16)
    9004:	8c400044 	addi	r17,r17,1
    9008:	d88000c4 	addi	r2,sp,3
    900c:	1445883a 	add	r2,r2,r17
    9010:	8d001d2e 	bgeu	r17,r20,9088 <__fputwc+0x118>
    9014:	11400003 	ldbu	r5,0(r2)
    9018:	80800217 	ldw	r2,8(r16)
    901c:	10bfffc4 	addi	r2,r2,-1
    9020:	80800215 	stw	r2,8(r16)
    9024:	103ff20e 	bge	r2,zero,8ff0 <__fputwc+0x80>
    9028:	80c00617 	ldw	r3,24(r16)
    902c:	10c01016 	blt	r2,r3,9070 <__fputwc+0x100>
    9030:	80800017 	ldw	r2,0(r16)
    9034:	11400005 	stb	r5,0(r2)
    9038:	80800017 	ldw	r2,0(r16)
    903c:	10c00003 	ldbu	r3,0(r2)
    9040:	10800044 	addi	r2,r2,1
    9044:	18c002a0 	cmpeqi	r3,r3,10
    9048:	183fed26 	beq	r3,zero,9000 <__fputwc+0x90>
    904c:	800d883a 	mov	r6,r16
    9050:	01400284 	movi	r5,10
    9054:	9009883a 	mov	r4,r18
    9058:	00094980 	call	9498 <__swbuf_r>
    905c:	10bfffe0 	cmpeqi	r2,r2,-1
    9060:	10803fcc 	andi	r2,r2,255
    9064:	103fe726 	beq	r2,zero,9004 <__fputwc+0x94>
    9068:	053fffc4 	movi	r20,-1
    906c:	00000706 	br	908c <__fputwc+0x11c>
    9070:	29403fcc 	andi	r5,r5,255
    9074:	800d883a 	mov	r6,r16
    9078:	9009883a 	mov	r4,r18
    907c:	00094980 	call	9498 <__swbuf_r>
    9080:	10bfffe0 	cmpeqi	r2,r2,-1
    9084:	003ff606 	br	9060 <__fputwc+0xf0>
    9088:	9829883a 	mov	r20,r19
    908c:	a005883a 	mov	r2,r20
    9090:	dfc00617 	ldw	ra,24(sp)
    9094:	dd000517 	ldw	r20,20(sp)
    9098:	dcc00417 	ldw	r19,16(sp)
    909c:	dc800317 	ldw	r18,12(sp)
    90a0:	dc400217 	ldw	r17,8(sp)
    90a4:	dc000117 	ldw	r16,4(sp)
    90a8:	dec00704 	addi	sp,sp,28
    90ac:	f800283a 	ret
    90b0:	8080030b 	ldhu	r2,12(r16)
    90b4:	10801014 	ori	r2,r2,64
    90b8:	8080030d 	sth	r2,12(r16)
    90bc:	003ff306 	br	908c <__fputwc+0x11c>

000090c0 <_fputwc_r>:
    90c0:	3080030b 	ldhu	r2,12(r6)
    90c4:	10c8000c 	andi	r3,r2,8192
    90c8:	1800051e 	bne	r3,zero,90e0 <_fputwc_r+0x20>
    90cc:	30c01917 	ldw	r3,100(r6)
    90d0:	10880014 	ori	r2,r2,8192
    90d4:	3080030d 	sth	r2,12(r6)
    90d8:	18880014 	ori	r2,r3,8192
    90dc:	30801915 	stw	r2,100(r6)
    90e0:	0008f701 	jmpi	8f70 <__fputwc>

000090e4 <fputwc>:
    90e4:	defffc04 	addi	sp,sp,-16
    90e8:	00800074 	movhi	r2,1
    90ec:	dc000115 	stw	r16,4(sp)
    90f0:	14055a17 	ldw	r16,5480(r2)
    90f4:	dc400215 	stw	r17,8(sp)
    90f8:	dfc00315 	stw	ra,12(sp)
    90fc:	2023883a 	mov	r17,r4
    9100:	80000226 	beq	r16,zero,910c <fputwc+0x28>
    9104:	80800e17 	ldw	r2,56(r16)
    9108:	10001026 	beq	r2,zero,914c <fputwc+0x68>
    910c:	2880030b 	ldhu	r2,12(r5)
    9110:	10c8000c 	andi	r3,r2,8192
    9114:	1800051e 	bne	r3,zero,912c <fputwc+0x48>
    9118:	28c01917 	ldw	r3,100(r5)
    911c:	10880014 	ori	r2,r2,8192
    9120:	2880030d 	sth	r2,12(r5)
    9124:	18880014 	ori	r2,r3,8192
    9128:	28801915 	stw	r2,100(r5)
    912c:	280d883a 	mov	r6,r5
    9130:	8009883a 	mov	r4,r16
    9134:	880b883a 	mov	r5,r17
    9138:	dfc00317 	ldw	ra,12(sp)
    913c:	dc400217 	ldw	r17,8(sp)
    9140:	dc000117 	ldw	r16,4(sp)
    9144:	dec00404 	addi	sp,sp,16
    9148:	0008f701 	jmpi	8f70 <__fputwc>
    914c:	8009883a 	mov	r4,r16
    9150:	d9400015 	stw	r5,0(sp)
    9154:	00047d00 	call	47d0 <__sinit>
    9158:	d9400017 	ldw	r5,0(sp)
    915c:	003feb06 	br	910c <fputwc+0x28>

00009160 <_fstat_r>:
    9160:	defffe04 	addi	sp,sp,-8
    9164:	2805883a 	mov	r2,r5
    9168:	dc000015 	stw	r16,0(sp)
    916c:	300b883a 	mov	r5,r6
    9170:	2021883a 	mov	r16,r4
    9174:	1009883a 	mov	r4,r2
    9178:	00800074 	movhi	r2,1
    917c:	dfc00115 	stw	ra,4(sp)
    9180:	100c7515 	stw	zero,12756(r2)
    9184:	000cfa00 	call	cfa0 <fstat>
    9188:	10ffffd8 	cmpnei	r3,r2,-1
    918c:	18000426 	beq	r3,zero,91a0 <_fstat_r+0x40>
    9190:	dfc00117 	ldw	ra,4(sp)
    9194:	dc000017 	ldw	r16,0(sp)
    9198:	dec00204 	addi	sp,sp,8
    919c:	f800283a 	ret
    91a0:	00c00074 	movhi	r3,1
    91a4:	18cc7517 	ldw	r3,12756(r3)
    91a8:	183ff926 	beq	r3,zero,9190 <_fstat_r+0x30>
    91ac:	80c00015 	stw	r3,0(r16)
    91b0:	dfc00117 	ldw	ra,4(sp)
    91b4:	dc000017 	ldw	r16,0(sp)
    91b8:	dec00204 	addi	sp,sp,8
    91bc:	f800283a 	ret

000091c0 <_isatty_r>:
    91c0:	defffe04 	addi	sp,sp,-8
    91c4:	dc000015 	stw	r16,0(sp)
    91c8:	00800074 	movhi	r2,1
    91cc:	2021883a 	mov	r16,r4
    91d0:	2809883a 	mov	r4,r5
    91d4:	dfc00115 	stw	ra,4(sp)
    91d8:	100c7515 	stw	zero,12756(r2)
    91dc:	000d0980 	call	d098 <isatty>
    91e0:	10ffffd8 	cmpnei	r3,r2,-1
    91e4:	18000426 	beq	r3,zero,91f8 <_isatty_r+0x38>
    91e8:	dfc00117 	ldw	ra,4(sp)
    91ec:	dc000017 	ldw	r16,0(sp)
    91f0:	dec00204 	addi	sp,sp,8
    91f4:	f800283a 	ret
    91f8:	00c00074 	movhi	r3,1
    91fc:	18cc7517 	ldw	r3,12756(r3)
    9200:	183ff926 	beq	r3,zero,91e8 <_isatty_r+0x28>
    9204:	80c00015 	stw	r3,0(r16)
    9208:	dfc00117 	ldw	ra,4(sp)
    920c:	dc000017 	ldw	r16,0(sp)
    9210:	dec00204 	addi	sp,sp,8
    9214:	f800283a 	ret

00009218 <_setlocale_r>:
    9218:	30001826 	beq	r6,zero,927c <_setlocale_r+0x64>
    921c:	01400074 	movhi	r5,1
    9220:	defffe04 	addi	sp,sp,-8
    9224:	297d6b04 	addi	r5,r5,-2644
    9228:	3009883a 	mov	r4,r6
    922c:	dc000015 	stw	r16,0(sp)
    9230:	dfc00115 	stw	ra,4(sp)
    9234:	3021883a 	mov	r16,r6
    9238:	00093c00 	call	93c0 <strcmp>
    923c:	1000061e 	bne	r2,zero,9258 <_setlocale_r+0x40>
    9240:	00800074 	movhi	r2,1
    9244:	10bd6a04 	addi	r2,r2,-2648
    9248:	dfc00117 	ldw	ra,4(sp)
    924c:	dc000017 	ldw	r16,0(sp)
    9250:	dec00204 	addi	sp,sp,8
    9254:	f800283a 	ret
    9258:	01400074 	movhi	r5,1
    925c:	297d6a04 	addi	r5,r5,-2648
    9260:	8009883a 	mov	r4,r16
    9264:	00093c00 	call	93c0 <strcmp>
    9268:	103ff526 	beq	r2,zero,9240 <_setlocale_r+0x28>
    926c:	80800003 	ldbu	r2,0(r16)
    9270:	103ff326 	beq	r2,zero,9240 <_setlocale_r+0x28>
    9274:	0005883a 	mov	r2,zero
    9278:	003ff306 	br	9248 <_setlocale_r+0x30>
    927c:	00800074 	movhi	r2,1
    9280:	10bd6a04 	addi	r2,r2,-2648
    9284:	f800283a 	ret

00009288 <__locale_mb_cur_max>:
    9288:	00800074 	movhi	r2,1
    928c:	1080c107 	ldb	r2,772(r2)
    9290:	f800283a 	ret

00009294 <setlocale>:
    9294:	00800074 	movhi	r2,1
    9298:	280d883a 	mov	r6,r5
    929c:	200b883a 	mov	r5,r4
    92a0:	11055a17 	ldw	r4,5480(r2)
    92a4:	00092181 	jmpi	9218 <_setlocale_r>

000092a8 <_lseek_r>:
    92a8:	defffe04 	addi	sp,sp,-8
    92ac:	2805883a 	mov	r2,r5
    92b0:	dc000015 	stw	r16,0(sp)
    92b4:	300b883a 	mov	r5,r6
    92b8:	2021883a 	mov	r16,r4
    92bc:	380d883a 	mov	r6,r7
    92c0:	1009883a 	mov	r4,r2
    92c4:	00800074 	movhi	r2,1
    92c8:	dfc00115 	stw	ra,4(sp)
    92cc:	100c7515 	stw	zero,12756(r2)
    92d0:	000d2700 	call	d270 <lseek>
    92d4:	10ffffd8 	cmpnei	r3,r2,-1
    92d8:	18000426 	beq	r3,zero,92ec <_lseek_r+0x44>
    92dc:	dfc00117 	ldw	ra,4(sp)
    92e0:	dc000017 	ldw	r16,0(sp)
    92e4:	dec00204 	addi	sp,sp,8
    92e8:	f800283a 	ret
    92ec:	00c00074 	movhi	r3,1
    92f0:	18cc7517 	ldw	r3,12756(r3)
    92f4:	183ff926 	beq	r3,zero,92dc <_lseek_r+0x34>
    92f8:	80c00015 	stw	r3,0(r16)
    92fc:	dfc00117 	ldw	ra,4(sp)
    9300:	dc000017 	ldw	r16,0(sp)
    9304:	dec00204 	addi	sp,sp,8
    9308:	f800283a 	ret

0000930c <_mbtowc_r>:
    930c:	00800074 	movhi	r2,1
    9310:	1080b017 	ldw	r2,704(r2)
    9314:	1000683a 	jmp	r2

00009318 <__ascii_mbtowc>:
    9318:	deffff04 	addi	sp,sp,-4
    931c:	28000826 	beq	r5,zero,9340 <__ascii_mbtowc+0x28>
    9320:	30000926 	beq	r6,zero,9348 <__ascii_mbtowc+0x30>
    9324:	38000b26 	beq	r7,zero,9354 <__ascii_mbtowc+0x3c>
    9328:	30800003 	ldbu	r2,0(r6)
    932c:	28800015 	stw	r2,0(r5)
    9330:	30800003 	ldbu	r2,0(r6)
    9334:	1004c03a 	cmpne	r2,r2,zero
    9338:	dec00104 	addi	sp,sp,4
    933c:	f800283a 	ret
    9340:	d80b883a 	mov	r5,sp
    9344:	303ff71e 	bne	r6,zero,9324 <__ascii_mbtowc+0xc>
    9348:	0005883a 	mov	r2,zero
    934c:	dec00104 	addi	sp,sp,4
    9350:	f800283a 	ret
    9354:	00bfff84 	movi	r2,-2
    9358:	003ff706 	br	9338 <__ascii_mbtowc+0x20>

0000935c <_read_r>:
    935c:	defffe04 	addi	sp,sp,-8
    9360:	2805883a 	mov	r2,r5
    9364:	dc000015 	stw	r16,0(sp)
    9368:	300b883a 	mov	r5,r6
    936c:	2021883a 	mov	r16,r4
    9370:	380d883a 	mov	r6,r7
    9374:	1009883a 	mov	r4,r2
    9378:	00800074 	movhi	r2,1
    937c:	dfc00115 	stw	ra,4(sp)
    9380:	100c7515 	stw	zero,12756(r2)
    9384:	000d4500 	call	d450 <read>
    9388:	10ffffd8 	cmpnei	r3,r2,-1
    938c:	18000426 	beq	r3,zero,93a0 <_read_r+0x44>
    9390:	dfc00117 	ldw	ra,4(sp)
    9394:	dc000017 	ldw	r16,0(sp)
    9398:	dec00204 	addi	sp,sp,8
    939c:	f800283a 	ret
    93a0:	00c00074 	movhi	r3,1
    93a4:	18cc7517 	ldw	r3,12756(r3)
    93a8:	183ff926 	beq	r3,zero,9390 <_read_r+0x34>
    93ac:	80c00015 	stw	r3,0(r16)
    93b0:	dfc00117 	ldw	ra,4(sp)
    93b4:	dc000017 	ldw	r16,0(sp)
    93b8:	dec00204 	addi	sp,sp,8
    93bc:	f800283a 	ret

000093c0 <strcmp>:
    93c0:	2144b03a 	or	r2,r4,r5
    93c4:	108000cc 	andi	r2,r2,3
    93c8:	1000171e 	bne	r2,zero,9428 <strcmp+0x68>
    93cc:	20800017 	ldw	r2,0(r4)
    93d0:	28c00017 	ldw	r3,0(r5)
    93d4:	10c0141e 	bne	r2,r3,9428 <strcmp+0x68>
    93d8:	027fbff4 	movhi	r9,65279
    93dc:	4a7fbfc4 	addi	r9,r9,-257
    93e0:	1247883a 	add	r3,r2,r9
    93e4:	02202074 	movhi	r8,32897
    93e8:	0084303a 	nor	r2,zero,r2
    93ec:	1884703a 	and	r2,r3,r2
    93f0:	42202004 	addi	r8,r8,-32640
    93f4:	1204703a 	and	r2,r2,r8
    93f8:	10000226 	beq	r2,zero,9404 <strcmp+0x44>
    93fc:	00002406 	br	9490 <strcmp+0xd0>
    9400:	1000231e 	bne	r2,zero,9490 <strcmp+0xd0>
    9404:	21000104 	addi	r4,r4,4
    9408:	20c00017 	ldw	r3,0(r4)
    940c:	29400104 	addi	r5,r5,4
    9410:	29800017 	ldw	r6,0(r5)
    9414:	1a45883a 	add	r2,r3,r9
    9418:	00ce303a 	nor	r7,zero,r3
    941c:	11c4703a 	and	r2,r2,r7
    9420:	1204703a 	and	r2,r2,r8
    9424:	19bff626 	beq	r3,r6,9400 <strcmp+0x40>
    9428:	20800003 	ldbu	r2,0(r4)
    942c:	10c03fcc 	andi	r3,r2,255
    9430:	18c0201c 	xori	r3,r3,128
    9434:	18ffe004 	addi	r3,r3,-128
    9438:	18000d26 	beq	r3,zero,9470 <strcmp+0xb0>
    943c:	29800007 	ldb	r6,0(r5)
    9440:	10803fcc 	andi	r2,r2,255
    9444:	19800326 	beq	r3,r6,9454 <strcmp+0x94>
    9448:	00000a06 	br	9474 <strcmp+0xb4>
    944c:	29800007 	ldb	r6,0(r5)
    9450:	11800b1e 	bne	r2,r6,9480 <strcmp+0xc0>
    9454:	21000044 	addi	r4,r4,1
    9458:	20c00003 	ldbu	r3,0(r4)
    945c:	29400044 	addi	r5,r5,1
    9460:	18803fcc 	andi	r2,r3,255
    9464:	1080201c 	xori	r2,r2,128
    9468:	10bfe004 	addi	r2,r2,-128
    946c:	103ff71e 	bne	r2,zero,944c <strcmp+0x8c>
    9470:	0005883a 	mov	r2,zero
    9474:	28c00003 	ldbu	r3,0(r5)
    9478:	10c5c83a 	sub	r2,r2,r3
    947c:	f800283a 	ret
    9480:	18803fcc 	andi	r2,r3,255
    9484:	28c00003 	ldbu	r3,0(r5)
    9488:	10c5c83a 	sub	r2,r2,r3
    948c:	f800283a 	ret
    9490:	0005883a 	mov	r2,zero
    9494:	f800283a 	ret

00009498 <__swbuf_r>:
    9498:	defffb04 	addi	sp,sp,-20
    949c:	dc800215 	stw	r18,8(sp)
    94a0:	dc400115 	stw	r17,4(sp)
    94a4:	dc000015 	stw	r16,0(sp)
    94a8:	dfc00415 	stw	ra,16(sp)
    94ac:	dcc00315 	stw	r19,12(sp)
    94b0:	2023883a 	mov	r17,r4
    94b4:	2825883a 	mov	r18,r5
    94b8:	3021883a 	mov	r16,r6
    94bc:	20000226 	beq	r4,zero,94c8 <__swbuf_r+0x30>
    94c0:	20800e17 	ldw	r2,56(r4)
    94c4:	10003e26 	beq	r2,zero,95c0 <__swbuf_r+0x128>
    94c8:	80800617 	ldw	r2,24(r16)
    94cc:	80c0030b 	ldhu	r3,12(r16)
    94d0:	80800215 	stw	r2,8(r16)
    94d4:	1880020c 	andi	r2,r3,8
    94d8:	10001f26 	beq	r2,zero,9558 <__swbuf_r+0xc0>
    94dc:	80800417 	ldw	r2,16(r16)
    94e0:	10001d26 	beq	r2,zero,9558 <__swbuf_r+0xc0>
    94e4:	1908000c 	andi	r4,r3,8192
    94e8:	94c03fcc 	andi	r19,r18,255
    94ec:	20002326 	beq	r4,zero,957c <__swbuf_r+0xe4>
    94f0:	80c00017 	ldw	r3,0(r16)
    94f4:	81000517 	ldw	r4,20(r16)
    94f8:	1885c83a 	sub	r2,r3,r2
    94fc:	1100290e 	bge	r2,r4,95a4 <__swbuf_r+0x10c>
    9500:	10800044 	addi	r2,r2,1
    9504:	81000217 	ldw	r4,8(r16)
    9508:	19400044 	addi	r5,r3,1
    950c:	81400015 	stw	r5,0(r16)
    9510:	213fffc4 	addi	r4,r4,-1
    9514:	81000215 	stw	r4,8(r16)
    9518:	1c800005 	stb	r18,0(r3)
    951c:	80c00517 	ldw	r3,20(r16)
    9520:	18802926 	beq	r3,r2,95c8 <__swbuf_r+0x130>
    9524:	8080030b 	ldhu	r2,12(r16)
    9528:	1080004c 	andi	r2,r2,1
    952c:	10000226 	beq	r2,zero,9538 <__swbuf_r+0xa0>
    9530:	98800298 	cmpnei	r2,r19,10
    9534:	10002426 	beq	r2,zero,95c8 <__swbuf_r+0x130>
    9538:	9805883a 	mov	r2,r19
    953c:	dfc00417 	ldw	ra,16(sp)
    9540:	dcc00317 	ldw	r19,12(sp)
    9544:	dc800217 	ldw	r18,8(sp)
    9548:	dc400117 	ldw	r17,4(sp)
    954c:	dc000017 	ldw	r16,0(sp)
    9550:	dec00504 	addi	sp,sp,20
    9554:	f800283a 	ret
    9558:	800b883a 	mov	r5,r16
    955c:	8809883a 	mov	r4,r17
    9560:	00027b80 	call	27b8 <__swsetup_r>
    9564:	10001c1e 	bne	r2,zero,95d8 <__swbuf_r+0x140>
    9568:	80c0030b 	ldhu	r3,12(r16)
    956c:	80800417 	ldw	r2,16(r16)
    9570:	94c03fcc 	andi	r19,r18,255
    9574:	1908000c 	andi	r4,r3,8192
    9578:	203fdd1e 	bne	r4,zero,94f0 <__swbuf_r+0x58>
    957c:	81001917 	ldw	r4,100(r16)
    9580:	18c80014 	ori	r3,r3,8192
    9584:	0177ffc4 	movi	r5,-8193
    9588:	2148703a 	and	r4,r4,r5
    958c:	80c0030d 	sth	r3,12(r16)
    9590:	80c00017 	ldw	r3,0(r16)
    9594:	81001915 	stw	r4,100(r16)
    9598:	81000517 	ldw	r4,20(r16)
    959c:	1885c83a 	sub	r2,r3,r2
    95a0:	113fd716 	blt	r2,r4,9500 <__swbuf_r+0x68>
    95a4:	800b883a 	mov	r5,r16
    95a8:	8809883a 	mov	r4,r17
    95ac:	000443c0 	call	443c <_fflush_r>
    95b0:	1000091e 	bne	r2,zero,95d8 <__swbuf_r+0x140>
    95b4:	80c00017 	ldw	r3,0(r16)
    95b8:	00800044 	movi	r2,1
    95bc:	003fd106 	br	9504 <__swbuf_r+0x6c>
    95c0:	00047d00 	call	47d0 <__sinit>
    95c4:	003fc006 	br	94c8 <__swbuf_r+0x30>
    95c8:	800b883a 	mov	r5,r16
    95cc:	8809883a 	mov	r4,r17
    95d0:	000443c0 	call	443c <_fflush_r>
    95d4:	103fd826 	beq	r2,zero,9538 <__swbuf_r+0xa0>
    95d8:	04ffffc4 	movi	r19,-1
    95dc:	003fd606 	br	9538 <__swbuf_r+0xa0>

000095e0 <__swbuf>:
    95e0:	00800074 	movhi	r2,1
    95e4:	280d883a 	mov	r6,r5
    95e8:	200b883a 	mov	r5,r4
    95ec:	11055a17 	ldw	r4,5480(r2)
    95f0:	00094981 	jmpi	9498 <__swbuf_r>

000095f4 <_wcrtomb_r>:
    95f4:	defffa04 	addi	sp,sp,-24
    95f8:	dc400415 	stw	r17,16(sp)
    95fc:	dc000315 	stw	r16,12(sp)
    9600:	00800074 	movhi	r2,1
    9604:	dfc00515 	stw	ra,20(sp)
    9608:	2021883a 	mov	r16,r4
    960c:	3823883a 	mov	r17,r7
    9610:	1080af17 	ldw	r2,700(r2)
    9614:	28000826 	beq	r5,zero,9638 <_wcrtomb_r+0x44>
    9618:	103ee83a 	callr	r2
    961c:	10ffffd8 	cmpnei	r3,r2,-1
    9620:	18000a26 	beq	r3,zero,964c <_wcrtomb_r+0x58>
    9624:	dfc00517 	ldw	ra,20(sp)
    9628:	dc400417 	ldw	r17,16(sp)
    962c:	dc000317 	ldw	r16,12(sp)
    9630:	dec00604 	addi	sp,sp,24
    9634:	f800283a 	ret
    9638:	000d883a 	mov	r6,zero
    963c:	d9400084 	addi	r5,sp,2
    9640:	103ee83a 	callr	r2
    9644:	10ffffd8 	cmpnei	r3,r2,-1
    9648:	183ff61e 	bne	r3,zero,9624 <_wcrtomb_r+0x30>
    964c:	00802284 	movi	r2,138
    9650:	88000015 	stw	zero,0(r17)
    9654:	80800015 	stw	r2,0(r16)
    9658:	00bfffc4 	movi	r2,-1
    965c:	003ff106 	br	9624 <_wcrtomb_r+0x30>

00009660 <wcrtomb>:
    9660:	defffa04 	addi	sp,sp,-24
    9664:	00800074 	movhi	r2,1
    9668:	dc400415 	stw	r17,16(sp)
    966c:	dc000315 	stw	r16,12(sp)
    9670:	dfc00515 	stw	ra,20(sp)
    9674:	14055a17 	ldw	r16,5480(r2)
    9678:	00800074 	movhi	r2,1
    967c:	3023883a 	mov	r17,r6
    9680:	1080af17 	ldw	r2,700(r2)
    9684:	300f883a 	mov	r7,r6
    9688:	20000b26 	beq	r4,zero,96b8 <wcrtomb+0x58>
    968c:	280d883a 	mov	r6,r5
    9690:	200b883a 	mov	r5,r4
    9694:	8009883a 	mov	r4,r16
    9698:	103ee83a 	callr	r2
    969c:	10ffffd8 	cmpnei	r3,r2,-1
    96a0:	18000b26 	beq	r3,zero,96d0 <wcrtomb+0x70>
    96a4:	dfc00517 	ldw	ra,20(sp)
    96a8:	dc400417 	ldw	r17,16(sp)
    96ac:	dc000317 	ldw	r16,12(sp)
    96b0:	dec00604 	addi	sp,sp,24
    96b4:	f800283a 	ret
    96b8:	000d883a 	mov	r6,zero
    96bc:	d9400084 	addi	r5,sp,2
    96c0:	8009883a 	mov	r4,r16
    96c4:	103ee83a 	callr	r2
    96c8:	10ffffd8 	cmpnei	r3,r2,-1
    96cc:	183ff51e 	bne	r3,zero,96a4 <wcrtomb+0x44>
    96d0:	00802284 	movi	r2,138
    96d4:	88000015 	stw	zero,0(r17)
    96d8:	80800015 	stw	r2,0(r16)
    96dc:	00bfffc4 	movi	r2,-1
    96e0:	003ff006 	br	96a4 <wcrtomb+0x44>

000096e4 <_wctomb_r>:
    96e4:	00800074 	movhi	r2,1
    96e8:	1080af17 	ldw	r2,700(r2)
    96ec:	1000683a 	jmp	r2

000096f0 <__ascii_wctomb>:
    96f0:	28000926 	beq	r5,zero,9718 <__ascii_wctomb+0x28>
    96f4:	30804030 	cmpltui	r2,r6,256
    96f8:	10000326 	beq	r2,zero,9708 <__ascii_wctomb+0x18>
    96fc:	29800005 	stb	r6,0(r5)
    9700:	00800044 	movi	r2,1
    9704:	f800283a 	ret
    9708:	00802284 	movi	r2,138
    970c:	20800015 	stw	r2,0(r4)
    9710:	00bfffc4 	movi	r2,-1
    9714:	f800283a 	ret
    9718:	0005883a 	mov	r2,zero
    971c:	f800283a 	ret

00009720 <__udivdi3>:
    9720:	defff504 	addi	sp,sp,-44
    9724:	dd000515 	stw	r20,20(sp)
    9728:	dc000115 	stw	r16,4(sp)
    972c:	dfc00a15 	stw	ra,40(sp)
    9730:	df000915 	stw	fp,36(sp)
    9734:	ddc00815 	stw	r23,32(sp)
    9738:	dd800715 	stw	r22,28(sp)
    973c:	dd400615 	stw	r21,24(sp)
    9740:	dcc00415 	stw	r19,16(sp)
    9744:	dc800315 	stw	r18,12(sp)
    9748:	dc400215 	stw	r17,8(sp)
    974c:	2029883a 	mov	r20,r4
    9750:	2821883a 	mov	r16,r5
    9754:	38008c1e 	bne	r7,zero,9988 <__udivdi3+0x268>
    9758:	3827883a 	mov	r19,r7
    975c:	3023883a 	mov	r17,r6
    9760:	2025883a 	mov	r18,r4
    9764:	2980422e 	bgeu	r5,r6,9870 <__udivdi3+0x150>
    9768:	00bfffd4 	movui	r2,65535
    976c:	282f883a 	mov	r23,r5
    9770:	1180af2e 	bgeu	r2,r6,9a30 <__udivdi3+0x310>
    9774:	00804034 	movhi	r2,256
    9778:	30815936 	bltu	r6,r2,9ce0 <__udivdi3+0x5c0>
    977c:	3006d63a 	srli	r3,r6,24
    9780:	04c00604 	movi	r19,24
    9784:	00800074 	movhi	r2,1
    9788:	1885883a 	add	r2,r3,r2
    978c:	10be0e43 	ldbu	r2,-1991(r2)
    9790:	14e7883a 	add	r19,r2,r19
    9794:	00800804 	movi	r2,32
    9798:	14c5c83a 	sub	r2,r2,r19
    979c:	10000526 	beq	r2,zero,97b4 <__udivdi3+0x94>
    97a0:	80a0983a 	sll	r16,r16,r2
    97a4:	a4e6d83a 	srl	r19,r20,r19
    97a8:	30a2983a 	sll	r17,r6,r2
    97ac:	a0a4983a 	sll	r18,r20,r2
    97b0:	9c2eb03a 	or	r23,r19,r16
    97b4:	882ad43a 	srli	r21,r17,16
    97b8:	b809883a 	mov	r4,r23
    97bc:	8dbfffcc 	andi	r22,r17,65535
    97c0:	a80b883a 	mov	r5,r21
    97c4:	000a4600 	call	a460 <__umodsi3>
    97c8:	a80b883a 	mov	r5,r21
    97cc:	b809883a 	mov	r4,r23
    97d0:	1029883a 	mov	r20,r2
    97d4:	000a3fc0 	call	a3fc <__udivsi3>
    97d8:	100b883a 	mov	r5,r2
    97dc:	b009883a 	mov	r4,r22
    97e0:	1021883a 	mov	r16,r2
    97e4:	000a4bc0 	call	a4bc <__mulsi3>
    97e8:	a028943a 	slli	r20,r20,16
    97ec:	9006d43a 	srli	r3,r18,16
    97f0:	a0c6b03a 	or	r3,r20,r3
    97f4:	1880052e 	bgeu	r3,r2,980c <__udivdi3+0xec>
    97f8:	1c47883a 	add	r3,r3,r17
    97fc:	813fffc4 	addi	r4,r16,-1
    9800:	1c400136 	bltu	r3,r17,9808 <__udivdi3+0xe8>
    9804:	18814736 	bltu	r3,r2,9d24 <__udivdi3+0x604>
    9808:	2021883a 	mov	r16,r4
    980c:	18a7c83a 	sub	r19,r3,r2
    9810:	9809883a 	mov	r4,r19
    9814:	a80b883a 	mov	r5,r21
    9818:	000a4600 	call	a460 <__umodsi3>
    981c:	1029883a 	mov	r20,r2
    9820:	9809883a 	mov	r4,r19
    9824:	a80b883a 	mov	r5,r21
    9828:	a028943a 	slli	r20,r20,16
    982c:	000a3fc0 	call	a3fc <__udivsi3>
    9830:	100b883a 	mov	r5,r2
    9834:	b009883a 	mov	r4,r22
    9838:	94bfffcc 	andi	r18,r18,65535
    983c:	1027883a 	mov	r19,r2
    9840:	a4a4b03a 	or	r18,r20,r18
    9844:	000a4bc0 	call	a4bc <__mulsi3>
    9848:	9080052e 	bgeu	r18,r2,9860 <__udivdi3+0x140>
    984c:	8ca5883a 	add	r18,r17,r18
    9850:	98ffffc4 	addi	r3,r19,-1
    9854:	94400136 	bltu	r18,r17,985c <__udivdi3+0x13c>
    9858:	90813036 	bltu	r18,r2,9d1c <__udivdi3+0x5fc>
    985c:	1827883a 	mov	r19,r3
    9860:	8004943a 	slli	r2,r16,16
    9864:	0007883a 	mov	r3,zero
    9868:	14c4b03a 	or	r2,r2,r19
    986c:	00005a06 	br	99d8 <__udivdi3+0x2b8>
    9870:	3000041e 	bne	r6,zero,9884 <__udivdi3+0x164>
    9874:	000b883a 	mov	r5,zero
    9878:	01000044 	movi	r4,1
    987c:	000a3fc0 	call	a3fc <__udivsi3>
    9880:	1023883a 	mov	r17,r2
    9884:	00bfffd4 	movui	r2,65535
    9888:	1440642e 	bgeu	r2,r17,9a1c <__udivdi3+0x2fc>
    988c:	00804034 	movhi	r2,256
    9890:	88811036 	bltu	r17,r2,9cd4 <__udivdi3+0x5b4>
    9894:	8806d63a 	srli	r3,r17,24
    9898:	04c00604 	movi	r19,24
    989c:	00800074 	movhi	r2,1
    98a0:	1885883a 	add	r2,r3,r2
    98a4:	10be0e43 	ldbu	r2,-1991(r2)
    98a8:	00c00804 	movi	r3,32
    98ac:	14e7883a 	add	r19,r2,r19
    98b0:	1cc7c83a 	sub	r3,r3,r19
    98b4:	1800631e 	bne	r3,zero,9a44 <__udivdi3+0x324>
    98b8:	882ad43a 	srli	r21,r17,16
    98bc:	8461c83a 	sub	r16,r16,r17
    98c0:	8dbfffcc 	andi	r22,r17,65535
    98c4:	00c00044 	movi	r3,1
    98c8:	8009883a 	mov	r4,r16
    98cc:	a80b883a 	mov	r5,r21
    98d0:	d8c00015 	stw	r3,0(sp)
    98d4:	000a4600 	call	a460 <__umodsi3>
    98d8:	8009883a 	mov	r4,r16
    98dc:	a80b883a 	mov	r5,r21
    98e0:	1029883a 	mov	r20,r2
    98e4:	000a3fc0 	call	a3fc <__udivsi3>
    98e8:	1009883a 	mov	r4,r2
    98ec:	b00b883a 	mov	r5,r22
    98f0:	1021883a 	mov	r16,r2
    98f4:	000a4bc0 	call	a4bc <__mulsi3>
    98f8:	a028943a 	slli	r20,r20,16
    98fc:	9008d43a 	srli	r4,r18,16
    9900:	d8c00017 	ldw	r3,0(sp)
    9904:	a108b03a 	or	r4,r20,r4
    9908:	2080052e 	bgeu	r4,r2,9920 <__udivdi3+0x200>
    990c:	2449883a 	add	r4,r4,r17
    9910:	817fffc4 	addi	r5,r16,-1
    9914:	24400136 	bltu	r4,r17,991c <__udivdi3+0x1fc>
    9918:	20810536 	bltu	r4,r2,9d30 <__udivdi3+0x610>
    991c:	2821883a 	mov	r16,r5
    9920:	20a7c83a 	sub	r19,r4,r2
    9924:	9809883a 	mov	r4,r19
    9928:	a80b883a 	mov	r5,r21
    992c:	d8c00015 	stw	r3,0(sp)
    9930:	000a4600 	call	a460 <__umodsi3>
    9934:	1029883a 	mov	r20,r2
    9938:	9809883a 	mov	r4,r19
    993c:	a80b883a 	mov	r5,r21
    9940:	a028943a 	slli	r20,r20,16
    9944:	000a3fc0 	call	a3fc <__udivsi3>
    9948:	b00b883a 	mov	r5,r22
    994c:	1009883a 	mov	r4,r2
    9950:	94bfffcc 	andi	r18,r18,65535
    9954:	1027883a 	mov	r19,r2
    9958:	a4a4b03a 	or	r18,r20,r18
    995c:	000a4bc0 	call	a4bc <__mulsi3>
    9960:	d8c00017 	ldw	r3,0(sp)
    9964:	9080052e 	bgeu	r18,r2,997c <__udivdi3+0x25c>
    9968:	8ca5883a 	add	r18,r17,r18
    996c:	993fffc4 	addi	r4,r19,-1
    9970:	94400136 	bltu	r18,r17,9978 <__udivdi3+0x258>
    9974:	9080e736 	bltu	r18,r2,9d14 <__udivdi3+0x5f4>
    9978:	2027883a 	mov	r19,r4
    997c:	8004943a 	slli	r2,r16,16
    9980:	14c4b03a 	or	r2,r2,r19
    9984:	00001406 	br	99d8 <__udivdi3+0x2b8>
    9988:	29c01136 	bltu	r5,r7,99d0 <__udivdi3+0x2b0>
    998c:	00bfffd4 	movui	r2,65535
    9990:	11c01d2e 	bgeu	r2,r7,9a08 <__udivdi3+0x2e8>
    9994:	00804034 	movhi	r2,256
    9998:	3880c336 	bltu	r7,r2,9ca8 <__udivdi3+0x588>
    999c:	3808d63a 	srli	r4,r7,24
    99a0:	00c00604 	movi	r3,24
    99a4:	00800074 	movhi	r2,1
    99a8:	2085883a 	add	r2,r4,r2
    99ac:	113e0e43 	ldbu	r4,-1991(r2)
    99b0:	20c9883a 	add	r4,r4,r3
    99b4:	00c00804 	movi	r3,32
    99b8:	192fc83a 	sub	r23,r3,r4
    99bc:	b800581e 	bne	r23,zero,9b20 <__udivdi3+0x400>
    99c0:	3c00bc36 	bltu	r7,r16,9cb4 <__udivdi3+0x594>
    99c4:	a185403a 	cmpgeu	r2,r20,r6
    99c8:	0007883a 	mov	r3,zero
    99cc:	00000206 	br	99d8 <__udivdi3+0x2b8>
    99d0:	0007883a 	mov	r3,zero
    99d4:	0005883a 	mov	r2,zero
    99d8:	dfc00a17 	ldw	ra,40(sp)
    99dc:	df000917 	ldw	fp,36(sp)
    99e0:	ddc00817 	ldw	r23,32(sp)
    99e4:	dd800717 	ldw	r22,28(sp)
    99e8:	dd400617 	ldw	r21,24(sp)
    99ec:	dd000517 	ldw	r20,20(sp)
    99f0:	dcc00417 	ldw	r19,16(sp)
    99f4:	dc800317 	ldw	r18,12(sp)
    99f8:	dc400217 	ldw	r17,8(sp)
    99fc:	dc000117 	ldw	r16,4(sp)
    9a00:	dec00b04 	addi	sp,sp,44
    9a04:	f800283a 	ret
    9a08:	38804030 	cmpltui	r2,r7,256
    9a0c:	1000ac1e 	bne	r2,zero,9cc0 <__udivdi3+0x5a0>
    9a10:	3808d23a 	srli	r4,r7,8
    9a14:	00c00204 	movi	r3,8
    9a18:	003fe206 	br	99a4 <__udivdi3+0x284>
    9a1c:	88804030 	cmpltui	r2,r17,256
    9a20:	1000b21e 	bne	r2,zero,9cec <__udivdi3+0x5cc>
    9a24:	8806d23a 	srli	r3,r17,8
    9a28:	04c00204 	movi	r19,8
    9a2c:	003f9b06 	br	989c <__udivdi3+0x17c>
    9a30:	30804030 	cmpltui	r2,r6,256
    9a34:	1000a51e 	bne	r2,zero,9ccc <__udivdi3+0x5ac>
    9a38:	3006d23a 	srli	r3,r6,8
    9a3c:	04c00204 	movi	r19,8
    9a40:	003f5006 	br	9784 <__udivdi3+0x64>
    9a44:	88e2983a 	sll	r17,r17,r3
    9a48:	84eed83a 	srl	r23,r16,r19
    9a4c:	a0e4983a 	sll	r18,r20,r3
    9a50:	882ad43a 	srli	r21,r17,16
    9a54:	b809883a 	mov	r4,r23
    9a58:	80e0983a 	sll	r16,r16,r3
    9a5c:	a80b883a 	mov	r5,r21
    9a60:	000a4600 	call	a460 <__umodsi3>
    9a64:	b809883a 	mov	r4,r23
    9a68:	a4e6d83a 	srl	r19,r20,r19
    9a6c:	a80b883a 	mov	r5,r21
    9a70:	1029883a 	mov	r20,r2
    9a74:	8dbfffcc 	andi	r22,r17,65535
    9a78:	000a3fc0 	call	a3fc <__udivsi3>
    9a7c:	b009883a 	mov	r4,r22
    9a80:	100b883a 	mov	r5,r2
    9a84:	9c26b03a 	or	r19,r19,r16
    9a88:	102f883a 	mov	r23,r2
    9a8c:	000a4bc0 	call	a4bc <__mulsi3>
    9a90:	a028943a 	slli	r20,r20,16
    9a94:	9808d43a 	srli	r4,r19,16
    9a98:	a108b03a 	or	r4,r20,r4
    9a9c:	2080062e 	bgeu	r4,r2,9ab8 <__udivdi3+0x398>
    9aa0:	2449883a 	add	r4,r4,r17
    9aa4:	b8ffffc4 	addi	r3,r23,-1
    9aa8:	24409836 	bltu	r4,r17,9d0c <__udivdi3+0x5ec>
    9aac:	2080972e 	bgeu	r4,r2,9d0c <__udivdi3+0x5ec>
    9ab0:	bdffff84 	addi	r23,r23,-2
    9ab4:	2449883a 	add	r4,r4,r17
    9ab8:	20a1c83a 	sub	r16,r4,r2
    9abc:	8009883a 	mov	r4,r16
    9ac0:	a80b883a 	mov	r5,r21
    9ac4:	000a4600 	call	a460 <__umodsi3>
    9ac8:	1029883a 	mov	r20,r2
    9acc:	8009883a 	mov	r4,r16
    9ad0:	a80b883a 	mov	r5,r21
    9ad4:	a020943a 	slli	r16,r20,16
    9ad8:	000a3fc0 	call	a3fc <__udivsi3>
    9adc:	100b883a 	mov	r5,r2
    9ae0:	b009883a 	mov	r4,r22
    9ae4:	9cffffcc 	andi	r19,r19,65535
    9ae8:	1039883a 	mov	fp,r2
    9aec:	84e0b03a 	or	r16,r16,r19
    9af0:	000a4bc0 	call	a4bc <__mulsi3>
    9af4:	8080062e 	bgeu	r16,r2,9b10 <__udivdi3+0x3f0>
    9af8:	8461883a 	add	r16,r16,r17
    9afc:	e0ffffc4 	addi	r3,fp,-1
    9b00:	84407e36 	bltu	r16,r17,9cfc <__udivdi3+0x5dc>
    9b04:	80807d2e 	bgeu	r16,r2,9cfc <__udivdi3+0x5dc>
    9b08:	e73fff84 	addi	fp,fp,-2
    9b0c:	8461883a 	add	r16,r16,r17
    9b10:	b806943a 	slli	r3,r23,16
    9b14:	80a1c83a 	sub	r16,r16,r2
    9b18:	1f06b03a 	or	r3,r3,fp
    9b1c:	003f6a06 	br	98c8 <__udivdi3+0x1a8>
    9b20:	3106d83a 	srl	r3,r6,r4
    9b24:	3dce983a 	sll	r7,r7,r23
    9b28:	8122d83a 	srl	r17,r16,r4
    9b2c:	a104d83a 	srl	r2,r20,r4
    9b30:	19ecb03a 	or	r22,r3,r7
    9b34:	b024d43a 	srli	r18,r22,16
    9b38:	85e0983a 	sll	r16,r16,r23
    9b3c:	8809883a 	mov	r4,r17
    9b40:	900b883a 	mov	r5,r18
    9b44:	1420b03a 	or	r16,r2,r16
    9b48:	b0bfffcc 	andi	r2,r22,65535
    9b4c:	35ea983a 	sll	r21,r6,r23
    9b50:	d8800015 	stw	r2,0(sp)
    9b54:	000a4600 	call	a460 <__umodsi3>
    9b58:	900b883a 	mov	r5,r18
    9b5c:	8809883a 	mov	r4,r17
    9b60:	1027883a 	mov	r19,r2
    9b64:	000a3fc0 	call	a3fc <__udivsi3>
    9b68:	b13fffcc 	andi	r4,r22,65535
    9b6c:	100b883a 	mov	r5,r2
    9b70:	1039883a 	mov	fp,r2
    9b74:	000a4bc0 	call	a4bc <__mulsi3>
    9b78:	9826943a 	slli	r19,r19,16
    9b7c:	8008d43a 	srli	r4,r16,16
    9b80:	9908b03a 	or	r4,r19,r4
    9b84:	2080062e 	bgeu	r4,r2,9ba0 <__udivdi3+0x480>
    9b88:	2589883a 	add	r4,r4,r22
    9b8c:	e0ffffc4 	addi	r3,fp,-1
    9b90:	25805c36 	bltu	r4,r22,9d04 <__udivdi3+0x5e4>
    9b94:	20805b2e 	bgeu	r4,r2,9d04 <__udivdi3+0x5e4>
    9b98:	e73fff84 	addi	fp,fp,-2
    9b9c:	2589883a 	add	r4,r4,r22
    9ba0:	20a3c83a 	sub	r17,r4,r2
    9ba4:	8809883a 	mov	r4,r17
    9ba8:	900b883a 	mov	r5,r18
    9bac:	000a4600 	call	a460 <__umodsi3>
    9bb0:	1027883a 	mov	r19,r2
    9bb4:	8809883a 	mov	r4,r17
    9bb8:	900b883a 	mov	r5,r18
    9bbc:	9826943a 	slli	r19,r19,16
    9bc0:	000a3fc0 	call	a3fc <__udivsi3>
    9bc4:	100b883a 	mov	r5,r2
    9bc8:	b13fffcc 	andi	r4,r22,65535
    9bcc:	843fffcc 	andi	r16,r16,65535
    9bd0:	1023883a 	mov	r17,r2
    9bd4:	9c20b03a 	or	r16,r19,r16
    9bd8:	000a4bc0 	call	a4bc <__mulsi3>
    9bdc:	8080062e 	bgeu	r16,r2,9bf8 <__udivdi3+0x4d8>
    9be0:	85a1883a 	add	r16,r16,r22
    9be4:	88ffffc4 	addi	r3,r17,-1
    9be8:	85804236 	bltu	r16,r22,9cf4 <__udivdi3+0x5d4>
    9bec:	8080412e 	bgeu	r16,r2,9cf4 <__udivdi3+0x5d4>
    9bf0:	8c7fff84 	addi	r17,r17,-2
    9bf4:	85a1883a 	add	r16,r16,r22
    9bf8:	e038943a 	slli	fp,fp,16
    9bfc:	adbfffcc 	andi	r22,r21,65535
    9c00:	b00b883a 	mov	r5,r22
    9c04:	e478b03a 	or	fp,fp,r17
    9c08:	e024d43a 	srli	r18,fp,16
    9c0c:	e4ffffcc 	andi	r19,fp,65535
    9c10:	9809883a 	mov	r4,r19
    9c14:	a82ad43a 	srli	r21,r21,16
    9c18:	80a1c83a 	sub	r16,r16,r2
    9c1c:	000a4bc0 	call	a4bc <__mulsi3>
    9c20:	9009883a 	mov	r4,r18
    9c24:	b00b883a 	mov	r5,r22
    9c28:	d8800015 	stw	r2,0(sp)
    9c2c:	000a4bc0 	call	a4bc <__mulsi3>
    9c30:	9009883a 	mov	r4,r18
    9c34:	a80b883a 	mov	r5,r21
    9c38:	1023883a 	mov	r17,r2
    9c3c:	000a4bc0 	call	a4bc <__mulsi3>
    9c40:	a80b883a 	mov	r5,r21
    9c44:	9809883a 	mov	r4,r19
    9c48:	1025883a 	mov	r18,r2
    9c4c:	000a4bc0 	call	a4bc <__mulsi3>
    9c50:	d9800017 	ldw	r6,0(sp)
    9c54:	1445883a 	add	r2,r2,r17
    9c58:	3006d43a 	srli	r3,r6,16
    9c5c:	1885883a 	add	r2,r3,r2
    9c60:	1440022e 	bgeu	r2,r17,9c6c <__udivdi3+0x54c>
    9c64:	00c00074 	movhi	r3,1
    9c68:	90e5883a 	add	r18,r18,r3
    9c6c:	1006d43a 	srli	r3,r2,16
    9c70:	1c87883a 	add	r3,r3,r18
    9c74:	80c00936 	bltu	r16,r3,9c9c <__udivdi3+0x57c>
    9c78:	80c00326 	beq	r16,r3,9c88 <__udivdi3+0x568>
    9c7c:	e005883a 	mov	r2,fp
    9c80:	0007883a 	mov	r3,zero
    9c84:	003f5406 	br	99d8 <__udivdi3+0x2b8>
    9c88:	1004943a 	slli	r2,r2,16
    9c8c:	a5c6983a 	sll	r3,r20,r23
    9c90:	31bfffcc 	andi	r6,r6,65535
    9c94:	1185883a 	add	r2,r2,r6
    9c98:	18bff82e 	bgeu	r3,r2,9c7c <__udivdi3+0x55c>
    9c9c:	e0bfffc4 	addi	r2,fp,-1
    9ca0:	0007883a 	mov	r3,zero
    9ca4:	003f4c06 	br	99d8 <__udivdi3+0x2b8>
    9ca8:	3808d43a 	srli	r4,r7,16
    9cac:	00c00404 	movi	r3,16
    9cb0:	003f3c06 	br	99a4 <__udivdi3+0x284>
    9cb4:	0007883a 	mov	r3,zero
    9cb8:	00800044 	movi	r2,1
    9cbc:	003f4606 	br	99d8 <__udivdi3+0x2b8>
    9cc0:	3809883a 	mov	r4,r7
    9cc4:	0007883a 	mov	r3,zero
    9cc8:	003f3606 	br	99a4 <__udivdi3+0x284>
    9ccc:	3007883a 	mov	r3,r6
    9cd0:	003eac06 	br	9784 <__udivdi3+0x64>
    9cd4:	8806d43a 	srli	r3,r17,16
    9cd8:	04c00404 	movi	r19,16
    9cdc:	003eef06 	br	989c <__udivdi3+0x17c>
    9ce0:	3006d43a 	srli	r3,r6,16
    9ce4:	04c00404 	movi	r19,16
    9ce8:	003ea606 	br	9784 <__udivdi3+0x64>
    9cec:	8807883a 	mov	r3,r17
    9cf0:	003eea06 	br	989c <__udivdi3+0x17c>
    9cf4:	1823883a 	mov	r17,r3
    9cf8:	003fbf06 	br	9bf8 <__udivdi3+0x4d8>
    9cfc:	1839883a 	mov	fp,r3
    9d00:	003f8306 	br	9b10 <__udivdi3+0x3f0>
    9d04:	1839883a 	mov	fp,r3
    9d08:	003fa506 	br	9ba0 <__udivdi3+0x480>
    9d0c:	182f883a 	mov	r23,r3
    9d10:	003f6906 	br	9ab8 <__udivdi3+0x398>
    9d14:	9cffff84 	addi	r19,r19,-2
    9d18:	003f1806 	br	997c <__udivdi3+0x25c>
    9d1c:	9cffff84 	addi	r19,r19,-2
    9d20:	003ecf06 	br	9860 <__udivdi3+0x140>
    9d24:	843fff84 	addi	r16,r16,-2
    9d28:	1c47883a 	add	r3,r3,r17
    9d2c:	003eb706 	br	980c <__udivdi3+0xec>
    9d30:	843fff84 	addi	r16,r16,-2
    9d34:	2449883a 	add	r4,r4,r17
    9d38:	003ef906 	br	9920 <__udivdi3+0x200>

00009d3c <__umoddi3>:
    9d3c:	defff304 	addi	sp,sp,-52
    9d40:	dc400415 	stw	r17,16(sp)
    9d44:	dc000315 	stw	r16,12(sp)
    9d48:	dfc00c15 	stw	ra,48(sp)
    9d4c:	df000b15 	stw	fp,44(sp)
    9d50:	ddc00a15 	stw	r23,40(sp)
    9d54:	dd800915 	stw	r22,36(sp)
    9d58:	dd400815 	stw	r21,32(sp)
    9d5c:	dd000715 	stw	r20,28(sp)
    9d60:	dcc00615 	stw	r19,24(sp)
    9d64:	dc800515 	stw	r18,20(sp)
    9d68:	2823883a 	mov	r17,r5
    9d6c:	2021883a 	mov	r16,r4
    9d70:	3800781e 	bne	r7,zero,9f54 <__umoddi3+0x218>
    9d74:	3825883a 	mov	r18,r7
    9d78:	3027883a 	mov	r19,r6
    9d7c:	2029883a 	mov	r20,r4
    9d80:	29803d2e 	bgeu	r5,r6,9e78 <__umoddi3+0x13c>
    9d84:	00bfffd4 	movui	r2,65535
    9d88:	2839883a 	mov	fp,r5
    9d8c:	11809f36 	bltu	r2,r6,a00c <__umoddi3+0x2d0>
    9d90:	30804030 	cmpltui	r2,r6,256
    9d94:	1001451e 	bne	r2,zero,a2ac <__umoddi3+0x570>
    9d98:	3006d23a 	srli	r3,r6,8
    9d9c:	04800204 	movi	r18,8
    9da0:	00800074 	movhi	r2,1
    9da4:	1885883a 	add	r2,r3,r2
    9da8:	113e0e43 	ldbu	r4,-1991(r2)
    9dac:	00800804 	movi	r2,32
    9db0:	2489883a 	add	r4,r4,r18
    9db4:	1125c83a 	sub	r18,r2,r4
    9db8:	90000526 	beq	r18,zero,9dd0 <__umoddi3+0x94>
    9dbc:	8ca2983a 	sll	r17,r17,r18
    9dc0:	8108d83a 	srl	r4,r16,r4
    9dc4:	34a6983a 	sll	r19,r6,r18
    9dc8:	84a8983a 	sll	r20,r16,r18
    9dcc:	2478b03a 	or	fp,r4,r17
    9dd0:	982cd43a 	srli	r22,r19,16
    9dd4:	e009883a 	mov	r4,fp
    9dd8:	9dffffcc 	andi	r23,r19,65535
    9ddc:	b00b883a 	mov	r5,r22
    9de0:	000a4600 	call	a460 <__umodsi3>
    9de4:	b00b883a 	mov	r5,r22
    9de8:	e009883a 	mov	r4,fp
    9dec:	102b883a 	mov	r21,r2
    9df0:	000a3fc0 	call	a3fc <__udivsi3>
    9df4:	100b883a 	mov	r5,r2
    9df8:	b809883a 	mov	r4,r23
    9dfc:	000a4bc0 	call	a4bc <__mulsi3>
    9e00:	a82a943a 	slli	r21,r21,16
    9e04:	a006d43a 	srli	r3,r20,16
    9e08:	a8c6b03a 	or	r3,r21,r3
    9e0c:	1880032e 	bgeu	r3,r2,9e1c <__umoddi3+0xe0>
    9e10:	1cc7883a 	add	r3,r3,r19
    9e14:	1cc00136 	bltu	r3,r19,9e1c <__umoddi3+0xe0>
    9e18:	18813836 	bltu	r3,r2,a2fc <__umoddi3+0x5c0>
    9e1c:	18a1c83a 	sub	r16,r3,r2
    9e20:	b00b883a 	mov	r5,r22
    9e24:	8009883a 	mov	r4,r16
    9e28:	000a4600 	call	a460 <__umodsi3>
    9e2c:	b00b883a 	mov	r5,r22
    9e30:	8009883a 	mov	r4,r16
    9e34:	1023883a 	mov	r17,r2
    9e38:	000a3fc0 	call	a3fc <__udivsi3>
    9e3c:	100b883a 	mov	r5,r2
    9e40:	b809883a 	mov	r4,r23
    9e44:	8822943a 	slli	r17,r17,16
    9e48:	000a4bc0 	call	a4bc <__mulsi3>
    9e4c:	a0ffffcc 	andi	r3,r20,65535
    9e50:	88c6b03a 	or	r3,r17,r3
    9e54:	1880042e 	bgeu	r3,r2,9e68 <__umoddi3+0x12c>
    9e58:	1cc7883a 	add	r3,r3,r19
    9e5c:	1cc00236 	bltu	r3,r19,9e68 <__umoddi3+0x12c>
    9e60:	1880012e 	bgeu	r3,r2,9e68 <__umoddi3+0x12c>
    9e64:	1cc7883a 	add	r3,r3,r19
    9e68:	1885c83a 	sub	r2,r3,r2
    9e6c:	1484d83a 	srl	r2,r2,r18
    9e70:	0007883a 	mov	r3,zero
    9e74:	00003a06 	br	9f60 <__umoddi3+0x224>
    9e78:	3000041e 	bne	r6,zero,9e8c <__umoddi3+0x150>
    9e7c:	000b883a 	mov	r5,zero
    9e80:	01000044 	movi	r4,1
    9e84:	000a3fc0 	call	a3fc <__udivsi3>
    9e88:	1027883a 	mov	r19,r2
    9e8c:	00bfffd4 	movui	r2,65535
    9e90:	14c0592e 	bgeu	r2,r19,9ff8 <__umoddi3+0x2bc>
    9e94:	00804034 	movhi	r2,256
    9e98:	98810c36 	bltu	r19,r2,a2cc <__umoddi3+0x590>
    9e9c:	9806d63a 	srli	r3,r19,24
    9ea0:	04800604 	movi	r18,24
    9ea4:	00800074 	movhi	r2,1
    9ea8:	1885883a 	add	r2,r3,r2
    9eac:	10fe0e43 	ldbu	r3,-1991(r2)
    9eb0:	00800804 	movi	r2,32
    9eb4:	1c87883a 	add	r3,r3,r18
    9eb8:	10e5c83a 	sub	r18,r2,r3
    9ebc:	9000c51e 	bne	r18,zero,a1d4 <__umoddi3+0x498>
    9ec0:	982ad43a 	srli	r21,r19,16
    9ec4:	8ce3c83a 	sub	r17,r17,r19
    9ec8:	9dbfffcc 	andi	r22,r19,65535
    9ecc:	a80b883a 	mov	r5,r21
    9ed0:	8809883a 	mov	r4,r17
    9ed4:	000a4600 	call	a460 <__umodsi3>
    9ed8:	a80b883a 	mov	r5,r21
    9edc:	8809883a 	mov	r4,r17
    9ee0:	102f883a 	mov	r23,r2
    9ee4:	000a3fc0 	call	a3fc <__udivsi3>
    9ee8:	b00b883a 	mov	r5,r22
    9eec:	1009883a 	mov	r4,r2
    9ef0:	000a4bc0 	call	a4bc <__mulsi3>
    9ef4:	b82e943a 	slli	r23,r23,16
    9ef8:	a006d43a 	srli	r3,r20,16
    9efc:	b8c6b03a 	or	r3,r23,r3
    9f00:	1880042e 	bgeu	r3,r2,9f14 <__umoddi3+0x1d8>
    9f04:	1cc7883a 	add	r3,r3,r19
    9f08:	1cc00236 	bltu	r3,r19,9f14 <__umoddi3+0x1d8>
    9f0c:	1880012e 	bgeu	r3,r2,9f14 <__umoddi3+0x1d8>
    9f10:	1cc7883a 	add	r3,r3,r19
    9f14:	18a1c83a 	sub	r16,r3,r2
    9f18:	a80b883a 	mov	r5,r21
    9f1c:	8009883a 	mov	r4,r16
    9f20:	000a4600 	call	a460 <__umodsi3>
    9f24:	1023883a 	mov	r17,r2
    9f28:	a80b883a 	mov	r5,r21
    9f2c:	8009883a 	mov	r4,r16
    9f30:	000a3fc0 	call	a3fc <__udivsi3>
    9f34:	8822943a 	slli	r17,r17,16
    9f38:	b00b883a 	mov	r5,r22
    9f3c:	1009883a 	mov	r4,r2
    9f40:	000a4bc0 	call	a4bc <__mulsi3>
    9f44:	a53fffcc 	andi	r20,r20,65535
    9f48:	8d06b03a 	or	r3,r17,r20
    9f4c:	18bfc62e 	bgeu	r3,r2,9e68 <__umoddi3+0x12c>
    9f50:	003fc106 	br	9e58 <__umoddi3+0x11c>
    9f54:	2005883a 	mov	r2,r4
    9f58:	29c00d2e 	bgeu	r5,r7,9f90 <__umoddi3+0x254>
    9f5c:	2807883a 	mov	r3,r5
    9f60:	dfc00c17 	ldw	ra,48(sp)
    9f64:	df000b17 	ldw	fp,44(sp)
    9f68:	ddc00a17 	ldw	r23,40(sp)
    9f6c:	dd800917 	ldw	r22,36(sp)
    9f70:	dd400817 	ldw	r21,32(sp)
    9f74:	dd000717 	ldw	r20,28(sp)
    9f78:	dcc00617 	ldw	r19,24(sp)
    9f7c:	dc800517 	ldw	r18,20(sp)
    9f80:	dc400417 	ldw	r17,16(sp)
    9f84:	dc000317 	ldw	r16,12(sp)
    9f88:	dec00d04 	addi	sp,sp,52
    9f8c:	f800283a 	ret
    9f90:	013fffd4 	movui	r4,65535
    9f94:	2807883a 	mov	r3,r5
    9f98:	21c0122e 	bgeu	r4,r7,9fe4 <__umoddi3+0x2a8>
    9f9c:	01004034 	movhi	r4,256
    9fa0:	3900c736 	bltu	r7,r4,a2c0 <__umoddi3+0x584>
    9fa4:	3810d63a 	srli	r8,r7,24
    9fa8:	01400604 	movi	r5,24
    9fac:	01000074 	movhi	r4,1
    9fb0:	4109883a 	add	r4,r8,r4
    9fb4:	253e0e43 	ldbu	r20,-1991(r4)
    9fb8:	05400804 	movi	r21,32
    9fbc:	a169883a 	add	r20,r20,r5
    9fc0:	ad2bc83a 	sub	r21,r21,r20
    9fc4:	a800161e 	bne	r21,zero,a020 <__umoddi3+0x2e4>
    9fc8:	3c400136 	bltu	r7,r17,9fd0 <__umoddi3+0x294>
    9fcc:	81bfe436 	bltu	r16,r6,9f60 <__umoddi3+0x224>
    9fd0:	8185c83a 	sub	r2,r16,r6
    9fd4:	89cfc83a 	sub	r7,r17,r7
    9fd8:	8087803a 	cmpltu	r3,r16,r2
    9fdc:	38c7c83a 	sub	r3,r7,r3
    9fe0:	003fdf06 	br	9f60 <__umoddi3+0x224>
    9fe4:	39004030 	cmpltui	r4,r7,256
    9fe8:	2000b21e 	bne	r4,zero,a2b4 <__umoddi3+0x578>
    9fec:	3810d23a 	srli	r8,r7,8
    9ff0:	01400204 	movi	r5,8
    9ff4:	003fed06 	br	9fac <__umoddi3+0x270>
    9ff8:	98804030 	cmpltui	r2,r19,256
    9ffc:	1000b61e 	bne	r2,zero,a2d8 <__umoddi3+0x59c>
    a000:	9806d23a 	srli	r3,r19,8
    a004:	04800204 	movi	r18,8
    a008:	003fa606 	br	9ea4 <__umoddi3+0x168>
    a00c:	00804034 	movhi	r2,256
    a010:	3080b336 	bltu	r6,r2,a2e0 <__umoddi3+0x5a4>
    a014:	3006d63a 	srli	r3,r6,24
    a018:	04800604 	movi	r18,24
    a01c:	003f6006 	br	9da0 <__umoddi3+0x64>
    a020:	3508d83a 	srl	r4,r6,r20
    a024:	3d4e983a 	sll	r7,r7,r21
    a028:	8d38d83a 	srl	fp,r17,r20
    a02c:	8504d83a 	srl	r2,r16,r20
    a030:	21e4b03a 	or	r18,r4,r7
    a034:	902cd43a 	srli	r22,r18,16
    a038:	8d62983a 	sll	r17,r17,r21
    a03c:	e009883a 	mov	r4,fp
    a040:	b00b883a 	mov	r5,r22
    a044:	3566983a 	sll	r19,r6,r21
    a048:	1462b03a 	or	r17,r2,r17
    a04c:	000a4600 	call	a460 <__umodsi3>
    a050:	e009883a 	mov	r4,fp
    a054:	b00b883a 	mov	r5,r22
    a058:	95ffffcc 	andi	r23,r18,65535
    a05c:	d8800015 	stw	r2,0(sp)
    a060:	000a3fc0 	call	a3fc <__udivsi3>
    a064:	100b883a 	mov	r5,r2
    a068:	b809883a 	mov	r4,r23
    a06c:	1039883a 	mov	fp,r2
    a070:	000a4bc0 	call	a4bc <__mulsi3>
    a074:	d9800017 	ldw	r6,0(sp)
    a078:	8806d43a 	srli	r3,r17,16
    a07c:	8560983a 	sll	r16,r16,r21
    a080:	300c943a 	slli	r6,r6,16
    a084:	30c6b03a 	or	r3,r6,r3
    a088:	1880062e 	bgeu	r3,r2,a0a4 <__umoddi3+0x368>
    a08c:	1c87883a 	add	r3,r3,r18
    a090:	e13fffc4 	addi	r4,fp,-1
    a094:	1c809736 	bltu	r3,r18,a2f4 <__umoddi3+0x5b8>
    a098:	1880962e 	bgeu	r3,r2,a2f4 <__umoddi3+0x5b8>
    a09c:	e73fff84 	addi	fp,fp,-2
    a0a0:	1c87883a 	add	r3,r3,r18
    a0a4:	1887c83a 	sub	r3,r3,r2
    a0a8:	b00b883a 	mov	r5,r22
    a0ac:	1809883a 	mov	r4,r3
    a0b0:	d8c00115 	stw	r3,4(sp)
    a0b4:	000a4600 	call	a460 <__umodsi3>
    a0b8:	d8c00117 	ldw	r3,4(sp)
    a0bc:	b00b883a 	mov	r5,r22
    a0c0:	d8800015 	stw	r2,0(sp)
    a0c4:	1809883a 	mov	r4,r3
    a0c8:	000a3fc0 	call	a3fc <__udivsi3>
    a0cc:	100b883a 	mov	r5,r2
    a0d0:	b809883a 	mov	r4,r23
    a0d4:	102d883a 	mov	r22,r2
    a0d8:	000a4bc0 	call	a4bc <__mulsi3>
    a0dc:	d9800017 	ldw	r6,0(sp)
    a0e0:	8c7fffcc 	andi	r17,r17,65535
    a0e4:	300c943a 	slli	r6,r6,16
    a0e8:	3462b03a 	or	r17,r6,r17
    a0ec:	8880062e 	bgeu	r17,r2,a108 <__umoddi3+0x3cc>
    a0f0:	8ca3883a 	add	r17,r17,r18
    a0f4:	b0ffffc4 	addi	r3,r22,-1
    a0f8:	8c807c36 	bltu	r17,r18,a2ec <__umoddi3+0x5b0>
    a0fc:	88807b2e 	bgeu	r17,r2,a2ec <__umoddi3+0x5b0>
    a100:	b5bfff84 	addi	r22,r22,-2
    a104:	8ca3883a 	add	r17,r17,r18
    a108:	e038943a 	slli	fp,fp,16
    a10c:	980cd43a 	srli	r6,r19,16
    a110:	98ffffcc 	andi	r3,r19,65535
    a114:	e5b8b03a 	or	fp,fp,r22
    a118:	e02cd43a 	srli	r22,fp,16
    a11c:	e73fffcc 	andi	fp,fp,65535
    a120:	180b883a 	mov	r5,r3
    a124:	e009883a 	mov	r4,fp
    a128:	d9800215 	stw	r6,8(sp)
    a12c:	d8c00015 	stw	r3,0(sp)
    a130:	88a3c83a 	sub	r17,r17,r2
    a134:	000a4bc0 	call	a4bc <__mulsi3>
    a138:	d8c00017 	ldw	r3,0(sp)
    a13c:	b009883a 	mov	r4,r22
    a140:	102f883a 	mov	r23,r2
    a144:	180b883a 	mov	r5,r3
    a148:	000a4bc0 	call	a4bc <__mulsi3>
    a14c:	d9800217 	ldw	r6,8(sp)
    a150:	b009883a 	mov	r4,r22
    a154:	d8800115 	stw	r2,4(sp)
    a158:	300b883a 	mov	r5,r6
    a15c:	d9800015 	stw	r6,0(sp)
    a160:	000a4bc0 	call	a4bc <__mulsi3>
    a164:	d9800017 	ldw	r6,0(sp)
    a168:	e009883a 	mov	r4,fp
    a16c:	102d883a 	mov	r22,r2
    a170:	300b883a 	mov	r5,r6
    a174:	000a4bc0 	call	a4bc <__mulsi3>
    a178:	d9c00117 	ldw	r7,4(sp)
    a17c:	b808d43a 	srli	r4,r23,16
    a180:	11c5883a 	add	r2,r2,r7
    a184:	2085883a 	add	r2,r4,r2
    a188:	11c0022e 	bgeu	r2,r7,a194 <__umoddi3+0x458>
    a18c:	00c00074 	movhi	r3,1
    a190:	b0ed883a 	add	r22,r22,r3
    a194:	1006d43a 	srli	r3,r2,16
    a198:	1004943a 	slli	r2,r2,16
    a19c:	bdffffcc 	andi	r23,r23,65535
    a1a0:	1d87883a 	add	r3,r3,r22
    a1a4:	15c5883a 	add	r2,r2,r23
    a1a8:	88c03a36 	bltu	r17,r3,a294 <__umoddi3+0x558>
    a1ac:	88c03826 	beq	r17,r3,a290 <__umoddi3+0x554>
    a1b0:	8085c83a 	sub	r2,r16,r2
    a1b4:	80a1803a 	cmpltu	r16,r16,r2
    a1b8:	88c7c83a 	sub	r3,r17,r3
    a1bc:	1c07c83a 	sub	r3,r3,r16
    a1c0:	1d20983a 	sll	r16,r3,r20
    a1c4:	1544d83a 	srl	r2,r2,r21
    a1c8:	1d46d83a 	srl	r3,r3,r21
    a1cc:	8084b03a 	or	r2,r16,r2
    a1d0:	003f6306 	br	9f60 <__umoddi3+0x224>
    a1d4:	9ca6983a 	sll	r19,r19,r18
    a1d8:	88f8d83a 	srl	fp,r17,r3
    a1dc:	80c6d83a 	srl	r3,r16,r3
    a1e0:	982ad43a 	srli	r21,r19,16
    a1e4:	8ca2983a 	sll	r17,r17,r18
    a1e8:	e009883a 	mov	r4,fp
    a1ec:	a80b883a 	mov	r5,r21
    a1f0:	1c6eb03a 	or	r23,r3,r17
    a1f4:	000a4600 	call	a460 <__umodsi3>
    a1f8:	a80b883a 	mov	r5,r21
    a1fc:	e009883a 	mov	r4,fp
    a200:	1029883a 	mov	r20,r2
    a204:	9dbfffcc 	andi	r22,r19,65535
    a208:	000a3fc0 	call	a3fc <__udivsi3>
    a20c:	b009883a 	mov	r4,r22
    a210:	100b883a 	mov	r5,r2
    a214:	000a4bc0 	call	a4bc <__mulsi3>
    a218:	a006943a 	slli	r3,r20,16
    a21c:	b808d43a 	srli	r4,r23,16
    a220:	84a8983a 	sll	r20,r16,r18
    a224:	1906b03a 	or	r3,r3,r4
    a228:	1880042e 	bgeu	r3,r2,a23c <__umoddi3+0x500>
    a22c:	1cc7883a 	add	r3,r3,r19
    a230:	1cc00236 	bltu	r3,r19,a23c <__umoddi3+0x500>
    a234:	1880012e 	bgeu	r3,r2,a23c <__umoddi3+0x500>
    a238:	1cc7883a 	add	r3,r3,r19
    a23c:	18a3c83a 	sub	r17,r3,r2
    a240:	8809883a 	mov	r4,r17
    a244:	a80b883a 	mov	r5,r21
    a248:	000a4600 	call	a460 <__umodsi3>
    a24c:	1021883a 	mov	r16,r2
    a250:	8809883a 	mov	r4,r17
    a254:	a80b883a 	mov	r5,r21
    a258:	8022943a 	slli	r17,r16,16
    a25c:	000a3fc0 	call	a3fc <__udivsi3>
    a260:	100b883a 	mov	r5,r2
    a264:	b009883a 	mov	r4,r22
    a268:	bdffffcc 	andi	r23,r23,65535
    a26c:	000a4bc0 	call	a4bc <__mulsi3>
    a270:	8de2b03a 	or	r17,r17,r23
    a274:	8880042e 	bgeu	r17,r2,a288 <__umoddi3+0x54c>
    a278:	8ce3883a 	add	r17,r17,r19
    a27c:	8cc00236 	bltu	r17,r19,a288 <__umoddi3+0x54c>
    a280:	8880012e 	bgeu	r17,r2,a288 <__umoddi3+0x54c>
    a284:	8ce3883a 	add	r17,r17,r19
    a288:	88a3c83a 	sub	r17,r17,r2
    a28c:	003f0f06 	br	9ecc <__umoddi3+0x190>
    a290:	80bfc72e 	bgeu	r16,r2,a1b0 <__umoddi3+0x474>
    a294:	14e7c83a 	sub	r19,r2,r19
    a298:	14c5803a 	cmpltu	r2,r2,r19
    a29c:	1489883a 	add	r4,r2,r18
    a2a0:	1907c83a 	sub	r3,r3,r4
    a2a4:	9805883a 	mov	r2,r19
    a2a8:	003fc106 	br	a1b0 <__umoddi3+0x474>
    a2ac:	3007883a 	mov	r3,r6
    a2b0:	003ebb06 	br	9da0 <__umoddi3+0x64>
    a2b4:	3811883a 	mov	r8,r7
    a2b8:	000b883a 	mov	r5,zero
    a2bc:	003f3b06 	br	9fac <__umoddi3+0x270>
    a2c0:	3810d43a 	srli	r8,r7,16
    a2c4:	01400404 	movi	r5,16
    a2c8:	003f3806 	br	9fac <__umoddi3+0x270>
    a2cc:	9806d43a 	srli	r3,r19,16
    a2d0:	04800404 	movi	r18,16
    a2d4:	003ef306 	br	9ea4 <__umoddi3+0x168>
    a2d8:	9807883a 	mov	r3,r19
    a2dc:	003ef106 	br	9ea4 <__umoddi3+0x168>
    a2e0:	3006d43a 	srli	r3,r6,16
    a2e4:	04800404 	movi	r18,16
    a2e8:	003ead06 	br	9da0 <__umoddi3+0x64>
    a2ec:	182d883a 	mov	r22,r3
    a2f0:	003f8506 	br	a108 <__umoddi3+0x3cc>
    a2f4:	2039883a 	mov	fp,r4
    a2f8:	003f6a06 	br	a0a4 <__umoddi3+0x368>
    a2fc:	1cc7883a 	add	r3,r3,r19
    a300:	003ec606 	br	9e1c <__umoddi3+0xe0>

0000a304 <__divsi3>:
    a304:	20001a16 	blt	r4,zero,a370 <__divsi3+0x6c>
    a308:	000f883a 	mov	r7,zero
    a30c:	2800020e 	bge	r5,zero,a318 <__divsi3+0x14>
    a310:	014bc83a 	sub	r5,zero,r5
    a314:	39c0005c 	xori	r7,r7,1
    a318:	200d883a 	mov	r6,r4
    a31c:	00c00044 	movi	r3,1
    a320:	2900092e 	bgeu	r5,r4,a348 <__divsi3+0x44>
    a324:	00800804 	movi	r2,32
    a328:	00c00044 	movi	r3,1
    a32c:	00000106 	br	a334 <__divsi3+0x30>
    a330:	10001226 	beq	r2,zero,a37c <__divsi3+0x78>
    a334:	294b883a 	add	r5,r5,r5
    a338:	10bfffc4 	addi	r2,r2,-1
    a33c:	18c7883a 	add	r3,r3,r3
    a340:	293ffb36 	bltu	r5,r4,a330 <__divsi3+0x2c>
    a344:	18000d26 	beq	r3,zero,a37c <__divsi3+0x78>
    a348:	0005883a 	mov	r2,zero
    a34c:	31400236 	bltu	r6,r5,a358 <__divsi3+0x54>
    a350:	314dc83a 	sub	r6,r6,r5
    a354:	10c4b03a 	or	r2,r2,r3
    a358:	1806d07a 	srli	r3,r3,1
    a35c:	280ad07a 	srli	r5,r5,1
    a360:	183ffa1e 	bne	r3,zero,a34c <__divsi3+0x48>
    a364:	38000126 	beq	r7,zero,a36c <__divsi3+0x68>
    a368:	0085c83a 	sub	r2,zero,r2
    a36c:	f800283a 	ret
    a370:	0109c83a 	sub	r4,zero,r4
    a374:	01c00044 	movi	r7,1
    a378:	003fe406 	br	a30c <__divsi3+0x8>
    a37c:	0005883a 	mov	r2,zero
    a380:	003ff806 	br	a364 <__divsi3+0x60>

0000a384 <__modsi3>:
    a384:	20001a16 	blt	r4,zero,a3f0 <__modsi3+0x6c>
    a388:	000f883a 	mov	r7,zero
    a38c:	2005883a 	mov	r2,r4
    a390:	2800010e 	bge	r5,zero,a398 <__modsi3+0x14>
    a394:	014bc83a 	sub	r5,zero,r5
    a398:	00c00044 	movi	r3,1
    a39c:	2900092e 	bgeu	r5,r4,a3c4 <__modsi3+0x40>
    a3a0:	01800804 	movi	r6,32
    a3a4:	00c00044 	movi	r3,1
    a3a8:	00000106 	br	a3b0 <__modsi3+0x2c>
    a3ac:	30000d26 	beq	r6,zero,a3e4 <__modsi3+0x60>
    a3b0:	294b883a 	add	r5,r5,r5
    a3b4:	31bfffc4 	addi	r6,r6,-1
    a3b8:	18c7883a 	add	r3,r3,r3
    a3bc:	293ffb36 	bltu	r5,r4,a3ac <__modsi3+0x28>
    a3c0:	18000826 	beq	r3,zero,a3e4 <__modsi3+0x60>
    a3c4:	1806d07a 	srli	r3,r3,1
    a3c8:	11400136 	bltu	r2,r5,a3d0 <__modsi3+0x4c>
    a3cc:	1145c83a 	sub	r2,r2,r5
    a3d0:	280ad07a 	srli	r5,r5,1
    a3d4:	183ffb1e 	bne	r3,zero,a3c4 <__modsi3+0x40>
    a3d8:	38000126 	beq	r7,zero,a3e0 <__modsi3+0x5c>
    a3dc:	0085c83a 	sub	r2,zero,r2
    a3e0:	f800283a 	ret
    a3e4:	2005883a 	mov	r2,r4
    a3e8:	383ffd26 	beq	r7,zero,a3e0 <__modsi3+0x5c>
    a3ec:	003ffb06 	br	a3dc <__modsi3+0x58>
    a3f0:	0109c83a 	sub	r4,zero,r4
    a3f4:	01c00044 	movi	r7,1
    a3f8:	003fe406 	br	a38c <__modsi3+0x8>

0000a3fc <__udivsi3>:
    a3fc:	200d883a 	mov	r6,r4
    a400:	2900152e 	bgeu	r5,r4,a458 <__udivsi3+0x5c>
    a404:	28001416 	blt	r5,zero,a458 <__udivsi3+0x5c>
    a408:	00800804 	movi	r2,32
    a40c:	00c00044 	movi	r3,1
    a410:	00000206 	br	a41c <__udivsi3+0x20>
    a414:	10000e26 	beq	r2,zero,a450 <__udivsi3+0x54>
    a418:	28000516 	blt	r5,zero,a430 <__udivsi3+0x34>
    a41c:	294b883a 	add	r5,r5,r5
    a420:	10bfffc4 	addi	r2,r2,-1
    a424:	18c7883a 	add	r3,r3,r3
    a428:	293ffa36 	bltu	r5,r4,a414 <__udivsi3+0x18>
    a42c:	18000826 	beq	r3,zero,a450 <__udivsi3+0x54>
    a430:	0005883a 	mov	r2,zero
    a434:	31400236 	bltu	r6,r5,a440 <__udivsi3+0x44>
    a438:	314dc83a 	sub	r6,r6,r5
    a43c:	10c4b03a 	or	r2,r2,r3
    a440:	1806d07a 	srli	r3,r3,1
    a444:	280ad07a 	srli	r5,r5,1
    a448:	183ffa1e 	bne	r3,zero,a434 <__udivsi3+0x38>
    a44c:	f800283a 	ret
    a450:	0005883a 	mov	r2,zero
    a454:	f800283a 	ret
    a458:	00c00044 	movi	r3,1
    a45c:	003ff406 	br	a430 <__udivsi3+0x34>

0000a460 <__umodsi3>:
    a460:	2005883a 	mov	r2,r4
    a464:	2900132e 	bgeu	r5,r4,a4b4 <__umodsi3+0x54>
    a468:	28001216 	blt	r5,zero,a4b4 <__umodsi3+0x54>
    a46c:	01800804 	movi	r6,32
    a470:	00c00044 	movi	r3,1
    a474:	00000206 	br	a480 <__umodsi3+0x20>
    a478:	30000c26 	beq	r6,zero,a4ac <__umodsi3+0x4c>
    a47c:	28000516 	blt	r5,zero,a494 <__umodsi3+0x34>
    a480:	294b883a 	add	r5,r5,r5
    a484:	31bfffc4 	addi	r6,r6,-1
    a488:	18c7883a 	add	r3,r3,r3
    a48c:	293ffa36 	bltu	r5,r4,a478 <__umodsi3+0x18>
    a490:	18000626 	beq	r3,zero,a4ac <__umodsi3+0x4c>
    a494:	1806d07a 	srli	r3,r3,1
    a498:	11400136 	bltu	r2,r5,a4a0 <__umodsi3+0x40>
    a49c:	1145c83a 	sub	r2,r2,r5
    a4a0:	280ad07a 	srli	r5,r5,1
    a4a4:	183ffb1e 	bne	r3,zero,a494 <__umodsi3+0x34>
    a4a8:	f800283a 	ret
    a4ac:	2005883a 	mov	r2,r4
    a4b0:	f800283a 	ret
    a4b4:	00c00044 	movi	r3,1
    a4b8:	003ff606 	br	a494 <__umodsi3+0x34>

0000a4bc <__mulsi3>:
    a4bc:	0005883a 	mov	r2,zero
    a4c0:	20000726 	beq	r4,zero,a4e0 <__mulsi3+0x24>
    a4c4:	20c0004c 	andi	r3,r4,1
    a4c8:	2008d07a 	srli	r4,r4,1
    a4cc:	18000126 	beq	r3,zero,a4d4 <__mulsi3+0x18>
    a4d0:	1145883a 	add	r2,r2,r5
    a4d4:	294b883a 	add	r5,r5,r5
    a4d8:	203ffa1e 	bne	r4,zero,a4c4 <__mulsi3+0x8>
    a4dc:	f800283a 	ret
    a4e0:	f800283a 	ret

0000a4e4 <__adddf3>:
    a4e4:	02000434 	movhi	r8,16
    a4e8:	defffb04 	addi	sp,sp,-20
    a4ec:	423fffc4 	addi	r8,r8,-1
    a4f0:	2a12703a 	and	r9,r5,r8
    a4f4:	3a06703a 	and	r3,r7,r8
    a4f8:	3804d53a 	srli	r2,r7,20
    a4fc:	dc000015 	stw	r16,0(sp)
    a500:	2820d53a 	srli	r16,r5,20
    a504:	2016d77a 	srli	r11,r4,29
    a508:	3014d77a 	srli	r10,r6,29
    a50c:	280ad7fa 	srli	r5,r5,31
    a510:	481290fa 	slli	r9,r9,3
    a514:	180690fa 	slli	r3,r3,3
    a518:	380ed7fa 	srli	r7,r7,31
    a51c:	dc400115 	stw	r17,4(sp)
    a520:	8401ffcc 	andi	r16,r16,2047
    a524:	1081ffcc 	andi	r2,r2,2047
    a528:	dfc00415 	stw	ra,16(sp)
    a52c:	dcc00315 	stw	r19,12(sp)
    a530:	dc800215 	stw	r18,8(sp)
    a534:	5a52b03a 	or	r9,r11,r9
    a538:	50c6b03a 	or	r3,r10,r3
    a53c:	2823883a 	mov	r17,r5
    a540:	201890fa 	slli	r12,r4,3
    a544:	301690fa 	slli	r11,r6,3
    a548:	8095c83a 	sub	r10,r16,r2
    a54c:	29c06a26 	beq	r5,r7,a6f8 <__adddf3+0x214>
    a550:	0280590e 	bge	zero,r10,a6b8 <__adddf3+0x1d4>
    a554:	10007c26 	beq	r2,zero,a748 <__adddf3+0x264>
    a558:	8081ffd8 	cmpnei	r2,r16,2047
    a55c:	10010726 	beq	r2,zero,a97c <__adddf3+0x498>
    a560:	18c02034 	orhi	r3,r3,128
    a564:	50800e48 	cmpgei	r2,r10,57
    a568:	1000ed1e 	bne	r2,zero,a920 <__adddf3+0x43c>
    a56c:	50800808 	cmpgei	r2,r10,32
    a570:	1001541e 	bne	r2,zero,aac4 <__adddf3+0x5e0>
    a574:	01000804 	movi	r4,32
    a578:	2289c83a 	sub	r4,r4,r10
    a57c:	1926983a 	sll	r19,r3,r4
    a580:	5a84d83a 	srl	r2,r11,r10
    a584:	5908983a 	sll	r4,r11,r4
    a588:	1a86d83a 	srl	r3,r3,r10
    a58c:	98a6b03a 	or	r19,r19,r2
    a590:	2016c03a 	cmpne	r11,r4,zero
    a594:	9ae6b03a 	or	r19,r19,r11
    a598:	48d3c83a 	sub	r9,r9,r3
    a59c:	64e7c83a 	sub	r19,r12,r19
    a5a0:	64c9803a 	cmpltu	r4,r12,r19
    a5a4:	4909c83a 	sub	r4,r9,r4
    a5a8:	2080202c 	andhi	r2,r4,128
    a5ac:	10008726 	beq	r2,zero,a7cc <__adddf3+0x2e8>
    a5b0:	02402034 	movhi	r9,128
    a5b4:	4a7fffc4 	addi	r9,r9,-1
    a5b8:	2264703a 	and	r18,r4,r9
    a5bc:	9000cf26 	beq	r18,zero,a8fc <__adddf3+0x418>
    a5c0:	9009883a 	mov	r4,r18
    a5c4:	000cdcc0 	call	cdcc <__clzsi2>
    a5c8:	10fffe04 	addi	r3,r2,-8
    a5cc:	01000804 	movi	r4,32
    a5d0:	20c9c83a 	sub	r4,r4,r3
    a5d4:	990ad83a 	srl	r5,r19,r4
    a5d8:	90c8983a 	sll	r4,r18,r3
    a5dc:	98e6983a 	sll	r19,r19,r3
    a5e0:	2908b03a 	or	r4,r5,r4
    a5e4:	1c00be16 	blt	r3,r16,a8e0 <__adddf3+0x3fc>
    a5e8:	1c21c83a 	sub	r16,r3,r16
    a5ec:	81400044 	addi	r5,r16,1
    a5f0:	28800808 	cmpgei	r2,r5,32
    a5f4:	10011b1e 	bne	r2,zero,aa64 <__adddf3+0x580>
    a5f8:	00800804 	movi	r2,32
    a5fc:	1145c83a 	sub	r2,r2,r5
    a600:	9946d83a 	srl	r3,r19,r5
    a604:	98a6983a 	sll	r19,r19,r2
    a608:	2084983a 	sll	r2,r4,r2
    a60c:	2148d83a 	srl	r4,r4,r5
    a610:	9826c03a 	cmpne	r19,r19,zero
    a614:	10c4b03a 	or	r2,r2,r3
    a618:	14e6b03a 	or	r19,r2,r19
    a61c:	0021883a 	mov	r16,zero
    a620:	988001cc 	andi	r2,r19,7
    a624:	10000726 	beq	r2,zero,a644 <__adddf3+0x160>
    a628:	988003cc 	andi	r2,r19,15
    a62c:	10800120 	cmpeqi	r2,r2,4
    a630:	1000041e 	bne	r2,zero,a644 <__adddf3+0x160>
    a634:	99400104 	addi	r5,r19,4
    a638:	2ce7803a 	cmpltu	r19,r5,r19
    a63c:	24c9883a 	add	r4,r4,r19
    a640:	2827883a 	mov	r19,r5
    a644:	2080202c 	andhi	r2,r4,128
    a648:	10006226 	beq	r2,zero,a7d4 <__adddf3+0x2f0>
    a64c:	84000044 	addi	r16,r16,1
    a650:	8081ffe0 	cmpeqi	r2,r16,2047
    a654:	8401ffcc 	andi	r16,r16,2047
    a658:	1000731e 	bne	r2,zero,a828 <__adddf3+0x344>
    a65c:	017fe034 	movhi	r5,65408
    a660:	297fffc4 	addi	r5,r5,-1
    a664:	214a703a 	and	r5,r4,r5
    a668:	2804977a 	slli	r2,r5,29
    a66c:	280a927a 	slli	r5,r5,9
    a670:	9826d0fa 	srli	r19,r19,3
    a674:	2808d33a 	srli	r4,r5,12
    a678:	14c4b03a 	or	r2,r2,r19
    a67c:	8020953a 	slli	r16,r16,20
    a680:	00c00434 	movhi	r3,16
    a684:	8c403fcc 	andi	r17,r17,255
    a688:	882297fa 	slli	r17,r17,31
    a68c:	18ffffc4 	addi	r3,r3,-1
    a690:	20c6703a 	and	r3,r4,r3
    a694:	1c06b03a 	or	r3,r3,r16
    a698:	1c46b03a 	or	r3,r3,r17
    a69c:	dfc00417 	ldw	ra,16(sp)
    a6a0:	dcc00317 	ldw	r19,12(sp)
    a6a4:	dc800217 	ldw	r18,8(sp)
    a6a8:	dc400117 	ldw	r17,4(sp)
    a6ac:	dc000017 	ldw	r16,0(sp)
    a6b0:	dec00504 	addi	sp,sp,20
    a6b4:	f800283a 	ret
    a6b8:	50002b1e 	bne	r10,zero,a768 <__adddf3+0x284>
    a6bc:	80800044 	addi	r2,r16,1
    a6c0:	1081ff8c 	andi	r2,r2,2046
    a6c4:	1000a11e 	bne	r2,zero,a94c <__adddf3+0x468>
    a6c8:	4b0ab03a 	or	r5,r9,r12
    a6cc:	1ac4b03a 	or	r2,r3,r11
    a6d0:	80015c1e 	bne	r16,zero,ac44 <__adddf3+0x760>
    a6d4:	28012826 	beq	r5,zero,ab78 <__adddf3+0x694>
    a6d8:	1001671e 	bne	r2,zero,ac78 <__adddf3+0x794>
    a6dc:	4826977a 	slli	r19,r9,29
    a6e0:	00c80034 	movhi	r3,8192
    a6e4:	18ffffc4 	addi	r3,r3,-1
    a6e8:	20c4703a 	and	r2,r4,r3
    a6ec:	9884b03a 	or	r2,r19,r2
    a6f0:	4812d0fa 	srli	r9,r9,3
    a6f4:	00003d06 	br	a7ec <__adddf3+0x308>
    a6f8:	02804f0e 	bge	zero,r10,a838 <__adddf3+0x354>
    a6fc:	10002426 	beq	r2,zero,a790 <__adddf3+0x2ac>
    a700:	8081ffd8 	cmpnei	r2,r16,2047
    a704:	10009d26 	beq	r2,zero,a97c <__adddf3+0x498>
    a708:	18c02034 	orhi	r3,r3,128
    a70c:	50800e48 	cmpgei	r2,r10,57
    a710:	10003b1e 	bne	r2,zero,a800 <__adddf3+0x31c>
    a714:	50800808 	cmpgei	r2,r10,32
    a718:	10010326 	beq	r2,zero,ab28 <__adddf3+0x644>
    a71c:	54fff804 	addi	r19,r10,-32
    a720:	51000820 	cmpeqi	r4,r10,32
    a724:	1cc4d83a 	srl	r2,r3,r19
    a728:	2000041e 	bne	r4,zero,a73c <__adddf3+0x258>
    a72c:	01001004 	movi	r4,64
    a730:	2295c83a 	sub	r10,r4,r10
    a734:	1a86983a 	sll	r3,r3,r10
    a738:	58d6b03a 	or	r11,r11,r3
    a73c:	5826c03a 	cmpne	r19,r11,zero
    a740:	98a6b03a 	or	r19,r19,r2
    a744:	00003006 	br	a808 <__adddf3+0x324>
    a748:	1ac4b03a 	or	r2,r3,r11
    a74c:	10007726 	beq	r2,zero,a92c <__adddf3+0x448>
    a750:	50bfffc4 	addi	r2,r10,-1
    a754:	10011926 	beq	r2,zero,abbc <__adddf3+0x6d8>
    a758:	5281ffd8 	cmpnei	r10,r10,2047
    a75c:	50012026 	beq	r10,zero,abe0 <__adddf3+0x6fc>
    a760:	1015883a 	mov	r10,r2
    a764:	003f7f06 	br	a564 <__adddf3+0x80>
    a768:	1409c83a 	sub	r4,r2,r16
    a76c:	8000a61e 	bne	r16,zero,aa08 <__adddf3+0x524>
    a770:	4b0ab03a 	or	r5,r9,r12
    a774:	2800f726 	beq	r5,zero,ab54 <__adddf3+0x670>
    a778:	217fffc4 	addi	r5,r4,-1
    a77c:	28017f26 	beq	r5,zero,ad7c <__adddf3+0x898>
    a780:	2101ffd8 	cmpnei	r4,r4,2047
    a784:	2001a326 	beq	r4,zero,ae14 <__adddf3+0x930>
    a788:	2809883a 	mov	r4,r5
    a78c:	0000a106 	br	aa14 <__adddf3+0x530>
    a790:	1ac4b03a 	or	r2,r3,r11
    a794:	10006526 	beq	r2,zero,a92c <__adddf3+0x448>
    a798:	50bfffc4 	addi	r2,r10,-1
    a79c:	10000426 	beq	r2,zero,a7b0 <__adddf3+0x2cc>
    a7a0:	5281ffd8 	cmpnei	r10,r10,2047
    a7a4:	50014326 	beq	r10,zero,acb4 <__adddf3+0x7d0>
    a7a8:	1015883a 	mov	r10,r2
    a7ac:	003fd706 	br	a70c <__adddf3+0x228>
    a7b0:	62e7883a 	add	r19,r12,r11
    a7b4:	48d3883a 	add	r9,r9,r3
    a7b8:	9b09803a 	cmpltu	r4,r19,r12
    a7bc:	4909883a 	add	r4,r9,r4
    a7c0:	2080202c 	andhi	r2,r4,128
    a7c4:	1000b41e 	bne	r2,zero,aa98 <__adddf3+0x5b4>
    a7c8:	04000044 	movi	r16,1
    a7cc:	988001cc 	andi	r2,r19,7
    a7d0:	103f951e 	bne	r2,zero,a628 <__adddf3+0x144>
    a7d4:	9826d0fa 	srli	r19,r19,3
    a7d8:	2004977a 	slli	r2,r4,29
    a7dc:	2012d0fa 	srli	r9,r4,3
    a7e0:	9884b03a 	or	r2,r19,r2
    a7e4:	80c1ffe0 	cmpeqi	r3,r16,2047
    a7e8:	1800351e 	bne	r3,zero,a8c0 <__adddf3+0x3dc>
    a7ec:	01000434 	movhi	r4,16
    a7f0:	213fffc4 	addi	r4,r4,-1
    a7f4:	4908703a 	and	r4,r9,r4
    a7f8:	8401ffcc 	andi	r16,r16,2047
    a7fc:	003f9f06 	br	a67c <__adddf3+0x198>
    a800:	1ac8b03a 	or	r4,r3,r11
    a804:	2026c03a 	cmpne	r19,r4,zero
    a808:	9b27883a 	add	r19,r19,r12
    a80c:	9b09803a 	cmpltu	r4,r19,r12
    a810:	2249883a 	add	r4,r4,r9
    a814:	2080202c 	andhi	r2,r4,128
    a818:	103fec26 	beq	r2,zero,a7cc <__adddf3+0x2e8>
    a81c:	84000044 	addi	r16,r16,1
    a820:	8081ffe0 	cmpeqi	r2,r16,2047
    a824:	10009d26 	beq	r2,zero,aa9c <__adddf3+0x5b8>
    a828:	0401ffc4 	movi	r16,2047
    a82c:	0009883a 	mov	r4,zero
    a830:	0005883a 	mov	r2,zero
    a834:	003f9106 	br	a67c <__adddf3+0x198>
    a838:	5000571e 	bne	r10,zero,a998 <__adddf3+0x4b4>
    a83c:	80800044 	addi	r2,r16,1
    a840:	1141ff8c 	andi	r5,r2,2046
    a844:	2800ed1e 	bne	r5,zero,abfc <__adddf3+0x718>
    a848:	4b04b03a 	or	r2,r9,r12
    a84c:	8000a826 	beq	r16,zero,aaf0 <__adddf3+0x60c>
    a850:	10010226 	beq	r2,zero,ac5c <__adddf3+0x778>
    a854:	1ad6b03a 	or	r11,r3,r11
    a858:	480a977a 	slli	r5,r9,29
    a85c:	4812d0fa 	srli	r9,r9,3
    a860:	58015f26 	beq	r11,zero,ade0 <__adddf3+0x8fc>
    a864:	02080034 	movhi	r8,8192
    a868:	423fffc4 	addi	r8,r8,-1
    a86c:	2204703a 	and	r2,r4,r8
    a870:	4900022c 	andhi	r4,r9,8
    a874:	114ab03a 	or	r5,r2,r5
    a878:	20000826 	beq	r4,zero,a89c <__adddf3+0x3b8>
    a87c:	1808d0fa 	srli	r4,r3,3
    a880:	2080022c 	andhi	r2,r4,8
    a884:	1000051e 	bne	r2,zero,a89c <__adddf3+0x3b8>
    a888:	1806977a 	slli	r3,r3,29
    a88c:	3204703a 	and	r2,r6,r8
    a890:	3823883a 	mov	r17,r7
    a894:	10cab03a 	or	r5,r2,r3
    a898:	2013883a 	mov	r9,r4
    a89c:	2804d77a 	srli	r2,r5,29
    a8a0:	480890fa 	slli	r4,r9,3
    a8a4:	00c80034 	movhi	r3,8192
    a8a8:	18ffffc4 	addi	r3,r3,-1
    a8ac:	1108b03a 	or	r4,r2,r4
    a8b0:	2004977a 	slli	r2,r4,29
    a8b4:	2012d0fa 	srli	r9,r4,3
    a8b8:	28ca703a 	and	r5,r5,r3
    a8bc:	1144b03a 	or	r2,r2,r5
    a8c0:	4886b03a 	or	r3,r9,r2
    a8c4:	18016b26 	beq	r3,zero,ae74 <__adddf3+0x990>
    a8c8:	00c00434 	movhi	r3,16
    a8cc:	49000234 	orhi	r4,r9,8
    a8d0:	18ffffc4 	addi	r3,r3,-1
    a8d4:	20c8703a 	and	r4,r4,r3
    a8d8:	0401ffc4 	movi	r16,2047
    a8dc:	003f6706 	br	a67c <__adddf3+0x198>
    a8e0:	017fe034 	movhi	r5,65408
    a8e4:	297fffc4 	addi	r5,r5,-1
    a8e8:	988001cc 	andi	r2,r19,7
    a8ec:	80e1c83a 	sub	r16,r16,r3
    a8f0:	2148703a 	and	r4,r4,r5
    a8f4:	103f4c1e 	bne	r2,zero,a628 <__adddf3+0x144>
    a8f8:	003fb606 	br	a7d4 <__adddf3+0x2f0>
    a8fc:	9809883a 	mov	r4,r19
    a900:	000cdcc0 	call	cdcc <__clzsi2>
    a904:	10c00604 	addi	r3,r2,24
    a908:	19000808 	cmpgei	r4,r3,32
    a90c:	203f2f26 	beq	r4,zero,a5cc <__adddf3+0xe8>
    a910:	113ffe04 	addi	r4,r2,-8
    a914:	9908983a 	sll	r4,r19,r4
    a918:	0027883a 	mov	r19,zero
    a91c:	003f3106 	br	a5e4 <__adddf3+0x100>
    a920:	1ac8b03a 	or	r4,r3,r11
    a924:	2026c03a 	cmpne	r19,r4,zero
    a928:	003f1c06 	br	a59c <__adddf3+0xb8>
    a92c:	4826977a 	slli	r19,r9,29
    a930:	00c80034 	movhi	r3,8192
    a934:	18ffffc4 	addi	r3,r3,-1
    a938:	20c4703a 	and	r2,r4,r3
    a93c:	14c4b03a 	or	r2,r2,r19
    a940:	4812d0fa 	srli	r9,r9,3
    a944:	5021883a 	mov	r16,r10
    a948:	003fa606 	br	a7e4 <__adddf3+0x300>
    a94c:	62e7c83a 	sub	r19,r12,r11
    a950:	48e5c83a 	sub	r18,r9,r3
    a954:	64c9803a 	cmpltu	r4,r12,r19
    a958:	9125c83a 	sub	r18,r18,r4
    a95c:	9080202c 	andhi	r2,r18,128
    a960:	1000b21e 	bne	r2,zero,ac2c <__adddf3+0x748>
    a964:	9c84b03a 	or	r2,r19,r18
    a968:	103f141e 	bne	r2,zero,a5bc <__adddf3+0xd8>
    a96c:	0013883a 	mov	r9,zero
    a970:	0021883a 	mov	r16,zero
    a974:	0023883a 	mov	r17,zero
    a978:	003f9c06 	br	a7ec <__adddf3+0x308>
    a97c:	4826977a 	slli	r19,r9,29
    a980:	00c80034 	movhi	r3,8192
    a984:	18ffffc4 	addi	r3,r3,-1
    a988:	20c4703a 	and	r2,r4,r3
    a98c:	14c4b03a 	or	r2,r2,r19
    a990:	4812d0fa 	srli	r9,r9,3
    a994:	003fca06 	br	a8c0 <__adddf3+0x3dc>
    a998:	1409c83a 	sub	r4,r2,r16
    a99c:	80005e1e 	bne	r16,zero,ab18 <__adddf3+0x634>
    a9a0:	4b0ab03a 	or	r5,r9,r12
    a9a4:	28011326 	beq	r5,zero,adf4 <__adddf3+0x910>
    a9a8:	217fffc4 	addi	r5,r4,-1
    a9ac:	28012c26 	beq	r5,zero,ae60 <__adddf3+0x97c>
    a9b0:	2101ffd8 	cmpnei	r4,r4,2047
    a9b4:	2000a926 	beq	r4,zero,ac5c <__adddf3+0x778>
    a9b8:	2809883a 	mov	r4,r5
    a9bc:	21400e48 	cmpgei	r5,r4,57
    a9c0:	2800b91e 	bne	r5,zero,aca8 <__adddf3+0x7c4>
    a9c4:	21400808 	cmpgei	r5,r4,32
    a9c8:	28011a1e 	bne	r5,zero,ae34 <__adddf3+0x950>
    a9cc:	01400804 	movi	r5,32
    a9d0:	290bc83a 	sub	r5,r5,r4
    a9d4:	4966983a 	sll	r19,r9,r5
    a9d8:	610cd83a 	srl	r6,r12,r4
    a9dc:	614a983a 	sll	r5,r12,r5
    a9e0:	4912d83a 	srl	r9,r9,r4
    a9e4:	99a6b03a 	or	r19,r19,r6
    a9e8:	280ac03a 	cmpne	r5,r5,zero
    a9ec:	9966b03a 	or	r19,r19,r5
    a9f0:	1a47883a 	add	r3,r3,r9
    a9f4:	9ae7883a 	add	r19,r19,r11
    a9f8:	9ac9803a 	cmpltu	r4,r19,r11
    a9fc:	20c9883a 	add	r4,r4,r3
    aa00:	1021883a 	mov	r16,r2
    aa04:	003f8306 	br	a814 <__adddf3+0x330>
    aa08:	1141ffd8 	cmpnei	r5,r2,2047
    aa0c:	28006326 	beq	r5,zero,ab9c <__adddf3+0x6b8>
    aa10:	4a402034 	orhi	r9,r9,128
    aa14:	21400e48 	cmpgei	r5,r4,57
    aa18:	28006e1e 	bne	r5,zero,abd4 <__adddf3+0x6f0>
    aa1c:	21400808 	cmpgei	r5,r4,32
    aa20:	2800ab1e 	bne	r5,zero,acd0 <__adddf3+0x7ec>
    aa24:	01400804 	movi	r5,32
    aa28:	290bc83a 	sub	r5,r5,r4
    aa2c:	4966983a 	sll	r19,r9,r5
    aa30:	610cd83a 	srl	r6,r12,r4
    aa34:	614a983a 	sll	r5,r12,r5
    aa38:	4912d83a 	srl	r9,r9,r4
    aa3c:	99a6b03a 	or	r19,r19,r6
    aa40:	280ac03a 	cmpne	r5,r5,zero
    aa44:	9966b03a 	or	r19,r19,r5
    aa48:	1a47c83a 	sub	r3,r3,r9
    aa4c:	5ce7c83a 	sub	r19,r11,r19
    aa50:	5cc9803a 	cmpltu	r4,r11,r19
    aa54:	1909c83a 	sub	r4,r3,r4
    aa58:	3823883a 	mov	r17,r7
    aa5c:	1021883a 	mov	r16,r2
    aa60:	003ed106 	br	a5a8 <__adddf3+0xc4>
    aa64:	843ff844 	addi	r16,r16,-31
    aa68:	28800820 	cmpeqi	r2,r5,32
    aa6c:	2420d83a 	srl	r16,r4,r16
    aa70:	1000041e 	bne	r2,zero,aa84 <__adddf3+0x5a0>
    aa74:	00801004 	movi	r2,64
    aa78:	114bc83a 	sub	r5,r2,r5
    aa7c:	2148983a 	sll	r4,r4,r5
    aa80:	9926b03a 	or	r19,r19,r4
    aa84:	9826c03a 	cmpne	r19,r19,zero
    aa88:	9c26b03a 	or	r19,r19,r16
    aa8c:	0009883a 	mov	r4,zero
    aa90:	0021883a 	mov	r16,zero
    aa94:	003f4d06 	br	a7cc <__adddf3+0x2e8>
    aa98:	04000084 	movi	r16,2
    aa9c:	00bfe034 	movhi	r2,65408
    aaa0:	10bfffc4 	addi	r2,r2,-1
    aaa4:	208a703a 	and	r5,r4,r2
    aaa8:	9804d07a 	srli	r2,r19,1
    aaac:	280697fa 	slli	r3,r5,31
    aab0:	9cc0004c 	andi	r19,r19,1
    aab4:	14e6b03a 	or	r19,r2,r19
    aab8:	2808d07a 	srli	r4,r5,1
    aabc:	1ce6b03a 	or	r19,r3,r19
    aac0:	003ed706 	br	a620 <__adddf3+0x13c>
    aac4:	54fff804 	addi	r19,r10,-32
    aac8:	50800820 	cmpeqi	r2,r10,32
    aacc:	1ce6d83a 	srl	r19,r3,r19
    aad0:	1000041e 	bne	r2,zero,aae4 <__adddf3+0x600>
    aad4:	00801004 	movi	r2,64
    aad8:	1295c83a 	sub	r10,r2,r10
    aadc:	1a86983a 	sll	r3,r3,r10
    aae0:	58d6b03a 	or	r11,r11,r3
    aae4:	5808c03a 	cmpne	r4,r11,zero
    aae8:	24e6b03a 	or	r19,r4,r19
    aaec:	003eab06 	br	a59c <__adddf3+0xb8>
    aaf0:	1000a926 	beq	r2,zero,ad98 <__adddf3+0x8b4>
    aaf4:	1ac4b03a 	or	r2,r3,r11
    aaf8:	1000ae1e 	bne	r2,zero,adb4 <__adddf3+0x8d0>
    aafc:	4806977a 	slli	r3,r9,29
    ab00:	00880034 	movhi	r2,8192
    ab04:	10bfffc4 	addi	r2,r2,-1
    ab08:	2084703a 	and	r2,r4,r2
    ab0c:	10c4b03a 	or	r2,r2,r3
    ab10:	4812d0fa 	srli	r9,r9,3
    ab14:	003f3506 	br	a7ec <__adddf3+0x308>
    ab18:	1141ffd8 	cmpnei	r5,r2,2047
    ab1c:	28004f26 	beq	r5,zero,ac5c <__adddf3+0x778>
    ab20:	4a402034 	orhi	r9,r9,128
    ab24:	003fa506 	br	a9bc <__adddf3+0x4d8>
    ab28:	01000804 	movi	r4,32
    ab2c:	2289c83a 	sub	r4,r4,r10
    ab30:	1926983a 	sll	r19,r3,r4
    ab34:	5a84d83a 	srl	r2,r11,r10
    ab38:	5908983a 	sll	r4,r11,r4
    ab3c:	1a86d83a 	srl	r3,r3,r10
    ab40:	98a6b03a 	or	r19,r19,r2
    ab44:	2016c03a 	cmpne	r11,r4,zero
    ab48:	9ae6b03a 	or	r19,r19,r11
    ab4c:	48d3883a 	add	r9,r9,r3
    ab50:	003f2d06 	br	a808 <__adddf3+0x324>
    ab54:	01480034 	movhi	r5,8192
    ab58:	1826977a 	slli	r19,r3,29
    ab5c:	297fffc4 	addi	r5,r5,-1
    ab60:	3144703a 	and	r2,r6,r5
    ab64:	14c4b03a 	or	r2,r2,r19
    ab68:	1812d0fa 	srli	r9,r3,3
    ab6c:	3823883a 	mov	r17,r7
    ab70:	2021883a 	mov	r16,r4
    ab74:	003f1b06 	br	a7e4 <__adddf3+0x300>
    ab78:	10007d26 	beq	r2,zero,ad70 <__adddf3+0x88c>
    ab7c:	00880034 	movhi	r2,8192
    ab80:	1808977a 	slli	r4,r3,29
    ab84:	10bfffc4 	addi	r2,r2,-1
    ab88:	3084703a 	and	r2,r6,r2
    ab8c:	1104b03a 	or	r2,r2,r4
    ab90:	1812d0fa 	srli	r9,r3,3
    ab94:	3823883a 	mov	r17,r7
    ab98:	003f1406 	br	a7ec <__adddf3+0x308>
    ab9c:	180a977a 	slli	r5,r3,29
    aba0:	01080034 	movhi	r4,8192
    aba4:	213fffc4 	addi	r4,r4,-1
    aba8:	3104703a 	and	r2,r6,r4
    abac:	2884b03a 	or	r2,r5,r2
    abb0:	1812d0fa 	srli	r9,r3,3
    abb4:	3823883a 	mov	r17,r7
    abb8:	003f4106 	br	a8c0 <__adddf3+0x3dc>
    abbc:	62e7c83a 	sub	r19,r12,r11
    abc0:	48d3c83a 	sub	r9,r9,r3
    abc4:	64c9803a 	cmpltu	r4,r12,r19
    abc8:	4909c83a 	sub	r4,r9,r4
    abcc:	04000044 	movi	r16,1
    abd0:	003e7506 	br	a5a8 <__adddf3+0xc4>
    abd4:	4b12b03a 	or	r9,r9,r12
    abd8:	4826c03a 	cmpne	r19,r9,zero
    abdc:	003f9b06 	br	aa4c <__adddf3+0x568>
    abe0:	4826977a 	slli	r19,r9,29
    abe4:	00c80034 	movhi	r3,8192
    abe8:	18ffffc4 	addi	r3,r3,-1
    abec:	20c4703a 	and	r2,r4,r3
    abf0:	9884b03a 	or	r2,r19,r2
    abf4:	4812d0fa 	srli	r9,r9,3
    abf8:	003f3106 	br	a8c0 <__adddf3+0x3dc>
    abfc:	1101ffe0 	cmpeqi	r4,r2,2047
    ac00:	203f091e 	bne	r4,zero,a828 <__adddf3+0x344>
    ac04:	62d7883a 	add	r11,r12,r11
    ac08:	5b09803a 	cmpltu	r4,r11,r12
    ac0c:	48d3883a 	add	r9,r9,r3
    ac10:	490b883a 	add	r5,r9,r4
    ac14:	282697fa 	slli	r19,r5,31
    ac18:	5816d07a 	srli	r11,r11,1
    ac1c:	2808d07a 	srli	r4,r5,1
    ac20:	1021883a 	mov	r16,r2
    ac24:	9ae6b03a 	or	r19,r19,r11
    ac28:	003ee806 	br	a7cc <__adddf3+0x2e8>
    ac2c:	5b27c83a 	sub	r19,r11,r12
    ac30:	1a53c83a 	sub	r9,r3,r9
    ac34:	5cc9803a 	cmpltu	r4,r11,r19
    ac38:	4925c83a 	sub	r18,r9,r4
    ac3c:	3823883a 	mov	r17,r7
    ac40:	003e5e06 	br	a5bc <__adddf3+0xd8>
    ac44:	28002d1e 	bne	r5,zero,acfc <__adddf3+0x818>
    ac48:	103fd41e 	bne	r2,zero,ab9c <__adddf3+0x6b8>
    ac4c:	00bfffc4 	movi	r2,-1
    ac50:	0023883a 	mov	r17,zero
    ac54:	4013883a 	mov	r9,r8
    ac58:	003f1b06 	br	a8c8 <__adddf3+0x3e4>
    ac5c:	00880034 	movhi	r2,8192
    ac60:	1808977a 	slli	r4,r3,29
    ac64:	10bfffc4 	addi	r2,r2,-1
    ac68:	3084703a 	and	r2,r6,r2
    ac6c:	1104b03a 	or	r2,r2,r4
    ac70:	1812d0fa 	srli	r9,r3,3
    ac74:	003f1206 	br	a8c0 <__adddf3+0x3dc>
    ac78:	62e7c83a 	sub	r19,r12,r11
    ac7c:	48cbc83a 	sub	r5,r9,r3
    ac80:	64c9803a 	cmpltu	r4,r12,r19
    ac84:	2909c83a 	sub	r4,r5,r4
    ac88:	2080202c 	andhi	r2,r4,128
    ac8c:	10003626 	beq	r2,zero,ad68 <__adddf3+0x884>
    ac90:	5b27c83a 	sub	r19,r11,r12
    ac94:	1a53c83a 	sub	r9,r3,r9
    ac98:	5cc9803a 	cmpltu	r4,r11,r19
    ac9c:	4909c83a 	sub	r4,r9,r4
    aca0:	3823883a 	mov	r17,r7
    aca4:	003e5e06 	br	a620 <__adddf3+0x13c>
    aca8:	4b12b03a 	or	r9,r9,r12
    acac:	4826c03a 	cmpne	r19,r9,zero
    acb0:	003f5006 	br	a9f4 <__adddf3+0x510>
    acb4:	4806977a 	slli	r3,r9,29
    acb8:	00880034 	movhi	r2,8192
    acbc:	10bfffc4 	addi	r2,r2,-1
    acc0:	2084703a 	and	r2,r4,r2
    acc4:	10c4b03a 	or	r2,r2,r3
    acc8:	4812d0fa 	srli	r9,r9,3
    accc:	003efc06 	br	a8c0 <__adddf3+0x3dc>
    acd0:	217ff804 	addi	r5,r4,-32
    acd4:	21800820 	cmpeqi	r6,r4,32
    acd8:	494ad83a 	srl	r5,r9,r5
    acdc:	3000041e 	bne	r6,zero,acf0 <__adddf3+0x80c>
    ace0:	01801004 	movi	r6,64
    ace4:	3109c83a 	sub	r4,r6,r4
    ace8:	4912983a 	sll	r9,r9,r4
    acec:	6258b03a 	or	r12,r12,r9
    acf0:	6026c03a 	cmpne	r19,r12,zero
    acf4:	9966b03a 	or	r19,r19,r5
    acf8:	003f5406 	br	aa4c <__adddf3+0x568>
    acfc:	480a977a 	slli	r5,r9,29
    ad00:	4812d0fa 	srli	r9,r9,3
    ad04:	10003626 	beq	r2,zero,ade0 <__adddf3+0x8fc>
    ad08:	02080034 	movhi	r8,8192
    ad0c:	423fffc4 	addi	r8,r8,-1
    ad10:	2204703a 	and	r2,r4,r8
    ad14:	4900022c 	andhi	r4,r9,8
    ad18:	114ab03a 	or	r5,r2,r5
    ad1c:	20000826 	beq	r4,zero,ad40 <__adddf3+0x85c>
    ad20:	1808d0fa 	srli	r4,r3,3
    ad24:	2080022c 	andhi	r2,r4,8
    ad28:	1000051e 	bne	r2,zero,ad40 <__adddf3+0x85c>
    ad2c:	1806977a 	slli	r3,r3,29
    ad30:	3204703a 	and	r2,r6,r8
    ad34:	3823883a 	mov	r17,r7
    ad38:	10cab03a 	or	r5,r2,r3
    ad3c:	2013883a 	mov	r9,r4
    ad40:	480890fa 	slli	r4,r9,3
    ad44:	2804d77a 	srli	r2,r5,29
    ad48:	00c80034 	movhi	r3,8192
    ad4c:	18ffffc4 	addi	r3,r3,-1
    ad50:	1108b03a 	or	r4,r2,r4
    ad54:	200c977a 	slli	r6,r4,29
    ad58:	28c4703a 	and	r2,r5,r3
    ad5c:	2012d0fa 	srli	r9,r4,3
    ad60:	3084b03a 	or	r2,r6,r2
    ad64:	003ed606 	br	a8c0 <__adddf3+0x3dc>
    ad68:	9904b03a 	or	r2,r19,r4
    ad6c:	103e971e 	bne	r2,zero,a7cc <__adddf3+0x2e8>
    ad70:	0013883a 	mov	r9,zero
    ad74:	0023883a 	mov	r17,zero
    ad78:	003e9c06 	br	a7ec <__adddf3+0x308>
    ad7c:	5b27c83a 	sub	r19,r11,r12
    ad80:	1a53c83a 	sub	r9,r3,r9
    ad84:	5cc9803a 	cmpltu	r4,r11,r19
    ad88:	4909c83a 	sub	r4,r9,r4
    ad8c:	3823883a 	mov	r17,r7
    ad90:	04000044 	movi	r16,1
    ad94:	003e0406 	br	a5a8 <__adddf3+0xc4>
    ad98:	180a977a 	slli	r5,r3,29
    ad9c:	01080034 	movhi	r4,8192
    ada0:	213fffc4 	addi	r4,r4,-1
    ada4:	3104703a 	and	r2,r6,r4
    ada8:	2884b03a 	or	r2,r5,r2
    adac:	1812d0fa 	srli	r9,r3,3
    adb0:	003e8e06 	br	a7ec <__adddf3+0x308>
    adb4:	62e7883a 	add	r19,r12,r11
    adb8:	48d3883a 	add	r9,r9,r3
    adbc:	9b09803a 	cmpltu	r4,r19,r12
    adc0:	4909883a 	add	r4,r9,r4
    adc4:	2080202c 	andhi	r2,r4,128
    adc8:	103e8026 	beq	r2,zero,a7cc <__adddf3+0x2e8>
    adcc:	00bfe034 	movhi	r2,65408
    add0:	10bfffc4 	addi	r2,r2,-1
    add4:	2088703a 	and	r4,r4,r2
    add8:	04000044 	movi	r16,1
    addc:	003e7b06 	br	a7cc <__adddf3+0x2e8>
    ade0:	00880034 	movhi	r2,8192
    ade4:	10bfffc4 	addi	r2,r2,-1
    ade8:	2084703a 	and	r2,r4,r2
    adec:	1144b03a 	or	r2,r2,r5
    adf0:	003eb306 	br	a8c0 <__adddf3+0x3dc>
    adf4:	180e977a 	slli	r7,r3,29
    adf8:	01480034 	movhi	r5,8192
    adfc:	297fffc4 	addi	r5,r5,-1
    ae00:	3144703a 	and	r2,r6,r5
    ae04:	3884b03a 	or	r2,r7,r2
    ae08:	1812d0fa 	srli	r9,r3,3
    ae0c:	2021883a 	mov	r16,r4
    ae10:	003e7406 	br	a7e4 <__adddf3+0x300>
    ae14:	00880034 	movhi	r2,8192
    ae18:	1808977a 	slli	r4,r3,29
    ae1c:	10bfffc4 	addi	r2,r2,-1
    ae20:	3084703a 	and	r2,r6,r2
    ae24:	1104b03a 	or	r2,r2,r4
    ae28:	1812d0fa 	srli	r9,r3,3
    ae2c:	3823883a 	mov	r17,r7
    ae30:	003ea306 	br	a8c0 <__adddf3+0x3dc>
    ae34:	217ff804 	addi	r5,r4,-32
    ae38:	21800820 	cmpeqi	r6,r4,32
    ae3c:	494ad83a 	srl	r5,r9,r5
    ae40:	3000041e 	bne	r6,zero,ae54 <__adddf3+0x970>
    ae44:	01801004 	movi	r6,64
    ae48:	3109c83a 	sub	r4,r6,r4
    ae4c:	4912983a 	sll	r9,r9,r4
    ae50:	6258b03a 	or	r12,r12,r9
    ae54:	6026c03a 	cmpne	r19,r12,zero
    ae58:	9966b03a 	or	r19,r19,r5
    ae5c:	003ee506 	br	a9f4 <__adddf3+0x510>
    ae60:	62e7883a 	add	r19,r12,r11
    ae64:	48d3883a 	add	r9,r9,r3
    ae68:	9ac9803a 	cmpltu	r4,r19,r11
    ae6c:	4909883a 	add	r4,r9,r4
    ae70:	003e5306 	br	a7c0 <__adddf3+0x2dc>
    ae74:	0005883a 	mov	r2,zero
    ae78:	0401ffc4 	movi	r16,2047
    ae7c:	0009883a 	mov	r4,zero
    ae80:	003dfe06 	br	a67c <__adddf3+0x198>

0000ae84 <__divdf3>:
    ae84:	deffef04 	addi	sp,sp,-68
    ae88:	2804d53a 	srli	r2,r5,20
    ae8c:	dd000b15 	stw	r20,44(sp)
    ae90:	2828d7fa 	srli	r20,r5,31
    ae94:	dc400815 	stw	r17,32(sp)
    ae98:	04400434 	movhi	r17,16
    ae9c:	dd800d15 	stw	r22,52(sp)
    aea0:	dcc00a15 	stw	r19,40(sp)
    aea4:	8c7fffc4 	addi	r17,r17,-1
    aea8:	dfc01015 	stw	ra,64(sp)
    aeac:	df000f15 	stw	fp,60(sp)
    aeb0:	ddc00e15 	stw	r23,56(sp)
    aeb4:	dd400c15 	stw	r21,48(sp)
    aeb8:	dc800915 	stw	r18,36(sp)
    aebc:	dc000715 	stw	r16,28(sp)
    aec0:	1081ffcc 	andi	r2,r2,2047
    aec4:	2027883a 	mov	r19,r4
    aec8:	2c62703a 	and	r17,r5,r17
    aecc:	a02d883a 	mov	r22,r20
    aed0:	10008726 	beq	r2,zero,b0f0 <__divdf3+0x26c>
    aed4:	10c1ffe0 	cmpeqi	r3,r2,2047
    aed8:	18009d1e 	bne	r3,zero,b150 <__divdf3+0x2cc>
    aedc:	880a90fa 	slli	r5,r17,3
    aee0:	2008d77a 	srli	r4,r4,29
    aee4:	982690fa 	slli	r19,r19,3
    aee8:	14bf0044 	addi	r18,r2,-1023
    aeec:	2148b03a 	or	r4,r4,r5
    aef0:	24002034 	orhi	r16,r4,128
    aef4:	0023883a 	mov	r17,zero
    aef8:	002f883a 	mov	r23,zero
    aefc:	3806d53a 	srli	r3,r7,20
    af00:	01000434 	movhi	r4,16
    af04:	213fffc4 	addi	r4,r4,-1
    af08:	18c1ffcc 	andi	r3,r3,2047
    af0c:	392a703a 	and	r21,r7,r4
    af10:	3838d7fa 	srli	fp,r7,31
    af14:	18006326 	beq	r3,zero,b0a4 <__divdf3+0x220>
    af18:	1881ffe0 	cmpeqi	r2,r3,2047
    af1c:	1000201e 	bne	r2,zero,afa0 <__divdf3+0x11c>
    af20:	a80890fa 	slli	r4,r21,3
    af24:	300ed77a 	srli	r7,r6,29
    af28:	300a90fa 	slli	r5,r6,3
    af2c:	18ff0044 	addi	r3,r3,-1023
    af30:	3908b03a 	or	r4,r7,r4
    af34:	90e5c83a 	sub	r18,r18,r3
    af38:	25402034 	orhi	r21,r4,128
    af3c:	0007883a 	mov	r3,zero
    af40:	88800428 	cmpgeui	r2,r17,16
    af44:	a70cf03a 	xor	r6,r20,fp
    af48:	1000ab1e 	bne	r2,zero,b1f8 <__divdf3+0x374>
    af4c:	882290ba 	slli	r17,r17,2
    af50:	00800074 	movhi	r2,1
    af54:	8885883a 	add	r2,r17,r2
    af58:	10abd817 	ldw	r2,-20640(r2)
    af5c:	1000683a 	jmp	r2
    af60:	0000b1f8 	rdprs	zero,zero,711
    af64:	0000b094 	movui	zero,706
    af68:	0000b038 	rdprs	zero,zero,704
    af6c:	0000afbc 	xorhi	zero,zero,702
    af70:	0000b038 	rdprs	zero,zero,704
    af74:	0000b1b4 	movhi	zero,710
    af78:	0000b038 	rdprs	zero,zero,704
    af7c:	0000afbc 	xorhi	zero,zero,702
    af80:	0000b094 	movui	zero,706
    af84:	0000b094 	movui	zero,706
    af88:	0000b1b4 	movhi	zero,710
    af8c:	0000afbc 	xorhi	zero,zero,702
    af90:	0000afcc 	andi	zero,zero,703
    af94:	0000afcc 	andi	zero,zero,703
    af98:	0000afcc 	andi	zero,zero,703
    af9c:	0000b1cc 	andi	zero,zero,711
    afa0:	a98ab03a 	or	r5,r21,r6
    afa4:	94be0044 	addi	r18,r18,-2047
    afa8:	28007e1e 	bne	r5,zero,b1a4 <__divdf3+0x320>
    afac:	8c400094 	ori	r17,r17,2
    afb0:	002b883a 	mov	r21,zero
    afb4:	00c00084 	movi	r3,2
    afb8:	003fe106 	br	af40 <__divdf3+0xbc>
    afbc:	e02d883a 	mov	r22,fp
    afc0:	a821883a 	mov	r16,r21
    afc4:	2827883a 	mov	r19,r5
    afc8:	182f883a 	mov	r23,r3
    afcc:	b88000a0 	cmpeqi	r2,r23,2
    afd0:	1001ab1e 	bne	r2,zero,b680 <__divdf3+0x7fc>
    afd4:	b88000e0 	cmpeqi	r2,r23,3
    afd8:	1001f91e 	bne	r2,zero,b7c0 <__divdf3+0x93c>
    afdc:	b8800060 	cmpeqi	r2,r23,1
    afe0:	1000141e 	bne	r2,zero,b034 <__divdf3+0x1b0>
    afe4:	9500ffc4 	addi	r20,r18,1023
    afe8:	b00d883a 	mov	r6,r22
    afec:	0501870e 	bge	zero,r20,b60c <__divdf3+0x788>
    aff0:	988001cc 	andi	r2,r19,7
    aff4:	1001c11e 	bne	r2,zero,b6fc <__divdf3+0x878>
    aff8:	9826d0fa 	srli	r19,r19,3
    affc:	8080402c 	andhi	r2,r16,256
    b000:	10000426 	beq	r2,zero,b014 <__divdf3+0x190>
    b004:	00bfc034 	movhi	r2,65280
    b008:	10bfffc4 	addi	r2,r2,-1
    b00c:	80a0703a 	and	r16,r16,r2
    b010:	95010004 	addi	r20,r18,1024
    b014:	a081ffc8 	cmpgei	r2,r20,2047
    b018:	10001e1e 	bne	r2,zero,b094 <__divdf3+0x210>
    b01c:	8006977a 	slli	r3,r16,29
    b020:	8008927a 	slli	r4,r16,9
    b024:	a081ffcc 	andi	r2,r20,2047
    b028:	1ce6b03a 	or	r19,r3,r19
    b02c:	2008d33a 	srli	r4,r4,12
    b030:	00000406 	br	b044 <__divdf3+0x1c0>
    b034:	b00d883a 	mov	r6,r22
    b038:	0005883a 	mov	r2,zero
    b03c:	0009883a 	mov	r4,zero
    b040:	0027883a 	mov	r19,zero
    b044:	1004953a 	slli	r2,r2,20
    b048:	00c00434 	movhi	r3,16
    b04c:	300c97fa 	slli	r6,r6,31
    b050:	18ffffc4 	addi	r3,r3,-1
    b054:	20c6703a 	and	r3,r4,r3
    b058:	1886b03a 	or	r3,r3,r2
    b05c:	1986b03a 	or	r3,r3,r6
    b060:	9805883a 	mov	r2,r19
    b064:	dfc01017 	ldw	ra,64(sp)
    b068:	df000f17 	ldw	fp,60(sp)
    b06c:	ddc00e17 	ldw	r23,56(sp)
    b070:	dd800d17 	ldw	r22,52(sp)
    b074:	dd400c17 	ldw	r21,48(sp)
    b078:	dd000b17 	ldw	r20,44(sp)
    b07c:	dcc00a17 	ldw	r19,40(sp)
    b080:	dc800917 	ldw	r18,36(sp)
    b084:	dc400817 	ldw	r17,32(sp)
    b088:	dc000717 	ldw	r16,28(sp)
    b08c:	dec01104 	addi	sp,sp,68
    b090:	f800283a 	ret
    b094:	0081ffc4 	movi	r2,2047
    b098:	0009883a 	mov	r4,zero
    b09c:	0027883a 	mov	r19,zero
    b0a0:	003fe806 	br	b044 <__divdf3+0x1c0>
    b0a4:	a98ab03a 	or	r5,r21,r6
    b0a8:	28003a26 	beq	r5,zero,b194 <__divdf3+0x310>
    b0ac:	a8014926 	beq	r21,zero,b5d4 <__divdf3+0x750>
    b0b0:	a809883a 	mov	r4,r21
    b0b4:	d9800015 	stw	r6,0(sp)
    b0b8:	000cdcc0 	call	cdcc <__clzsi2>
    b0bc:	d9800017 	ldw	r6,0(sp)
    b0c0:	11fffd44 	addi	r7,r2,-11
    b0c4:	00c00744 	movi	r3,29
    b0c8:	117ffe04 	addi	r5,r2,-8
    b0cc:	19c7c83a 	sub	r3,r3,r7
    b0d0:	a948983a 	sll	r4,r21,r5
    b0d4:	30c6d83a 	srl	r3,r6,r3
    b0d8:	314a983a 	sll	r5,r6,r5
    b0dc:	192ab03a 	or	r21,r3,r4
    b0e0:	1485883a 	add	r2,r2,r18
    b0e4:	1480fcc4 	addi	r18,r2,1011
    b0e8:	0007883a 	mov	r3,zero
    b0ec:	003f9406 	br	af40 <__divdf3+0xbc>
    b0f0:	2460b03a 	or	r16,r4,r17
    b0f4:	202b883a 	mov	r21,r4
    b0f8:	80002126 	beq	r16,zero,b180 <__divdf3+0x2fc>
    b0fc:	d9c00115 	stw	r7,4(sp)
    b100:	d9800015 	stw	r6,0(sp)
    b104:	88012826 	beq	r17,zero,b5a8 <__divdf3+0x724>
    b108:	8809883a 	mov	r4,r17
    b10c:	000cdcc0 	call	cdcc <__clzsi2>
    b110:	d9800017 	ldw	r6,0(sp)
    b114:	d9c00117 	ldw	r7,4(sp)
    b118:	1025883a 	mov	r18,r2
    b11c:	143ffd44 	addi	r16,r2,-11
    b120:	01000744 	movi	r4,29
    b124:	94fffe04 	addi	r19,r18,-8
    b128:	2409c83a 	sub	r4,r4,r16
    b12c:	8cca983a 	sll	r5,r17,r19
    b130:	a908d83a 	srl	r4,r21,r4
    b134:	ace6983a 	sll	r19,r21,r19
    b138:	2160b03a 	or	r16,r4,r5
    b13c:	00bf0344 	movi	r2,-1011
    b140:	14a5c83a 	sub	r18,r2,r18
    b144:	0023883a 	mov	r17,zero
    b148:	002f883a 	mov	r23,zero
    b14c:	003f6b06 	br	aefc <__divdf3+0x78>
    b150:	2460b03a 	or	r16,r4,r17
    b154:	8000051e 	bne	r16,zero,b16c <__divdf3+0x2e8>
    b158:	0027883a 	mov	r19,zero
    b15c:	04400204 	movi	r17,8
    b160:	0481ffc4 	movi	r18,2047
    b164:	05c00084 	movi	r23,2
    b168:	003f6406 	br	aefc <__divdf3+0x78>
    b16c:	8821883a 	mov	r16,r17
    b170:	0481ffc4 	movi	r18,2047
    b174:	04400304 	movi	r17,12
    b178:	05c000c4 	movi	r23,3
    b17c:	003f5f06 	br	aefc <__divdf3+0x78>
    b180:	0027883a 	mov	r19,zero
    b184:	04400104 	movi	r17,4
    b188:	0025883a 	mov	r18,zero
    b18c:	05c00044 	movi	r23,1
    b190:	003f5a06 	br	aefc <__divdf3+0x78>
    b194:	8c400054 	ori	r17,r17,1
    b198:	002b883a 	mov	r21,zero
    b19c:	00c00044 	movi	r3,1
    b1a0:	003f6706 	br	af40 <__divdf3+0xbc>
    b1a4:	8c4000d4 	ori	r17,r17,3
    b1a8:	300b883a 	mov	r5,r6
    b1ac:	00c000c4 	movi	r3,3
    b1b0:	003f6306 	br	af40 <__divdf3+0xbc>
    b1b4:	01000434 	movhi	r4,16
    b1b8:	000d883a 	mov	r6,zero
    b1bc:	213fffc4 	addi	r4,r4,-1
    b1c0:	04ffffc4 	movi	r19,-1
    b1c4:	0081ffc4 	movi	r2,2047
    b1c8:	003f9e06 	br	b044 <__divdf3+0x1c0>
    b1cc:	8080022c 	andhi	r2,r16,8
    b1d0:	1000d426 	beq	r2,zero,b524 <__divdf3+0x6a0>
    b1d4:	a880022c 	andhi	r2,r21,8
    b1d8:	1000d21e 	bne	r2,zero,b524 <__divdf3+0x6a0>
    b1dc:	00800434 	movhi	r2,16
    b1e0:	a9000234 	orhi	r4,r21,8
    b1e4:	10bfffc4 	addi	r2,r2,-1
    b1e8:	2088703a 	and	r4,r4,r2
    b1ec:	e00d883a 	mov	r6,fp
    b1f0:	2827883a 	mov	r19,r5
    b1f4:	003ff306 	br	b1c4 <__divdf3+0x340>
    b1f8:	ac00e536 	bltu	r21,r16,b590 <__divdf3+0x70c>
    b1fc:	ac00e326 	beq	r21,r16,b58c <__divdf3+0x708>
    b200:	94bfffc4 	addi	r18,r18,-1
    b204:	0029883a 	mov	r20,zero
    b208:	280ed63a 	srli	r7,r5,24
    b20c:	a82a923a 	slli	r21,r21,8
    b210:	2804923a 	slli	r2,r5,8
    b214:	8009883a 	mov	r4,r16
    b218:	3d62b03a 	or	r17,r7,r21
    b21c:	882ad43a 	srli	r21,r17,16
    b220:	d9800115 	stw	r6,4(sp)
    b224:	d8800015 	stw	r2,0(sp)
    b228:	a80b883a 	mov	r5,r21
    b22c:	000a3fc0 	call	a3fc <__udivsi3>
    b230:	8f3fffcc 	andi	fp,r17,65535
    b234:	100b883a 	mov	r5,r2
    b238:	e009883a 	mov	r4,fp
    b23c:	102f883a 	mov	r23,r2
    b240:	000a4bc0 	call	a4bc <__mulsi3>
    b244:	a80b883a 	mov	r5,r21
    b248:	8009883a 	mov	r4,r16
    b24c:	102d883a 	mov	r22,r2
    b250:	000a4600 	call	a460 <__umodsi3>
    b254:	1006943a 	slli	r3,r2,16
    b258:	9804d43a 	srli	r2,r19,16
    b25c:	d9800117 	ldw	r6,4(sp)
    b260:	10c4b03a 	or	r2,r2,r3
    b264:	1580042e 	bgeu	r2,r22,b278 <__divdf3+0x3f4>
    b268:	1445883a 	add	r2,r2,r17
    b26c:	b8ffffc4 	addi	r3,r23,-1
    b270:	1441102e 	bgeu	r2,r17,b6b4 <__divdf3+0x830>
    b274:	182f883a 	mov	r23,r3
    b278:	15adc83a 	sub	r22,r2,r22
    b27c:	a80b883a 	mov	r5,r21
    b280:	b009883a 	mov	r4,r22
    b284:	d9800215 	stw	r6,8(sp)
    b288:	000a3fc0 	call	a3fc <__udivsi3>
    b28c:	100b883a 	mov	r5,r2
    b290:	e009883a 	mov	r4,fp
    b294:	1021883a 	mov	r16,r2
    b298:	000a4bc0 	call	a4bc <__mulsi3>
    b29c:	a80b883a 	mov	r5,r21
    b2a0:	b009883a 	mov	r4,r22
    b2a4:	d8800115 	stw	r2,4(sp)
    b2a8:	000a4600 	call	a460 <__umodsi3>
    b2ac:	1004943a 	slli	r2,r2,16
    b2b0:	da000117 	ldw	r8,4(sp)
    b2b4:	9cffffcc 	andi	r19,r19,65535
    b2b8:	9884b03a 	or	r2,r19,r2
    b2bc:	d9800217 	ldw	r6,8(sp)
    b2c0:	1200042e 	bgeu	r2,r8,b2d4 <__divdf3+0x450>
    b2c4:	1445883a 	add	r2,r2,r17
    b2c8:	80ffffc4 	addi	r3,r16,-1
    b2cc:	1440f52e 	bgeu	r2,r17,b6a4 <__divdf3+0x820>
    b2d0:	1821883a 	mov	r16,r3
    b2d4:	b808943a 	slli	r4,r23,16
    b2d8:	d8c00017 	ldw	r3,0(sp)
    b2dc:	1211c83a 	sub	r8,r2,r8
    b2e0:	2420b03a 	or	r16,r4,r16
    b2e4:	182cd43a 	srli	r22,r3,16
    b2e8:	1dffffcc 	andi	r23,r3,65535
    b2ec:	8026d43a 	srli	r19,r16,16
    b2f0:	80ffffcc 	andi	r3,r16,65535
    b2f4:	180b883a 	mov	r5,r3
    b2f8:	b809883a 	mov	r4,r23
    b2fc:	d9800615 	stw	r6,24(sp)
    b300:	da000415 	stw	r8,16(sp)
    b304:	d8c00515 	stw	r3,20(sp)
    b308:	000a4bc0 	call	a4bc <__mulsi3>
    b30c:	b80b883a 	mov	r5,r23
    b310:	9809883a 	mov	r4,r19
    b314:	d8800315 	stw	r2,12(sp)
    b318:	000a4bc0 	call	a4bc <__mulsi3>
    b31c:	b00b883a 	mov	r5,r22
    b320:	9809883a 	mov	r4,r19
    b324:	d8800215 	stw	r2,8(sp)
    b328:	000a4bc0 	call	a4bc <__mulsi3>
    b32c:	d8c00517 	ldw	r3,20(sp)
    b330:	b009883a 	mov	r4,r22
    b334:	d8800115 	stw	r2,4(sp)
    b338:	180b883a 	mov	r5,r3
    b33c:	000a4bc0 	call	a4bc <__mulsi3>
    b340:	da400317 	ldw	r9,12(sp)
    b344:	dac00217 	ldw	r11,8(sp)
    b348:	da800117 	ldw	r10,4(sp)
    b34c:	4806d43a 	srli	r3,r9,16
    b350:	12c5883a 	add	r2,r2,r11
    b354:	da000417 	ldw	r8,16(sp)
    b358:	1887883a 	add	r3,r3,r2
    b35c:	d9800617 	ldw	r6,24(sp)
    b360:	1ac0022e 	bgeu	r3,r11,b36c <__divdf3+0x4e8>
    b364:	00800074 	movhi	r2,1
    b368:	5095883a 	add	r10,r10,r2
    b36c:	1826d43a 	srli	r19,r3,16
    b370:	1806943a 	slli	r3,r3,16
    b374:	4a7fffcc 	andi	r9,r9,65535
    b378:	9aa7883a 	add	r19,r19,r10
    b37c:	1a47883a 	add	r3,r3,r9
    b380:	44c07736 	bltu	r8,r19,b560 <__divdf3+0x6dc>
    b384:	44c07526 	beq	r8,r19,b55c <__divdf3+0x6d8>
    b388:	a0c7c83a 	sub	r3,r20,r3
    b38c:	44c5c83a 	sub	r2,r8,r19
    b390:	a0e7803a 	cmpltu	r19,r20,r3
    b394:	d8c00115 	stw	r3,4(sp)
    b398:	14e7c83a 	sub	r19,r2,r19
    b39c:	9500ffc4 	addi	r20,r18,1023
    b3a0:	8cc0cd26 	beq	r17,r19,b6d8 <__divdf3+0x854>
    b3a4:	a80b883a 	mov	r5,r21
    b3a8:	9809883a 	mov	r4,r19
    b3ac:	d9800415 	stw	r6,16(sp)
    b3b0:	000a3fc0 	call	a3fc <__udivsi3>
    b3b4:	100b883a 	mov	r5,r2
    b3b8:	e009883a 	mov	r4,fp
    b3bc:	d8800315 	stw	r2,12(sp)
    b3c0:	000a4bc0 	call	a4bc <__mulsi3>
    b3c4:	9809883a 	mov	r4,r19
    b3c8:	a80b883a 	mov	r5,r21
    b3cc:	d8800215 	stw	r2,8(sp)
    b3d0:	000a4600 	call	a460 <__umodsi3>
    b3d4:	d8c00117 	ldw	r3,4(sp)
    b3d8:	1008943a 	slli	r4,r2,16
    b3dc:	da400217 	ldw	r9,8(sp)
    b3e0:	1804d43a 	srli	r2,r3,16
    b3e4:	da000317 	ldw	r8,12(sp)
    b3e8:	d9800417 	ldw	r6,16(sp)
    b3ec:	1104b03a 	or	r2,r2,r4
    b3f0:	1240062e 	bgeu	r2,r9,b40c <__divdf3+0x588>
    b3f4:	1445883a 	add	r2,r2,r17
    b3f8:	413fffc4 	addi	r4,r8,-1
    b3fc:	1440bd36 	bltu	r2,r17,b6f4 <__divdf3+0x870>
    b400:	1240bc2e 	bgeu	r2,r9,b6f4 <__divdf3+0x870>
    b404:	423fff84 	addi	r8,r8,-2
    b408:	1445883a 	add	r2,r2,r17
    b40c:	1267c83a 	sub	r19,r2,r9
    b410:	a80b883a 	mov	r5,r21
    b414:	9809883a 	mov	r4,r19
    b418:	d8c00415 	stw	r3,16(sp)
    b41c:	d9800315 	stw	r6,12(sp)
    b420:	da000215 	stw	r8,8(sp)
    b424:	000a3fc0 	call	a3fc <__udivsi3>
    b428:	e009883a 	mov	r4,fp
    b42c:	100b883a 	mov	r5,r2
    b430:	d8800115 	stw	r2,4(sp)
    b434:	000a4bc0 	call	a4bc <__mulsi3>
    b438:	a80b883a 	mov	r5,r21
    b43c:	9809883a 	mov	r4,r19
    b440:	1039883a 	mov	fp,r2
    b444:	000a4600 	call	a460 <__umodsi3>
    b448:	d8c00417 	ldw	r3,16(sp)
    b44c:	1004943a 	slli	r2,r2,16
    b450:	da400117 	ldw	r9,4(sp)
    b454:	18ffffcc 	andi	r3,r3,65535
    b458:	1886b03a 	or	r3,r3,r2
    b45c:	da000217 	ldw	r8,8(sp)
    b460:	d9800317 	ldw	r6,12(sp)
    b464:	1f00062e 	bgeu	r3,fp,b480 <__divdf3+0x5fc>
    b468:	1c47883a 	add	r3,r3,r17
    b46c:	48bfffc4 	addi	r2,r9,-1
    b470:	1c409e36 	bltu	r3,r17,b6ec <__divdf3+0x868>
    b474:	1f009d2e 	bgeu	r3,fp,b6ec <__divdf3+0x868>
    b478:	4a7fff84 	addi	r9,r9,-2
    b47c:	1c47883a 	add	r3,r3,r17
    b480:	4010943a 	slli	r8,r8,16
    b484:	1f2bc83a 	sub	r21,r3,fp
    b488:	b80b883a 	mov	r5,r23
    b48c:	4266b03a 	or	r19,r8,r9
    b490:	98ffffcc 	andi	r3,r19,65535
    b494:	9838d43a 	srli	fp,r19,16
    b498:	1809883a 	mov	r4,r3
    b49c:	d9800415 	stw	r6,16(sp)
    b4a0:	d8c00315 	stw	r3,12(sp)
    b4a4:	000a4bc0 	call	a4bc <__mulsi3>
    b4a8:	b80b883a 	mov	r5,r23
    b4ac:	e009883a 	mov	r4,fp
    b4b0:	d8800215 	stw	r2,8(sp)
    b4b4:	000a4bc0 	call	a4bc <__mulsi3>
    b4b8:	e00b883a 	mov	r5,fp
    b4bc:	b009883a 	mov	r4,r22
    b4c0:	d8800115 	stw	r2,4(sp)
    b4c4:	000a4bc0 	call	a4bc <__mulsi3>
    b4c8:	d8c00317 	ldw	r3,12(sp)
    b4cc:	b009883a 	mov	r4,r22
    b4d0:	102f883a 	mov	r23,r2
    b4d4:	180b883a 	mov	r5,r3
    b4d8:	000a4bc0 	call	a4bc <__mulsi3>
    b4dc:	da000217 	ldw	r8,8(sp)
    b4e0:	da400117 	ldw	r9,4(sp)
    b4e4:	d9800417 	ldw	r6,16(sp)
    b4e8:	4006d43a 	srli	r3,r8,16
    b4ec:	1245883a 	add	r2,r2,r9
    b4f0:	1885883a 	add	r2,r3,r2
    b4f4:	1240022e 	bgeu	r2,r9,b500 <__divdf3+0x67c>
    b4f8:	00c00074 	movhi	r3,1
    b4fc:	b8ef883a 	add	r23,r23,r3
    b500:	1008d43a 	srli	r4,r2,16
    b504:	1004943a 	slli	r2,r2,16
    b508:	423fffcc 	andi	r8,r8,65535
    b50c:	25c9883a 	add	r4,r4,r23
    b510:	1205883a 	add	r2,r2,r8
    b514:	a9000a36 	bltu	r21,r4,b540 <__divdf3+0x6bc>
    b518:	a9000826 	beq	r21,r4,b53c <__divdf3+0x6b8>
    b51c:	9cc00054 	ori	r19,r19,1
    b520:	003eb206 	br	afec <__divdf3+0x168>
    b524:	00800434 	movhi	r2,16
    b528:	81000234 	orhi	r4,r16,8
    b52c:	10bfffc4 	addi	r2,r2,-1
    b530:	2088703a 	and	r4,r4,r2
    b534:	a00d883a 	mov	r6,r20
    b538:	003f2206 	br	b1c4 <__divdf3+0x340>
    b53c:	103eab26 	beq	r2,zero,afec <__divdf3+0x168>
    b540:	8d47883a 	add	r3,r17,r21
    b544:	997fffc4 	addi	r5,r19,-1
    b548:	1c405e36 	bltu	r3,r17,b6c4 <__divdf3+0x840>
    b54c:	19007b36 	bltu	r3,r4,b73c <__divdf3+0x8b8>
    b550:	1900a126 	beq	r3,r4,b7d8 <__divdf3+0x954>
    b554:	2827883a 	mov	r19,r5
    b558:	003ff006 	br	b51c <__divdf3+0x698>
    b55c:	a0ff8a2e 	bgeu	r20,r3,b388 <__divdf3+0x504>
    b560:	d8800017 	ldw	r2,0(sp)
    b564:	a0a9883a 	add	r20,r20,r2
    b568:	a085803a 	cmpltu	r2,r20,r2
    b56c:	1445883a 	add	r2,r2,r17
    b570:	4091883a 	add	r8,r8,r2
    b574:	80bfffc4 	addi	r2,r16,-1
    b578:	8a00462e 	bgeu	r17,r8,b694 <__divdf3+0x810>
    b57c:	44c06836 	bltu	r8,r19,b720 <__divdf3+0x89c>
    b580:	9a006626 	beq	r19,r8,b71c <__divdf3+0x898>
    b584:	1021883a 	mov	r16,r2
    b588:	003f7f06 	br	b388 <__divdf3+0x504>
    b58c:	997f1c36 	bltu	r19,r5,b200 <__divdf3+0x37c>
    b590:	800697fa 	slli	r3,r16,31
    b594:	9804d07a 	srli	r2,r19,1
    b598:	982897fa 	slli	r20,r19,31
    b59c:	8020d07a 	srli	r16,r16,1
    b5a0:	18a6b03a 	or	r19,r3,r2
    b5a4:	003f1806 	br	b208 <__divdf3+0x384>
    b5a8:	000cdcc0 	call	cdcc <__clzsi2>
    b5ac:	14000544 	addi	r16,r2,21
    b5b0:	81000748 	cmpgei	r4,r16,29
    b5b4:	14800804 	addi	r18,r2,32
    b5b8:	d9800017 	ldw	r6,0(sp)
    b5bc:	d9c00117 	ldw	r7,4(sp)
    b5c0:	203ed726 	beq	r4,zero,b120 <__divdf3+0x29c>
    b5c4:	113ffe04 	addi	r4,r2,-8
    b5c8:	9920983a 	sll	r16,r19,r4
    b5cc:	0027883a 	mov	r19,zero
    b5d0:	003eda06 	br	b13c <__divdf3+0x2b8>
    b5d4:	3009883a 	mov	r4,r6
    b5d8:	d9800015 	stw	r6,0(sp)
    b5dc:	000cdcc0 	call	cdcc <__clzsi2>
    b5e0:	11c00544 	addi	r7,r2,21
    b5e4:	38c00748 	cmpgei	r3,r7,29
    b5e8:	1009883a 	mov	r4,r2
    b5ec:	d9800017 	ldw	r6,0(sp)
    b5f0:	10800804 	addi	r2,r2,32
    b5f4:	183eb326 	beq	r3,zero,b0c4 <__divdf3+0x240>
    b5f8:	213ffe04 	addi	r4,r4,-8
    b5fc:	312a983a 	sll	r21,r6,r4
    b600:	000b883a 	mov	r5,zero
    b604:	003eb606 	br	b0e0 <__divdf3+0x25c>
    b608:	04ffffc4 	movi	r19,-1
    b60c:	01000044 	movi	r4,1
    b610:	2509c83a 	sub	r4,r4,r20
    b614:	20800e48 	cmpgei	r2,r4,57
    b618:	103e871e 	bne	r2,zero,b038 <__divdf3+0x1b4>
    b61c:	20800808 	cmpgei	r2,r4,32
    b620:	10004e1e 	bne	r2,zero,b75c <__divdf3+0x8d8>
    b624:	90810784 	addi	r2,r18,1054
    b628:	8086983a 	sll	r3,r16,r2
    b62c:	990ad83a 	srl	r5,r19,r4
    b630:	9884983a 	sll	r2,r19,r2
    b634:	8108d83a 	srl	r4,r16,r4
    b638:	1966b03a 	or	r19,r3,r5
    b63c:	1004c03a 	cmpne	r2,r2,zero
    b640:	98a6b03a 	or	r19,r19,r2
    b644:	988001cc 	andi	r2,r19,7
    b648:	10000726 	beq	r2,zero,b668 <__divdf3+0x7e4>
    b64c:	988003cc 	andi	r2,r19,15
    b650:	10800120 	cmpeqi	r2,r2,4
    b654:	1000041e 	bne	r2,zero,b668 <__divdf3+0x7e4>
    b658:	98800104 	addi	r2,r19,4
    b65c:	14e7803a 	cmpltu	r19,r2,r19
    b660:	24c9883a 	add	r4,r4,r19
    b664:	1027883a 	mov	r19,r2
    b668:	2080202c 	andhi	r2,r4,128
    b66c:	10005026 	beq	r2,zero,b7b0 <__divdf3+0x92c>
    b670:	00800044 	movi	r2,1
    b674:	0009883a 	mov	r4,zero
    b678:	0027883a 	mov	r19,zero
    b67c:	003e7106 	br	b044 <__divdf3+0x1c0>
    b680:	b00d883a 	mov	r6,r22
    b684:	0081ffc4 	movi	r2,2047
    b688:	0009883a 	mov	r4,zero
    b68c:	0027883a 	mov	r19,zero
    b690:	003e6c06 	br	b044 <__divdf3+0x1c0>
    b694:	8a3fbb1e 	bne	r17,r8,b584 <__divdf3+0x700>
    b698:	d9000017 	ldw	r4,0(sp)
    b69c:	a13fb936 	bltu	r20,r4,b584 <__divdf3+0x700>
    b6a0:	003fb606 	br	b57c <__divdf3+0x6f8>
    b6a4:	123f0a2e 	bgeu	r2,r8,b2d0 <__divdf3+0x44c>
    b6a8:	843fff84 	addi	r16,r16,-2
    b6ac:	1445883a 	add	r2,r2,r17
    b6b0:	003f0806 	br	b2d4 <__divdf3+0x450>
    b6b4:	15beef2e 	bgeu	r2,r22,b274 <__divdf3+0x3f0>
    b6b8:	bdffff84 	addi	r23,r23,-2
    b6bc:	1445883a 	add	r2,r2,r17
    b6c0:	003eed06 	br	b278 <__divdf3+0x3f4>
    b6c4:	2827883a 	mov	r19,r5
    b6c8:	193f941e 	bne	r3,r4,b51c <__divdf3+0x698>
    b6cc:	d8c00017 	ldw	r3,0(sp)
    b6d0:	18bf921e 	bne	r3,r2,b51c <__divdf3+0x698>
    b6d4:	003e4506 	br	afec <__divdf3+0x168>
    b6d8:	053fcb0e 	bge	zero,r20,b608 <__divdf3+0x784>
    b6dc:	0027883a 	mov	r19,zero
    b6e0:	00c00044 	movi	r3,1
    b6e4:	80e1883a 	add	r16,r16,r3
    b6e8:	003e4406 	br	affc <__divdf3+0x178>
    b6ec:	1013883a 	mov	r9,r2
    b6f0:	003f6306 	br	b480 <__divdf3+0x5fc>
    b6f4:	2011883a 	mov	r8,r4
    b6f8:	003f4406 	br	b40c <__divdf3+0x588>
    b6fc:	988003cc 	andi	r2,r19,15
    b700:	10800118 	cmpnei	r2,r2,4
    b704:	103e3c26 	beq	r2,zero,aff8 <__divdf3+0x174>
    b708:	98800104 	addi	r2,r19,4
    b70c:	00fffec4 	movi	r3,-5
    b710:	1cc7803a 	cmpltu	r3,r3,r19
    b714:	1026d0fa 	srli	r19,r2,3
    b718:	003ff206 	br	b6e4 <__divdf3+0x860>
    b71c:	a0ff992e 	bgeu	r20,r3,b584 <__divdf3+0x700>
    b720:	d8800017 	ldw	r2,0(sp)
    b724:	843fff84 	addi	r16,r16,-2
    b728:	a0a9883a 	add	r20,r20,r2
    b72c:	a085803a 	cmpltu	r2,r20,r2
    b730:	1445883a 	add	r2,r2,r17
    b734:	4091883a 	add	r8,r8,r2
    b738:	003f1306 	br	b388 <__divdf3+0x504>
    b73c:	d9c00017 	ldw	r7,0(sp)
    b740:	9cffff84 	addi	r19,r19,-2
    b744:	39cb883a 	add	r5,r7,r7
    b748:	29cf803a 	cmpltu	r7,r5,r7
    b74c:	3c4f883a 	add	r7,r7,r17
    b750:	19c7883a 	add	r3,r3,r7
    b754:	d9400015 	stw	r5,0(sp)
    b758:	003fdb06 	br	b6c8 <__divdf3+0x844>
    b75c:	00bff844 	movi	r2,-31
    b760:	1529c83a 	sub	r20,r2,r20
    b764:	21000820 	cmpeqi	r4,r4,32
    b768:	8528d83a 	srl	r20,r16,r20
    b76c:	2000031e 	bne	r4,zero,b77c <__divdf3+0x8f8>
    b770:	90810f84 	addi	r2,r18,1086
    b774:	8088983a 	sll	r4,r16,r2
    b778:	9926b03a 	or	r19,r19,r4
    b77c:	9826c03a 	cmpne	r19,r19,zero
    b780:	9d26b03a 	or	r19,r19,r20
    b784:	9c0001cc 	andi	r16,r19,7
    b788:	8000051e 	bne	r16,zero,b7a0 <__divdf3+0x91c>
    b78c:	0009883a 	mov	r4,zero
    b790:	9826d0fa 	srli	r19,r19,3
    b794:	0005883a 	mov	r2,zero
    b798:	9c26b03a 	or	r19,r19,r16
    b79c:	003e2906 	br	b044 <__divdf3+0x1c0>
    b7a0:	988003cc 	andi	r2,r19,15
    b7a4:	10800118 	cmpnei	r2,r2,4
    b7a8:	0009883a 	mov	r4,zero
    b7ac:	103faa1e 	bne	r2,zero,b658 <__divdf3+0x7d4>
    b7b0:	2004927a 	slli	r2,r4,9
    b7b4:	2020977a 	slli	r16,r4,29
    b7b8:	1008d33a 	srli	r4,r2,12
    b7bc:	003ff406 	br	b790 <__divdf3+0x90c>
    b7c0:	00800434 	movhi	r2,16
    b7c4:	81000234 	orhi	r4,r16,8
    b7c8:	10bfffc4 	addi	r2,r2,-1
    b7cc:	2088703a 	and	r4,r4,r2
    b7d0:	b00d883a 	mov	r6,r22
    b7d4:	003e7b06 	br	b1c4 <__divdf3+0x340>
    b7d8:	d9c00017 	ldw	r7,0(sp)
    b7dc:	38bfd736 	bltu	r7,r2,b73c <__divdf3+0x8b8>
    b7e0:	2827883a 	mov	r19,r5
    b7e4:	003fb906 	br	b6cc <__divdf3+0x848>

0000b7e8 <__eqdf2>:
    b7e8:	2810d53a 	srli	r8,r5,20
    b7ec:	3806d53a 	srli	r3,r7,20
    b7f0:	00800434 	movhi	r2,16
    b7f4:	4201ffcc 	andi	r8,r8,2047
    b7f8:	10bfffc4 	addi	r2,r2,-1
    b7fc:	4281ffd8 	cmpnei	r10,r8,2047
    b800:	2892703a 	and	r9,r5,r2
    b804:	18c1ffcc 	andi	r3,r3,2047
    b808:	3884703a 	and	r2,r7,r2
    b80c:	280ad7fa 	srli	r5,r5,31
    b810:	380ed7fa 	srli	r7,r7,31
    b814:	50000626 	beq	r10,zero,b830 <__eqdf2+0x48>
    b818:	1a81ffe0 	cmpeqi	r10,r3,2047
    b81c:	5000021e 	bne	r10,zero,b828 <__eqdf2+0x40>
    b820:	40c0011e 	bne	r8,r3,b828 <__eqdf2+0x40>
    b824:	48800826 	beq	r9,r2,b848 <__eqdf2+0x60>
    b828:	00800044 	movi	r2,1
    b82c:	f800283a 	ret
    b830:	4914b03a 	or	r10,r9,r4
    b834:	503ffc1e 	bne	r10,zero,b828 <__eqdf2+0x40>
    b838:	18c1ffd8 	cmpnei	r3,r3,2047
    b83c:	183ffa1e 	bne	r3,zero,b828 <__eqdf2+0x40>
    b840:	1184b03a 	or	r2,r2,r6
    b844:	103ff81e 	bne	r2,zero,b828 <__eqdf2+0x40>
    b848:	21bff71e 	bne	r4,r6,b828 <__eqdf2+0x40>
    b84c:	29c00426 	beq	r5,r7,b860 <__eqdf2+0x78>
    b850:	403ff51e 	bne	r8,zero,b828 <__eqdf2+0x40>
    b854:	4904b03a 	or	r2,r9,r4
    b858:	1004c03a 	cmpne	r2,r2,zero
    b85c:	f800283a 	ret
    b860:	0005883a 	mov	r2,zero
    b864:	f800283a 	ret

0000b868 <__gedf2>:
    b868:	2810d53a 	srli	r8,r5,20
    b86c:	3812d53a 	srli	r9,r7,20
    b870:	00800434 	movhi	r2,16
    b874:	4201ffcc 	andi	r8,r8,2047
    b878:	10bfffc4 	addi	r2,r2,-1
    b87c:	4281ffd8 	cmpnei	r10,r8,2047
    b880:	2896703a 	and	r11,r5,r2
    b884:	3886703a 	and	r3,r7,r2
    b888:	280ad7fa 	srli	r5,r5,31
    b88c:	4a41ffcc 	andi	r9,r9,2047
    b890:	3804d7fa 	srli	r2,r7,31
    b894:	50000b26 	beq	r10,zero,b8c4 <__gedf2+0x5c>
    b898:	49c1ffd8 	cmpnei	r7,r9,2047
    b89c:	38000d26 	beq	r7,zero,b8d4 <__gedf2+0x6c>
    b8a0:	4000191e 	bne	r8,zero,b908 <__gedf2+0xa0>
    b8a4:	5914b03a 	or	r10,r11,r4
    b8a8:	500f003a 	cmpeq	r7,r10,zero
    b8ac:	4800131e 	bne	r9,zero,b8fc <__gedf2+0x94>
    b8b0:	1998b03a 	or	r12,r3,r6
    b8b4:	6000111e 	bne	r12,zero,b8fc <__gedf2+0x94>
    b8b8:	50000a1e 	bne	r10,zero,b8e4 <__gedf2+0x7c>
    b8bc:	0005883a 	mov	r2,zero
    b8c0:	f800283a 	ret
    b8c4:	590eb03a 	or	r7,r11,r4
    b8c8:	38001e1e 	bne	r7,zero,b944 <__gedf2+0xdc>
    b8cc:	49c1ffe0 	cmpeqi	r7,r9,2047
    b8d0:	38000d26 	beq	r7,zero,b908 <__gedf2+0xa0>
    b8d4:	198eb03a 	or	r7,r3,r6
    b8d8:	38001a1e 	bne	r7,zero,b944 <__gedf2+0xdc>
    b8dc:	40000526 	beq	r8,zero,b8f4 <__gedf2+0x8c>
    b8e0:	28800d26 	beq	r5,r2,b918 <__gedf2+0xb0>
    b8e4:	00800044 	movi	r2,1
    b8e8:	28000626 	beq	r5,zero,b904 <__gedf2+0x9c>
    b8ec:	00bfffc4 	movi	r2,-1
    b8f0:	f800283a 	ret
    b8f4:	590eb03a 	or	r7,r11,r4
    b8f8:	380f003a 	cmpeq	r7,r7,zero
    b8fc:	383ff826 	beq	r7,zero,b8e0 <__gedf2+0x78>
    b900:	103ffa26 	beq	r2,zero,b8ec <__gedf2+0x84>
    b904:	f800283a 	ret
    b908:	483ff51e 	bne	r9,zero,b8e0 <__gedf2+0x78>
    b90c:	198eb03a 	or	r7,r3,r6
    b910:	383ff31e 	bne	r7,zero,b8e0 <__gedf2+0x78>
    b914:	003ff306 	br	b8e4 <__gedf2+0x7c>
    b918:	4a000716 	blt	r9,r8,b938 <__gedf2+0xd0>
    b91c:	427ff816 	blt	r8,r9,b900 <__gedf2+0x98>
    b920:	1afff036 	bltu	r3,r11,b8e4 <__gedf2+0x7c>
    b924:	58c00926 	beq	r11,r3,b94c <__gedf2+0xe4>
    b928:	58ffe42e 	bgeu	r11,r3,b8bc <__gedf2+0x54>
    b92c:	283fef26 	beq	r5,zero,b8ec <__gedf2+0x84>
    b930:	2805883a 	mov	r2,r5
    b934:	f800283a 	ret
    b938:	103fec1e 	bne	r2,zero,b8ec <__gedf2+0x84>
    b93c:	00800044 	movi	r2,1
    b940:	f800283a 	ret
    b944:	00bfff84 	movi	r2,-2
    b948:	f800283a 	ret
    b94c:	313fe536 	bltu	r6,r4,b8e4 <__gedf2+0x7c>
    b950:	21bfda2e 	bgeu	r4,r6,b8bc <__gedf2+0x54>
    b954:	003ff506 	br	b92c <__gedf2+0xc4>

0000b958 <__ledf2>:
    b958:	2810d53a 	srli	r8,r5,20
    b95c:	3812d53a 	srli	r9,r7,20
    b960:	00800434 	movhi	r2,16
    b964:	4201ffcc 	andi	r8,r8,2047
    b968:	10bfffc4 	addi	r2,r2,-1
    b96c:	4281ffd8 	cmpnei	r10,r8,2047
    b970:	2896703a 	and	r11,r5,r2
    b974:	3886703a 	and	r3,r7,r2
    b978:	280ad7fa 	srli	r5,r5,31
    b97c:	4a41ffcc 	andi	r9,r9,2047
    b980:	3804d7fa 	srli	r2,r7,31
    b984:	50000b26 	beq	r10,zero,b9b4 <__ledf2+0x5c>
    b988:	49c1ffd8 	cmpnei	r7,r9,2047
    b98c:	38000d26 	beq	r7,zero,b9c4 <__ledf2+0x6c>
    b990:	40001b1e 	bne	r8,zero,ba00 <__ledf2+0xa8>
    b994:	5914b03a 	or	r10,r11,r4
    b998:	500f003a 	cmpeq	r7,r10,zero
    b99c:	48000e1e 	bne	r9,zero,b9d8 <__ledf2+0x80>
    b9a0:	1998b03a 	or	r12,r3,r6
    b9a4:	60000c1e 	bne	r12,zero,b9d8 <__ledf2+0x80>
    b9a8:	50000d1e 	bne	r10,zero,b9e0 <__ledf2+0x88>
    b9ac:	0005883a 	mov	r2,zero
    b9b0:	f800283a 	ret
    b9b4:	590eb03a 	or	r7,r11,r4
    b9b8:	38000d1e 	bne	r7,zero,b9f0 <__ledf2+0x98>
    b9bc:	49c1ffe0 	cmpeqi	r7,r9,2047
    b9c0:	38000f26 	beq	r7,zero,ba00 <__ledf2+0xa8>
    b9c4:	198eb03a 	or	r7,r3,r6
    b9c8:	3800091e 	bne	r7,zero,b9f0 <__ledf2+0x98>
    b9cc:	4000031e 	bne	r8,zero,b9dc <__ledf2+0x84>
    b9d0:	590eb03a 	or	r7,r11,r4
    b9d4:	380f003a 	cmpeq	r7,r7,zero
    b9d8:	3800071e 	bne	r7,zero,b9f8 <__ledf2+0xa0>
    b9dc:	28800c26 	beq	r5,r2,ba10 <__ledf2+0xb8>
    b9e0:	00800044 	movi	r2,1
    b9e4:	28000526 	beq	r5,zero,b9fc <__ledf2+0xa4>
    b9e8:	00bfffc4 	movi	r2,-1
    b9ec:	f800283a 	ret
    b9f0:	00800084 	movi	r2,2
    b9f4:	f800283a 	ret
    b9f8:	103ffb26 	beq	r2,zero,b9e8 <__ledf2+0x90>
    b9fc:	f800283a 	ret
    ba00:	483ff61e 	bne	r9,zero,b9dc <__ledf2+0x84>
    ba04:	198eb03a 	or	r7,r3,r6
    ba08:	383ff41e 	bne	r7,zero,b9dc <__ledf2+0x84>
    ba0c:	003ff406 	br	b9e0 <__ledf2+0x88>
    ba10:	4a00030e 	bge	r9,r8,ba20 <__ledf2+0xc8>
    ba14:	103ff41e 	bne	r2,zero,b9e8 <__ledf2+0x90>
    ba18:	00800044 	movi	r2,1
    ba1c:	f800283a 	ret
    ba20:	427ff516 	blt	r8,r9,b9f8 <__ledf2+0xa0>
    ba24:	1affee36 	bltu	r3,r11,b9e0 <__ledf2+0x88>
    ba28:	58c00426 	beq	r11,r3,ba3c <__ledf2+0xe4>
    ba2c:	58ffdf2e 	bgeu	r11,r3,b9ac <__ledf2+0x54>
    ba30:	283fed26 	beq	r5,zero,b9e8 <__ledf2+0x90>
    ba34:	2805883a 	mov	r2,r5
    ba38:	f800283a 	ret
    ba3c:	313fe836 	bltu	r6,r4,b9e0 <__ledf2+0x88>
    ba40:	21bfda2e 	bgeu	r4,r6,b9ac <__ledf2+0x54>
    ba44:	003ffa06 	br	ba30 <__ledf2+0xd8>

0000ba48 <__muldf3>:
    ba48:	2810d53a 	srli	r8,r5,20
    ba4c:	deffef04 	addi	sp,sp,-68
    ba50:	dc000715 	stw	r16,28(sp)
    ba54:	04000434 	movhi	r16,16
    ba58:	dd000b15 	stw	r20,44(sp)
    ba5c:	dc800915 	stw	r18,36(sp)
    ba60:	843fffc4 	addi	r16,r16,-1
    ba64:	dfc01015 	stw	ra,64(sp)
    ba68:	df000f15 	stw	fp,60(sp)
    ba6c:	ddc00e15 	stw	r23,56(sp)
    ba70:	dd800d15 	stw	r22,52(sp)
    ba74:	dd400c15 	stw	r21,48(sp)
    ba78:	dcc00a15 	stw	r19,40(sp)
    ba7c:	dc400815 	stw	r17,32(sp)
    ba80:	4201ffcc 	andi	r8,r8,2047
    ba84:	2025883a 	mov	r18,r4
    ba88:	2c20703a 	and	r16,r5,r16
    ba8c:	2828d7fa 	srli	r20,r5,31
    ba90:	40005d26 	beq	r8,zero,bc08 <__muldf3+0x1c0>
    ba94:	4081ffe0 	cmpeqi	r2,r8,2047
    ba98:	1000721e 	bne	r2,zero,bc64 <__muldf3+0x21c>
    ba9c:	802090fa 	slli	r16,r16,3
    baa0:	2006d77a 	srli	r3,r4,29
    baa4:	202c90fa 	slli	r22,r4,3
    baa8:	423f0044 	addi	r8,r8,-1023
    baac:	1c20b03a 	or	r16,r3,r16
    bab0:	84002034 	orhi	r16,r16,128
    bab4:	0027883a 	mov	r19,zero
    bab8:	002f883a 	mov	r23,zero
    babc:	3806d53a 	srli	r3,r7,20
    bac0:	04400434 	movhi	r17,16
    bac4:	8c7fffc4 	addi	r17,r17,-1
    bac8:	18c1ffcc 	andi	r3,r3,2047
    bacc:	3c62703a 	and	r17,r7,r17
    bad0:	382ad7fa 	srli	r21,r7,31
    bad4:	18006a26 	beq	r3,zero,bc80 <__muldf3+0x238>
    bad8:	1881ffe0 	cmpeqi	r2,r3,2047
    badc:	1000211e 	bne	r2,zero,bb64 <__muldf3+0x11c>
    bae0:	882290fa 	slli	r17,r17,3
    bae4:	3008d77a 	srli	r4,r6,29
    bae8:	302490fa 	slli	r18,r6,3
    baec:	18ff0044 	addi	r3,r3,-1023
    baf0:	2462b03a 	or	r17,r4,r17
    baf4:	40d1883a 	add	r8,r8,r3
    baf8:	8c402034 	orhi	r17,r17,128
    bafc:	0007883a 	mov	r3,zero
    bb00:	98800428 	cmpgeui	r2,r19,16
    bb04:	a54cf03a 	xor	r6,r20,r21
    bb08:	42400044 	addi	r9,r8,1
    bb0c:	10009b1e 	bne	r2,zero,bd7c <__muldf3+0x334>
    bb10:	982690ba 	slli	r19,r19,2
    bb14:	00800074 	movhi	r2,1
    bb18:	9885883a 	add	r2,r19,r2
    bb1c:	10aec917 	ldw	r2,-17628(r2)
    bb20:	1000683a 	jmp	r2
    bb24:	0000bd7c 	xorhi	zero,zero,757
    bb28:	0000bb84 	movi	zero,750
    bb2c:	0000bb84 	movi	zero,750
    bb30:	0000bb80 	call	bb8 <___vfprintf_internal_r+0x660>
    bb34:	0000bb90 	cmplti	zero,zero,750
    bb38:	0000bb90 	cmplti	zero,zero,750
    bb3c:	0000bd38 	rdprs	zero,zero,756
    bb40:	0000bb80 	call	bb8 <___vfprintf_internal_r+0x660>
    bb44:	0000bb90 	cmplti	zero,zero,750
    bb48:	0000bd38 	rdprs	zero,zero,756
    bb4c:	0000bb90 	cmplti	zero,zero,750
    bb50:	0000bb80 	call	bb8 <___vfprintf_internal_r+0x660>
    bb54:	0000bd30 	cmpltui	zero,zero,756
    bb58:	0000bd30 	cmpltui	zero,zero,756
    bb5c:	0000bd30 	cmpltui	zero,zero,756
    bb60:	0000bd50 	cmplti	zero,zero,757
    bb64:	3464b03a 	or	r18,r6,r17
    bb68:	4201ffc4 	addi	r8,r8,2047
    bb6c:	90006c1e 	bne	r18,zero,bd20 <__muldf3+0x2d8>
    bb70:	9cc00094 	ori	r19,r19,2
    bb74:	0023883a 	mov	r17,zero
    bb78:	00c00084 	movi	r3,2
    bb7c:	003fe006 	br	bb00 <__muldf3+0xb8>
    bb80:	a80d883a 	mov	r6,r21
    bb84:	8821883a 	mov	r16,r17
    bb88:	902d883a 	mov	r22,r18
    bb8c:	182f883a 	mov	r23,r3
    bb90:	b88000a0 	cmpeqi	r2,r23,2
    bb94:	1000501e 	bne	r2,zero,bcd8 <__muldf3+0x290>
    bb98:	b88000e0 	cmpeqi	r2,r23,3
    bb9c:	10019d1e 	bne	r2,zero,c214 <__muldf3+0x7cc>
    bba0:	b8800060 	cmpeqi	r2,r23,1
    bba4:	10012a26 	beq	r2,zero,c050 <__muldf3+0x608>
    bba8:	0007883a 	mov	r3,zero
    bbac:	0021883a 	mov	r16,zero
    bbb0:	002d883a 	mov	r22,zero
    bbb4:	04400434 	movhi	r17,16
    bbb8:	1806953a 	slli	r3,r3,20
    bbbc:	31803fcc 	andi	r6,r6,255
    bbc0:	8c7fffc4 	addi	r17,r17,-1
    bbc4:	300c97fa 	slli	r6,r6,31
    bbc8:	8460703a 	and	r16,r16,r17
    bbcc:	80c6b03a 	or	r3,r16,r3
    bbd0:	1986b03a 	or	r3,r3,r6
    bbd4:	b005883a 	mov	r2,r22
    bbd8:	dfc01017 	ldw	ra,64(sp)
    bbdc:	df000f17 	ldw	fp,60(sp)
    bbe0:	ddc00e17 	ldw	r23,56(sp)
    bbe4:	dd800d17 	ldw	r22,52(sp)
    bbe8:	dd400c17 	ldw	r21,48(sp)
    bbec:	dd000b17 	ldw	r20,44(sp)
    bbf0:	dcc00a17 	ldw	r19,40(sp)
    bbf4:	dc800917 	ldw	r18,36(sp)
    bbf8:	dc400817 	ldw	r17,32(sp)
    bbfc:	dc000717 	ldw	r16,28(sp)
    bc00:	dec01104 	addi	sp,sp,68
    bc04:	f800283a 	ret
    bc08:	812cb03a 	or	r22,r16,r4
    bc0c:	b0003f26 	beq	r22,zero,bd0c <__muldf3+0x2c4>
    bc10:	d9c00115 	stw	r7,4(sp)
    bc14:	d9800015 	stw	r6,0(sp)
    bc18:	80013b26 	beq	r16,zero,c108 <__muldf3+0x6c0>
    bc1c:	8009883a 	mov	r4,r16
    bc20:	000cdcc0 	call	cdcc <__clzsi2>
    bc24:	d9800017 	ldw	r6,0(sp)
    bc28:	d9c00117 	ldw	r7,4(sp)
    bc2c:	1007883a 	mov	r3,r2
    bc30:	117ffd44 	addi	r5,r2,-11
    bc34:	01000744 	movi	r4,29
    bc38:	1dbffe04 	addi	r22,r3,-8
    bc3c:	2149c83a 	sub	r4,r4,r5
    bc40:	85a0983a 	sll	r16,r16,r22
    bc44:	9108d83a 	srl	r4,r18,r4
    bc48:	95ac983a 	sll	r22,r18,r22
    bc4c:	2420b03a 	or	r16,r4,r16
    bc50:	023f0344 	movi	r8,-1011
    bc54:	40d1c83a 	sub	r8,r8,r3
    bc58:	0027883a 	mov	r19,zero
    bc5c:	002f883a 	mov	r23,zero
    bc60:	003f9606 	br	babc <__muldf3+0x74>
    bc64:	812cb03a 	or	r22,r16,r4
    bc68:	b000231e 	bne	r22,zero,bcf8 <__muldf3+0x2b0>
    bc6c:	0021883a 	mov	r16,zero
    bc70:	04c00204 	movi	r19,8
    bc74:	0201ffc4 	movi	r8,2047
    bc78:	05c00084 	movi	r23,2
    bc7c:	003f8f06 	br	babc <__muldf3+0x74>
    bc80:	3464b03a 	or	r18,r6,r17
    bc84:	90001826 	beq	r18,zero,bce8 <__muldf3+0x2a0>
    bc88:	88011126 	beq	r17,zero,c0d0 <__muldf3+0x688>
    bc8c:	8809883a 	mov	r4,r17
    bc90:	d9800115 	stw	r6,4(sp)
    bc94:	da000015 	stw	r8,0(sp)
    bc98:	000cdcc0 	call	cdcc <__clzsi2>
    bc9c:	da000017 	ldw	r8,0(sp)
    bca0:	d9800117 	ldw	r6,4(sp)
    bca4:	1007883a 	mov	r3,r2
    bca8:	117ffd44 	addi	r5,r2,-11
    bcac:	01000744 	movi	r4,29
    bcb0:	1cbffe04 	addi	r18,r3,-8
    bcb4:	2149c83a 	sub	r4,r4,r5
    bcb8:	8ca2983a 	sll	r17,r17,r18
    bcbc:	3108d83a 	srl	r4,r6,r4
    bcc0:	34a4983a 	sll	r18,r6,r18
    bcc4:	2462b03a 	or	r17,r4,r17
    bcc8:	40d1c83a 	sub	r8,r8,r3
    bccc:	423f0344 	addi	r8,r8,-1011
    bcd0:	0007883a 	mov	r3,zero
    bcd4:	003f8a06 	br	bb00 <__muldf3+0xb8>
    bcd8:	00c1ffc4 	movi	r3,2047
    bcdc:	0021883a 	mov	r16,zero
    bce0:	002d883a 	mov	r22,zero
    bce4:	003fb306 	br	bbb4 <__muldf3+0x16c>
    bce8:	9cc00054 	ori	r19,r19,1
    bcec:	0023883a 	mov	r17,zero
    bcf0:	00c00044 	movi	r3,1
    bcf4:	003f8206 	br	bb00 <__muldf3+0xb8>
    bcf8:	202d883a 	mov	r22,r4
    bcfc:	04c00304 	movi	r19,12
    bd00:	0201ffc4 	movi	r8,2047
    bd04:	05c000c4 	movi	r23,3
    bd08:	003f6c06 	br	babc <__muldf3+0x74>
    bd0c:	0021883a 	mov	r16,zero
    bd10:	04c00104 	movi	r19,4
    bd14:	0011883a 	mov	r8,zero
    bd18:	05c00044 	movi	r23,1
    bd1c:	003f6706 	br	babc <__muldf3+0x74>
    bd20:	9cc000d4 	ori	r19,r19,3
    bd24:	3025883a 	mov	r18,r6
    bd28:	00c000c4 	movi	r3,3
    bd2c:	003f7406 	br	bb00 <__muldf3+0xb8>
    bd30:	a00d883a 	mov	r6,r20
    bd34:	003f9606 	br	bb90 <__muldf3+0x148>
    bd38:	04000434 	movhi	r16,16
    bd3c:	000d883a 	mov	r6,zero
    bd40:	843fffc4 	addi	r16,r16,-1
    bd44:	05bfffc4 	movi	r22,-1
    bd48:	00c1ffc4 	movi	r3,2047
    bd4c:	003f9906 	br	bbb4 <__muldf3+0x16c>
    bd50:	8080022c 	andhi	r2,r16,8
    bd54:	1000d826 	beq	r2,zero,c0b8 <__muldf3+0x670>
    bd58:	8880022c 	andhi	r2,r17,8
    bd5c:	1000d61e 	bne	r2,zero,c0b8 <__muldf3+0x670>
    bd60:	00800434 	movhi	r2,16
    bd64:	8c000234 	orhi	r16,r17,8
    bd68:	10bfffc4 	addi	r2,r2,-1
    bd6c:	80a0703a 	and	r16,r16,r2
    bd70:	a80d883a 	mov	r6,r21
    bd74:	902d883a 	mov	r22,r18
    bd78:	003ff306 	br	bd48 <__muldf3+0x300>
    bd7c:	b028d43a 	srli	r20,r22,16
    bd80:	902ed43a 	srli	r23,r18,16
    bd84:	b5bfffcc 	andi	r22,r22,65535
    bd88:	94bfffcc 	andi	r18,r18,65535
    bd8c:	b00b883a 	mov	r5,r22
    bd90:	9009883a 	mov	r4,r18
    bd94:	d9800215 	stw	r6,8(sp)
    bd98:	da000115 	stw	r8,4(sp)
    bd9c:	da400015 	stw	r9,0(sp)
    bda0:	000a4bc0 	call	a4bc <__mulsi3>
    bda4:	900b883a 	mov	r5,r18
    bda8:	a009883a 	mov	r4,r20
    bdac:	1027883a 	mov	r19,r2
    bdb0:	000a4bc0 	call	a4bc <__mulsi3>
    bdb4:	b80b883a 	mov	r5,r23
    bdb8:	a009883a 	mov	r4,r20
    bdbc:	102b883a 	mov	r21,r2
    bdc0:	000a4bc0 	call	a4bc <__mulsi3>
    bdc4:	b00b883a 	mov	r5,r22
    bdc8:	b809883a 	mov	r4,r23
    bdcc:	1039883a 	mov	fp,r2
    bdd0:	000a4bc0 	call	a4bc <__mulsi3>
    bdd4:	9806d43a 	srli	r3,r19,16
    bdd8:	1545883a 	add	r2,r2,r21
    bddc:	da400017 	ldw	r9,0(sp)
    bde0:	1885883a 	add	r2,r3,r2
    bde4:	da000117 	ldw	r8,4(sp)
    bde8:	d9800217 	ldw	r6,8(sp)
    bdec:	1540022e 	bgeu	r2,r21,bdf8 <__muldf3+0x3b0>
    bdf0:	00c00074 	movhi	r3,1
    bdf4:	e0f9883a 	add	fp,fp,r3
    bdf8:	1006943a 	slli	r3,r2,16
    bdfc:	1004d43a 	srli	r2,r2,16
    be00:	882ad43a 	srli	r21,r17,16
    be04:	9cffffcc 	andi	r19,r19,65535
    be08:	8c7fffcc 	andi	r17,r17,65535
    be0c:	b00b883a 	mov	r5,r22
    be10:	8809883a 	mov	r4,r17
    be14:	d8800015 	stw	r2,0(sp)
    be18:	1cc5883a 	add	r2,r3,r19
    be1c:	d9800515 	stw	r6,20(sp)
    be20:	da000415 	stw	r8,16(sp)
    be24:	da400315 	stw	r9,12(sp)
    be28:	d8800115 	stw	r2,4(sp)
    be2c:	000a4bc0 	call	a4bc <__mulsi3>
    be30:	a009883a 	mov	r4,r20
    be34:	880b883a 	mov	r5,r17
    be38:	d8800215 	stw	r2,8(sp)
    be3c:	000a4bc0 	call	a4bc <__mulsi3>
    be40:	a009883a 	mov	r4,r20
    be44:	a80b883a 	mov	r5,r21
    be48:	1027883a 	mov	r19,r2
    be4c:	000a4bc0 	call	a4bc <__mulsi3>
    be50:	b00b883a 	mov	r5,r22
    be54:	a809883a 	mov	r4,r21
    be58:	1029883a 	mov	r20,r2
    be5c:	000a4bc0 	call	a4bc <__mulsi3>
    be60:	d9c00217 	ldw	r7,8(sp)
    be64:	14c5883a 	add	r2,r2,r19
    be68:	da400317 	ldw	r9,12(sp)
    be6c:	3806d43a 	srli	r3,r7,16
    be70:	da000417 	ldw	r8,16(sp)
    be74:	d9800517 	ldw	r6,20(sp)
    be78:	1885883a 	add	r2,r3,r2
    be7c:	14c0022e 	bgeu	r2,r19,be88 <__muldf3+0x440>
    be80:	00c00074 	movhi	r3,1
    be84:	a0e9883a 	add	r20,r20,r3
    be88:	1006d43a 	srli	r3,r2,16
    be8c:	1004943a 	slli	r2,r2,16
    be90:	802cd43a 	srli	r22,r16,16
    be94:	843fffcc 	andi	r16,r16,65535
    be98:	3cffffcc 	andi	r19,r7,65535
    be9c:	9009883a 	mov	r4,r18
    bea0:	800b883a 	mov	r5,r16
    bea4:	d9800615 	stw	r6,24(sp)
    bea8:	da000515 	stw	r8,20(sp)
    beac:	da400415 	stw	r9,16(sp)
    beb0:	1d29883a 	add	r20,r3,r20
    beb4:	14e7883a 	add	r19,r2,r19
    beb8:	000a4bc0 	call	a4bc <__mulsi3>
    bebc:	900b883a 	mov	r5,r18
    bec0:	b009883a 	mov	r4,r22
    bec4:	d8800315 	stw	r2,12(sp)
    bec8:	000a4bc0 	call	a4bc <__mulsi3>
    becc:	b00b883a 	mov	r5,r22
    bed0:	b809883a 	mov	r4,r23
    bed4:	1025883a 	mov	r18,r2
    bed8:	000a4bc0 	call	a4bc <__mulsi3>
    bedc:	800b883a 	mov	r5,r16
    bee0:	b809883a 	mov	r4,r23
    bee4:	d8800215 	stw	r2,8(sp)
    bee8:	000a4bc0 	call	a4bc <__mulsi3>
    beec:	d8c00317 	ldw	r3,12(sp)
    bef0:	d9400017 	ldw	r5,0(sp)
    bef4:	1485883a 	add	r2,r2,r18
    bef8:	1808d43a 	srli	r4,r3,16
    befc:	2ccf883a 	add	r7,r5,r19
    bf00:	da800217 	ldw	r10,8(sp)
    bf04:	2085883a 	add	r2,r4,r2
    bf08:	da400417 	ldw	r9,16(sp)
    bf0c:	da000517 	ldw	r8,20(sp)
    bf10:	d9800617 	ldw	r6,24(sp)
    bf14:	1480022e 	bgeu	r2,r18,bf20 <__muldf3+0x4d8>
    bf18:	01000074 	movhi	r4,1
    bf1c:	5115883a 	add	r10,r10,r4
    bf20:	1024d43a 	srli	r18,r2,16
    bf24:	1004943a 	slli	r2,r2,16
    bf28:	1dffffcc 	andi	r23,r3,65535
    bf2c:	8809883a 	mov	r4,r17
    bf30:	800b883a 	mov	r5,r16
    bf34:	d9800615 	stw	r6,24(sp)
    bf38:	da000515 	stw	r8,20(sp)
    bf3c:	da400415 	stw	r9,16(sp)
    bf40:	d9c00315 	stw	r7,12(sp)
    bf44:	92a5883a 	add	r18,r18,r10
    bf48:	15ef883a 	add	r23,r2,r23
    bf4c:	000a4bc0 	call	a4bc <__mulsi3>
    bf50:	880b883a 	mov	r5,r17
    bf54:	b009883a 	mov	r4,r22
    bf58:	d8800215 	stw	r2,8(sp)
    bf5c:	000a4bc0 	call	a4bc <__mulsi3>
    bf60:	b00b883a 	mov	r5,r22
    bf64:	a809883a 	mov	r4,r21
    bf68:	d8800015 	stw	r2,0(sp)
    bf6c:	000a4bc0 	call	a4bc <__mulsi3>
    bf70:	800b883a 	mov	r5,r16
    bf74:	a809883a 	mov	r4,r21
    bf78:	1023883a 	mov	r17,r2
    bf7c:	000a4bc0 	call	a4bc <__mulsi3>
    bf80:	da800217 	ldw	r10,8(sp)
    bf84:	d8c00017 	ldw	r3,0(sp)
    bf88:	d9c00317 	ldw	r7,12(sp)
    bf8c:	500ad43a 	srli	r5,r10,16
    bf90:	10c5883a 	add	r2,r2,r3
    bf94:	da400417 	ldw	r9,16(sp)
    bf98:	288b883a 	add	r5,r5,r2
    bf9c:	da000517 	ldw	r8,20(sp)
    bfa0:	d9800617 	ldw	r6,24(sp)
    bfa4:	28c0022e 	bgeu	r5,r3,bfb0 <__muldf3+0x568>
    bfa8:	00800074 	movhi	r2,1
    bfac:	88a3883a 	add	r17,r17,r2
    bfb0:	2806943a 	slli	r3,r5,16
    bfb4:	52bfffcc 	andi	r10,r10,65535
    bfb8:	3f39883a 	add	fp,r7,fp
    bfbc:	1a87883a 	add	r3,r3,r10
    bfc0:	e4e7803a 	cmpltu	r19,fp,r19
    bfc4:	1d07883a 	add	r3,r3,r20
    bfc8:	e5f9883a 	add	fp,fp,r23
    bfcc:	1ce1883a 	add	r16,r3,r19
    bfd0:	e5c9803a 	cmpltu	r4,fp,r23
    bfd4:	848f883a 	add	r7,r16,r18
    bfd8:	280ad43a 	srli	r5,r5,16
    bfdc:	3915883a 	add	r10,r7,r4
    bfe0:	1d29803a 	cmpltu	r20,r3,r20
    bfe4:	84e1803a 	cmpltu	r16,r16,r19
    bfe8:	5109803a 	cmpltu	r4,r10,r4
    bfec:	a420b03a 	or	r16,r20,r16
    bff0:	3ca5803a 	cmpltu	r18,r7,r18
    bff4:	8161883a 	add	r16,r16,r5
    bff8:	9108b03a 	or	r4,r18,r4
    bffc:	8121883a 	add	r16,r16,r4
    c000:	e02c927a 	slli	r22,fp,9
    c004:	8461883a 	add	r16,r16,r17
    c008:	d8c00117 	ldw	r3,4(sp)
    c00c:	5004d5fa 	srli	r2,r10,23
    c010:	8020927a 	slli	r16,r16,9
    c014:	e038d5fa 	srli	fp,fp,23
    c018:	b0ecb03a 	or	r22,r22,r3
    c01c:	5014927a 	slli	r10,r10,9
    c020:	80a0b03a 	or	r16,r16,r2
    c024:	b02cc03a 	cmpne	r22,r22,zero
    c028:	b72cb03a 	or	r22,r22,fp
    c02c:	8080402c 	andhi	r2,r16,256
    c030:	b2acb03a 	or	r22,r22,r10
    c034:	10005c26 	beq	r2,zero,c1a8 <__muldf3+0x760>
    c038:	b004d07a 	srli	r2,r22,1
    c03c:	800697fa 	slli	r3,r16,31
    c040:	b580004c 	andi	r22,r22,1
    c044:	8020d07a 	srli	r16,r16,1
    c048:	15acb03a 	or	r22,r2,r22
    c04c:	b0ecb03a 	or	r22,r22,r3
    c050:	48c0ffc4 	addi	r3,r9,1023
    c054:	00c0370e 	bge	zero,r3,c134 <__muldf3+0x6ec>
    c058:	b08001cc 	andi	r2,r22,7
    c05c:	10000726 	beq	r2,zero,c07c <__muldf3+0x634>
    c060:	b08003cc 	andi	r2,r22,15
    c064:	10800120 	cmpeqi	r2,r2,4
    c068:	1000041e 	bne	r2,zero,c07c <__muldf3+0x634>
    c06c:	b0800104 	addi	r2,r22,4
    c070:	15ad803a 	cmpltu	r22,r2,r22
    c074:	85a1883a 	add	r16,r16,r22
    c078:	102d883a 	mov	r22,r2
    c07c:	8080402c 	andhi	r2,r16,256
    c080:	10000426 	beq	r2,zero,c094 <__muldf3+0x64c>
    c084:	00bfc034 	movhi	r2,65280
    c088:	10bfffc4 	addi	r2,r2,-1
    c08c:	80a0703a 	and	r16,r16,r2
    c090:	48c10004 	addi	r3,r9,1024
    c094:	1881ffc8 	cmpgei	r2,r3,2047
    c098:	103f0f1e 	bne	r2,zero,bcd8 <__muldf3+0x290>
    c09c:	8004977a 	slli	r2,r16,29
    c0a0:	b02cd0fa 	srli	r22,r22,3
    c0a4:	8020927a 	slli	r16,r16,9
    c0a8:	18c1ffcc 	andi	r3,r3,2047
    c0ac:	15acb03a 	or	r22,r2,r22
    c0b0:	8020d33a 	srli	r16,r16,12
    c0b4:	003ebf06 	br	bbb4 <__muldf3+0x16c>
    c0b8:	00800434 	movhi	r2,16
    c0bc:	84000234 	orhi	r16,r16,8
    c0c0:	10bfffc4 	addi	r2,r2,-1
    c0c4:	80a0703a 	and	r16,r16,r2
    c0c8:	a00d883a 	mov	r6,r20
    c0cc:	003f1e06 	br	bd48 <__muldf3+0x300>
    c0d0:	3009883a 	mov	r4,r6
    c0d4:	da000115 	stw	r8,4(sp)
    c0d8:	d9800015 	stw	r6,0(sp)
    c0dc:	000cdcc0 	call	cdcc <__clzsi2>
    c0e0:	11400544 	addi	r5,r2,21
    c0e4:	29000748 	cmpgei	r4,r5,29
    c0e8:	10c00804 	addi	r3,r2,32
    c0ec:	d9800017 	ldw	r6,0(sp)
    c0f0:	da000117 	ldw	r8,4(sp)
    c0f4:	203eed26 	beq	r4,zero,bcac <__muldf3+0x264>
    c0f8:	147ffe04 	addi	r17,r2,-8
    c0fc:	3462983a 	sll	r17,r6,r17
    c100:	0025883a 	mov	r18,zero
    c104:	003ef006 	br	bcc8 <__muldf3+0x280>
    c108:	000cdcc0 	call	cdcc <__clzsi2>
    c10c:	11400544 	addi	r5,r2,21
    c110:	29000748 	cmpgei	r4,r5,29
    c114:	10c00804 	addi	r3,r2,32
    c118:	d9800017 	ldw	r6,0(sp)
    c11c:	d9c00117 	ldw	r7,4(sp)
    c120:	203ec426 	beq	r4,zero,bc34 <__muldf3+0x1ec>
    c124:	143ffe04 	addi	r16,r2,-8
    c128:	9420983a 	sll	r16,r18,r16
    c12c:	002d883a 	mov	r22,zero
    c130:	003ec706 	br	bc50 <__muldf3+0x208>
    c134:	00800044 	movi	r2,1
    c138:	10c5c83a 	sub	r2,r2,r3
    c13c:	11000e48 	cmpgei	r4,r2,57
    c140:	203e991e 	bne	r4,zero,bba8 <__muldf3+0x160>
    c144:	11000808 	cmpgei	r4,r2,32
    c148:	2000191e 	bne	r4,zero,c1b0 <__muldf3+0x768>
    c14c:	4a410784 	addi	r9,r9,1054
    c150:	8246983a 	sll	r3,r16,r9
    c154:	b088d83a 	srl	r4,r22,r2
    c158:	b26c983a 	sll	r22,r22,r9
    c15c:	80a0d83a 	srl	r16,r16,r2
    c160:	1904b03a 	or	r2,r3,r4
    c164:	b02cc03a 	cmpne	r22,r22,zero
    c168:	1584b03a 	or	r2,r2,r22
    c16c:	10c001cc 	andi	r3,r2,7
    c170:	18000726 	beq	r3,zero,c190 <__muldf3+0x748>
    c174:	10c003cc 	andi	r3,r2,15
    c178:	18c00120 	cmpeqi	r3,r3,4
    c17c:	1800041e 	bne	r3,zero,c190 <__muldf3+0x748>
    c180:	10c00104 	addi	r3,r2,4
    c184:	1885803a 	cmpltu	r2,r3,r2
    c188:	80a1883a 	add	r16,r16,r2
    c18c:	1805883a 	mov	r2,r3
    c190:	80c0202c 	andhi	r3,r16,128
    c194:	18001b26 	beq	r3,zero,c204 <__muldf3+0x7bc>
    c198:	00c00044 	movi	r3,1
    c19c:	0021883a 	mov	r16,zero
    c1a0:	002d883a 	mov	r22,zero
    c1a4:	003e8306 	br	bbb4 <__muldf3+0x16c>
    c1a8:	4013883a 	mov	r9,r8
    c1ac:	003fa806 	br	c050 <__muldf3+0x608>
    c1b0:	013ff844 	movi	r4,-31
    c1b4:	20c7c83a 	sub	r3,r4,r3
    c1b8:	10800820 	cmpeqi	r2,r2,32
    c1bc:	80c6d83a 	srl	r3,r16,r3
    c1c0:	1000031e 	bne	r2,zero,c1d0 <__muldf3+0x788>
    c1c4:	4a410f84 	addi	r9,r9,1086
    c1c8:	8260983a 	sll	r16,r16,r9
    c1cc:	b42cb03a 	or	r22,r22,r16
    c1d0:	b02cc03a 	cmpne	r22,r22,zero
    c1d4:	b0c4b03a 	or	r2,r22,r3
    c1d8:	158001cc 	andi	r22,r2,7
    c1dc:	b000051e 	bne	r22,zero,c1f4 <__muldf3+0x7ac>
    c1e0:	0021883a 	mov	r16,zero
    c1e4:	1004d0fa 	srli	r2,r2,3
    c1e8:	0007883a 	mov	r3,zero
    c1ec:	15acb03a 	or	r22,r2,r22
    c1f0:	003e7006 	br	bbb4 <__muldf3+0x16c>
    c1f4:	10c003cc 	andi	r3,r2,15
    c1f8:	18c00118 	cmpnei	r3,r3,4
    c1fc:	0021883a 	mov	r16,zero
    c200:	183fdf1e 	bne	r3,zero,c180 <__muldf3+0x738>
    c204:	8006927a 	slli	r3,r16,9
    c208:	802c977a 	slli	r22,r16,29
    c20c:	1820d33a 	srli	r16,r3,12
    c210:	003ff406 	br	c1e4 <__muldf3+0x79c>
    c214:	00800434 	movhi	r2,16
    c218:	84000234 	orhi	r16,r16,8
    c21c:	10bfffc4 	addi	r2,r2,-1
    c220:	80a0703a 	and	r16,r16,r2
    c224:	003ec806 	br	bd48 <__muldf3+0x300>

0000c228 <__subdf3>:
    c228:	00800434 	movhi	r2,16
    c22c:	3812d53a 	srli	r9,r7,20
    c230:	10bfffc4 	addi	r2,r2,-1
    c234:	defffb04 	addi	sp,sp,-20
    c238:	2890703a 	and	r8,r5,r2
    c23c:	3884703a 	and	r2,r7,r2
    c240:	2806d7fa 	srli	r3,r5,31
    c244:	dcc00315 	stw	r19,12(sp)
    c248:	dc400115 	stw	r17,4(sp)
    c24c:	280ad53a 	srli	r5,r5,20
    c250:	401090fa 	slli	r8,r8,3
    c254:	2026d77a 	srli	r19,r4,29
    c258:	100490fa 	slli	r2,r2,3
    c25c:	3022d77a 	srli	r17,r6,29
    c260:	4a81ffcc 	andi	r10,r9,2047
    c264:	dc800215 	stw	r18,8(sp)
    c268:	dc000015 	stw	r16,0(sp)
    c26c:	dfc00415 	stw	ra,16(sp)
    c270:	5241ffe0 	cmpeqi	r9,r10,2047
    c274:	1825883a 	mov	r18,r3
    c278:	2c01ffcc 	andi	r16,r5,2047
    c27c:	18c03fcc 	andi	r3,r3,255
    c280:	9a18b03a 	or	r12,r19,r8
    c284:	201a90fa 	slli	r13,r4,3
    c288:	380ed7fa 	srli	r7,r7,31
    c28c:	8896b03a 	or	r11,r17,r2
    c290:	301c90fa 	slli	r14,r6,3
    c294:	4800711e 	bne	r9,zero,c45c <__subdf3+0x234>
    c298:	39c0005c 	xori	r7,r7,1
    c29c:	8291c83a 	sub	r8,r16,r10
    c2a0:	19c05a26 	beq	r3,r7,c40c <__subdf3+0x1e4>
    c2a4:	0200720e 	bge	zero,r8,c470 <__subdf3+0x248>
    c2a8:	50008126 	beq	r10,zero,c4b0 <__subdf3+0x288>
    c2ac:	8081ffd8 	cmpnei	r2,r16,2047
    c2b0:	10011626 	beq	r2,zero,c70c <__subdf3+0x4e4>
    c2b4:	5ac02034 	orhi	r11,r11,128
    c2b8:	40800e48 	cmpgei	r2,r8,57
    c2bc:	1000fe1e 	bne	r2,zero,c6b8 <__subdf3+0x490>
    c2c0:	40800808 	cmpgei	r2,r8,32
    c2c4:	10015e1e 	bne	r2,zero,c840 <__subdf3+0x618>
    c2c8:	00800804 	movi	r2,32
    c2cc:	1205c83a 	sub	r2,r2,r8
    c2d0:	58a2983a 	sll	r17,r11,r2
    c2d4:	7206d83a 	srl	r3,r14,r8
    c2d8:	709c983a 	sll	r14,r14,r2
    c2dc:	5a04d83a 	srl	r2,r11,r8
    c2e0:	88e2b03a 	or	r17,r17,r3
    c2e4:	701cc03a 	cmpne	r14,r14,zero
    c2e8:	8ba2b03a 	or	r17,r17,r14
    c2ec:	6099c83a 	sub	r12,r12,r2
    c2f0:	6c63c83a 	sub	r17,r13,r17
    c2f4:	6c49803a 	cmpltu	r4,r13,r17
    c2f8:	6109c83a 	sub	r4,r12,r4
    c2fc:	2080202c 	andhi	r2,r4,128
    c300:	10009f26 	beq	r2,zero,c580 <__subdf3+0x358>
    c304:	04c02034 	movhi	r19,128
    c308:	9cffffc4 	addi	r19,r19,-1
    c30c:	24e6703a 	and	r19,r4,r19
    c310:	9800e026 	beq	r19,zero,c694 <__subdf3+0x46c>
    c314:	9809883a 	mov	r4,r19
    c318:	000cdcc0 	call	cdcc <__clzsi2>
    c31c:	123ffe04 	addi	r8,r2,-8
    c320:	01000804 	movi	r4,32
    c324:	2209c83a 	sub	r4,r4,r8
    c328:	8906d83a 	srl	r3,r17,r4
    c32c:	9a08983a 	sll	r4,r19,r8
    c330:	8a22983a 	sll	r17,r17,r8
    c334:	1908b03a 	or	r4,r3,r4
    c338:	4400cf16 	blt	r8,r16,c678 <__subdf3+0x450>
    c33c:	4411c83a 	sub	r8,r8,r16
    c340:	40800044 	addi	r2,r8,1
    c344:	10c00808 	cmpgei	r3,r2,32
    c348:	1801251e 	bne	r3,zero,c7e0 <__subdf3+0x5b8>
    c34c:	00c00804 	movi	r3,32
    c350:	1887c83a 	sub	r3,r3,r2
    c354:	888ad83a 	srl	r5,r17,r2
    c358:	88e2983a 	sll	r17,r17,r3
    c35c:	20c6983a 	sll	r3,r4,r3
    c360:	2088d83a 	srl	r4,r4,r2
    c364:	8822c03a 	cmpne	r17,r17,zero
    c368:	1946b03a 	or	r3,r3,r5
    c36c:	1c62b03a 	or	r17,r3,r17
    c370:	0021883a 	mov	r16,zero
    c374:	888001cc 	andi	r2,r17,7
    c378:	10000726 	beq	r2,zero,c398 <__subdf3+0x170>
    c37c:	888003cc 	andi	r2,r17,15
    c380:	10800120 	cmpeqi	r2,r2,4
    c384:	1000041e 	bne	r2,zero,c398 <__subdf3+0x170>
    c388:	88c00104 	addi	r3,r17,4
    c38c:	1c63803a 	cmpltu	r17,r3,r17
    c390:	2449883a 	add	r4,r4,r17
    c394:	1823883a 	mov	r17,r3
    c398:	2080202c 	andhi	r2,r4,128
    c39c:	10007a26 	beq	r2,zero,c588 <__subdf3+0x360>
    c3a0:	82000044 	addi	r8,r16,1
    c3a4:	4081ffe0 	cmpeqi	r2,r8,2047
    c3a8:	4201ffcc 	andi	r8,r8,2047
    c3ac:	10008c1e 	bne	r2,zero,c5e0 <__subdf3+0x3b8>
    c3b0:	00bfe034 	movhi	r2,65408
    c3b4:	10bfffc4 	addi	r2,r2,-1
    c3b8:	2084703a 	and	r2,r4,r2
    c3bc:	1008927a 	slli	r4,r2,9
    c3c0:	8822d0fa 	srli	r17,r17,3
    c3c4:	100c977a 	slli	r6,r2,29
    c3c8:	2008d33a 	srli	r4,r4,12
    c3cc:	3444b03a 	or	r2,r6,r17
    c3d0:	4010953a 	slli	r8,r8,20
    c3d4:	00c00434 	movhi	r3,16
    c3d8:	94803fcc 	andi	r18,r18,255
    c3dc:	902497fa 	slli	r18,r18,31
    c3e0:	18ffffc4 	addi	r3,r3,-1
    c3e4:	20c6703a 	and	r3,r4,r3
    c3e8:	1a06b03a 	or	r3,r3,r8
    c3ec:	1c86b03a 	or	r3,r3,r18
    c3f0:	dfc00417 	ldw	ra,16(sp)
    c3f4:	dcc00317 	ldw	r19,12(sp)
    c3f8:	dc800217 	ldw	r18,8(sp)
    c3fc:	dc400117 	ldw	r17,4(sp)
    c400:	dc000017 	ldw	r16,0(sp)
    c404:	dec00504 	addi	sp,sp,20
    c408:	f800283a 	ret
    c40c:	0200320e 	bge	zero,r8,c4d8 <__subdf3+0x2b0>
    c410:	50004c26 	beq	r10,zero,c544 <__subdf3+0x31c>
    c414:	8081ffd8 	cmpnei	r2,r16,2047
    c418:	1000bc26 	beq	r2,zero,c70c <__subdf3+0x4e4>
    c41c:	5ac02034 	orhi	r11,r11,128
    c420:	40800e48 	cmpgei	r2,r8,57
    c424:	1000641e 	bne	r2,zero,c5b8 <__subdf3+0x390>
    c428:	40800808 	cmpgei	r2,r8,32
    c42c:	10011726 	beq	r2,zero,c88c <__subdf3+0x664>
    c430:	447ff804 	addi	r17,r8,-32
    c434:	40800820 	cmpeqi	r2,r8,32
    c438:	5c46d83a 	srl	r3,r11,r17
    c43c:	1000041e 	bne	r2,zero,c450 <__subdf3+0x228>
    c440:	00801004 	movi	r2,64
    c444:	1205c83a 	sub	r2,r2,r8
    c448:	5884983a 	sll	r2,r11,r2
    c44c:	709cb03a 	or	r14,r14,r2
    c450:	7022c03a 	cmpne	r17,r14,zero
    c454:	88e2b03a 	or	r17,r17,r3
    c458:	00005906 	br	c5c0 <__subdf3+0x398>
    c45c:	5b8ab03a 	or	r5,r11,r14
    c460:	823e0044 	addi	r8,r16,-2047
    c464:	28001a1e 	bne	r5,zero,c4d0 <__subdf3+0x2a8>
    c468:	39c0005c 	xori	r7,r7,1
    c46c:	19c01a26 	beq	r3,r7,c4d8 <__subdf3+0x2b0>
    c470:	4000291e 	bne	r8,zero,c518 <__subdf3+0x2f0>
    c474:	80800044 	addi	r2,r16,1
    c478:	1081ff8c 	andi	r2,r2,2046
    c47c:	1000911e 	bne	r2,zero,c6c4 <__subdf3+0x49c>
    c480:	6346b03a 	or	r3,r12,r13
    c484:	5b84b03a 	or	r2,r11,r14
    c488:	8001551e 	bne	r16,zero,c9e0 <__subdf3+0x7b8>
    c48c:	18011b26 	beq	r3,zero,c8fc <__subdf3+0x6d4>
    c490:	1001641e 	bne	r2,zero,ca24 <__subdf3+0x7fc>
    c494:	00880034 	movhi	r2,8192
    c498:	6022977a 	slli	r17,r12,29
    c49c:	10bfffc4 	addi	r2,r2,-1
    c4a0:	2088703a 	and	r4,r4,r2
    c4a4:	2444b03a 	or	r2,r4,r17
    c4a8:	6026d0fa 	srli	r19,r12,3
    c4ac:	00003d06 	br	c5a4 <__subdf3+0x37c>
    c4b0:	5b84b03a 	or	r2,r11,r14
    c4b4:	10008e26 	beq	r2,zero,c6f0 <__subdf3+0x4c8>
    c4b8:	40bfffc4 	addi	r2,r8,-1
    c4bc:	10011f26 	beq	r2,zero,c93c <__subdf3+0x714>
    c4c0:	4201ffd8 	cmpnei	r8,r8,2047
    c4c4:	40012d26 	beq	r8,zero,c97c <__subdf3+0x754>
    c4c8:	1011883a 	mov	r8,r2
    c4cc:	003f7a06 	br	c2b8 <__subdf3+0x90>
    c4d0:	39c03fcc 	andi	r7,r7,255
    c4d4:	19ffe61e 	bne	r3,r7,c470 <__subdf3+0x248>
    c4d8:	4000931e 	bne	r8,zero,c728 <__subdf3+0x500>
    c4dc:	80c00044 	addi	r3,r16,1
    c4e0:	1881ff8c 	andi	r2,r3,2046
    c4e4:	10012c1e 	bne	r2,zero,c998 <__subdf3+0x770>
    c4e8:	6344b03a 	or	r2,r12,r13
    c4ec:	8000f91e 	bne	r16,zero,c8d4 <__subdf3+0x6ac>
    c4f0:	10017326 	beq	r2,zero,cac0 <__subdf3+0x898>
    c4f4:	5b84b03a 	or	r2,r11,r14
    c4f8:	1001781e 	bne	r2,zero,cadc <__subdf3+0x8b4>
    c4fc:	6004977a 	slli	r2,r12,29
    c500:	00c80034 	movhi	r3,8192
    c504:	18ffffc4 	addi	r3,r3,-1
    c508:	20c6703a 	and	r3,r4,r3
    c50c:	10c4b03a 	or	r2,r2,r3
    c510:	6026d0fa 	srli	r19,r12,3
    c514:	00002306 	br	c5a4 <__subdf3+0x37c>
    c518:	5411c83a 	sub	r8,r10,r16
    c51c:	3825883a 	mov	r18,r7
    c520:	8000991e 	bne	r16,zero,c788 <__subdf3+0x560>
    c524:	6344b03a 	or	r2,r12,r13
    c528:	1000e326 	beq	r2,zero,c8b8 <__subdf3+0x690>
    c52c:	40bfffc4 	addi	r2,r8,-1
    c530:	10015d26 	beq	r2,zero,caa8 <__subdf3+0x880>
    c534:	4201ffd8 	cmpnei	r8,r8,2047
    c538:	4000f926 	beq	r8,zero,c920 <__subdf3+0x6f8>
    c53c:	1011883a 	mov	r8,r2
    c540:	00009406 	br	c794 <__subdf3+0x56c>
    c544:	5b84b03a 	or	r2,r11,r14
    c548:	10010226 	beq	r2,zero,c954 <__subdf3+0x72c>
    c54c:	40bfffc4 	addi	r2,r8,-1
    c550:	10000426 	beq	r2,zero,c564 <__subdf3+0x33c>
    c554:	4201ffd8 	cmpnei	r8,r8,2047
    c558:	40014126 	beq	r8,zero,ca60 <__subdf3+0x838>
    c55c:	1011883a 	mov	r8,r2
    c560:	003faf06 	br	c420 <__subdf3+0x1f8>
    c564:	6ba3883a 	add	r17,r13,r14
    c568:	62c9883a 	add	r4,r12,r11
    c56c:	8b5b803a 	cmpltu	r13,r17,r13
    c570:	2349883a 	add	r4,r4,r13
    c574:	2080202c 	andhi	r2,r4,128
    c578:	1000a61e 	bne	r2,zero,c814 <__subdf3+0x5ec>
    c57c:	04000044 	movi	r16,1
    c580:	888001cc 	andi	r2,r17,7
    c584:	103f7d1e 	bne	r2,zero,c37c <__subdf3+0x154>
    c588:	8822d0fa 	srli	r17,r17,3
    c58c:	2004977a 	slli	r2,r4,29
    c590:	2026d0fa 	srli	r19,r4,3
    c594:	8011883a 	mov	r8,r16
    c598:	8884b03a 	or	r2,r17,r2
    c59c:	40c1ffe0 	cmpeqi	r3,r8,2047
    c5a0:	18002d1e 	bne	r3,zero,c658 <__subdf3+0x430>
    c5a4:	01000434 	movhi	r4,16
    c5a8:	213fffc4 	addi	r4,r4,-1
    c5ac:	9908703a 	and	r4,r19,r4
    c5b0:	4201ffcc 	andi	r8,r8,2047
    c5b4:	003f8606 	br	c3d0 <__subdf3+0x1a8>
    c5b8:	5ba2b03a 	or	r17,r11,r14
    c5bc:	8822c03a 	cmpne	r17,r17,zero
    c5c0:	8b63883a 	add	r17,r17,r13
    c5c4:	8b49803a 	cmpltu	r4,r17,r13
    c5c8:	2309883a 	add	r4,r4,r12
    c5cc:	2080202c 	andhi	r2,r4,128
    c5d0:	103feb26 	beq	r2,zero,c580 <__subdf3+0x358>
    c5d4:	84000044 	addi	r16,r16,1
    c5d8:	8081ffe0 	cmpeqi	r2,r16,2047
    c5dc:	10008e26 	beq	r2,zero,c818 <__subdf3+0x5f0>
    c5e0:	0201ffc4 	movi	r8,2047
    c5e4:	0009883a 	mov	r4,zero
    c5e8:	0005883a 	mov	r2,zero
    c5ec:	003f7806 	br	c3d0 <__subdf3+0x1a8>
    c5f0:	6010977a 	slli	r8,r12,29
    c5f4:	6026d0fa 	srli	r19,r12,3
    c5f8:	1000bb26 	beq	r2,zero,c8e8 <__subdf3+0x6c0>
    c5fc:	01480034 	movhi	r5,8192
    c600:	297fffc4 	addi	r5,r5,-1
    c604:	2146703a 	and	r3,r4,r5
    c608:	9880022c 	andhi	r2,r19,8
    c60c:	1a06b03a 	or	r3,r3,r8
    c610:	10000826 	beq	r2,zero,c634 <__subdf3+0x40c>
    c614:	5808d0fa 	srli	r4,r11,3
    c618:	2080022c 	andhi	r2,r4,8
    c61c:	1000051e 	bne	r2,zero,c634 <__subdf3+0x40c>
    c620:	5804977a 	slli	r2,r11,29
    c624:	3146703a 	and	r3,r6,r5
    c628:	3825883a 	mov	r18,r7
    c62c:	1886b03a 	or	r3,r3,r2
    c630:	2027883a 	mov	r19,r4
    c634:	1804d77a 	srli	r2,r3,29
    c638:	980890fa 	slli	r4,r19,3
    c63c:	01480034 	movhi	r5,8192
    c640:	297fffc4 	addi	r5,r5,-1
    c644:	1108b03a 	or	r4,r2,r4
    c648:	2004977a 	slli	r2,r4,29
    c64c:	2026d0fa 	srli	r19,r4,3
    c650:	1946703a 	and	r3,r3,r5
    c654:	10c4b03a 	or	r2,r2,r3
    c658:	14c6b03a 	or	r3,r2,r19
    c65c:	18014926 	beq	r3,zero,cb84 <__subdf3+0x95c>
    c660:	00c00434 	movhi	r3,16
    c664:	99000234 	orhi	r4,r19,8
    c668:	18ffffc4 	addi	r3,r3,-1
    c66c:	20c8703a 	and	r4,r4,r3
    c670:	0201ffc4 	movi	r8,2047
    c674:	003f5606 	br	c3d0 <__subdf3+0x1a8>
    c678:	00bfe034 	movhi	r2,65408
    c67c:	10bfffc4 	addi	r2,r2,-1
    c680:	2088703a 	and	r4,r4,r2
    c684:	888001cc 	andi	r2,r17,7
    c688:	8221c83a 	sub	r16,r16,r8
    c68c:	103f3b1e 	bne	r2,zero,c37c <__subdf3+0x154>
    c690:	003fbd06 	br	c588 <__subdf3+0x360>
    c694:	8809883a 	mov	r4,r17
    c698:	000cdcc0 	call	cdcc <__clzsi2>
    c69c:	12000604 	addi	r8,r2,24
    c6a0:	40c00808 	cmpgei	r3,r8,32
    c6a4:	183f1e26 	beq	r3,zero,c320 <__subdf3+0xf8>
    c6a8:	113ffe04 	addi	r4,r2,-8
    c6ac:	8908983a 	sll	r4,r17,r4
    c6b0:	0023883a 	mov	r17,zero
    c6b4:	003f2006 	br	c338 <__subdf3+0x110>
    c6b8:	5ba2b03a 	or	r17,r11,r14
    c6bc:	8822c03a 	cmpne	r17,r17,zero
    c6c0:	003f0b06 	br	c2f0 <__subdf3+0xc8>
    c6c4:	6ba3c83a 	sub	r17,r13,r14
    c6c8:	62e7c83a 	sub	r19,r12,r11
    c6cc:	6c49803a 	cmpltu	r4,r13,r17
    c6d0:	9927c83a 	sub	r19,r19,r4
    c6d4:	9880202c 	andhi	r2,r19,128
    c6d8:	1000bb1e 	bne	r2,zero,c9c8 <__subdf3+0x7a0>
    c6dc:	8cc4b03a 	or	r2,r17,r19
    c6e0:	103f0b1e 	bne	r2,zero,c310 <__subdf3+0xe8>
    c6e4:	0027883a 	mov	r19,zero
    c6e8:	0025883a 	mov	r18,zero
    c6ec:	003fad06 	br	c5a4 <__subdf3+0x37c>
    c6f0:	00880034 	movhi	r2,8192
    c6f4:	6022977a 	slli	r17,r12,29
    c6f8:	10bfffc4 	addi	r2,r2,-1
    c6fc:	2088703a 	and	r4,r4,r2
    c700:	2444b03a 	or	r2,r4,r17
    c704:	6026d0fa 	srli	r19,r12,3
    c708:	003fa406 	br	c59c <__subdf3+0x374>
    c70c:	00880034 	movhi	r2,8192
    c710:	6022977a 	slli	r17,r12,29
    c714:	10bfffc4 	addi	r2,r2,-1
    c718:	2088703a 	and	r4,r4,r2
    c71c:	2444b03a 	or	r2,r4,r17
    c720:	6026d0fa 	srli	r19,r12,3
    c724:	003fcc06 	br	c658 <__subdf3+0x430>
    c728:	5411c83a 	sub	r8,r10,r16
    c72c:	80004f26 	beq	r16,zero,c86c <__subdf3+0x644>
    c730:	5081ffd8 	cmpnei	r2,r10,2047
    c734:	1000b426 	beq	r2,zero,ca08 <__subdf3+0x7e0>
    c738:	63002034 	orhi	r12,r12,128
    c73c:	40800e48 	cmpgei	r2,r8,57
    c740:	1000c41e 	bne	r2,zero,ca54 <__subdf3+0x82c>
    c744:	40800808 	cmpgei	r2,r8,32
    c748:	1000f91e 	bne	r2,zero,cb30 <__subdf3+0x908>
    c74c:	00800804 	movi	r2,32
    c750:	1205c83a 	sub	r2,r2,r8
    c754:	60a2983a 	sll	r17,r12,r2
    c758:	6a06d83a 	srl	r3,r13,r8
    c75c:	6884983a 	sll	r2,r13,r2
    c760:	6210d83a 	srl	r8,r12,r8
    c764:	88e2b03a 	or	r17,r17,r3
    c768:	1004c03a 	cmpne	r2,r2,zero
    c76c:	88a2b03a 	or	r17,r17,r2
    c770:	5a17883a 	add	r11,r11,r8
    c774:	8ba3883a 	add	r17,r17,r14
    c778:	8b85803a 	cmpltu	r2,r17,r14
    c77c:	12c9883a 	add	r4,r2,r11
    c780:	5021883a 	mov	r16,r10
    c784:	003f9106 	br	c5cc <__subdf3+0x3a4>
    c788:	5081ffd8 	cmpnei	r2,r10,2047
    c78c:	10006426 	beq	r2,zero,c920 <__subdf3+0x6f8>
    c790:	63002034 	orhi	r12,r12,128
    c794:	40800e48 	cmpgei	r2,r8,57
    c798:	1000751e 	bne	r2,zero,c970 <__subdf3+0x748>
    c79c:	40800808 	cmpgei	r2,r8,32
    c7a0:	1000b61e 	bne	r2,zero,ca7c <__subdf3+0x854>
    c7a4:	00800804 	movi	r2,32
    c7a8:	1205c83a 	sub	r2,r2,r8
    c7ac:	60a2983a 	sll	r17,r12,r2
    c7b0:	6a06d83a 	srl	r3,r13,r8
    c7b4:	6884983a 	sll	r2,r13,r2
    c7b8:	6210d83a 	srl	r8,r12,r8
    c7bc:	88e2b03a 	or	r17,r17,r3
    c7c0:	1004c03a 	cmpne	r2,r2,zero
    c7c4:	88a2b03a 	or	r17,r17,r2
    c7c8:	5a17c83a 	sub	r11,r11,r8
    c7cc:	7463c83a 	sub	r17,r14,r17
    c7d0:	7445803a 	cmpltu	r2,r14,r17
    c7d4:	5889c83a 	sub	r4,r11,r2
    c7d8:	5021883a 	mov	r16,r10
    c7dc:	003ec706 	br	c2fc <__subdf3+0xd4>
    c7e0:	423ff844 	addi	r8,r8,-31
    c7e4:	10c00820 	cmpeqi	r3,r2,32
    c7e8:	2210d83a 	srl	r8,r4,r8
    c7ec:	1800041e 	bne	r3,zero,c800 <__subdf3+0x5d8>
    c7f0:	00c01004 	movi	r3,64
    c7f4:	1885c83a 	sub	r2,r3,r2
    c7f8:	2088983a 	sll	r4,r4,r2
    c7fc:	8922b03a 	or	r17,r17,r4
    c800:	8822c03a 	cmpne	r17,r17,zero
    c804:	8a22b03a 	or	r17,r17,r8
    c808:	0009883a 	mov	r4,zero
    c80c:	0021883a 	mov	r16,zero
    c810:	003f5b06 	br	c580 <__subdf3+0x358>
    c814:	04000084 	movi	r16,2
    c818:	00bfe034 	movhi	r2,65408
    c81c:	10bfffc4 	addi	r2,r2,-1
    c820:	2084703a 	and	r2,r4,r2
    c824:	8806d07a 	srli	r3,r17,1
    c828:	100a97fa 	slli	r5,r2,31
    c82c:	8c40004c 	andi	r17,r17,1
    c830:	1c62b03a 	or	r17,r3,r17
    c834:	1008d07a 	srli	r4,r2,1
    c838:	2c62b03a 	or	r17,r5,r17
    c83c:	003ecd06 	br	c374 <__subdf3+0x14c>
    c840:	447ff804 	addi	r17,r8,-32
    c844:	40800820 	cmpeqi	r2,r8,32
    c848:	5c46d83a 	srl	r3,r11,r17
    c84c:	1000041e 	bne	r2,zero,c860 <__subdf3+0x638>
    c850:	00801004 	movi	r2,64
    c854:	1205c83a 	sub	r2,r2,r8
    c858:	5884983a 	sll	r2,r11,r2
    c85c:	709cb03a 	or	r14,r14,r2
    c860:	7022c03a 	cmpne	r17,r14,zero
    c864:	88e2b03a 	or	r17,r17,r3
    c868:	003ea106 	br	c2f0 <__subdf3+0xc8>
    c86c:	6344b03a 	or	r2,r12,r13
    c870:	1000a526 	beq	r2,zero,cb08 <__subdf3+0x8e0>
    c874:	40bfffc4 	addi	r2,r8,-1
    c878:	1000bd26 	beq	r2,zero,cb70 <__subdf3+0x948>
    c87c:	4201ffd8 	cmpnei	r8,r8,2047
    c880:	40006126 	beq	r8,zero,ca08 <__subdf3+0x7e0>
    c884:	1011883a 	mov	r8,r2
    c888:	003fac06 	br	c73c <__subdf3+0x514>
    c88c:	00800804 	movi	r2,32
    c890:	1205c83a 	sub	r2,r2,r8
    c894:	58a2983a 	sll	r17,r11,r2
    c898:	7206d83a 	srl	r3,r14,r8
    c89c:	709c983a 	sll	r14,r14,r2
    c8a0:	5a04d83a 	srl	r2,r11,r8
    c8a4:	88e2b03a 	or	r17,r17,r3
    c8a8:	701cc03a 	cmpne	r14,r14,zero
    c8ac:	8ba2b03a 	or	r17,r17,r14
    c8b0:	6099883a 	add	r12,r12,r2
    c8b4:	003f4206 	br	c5c0 <__subdf3+0x398>
    c8b8:	5808977a 	slli	r4,r11,29
    c8bc:	00c80034 	movhi	r3,8192
    c8c0:	18ffffc4 	addi	r3,r3,-1
    c8c4:	30cc703a 	and	r6,r6,r3
    c8c8:	2184b03a 	or	r2,r4,r6
    c8cc:	5826d0fa 	srli	r19,r11,3
    c8d0:	003f3206 	br	c59c <__subdf3+0x374>
    c8d4:	10004c26 	beq	r2,zero,ca08 <__subdf3+0x7e0>
    c8d8:	5b9cb03a 	or	r14,r11,r14
    c8dc:	6010977a 	slli	r8,r12,29
    c8e0:	6026d0fa 	srli	r19,r12,3
    c8e4:	703f451e 	bne	r14,zero,c5fc <__subdf3+0x3d4>
    c8e8:	00880034 	movhi	r2,8192
    c8ec:	10bfffc4 	addi	r2,r2,-1
    c8f0:	2084703a 	and	r2,r4,r2
    c8f4:	1204b03a 	or	r2,r2,r8
    c8f8:	003f5706 	br	c658 <__subdf3+0x430>
    c8fc:	103f7926 	beq	r2,zero,c6e4 <__subdf3+0x4bc>
    c900:	5804977a 	slli	r2,r11,29
    c904:	00c80034 	movhi	r3,8192
    c908:	18ffffc4 	addi	r3,r3,-1
    c90c:	30c6703a 	and	r3,r6,r3
    c910:	10c4b03a 	or	r2,r2,r3
    c914:	5826d0fa 	srli	r19,r11,3
    c918:	3825883a 	mov	r18,r7
    c91c:	003f2106 	br	c5a4 <__subdf3+0x37c>
    c920:	5804977a 	slli	r2,r11,29
    c924:	00c80034 	movhi	r3,8192
    c928:	18ffffc4 	addi	r3,r3,-1
    c92c:	30c6703a 	and	r3,r6,r3
    c930:	10c4b03a 	or	r2,r2,r3
    c934:	5826d0fa 	srli	r19,r11,3
    c938:	003f4706 	br	c658 <__subdf3+0x430>
    c93c:	6ba3c83a 	sub	r17,r13,r14
    c940:	62c9c83a 	sub	r4,r12,r11
    c944:	6c5b803a 	cmpltu	r13,r13,r17
    c948:	2349c83a 	sub	r4,r4,r13
    c94c:	04000044 	movi	r16,1
    c950:	003e6a06 	br	c2fc <__subdf3+0xd4>
    c954:	6004977a 	slli	r2,r12,29
    c958:	00c80034 	movhi	r3,8192
    c95c:	18ffffc4 	addi	r3,r3,-1
    c960:	20c8703a 	and	r4,r4,r3
    c964:	1104b03a 	or	r2,r2,r4
    c968:	6026d0fa 	srli	r19,r12,3
    c96c:	003f0b06 	br	c59c <__subdf3+0x374>
    c970:	6366b03a 	or	r19,r12,r13
    c974:	9822c03a 	cmpne	r17,r19,zero
    c978:	003f9406 	br	c7cc <__subdf3+0x5a4>
    c97c:	6004977a 	slli	r2,r12,29
    c980:	00c80034 	movhi	r3,8192
    c984:	18ffffc4 	addi	r3,r3,-1
    c988:	20c8703a 	and	r4,r4,r3
    c98c:	1104b03a 	or	r2,r2,r4
    c990:	6026d0fa 	srli	r19,r12,3
    c994:	003f3006 	br	c658 <__subdf3+0x430>
    c998:	1881ffe0 	cmpeqi	r2,r3,2047
    c99c:	103f101e 	bne	r2,zero,c5e0 <__subdf3+0x3b8>
    c9a0:	6b9d883a 	add	r14,r13,r14
    c9a4:	62c9883a 	add	r4,r12,r11
    c9a8:	7345803a 	cmpltu	r2,r14,r13
    c9ac:	2085883a 	add	r2,r4,r2
    c9b0:	102297fa 	slli	r17,r2,31
    c9b4:	701cd07a 	srli	r14,r14,1
    c9b8:	1008d07a 	srli	r4,r2,1
    c9bc:	1821883a 	mov	r16,r3
    c9c0:	8ba2b03a 	or	r17,r17,r14
    c9c4:	003eee06 	br	c580 <__subdf3+0x358>
    c9c8:	7363c83a 	sub	r17,r14,r13
    c9cc:	5b09c83a 	sub	r4,r11,r12
    c9d0:	7467803a 	cmpltu	r19,r14,r17
    c9d4:	24e7c83a 	sub	r19,r4,r19
    c9d8:	3825883a 	mov	r18,r7
    c9dc:	003e4c06 	br	c310 <__subdf3+0xe8>
    c9e0:	183f031e 	bne	r3,zero,c5f0 <__subdf3+0x3c8>
    c9e4:	10005d26 	beq	r2,zero,cb5c <__subdf3+0x934>
    c9e8:	00880034 	movhi	r2,8192
    c9ec:	5806977a 	slli	r3,r11,29
    c9f0:	10bfffc4 	addi	r2,r2,-1
    c9f4:	3084703a 	and	r2,r6,r2
    c9f8:	10c4b03a 	or	r2,r2,r3
    c9fc:	5826d0fa 	srli	r19,r11,3
    ca00:	3825883a 	mov	r18,r7
    ca04:	003f1406 	br	c658 <__subdf3+0x430>
    ca08:	00880034 	movhi	r2,8192
    ca0c:	5806977a 	slli	r3,r11,29
    ca10:	10bfffc4 	addi	r2,r2,-1
    ca14:	3084703a 	and	r2,r6,r2
    ca18:	10c4b03a 	or	r2,r2,r3
    ca1c:	5826d0fa 	srli	r19,r11,3
    ca20:	003f0d06 	br	c658 <__subdf3+0x430>
    ca24:	6ba3c83a 	sub	r17,r13,r14
    ca28:	62c5c83a 	sub	r2,r12,r11
    ca2c:	6c49803a 	cmpltu	r4,r13,r17
    ca30:	1109c83a 	sub	r4,r2,r4
    ca34:	2080202c 	andhi	r2,r4,128
    ca38:	10003a26 	beq	r2,zero,cb24 <__subdf3+0x8fc>
    ca3c:	7363c83a 	sub	r17,r14,r13
    ca40:	5b09c83a 	sub	r4,r11,r12
    ca44:	745d803a 	cmpltu	r14,r14,r17
    ca48:	2389c83a 	sub	r4,r4,r14
    ca4c:	3825883a 	mov	r18,r7
    ca50:	003e4806 	br	c374 <__subdf3+0x14c>
    ca54:	6362b03a 	or	r17,r12,r13
    ca58:	8822c03a 	cmpne	r17,r17,zero
    ca5c:	003f4506 	br	c774 <__subdf3+0x54c>
    ca60:	6004977a 	slli	r2,r12,29
    ca64:	00c80034 	movhi	r3,8192
    ca68:	18ffffc4 	addi	r3,r3,-1
    ca6c:	20c6703a 	and	r3,r4,r3
    ca70:	10c4b03a 	or	r2,r2,r3
    ca74:	6026d0fa 	srli	r19,r12,3
    ca78:	003ef706 	br	c658 <__subdf3+0x430>
    ca7c:	40bff804 	addi	r2,r8,-32
    ca80:	40c00820 	cmpeqi	r3,r8,32
    ca84:	6084d83a 	srl	r2,r12,r2
    ca88:	1800041e 	bne	r3,zero,ca9c <__subdf3+0x874>
    ca8c:	04c01004 	movi	r19,64
    ca90:	9a11c83a 	sub	r8,r19,r8
    ca94:	6226983a 	sll	r19,r12,r8
    ca98:	6cdab03a 	or	r13,r13,r19
    ca9c:	6822c03a 	cmpne	r17,r13,zero
    caa0:	88a2b03a 	or	r17,r17,r2
    caa4:	003f4906 	br	c7cc <__subdf3+0x5a4>
    caa8:	7363c83a 	sub	r17,r14,r13
    caac:	5b09c83a 	sub	r4,r11,r12
    cab0:	745d803a 	cmpltu	r14,r14,r17
    cab4:	2389c83a 	sub	r4,r4,r14
    cab8:	04000044 	movi	r16,1
    cabc:	003e0f06 	br	c2fc <__subdf3+0xd4>
    cac0:	00880034 	movhi	r2,8192
    cac4:	5806977a 	slli	r3,r11,29
    cac8:	10bfffc4 	addi	r2,r2,-1
    cacc:	3084703a 	and	r2,r6,r2
    cad0:	10c4b03a 	or	r2,r2,r3
    cad4:	5826d0fa 	srli	r19,r11,3
    cad8:	003eb206 	br	c5a4 <__subdf3+0x37c>
    cadc:	6ba3883a 	add	r17,r13,r14
    cae0:	62c9883a 	add	r4,r12,r11
    cae4:	8b5b803a 	cmpltu	r13,r17,r13
    cae8:	2349883a 	add	r4,r4,r13
    caec:	2080202c 	andhi	r2,r4,128
    caf0:	103ea326 	beq	r2,zero,c580 <__subdf3+0x358>
    caf4:	00bfe034 	movhi	r2,65408
    caf8:	10bfffc4 	addi	r2,r2,-1
    cafc:	2088703a 	and	r4,r4,r2
    cb00:	04000044 	movi	r16,1
    cb04:	003e9e06 	br	c580 <__subdf3+0x358>
    cb08:	00880034 	movhi	r2,8192
    cb0c:	5806977a 	slli	r3,r11,29
    cb10:	10bfffc4 	addi	r2,r2,-1
    cb14:	3084703a 	and	r2,r6,r2
    cb18:	10c4b03a 	or	r2,r2,r3
    cb1c:	5826d0fa 	srli	r19,r11,3
    cb20:	003e9e06 	br	c59c <__subdf3+0x374>
    cb24:	8904b03a 	or	r2,r17,r4
    cb28:	103eee26 	beq	r2,zero,c6e4 <__subdf3+0x4bc>
    cb2c:	003e9406 	br	c580 <__subdf3+0x358>
    cb30:	40bff804 	addi	r2,r8,-32
    cb34:	40c00820 	cmpeqi	r3,r8,32
    cb38:	6084d83a 	srl	r2,r12,r2
    cb3c:	1800041e 	bne	r3,zero,cb50 <__subdf3+0x928>
    cb40:	04c01004 	movi	r19,64
    cb44:	9a11c83a 	sub	r8,r19,r8
    cb48:	6226983a 	sll	r19,r12,r8
    cb4c:	6cdab03a 	or	r13,r13,r19
    cb50:	6822c03a 	cmpne	r17,r13,zero
    cb54:	88a2b03a 	or	r17,r17,r2
    cb58:	003f0606 	br	c774 <__subdf3+0x54c>
    cb5c:	04c00434 	movhi	r19,16
    cb60:	9cffffc4 	addi	r19,r19,-1
    cb64:	0025883a 	mov	r18,zero
    cb68:	00bfffc4 	movi	r2,-1
    cb6c:	003ebc06 	br	c660 <__subdf3+0x438>
    cb70:	6ba3883a 	add	r17,r13,r14
    cb74:	62c9883a 	add	r4,r12,r11
    cb78:	8b9d803a 	cmpltu	r14,r17,r14
    cb7c:	2389883a 	add	r4,r4,r14
    cb80:	003e7c06 	br	c574 <__subdf3+0x34c>
    cb84:	0005883a 	mov	r2,zero
    cb88:	0201ffc4 	movi	r8,2047
    cb8c:	0009883a 	mov	r4,zero
    cb90:	003e0f06 	br	c3d0 <__subdf3+0x1a8>

0000cb94 <__unorddf2>:
    cb94:	2806d53a 	srli	r3,r5,20
    cb98:	3810d53a 	srli	r8,r7,20
    cb9c:	00800434 	movhi	r2,16
    cba0:	18c1ffcc 	andi	r3,r3,2047
    cba4:	10bfffc4 	addi	r2,r2,-1
    cba8:	18c1ffd8 	cmpnei	r3,r3,2047
    cbac:	288a703a 	and	r5,r5,r2
    cbb0:	388e703a 	and	r7,r7,r2
    cbb4:	4201ffcc 	andi	r8,r8,2047
    cbb8:	18000426 	beq	r3,zero,cbcc <__unorddf2+0x38>
    cbbc:	4201ffd8 	cmpnei	r8,r8,2047
    cbc0:	40000626 	beq	r8,zero,cbdc <__unorddf2+0x48>
    cbc4:	0005883a 	mov	r2,zero
    cbc8:	f800283a 	ret
    cbcc:	214ab03a 	or	r5,r4,r5
    cbd0:	283ffa26 	beq	r5,zero,cbbc <__unorddf2+0x28>
    cbd4:	00800044 	movi	r2,1
    cbd8:	f800283a 	ret
    cbdc:	398eb03a 	or	r7,r7,r6
    cbe0:	3804c03a 	cmpne	r2,r7,zero
    cbe4:	f800283a 	ret

0000cbe8 <__fixdfsi>:
    cbe8:	280cd53a 	srli	r6,r5,20
    cbec:	00c00434 	movhi	r3,16
    cbf0:	18ffffc4 	addi	r3,r3,-1
    cbf4:	3181ffcc 	andi	r6,r6,2047
    cbf8:	31c0ffd0 	cmplti	r7,r6,1023
    cbfc:	28c6703a 	and	r3,r5,r3
    cc00:	280ad7fa 	srli	r5,r5,31
    cc04:	3800061e 	bne	r7,zero,cc20 <__fixdfsi+0x38>
    cc08:	30810790 	cmplti	r2,r6,1054
    cc0c:	1000061e 	bne	r2,zero,cc28 <__fixdfsi+0x40>
    cc10:	00a00034 	movhi	r2,32768
    cc14:	10bfffc4 	addi	r2,r2,-1
    cc18:	2885883a 	add	r2,r5,r2
    cc1c:	f800283a 	ret
    cc20:	0005883a 	mov	r2,zero
    cc24:	f800283a 	ret
    cc28:	00810cc4 	movi	r2,1075
    cc2c:	118fc83a 	sub	r7,r2,r6
    cc30:	38800808 	cmpgei	r2,r7,32
    cc34:	18c00434 	orhi	r3,r3,16
    cc38:	1000071e 	bne	r2,zero,cc58 <__fixdfsi+0x70>
    cc3c:	30befb44 	addi	r2,r6,-1043
    cc40:	1886983a 	sll	r3,r3,r2
    cc44:	21c4d83a 	srl	r2,r4,r7
    cc48:	1884b03a 	or	r2,r3,r2
    cc4c:	283ff526 	beq	r5,zero,cc24 <__fixdfsi+0x3c>
    cc50:	0085c83a 	sub	r2,zero,r2
    cc54:	f800283a 	ret
    cc58:	008104c4 	movi	r2,1043
    cc5c:	1185c83a 	sub	r2,r2,r6
    cc60:	1884d83a 	srl	r2,r3,r2
    cc64:	003ff906 	br	cc4c <__fixdfsi+0x64>

0000cc68 <__floatsidf>:
    cc68:	defffd04 	addi	sp,sp,-12
    cc6c:	dfc00215 	stw	ra,8(sp)
    cc70:	dc400115 	stw	r17,4(sp)
    cc74:	dc000015 	stw	r16,0(sp)
    cc78:	20001326 	beq	r4,zero,ccc8 <__floatsidf+0x60>
    cc7c:	2021883a 	mov	r16,r4
    cc80:	2022d7fa 	srli	r17,r4,31
    cc84:	20002116 	blt	r4,zero,cd0c <__floatsidf+0xa4>
    cc88:	8009883a 	mov	r4,r16
    cc8c:	000cdcc0 	call	cdcc <__clzsi2>
    cc90:	01010784 	movi	r4,1054
    cc94:	2089c83a 	sub	r4,r4,r2
    cc98:	10c002c8 	cmpgei	r3,r2,11
    cc9c:	2101ffcc 	andi	r4,r4,2047
    cca0:	18001c1e 	bne	r3,zero,cd14 <__floatsidf+0xac>
    cca4:	018002c4 	movi	r6,11
    cca8:	308dc83a 	sub	r6,r6,r2
    ccac:	818ad83a 	srl	r5,r16,r6
    ccb0:	00c00434 	movhi	r3,16
    ccb4:	10800544 	addi	r2,r2,21
    ccb8:	18ffffc4 	addi	r3,r3,-1
    ccbc:	8084983a 	sll	r2,r16,r2
    ccc0:	28ca703a 	and	r5,r5,r3
    ccc4:	00000406 	br	ccd8 <__floatsidf+0x70>
    ccc8:	0023883a 	mov	r17,zero
    cccc:	0009883a 	mov	r4,zero
    ccd0:	000b883a 	mov	r5,zero
    ccd4:	0005883a 	mov	r2,zero
    ccd8:	2008953a 	slli	r4,r4,20
    ccdc:	8c403fcc 	andi	r17,r17,255
    cce0:	01800434 	movhi	r6,16
    cce4:	31bfffc4 	addi	r6,r6,-1
    cce8:	880697fa 	slli	r3,r17,31
    ccec:	298a703a 	and	r5,r5,r6
    ccf0:	290ab03a 	or	r5,r5,r4
    ccf4:	28c6b03a 	or	r3,r5,r3
    ccf8:	dfc00217 	ldw	ra,8(sp)
    ccfc:	dc400117 	ldw	r17,4(sp)
    cd00:	dc000017 	ldw	r16,0(sp)
    cd04:	dec00304 	addi	sp,sp,12
    cd08:	f800283a 	ret
    cd0c:	0121c83a 	sub	r16,zero,r4
    cd10:	003fdd06 	br	cc88 <__floatsidf+0x20>
    cd14:	10bffd44 	addi	r2,r2,-11
    cd18:	808a983a 	sll	r5,r16,r2
    cd1c:	00800434 	movhi	r2,16
    cd20:	10bfffc4 	addi	r2,r2,-1
    cd24:	288a703a 	and	r5,r5,r2
    cd28:	0005883a 	mov	r2,zero
    cd2c:	003fea06 	br	ccd8 <__floatsidf+0x70>

0000cd30 <__floatunsidf>:
    cd30:	defffe04 	addi	sp,sp,-8
    cd34:	dc000015 	stw	r16,0(sp)
    cd38:	dfc00115 	stw	ra,4(sp)
    cd3c:	2021883a 	mov	r16,r4
    cd40:	20000f26 	beq	r4,zero,cd80 <__floatunsidf+0x50>
    cd44:	000cdcc0 	call	cdcc <__clzsi2>
    cd48:	01010784 	movi	r4,1054
    cd4c:	2089c83a 	sub	r4,r4,r2
    cd50:	10c002c8 	cmpgei	r3,r2,11
    cd54:	2101ffcc 	andi	r4,r4,2047
    cd58:	1800151e 	bne	r3,zero,cdb0 <__floatunsidf+0x80>
    cd5c:	00c002c4 	movi	r3,11
    cd60:	1887c83a 	sub	r3,r3,r2
    cd64:	80c6d83a 	srl	r3,r16,r3
    cd68:	01400434 	movhi	r5,16
    cd6c:	10800544 	addi	r2,r2,21
    cd70:	297fffc4 	addi	r5,r5,-1
    cd74:	80a0983a 	sll	r16,r16,r2
    cd78:	1944703a 	and	r2,r3,r5
    cd7c:	00000206 	br	cd88 <__floatunsidf+0x58>
    cd80:	0009883a 	mov	r4,zero
    cd84:	0005883a 	mov	r2,zero
    cd88:	2008953a 	slli	r4,r4,20
    cd8c:	00c00434 	movhi	r3,16
    cd90:	18ffffc4 	addi	r3,r3,-1
    cd94:	10c6703a 	and	r3,r2,r3
    cd98:	1906b03a 	or	r3,r3,r4
    cd9c:	8005883a 	mov	r2,r16
    cda0:	dfc00117 	ldw	ra,4(sp)
    cda4:	dc000017 	ldw	r16,0(sp)
    cda8:	dec00204 	addi	sp,sp,8
    cdac:	f800283a 	ret
    cdb0:	10bffd44 	addi	r2,r2,-11
    cdb4:	8084983a 	sll	r2,r16,r2
    cdb8:	00c00434 	movhi	r3,16
    cdbc:	18ffffc4 	addi	r3,r3,-1
    cdc0:	10c4703a 	and	r2,r2,r3
    cdc4:	0021883a 	mov	r16,zero
    cdc8:	003fef06 	br	cd88 <__floatunsidf+0x58>

0000cdcc <__clzsi2>:
    cdcc:	00bfffd4 	movui	r2,65535
    cdd0:	11000b36 	bltu	r2,r4,ce00 <__clzsi2+0x34>
    cdd4:	20804030 	cmpltui	r2,r4,256
    cdd8:	1000071e 	bne	r2,zero,cdf8 <__clzsi2+0x2c>
    cddc:	2008d23a 	srli	r4,r4,8
    cde0:	01400604 	movi	r5,24
    cde4:	00c00074 	movhi	r3,1
    cde8:	20c7883a 	add	r3,r4,r3
    cdec:	18be0e43 	ldbu	r2,-1991(r3)
    cdf0:	2885c83a 	sub	r2,r5,r2
    cdf4:	f800283a 	ret
    cdf8:	01400804 	movi	r5,32
    cdfc:	003ff906 	br	cde4 <__clzsi2+0x18>
    ce00:	00804034 	movhi	r2,256
    ce04:	20800336 	bltu	r4,r2,ce14 <__clzsi2+0x48>
    ce08:	2008d63a 	srli	r4,r4,24
    ce0c:	01400204 	movi	r5,8
    ce10:	003ff406 	br	cde4 <__clzsi2+0x18>
    ce14:	2008d43a 	srli	r4,r4,16
    ce18:	01400404 	movi	r5,16
    ce1c:	003ff106 	br	cde4 <__clzsi2+0x18>

0000ce20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ce20:	defffe04 	addi	sp,sp,-8
    ce24:	dfc00115 	stw	ra,4(sp)
    ce28:	df000015 	stw	fp,0(sp)
    ce2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ce30:	d0a00e17 	ldw	r2,-32712(gp)
    ce34:	10000326 	beq	r2,zero,ce44 <alt_get_errno+0x24>
    ce38:	d0a00e17 	ldw	r2,-32712(gp)
    ce3c:	103ee83a 	callr	r2
    ce40:	00000106 	br	ce48 <alt_get_errno+0x28>
    ce44:	d0a72104 	addi	r2,gp,-25468
}
    ce48:	e037883a 	mov	sp,fp
    ce4c:	dfc00117 	ldw	ra,4(sp)
    ce50:	df000017 	ldw	fp,0(sp)
    ce54:	dec00204 	addi	sp,sp,8
    ce58:	f800283a 	ret

0000ce5c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    ce5c:	defffb04 	addi	sp,sp,-20
    ce60:	dfc00415 	stw	ra,16(sp)
    ce64:	df000315 	stw	fp,12(sp)
    ce68:	df000304 	addi	fp,sp,12
    ce6c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    ce70:	e0bffd17 	ldw	r2,-12(fp)
    ce74:	10000916 	blt	r2,zero,ce9c <close+0x40>
    ce78:	e0fffd17 	ldw	r3,-12(fp)
    ce7c:	1805883a 	mov	r2,r3
    ce80:	1085883a 	add	r2,r2,r2
    ce84:	10c5883a 	add	r2,r2,r3
    ce88:	100490ba 	slli	r2,r2,2
    ce8c:	00c00074 	movhi	r3,1
    ce90:	18c0dc04 	addi	r3,r3,880
    ce94:	10c5883a 	add	r2,r2,r3
    ce98:	00000106 	br	cea0 <close+0x44>
    ce9c:	0005883a 	mov	r2,zero
    cea0:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
    cea4:	e0bfff17 	ldw	r2,-4(fp)
    cea8:	10001926 	beq	r2,zero,cf10 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    ceac:	e0bfff17 	ldw	r2,-4(fp)
    ceb0:	10800017 	ldw	r2,0(r2)
    ceb4:	10800417 	ldw	r2,16(r2)
    ceb8:	10000626 	beq	r2,zero,ced4 <close+0x78>
    cebc:	e0bfff17 	ldw	r2,-4(fp)
    cec0:	10800017 	ldw	r2,0(r2)
    cec4:	10800417 	ldw	r2,16(r2)
    cec8:	e13fff17 	ldw	r4,-4(fp)
    cecc:	103ee83a 	callr	r2
    ced0:	00000106 	br	ced8 <close+0x7c>
    ced4:	0005883a 	mov	r2,zero
    ced8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    cedc:	e13ffd17 	ldw	r4,-12(fp)
    cee0:	000d5580 	call	d558 <alt_release_fd>
    if (rval < 0)
    cee4:	e0bffe17 	ldw	r2,-8(fp)
    cee8:	1000070e 	bge	r2,zero,cf08 <close+0xac>
    {
      ALT_ERRNO = -rval;
    ceec:	000ce200 	call	ce20 <alt_get_errno>
    cef0:	1007883a 	mov	r3,r2
    cef4:	e0bffe17 	ldw	r2,-8(fp)
    cef8:	0085c83a 	sub	r2,zero,r2
    cefc:	18800015 	stw	r2,0(r3)
      return -1;
    cf00:	00bfffc4 	movi	r2,-1
    cf04:	00000706 	br	cf24 <close+0xc8>
    }
    return 0;
    cf08:	0005883a 	mov	r2,zero
    cf0c:	00000506 	br	cf24 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    cf10:	000ce200 	call	ce20 <alt_get_errno>
    cf14:	1007883a 	mov	r3,r2
    cf18:	00801444 	movi	r2,81
    cf1c:	18800015 	stw	r2,0(r3)
    return -1;
    cf20:	00bfffc4 	movi	r2,-1
  }
}
    cf24:	e037883a 	mov	sp,fp
    cf28:	dfc00117 	ldw	ra,4(sp)
    cf2c:	df000017 	ldw	fp,0(sp)
    cf30:	dec00204 	addi	sp,sp,8
    cf34:	f800283a 	ret

0000cf38 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    cf38:	defffc04 	addi	sp,sp,-16
    cf3c:	df000315 	stw	fp,12(sp)
    cf40:	df000304 	addi	fp,sp,12
    cf44:	e13fff15 	stw	r4,-4(fp)
    cf48:	e17ffe15 	stw	r5,-8(fp)
    cf4c:	e1bffd15 	stw	r6,-12(fp)
  return len;
    cf50:	e0bffd17 	ldw	r2,-12(fp)
}
    cf54:	e037883a 	mov	sp,fp
    cf58:	df000017 	ldw	fp,0(sp)
    cf5c:	dec00104 	addi	sp,sp,4
    cf60:	f800283a 	ret

0000cf64 <alt_get_errno>:
{
    cf64:	defffe04 	addi	sp,sp,-8
    cf68:	dfc00115 	stw	ra,4(sp)
    cf6c:	df000015 	stw	fp,0(sp)
    cf70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cf74:	d0a00e17 	ldw	r2,-32712(gp)
    cf78:	10000326 	beq	r2,zero,cf88 <alt_get_errno+0x24>
    cf7c:	d0a00e17 	ldw	r2,-32712(gp)
    cf80:	103ee83a 	callr	r2
    cf84:	00000106 	br	cf8c <alt_get_errno+0x28>
    cf88:	d0a72104 	addi	r2,gp,-25468
}
    cf8c:	e037883a 	mov	sp,fp
    cf90:	dfc00117 	ldw	ra,4(sp)
    cf94:	df000017 	ldw	fp,0(sp)
    cf98:	dec00204 	addi	sp,sp,8
    cf9c:	f800283a 	ret

0000cfa0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    cfa0:	defffb04 	addi	sp,sp,-20
    cfa4:	dfc00415 	stw	ra,16(sp)
    cfa8:	df000315 	stw	fp,12(sp)
    cfac:	df000304 	addi	fp,sp,12
    cfb0:	e13ffe15 	stw	r4,-8(fp)
    cfb4:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    cfb8:	e0bffe17 	ldw	r2,-8(fp)
    cfbc:	10000916 	blt	r2,zero,cfe4 <fstat+0x44>
    cfc0:	e0fffe17 	ldw	r3,-8(fp)
    cfc4:	1805883a 	mov	r2,r3
    cfc8:	1085883a 	add	r2,r2,r2
    cfcc:	10c5883a 	add	r2,r2,r3
    cfd0:	100490ba 	slli	r2,r2,2
    cfd4:	00c00074 	movhi	r3,1
    cfd8:	18c0dc04 	addi	r3,r3,880
    cfdc:	10c5883a 	add	r2,r2,r3
    cfe0:	00000106 	br	cfe8 <fstat+0x48>
    cfe4:	0005883a 	mov	r2,zero
    cfe8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    cfec:	e0bfff17 	ldw	r2,-4(fp)
    cff0:	10001026 	beq	r2,zero,d034 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    cff4:	e0bfff17 	ldw	r2,-4(fp)
    cff8:	10800017 	ldw	r2,0(r2)
    cffc:	10800817 	ldw	r2,32(r2)
    d000:	10000726 	beq	r2,zero,d020 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
    d004:	e0bfff17 	ldw	r2,-4(fp)
    d008:	10800017 	ldw	r2,0(r2)
    d00c:	10800817 	ldw	r2,32(r2)
    d010:	e17ffd17 	ldw	r5,-12(fp)
    d014:	e13fff17 	ldw	r4,-4(fp)
    d018:	103ee83a 	callr	r2
    d01c:	00000a06 	br	d048 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d020:	e0bffd17 	ldw	r2,-12(fp)
    d024:	00c80004 	movi	r3,8192
    d028:	10c00115 	stw	r3,4(r2)
      return 0;
    d02c:	0005883a 	mov	r2,zero
    d030:	00000506 	br	d048 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d034:	000cf640 	call	cf64 <alt_get_errno>
    d038:	1007883a 	mov	r3,r2
    d03c:	00801444 	movi	r2,81
    d040:	18800015 	stw	r2,0(r3)
    return -1;
    d044:	00bfffc4 	movi	r2,-1
  }
}
    d048:	e037883a 	mov	sp,fp
    d04c:	dfc00117 	ldw	ra,4(sp)
    d050:	df000017 	ldw	fp,0(sp)
    d054:	dec00204 	addi	sp,sp,8
    d058:	f800283a 	ret

0000d05c <alt_get_errno>:
{
    d05c:	defffe04 	addi	sp,sp,-8
    d060:	dfc00115 	stw	ra,4(sp)
    d064:	df000015 	stw	fp,0(sp)
    d068:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d06c:	d0a00e17 	ldw	r2,-32712(gp)
    d070:	10000326 	beq	r2,zero,d080 <alt_get_errno+0x24>
    d074:	d0a00e17 	ldw	r2,-32712(gp)
    d078:	103ee83a 	callr	r2
    d07c:	00000106 	br	d084 <alt_get_errno+0x28>
    d080:	d0a72104 	addi	r2,gp,-25468
}
    d084:	e037883a 	mov	sp,fp
    d088:	dfc00117 	ldw	ra,4(sp)
    d08c:	df000017 	ldw	fp,0(sp)
    d090:	dec00204 	addi	sp,sp,8
    d094:	f800283a 	ret

0000d098 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d098:	deffea04 	addi	sp,sp,-88
    d09c:	dfc01515 	stw	ra,84(sp)
    d0a0:	df001415 	stw	fp,80(sp)
    d0a4:	df001404 	addi	fp,sp,80
    d0a8:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d0ac:	e0bfec17 	ldw	r2,-80(fp)
    d0b0:	10000916 	blt	r2,zero,d0d8 <isatty+0x40>
    d0b4:	e0ffec17 	ldw	r3,-80(fp)
    d0b8:	1805883a 	mov	r2,r3
    d0bc:	1085883a 	add	r2,r2,r2
    d0c0:	10c5883a 	add	r2,r2,r3
    d0c4:	100490ba 	slli	r2,r2,2
    d0c8:	00c00074 	movhi	r3,1
    d0cc:	18c0dc04 	addi	r3,r3,880
    d0d0:	10c5883a 	add	r2,r2,r3
    d0d4:	00000106 	br	d0dc <isatty+0x44>
    d0d8:	0005883a 	mov	r2,zero
    d0dc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d0e0:	e0bfff17 	ldw	r2,-4(fp)
    d0e4:	10000e26 	beq	r2,zero,d120 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d0e8:	e0bfff17 	ldw	r2,-4(fp)
    d0ec:	10800017 	ldw	r2,0(r2)
    d0f0:	10800817 	ldw	r2,32(r2)
    d0f4:	1000021e 	bne	r2,zero,d100 <isatty+0x68>
    {
      return 1;
    d0f8:	00800044 	movi	r2,1
    d0fc:	00000d06 	br	d134 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d100:	e0bfed04 	addi	r2,fp,-76
    d104:	100b883a 	mov	r5,r2
    d108:	e13fec17 	ldw	r4,-80(fp)
    d10c:	000cfa00 	call	cfa0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d110:	e0bfee17 	ldw	r2,-72(fp)
    d114:	10880020 	cmpeqi	r2,r2,8192
    d118:	10803fcc 	andi	r2,r2,255
    d11c:	00000506 	br	d134 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d120:	000d05c0 	call	d05c <alt_get_errno>
    d124:	1007883a 	mov	r3,r2
    d128:	00801444 	movi	r2,81
    d12c:	18800015 	stw	r2,0(r3)
    return 0;
    d130:	0005883a 	mov	r2,zero
  }
}
    d134:	e037883a 	mov	sp,fp
    d138:	dfc00117 	ldw	ra,4(sp)
    d13c:	df000017 	ldw	fp,0(sp)
    d140:	dec00204 	addi	sp,sp,8
    d144:	f800283a 	ret

0000d148 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d148:	defffc04 	addi	sp,sp,-16
    d14c:	df000315 	stw	fp,12(sp)
    d150:	df000304 	addi	fp,sp,12
    d154:	e13fff15 	stw	r4,-4(fp)
    d158:	e17ffe15 	stw	r5,-8(fp)
    d15c:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
    d160:	e0fffe17 	ldw	r3,-8(fp)
    d164:	e0bfff17 	ldw	r2,-4(fp)
    d168:	18800c26 	beq	r3,r2,d19c <alt_load_section+0x54>
  {
    while( to != end )
    d16c:	00000806 	br	d190 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d170:	e0ffff17 	ldw	r3,-4(fp)
    d174:	18800104 	addi	r2,r3,4
    d178:	e0bfff15 	stw	r2,-4(fp)
    d17c:	e0bffe17 	ldw	r2,-8(fp)
    d180:	11000104 	addi	r4,r2,4
    d184:	e13ffe15 	stw	r4,-8(fp)
    d188:	18c00017 	ldw	r3,0(r3)
    d18c:	10c00015 	stw	r3,0(r2)
    while( to != end )
    d190:	e0fffe17 	ldw	r3,-8(fp)
    d194:	e0bffd17 	ldw	r2,-12(fp)
    d198:	18bff51e 	bne	r3,r2,d170 <alt_load_section+0x28>
    }
  }
}
    d19c:	0001883a 	nop
    d1a0:	e037883a 	mov	sp,fp
    d1a4:	df000017 	ldw	fp,0(sp)
    d1a8:	dec00104 	addi	sp,sp,4
    d1ac:	f800283a 	ret

0000d1b0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d1b0:	defffe04 	addi	sp,sp,-8
    d1b4:	dfc00115 	stw	ra,4(sp)
    d1b8:	df000015 	stw	fp,0(sp)
    d1bc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d1c0:	01800074 	movhi	r6,1
    d1c4:	31856704 	addi	r6,r6,5532
    d1c8:	01400074 	movhi	r5,1
    d1cc:	297e5c04 	addi	r5,r5,-1680
    d1d0:	01000074 	movhi	r4,1
    d1d4:	21056704 	addi	r4,r4,5532
    d1d8:	000d1480 	call	d148 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d1dc:	01800034 	movhi	r6,0
    d1e0:	31808904 	addi	r6,r6,548
    d1e4:	01400034 	movhi	r5,0
    d1e8:	29400804 	addi	r5,r5,32
    d1ec:	01000034 	movhi	r4,0
    d1f0:	21000804 	addi	r4,r4,32
    d1f4:	000d1480 	call	d148 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d1f8:	01800074 	movhi	r6,1
    d1fc:	31be5c04 	addi	r6,r6,-1680
    d200:	01400074 	movhi	r5,1
    d204:	297ce604 	addi	r5,r5,-3176
    d208:	01000074 	movhi	r4,1
    d20c:	213ce604 	addi	r4,r4,-3176
    d210:	000d1480 	call	d148 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d214:	000e3fc0 	call	e3fc <alt_dcache_flush_all>
  alt_icache_flush_all();
    d218:	000e5bc0 	call	e5bc <alt_icache_flush_all>
}
    d21c:	0001883a 	nop
    d220:	e037883a 	mov	sp,fp
    d224:	dfc00117 	ldw	ra,4(sp)
    d228:	df000017 	ldw	fp,0(sp)
    d22c:	dec00204 	addi	sp,sp,8
    d230:	f800283a 	ret

0000d234 <alt_get_errno>:
{
    d234:	defffe04 	addi	sp,sp,-8
    d238:	dfc00115 	stw	ra,4(sp)
    d23c:	df000015 	stw	fp,0(sp)
    d240:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d244:	d0a00e17 	ldw	r2,-32712(gp)
    d248:	10000326 	beq	r2,zero,d258 <alt_get_errno+0x24>
    d24c:	d0a00e17 	ldw	r2,-32712(gp)
    d250:	103ee83a 	callr	r2
    d254:	00000106 	br	d25c <alt_get_errno+0x28>
    d258:	d0a72104 	addi	r2,gp,-25468
}
    d25c:	e037883a 	mov	sp,fp
    d260:	dfc00117 	ldw	ra,4(sp)
    d264:	df000017 	ldw	fp,0(sp)
    d268:	dec00204 	addi	sp,sp,8
    d26c:	f800283a 	ret

0000d270 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d270:	defff904 	addi	sp,sp,-28
    d274:	dfc00615 	stw	ra,24(sp)
    d278:	df000515 	stw	fp,20(sp)
    d27c:	df000504 	addi	fp,sp,20
    d280:	e13ffd15 	stw	r4,-12(fp)
    d284:	e17ffc15 	stw	r5,-16(fp)
    d288:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d28c:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d290:	e0bffd17 	ldw	r2,-12(fp)
    d294:	10000916 	blt	r2,zero,d2bc <lseek+0x4c>
    d298:	e0fffd17 	ldw	r3,-12(fp)
    d29c:	1805883a 	mov	r2,r3
    d2a0:	1085883a 	add	r2,r2,r2
    d2a4:	10c5883a 	add	r2,r2,r3
    d2a8:	100490ba 	slli	r2,r2,2
    d2ac:	00c00074 	movhi	r3,1
    d2b0:	18c0dc04 	addi	r3,r3,880
    d2b4:	10c5883a 	add	r2,r2,r3
    d2b8:	00000106 	br	d2c0 <lseek+0x50>
    d2bc:	0005883a 	mov	r2,zero
    d2c0:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
    d2c4:	e0bffe17 	ldw	r2,-8(fp)
    d2c8:	10001026 	beq	r2,zero,d30c <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d2cc:	e0bffe17 	ldw	r2,-8(fp)
    d2d0:	10800017 	ldw	r2,0(r2)
    d2d4:	10800717 	ldw	r2,28(r2)
    d2d8:	10000926 	beq	r2,zero,d300 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d2dc:	e0bffe17 	ldw	r2,-8(fp)
    d2e0:	10800017 	ldw	r2,0(r2)
    d2e4:	10800717 	ldw	r2,28(r2)
    d2e8:	e1bffb17 	ldw	r6,-20(fp)
    d2ec:	e17ffc17 	ldw	r5,-16(fp)
    d2f0:	e13ffe17 	ldw	r4,-8(fp)
    d2f4:	103ee83a 	callr	r2
    d2f8:	e0bfff15 	stw	r2,-4(fp)
    d2fc:	00000506 	br	d314 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d300:	00bfde84 	movi	r2,-134
    d304:	e0bfff15 	stw	r2,-4(fp)
    d308:	00000206 	br	d314 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
    d30c:	00bfebc4 	movi	r2,-81
    d310:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
    d314:	e0bfff17 	ldw	r2,-4(fp)
    d318:	1000070e 	bge	r2,zero,d338 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
    d31c:	000d2340 	call	d234 <alt_get_errno>
    d320:	1007883a 	mov	r3,r2
    d324:	e0bfff17 	ldw	r2,-4(fp)
    d328:	0085c83a 	sub	r2,zero,r2
    d32c:	18800015 	stw	r2,0(r3)
    rc = -1;
    d330:	00bfffc4 	movi	r2,-1
    d334:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
    d338:	e0bfff17 	ldw	r2,-4(fp)
}
    d33c:	e037883a 	mov	sp,fp
    d340:	dfc00117 	ldw	ra,4(sp)
    d344:	df000017 	ldw	fp,0(sp)
    d348:	dec00204 	addi	sp,sp,8
    d34c:	f800283a 	ret

0000d350 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d350:	defffd04 	addi	sp,sp,-12
    d354:	dfc00215 	stw	ra,8(sp)
    d358:	df000115 	stw	fp,4(sp)
    d35c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d360:	0009883a 	mov	r4,zero
    d364:	000d7ec0 	call	d7ec <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d368:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d36c:	000d8240 	call	d824 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d370:	01800074 	movhi	r6,1
    d374:	31be5204 	addi	r6,r6,-1720
    d378:	01400074 	movhi	r5,1
    d37c:	297e5204 	addi	r5,r5,-1720
    d380:	01000074 	movhi	r4,1
    d384:	213e5204 	addi	r4,r4,-1720
    d388:	000e9440 	call	e944 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d38c:	000e4fc0 	call	e4fc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d390:	01000074 	movhi	r4,1
    d394:	21395704 	addi	r4,r4,-6820
    d398:	000f0e80 	call	f0e8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d39c:	d0a72317 	ldw	r2,-25460(gp)
    d3a0:	d0e72417 	ldw	r3,-25456(gp)
    d3a4:	d1272517 	ldw	r4,-25452(gp)
    d3a8:	200d883a 	mov	r6,r4
    d3ac:	180b883a 	mov	r5,r3
    d3b0:	1009883a 	mov	r4,r2
    d3b4:	00003500 	call	350 <main>
    d3b8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d3bc:	01000044 	movi	r4,1
    d3c0:	000ce5c0 	call	ce5c <close>
  exit (result);
    d3c4:	e13fff17 	ldw	r4,-4(fp)
    d3c8:	000f0fc0 	call	f0fc <exit>

0000d3cc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d3cc:	defffe04 	addi	sp,sp,-8
    d3d0:	df000115 	stw	fp,4(sp)
    d3d4:	df000104 	addi	fp,sp,4
    d3d8:	e13fff15 	stw	r4,-4(fp)
}
    d3dc:	0001883a 	nop
    d3e0:	e037883a 	mov	sp,fp
    d3e4:	df000017 	ldw	fp,0(sp)
    d3e8:	dec00104 	addi	sp,sp,4
    d3ec:	f800283a 	ret

0000d3f0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d3f0:	defffe04 	addi	sp,sp,-8
    d3f4:	df000115 	stw	fp,4(sp)
    d3f8:	df000104 	addi	fp,sp,4
    d3fc:	e13fff15 	stw	r4,-4(fp)
}
    d400:	0001883a 	nop
    d404:	e037883a 	mov	sp,fp
    d408:	df000017 	ldw	fp,0(sp)
    d40c:	dec00104 	addi	sp,sp,4
    d410:	f800283a 	ret

0000d414 <alt_get_errno>:
{
    d414:	defffe04 	addi	sp,sp,-8
    d418:	dfc00115 	stw	ra,4(sp)
    d41c:	df000015 	stw	fp,0(sp)
    d420:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d424:	d0a00e17 	ldw	r2,-32712(gp)
    d428:	10000326 	beq	r2,zero,d438 <alt_get_errno+0x24>
    d42c:	d0a00e17 	ldw	r2,-32712(gp)
    d430:	103ee83a 	callr	r2
    d434:	00000106 	br	d43c <alt_get_errno+0x28>
    d438:	d0a72104 	addi	r2,gp,-25468
}
    d43c:	e037883a 	mov	sp,fp
    d440:	dfc00117 	ldw	ra,4(sp)
    d444:	df000017 	ldw	fp,0(sp)
    d448:	dec00204 	addi	sp,sp,8
    d44c:	f800283a 	ret

0000d450 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d450:	defff904 	addi	sp,sp,-28
    d454:	dfc00615 	stw	ra,24(sp)
    d458:	df000515 	stw	fp,20(sp)
    d45c:	df000504 	addi	fp,sp,20
    d460:	e13ffd15 	stw	r4,-12(fp)
    d464:	e17ffc15 	stw	r5,-16(fp)
    d468:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d46c:	e0bffd17 	ldw	r2,-12(fp)
    d470:	10000916 	blt	r2,zero,d498 <read+0x48>
    d474:	e0fffd17 	ldw	r3,-12(fp)
    d478:	1805883a 	mov	r2,r3
    d47c:	1085883a 	add	r2,r2,r2
    d480:	10c5883a 	add	r2,r2,r3
    d484:	100490ba 	slli	r2,r2,2
    d488:	00c00074 	movhi	r3,1
    d48c:	18c0dc04 	addi	r3,r3,880
    d490:	10c5883a 	add	r2,r2,r3
    d494:	00000106 	br	d49c <read+0x4c>
    d498:	0005883a 	mov	r2,zero
    d49c:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d4a0:	e0bfff17 	ldw	r2,-4(fp)
    d4a4:	10002226 	beq	r2,zero,d530 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d4a8:	e0bfff17 	ldw	r2,-4(fp)
    d4ac:	10800217 	ldw	r2,8(r2)
    d4b0:	108000cc 	andi	r2,r2,3
    d4b4:	10800060 	cmpeqi	r2,r2,1
    d4b8:	1000181e 	bne	r2,zero,d51c <read+0xcc>
        (fd->dev->read))
    d4bc:	e0bfff17 	ldw	r2,-4(fp)
    d4c0:	10800017 	ldw	r2,0(r2)
    d4c4:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d4c8:	10001426 	beq	r2,zero,d51c <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d4cc:	e0bfff17 	ldw	r2,-4(fp)
    d4d0:	10800017 	ldw	r2,0(r2)
    d4d4:	10800517 	ldw	r2,20(r2)
    d4d8:	e0fffb17 	ldw	r3,-20(fp)
    d4dc:	180d883a 	mov	r6,r3
    d4e0:	e17ffc17 	ldw	r5,-16(fp)
    d4e4:	e13fff17 	ldw	r4,-4(fp)
    d4e8:	103ee83a 	callr	r2
    d4ec:	e0bffe15 	stw	r2,-8(fp)
    d4f0:	e0bffe17 	ldw	r2,-8(fp)
    d4f4:	1000070e 	bge	r2,zero,d514 <read+0xc4>
        {
          ALT_ERRNO = -rval;
    d4f8:	000d4140 	call	d414 <alt_get_errno>
    d4fc:	1007883a 	mov	r3,r2
    d500:	e0bffe17 	ldw	r2,-8(fp)
    d504:	0085c83a 	sub	r2,zero,r2
    d508:	18800015 	stw	r2,0(r3)
          return -1;
    d50c:	00bfffc4 	movi	r2,-1
    d510:	00000c06 	br	d544 <read+0xf4>
        }
        return rval;
    d514:	e0bffe17 	ldw	r2,-8(fp)
    d518:	00000a06 	br	d544 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d51c:	000d4140 	call	d414 <alt_get_errno>
    d520:	1007883a 	mov	r3,r2
    d524:	00800344 	movi	r2,13
    d528:	18800015 	stw	r2,0(r3)
    d52c:	00000406 	br	d540 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d530:	000d4140 	call	d414 <alt_get_errno>
    d534:	1007883a 	mov	r3,r2
    d538:	00801444 	movi	r2,81
    d53c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d540:	00bfffc4 	movi	r2,-1
}
    d544:	e037883a 	mov	sp,fp
    d548:	dfc00117 	ldw	ra,4(sp)
    d54c:	df000017 	ldw	fp,0(sp)
    d550:	dec00204 	addi	sp,sp,8
    d554:	f800283a 	ret

0000d558 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d558:	defffe04 	addi	sp,sp,-8
    d55c:	df000115 	stw	fp,4(sp)
    d560:	df000104 	addi	fp,sp,4
    d564:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    d568:	e0bfff17 	ldw	r2,-4(fp)
    d56c:	108000d0 	cmplti	r2,r2,3
    d570:	1000101e 	bne	r2,zero,d5b4 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
    d574:	e0ffff17 	ldw	r3,-4(fp)
    d578:	1805883a 	mov	r2,r3
    d57c:	1085883a 	add	r2,r2,r2
    d580:	10c5883a 	add	r2,r2,r3
    d584:	100490ba 	slli	r2,r2,2
    d588:	00c00074 	movhi	r3,1
    d58c:	10c7883a 	add	r3,r2,r3
    d590:	1800de15 	stw	zero,888(r3)
    alt_fd_list[fd].dev      = 0;
    d594:	e0ffff17 	ldw	r3,-4(fp)
    d598:	1805883a 	mov	r2,r3
    d59c:	1085883a 	add	r2,r2,r2
    d5a0:	10c5883a 	add	r2,r2,r3
    d5a4:	100490ba 	slli	r2,r2,2
    d5a8:	00c00074 	movhi	r3,1
    d5ac:	10c7883a 	add	r3,r2,r3
    d5b0:	1800dc15 	stw	zero,880(r3)
  }
}
    d5b4:	0001883a 	nop
    d5b8:	e037883a 	mov	sp,fp
    d5bc:	df000017 	ldw	fp,0(sp)
    d5c0:	dec00104 	addi	sp,sp,4
    d5c4:	f800283a 	ret

0000d5c8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d5c8:	defff904 	addi	sp,sp,-28
    d5cc:	df000615 	stw	fp,24(sp)
    d5d0:	df000604 	addi	fp,sp,24
    d5d4:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
    d5d8:	0005303a 	rdctl	r2,status
    d5dc:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d5e0:	e0fffd17 	ldw	r3,-12(fp)
    d5e4:	00bfff84 	movi	r2,-2
    d5e8:	1884703a 	and	r2,r3,r2
    d5ec:	1001703a 	wrctl	status,r2
  return context;
    d5f0:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d5f4:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d5f8:	d0a00f17 	ldw	r2,-32708(gp)
    d5fc:	10c000c4 	addi	r3,r2,3
    d600:	00bfff04 	movi	r2,-4
    d604:	1884703a 	and	r2,r3,r2
    d608:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d60c:	d0e00f17 	ldw	r3,-32708(gp)
    d610:	e0bffa17 	ldw	r2,-24(fp)
    d614:	1887883a 	add	r3,r3,r2
    d618:	008000b4 	movhi	r2,2
    d61c:	10bd0004 	addi	r2,r2,-3072
    d620:	10c0062e 	bgeu	r2,r3,d63c <sbrk+0x74>
    d624:	e0bfff17 	ldw	r2,-4(fp)
    d628:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    d62c:	e0bffc17 	ldw	r2,-16(fp)
    d630:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d634:	00bfffc4 	movi	r2,-1
    d638:	00000b06 	br	d668 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d63c:	d0a00f17 	ldw	r2,-32708(gp)
    d640:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
    d644:	d0e00f17 	ldw	r3,-32708(gp)
    d648:	e0bffa17 	ldw	r2,-24(fp)
    d64c:	1885883a 	add	r2,r3,r2
    d650:	d0a00f15 	stw	r2,-32708(gp)
    d654:	e0bfff17 	ldw	r2,-4(fp)
    d658:	e0bffb15 	stw	r2,-20(fp)
    d65c:	e0bffb17 	ldw	r2,-20(fp)
    d660:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d664:	e0bffe17 	ldw	r2,-8(fp)
} 
    d668:	e037883a 	mov	sp,fp
    d66c:	df000017 	ldw	fp,0(sp)
    d670:	dec00104 	addi	sp,sp,4
    d674:	f800283a 	ret

0000d678 <alt_get_errno>:
{
    d678:	defffe04 	addi	sp,sp,-8
    d67c:	dfc00115 	stw	ra,4(sp)
    d680:	df000015 	stw	fp,0(sp)
    d684:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d688:	d0a00e17 	ldw	r2,-32712(gp)
    d68c:	10000326 	beq	r2,zero,d69c <alt_get_errno+0x24>
    d690:	d0a00e17 	ldw	r2,-32712(gp)
    d694:	103ee83a 	callr	r2
    d698:	00000106 	br	d6a0 <alt_get_errno+0x28>
    d69c:	d0a72104 	addi	r2,gp,-25468
}
    d6a0:	e037883a 	mov	sp,fp
    d6a4:	dfc00117 	ldw	ra,4(sp)
    d6a8:	df000017 	ldw	fp,0(sp)
    d6ac:	dec00204 	addi	sp,sp,8
    d6b0:	f800283a 	ret

0000d6b4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    d6b4:	defff904 	addi	sp,sp,-28
    d6b8:	dfc00615 	stw	ra,24(sp)
    d6bc:	df000515 	stw	fp,20(sp)
    d6c0:	df000504 	addi	fp,sp,20
    d6c4:	e13ffd15 	stw	r4,-12(fp)
    d6c8:	e17ffc15 	stw	r5,-16(fp)
    d6cc:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d6d0:	e0bffd17 	ldw	r2,-12(fp)
    d6d4:	10000916 	blt	r2,zero,d6fc <write+0x48>
    d6d8:	e0fffd17 	ldw	r3,-12(fp)
    d6dc:	1805883a 	mov	r2,r3
    d6e0:	1085883a 	add	r2,r2,r2
    d6e4:	10c5883a 	add	r2,r2,r3
    d6e8:	100490ba 	slli	r2,r2,2
    d6ec:	00c00074 	movhi	r3,1
    d6f0:	18c0dc04 	addi	r3,r3,880
    d6f4:	10c5883a 	add	r2,r2,r3
    d6f8:	00000106 	br	d700 <write+0x4c>
    d6fc:	0005883a 	mov	r2,zero
    d700:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d704:	e0bfff17 	ldw	r2,-4(fp)
    d708:	10002126 	beq	r2,zero,d790 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    d70c:	e0bfff17 	ldw	r2,-4(fp)
    d710:	10800217 	ldw	r2,8(r2)
    d714:	108000cc 	andi	r2,r2,3
    d718:	10001826 	beq	r2,zero,d77c <write+0xc8>
    d71c:	e0bfff17 	ldw	r2,-4(fp)
    d720:	10800017 	ldw	r2,0(r2)
    d724:	10800617 	ldw	r2,24(r2)
    d728:	10001426 	beq	r2,zero,d77c <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    d72c:	e0bfff17 	ldw	r2,-4(fp)
    d730:	10800017 	ldw	r2,0(r2)
    d734:	10800617 	ldw	r2,24(r2)
    d738:	e0fffb17 	ldw	r3,-20(fp)
    d73c:	180d883a 	mov	r6,r3
    d740:	e17ffc17 	ldw	r5,-16(fp)
    d744:	e13fff17 	ldw	r4,-4(fp)
    d748:	103ee83a 	callr	r2
    d74c:	e0bffe15 	stw	r2,-8(fp)
    d750:	e0bffe17 	ldw	r2,-8(fp)
    d754:	1000070e 	bge	r2,zero,d774 <write+0xc0>
      {
        ALT_ERRNO = -rval;
    d758:	000d6780 	call	d678 <alt_get_errno>
    d75c:	1007883a 	mov	r3,r2
    d760:	e0bffe17 	ldw	r2,-8(fp)
    d764:	0085c83a 	sub	r2,zero,r2
    d768:	18800015 	stw	r2,0(r3)
        return -1;
    d76c:	00bfffc4 	movi	r2,-1
    d770:	00000c06 	br	d7a4 <write+0xf0>
      }
      return rval;
    d774:	e0bffe17 	ldw	r2,-8(fp)
    d778:	00000a06 	br	d7a4 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
    d77c:	000d6780 	call	d678 <alt_get_errno>
    d780:	1007883a 	mov	r3,r2
    d784:	00800344 	movi	r2,13
    d788:	18800015 	stw	r2,0(r3)
    d78c:	00000406 	br	d7a0 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    d790:	000d6780 	call	d678 <alt_get_errno>
    d794:	1007883a 	mov	r3,r2
    d798:	00801444 	movi	r2,81
    d79c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d7a0:	00bfffc4 	movi	r2,-1
}
    d7a4:	e037883a 	mov	sp,fp
    d7a8:	dfc00117 	ldw	ra,4(sp)
    d7ac:	df000017 	ldw	fp,0(sp)
    d7b0:	dec00204 	addi	sp,sp,8
    d7b4:	f800283a 	ret

0000d7b8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    d7b8:	defffd04 	addi	sp,sp,-12
    d7bc:	dfc00215 	stw	ra,8(sp)
    d7c0:	df000115 	stw	fp,4(sp)
    d7c4:	df000104 	addi	fp,sp,4
    d7c8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    d7cc:	d1600b04 	addi	r5,gp,-32724
    d7d0:	e13fff17 	ldw	r4,-4(fp)
    d7d4:	000e4580 	call	e458 <alt_dev_llist_insert>
}
    d7d8:	e037883a 	mov	sp,fp
    d7dc:	dfc00117 	ldw	ra,4(sp)
    d7e0:	df000017 	ldw	fp,0(sp)
    d7e4:	dec00204 	addi	sp,sp,8
    d7e8:	f800283a 	ret

0000d7ec <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    d7ec:	defffd04 	addi	sp,sp,-12
    d7f0:	dfc00215 	stw	ra,8(sp)
    d7f4:	df000115 	stw	fp,4(sp)
    d7f8:	df000104 	addi	fp,sp,4
    d7fc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    d800:	000eddc0 	call	eddc <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    d804:	00800044 	movi	r2,1
    d808:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    d80c:	0001883a 	nop
    d810:	e037883a 	mov	sp,fp
    d814:	dfc00117 	ldw	ra,4(sp)
    d818:	df000017 	ldw	fp,0(sp)
    d81c:	dec00204 	addi	sp,sp,8
    d820:	f800283a 	ret

0000d824 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    d824:	defffe04 	addi	sp,sp,-8
    d828:	dfc00115 	stw	ra,4(sp)
    d82c:	df000015 	stw	fp,0(sp)
    d830:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    d834:	000d883a 	mov	r6,zero
    d838:	000b883a 	mov	r5,zero
    d83c:	01000074 	movhi	r4,1
    d840:	21014604 	addi	r4,r4,1304
    d844:	000d9d00 	call	d9d0 <altera_avalon_jtag_uart_init>
    d848:	01000074 	movhi	r4,1
    d84c:	21013c04 	addi	r4,r4,1264
    d850:	000d7b80 	call	d7b8 <alt_dev_reg>
}
    d854:	0001883a 	nop
    d858:	e037883a 	mov	sp,fp
    d85c:	dfc00117 	ldw	ra,4(sp)
    d860:	df000017 	ldw	fp,0(sp)
    d864:	dec00204 	addi	sp,sp,8
    d868:	f800283a 	ret

0000d86c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    d86c:	defffa04 	addi	sp,sp,-24
    d870:	dfc00515 	stw	ra,20(sp)
    d874:	df000415 	stw	fp,16(sp)
    d878:	df000404 	addi	fp,sp,16
    d87c:	e13ffe15 	stw	r4,-8(fp)
    d880:	e17ffd15 	stw	r5,-12(fp)
    d884:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d888:	e0bffe17 	ldw	r2,-8(fp)
    d88c:	10800017 	ldw	r2,0(r2)
    d890:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    d894:	e0bfff17 	ldw	r2,-4(fp)
    d898:	10c00a04 	addi	r3,r2,40
    d89c:	e0bffe17 	ldw	r2,-8(fp)
    d8a0:	10800217 	ldw	r2,8(r2)
    d8a4:	100f883a 	mov	r7,r2
    d8a8:	e1bffc17 	ldw	r6,-16(fp)
    d8ac:	e17ffd17 	ldw	r5,-12(fp)
    d8b0:	1809883a 	mov	r4,r3
    d8b4:	000de900 	call	de90 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    d8b8:	e037883a 	mov	sp,fp
    d8bc:	dfc00117 	ldw	ra,4(sp)
    d8c0:	df000017 	ldw	fp,0(sp)
    d8c4:	dec00204 	addi	sp,sp,8
    d8c8:	f800283a 	ret

0000d8cc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    d8cc:	defffa04 	addi	sp,sp,-24
    d8d0:	dfc00515 	stw	ra,20(sp)
    d8d4:	df000415 	stw	fp,16(sp)
    d8d8:	df000404 	addi	fp,sp,16
    d8dc:	e13ffe15 	stw	r4,-8(fp)
    d8e0:	e17ffd15 	stw	r5,-12(fp)
    d8e4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d8e8:	e0bffe17 	ldw	r2,-8(fp)
    d8ec:	10800017 	ldw	r2,0(r2)
    d8f0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    d8f4:	e0bfff17 	ldw	r2,-4(fp)
    d8f8:	10c00a04 	addi	r3,r2,40
    d8fc:	e0bffe17 	ldw	r2,-8(fp)
    d900:	10800217 	ldw	r2,8(r2)
    d904:	100f883a 	mov	r7,r2
    d908:	e1bffc17 	ldw	r6,-16(fp)
    d90c:	e17ffd17 	ldw	r5,-12(fp)
    d910:	1809883a 	mov	r4,r3
    d914:	000e0ac0 	call	e0ac <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    d918:	e037883a 	mov	sp,fp
    d91c:	dfc00117 	ldw	ra,4(sp)
    d920:	df000017 	ldw	fp,0(sp)
    d924:	dec00204 	addi	sp,sp,8
    d928:	f800283a 	ret

0000d92c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    d92c:	defffc04 	addi	sp,sp,-16
    d930:	dfc00315 	stw	ra,12(sp)
    d934:	df000215 	stw	fp,8(sp)
    d938:	df000204 	addi	fp,sp,8
    d93c:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d940:	e0bffe17 	ldw	r2,-8(fp)
    d944:	10800017 	ldw	r2,0(r2)
    d948:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    d94c:	e0bfff17 	ldw	r2,-4(fp)
    d950:	10c00a04 	addi	r3,r2,40
    d954:	e0bffe17 	ldw	r2,-8(fp)
    d958:	10800217 	ldw	r2,8(r2)
    d95c:	100b883a 	mov	r5,r2
    d960:	1809883a 	mov	r4,r3
    d964:	000dd340 	call	dd34 <altera_avalon_jtag_uart_close>
}
    d968:	e037883a 	mov	sp,fp
    d96c:	dfc00117 	ldw	ra,4(sp)
    d970:	df000017 	ldw	fp,0(sp)
    d974:	dec00204 	addi	sp,sp,8
    d978:	f800283a 	ret

0000d97c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    d97c:	defffa04 	addi	sp,sp,-24
    d980:	dfc00515 	stw	ra,20(sp)
    d984:	df000415 	stw	fp,16(sp)
    d988:	df000404 	addi	fp,sp,16
    d98c:	e13ffe15 	stw	r4,-8(fp)
    d990:	e17ffd15 	stw	r5,-12(fp)
    d994:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    d998:	e0bffe17 	ldw	r2,-8(fp)
    d99c:	10800017 	ldw	r2,0(r2)
    d9a0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    d9a4:	e0bfff17 	ldw	r2,-4(fp)
    d9a8:	10800a04 	addi	r2,r2,40
    d9ac:	e1bffc17 	ldw	r6,-16(fp)
    d9b0:	e17ffd17 	ldw	r5,-12(fp)
    d9b4:	1009883a 	mov	r4,r2
    d9b8:	000dd9c0 	call	dd9c <altera_avalon_jtag_uart_ioctl>
}
    d9bc:	e037883a 	mov	sp,fp
    d9c0:	dfc00117 	ldw	ra,4(sp)
    d9c4:	df000017 	ldw	fp,0(sp)
    d9c8:	dec00204 	addi	sp,sp,8
    d9cc:	f800283a 	ret

0000d9d0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    d9d0:	defffa04 	addi	sp,sp,-24
    d9d4:	dfc00515 	stw	ra,20(sp)
    d9d8:	df000415 	stw	fp,16(sp)
    d9dc:	df000404 	addi	fp,sp,16
    d9e0:	e13fff15 	stw	r4,-4(fp)
    d9e4:	e17ffe15 	stw	r5,-8(fp)
    d9e8:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    d9ec:	e0bfff17 	ldw	r2,-4(fp)
    d9f0:	00c00044 	movi	r3,1
    d9f4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    d9f8:	e0bfff17 	ldw	r2,-4(fp)
    d9fc:	10800017 	ldw	r2,0(r2)
    da00:	10800104 	addi	r2,r2,4
    da04:	1007883a 	mov	r3,r2
    da08:	e0bfff17 	ldw	r2,-4(fp)
    da0c:	10800817 	ldw	r2,32(r2)
    da10:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    da14:	e0bffe17 	ldw	r2,-8(fp)
    da18:	e0fffd17 	ldw	r3,-12(fp)
    da1c:	d8000015 	stw	zero,0(sp)
    da20:	e1ffff17 	ldw	r7,-4(fp)
    da24:	01800074 	movhi	r6,1
    da28:	31b6a404 	addi	r6,r6,-9584
    da2c:	180b883a 	mov	r5,r3
    da30:	1009883a 	mov	r4,r2
    da34:	000e5dc0 	call	e5dc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    da38:	e0bfff17 	ldw	r2,-4(fp)
    da3c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    da40:	e0bfff17 	ldw	r2,-4(fp)
    da44:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    da48:	d0e72717 	ldw	r3,-25444(gp)
    da4c:	e1ffff17 	ldw	r7,-4(fp)
    da50:	01800074 	movhi	r6,1
    da54:	31b72504 	addi	r6,r6,-9068
    da58:	180b883a 	mov	r5,r3
    da5c:	1009883a 	mov	r4,r2
    da60:	000e2d00 	call	e2d0 <alt_alarm_start>
    da64:	1000040e 	bge	r2,zero,da78 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    da68:	e0ffff17 	ldw	r3,-4(fp)
    da6c:	00a00034 	movhi	r2,32768
    da70:	10bfffc4 	addi	r2,r2,-1
    da74:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    da78:	0001883a 	nop
    da7c:	e037883a 	mov	sp,fp
    da80:	dfc00117 	ldw	ra,4(sp)
    da84:	df000017 	ldw	fp,0(sp)
    da88:	dec00204 	addi	sp,sp,8
    da8c:	f800283a 	ret

0000da90 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    da90:	defff804 	addi	sp,sp,-32
    da94:	df000715 	stw	fp,28(sp)
    da98:	df000704 	addi	fp,sp,28
    da9c:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    daa0:	e0bff917 	ldw	r2,-28(fp)
    daa4:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
    daa8:	e0bffd17 	ldw	r2,-12(fp)
    daac:	10800017 	ldw	r2,0(r2)
    dab0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dab4:	e0bffc17 	ldw	r2,-16(fp)
    dab8:	10800104 	addi	r2,r2,4
    dabc:	10800037 	ldwio	r2,0(r2)
    dac0:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    dac4:	e0bffb17 	ldw	r2,-20(fp)
    dac8:	1080c00c 	andi	r2,r2,768
    dacc:	10006b26 	beq	r2,zero,dc7c <altera_avalon_jtag_uart_irq+0x1ec>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    dad0:	e0bffb17 	ldw	r2,-20(fp)
    dad4:	1080400c 	andi	r2,r2,256
    dad8:	10003426 	beq	r2,zero,dbac <altera_avalon_jtag_uart_irq+0x11c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    dadc:	00800074 	movhi	r2,1
    dae0:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dae4:	e0bffd17 	ldw	r2,-12(fp)
    dae8:	10800a17 	ldw	r2,40(r2)
    daec:	10800044 	addi	r2,r2,1
    daf0:	1081ffcc 	andi	r2,r2,2047
    daf4:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
    daf8:	e0bffd17 	ldw	r2,-12(fp)
    dafc:	10800b17 	ldw	r2,44(r2)
    db00:	e0fffa17 	ldw	r3,-24(fp)
    db04:	18801426 	beq	r3,r2,db58 <altera_avalon_jtag_uart_irq+0xc8>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    db08:	e0bffc17 	ldw	r2,-16(fp)
    db0c:	10800037 	ldwio	r2,0(r2)
    db10:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    db14:	e0bfff17 	ldw	r2,-4(fp)
    db18:	10a0000c 	andi	r2,r2,32768
    db1c:	10001026 	beq	r2,zero,db60 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    db20:	e0bffd17 	ldw	r2,-12(fp)
    db24:	10800a17 	ldw	r2,40(r2)
    db28:	e0ffff17 	ldw	r3,-4(fp)
    db2c:	1809883a 	mov	r4,r3
    db30:	e0fffd17 	ldw	r3,-12(fp)
    db34:	1885883a 	add	r2,r3,r2
    db38:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    db3c:	e0bffd17 	ldw	r2,-12(fp)
    db40:	10800a17 	ldw	r2,40(r2)
    db44:	10800044 	addi	r2,r2,1
    db48:	10c1ffcc 	andi	r3,r2,2047
    db4c:	e0bffd17 	ldw	r2,-12(fp)
    db50:	10c00a15 	stw	r3,40(r2)
      {
    db54:	003fe306 	br	dae4 <altera_avalon_jtag_uart_irq+0x54>
          break;
    db58:	0001883a 	nop
    db5c:	00000106 	br	db64 <altera_avalon_jtag_uart_irq+0xd4>
          break;
    db60:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    db64:	e0bfff17 	ldw	r2,-4(fp)
    db68:	10bfffec 	andhi	r2,r2,65535
    db6c:	10000f26 	beq	r2,zero,dbac <altera_avalon_jtag_uart_irq+0x11c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    db70:	e0bffd17 	ldw	r2,-12(fp)
    db74:	10c00817 	ldw	r3,32(r2)
    db78:	00bfff84 	movi	r2,-2
    db7c:	1886703a 	and	r3,r3,r2
    db80:	e0bffd17 	ldw	r2,-12(fp)
    db84:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    db88:	e0bffc17 	ldw	r2,-16(fp)
    db8c:	10800104 	addi	r2,r2,4
    db90:	1007883a 	mov	r3,r2
    db94:	e0bffd17 	ldw	r2,-12(fp)
    db98:	10800817 	ldw	r2,32(r2)
    db9c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dba0:	e0bffc17 	ldw	r2,-16(fp)
    dba4:	10800104 	addi	r2,r2,4
    dba8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    dbac:	e0bffb17 	ldw	r2,-20(fp)
    dbb0:	1080800c 	andi	r2,r2,512
    dbb4:	103fbf26 	beq	r2,zero,dab4 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    dbb8:	e0bffb17 	ldw	r2,-20(fp)
    dbbc:	1004d43a 	srli	r2,r2,16
    dbc0:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    dbc4:	00001306 	br	dc14 <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    dbc8:	e0bffc17 	ldw	r2,-16(fp)
    dbcc:	e0fffd17 	ldw	r3,-12(fp)
    dbd0:	18c00d17 	ldw	r3,52(r3)
    dbd4:	e13ffd17 	ldw	r4,-12(fp)
    dbd8:	20c7883a 	add	r3,r4,r3
    dbdc:	18c20e03 	ldbu	r3,2104(r3)
    dbe0:	18c03fcc 	andi	r3,r3,255
    dbe4:	18c0201c 	xori	r3,r3,128
    dbe8:	18ffe004 	addi	r3,r3,-128
    dbec:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dbf0:	e0bffd17 	ldw	r2,-12(fp)
    dbf4:	10800d17 	ldw	r2,52(r2)
    dbf8:	10800044 	addi	r2,r2,1
    dbfc:	10c1ffcc 	andi	r3,r2,2047
    dc00:	e0bffd17 	ldw	r2,-12(fp)
    dc04:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    dc08:	e0bffe17 	ldw	r2,-8(fp)
    dc0c:	10bfffc4 	addi	r2,r2,-1
    dc10:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
    dc14:	e0bffe17 	ldw	r2,-8(fp)
    dc18:	10000526 	beq	r2,zero,dc30 <altera_avalon_jtag_uart_irq+0x1a0>
    dc1c:	e0bffd17 	ldw	r2,-12(fp)
    dc20:	10c00d17 	ldw	r3,52(r2)
    dc24:	e0bffd17 	ldw	r2,-12(fp)
    dc28:	10800c17 	ldw	r2,48(r2)
    dc2c:	18bfe61e 	bne	r3,r2,dbc8 <altera_avalon_jtag_uart_irq+0x138>
      }

      if (space > 0)
    dc30:	e0bffe17 	ldw	r2,-8(fp)
    dc34:	103f9f26 	beq	r2,zero,dab4 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    dc38:	e0bffd17 	ldw	r2,-12(fp)
    dc3c:	10c00817 	ldw	r3,32(r2)
    dc40:	00bfff44 	movi	r2,-3
    dc44:	1886703a 	and	r3,r3,r2
    dc48:	e0bffd17 	ldw	r2,-12(fp)
    dc4c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    dc50:	e0bffd17 	ldw	r2,-12(fp)
    dc54:	10800017 	ldw	r2,0(r2)
    dc58:	10800104 	addi	r2,r2,4
    dc5c:	1007883a 	mov	r3,r2
    dc60:	e0bffd17 	ldw	r2,-12(fp)
    dc64:	10800817 	ldw	r2,32(r2)
    dc68:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dc6c:	e0bffc17 	ldw	r2,-16(fp)
    dc70:	10800104 	addi	r2,r2,4
    dc74:	10800037 	ldwio	r2,0(r2)
  {
    dc78:	003f8e06 	br	dab4 <altera_avalon_jtag_uart_irq+0x24>
      break;
    dc7c:	0001883a 	nop
      }
    }
  }
}
    dc80:	0001883a 	nop
    dc84:	e037883a 	mov	sp,fp
    dc88:	df000017 	ldw	fp,0(sp)
    dc8c:	dec00104 	addi	sp,sp,4
    dc90:	f800283a 	ret

0000dc94 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    dc94:	defffc04 	addi	sp,sp,-16
    dc98:	df000315 	stw	fp,12(sp)
    dc9c:	df000304 	addi	fp,sp,12
    dca0:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    dca4:	e0bffd17 	ldw	r2,-12(fp)
    dca8:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    dcac:	e0bfff17 	ldw	r2,-4(fp)
    dcb0:	10800017 	ldw	r2,0(r2)
    dcb4:	10800104 	addi	r2,r2,4
    dcb8:	10800037 	ldwio	r2,0(r2)
    dcbc:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    dcc0:	e0bffe17 	ldw	r2,-8(fp)
    dcc4:	1081000c 	andi	r2,r2,1024
    dcc8:	10000b26 	beq	r2,zero,dcf8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    dccc:	e0bfff17 	ldw	r2,-4(fp)
    dcd0:	10800017 	ldw	r2,0(r2)
    dcd4:	10800104 	addi	r2,r2,4
    dcd8:	1007883a 	mov	r3,r2
    dcdc:	e0bfff17 	ldw	r2,-4(fp)
    dce0:	10800817 	ldw	r2,32(r2)
    dce4:	10810014 	ori	r2,r2,1024
    dce8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    dcec:	e0bfff17 	ldw	r2,-4(fp)
    dcf0:	10000915 	stw	zero,36(r2)
    dcf4:	00000a06 	br	dd20 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    dcf8:	e0bfff17 	ldw	r2,-4(fp)
    dcfc:	10c00917 	ldw	r3,36(r2)
    dd00:	00a00034 	movhi	r2,32768
    dd04:	10bfff04 	addi	r2,r2,-4
    dd08:	10c00536 	bltu	r2,r3,dd20 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    dd0c:	e0bfff17 	ldw	r2,-4(fp)
    dd10:	10800917 	ldw	r2,36(r2)
    dd14:	10c00044 	addi	r3,r2,1
    dd18:	e0bfff17 	ldw	r2,-4(fp)
    dd1c:	10c00915 	stw	r3,36(r2)
    dd20:	d0a72717 	ldw	r2,-25444(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    dd24:	e037883a 	mov	sp,fp
    dd28:	df000017 	ldw	fp,0(sp)
    dd2c:	dec00104 	addi	sp,sp,4
    dd30:	f800283a 	ret

0000dd34 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    dd34:	defffd04 	addi	sp,sp,-12
    dd38:	df000215 	stw	fp,8(sp)
    dd3c:	df000204 	addi	fp,sp,8
    dd40:	e13fff15 	stw	r4,-4(fp)
    dd44:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dd48:	00000506 	br	dd60 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    dd4c:	e0bffe17 	ldw	r2,-8(fp)
    dd50:	1090000c 	andi	r2,r2,16384
    dd54:	10000226 	beq	r2,zero,dd60 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    dd58:	00bffd44 	movi	r2,-11
    dd5c:	00000b06 	br	dd8c <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dd60:	e0bfff17 	ldw	r2,-4(fp)
    dd64:	10c00d17 	ldw	r3,52(r2)
    dd68:	e0bfff17 	ldw	r2,-4(fp)
    dd6c:	10800c17 	ldw	r2,48(r2)
    dd70:	18800526 	beq	r3,r2,dd88 <altera_avalon_jtag_uart_close+0x54>
    dd74:	e0bfff17 	ldw	r2,-4(fp)
    dd78:	10c00917 	ldw	r3,36(r2)
    dd7c:	e0bfff17 	ldw	r2,-4(fp)
    dd80:	10800117 	ldw	r2,4(r2)
    dd84:	18bff136 	bltu	r3,r2,dd4c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
    dd88:	0005883a 	mov	r2,zero
}
    dd8c:	e037883a 	mov	sp,fp
    dd90:	df000017 	ldw	fp,0(sp)
    dd94:	dec00104 	addi	sp,sp,4
    dd98:	f800283a 	ret

0000dd9c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    dd9c:	defffa04 	addi	sp,sp,-24
    dda0:	df000515 	stw	fp,20(sp)
    dda4:	df000504 	addi	fp,sp,20
    dda8:	e13ffd15 	stw	r4,-12(fp)
    ddac:	e17ffc15 	stw	r5,-16(fp)
    ddb0:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
    ddb4:	00bff9c4 	movi	r2,-25
    ddb8:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
    ddbc:	e0bffc17 	ldw	r2,-16(fp)
    ddc0:	109a8060 	cmpeqi	r2,r2,27137
    ddc4:	1000041e 	bne	r2,zero,ddd8 <altera_avalon_jtag_uart_ioctl+0x3c>
    ddc8:	e0bffc17 	ldw	r2,-16(fp)
    ddcc:	109a80a0 	cmpeqi	r2,r2,27138
    ddd0:	1000181e 	bne	r2,zero,de34 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
    ddd4:	00002906 	br	de7c <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    ddd8:	e0bffd17 	ldw	r2,-12(fp)
    dddc:	10c00117 	ldw	r3,4(r2)
    dde0:	00a00034 	movhi	r2,32768
    dde4:	10bfffc4 	addi	r2,r2,-1
    dde8:	18802126 	beq	r3,r2,de70 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
    ddec:	e0bffb17 	ldw	r2,-20(fp)
    ddf0:	10800017 	ldw	r2,0(r2)
    ddf4:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    ddf8:	e0bffe17 	ldw	r2,-8(fp)
    ddfc:	10800090 	cmplti	r2,r2,2
    de00:	1000061e 	bne	r2,zero,de1c <altera_avalon_jtag_uart_ioctl+0x80>
    de04:	e0fffe17 	ldw	r3,-8(fp)
    de08:	00a00034 	movhi	r2,32768
    de0c:	10bfffc4 	addi	r2,r2,-1
    de10:	18800226 	beq	r3,r2,de1c <altera_avalon_jtag_uart_ioctl+0x80>
    de14:	e0bffe17 	ldw	r2,-8(fp)
    de18:	00000206 	br	de24 <altera_avalon_jtag_uart_ioctl+0x88>
    de1c:	00a00034 	movhi	r2,32768
    de20:	10bfff84 	addi	r2,r2,-2
    de24:	e0fffd17 	ldw	r3,-12(fp)
    de28:	18800115 	stw	r2,4(r3)
      rc = 0;
    de2c:	e03fff15 	stw	zero,-4(fp)
    break;
    de30:	00000f06 	br	de70 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
    de34:	e0bffd17 	ldw	r2,-12(fp)
    de38:	10c00117 	ldw	r3,4(r2)
    de3c:	00a00034 	movhi	r2,32768
    de40:	10bfffc4 	addi	r2,r2,-1
    de44:	18800c26 	beq	r3,r2,de78 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    de48:	e0bffd17 	ldw	r2,-12(fp)
    de4c:	10c00917 	ldw	r3,36(r2)
    de50:	e0bffd17 	ldw	r2,-12(fp)
    de54:	10800117 	ldw	r2,4(r2)
    de58:	1885803a 	cmpltu	r2,r3,r2
    de5c:	10c03fcc 	andi	r3,r2,255
    de60:	e0bffb17 	ldw	r2,-20(fp)
    de64:	10c00015 	stw	r3,0(r2)
      rc = 0;
    de68:	e03fff15 	stw	zero,-4(fp)
    break;
    de6c:	00000206 	br	de78 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
    de70:	0001883a 	nop
    de74:	00000106 	br	de7c <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
    de78:	0001883a 	nop
  }

  return rc;
    de7c:	e0bfff17 	ldw	r2,-4(fp)
}
    de80:	e037883a 	mov	sp,fp
    de84:	df000017 	ldw	fp,0(sp)
    de88:	dec00104 	addi	sp,sp,4
    de8c:	f800283a 	ret

0000de90 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    de90:	defff304 	addi	sp,sp,-52
    de94:	dfc00c15 	stw	ra,48(sp)
    de98:	df000b15 	stw	fp,44(sp)
    de9c:	df000b04 	addi	fp,sp,44
    dea0:	e13ff815 	stw	r4,-32(fp)
    dea4:	e17ff715 	stw	r5,-36(fp)
    dea8:	e1bff615 	stw	r6,-40(fp)
    deac:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
    deb0:	e0bff717 	ldw	r2,-36(fp)
    deb4:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    deb8:	00004706 	br	dfd8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    debc:	e0bff817 	ldw	r2,-32(fp)
    dec0:	10800a17 	ldw	r2,40(r2)
    dec4:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
    dec8:	e0bff817 	ldw	r2,-32(fp)
    decc:	10800b17 	ldw	r2,44(r2)
    ded0:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
    ded4:	e0fffd17 	ldw	r3,-12(fp)
    ded8:	e0bffc17 	ldw	r2,-16(fp)
    dedc:	18800536 	bltu	r3,r2,def4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    dee0:	e0fffd17 	ldw	r3,-12(fp)
    dee4:	e0bffc17 	ldw	r2,-16(fp)
    dee8:	1885c83a 	sub	r2,r3,r2
    deec:	e0bffe15 	stw	r2,-8(fp)
    def0:	00000406 	br	df04 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    def4:	00c20004 	movi	r3,2048
    def8:	e0bffc17 	ldw	r2,-16(fp)
    defc:	1885c83a 	sub	r2,r3,r2
    df00:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    df04:	e0bffe17 	ldw	r2,-8(fp)
    df08:	10001e26 	beq	r2,zero,df84 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    df0c:	e0fff617 	ldw	r3,-40(fp)
    df10:	e0bffe17 	ldw	r2,-8(fp)
    df14:	1880022e 	bgeu	r3,r2,df20 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    df18:	e0bff617 	ldw	r2,-40(fp)
    df1c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    df20:	e0bff817 	ldw	r2,-32(fp)
    df24:	10c00e04 	addi	r3,r2,56
    df28:	e0bffc17 	ldw	r2,-16(fp)
    df2c:	1885883a 	add	r2,r3,r2
    df30:	e1bffe17 	ldw	r6,-8(fp)
    df34:	100b883a 	mov	r5,r2
    df38:	e13fff17 	ldw	r4,-4(fp)
    df3c:	0005d2c0 	call	5d2c <memcpy>
      ptr   += n;
    df40:	e0ffff17 	ldw	r3,-4(fp)
    df44:	e0bffe17 	ldw	r2,-8(fp)
    df48:	1885883a 	add	r2,r3,r2
    df4c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
    df50:	e0fff617 	ldw	r3,-40(fp)
    df54:	e0bffe17 	ldw	r2,-8(fp)
    df58:	1885c83a 	sub	r2,r3,r2
    df5c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    df60:	e0fffc17 	ldw	r3,-16(fp)
    df64:	e0bffe17 	ldw	r2,-8(fp)
    df68:	1885883a 	add	r2,r3,r2
    df6c:	10c1ffcc 	andi	r3,r2,2047
    df70:	e0bff817 	ldw	r2,-32(fp)
    df74:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    df78:	e0bff617 	ldw	r2,-40(fp)
    df7c:	00bfcf16 	blt	zero,r2,debc <altera_avalon_jtag_uart_read+0x2c>
    df80:	00000106 	br	df88 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
    df84:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
    df88:	e0ffff17 	ldw	r3,-4(fp)
    df8c:	e0bff717 	ldw	r2,-36(fp)
    df90:	1880141e 	bne	r3,r2,dfe4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    df94:	e0bff517 	ldw	r2,-44(fp)
    df98:	1090000c 	andi	r2,r2,16384
    df9c:	1000131e 	bne	r2,zero,dfec <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    dfa0:	0001883a 	nop
    dfa4:	e0bff817 	ldw	r2,-32(fp)
    dfa8:	10800a17 	ldw	r2,40(r2)
    dfac:	e0fffd17 	ldw	r3,-12(fp)
    dfb0:	1880051e 	bne	r3,r2,dfc8 <altera_avalon_jtag_uart_read+0x138>
    dfb4:	e0bff817 	ldw	r2,-32(fp)
    dfb8:	10c00917 	ldw	r3,36(r2)
    dfbc:	e0bff817 	ldw	r2,-32(fp)
    dfc0:	10800117 	ldw	r2,4(r2)
    dfc4:	18bff736 	bltu	r3,r2,dfa4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    dfc8:	e0bff817 	ldw	r2,-32(fp)
    dfcc:	10800a17 	ldw	r2,40(r2)
    dfd0:	e0fffd17 	ldw	r3,-12(fp)
    dfd4:	18800726 	beq	r3,r2,dff4 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
    dfd8:	e0bff617 	ldw	r2,-40(fp)
    dfdc:	00bfb716 	blt	zero,r2,debc <altera_avalon_jtag_uart_read+0x2c>
    dfe0:	00000506 	br	dff8 <altera_avalon_jtag_uart_read+0x168>
      break;
    dfe4:	0001883a 	nop
    dfe8:	00000306 	br	dff8 <altera_avalon_jtag_uart_read+0x168>
      break;
    dfec:	0001883a 	nop
    dff0:	00000106 	br	dff8 <altera_avalon_jtag_uart_read+0x168>
      break;
    dff4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    dff8:	e0ffff17 	ldw	r3,-4(fp)
    dffc:	e0bff717 	ldw	r2,-36(fp)
    e000:	18801826 	beq	r3,r2,e064 <altera_avalon_jtag_uart_read+0x1d4>
  NIOS2_READ_STATUS (context);
    e004:	0005303a 	rdctl	r2,status
    e008:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e00c:	e0fff917 	ldw	r3,-28(fp)
    e010:	00bfff84 	movi	r2,-2
    e014:	1884703a 	and	r2,r3,r2
    e018:	1001703a 	wrctl	status,r2
  return context;
    e01c:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e020:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e024:	e0bff817 	ldw	r2,-32(fp)
    e028:	10800817 	ldw	r2,32(r2)
    e02c:	10c00054 	ori	r3,r2,1
    e030:	e0bff817 	ldw	r2,-32(fp)
    e034:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e038:	e0bff817 	ldw	r2,-32(fp)
    e03c:	10800017 	ldw	r2,0(r2)
    e040:	10800104 	addi	r2,r2,4
    e044:	1007883a 	mov	r3,r2
    e048:	e0bff817 	ldw	r2,-32(fp)
    e04c:	10800817 	ldw	r2,32(r2)
    e050:	18800035 	stwio	r2,0(r3)
    e054:	e0bffb17 	ldw	r2,-20(fp)
    e058:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e05c:	e0bffa17 	ldw	r2,-24(fp)
    e060:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e064:	e0ffff17 	ldw	r3,-4(fp)
    e068:	e0bff717 	ldw	r2,-36(fp)
    e06c:	18800426 	beq	r3,r2,e080 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e070:	e0ffff17 	ldw	r3,-4(fp)
    e074:	e0bff717 	ldw	r2,-36(fp)
    e078:	1885c83a 	sub	r2,r3,r2
    e07c:	00000606 	br	e098 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e080:	e0bff517 	ldw	r2,-44(fp)
    e084:	1090000c 	andi	r2,r2,16384
    e088:	10000226 	beq	r2,zero,e094 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e08c:	00bffd44 	movi	r2,-11
    e090:	00000106 	br	e098 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e094:	00bffec4 	movi	r2,-5
}
    e098:	e037883a 	mov	sp,fp
    e09c:	dfc00117 	ldw	ra,4(sp)
    e0a0:	df000017 	ldw	fp,0(sp)
    e0a4:	dec00204 	addi	sp,sp,8
    e0a8:	f800283a 	ret

0000e0ac <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e0ac:	defff304 	addi	sp,sp,-52
    e0b0:	dfc00c15 	stw	ra,48(sp)
    e0b4:	df000b15 	stw	fp,44(sp)
    e0b8:	df000b04 	addi	fp,sp,44
    e0bc:	e13ff815 	stw	r4,-32(fp)
    e0c0:	e17ff715 	stw	r5,-36(fp)
    e0c4:	e1bff615 	stw	r6,-40(fp)
    e0c8:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e0cc:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e0d0:	e0bff717 	ldw	r2,-36(fp)
    e0d4:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e0d8:	00003706 	br	e1b8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e0dc:	e0bff817 	ldw	r2,-32(fp)
    e0e0:	10800c17 	ldw	r2,48(r2)
    e0e4:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
    e0e8:	e0bff817 	ldw	r2,-32(fp)
    e0ec:	10800d17 	ldw	r2,52(r2)
    e0f0:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
    e0f4:	e0fffc17 	ldw	r3,-16(fp)
    e0f8:	e0bfff17 	ldw	r2,-4(fp)
    e0fc:	1880062e 	bgeu	r3,r2,e118 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e100:	e0ffff17 	ldw	r3,-4(fp)
    e104:	e0bffc17 	ldw	r2,-16(fp)
    e108:	1885c83a 	sub	r2,r3,r2
    e10c:	10bfffc4 	addi	r2,r2,-1
    e110:	e0bffe15 	stw	r2,-8(fp)
    e114:	00000b06 	br	e144 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e118:	e0bfff17 	ldw	r2,-4(fp)
    e11c:	10000526 	beq	r2,zero,e134 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e120:	00c20004 	movi	r3,2048
    e124:	e0bffc17 	ldw	r2,-16(fp)
    e128:	1885c83a 	sub	r2,r3,r2
    e12c:	e0bffe15 	stw	r2,-8(fp)
    e130:	00000406 	br	e144 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e134:	00c1ffc4 	movi	r3,2047
    e138:	e0bffc17 	ldw	r2,-16(fp)
    e13c:	1885c83a 	sub	r2,r3,r2
    e140:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    e144:	e0bffe17 	ldw	r2,-8(fp)
    e148:	10001e26 	beq	r2,zero,e1c4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e14c:	e0fff617 	ldw	r3,-40(fp)
    e150:	e0bffe17 	ldw	r2,-8(fp)
    e154:	1880022e 	bgeu	r3,r2,e160 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e158:	e0bff617 	ldw	r2,-40(fp)
    e15c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e160:	e0bff817 	ldw	r2,-32(fp)
    e164:	10c20e04 	addi	r3,r2,2104
    e168:	e0bffc17 	ldw	r2,-16(fp)
    e16c:	1885883a 	add	r2,r3,r2
    e170:	e1bffe17 	ldw	r6,-8(fp)
    e174:	e17ff717 	ldw	r5,-36(fp)
    e178:	1009883a 	mov	r4,r2
    e17c:	0005d2c0 	call	5d2c <memcpy>
      ptr   += n;
    e180:	e0fff717 	ldw	r3,-36(fp)
    e184:	e0bffe17 	ldw	r2,-8(fp)
    e188:	1885883a 	add	r2,r3,r2
    e18c:	e0bff715 	stw	r2,-36(fp)
      count -= n;
    e190:	e0fff617 	ldw	r3,-40(fp)
    e194:	e0bffe17 	ldw	r2,-8(fp)
    e198:	1885c83a 	sub	r2,r3,r2
    e19c:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e1a0:	e0fffc17 	ldw	r3,-16(fp)
    e1a4:	e0bffe17 	ldw	r2,-8(fp)
    e1a8:	1885883a 	add	r2,r3,r2
    e1ac:	10c1ffcc 	andi	r3,r2,2047
    e1b0:	e0bff817 	ldw	r2,-32(fp)
    e1b4:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
    e1b8:	e0bff617 	ldw	r2,-40(fp)
    e1bc:	00bfc716 	blt	zero,r2,e0dc <altera_avalon_jtag_uart_write+0x30>
    e1c0:	00000106 	br	e1c8 <altera_avalon_jtag_uart_write+0x11c>
        break;
    e1c4:	0001883a 	nop
  NIOS2_READ_STATUS (context);
    e1c8:	0005303a 	rdctl	r2,status
    e1cc:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e1d0:	e0fff917 	ldw	r3,-28(fp)
    e1d4:	00bfff84 	movi	r2,-2
    e1d8:	1884703a 	and	r2,r3,r2
    e1dc:	1001703a 	wrctl	status,r2
  return context;
    e1e0:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e1e4:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e1e8:	e0bff817 	ldw	r2,-32(fp)
    e1ec:	10800817 	ldw	r2,32(r2)
    e1f0:	10c00094 	ori	r3,r2,2
    e1f4:	e0bff817 	ldw	r2,-32(fp)
    e1f8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e1fc:	e0bff817 	ldw	r2,-32(fp)
    e200:	10800017 	ldw	r2,0(r2)
    e204:	10800104 	addi	r2,r2,4
    e208:	1007883a 	mov	r3,r2
    e20c:	e0bff817 	ldw	r2,-32(fp)
    e210:	10800817 	ldw	r2,32(r2)
    e214:	18800035 	stwio	r2,0(r3)
    e218:	e0bffb17 	ldw	r2,-20(fp)
    e21c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e220:	e0bffa17 	ldw	r2,-24(fp)
    e224:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e228:	e0bff617 	ldw	r2,-40(fp)
    e22c:	0080100e 	bge	zero,r2,e270 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e230:	e0bff517 	ldw	r2,-44(fp)
    e234:	1090000c 	andi	r2,r2,16384
    e238:	1000101e 	bne	r2,zero,e27c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e23c:	0001883a 	nop
    e240:	e0bff817 	ldw	r2,-32(fp)
    e244:	10800d17 	ldw	r2,52(r2)
    e248:	e0ffff17 	ldw	r3,-4(fp)
    e24c:	1880051e 	bne	r3,r2,e264 <altera_avalon_jtag_uart_write+0x1b8>
    e250:	e0bff817 	ldw	r2,-32(fp)
    e254:	10c00917 	ldw	r3,36(r2)
    e258:	e0bff817 	ldw	r2,-32(fp)
    e25c:	10800117 	ldw	r2,4(r2)
    e260:	18bff736 	bltu	r3,r2,e240 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e264:	e0bff817 	ldw	r2,-32(fp)
    e268:	10800917 	ldw	r2,36(r2)
    e26c:	1000051e 	bne	r2,zero,e284 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e270:	e0bff617 	ldw	r2,-40(fp)
    e274:	00bfd016 	blt	zero,r2,e1b8 <altera_avalon_jtag_uart_write+0x10c>
    e278:	00000306 	br	e288 <altera_avalon_jtag_uart_write+0x1dc>
        break;
    e27c:	0001883a 	nop
    e280:	00000106 	br	e288 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    e284:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e288:	e0fff717 	ldw	r3,-36(fp)
    e28c:	e0bffd17 	ldw	r2,-12(fp)
    e290:	18800426 	beq	r3,r2,e2a4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e294:	e0fff717 	ldw	r3,-36(fp)
    e298:	e0bffd17 	ldw	r2,-12(fp)
    e29c:	1885c83a 	sub	r2,r3,r2
    e2a0:	00000606 	br	e2bc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e2a4:	e0bff517 	ldw	r2,-44(fp)
    e2a8:	1090000c 	andi	r2,r2,16384
    e2ac:	10000226 	beq	r2,zero,e2b8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e2b0:	00bffd44 	movi	r2,-11
    e2b4:	00000106 	br	e2bc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e2b8:	00bffec4 	movi	r2,-5
}
    e2bc:	e037883a 	mov	sp,fp
    e2c0:	dfc00117 	ldw	ra,4(sp)
    e2c4:	df000017 	ldw	fp,0(sp)
    e2c8:	dec00204 	addi	sp,sp,8
    e2cc:	f800283a 	ret

0000e2d0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e2d0:	defff504 	addi	sp,sp,-44
    e2d4:	df000a15 	stw	fp,40(sp)
    e2d8:	df000a04 	addi	fp,sp,40
    e2dc:	e13ff915 	stw	r4,-28(fp)
    e2e0:	e17ff815 	stw	r5,-32(fp)
    e2e4:	e1bff715 	stw	r6,-36(fp)
    e2e8:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e2ec:	e03fff15 	stw	zero,-4(fp)
    e2f0:	d0a72717 	ldw	r2,-25444(gp)
  
  if (alt_ticks_per_second ())
    e2f4:	10003c26 	beq	r2,zero,e3e8 <alt_alarm_start+0x118>
  {
    if (alarm)
    e2f8:	e0bff917 	ldw	r2,-28(fp)
    e2fc:	10003826 	beq	r2,zero,e3e0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    e300:	e0bff917 	ldw	r2,-28(fp)
    e304:	e0fff717 	ldw	r3,-36(fp)
    e308:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e30c:	e0bff917 	ldw	r2,-28(fp)
    e310:	e0fff617 	ldw	r3,-40(fp)
    e314:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
    e318:	0005303a 	rdctl	r2,status
    e31c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e320:	e0fffd17 	ldw	r3,-12(fp)
    e324:	00bfff84 	movi	r2,-2
    e328:	1884703a 	and	r2,r3,r2
    e32c:	1001703a 	wrctl	status,r2
  return context;
    e330:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
    e334:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e338:	d0a72817 	ldw	r2,-25440(gp)
      
      current_nticks = alt_nticks();
    e33c:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e340:	e0fff817 	ldw	r3,-32(fp)
    e344:	e0bfff17 	ldw	r2,-4(fp)
    e348:	1885883a 	add	r2,r3,r2
    e34c:	10c00044 	addi	r3,r2,1
    e350:	e0bff917 	ldw	r2,-28(fp)
    e354:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e358:	e0bff917 	ldw	r2,-28(fp)
    e35c:	10c00217 	ldw	r3,8(r2)
    e360:	e0bfff17 	ldw	r2,-4(fp)
    e364:	1880042e 	bgeu	r3,r2,e378 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    e368:	e0bff917 	ldw	r2,-28(fp)
    e36c:	00c00044 	movi	r3,1
    e370:	10c00405 	stb	r3,16(r2)
    e374:	00000206 	br	e380 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    e378:	e0bff917 	ldw	r2,-28(fp)
    e37c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e380:	e0bff917 	ldw	r2,-28(fp)
    e384:	d0e01104 	addi	r3,gp,-32700
    e388:	e0fffb15 	stw	r3,-20(fp)
    e38c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e390:	e0bffa17 	ldw	r2,-24(fp)
    e394:	e0fffb17 	ldw	r3,-20(fp)
    e398:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e39c:	e0bffb17 	ldw	r2,-20(fp)
    e3a0:	10c00017 	ldw	r3,0(r2)
    e3a4:	e0bffa17 	ldw	r2,-24(fp)
    e3a8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e3ac:	e0bffb17 	ldw	r2,-20(fp)
    e3b0:	10800017 	ldw	r2,0(r2)
    e3b4:	e0fffa17 	ldw	r3,-24(fp)
    e3b8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e3bc:	e0bffb17 	ldw	r2,-20(fp)
    e3c0:	e0fffa17 	ldw	r3,-24(fp)
    e3c4:	10c00015 	stw	r3,0(r2)
    e3c8:	e0bffe17 	ldw	r2,-8(fp)
    e3cc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    e3d0:	e0bffc17 	ldw	r2,-16(fp)
    e3d4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e3d8:	0005883a 	mov	r2,zero
    e3dc:	00000306 	br	e3ec <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    e3e0:	00bffa84 	movi	r2,-22
    e3e4:	00000106 	br	e3ec <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    e3e8:	00bfde84 	movi	r2,-134
  }
}
    e3ec:	e037883a 	mov	sp,fp
    e3f0:	df000017 	ldw	fp,0(sp)
    e3f4:	dec00104 	addi	sp,sp,4
    e3f8:	f800283a 	ret

0000e3fc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e3fc:	deffff04 	addi	sp,sp,-4
    e400:	df000015 	stw	fp,0(sp)
    e404:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e408:	0001883a 	nop
    e40c:	e037883a 	mov	sp,fp
    e410:	df000017 	ldw	fp,0(sp)
    e414:	dec00104 	addi	sp,sp,4
    e418:	f800283a 	ret

0000e41c <alt_get_errno>:
{
    e41c:	defffe04 	addi	sp,sp,-8
    e420:	dfc00115 	stw	ra,4(sp)
    e424:	df000015 	stw	fp,0(sp)
    e428:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e42c:	d0a00e17 	ldw	r2,-32712(gp)
    e430:	10000326 	beq	r2,zero,e440 <alt_get_errno+0x24>
    e434:	d0a00e17 	ldw	r2,-32712(gp)
    e438:	103ee83a 	callr	r2
    e43c:	00000106 	br	e444 <alt_get_errno+0x28>
    e440:	d0a72104 	addi	r2,gp,-25468
}
    e444:	e037883a 	mov	sp,fp
    e448:	dfc00117 	ldw	ra,4(sp)
    e44c:	df000017 	ldw	fp,0(sp)
    e450:	dec00204 	addi	sp,sp,8
    e454:	f800283a 	ret

0000e458 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e458:	defffa04 	addi	sp,sp,-24
    e45c:	dfc00515 	stw	ra,20(sp)
    e460:	df000415 	stw	fp,16(sp)
    e464:	df000404 	addi	fp,sp,16
    e468:	e13ffd15 	stw	r4,-12(fp)
    e46c:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e470:	e0bffd17 	ldw	r2,-12(fp)
    e474:	10000326 	beq	r2,zero,e484 <alt_dev_llist_insert+0x2c>
    e478:	e0bffd17 	ldw	r2,-12(fp)
    e47c:	10800217 	ldw	r2,8(r2)
    e480:	1000061e 	bne	r2,zero,e49c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e484:	000e41c0 	call	e41c <alt_get_errno>
    e488:	1007883a 	mov	r3,r2
    e48c:	00800584 	movi	r2,22
    e490:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e494:	00bffa84 	movi	r2,-22
    e498:	00001306 	br	e4e8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e49c:	e0bffd17 	ldw	r2,-12(fp)
    e4a0:	e0fffc17 	ldw	r3,-16(fp)
    e4a4:	e0ffff15 	stw	r3,-4(fp)
    e4a8:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
    e4ac:	e0bffe17 	ldw	r2,-8(fp)
    e4b0:	e0ffff17 	ldw	r3,-4(fp)
    e4b4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e4b8:	e0bfff17 	ldw	r2,-4(fp)
    e4bc:	10c00017 	ldw	r3,0(r2)
    e4c0:	e0bffe17 	ldw	r2,-8(fp)
    e4c4:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
    e4c8:	e0bfff17 	ldw	r2,-4(fp)
    e4cc:	10800017 	ldw	r2,0(r2)
    e4d0:	e0fffe17 	ldw	r3,-8(fp)
    e4d4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e4d8:	e0bfff17 	ldw	r2,-4(fp)
    e4dc:	e0fffe17 	ldw	r3,-8(fp)
    e4e0:	10c00015 	stw	r3,0(r2)

  return 0;  
    e4e4:	0005883a 	mov	r2,zero
}
    e4e8:	e037883a 	mov	sp,fp
    e4ec:	dfc00117 	ldw	ra,4(sp)
    e4f0:	df000017 	ldw	fp,0(sp)
    e4f4:	dec00204 	addi	sp,sp,8
    e4f8:	f800283a 	ret

0000e4fc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e4fc:	defffd04 	addi	sp,sp,-12
    e500:	dfc00215 	stw	ra,8(sp)
    e504:	df000115 	stw	fp,4(sp)
    e508:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e50c:	00800074 	movhi	r2,1
    e510:	10bce504 	addi	r2,r2,-3180
    e514:	e0bfff15 	stw	r2,-4(fp)
    e518:	00000606 	br	e534 <_do_ctors+0x38>
        (*ctor) (); 
    e51c:	e0bfff17 	ldw	r2,-4(fp)
    e520:	10800017 	ldw	r2,0(r2)
    e524:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e528:	e0bfff17 	ldw	r2,-4(fp)
    e52c:	10bfff04 	addi	r2,r2,-4
    e530:	e0bfff15 	stw	r2,-4(fp)
    e534:	e0ffff17 	ldw	r3,-4(fp)
    e538:	00800074 	movhi	r2,1
    e53c:	10bce604 	addi	r2,r2,-3176
    e540:	18bff62e 	bgeu	r3,r2,e51c <_do_ctors+0x20>
}
    e544:	0001883a 	nop
    e548:	e037883a 	mov	sp,fp
    e54c:	dfc00117 	ldw	ra,4(sp)
    e550:	df000017 	ldw	fp,0(sp)
    e554:	dec00204 	addi	sp,sp,8
    e558:	f800283a 	ret

0000e55c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    e55c:	defffd04 	addi	sp,sp,-12
    e560:	dfc00215 	stw	ra,8(sp)
    e564:	df000115 	stw	fp,4(sp)
    e568:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e56c:	00800074 	movhi	r2,1
    e570:	10bce504 	addi	r2,r2,-3180
    e574:	e0bfff15 	stw	r2,-4(fp)
    e578:	00000606 	br	e594 <_do_dtors+0x38>
        (*dtor) (); 
    e57c:	e0bfff17 	ldw	r2,-4(fp)
    e580:	10800017 	ldw	r2,0(r2)
    e584:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e588:	e0bfff17 	ldw	r2,-4(fp)
    e58c:	10bfff04 	addi	r2,r2,-4
    e590:	e0bfff15 	stw	r2,-4(fp)
    e594:	e0ffff17 	ldw	r3,-4(fp)
    e598:	00800074 	movhi	r2,1
    e59c:	10bce604 	addi	r2,r2,-3176
    e5a0:	18bff62e 	bgeu	r3,r2,e57c <_do_dtors+0x20>
}
    e5a4:	0001883a 	nop
    e5a8:	e037883a 	mov	sp,fp
    e5ac:	dfc00117 	ldw	ra,4(sp)
    e5b0:	df000017 	ldw	fp,0(sp)
    e5b4:	dec00204 	addi	sp,sp,8
    e5b8:	f800283a 	ret

0000e5bc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e5bc:	deffff04 	addi	sp,sp,-4
    e5c0:	df000015 	stw	fp,0(sp)
    e5c4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    e5c8:	0001883a 	nop
    e5cc:	e037883a 	mov	sp,fp
    e5d0:	df000017 	ldw	fp,0(sp)
    e5d4:	dec00104 	addi	sp,sp,4
    e5d8:	f800283a 	ret

0000e5dc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e5dc:	defff904 	addi	sp,sp,-28
    e5e0:	dfc00615 	stw	ra,24(sp)
    e5e4:	df000515 	stw	fp,20(sp)
    e5e8:	df000504 	addi	fp,sp,20
    e5ec:	e13fff15 	stw	r4,-4(fp)
    e5f0:	e17ffe15 	stw	r5,-8(fp)
    e5f4:	e1bffd15 	stw	r6,-12(fp)
    e5f8:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e5fc:	e0800217 	ldw	r2,8(fp)
    e600:	d8800015 	stw	r2,0(sp)
    e604:	e1fffc17 	ldw	r7,-16(fp)
    e608:	e1bffd17 	ldw	r6,-12(fp)
    e60c:	e17ffe17 	ldw	r5,-8(fp)
    e610:	e13fff17 	ldw	r4,-4(fp)
    e614:	000e78c0 	call	e78c <alt_iic_isr_register>
}  
    e618:	e037883a 	mov	sp,fp
    e61c:	dfc00117 	ldw	ra,4(sp)
    e620:	df000017 	ldw	fp,0(sp)
    e624:	dec00204 	addi	sp,sp,8
    e628:	f800283a 	ret

0000e62c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    e62c:	defff904 	addi	sp,sp,-28
    e630:	df000615 	stw	fp,24(sp)
    e634:	df000604 	addi	fp,sp,24
    e638:	e13ffb15 	stw	r4,-20(fp)
    e63c:	e17ffa15 	stw	r5,-24(fp)
    e640:	e0bffa17 	ldw	r2,-24(fp)
    e644:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    e648:	0005303a 	rdctl	r2,status
    e64c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e650:	e0fffe17 	ldw	r3,-8(fp)
    e654:	00bfff84 	movi	r2,-2
    e658:	1884703a 	and	r2,r3,r2
    e65c:	1001703a 	wrctl	status,r2
  return context;
    e660:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e664:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
    e668:	00c00044 	movi	r3,1
    e66c:	e0bfff17 	ldw	r2,-4(fp)
    e670:	1884983a 	sll	r2,r3,r2
    e674:	1007883a 	mov	r3,r2
    e678:	d0a72617 	ldw	r2,-25448(gp)
    e67c:	1884b03a 	or	r2,r3,r2
    e680:	d0a72615 	stw	r2,-25448(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e684:	d0a72617 	ldw	r2,-25448(gp)
    e688:	100170fa 	wrctl	ienable,r2
    e68c:	e0bffd17 	ldw	r2,-12(fp)
    e690:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    e694:	e0bffc17 	ldw	r2,-16(fp)
    e698:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e69c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    e6a0:	0001883a 	nop
}
    e6a4:	e037883a 	mov	sp,fp
    e6a8:	df000017 	ldw	fp,0(sp)
    e6ac:	dec00104 	addi	sp,sp,4
    e6b0:	f800283a 	ret

0000e6b4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    e6b4:	defff904 	addi	sp,sp,-28
    e6b8:	df000615 	stw	fp,24(sp)
    e6bc:	df000604 	addi	fp,sp,24
    e6c0:	e13ffb15 	stw	r4,-20(fp)
    e6c4:	e17ffa15 	stw	r5,-24(fp)
    e6c8:	e0bffa17 	ldw	r2,-24(fp)
    e6cc:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    e6d0:	0005303a 	rdctl	r2,status
    e6d4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e6d8:	e0fffe17 	ldw	r3,-8(fp)
    e6dc:	00bfff84 	movi	r2,-2
    e6e0:	1884703a 	and	r2,r3,r2
    e6e4:	1001703a 	wrctl	status,r2
  return context;
    e6e8:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
    e6ec:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
    e6f0:	00c00044 	movi	r3,1
    e6f4:	e0bfff17 	ldw	r2,-4(fp)
    e6f8:	1884983a 	sll	r2,r3,r2
    e6fc:	0084303a 	nor	r2,zero,r2
    e700:	1007883a 	mov	r3,r2
    e704:	d0a72617 	ldw	r2,-25448(gp)
    e708:	1884703a 	and	r2,r3,r2
    e70c:	d0a72615 	stw	r2,-25448(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e710:	d0a72617 	ldw	r2,-25448(gp)
    e714:	100170fa 	wrctl	ienable,r2
    e718:	e0bffd17 	ldw	r2,-12(fp)
    e71c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    e720:	e0bffc17 	ldw	r2,-16(fp)
    e724:	1001703a 	wrctl	status,r2
  return 0;
    e728:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    e72c:	0001883a 	nop
}
    e730:	e037883a 	mov	sp,fp
    e734:	df000017 	ldw	fp,0(sp)
    e738:	dec00104 	addi	sp,sp,4
    e73c:	f800283a 	ret

0000e740 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    e740:	defffc04 	addi	sp,sp,-16
    e744:	df000315 	stw	fp,12(sp)
    e748:	df000304 	addi	fp,sp,12
    e74c:	e13ffe15 	stw	r4,-8(fp)
    e750:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e754:	000530fa 	rdctl	r2,ienable
    e758:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    e75c:	00c00044 	movi	r3,1
    e760:	e0bffd17 	ldw	r2,-12(fp)
    e764:	1884983a 	sll	r2,r3,r2
    e768:	1007883a 	mov	r3,r2
    e76c:	e0bfff17 	ldw	r2,-4(fp)
    e770:	1884703a 	and	r2,r3,r2
    e774:	1004c03a 	cmpne	r2,r2,zero
    e778:	10803fcc 	andi	r2,r2,255
}
    e77c:	e037883a 	mov	sp,fp
    e780:	df000017 	ldw	fp,0(sp)
    e784:	dec00104 	addi	sp,sp,4
    e788:	f800283a 	ret

0000e78c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e78c:	defff504 	addi	sp,sp,-44
    e790:	dfc00a15 	stw	ra,40(sp)
    e794:	df000915 	stw	fp,36(sp)
    e798:	df000904 	addi	fp,sp,36
    e79c:	e13ffa15 	stw	r4,-24(fp)
    e7a0:	e17ff915 	stw	r5,-28(fp)
    e7a4:	e1bff815 	stw	r6,-32(fp)
    e7a8:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
    e7ac:	00bffa84 	movi	r2,-22
    e7b0:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    e7b4:	e0bff917 	ldw	r2,-28(fp)
    e7b8:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e7bc:	e0bffe17 	ldw	r2,-8(fp)
    e7c0:	10800808 	cmpgei	r2,r2,32
    e7c4:	1000241e 	bne	r2,zero,e858 <alt_iic_isr_register+0xcc>
  NIOS2_READ_STATUS (context);
    e7c8:	0005303a 	rdctl	r2,status
    e7cc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e7d0:	e0fffc17 	ldw	r3,-16(fp)
    e7d4:	00bfff84 	movi	r2,-2
    e7d8:	1884703a 	and	r2,r3,r2
    e7dc:	1001703a 	wrctl	status,r2
  return context;
    e7e0:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    e7e4:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
    e7e8:	e0bffe17 	ldw	r2,-8(fp)
    e7ec:	100890fa 	slli	r4,r2,3
    e7f0:	e0fff817 	ldw	r3,-32(fp)
    e7f4:	00800074 	movhi	r2,1
    e7f8:	2085883a 	add	r2,r4,r2
    e7fc:	10cc8815 	stw	r3,12832(r2)
    alt_irq[id].context = isr_context;
    e800:	e0bffe17 	ldw	r2,-8(fp)
    e804:	100890fa 	slli	r4,r2,3
    e808:	e0fff717 	ldw	r3,-36(fp)
    e80c:	00800074 	movhi	r2,1
    e810:	2085883a 	add	r2,r4,r2
    e814:	10cc8915 	stw	r3,12836(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    e818:	e0bff817 	ldw	r2,-32(fp)
    e81c:	10000526 	beq	r2,zero,e834 <alt_iic_isr_register+0xa8>
    e820:	e0bffe17 	ldw	r2,-8(fp)
    e824:	100b883a 	mov	r5,r2
    e828:	e13ffa17 	ldw	r4,-24(fp)
    e82c:	000e62c0 	call	e62c <alt_ic_irq_enable>
    e830:	00000406 	br	e844 <alt_iic_isr_register+0xb8>
    e834:	e0bffe17 	ldw	r2,-8(fp)
    e838:	100b883a 	mov	r5,r2
    e83c:	e13ffa17 	ldw	r4,-24(fp)
    e840:	000e6b40 	call	e6b4 <alt_ic_irq_disable>
    e844:	e0bfff15 	stw	r2,-4(fp)
    e848:	e0bffd17 	ldw	r2,-12(fp)
    e84c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
    e850:	e0bffb17 	ldw	r2,-20(fp)
    e854:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    e858:	e0bfff17 	ldw	r2,-4(fp)
}
    e85c:	e037883a 	mov	sp,fp
    e860:	dfc00117 	ldw	ra,4(sp)
    e864:	df000017 	ldw	fp,0(sp)
    e868:	dec00204 	addi	sp,sp,8
    e86c:	f800283a 	ret

0000e870 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e870:	defff904 	addi	sp,sp,-28
    e874:	dfc00615 	stw	ra,24(sp)
    e878:	df000515 	stw	fp,20(sp)
    e87c:	df000504 	addi	fp,sp,20
    e880:	e13ffe15 	stw	r4,-8(fp)
    e884:	e17ffd15 	stw	r5,-12(fp)
    e888:	e1bffc15 	stw	r6,-16(fp)
    e88c:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
    e890:	e1bffb17 	ldw	r6,-20(fp)
    e894:	e17ffc17 	ldw	r5,-16(fp)
    e898:	e13ffd17 	ldw	r4,-12(fp)
    e89c:	000ead80 	call	ead8 <open>
    e8a0:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
    e8a4:	e0bfff17 	ldw	r2,-4(fp)
    e8a8:	10002016 	blt	r2,zero,e92c <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
    e8ac:	e0ffff17 	ldw	r3,-4(fp)
    e8b0:	1805883a 	mov	r2,r3
    e8b4:	1085883a 	add	r2,r2,r2
    e8b8:	10c5883a 	add	r2,r2,r3
    e8bc:	100490ba 	slli	r2,r2,2
    e8c0:	00c00074 	movhi	r3,1
    e8c4:	10c7883a 	add	r3,r2,r3
    e8c8:	18c0dc17 	ldw	r3,880(r3)
    e8cc:	e0bffe17 	ldw	r2,-8(fp)
    e8d0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    e8d4:	e0ffff17 	ldw	r3,-4(fp)
    e8d8:	1805883a 	mov	r2,r3
    e8dc:	1085883a 	add	r2,r2,r2
    e8e0:	10c5883a 	add	r2,r2,r3
    e8e4:	100490ba 	slli	r2,r2,2
    e8e8:	00c00074 	movhi	r3,1
    e8ec:	10c7883a 	add	r3,r2,r3
    e8f0:	18c0dd17 	ldw	r3,884(r3)
    e8f4:	e0bffe17 	ldw	r2,-8(fp)
    e8f8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    e8fc:	e0ffff17 	ldw	r3,-4(fp)
    e900:	1805883a 	mov	r2,r3
    e904:	1085883a 	add	r2,r2,r2
    e908:	10c5883a 	add	r2,r2,r3
    e90c:	100490ba 	slli	r2,r2,2
    e910:	00c00074 	movhi	r3,1
    e914:	10c7883a 	add	r3,r2,r3
    e918:	18c0de17 	ldw	r3,888(r3)
    e91c:	e0bffe17 	ldw	r2,-8(fp)
    e920:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    e924:	e13fff17 	ldw	r4,-4(fp)
    e928:	000d5580 	call	d558 <alt_release_fd>
  }
} 
    e92c:	0001883a 	nop
    e930:	e037883a 	mov	sp,fp
    e934:	dfc00117 	ldw	ra,4(sp)
    e938:	df000017 	ldw	fp,0(sp)
    e93c:	dec00204 	addi	sp,sp,8
    e940:	f800283a 	ret

0000e944 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    e944:	defffb04 	addi	sp,sp,-20
    e948:	dfc00415 	stw	ra,16(sp)
    e94c:	df000315 	stw	fp,12(sp)
    e950:	df000304 	addi	fp,sp,12
    e954:	e13fff15 	stw	r4,-4(fp)
    e958:	e17ffe15 	stw	r5,-8(fp)
    e95c:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    e960:	01c07fc4 	movi	r7,511
    e964:	01800044 	movi	r6,1
    e968:	e17fff17 	ldw	r5,-4(fp)
    e96c:	01000074 	movhi	r4,1
    e970:	2100df04 	addi	r4,r4,892
    e974:	000e8700 	call	e870 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    e978:	01c07fc4 	movi	r7,511
    e97c:	000d883a 	mov	r6,zero
    e980:	e17ffe17 	ldw	r5,-8(fp)
    e984:	01000074 	movhi	r4,1
    e988:	2100dc04 	addi	r4,r4,880
    e98c:	000e8700 	call	e870 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    e990:	01c07fc4 	movi	r7,511
    e994:	01800044 	movi	r6,1
    e998:	e17ffd17 	ldw	r5,-12(fp)
    e99c:	01000074 	movhi	r4,1
    e9a0:	2100e204 	addi	r4,r4,904
    e9a4:	000e8700 	call	e870 <alt_open_fd>
}  
    e9a8:	0001883a 	nop
    e9ac:	e037883a 	mov	sp,fp
    e9b0:	dfc00117 	ldw	ra,4(sp)
    e9b4:	df000017 	ldw	fp,0(sp)
    e9b8:	dec00204 	addi	sp,sp,8
    e9bc:	f800283a 	ret

0000e9c0 <alt_get_errno>:
{
    e9c0:	defffe04 	addi	sp,sp,-8
    e9c4:	dfc00115 	stw	ra,4(sp)
    e9c8:	df000015 	stw	fp,0(sp)
    e9cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e9d0:	d0a00e17 	ldw	r2,-32712(gp)
    e9d4:	10000326 	beq	r2,zero,e9e4 <alt_get_errno+0x24>
    e9d8:	d0a00e17 	ldw	r2,-32712(gp)
    e9dc:	103ee83a 	callr	r2
    e9e0:	00000106 	br	e9e8 <alt_get_errno+0x28>
    e9e4:	d0a72104 	addi	r2,gp,-25468
}
    e9e8:	e037883a 	mov	sp,fp
    e9ec:	dfc00117 	ldw	ra,4(sp)
    e9f0:	df000017 	ldw	fp,0(sp)
    e9f4:	dec00204 	addi	sp,sp,8
    e9f8:	f800283a 	ret

0000e9fc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    e9fc:	defffd04 	addi	sp,sp,-12
    ea00:	df000215 	stw	fp,8(sp)
    ea04:	df000204 	addi	fp,sp,8
    ea08:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    ea0c:	e0bffe17 	ldw	r2,-8(fp)
    ea10:	10800217 	ldw	r2,8(r2)
    ea14:	10d00034 	orhi	r3,r2,16384
    ea18:	e0bffe17 	ldw	r2,-8(fp)
    ea1c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ea20:	e03fff15 	stw	zero,-4(fp)
    ea24:	00002306 	br	eab4 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ea28:	e0ffff17 	ldw	r3,-4(fp)
    ea2c:	1805883a 	mov	r2,r3
    ea30:	1085883a 	add	r2,r2,r2
    ea34:	10c5883a 	add	r2,r2,r3
    ea38:	100490ba 	slli	r2,r2,2
    ea3c:	00c00074 	movhi	r3,1
    ea40:	10c7883a 	add	r3,r2,r3
    ea44:	18c0dc17 	ldw	r3,880(r3)
    ea48:	e0bffe17 	ldw	r2,-8(fp)
    ea4c:	10800017 	ldw	r2,0(r2)
    ea50:	1880151e 	bne	r3,r2,eaa8 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ea54:	e0ffff17 	ldw	r3,-4(fp)
    ea58:	1805883a 	mov	r2,r3
    ea5c:	1085883a 	add	r2,r2,r2
    ea60:	10c5883a 	add	r2,r2,r3
    ea64:	100490ba 	slli	r2,r2,2
    ea68:	00c00074 	movhi	r3,1
    ea6c:	10c7883a 	add	r3,r2,r3
    ea70:	1880de17 	ldw	r2,888(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
    ea74:	10000c0e 	bge	r2,zero,eaa8 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
    ea78:	e0ffff17 	ldw	r3,-4(fp)
    ea7c:	1805883a 	mov	r2,r3
    ea80:	1085883a 	add	r2,r2,r2
    ea84:	10c5883a 	add	r2,r2,r3
    ea88:	100490ba 	slli	r2,r2,2
    ea8c:	00c00074 	movhi	r3,1
    ea90:	18c0dc04 	addi	r3,r3,880
    ea94:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ea98:	e0fffe17 	ldw	r3,-8(fp)
    ea9c:	18800226 	beq	r3,r2,eaa8 <alt_file_locked+0xac>
    {
      return -EACCES;
    eaa0:	00bffcc4 	movi	r2,-13
    eaa4:	00000806 	br	eac8 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
    eaa8:	e0bfff17 	ldw	r2,-4(fp)
    eaac:	10800044 	addi	r2,r2,1
    eab0:	e0bfff15 	stw	r2,-4(fp)
    eab4:	d0a00d17 	ldw	r2,-32716(gp)
    eab8:	1007883a 	mov	r3,r2
    eabc:	e0bfff17 	ldw	r2,-4(fp)
    eac0:	18bfd92e 	bgeu	r3,r2,ea28 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    eac4:	0005883a 	mov	r2,zero
}
    eac8:	e037883a 	mov	sp,fp
    eacc:	df000017 	ldw	fp,0(sp)
    ead0:	dec00104 	addi	sp,sp,4
    ead4:	f800283a 	ret

0000ead8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    ead8:	defff604 	addi	sp,sp,-40
    eadc:	dfc00915 	stw	ra,36(sp)
    eae0:	df000815 	stw	fp,32(sp)
    eae4:	df000804 	addi	fp,sp,32
    eae8:	e13ffa15 	stw	r4,-24(fp)
    eaec:	e17ff915 	stw	r5,-28(fp)
    eaf0:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    eaf4:	00bfffc4 	movi	r2,-1
    eaf8:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
    eafc:	00bffb44 	movi	r2,-19
    eb00:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
    eb04:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    eb08:	d1600b04 	addi	r5,gp,-32724
    eb0c:	e13ffa17 	ldw	r4,-24(fp)
    eb10:	000ee000 	call	ee00 <alt_find_dev>
    eb14:	e0bfff15 	stw	r2,-4(fp)
    eb18:	e0bfff17 	ldw	r2,-4(fp)
    eb1c:	1000051e 	bne	r2,zero,eb34 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    eb20:	e13ffa17 	ldw	r4,-24(fp)
    eb24:	000ee900 	call	ee90 <alt_find_file>
    eb28:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
    eb2c:	00800044 	movi	r2,1
    eb30:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    eb34:	e0bfff17 	ldw	r2,-4(fp)
    eb38:	10002c26 	beq	r2,zero,ebec <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    eb3c:	e13fff17 	ldw	r4,-4(fp)
    eb40:	000ef980 	call	ef98 <alt_get_fd>
    eb44:	e0bffe15 	stw	r2,-8(fp)
    eb48:	e0bffe17 	ldw	r2,-8(fp)
    eb4c:	1000030e 	bge	r2,zero,eb5c <open+0x84>
    {
      status = index;
    eb50:	e0bffe17 	ldw	r2,-8(fp)
    eb54:	e0bffd15 	stw	r2,-12(fp)
    eb58:	00002606 	br	ebf4 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    eb5c:	e0fffe17 	ldw	r3,-8(fp)
    eb60:	1805883a 	mov	r2,r3
    eb64:	1085883a 	add	r2,r2,r2
    eb68:	10c5883a 	add	r2,r2,r3
    eb6c:	100490ba 	slli	r2,r2,2
    eb70:	00c00074 	movhi	r3,1
    eb74:	18c0dc04 	addi	r3,r3,880
    eb78:	10c5883a 	add	r2,r2,r3
    eb7c:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    eb80:	e0fff917 	ldw	r3,-28(fp)
    eb84:	00900034 	movhi	r2,16384
    eb88:	10bfffc4 	addi	r2,r2,-1
    eb8c:	1886703a 	and	r3,r3,r2
    eb90:	e0bffb17 	ldw	r2,-20(fp)
    eb94:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    eb98:	e0bffc17 	ldw	r2,-16(fp)
    eb9c:	1000051e 	bne	r2,zero,ebb4 <open+0xdc>
    eba0:	e13ffb17 	ldw	r4,-20(fp)
    eba4:	000e9fc0 	call	e9fc <alt_file_locked>
    eba8:	e0bffd15 	stw	r2,-12(fp)
    ebac:	e0bffd17 	ldw	r2,-12(fp)
    ebb0:	10001016 	blt	r2,zero,ebf4 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    ebb4:	e0bfff17 	ldw	r2,-4(fp)
    ebb8:	10800317 	ldw	r2,12(r2)
    ebbc:	10000826 	beq	r2,zero,ebe0 <open+0x108>
    ebc0:	e0bfff17 	ldw	r2,-4(fp)
    ebc4:	10800317 	ldw	r2,12(r2)
    ebc8:	e1fff817 	ldw	r7,-32(fp)
    ebcc:	e1bff917 	ldw	r6,-28(fp)
    ebd0:	e17ffa17 	ldw	r5,-24(fp)
    ebd4:	e13ffb17 	ldw	r4,-20(fp)
    ebd8:	103ee83a 	callr	r2
    ebdc:	00000106 	br	ebe4 <open+0x10c>
    ebe0:	0005883a 	mov	r2,zero
    ebe4:	e0bffd15 	stw	r2,-12(fp)
    ebe8:	00000206 	br	ebf4 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    ebec:	00bffb44 	movi	r2,-19
    ebf0:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    ebf4:	e0bffd17 	ldw	r2,-12(fp)
    ebf8:	1000090e 	bge	r2,zero,ec20 <open+0x148>
  {
    alt_release_fd (index);  
    ebfc:	e13ffe17 	ldw	r4,-8(fp)
    ec00:	000d5580 	call	d558 <alt_release_fd>
    ALT_ERRNO = -status;
    ec04:	000e9c00 	call	e9c0 <alt_get_errno>
    ec08:	1007883a 	mov	r3,r2
    ec0c:	e0bffd17 	ldw	r2,-12(fp)
    ec10:	0085c83a 	sub	r2,zero,r2
    ec14:	18800015 	stw	r2,0(r3)
    return -1;
    ec18:	00bfffc4 	movi	r2,-1
    ec1c:	00000106 	br	ec24 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    ec20:	e0bffe17 	ldw	r2,-8(fp)
}
    ec24:	e037883a 	mov	sp,fp
    ec28:	dfc00117 	ldw	ra,4(sp)
    ec2c:	df000017 	ldw	fp,0(sp)
    ec30:	dec00204 	addi	sp,sp,8
    ec34:	f800283a 	ret

0000ec38 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    ec38:	defffa04 	addi	sp,sp,-24
    ec3c:	df000515 	stw	fp,20(sp)
    ec40:	df000504 	addi	fp,sp,20
    ec44:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
    ec48:	0005303a 	rdctl	r2,status
    ec4c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ec50:	e0fffc17 	ldw	r3,-16(fp)
    ec54:	00bfff84 	movi	r2,-2
    ec58:	1884703a 	and	r2,r3,r2
    ec5c:	1001703a 	wrctl	status,r2
  return context;
    ec60:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    ec64:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
    ec68:	e0bffb17 	ldw	r2,-20(fp)
    ec6c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    ec70:	e0bffd17 	ldw	r2,-12(fp)
    ec74:	10800017 	ldw	r2,0(r2)
    ec78:	e0fffd17 	ldw	r3,-12(fp)
    ec7c:	18c00117 	ldw	r3,4(r3)
    ec80:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    ec84:	e0bffd17 	ldw	r2,-12(fp)
    ec88:	10800117 	ldw	r2,4(r2)
    ec8c:	e0fffd17 	ldw	r3,-12(fp)
    ec90:	18c00017 	ldw	r3,0(r3)
    ec94:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    ec98:	e0bffd17 	ldw	r2,-12(fp)
    ec9c:	e0fffd17 	ldw	r3,-12(fp)
    eca0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    eca4:	e0bffd17 	ldw	r2,-12(fp)
    eca8:	e0fffd17 	ldw	r3,-12(fp)
    ecac:	10c00015 	stw	r3,0(r2)
    ecb0:	e0bfff17 	ldw	r2,-4(fp)
    ecb4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
    ecb8:	e0bffe17 	ldw	r2,-8(fp)
    ecbc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    ecc0:	0001883a 	nop
    ecc4:	e037883a 	mov	sp,fp
    ecc8:	df000017 	ldw	fp,0(sp)
    eccc:	dec00104 	addi	sp,sp,4
    ecd0:	f800283a 	ret

0000ecd4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    ecd4:	defffb04 	addi	sp,sp,-20
    ecd8:	dfc00415 	stw	ra,16(sp)
    ecdc:	df000315 	stw	fp,12(sp)
    ece0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    ece4:	d0a01117 	ldw	r2,-32700(gp)
    ece8:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    ecec:	d0a72817 	ldw	r2,-25440(gp)
    ecf0:	10800044 	addi	r2,r2,1
    ecf4:	d0a72815 	stw	r2,-25440(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ecf8:	00002e06 	br	edb4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    ecfc:	e0bfff17 	ldw	r2,-4(fp)
    ed00:	10800017 	ldw	r2,0(r2)
    ed04:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    ed08:	e0bfff17 	ldw	r2,-4(fp)
    ed0c:	10800403 	ldbu	r2,16(r2)
    ed10:	10803fcc 	andi	r2,r2,255
    ed14:	10000426 	beq	r2,zero,ed28 <alt_tick+0x54>
    ed18:	d0a72817 	ldw	r2,-25440(gp)
    ed1c:	1000021e 	bne	r2,zero,ed28 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    ed20:	e0bfff17 	ldw	r2,-4(fp)
    ed24:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    ed28:	e0bfff17 	ldw	r2,-4(fp)
    ed2c:	10800217 	ldw	r2,8(r2)
    ed30:	d0e72817 	ldw	r3,-25440(gp)
    ed34:	18801d36 	bltu	r3,r2,edac <alt_tick+0xd8>
    ed38:	e0bfff17 	ldw	r2,-4(fp)
    ed3c:	10800403 	ldbu	r2,16(r2)
    ed40:	10803fcc 	andi	r2,r2,255
    ed44:	1000191e 	bne	r2,zero,edac <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    ed48:	e0bfff17 	ldw	r2,-4(fp)
    ed4c:	10800317 	ldw	r2,12(r2)
    ed50:	e0ffff17 	ldw	r3,-4(fp)
    ed54:	18c00517 	ldw	r3,20(r3)
    ed58:	1809883a 	mov	r4,r3
    ed5c:	103ee83a 	callr	r2
    ed60:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    ed64:	e0bffd17 	ldw	r2,-12(fp)
    ed68:	1000031e 	bne	r2,zero,ed78 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    ed6c:	e13fff17 	ldw	r4,-4(fp)
    ed70:	000ec380 	call	ec38 <alt_alarm_stop>
    ed74:	00000d06 	br	edac <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    ed78:	e0bfff17 	ldw	r2,-4(fp)
    ed7c:	10c00217 	ldw	r3,8(r2)
    ed80:	e0bffd17 	ldw	r2,-12(fp)
    ed84:	1887883a 	add	r3,r3,r2
    ed88:	e0bfff17 	ldw	r2,-4(fp)
    ed8c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    ed90:	e0bfff17 	ldw	r2,-4(fp)
    ed94:	10c00217 	ldw	r3,8(r2)
    ed98:	d0a72817 	ldw	r2,-25440(gp)
    ed9c:	1880032e 	bgeu	r3,r2,edac <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    eda0:	e0bfff17 	ldw	r2,-4(fp)
    eda4:	00c00044 	movi	r3,1
    eda8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    edac:	e0bffe17 	ldw	r2,-8(fp)
    edb0:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
    edb4:	e0ffff17 	ldw	r3,-4(fp)
    edb8:	d0a01104 	addi	r2,gp,-32700
    edbc:	18bfcf1e 	bne	r3,r2,ecfc <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    edc0:	0001883a 	nop
}
    edc4:	0001883a 	nop
    edc8:	e037883a 	mov	sp,fp
    edcc:	dfc00117 	ldw	ra,4(sp)
    edd0:	df000017 	ldw	fp,0(sp)
    edd4:	dec00204 	addi	sp,sp,8
    edd8:	f800283a 	ret

0000eddc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    eddc:	deffff04 	addi	sp,sp,-4
    ede0:	df000015 	stw	fp,0(sp)
    ede4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    ede8:	000170fa 	wrctl	ienable,zero
}
    edec:	0001883a 	nop
    edf0:	e037883a 	mov	sp,fp
    edf4:	df000017 	ldw	fp,0(sp)
    edf8:	dec00104 	addi	sp,sp,4
    edfc:	f800283a 	ret

0000ee00 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    ee00:	defffa04 	addi	sp,sp,-24
    ee04:	dfc00515 	stw	ra,20(sp)
    ee08:	df000415 	stw	fp,16(sp)
    ee0c:	df000404 	addi	fp,sp,16
    ee10:	e13ffd15 	stw	r4,-12(fp)
    ee14:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
    ee18:	e0bffc17 	ldw	r2,-16(fp)
    ee1c:	10800017 	ldw	r2,0(r2)
    ee20:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    ee24:	e13ffd17 	ldw	r4,-12(fp)
    ee28:	00004c00 	call	4c0 <strlen>
    ee2c:	10800044 	addi	r2,r2,1
    ee30:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    ee34:	00000d06 	br	ee6c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    ee38:	e0bfff17 	ldw	r2,-4(fp)
    ee3c:	10800217 	ldw	r2,8(r2)
    ee40:	e0fffe17 	ldw	r3,-8(fp)
    ee44:	180d883a 	mov	r6,r3
    ee48:	e17ffd17 	ldw	r5,-12(fp)
    ee4c:	1009883a 	mov	r4,r2
    ee50:	000f1300 	call	f130 <memcmp>
    ee54:	1000021e 	bne	r2,zero,ee60 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    ee58:	e0bfff17 	ldw	r2,-4(fp)
    ee5c:	00000706 	br	ee7c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    ee60:	e0bfff17 	ldw	r2,-4(fp)
    ee64:	10800017 	ldw	r2,0(r2)
    ee68:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
    ee6c:	e0ffff17 	ldw	r3,-4(fp)
    ee70:	e0bffc17 	ldw	r2,-16(fp)
    ee74:	18bff01e 	bne	r3,r2,ee38 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
    ee78:	0005883a 	mov	r2,zero
}
    ee7c:	e037883a 	mov	sp,fp
    ee80:	dfc00117 	ldw	ra,4(sp)
    ee84:	df000017 	ldw	fp,0(sp)
    ee88:	dec00204 	addi	sp,sp,8
    ee8c:	f800283a 	ret

0000ee90 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    ee90:	defffb04 	addi	sp,sp,-20
    ee94:	dfc00415 	stw	ra,16(sp)
    ee98:	df000315 	stw	fp,12(sp)
    ee9c:	df000304 	addi	fp,sp,12
    eea0:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    eea4:	d0a00917 	ldw	r2,-32732(gp)
    eea8:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    eeac:	00003106 	br	ef74 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    eeb0:	e0bfff17 	ldw	r2,-4(fp)
    eeb4:	10800217 	ldw	r2,8(r2)
    eeb8:	1009883a 	mov	r4,r2
    eebc:	00004c00 	call	4c0 <strlen>
    eec0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    eec4:	e0bfff17 	ldw	r2,-4(fp)
    eec8:	10c00217 	ldw	r3,8(r2)
    eecc:	e0bffe17 	ldw	r2,-8(fp)
    eed0:	10bfffc4 	addi	r2,r2,-1
    eed4:	1885883a 	add	r2,r3,r2
    eed8:	10800003 	ldbu	r2,0(r2)
    eedc:	10803fcc 	andi	r2,r2,255
    eee0:	1080201c 	xori	r2,r2,128
    eee4:	10bfe004 	addi	r2,r2,-128
    eee8:	10800bd8 	cmpnei	r2,r2,47
    eeec:	1000031e 	bne	r2,zero,eefc <alt_find_file+0x6c>
    {
      len -= 1;
    eef0:	e0bffe17 	ldw	r2,-8(fp)
    eef4:	10bfffc4 	addi	r2,r2,-1
    eef8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    eefc:	e0bffe17 	ldw	r2,-8(fp)
    ef00:	e0fffd17 	ldw	r3,-12(fp)
    ef04:	1885883a 	add	r2,r3,r2
    ef08:	10800003 	ldbu	r2,0(r2)
    ef0c:	10803fcc 	andi	r2,r2,255
    ef10:	1080201c 	xori	r2,r2,128
    ef14:	10bfe004 	addi	r2,r2,-128
    ef18:	10800be0 	cmpeqi	r2,r2,47
    ef1c:	1000081e 	bne	r2,zero,ef40 <alt_find_file+0xb0>
    ef20:	e0bffe17 	ldw	r2,-8(fp)
    ef24:	e0fffd17 	ldw	r3,-12(fp)
    ef28:	1885883a 	add	r2,r3,r2
    ef2c:	10800003 	ldbu	r2,0(r2)
    ef30:	10803fcc 	andi	r2,r2,255
    ef34:	1080201c 	xori	r2,r2,128
    ef38:	10bfe004 	addi	r2,r2,-128
    ef3c:	10000a1e 	bne	r2,zero,ef68 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    ef40:	e0bfff17 	ldw	r2,-4(fp)
    ef44:	10800217 	ldw	r2,8(r2)
    ef48:	e0fffe17 	ldw	r3,-8(fp)
    ef4c:	180d883a 	mov	r6,r3
    ef50:	e17ffd17 	ldw	r5,-12(fp)
    ef54:	1009883a 	mov	r4,r2
    ef58:	000f1300 	call	f130 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
    ef5c:	1000021e 	bne	r2,zero,ef68 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
    ef60:	e0bfff17 	ldw	r2,-4(fp)
    ef64:	00000706 	br	ef84 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    ef68:	e0bfff17 	ldw	r2,-4(fp)
    ef6c:	10800017 	ldw	r2,0(r2)
    ef70:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
    ef74:	e0ffff17 	ldw	r3,-4(fp)
    ef78:	d0a00904 	addi	r2,gp,-32732
    ef7c:	18bfcc1e 	bne	r3,r2,eeb0 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
    ef80:	0005883a 	mov	r2,zero
}
    ef84:	e037883a 	mov	sp,fp
    ef88:	dfc00117 	ldw	ra,4(sp)
    ef8c:	df000017 	ldw	fp,0(sp)
    ef90:	dec00204 	addi	sp,sp,8
    ef94:	f800283a 	ret

0000ef98 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    ef98:	defffc04 	addi	sp,sp,-16
    ef9c:	df000315 	stw	fp,12(sp)
    efa0:	df000304 	addi	fp,sp,12
    efa4:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
    efa8:	00bffa04 	movi	r2,-24
    efac:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    efb0:	e03fff15 	stw	zero,-4(fp)
    efb4:	00001d06 	br	f02c <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
    efb8:	e0ffff17 	ldw	r3,-4(fp)
    efbc:	1805883a 	mov	r2,r3
    efc0:	1085883a 	add	r2,r2,r2
    efc4:	10c5883a 	add	r2,r2,r3
    efc8:	100490ba 	slli	r2,r2,2
    efcc:	00c00074 	movhi	r3,1
    efd0:	10c7883a 	add	r3,r2,r3
    efd4:	1880dc17 	ldw	r2,880(r3)
    efd8:	1000111e 	bne	r2,zero,f020 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
    efdc:	e0ffff17 	ldw	r3,-4(fp)
    efe0:	1805883a 	mov	r2,r3
    efe4:	1085883a 	add	r2,r2,r2
    efe8:	10c5883a 	add	r2,r2,r3
    efec:	100490ba 	slli	r2,r2,2
    eff0:	e13ffd17 	ldw	r4,-12(fp)
    eff4:	00c00074 	movhi	r3,1
    eff8:	10c7883a 	add	r3,r2,r3
    effc:	1900dc15 	stw	r4,880(r3)
      if (i > alt_max_fd)
    f000:	d0e00d17 	ldw	r3,-32716(gp)
    f004:	e0bfff17 	ldw	r2,-4(fp)
    f008:	1880020e 	bge	r3,r2,f014 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
    f00c:	e0bfff17 	ldw	r2,-4(fp)
    f010:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
    f014:	e0bfff17 	ldw	r2,-4(fp)
    f018:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
    f01c:	00000706 	br	f03c <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
    f020:	e0bfff17 	ldw	r2,-4(fp)
    f024:	10800044 	addi	r2,r2,1
    f028:	e0bfff15 	stw	r2,-4(fp)
    f02c:	e0bfff17 	ldw	r2,-4(fp)
    f030:	10800810 	cmplti	r2,r2,32
    f034:	103fe01e 	bne	r2,zero,efb8 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
    f038:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f03c:	e0bffe17 	ldw	r2,-8(fp)
}
    f040:	e037883a 	mov	sp,fp
    f044:	df000017 	ldw	fp,0(sp)
    f048:	dec00104 	addi	sp,sp,4
    f04c:	f800283a 	ret

0000f050 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f050:	defffe04 	addi	sp,sp,-8
    f054:	df000115 	stw	fp,4(sp)
    f058:	df000104 	addi	fp,sp,4
    f05c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f060:	e0bfff17 	ldw	r2,-4(fp)
    f064:	10bffe84 	addi	r2,r2,-6
    f068:	10c00428 	cmpgeui	r3,r2,16
    f06c:	1800191e 	bne	r3,zero,f0d4 <alt_exception_cause_generated_bad_addr+0x84>
    f070:	100690ba 	slli	r3,r2,2
    f074:	00800074 	movhi	r2,1
    f078:	1885883a 	add	r2,r3,r2
    f07c:	10bc2117 	ldw	r2,-3964(r2)
    f080:	1000683a 	jmp	r2
    f084:	0000f0c4 	movi	zero,963
    f088:	0000f0c4 	movi	zero,963
    f08c:	0000f0d4 	movui	zero,963
    f090:	0000f0d4 	movui	zero,963
    f094:	0000f0d4 	movui	zero,963
    f098:	0000f0c4 	movi	zero,963
    f09c:	0000f0cc 	andi	zero,zero,963
    f0a0:	0000f0d4 	movui	zero,963
    f0a4:	0000f0c4 	movi	zero,963
    f0a8:	0000f0c4 	movi	zero,963
    f0ac:	0000f0d4 	movui	zero,963
    f0b0:	0000f0c4 	movi	zero,963
    f0b4:	0000f0cc 	andi	zero,zero,963
    f0b8:	0000f0d4 	movui	zero,963
    f0bc:	0000f0d4 	movui	zero,963
    f0c0:	0000f0c4 	movi	zero,963
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f0c4:	00800044 	movi	r2,1
    f0c8:	00000306 	br	f0d8 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f0cc:	0005883a 	mov	r2,zero
    f0d0:	00000106 	br	f0d8 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
    f0d4:	0005883a 	mov	r2,zero
  }
}
    f0d8:	e037883a 	mov	sp,fp
    f0dc:	df000017 	ldw	fp,0(sp)
    f0e0:	dec00104 	addi	sp,sp,4
    f0e4:	f800283a 	ret

0000f0e8 <atexit>:
    f0e8:	200b883a 	mov	r5,r4
    f0ec:	000f883a 	mov	r7,zero
    f0f0:	000d883a 	mov	r6,zero
    f0f4:	0009883a 	mov	r4,zero
    f0f8:	000f1bc1 	jmpi	f1bc <__register_exitproc>

0000f0fc <exit>:
    f0fc:	defffe04 	addi	sp,sp,-8
    f100:	000b883a 	mov	r5,zero
    f104:	dc000015 	stw	r16,0(sp)
    f108:	dfc00115 	stw	ra,4(sp)
    f10c:	2021883a 	mov	r16,r4
    f110:	000f24c0 	call	f24c <__call_exitprocs>
    f114:	00800074 	movhi	r2,1
    f118:	11055917 	ldw	r4,5476(r2)
    f11c:	20800f17 	ldw	r2,60(r4)
    f120:	10000126 	beq	r2,zero,f128 <exit+0x2c>
    f124:	103ee83a 	callr	r2
    f128:	8009883a 	mov	r4,r16
    f12c:	000f3640 	call	f364 <_exit>

0000f130 <memcmp>:
    f130:	30800130 	cmpltui	r2,r6,4
    f134:	10000b1e 	bne	r2,zero,f164 <memcmp+0x34>
    f138:	2144b03a 	or	r2,r4,r5
    f13c:	108000cc 	andi	r2,r2,3
    f140:	10001a1e 	bne	r2,zero,f1ac <memcmp+0x7c>
    f144:	20c00017 	ldw	r3,0(r4)
    f148:	28800017 	ldw	r2,0(r5)
    f14c:	1880171e 	bne	r3,r2,f1ac <memcmp+0x7c>
    f150:	31bfff04 	addi	r6,r6,-4
    f154:	30800128 	cmpgeui	r2,r6,4
    f158:	21000104 	addi	r4,r4,4
    f15c:	29400104 	addi	r5,r5,4
    f160:	103ff81e 	bne	r2,zero,f144 <memcmp+0x14>
    f164:	30ffffc4 	addi	r3,r6,-1
    f168:	30000e26 	beq	r6,zero,f1a4 <memcmp+0x74>
    f16c:	29800003 	ldbu	r6,0(r5)
    f170:	20800003 	ldbu	r2,0(r4)
    f174:	30800f1e 	bne	r6,r2,f1b4 <memcmp+0x84>
    f178:	18800044 	addi	r2,r3,1
    f17c:	20c00044 	addi	r3,r4,1
    f180:	2089883a 	add	r4,r4,r2
    f184:	00000506 	br	f19c <memcmp+0x6c>
    f188:	18800003 	ldbu	r2,0(r3)
    f18c:	29800003 	ldbu	r6,0(r5)
    f190:	18c00044 	addi	r3,r3,1
    f194:	10803fcc 	andi	r2,r2,255
    f198:	1180061e 	bne	r2,r6,f1b4 <memcmp+0x84>
    f19c:	29400044 	addi	r5,r5,1
    f1a0:	193ff91e 	bne	r3,r4,f188 <memcmp+0x58>
    f1a4:	0005883a 	mov	r2,zero
    f1a8:	f800283a 	ret
    f1ac:	30ffffc4 	addi	r3,r6,-1
    f1b0:	003fee06 	br	f16c <memcmp+0x3c>
    f1b4:	1185c83a 	sub	r2,r2,r6
    f1b8:	f800283a 	ret

0000f1bc <__register_exitproc>:
    f1bc:	00800074 	movhi	r2,1
    f1c0:	10c55917 	ldw	r3,5476(r2)
    f1c4:	18805217 	ldw	r2,328(r3)
    f1c8:	10001726 	beq	r2,zero,f228 <__register_exitproc+0x6c>
    f1cc:	10c00117 	ldw	r3,4(r2)
    f1d0:	1a000808 	cmpgei	r8,r3,32
    f1d4:	40001b1e 	bne	r8,zero,f244 <__register_exitproc+0x88>
    f1d8:	20000b26 	beq	r4,zero,f208 <__register_exitproc+0x4c>
    f1dc:	181090ba 	slli	r8,r3,2
    f1e0:	02400044 	movi	r9,1
    f1e4:	48d2983a 	sll	r9,r9,r3
    f1e8:	1211883a 	add	r8,r2,r8
    f1ec:	41802215 	stw	r6,136(r8)
    f1f0:	11806217 	ldw	r6,392(r2)
    f1f4:	21000098 	cmpnei	r4,r4,2
    f1f8:	324cb03a 	or	r6,r6,r9
    f1fc:	11806215 	stw	r6,392(r2)
    f200:	41c04215 	stw	r7,264(r8)
    f204:	20000b26 	beq	r4,zero,f234 <__register_exitproc+0x78>
    f208:	19000084 	addi	r4,r3,2
    f20c:	200890ba 	slli	r4,r4,2
    f210:	18c00044 	addi	r3,r3,1
    f214:	10c00115 	stw	r3,4(r2)
    f218:	1105883a 	add	r2,r2,r4
    f21c:	11400015 	stw	r5,0(r2)
    f220:	0005883a 	mov	r2,zero
    f224:	f800283a 	ret
    f228:	18805304 	addi	r2,r3,332
    f22c:	18805215 	stw	r2,328(r3)
    f230:	003fe606 	br	f1cc <__register_exitproc+0x10>
    f234:	11006317 	ldw	r4,396(r2)
    f238:	2252b03a 	or	r9,r4,r9
    f23c:	12406315 	stw	r9,396(r2)
    f240:	003ff106 	br	f208 <__register_exitproc+0x4c>
    f244:	00bfffc4 	movi	r2,-1
    f248:	f800283a 	ret

0000f24c <__call_exitprocs>:
    f24c:	defff704 	addi	sp,sp,-36
    f250:	00800074 	movhi	r2,1
    f254:	ddc00715 	stw	r23,28(sp)
    f258:	15c55917 	ldw	r23,5476(r2)
    f25c:	dd400515 	stw	r21,20(sp)
    f260:	dd000415 	stw	r20,16(sp)
    f264:	dcc00315 	stw	r19,12(sp)
    f268:	dfc00815 	stw	ra,32(sp)
    f26c:	dd800615 	stw	r22,24(sp)
    f270:	dc800215 	stw	r18,8(sp)
    f274:	dc400115 	stw	r17,4(sp)
    f278:	dc000015 	stw	r16,0(sp)
    f27c:	2029883a 	mov	r20,r4
    f280:	282b883a 	mov	r21,r5
    f284:	04c00044 	movi	r19,1
    f288:	bc805217 	ldw	r18,328(r23)
    f28c:	90000d26 	beq	r18,zero,f2c4 <__call_exitprocs+0x78>
    f290:	94000117 	ldw	r16,4(r18)
    f294:	847fffc4 	addi	r17,r16,-1
    f298:	88000a16 	blt	r17,zero,f2c4 <__call_exitprocs+0x78>
    f29c:	84000044 	addi	r16,r16,1
    f2a0:	802090ba 	slli	r16,r16,2
    f2a4:	9421883a 	add	r16,r18,r16
    f2a8:	a8001126 	beq	r21,zero,f2f0 <__call_exitprocs+0xa4>
    f2ac:	80804017 	ldw	r2,256(r16)
    f2b0:	15400f26 	beq	r2,r21,f2f0 <__call_exitprocs+0xa4>
    f2b4:	8c7fffc4 	addi	r17,r17,-1
    f2b8:	88bfffd8 	cmpnei	r2,r17,-1
    f2bc:	843fff04 	addi	r16,r16,-4
    f2c0:	103ff91e 	bne	r2,zero,f2a8 <__call_exitprocs+0x5c>
    f2c4:	dfc00817 	ldw	ra,32(sp)
    f2c8:	ddc00717 	ldw	r23,28(sp)
    f2cc:	dd800617 	ldw	r22,24(sp)
    f2d0:	dd400517 	ldw	r21,20(sp)
    f2d4:	dd000417 	ldw	r20,16(sp)
    f2d8:	dcc00317 	ldw	r19,12(sp)
    f2dc:	dc800217 	ldw	r18,8(sp)
    f2e0:	dc400117 	ldw	r17,4(sp)
    f2e4:	dc000017 	ldw	r16,0(sp)
    f2e8:	dec00904 	addi	sp,sp,36
    f2ec:	f800283a 	ret
    f2f0:	90800117 	ldw	r2,4(r18)
    f2f4:	81800017 	ldw	r6,0(r16)
    f2f8:	10bfffc4 	addi	r2,r2,-1
    f2fc:	14401526 	beq	r2,r17,f354 <__call_exitprocs+0x108>
    f300:	80000015 	stw	zero,0(r16)
    f304:	303feb26 	beq	r6,zero,f2b4 <__call_exitprocs+0x68>
    f308:	9c46983a 	sll	r3,r19,r17
    f30c:	90806217 	ldw	r2,392(r18)
    f310:	95800117 	ldw	r22,4(r18)
    f314:	1884703a 	and	r2,r3,r2
    f318:	1000061e 	bne	r2,zero,f334 <__call_exitprocs+0xe8>
    f31c:	303ee83a 	callr	r6
    f320:	90800117 	ldw	r2,4(r18)
    f324:	15bfd81e 	bne	r2,r22,f288 <__call_exitprocs+0x3c>
    f328:	b8805217 	ldw	r2,328(r23)
    f32c:	14bfe126 	beq	r2,r18,f2b4 <__call_exitprocs+0x68>
    f330:	003fd506 	br	f288 <__call_exitprocs+0x3c>
    f334:	90806317 	ldw	r2,396(r18)
    f338:	81002017 	ldw	r4,128(r16)
    f33c:	1886703a 	and	r3,r3,r2
    f340:	1800061e 	bne	r3,zero,f35c <__call_exitprocs+0x110>
    f344:	200b883a 	mov	r5,r4
    f348:	a009883a 	mov	r4,r20
    f34c:	303ee83a 	callr	r6
    f350:	003ff306 	br	f320 <__call_exitprocs+0xd4>
    f354:	94400115 	stw	r17,4(r18)
    f358:	003fea06 	br	f304 <__call_exitprocs+0xb8>
    f35c:	303ee83a 	callr	r6
    f360:	003fef06 	br	f320 <__call_exitprocs+0xd4>

0000f364 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f364:	defffd04 	addi	sp,sp,-12
    f368:	df000215 	stw	fp,8(sp)
    f36c:	df000204 	addi	fp,sp,8
    f370:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f374:	0001883a 	nop
    f378:	e0bffe17 	ldw	r2,-8(fp)
    f37c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f380:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f384:	10000226 	beq	r2,zero,f390 <_exit+0x2c>
    ALT_SIM_FAIL();
    f388:	002af070 	cmpltui	zero,zero,43969
    f38c:	00000106 	br	f394 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f390:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f394:	003fff06 	br	f394 <_exit+0x30>
